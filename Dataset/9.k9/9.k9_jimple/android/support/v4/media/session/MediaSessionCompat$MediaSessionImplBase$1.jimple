android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1 extends android.support.v4.media.VolumeProviderCompat$Callback
final android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$0
    void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1 r0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1;

        $r1 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$0> = $r1;

        specialinvoke r0.<android.support.v4.media.VolumeProviderCompat$Callback: void <init>()>();

        return;
    }
    public void onVolumeChanged(android.support.v4.media.VolumeProviderCompat)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1 r0;
        android.support.v4.media.VolumeProviderCompat $r1, $r4;
        android.support.v4.media.session.ParcelableVolumeInfo r2;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r3;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1;

        $r1 := @parameter0: android.support.v4.media.VolumeProviderCompat;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$0>;

        $r4 = $r3.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

        if $r4 == $r1 goto label1;

        return;

     label1:
        r2 = new android.support.v4.media.session.ParcelableVolumeInfo;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$0>;

        $i0 = $r3.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType>;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$0>;

        $i1 = $r3.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;

        $i2 = virtualinvoke $r1.<android.support.v4.media.VolumeProviderCompat: int getVolumeControl()>();

        $i3 = virtualinvoke $r1.<android.support.v4.media.VolumeProviderCompat: int getMaxVolume()>();

        $i4 = virtualinvoke $r1.<android.support.v4.media.VolumeProviderCompat: int getCurrentVolume()>();

        specialinvoke r2.<android.support.v4.media.session.ParcelableVolumeInfo: void <init>(int,int,int,int,int)>($i0, $i1, $i2, $i3, $i4);

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$0>;

        virtualinvoke $r3.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)>(r2);

        return;
    }
