android.support.v4.print.PrintHelperKitkat extends java.lang.Object
public static final int COLOR_MODE_COLOR
public static final int COLOR_MODE_MONOCHROME
private static final java.lang.String LOG_TAG
private static final int MAX_PRINT_SIZE
public static final int ORIENTATION_LANDSCAPE
public static final int ORIENTATION_PORTRAIT
public static final int SCALE_MODE_FILL
public static final int SCALE_MODE_FIT
int mColorMode
final android.content.Context mContext
android.graphics.BitmapFactory$Options mDecodeOptions
protected boolean mIsMinMarginsHandlingCorrect
private final java.lang.Object mLock
int mOrientation
protected boolean mPrintActivityRespectsOrientation
int mScaleMode
    void <init>(android.content.Context)
    {
        android.support.v4.print.PrintHelperKitkat r0;
        android.content.Context $r1;
        java.lang.Object $r2;

        r0 := @this: android.support.v4.print.PrintHelperKitkat;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.v4.print.PrintHelperKitkat: android.graphics.BitmapFactory$Options mDecodeOptions> = null;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.support.v4.print.PrintHelperKitkat: java.lang.Object mLock> = $r2;

        r0.<android.support.v4.print.PrintHelperKitkat: int mScaleMode> = 2;

        r0.<android.support.v4.print.PrintHelperKitkat: int mColorMode> = 2;

        r0.<android.support.v4.print.PrintHelperKitkat: boolean mPrintActivityRespectsOrientation> = 1;

        r0.<android.support.v4.print.PrintHelperKitkat: boolean mIsMinMarginsHandlingCorrect> = 1;

        r0.<android.support.v4.print.PrintHelperKitkat: android.content.Context mContext> = $r1;

        return;
    }
    static void access$000(android.support.v4.print.PrintHelperKitkat, android.print.PrintAttributes, int, android.graphics.Bitmap, android.os.ParcelFileDescriptor, android.os.CancellationSignal, android.print.PrintDocumentAdapter$WriteResultCallback)
    {
        android.support.v4.print.PrintHelperKitkat $r0;
        android.print.PrintAttributes $r1;
        int $i0;
        android.graphics.Bitmap $r2;
        android.os.ParcelFileDescriptor $r3;
        android.os.CancellationSignal $r4;
        android.print.PrintDocumentAdapter$WriteResultCallback $r5;

        $r0 := @parameter0: android.support.v4.print.PrintHelperKitkat;

        $r1 := @parameter1: android.print.PrintAttributes;

        $i0 := @parameter2: int;

        $r2 := @parameter3: android.graphics.Bitmap;

        $r3 := @parameter4: android.os.ParcelFileDescriptor;

        $r4 := @parameter5: android.os.CancellationSignal;

        $r5 := @parameter6: android.print.PrintDocumentAdapter$WriteResultCallback;

        specialinvoke $r0.<android.support.v4.print.PrintHelperKitkat: void writeBitmap(android.print.PrintAttributes,int,android.graphics.Bitmap,android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)>($r1, $i0, $r2, $r3, $r4, $r5);

        return;
    }
    static android.graphics.Bitmap access$100(android.support.v4.print.PrintHelperKitkat, android.graphics.Bitmap, int)
    {
        android.support.v4.print.PrintHelperKitkat $r0;
        android.graphics.Bitmap $r1;
        int $i0;

        $r0 := @parameter0: android.support.v4.print.PrintHelperKitkat;

        $r1 := @parameter1: android.graphics.Bitmap;

        $i0 := @parameter2: int;

        $r1 = specialinvoke $r0.<android.support.v4.print.PrintHelperKitkat: android.graphics.Bitmap convertBitmapForColorMode(android.graphics.Bitmap,int)>($r1, $i0);

        return $r1;
    }
    static android.graphics.Matrix access$200(android.support.v4.print.PrintHelperKitkat, int, int, android.graphics.RectF, int)
    {
        android.support.v4.print.PrintHelperKitkat $r0;
        int $i0, $i1, $i2;
        android.graphics.RectF $r1;
        android.graphics.Matrix $r2;

        $r0 := @parameter0: android.support.v4.print.PrintHelperKitkat;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: android.graphics.RectF;

        $i2 := @parameter4: int;

        $r2 = specialinvoke $r0.<android.support.v4.print.PrintHelperKitkat: android.graphics.Matrix getMatrix(int,int,android.graphics.RectF,int)>($i0, $i1, $r1, $i2);

        return $r2;
    }
    static android.graphics.Bitmap access$400(android.support.v4.print.PrintHelperKitkat, android.net.Uri, int) throws java.io.FileNotFoundException
    {
        android.support.v4.print.PrintHelperKitkat $r0;
        android.net.Uri $r1;
        int $i0;
        android.graphics.Bitmap $r2;

        $r0 := @parameter0: android.support.v4.print.PrintHelperKitkat;

        $r1 := @parameter1: android.net.Uri;

        $i0 := @parameter2: int;

        $r2 = specialinvoke $r0.<android.support.v4.print.PrintHelperKitkat: android.graphics.Bitmap loadConstrainedBitmap(android.net.Uri,int)>($r1, $i0);

        return $r2;
    }
    static boolean access$600(android.graphics.Bitmap)
    {
        android.graphics.Bitmap $r0;
        boolean $z0;

        $r0 := @parameter0: android.graphics.Bitmap;

        $z0 = staticinvoke <android.support.v4.print.PrintHelperKitkat: boolean isPortrait(android.graphics.Bitmap)>($r0);

        return $z0;
    }
    static java.lang.Object access$700(android.support.v4.print.PrintHelperKitkat)
    {
        android.support.v4.print.PrintHelperKitkat $r0;
        java.lang.Object r1;

        $r0 := @parameter0: android.support.v4.print.PrintHelperKitkat;

        r1 = $r0.<android.support.v4.print.PrintHelperKitkat: java.lang.Object mLock>;

        return r1;
    }
    private android.graphics.Bitmap convertBitmapForColorMode(android.graphics.Bitmap, int)
    {
        android.support.v4.print.PrintHelperKitkat r0;
        int $i0, $i1;
        android.graphics.Canvas r1;
        android.graphics.ColorMatrix r2;
        android.graphics.ColorMatrixColorFilter r3;
        android.graphics.Paint r4;
        android.graphics.Bitmap$Config $r5;
        android.graphics.Bitmap r6, $r7;

        r0 := @this: android.support.v4.print.PrintHelperKitkat;

        r6 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        if $i0 == 1 goto label1;

        return r6;

     label1:
        $i0 = virtualinvoke r6.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke r6.<android.graphics.Bitmap: int getHeight()>();

        $r5 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r7 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r5);

        r1 = new android.graphics.Canvas;

        specialinvoke r1.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r7);

        r4 = new android.graphics.Paint;

        specialinvoke r4.<android.graphics.Paint: void <init>()>();

        r2 = new android.graphics.ColorMatrix;

        specialinvoke r2.<android.graphics.ColorMatrix: void <init>()>();

        virtualinvoke r2.<android.graphics.ColorMatrix: void setSaturation(float)>(0.0F);

        r3 = new android.graphics.ColorMatrixColorFilter;

        specialinvoke r3.<android.graphics.ColorMatrixColorFilter: void <init>(android.graphics.ColorMatrix)>(r2);

        virtualinvoke r4.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(r3);

        virtualinvoke r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>(r6, 0.0F, 0.0F, r4);

        virtualinvoke r1.<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>(null);

        return $r7;
    }
    private android.graphics.Matrix getMatrix(int, int, android.graphics.RectF, int)
    {
        android.support.v4.print.PrintHelperKitkat r0;
        int $i0, $i1, $i2;
        android.graphics.RectF $r1;
        android.graphics.Matrix r2;
        float f0, f1, $f2, $f3;

        r0 := @this: android.support.v4.print.PrintHelperKitkat;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.graphics.RectF;

        $i2 := @parameter3: int;

        r2 = new android.graphics.Matrix;

        specialinvoke r2.<android.graphics.Matrix: void <init>()>();

        f1 = virtualinvoke $r1.<android.graphics.RectF: float width()>();

        f0 = (float) $i0;

        f1 = f1 / f0;

        if $i2 != 2 goto label2;

        f0 = virtualinvoke $r1.<android.graphics.RectF: float height()>();

        $f2 = (float) $i1;

        f0 = f0 / $f2;

        f1 = staticinvoke <java.lang.Math: float max(float,float)>(f1, f0);

     label1:
        virtualinvoke r2.<android.graphics.Matrix: boolean postScale(float,float)>(f1, f1);

        f0 = virtualinvoke $r1.<android.graphics.RectF: float width()>();

        $f2 = (float) $i0;

        $f2 = $f2 * f1;

        f0 = f0 - $f2;

        f0 = f0 / 2.0F;

        $f2 = virtualinvoke $r1.<android.graphics.RectF: float height()>();

        $f3 = (float) $i1;

        f1 = $f3 * f1;

        f1 = $f2 - f1;

        f1 = f1 / 2.0F;

        virtualinvoke r2.<android.graphics.Matrix: boolean postTranslate(float,float)>(f0, f1);

        return r2;

     label2:
        f0 = virtualinvoke $r1.<android.graphics.RectF: float height()>();

        $f2 = (float) $i1;

        f0 = f0 / $f2;

        f1 = staticinvoke <java.lang.Math: float min(float,float)>(f1, f0);

        goto label1;
    }
    private static boolean isPortrait(android.graphics.Bitmap)
    {
        android.graphics.Bitmap $r0;
        int $i0, $i1;

        $r0 := @parameter0: android.graphics.Bitmap;

        $i0 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        if $i0 > $i1 goto label1;

        return 1;

     label1:
        return 0;
    }
    private android.graphics.Bitmap loadBitmap(android.net.Uri, android.graphics.BitmapFactory$Options) throws java.io.FileNotFoundException
    {
        android.support.v4.print.PrintHelperKitkat r0;
        android.net.Uri $r1;
        android.graphics.BitmapFactory$Options $r2;
        android.content.Context $r3;
        java.lang.IllegalArgumentException $r4;
        java.io.InputStream r5, $r7;
        android.content.ContentResolver $r6;
        android.graphics.Bitmap $r8;
        java.io.IOException r9, r11;
        java.lang.Throwable $r10;

        r0 := @this: android.support.v4.print.PrintHelperKitkat;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: android.graphics.BitmapFactory$Options;

        if $r1 == null goto label01;

        $r3 = r0.<android.support.v4.print.PrintHelperKitkat: android.content.Context mContext>;

        if $r3 != null goto label02;

     label01:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bad argument to loadBitmap");

        throw $r4;

     label02:
        r5 = null;

     label03:
        $r3 = r0.<android.support.v4.print.PrintHelperKitkat: android.content.Context mContext>;

        $r6 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r7 = virtualinvoke $r6.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>($r1);

     label04:
        r5 = $r7;

     label05:
        $r8 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>($r7, null, $r2);

     label06:
        if $r7 == null goto label14;

     label07:
        virtualinvoke $r7.<java.io.InputStream: void close()>();

     label08:
        return $r8;

     label09:
        r9 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PrintHelperKitkat", "close fail ", r9);

        return $r8;

     label10:
        $r10 := @caughtexception;

        if r5 == null goto label12;

     label11:
        virtualinvoke r5.<java.io.InputStream: void close()>();

     label12:
        throw $r10;

     label13:
        r11 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PrintHelperKitkat", "close fail ", r11);

        goto label12;

     label14:
        return $r8;

        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.io.IOException from label11 to label12 with label13;
    }
    private android.graphics.Bitmap loadConstrainedBitmap(android.net.Uri, int) throws java.io.FileNotFoundException
    {
        android.support.v4.print.PrintHelperKitkat r0;
        android.net.Uri $r1;
        int $i0, i1, i2, $i3, i4;
        android.graphics.BitmapFactory$Options r2;
        android.content.Context $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.Object $r5;
        android.graphics.Bitmap $r6;
        java.lang.Throwable $r7, $r8, $r9, $r10;

        r0 := @this: android.support.v4.print.PrintHelperKitkat;

        $r1 := @parameter0: android.net.Uri;

        $i0 := @parameter1: int;

        if $i0 <= 0 goto label01;

        if $r1 == null goto label01;

        $r3 = r0.<android.support.v4.print.PrintHelperKitkat: android.content.Context mContext>;

        if $r3 != null goto label02;

     label01:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bad argument to getScaledBitmap");

        throw $r4;

     label02:
        r2 = new android.graphics.BitmapFactory$Options;

        specialinvoke r2.<android.graphics.BitmapFactory$Options: void <init>()>();

        r2.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        specialinvoke r0.<android.support.v4.print.PrintHelperKitkat: android.graphics.Bitmap loadBitmap(android.net.Uri,android.graphics.BitmapFactory$Options)>($r1, r2);

        i2 = r2.<android.graphics.BitmapFactory$Options: int outWidth>;

        i1 = r2.<android.graphics.BitmapFactory$Options: int outHeight>;

        if i2 <= 0 goto label22;

        if i1 > 0 goto label03;

        return null;

     label03:
        i4 = staticinvoke <java.lang.Math: int max(int,int)>(i2, i1);

        $i3 = 1;

     label04:
        if i4 <= $i0 goto label05;

        i4 = i4 >>> 1;

        $i3 = $i3 << 1;

        goto label04;

     label05:
        if $i3 <= 0 goto label22;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>(i2, i1);

        $i0 = $i0 / $i3;

        if $i0 <= 0 goto label22;

        $r5 = r0.<android.support.v4.print.PrintHelperKitkat: java.lang.Object mLock>;

        entermonitor $r5;

     label06:
        r2 = new android.graphics.BitmapFactory$Options;

        specialinvoke r2.<android.graphics.BitmapFactory$Options: void <init>()>();

        r0.<android.support.v4.print.PrintHelperKitkat: android.graphics.BitmapFactory$Options mDecodeOptions> = r2;

        r2 = r0.<android.support.v4.print.PrintHelperKitkat: android.graphics.BitmapFactory$Options mDecodeOptions>;

        r2.<android.graphics.BitmapFactory$Options: boolean inMutable> = 1;

        r2 = r0.<android.support.v4.print.PrintHelperKitkat: android.graphics.BitmapFactory$Options mDecodeOptions>;

        r2.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i3;

        r2 = r0.<android.support.v4.print.PrintHelperKitkat: android.graphics.BitmapFactory$Options mDecodeOptions>;

        exitmonitor $r5;

     label07:
        $r6 = specialinvoke r0.<android.support.v4.print.PrintHelperKitkat: android.graphics.Bitmap loadBitmap(android.net.Uri,android.graphics.BitmapFactory$Options)>($r1, r2);

     label08:
        $r5 = r0.<android.support.v4.print.PrintHelperKitkat: java.lang.Object mLock>;

        entermonitor $r5;

     label09:
        r0.<android.support.v4.print.PrintHelperKitkat: android.graphics.BitmapFactory$Options mDecodeOptions> = null;

        exitmonitor $r5;

     label10:
        return $r6;

     label11:
        $r7 := @caughtexception;

        exitmonitor $r5;

     label12:
        throw $r7;

     label13:
        $r8 := @caughtexception;

     label14:
        exitmonitor $r5;

     label15:
        throw $r8;

     label16:
        $r9 := @caughtexception;

        $r5 = r0.<android.support.v4.print.PrintHelperKitkat: java.lang.Object mLock>;

        entermonitor $r5;

     label17:
        r0.<android.support.v4.print.PrintHelperKitkat: android.graphics.BitmapFactory$Options mDecodeOptions> = null;

        exitmonitor $r5;

     label18:
        throw $r9;

     label19:
        $r10 := @caughtexception;

     label20:
        exitmonitor $r5;

     label21:
        throw $r10;

     label22:
        return null;

        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }
    private void writeBitmap(android.print.PrintAttributes, int, android.graphics.Bitmap, android.os.ParcelFileDescriptor, android.os.CancellationSignal, android.print.PrintDocumentAdapter$WriteResultCallback)
    {
        android.support.v4.print.PrintHelperKitkat r0;
        android.print.PrintAttributes $r1, r6;
        int $i0;
        android.graphics.Bitmap $r2;
        android.os.ParcelFileDescriptor $r3;
        android.os.CancellationSignal $r4;
        android.print.PrintDocumentAdapter$WriteResultCallback $r5;
        boolean $z0;
        android.support.v4.print.PrintHelperKitkat$2 $r7;
        java.lang.Void[] $r8;
        android.print.PrintAttributes$Builder $r9;
        android.print.PrintAttributes$Margins $r10;

        r0 := @this: android.support.v4.print.PrintHelperKitkat;

        $r1 := @parameter0: android.print.PrintAttributes;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.graphics.Bitmap;

        $r3 := @parameter3: android.os.ParcelFileDescriptor;

        $r4 := @parameter4: android.os.CancellationSignal;

        $r5 := @parameter5: android.print.PrintDocumentAdapter$WriteResultCallback;

        $z0 = r0.<android.support.v4.print.PrintHelperKitkat: boolean mIsMinMarginsHandlingCorrect>;

        if $z0 == 0 goto label2;

        r6 = $r1;

     label1:
        $r7 = new android.support.v4.print.PrintHelperKitkat$2;

        specialinvoke $r7.<android.support.v4.print.PrintHelperKitkat$2: void <init>(android.support.v4.print.PrintHelperKitkat,android.os.CancellationSignal,android.print.PrintAttributes,android.graphics.Bitmap,android.print.PrintAttributes,int,android.os.ParcelFileDescriptor,android.print.PrintDocumentAdapter$WriteResultCallback)>(r0, $r4, r6, $r2, $r1, $i0, $r3, $r5);

        $r8 = newarray (java.lang.Void)[0];

        virtualinvoke $r7.<android.support.v4.print.PrintHelperKitkat$2: android.os.AsyncTask execute(java.lang.Object[])>($r8);

        return;

     label2:
        $r9 = virtualinvoke r0.<android.support.v4.print.PrintHelperKitkat: android.print.PrintAttributes$Builder copyAttributes(android.print.PrintAttributes)>($r1);

        $r10 = new android.print.PrintAttributes$Margins;

        specialinvoke $r10.<android.print.PrintAttributes$Margins: void <init>(int,int,int,int)>(0, 0, 0, 0);

        $r9 = virtualinvoke $r9.<android.print.PrintAttributes$Builder: android.print.PrintAttributes$Builder setMinMargins(android.print.PrintAttributes$Margins)>($r10);

        r6 = virtualinvoke $r9.<android.print.PrintAttributes$Builder: android.print.PrintAttributes build()>();

        goto label1;
    }
    protected android.print.PrintAttributes$Builder copyAttributes(android.print.PrintAttributes)
    {
        android.support.v4.print.PrintHelperKitkat r0;
        android.print.PrintAttributes $r1;
        android.print.PrintAttributes$Builder $r2;
        android.print.PrintAttributes$MediaSize $r3;
        android.print.PrintAttributes$Resolution $r4;
        android.print.PrintAttributes$Margins $r5;
        int $i0;

        r0 := @this: android.support.v4.print.PrintHelperKitkat;

        $r1 := @parameter0: android.print.PrintAttributes;

        $r2 = new android.print.PrintAttributes$Builder;

        specialinvoke $r2.<android.print.PrintAttributes$Builder: void <init>()>();

        $r3 = virtualinvoke $r1.<android.print.PrintAttributes: android.print.PrintAttributes$MediaSize getMediaSize()>();

        $r2 = virtualinvoke $r2.<android.print.PrintAttributes$Builder: android.print.PrintAttributes$Builder setMediaSize(android.print.PrintAttributes$MediaSize)>($r3);

        $r4 = virtualinvoke $r1.<android.print.PrintAttributes: android.print.PrintAttributes$Resolution getResolution()>();

        $r2 = virtualinvoke $r2.<android.print.PrintAttributes$Builder: android.print.PrintAttributes$Builder setResolution(android.print.PrintAttributes$Resolution)>($r4);

        $r5 = virtualinvoke $r1.<android.print.PrintAttributes: android.print.PrintAttributes$Margins getMinMargins()>();

        $r2 = virtualinvoke $r2.<android.print.PrintAttributes$Builder: android.print.PrintAttributes$Builder setMinMargins(android.print.PrintAttributes$Margins)>($r5);

        $i0 = virtualinvoke $r1.<android.print.PrintAttributes: int getColorMode()>();

        if $i0 == 0 goto label1;

        $i0 = virtualinvoke $r1.<android.print.PrintAttributes: int getColorMode()>();

        virtualinvoke $r2.<android.print.PrintAttributes$Builder: android.print.PrintAttributes$Builder setColorMode(int)>($i0);

     label1:
        return $r2;
    }
    public int getColorMode()
    {
        android.support.v4.print.PrintHelperKitkat r0;
        int i0;

        r0 := @this: android.support.v4.print.PrintHelperKitkat;

        i0 = r0.<android.support.v4.print.PrintHelperKitkat: int mColorMode>;

        return i0;
    }
    public int getOrientation()
    {
        android.support.v4.print.PrintHelperKitkat r0;
        int $i0;

        r0 := @this: android.support.v4.print.PrintHelperKitkat;

        $i0 = r0.<android.support.v4.print.PrintHelperKitkat: int mOrientation>;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        $i0 = r0.<android.support.v4.print.PrintHelperKitkat: int mOrientation>;

        return $i0;
    }
    public int getScaleMode()
    {
        android.support.v4.print.PrintHelperKitkat r0;
        int i0;

        r0 := @this: android.support.v4.print.PrintHelperKitkat;

        i0 = r0.<android.support.v4.print.PrintHelperKitkat: int mScaleMode>;

        return i0;
    }
    public void printBitmap(java.lang.String, android.graphics.Bitmap, android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback)
    {
        android.support.v4.print.PrintHelperKitkat r0;
        java.lang.String $r1;
        android.graphics.Bitmap $r2;
        android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback $r3;
        int i0, $i1;
        android.content.Context $r4;
        java.lang.Object $r5;
        android.print.PrintManager r6;
        boolean $z0;
        android.print.PrintAttributes$MediaSize r7;
        android.print.PrintAttributes$Builder $r8;
        android.print.PrintAttributes $r9;
        android.support.v4.print.PrintHelperKitkat$1 $r10;

        r0 := @this: android.support.v4.print.PrintHelperKitkat;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.graphics.Bitmap;

        $r3 := @parameter2: android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback;

        if $r2 != null goto label1;

        return;

     label1:
        i0 = r0.<android.support.v4.print.PrintHelperKitkat: int mScaleMode>;

        $r4 = r0.<android.support.v4.print.PrintHelperKitkat: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("print");

        r6 = (android.print.PrintManager) $r5;

        $z0 = staticinvoke <android.support.v4.print.PrintHelperKitkat: boolean isPortrait(android.graphics.Bitmap)>($r2);

        if $z0 == 0 goto label3;

        r7 = <android.print.PrintAttributes$MediaSize: android.print.PrintAttributes$MediaSize UNKNOWN_PORTRAIT>;

     label2:
        $r8 = new android.print.PrintAttributes$Builder;

        specialinvoke $r8.<android.print.PrintAttributes$Builder: void <init>()>();

        $r8 = virtualinvoke $r8.<android.print.PrintAttributes$Builder: android.print.PrintAttributes$Builder setMediaSize(android.print.PrintAttributes$MediaSize)>(r7);

        $i1 = r0.<android.support.v4.print.PrintHelperKitkat: int mColorMode>;

        $r8 = virtualinvoke $r8.<android.print.PrintAttributes$Builder: android.print.PrintAttributes$Builder setColorMode(int)>($i1);

        $r9 = virtualinvoke $r8.<android.print.PrintAttributes$Builder: android.print.PrintAttributes build()>();

        $r10 = new android.support.v4.print.PrintHelperKitkat$1;

        specialinvoke $r10.<android.support.v4.print.PrintHelperKitkat$1: void <init>(android.support.v4.print.PrintHelperKitkat,java.lang.String,int,android.graphics.Bitmap,android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback)>(r0, $r1, i0, $r2, $r3);

        virtualinvoke r6.<android.print.PrintManager: android.print.PrintJob print(java.lang.String,android.print.PrintDocumentAdapter,android.print.PrintAttributes)>($r1, $r10, $r9);

        return;

     label3:
        r7 = <android.print.PrintAttributes$MediaSize: android.print.PrintAttributes$MediaSize UNKNOWN_LANDSCAPE>;

        goto label2;
    }
    public void printBitmap(java.lang.String, android.net.Uri, android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback) throws java.io.FileNotFoundException
    {
        android.support.v4.print.PrintHelperKitkat r0;
        java.lang.String $r1;
        android.net.Uri $r2;
        android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback $r3;
        android.support.v4.print.PrintHelperKitkat$3 r4;
        int i0;
        android.print.PrintAttributes$Builder r5;
        android.content.Context $r6;
        java.lang.Object $r7;
        android.print.PrintManager r8;
        android.print.PrintAttributes$MediaSize $r9;
        android.print.PrintAttributes $r10;

        r0 := @this: android.support.v4.print.PrintHelperKitkat;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.net.Uri;

        $r3 := @parameter2: android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback;

        i0 = r0.<android.support.v4.print.PrintHelperKitkat: int mScaleMode>;

        r4 = new android.support.v4.print.PrintHelperKitkat$3;

        specialinvoke r4.<android.support.v4.print.PrintHelperKitkat$3: void <init>(android.support.v4.print.PrintHelperKitkat,java.lang.String,android.net.Uri,android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback,int)>(r0, $r1, $r2, $r3, i0);

        $r6 = r0.<android.support.v4.print.PrintHelperKitkat: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("print");

        r8 = (android.print.PrintManager) $r7;

        r5 = new android.print.PrintAttributes$Builder;

        specialinvoke r5.<android.print.PrintAttributes$Builder: void <init>()>();

        i0 = r0.<android.support.v4.print.PrintHelperKitkat: int mColorMode>;

        virtualinvoke r5.<android.print.PrintAttributes$Builder: android.print.PrintAttributes$Builder setColorMode(int)>(i0);

        i0 = r0.<android.support.v4.print.PrintHelperKitkat: int mOrientation>;

        if i0 == 1 goto label1;

        i0 = r0.<android.support.v4.print.PrintHelperKitkat: int mOrientation>;

        if i0 != 0 goto label3;

     label1:
        $r9 = <android.print.PrintAttributes$MediaSize: android.print.PrintAttributes$MediaSize UNKNOWN_LANDSCAPE>;

        virtualinvoke r5.<android.print.PrintAttributes$Builder: android.print.PrintAttributes$Builder setMediaSize(android.print.PrintAttributes$MediaSize)>($r9);

     label2:
        $r10 = virtualinvoke r5.<android.print.PrintAttributes$Builder: android.print.PrintAttributes build()>();

        virtualinvoke r8.<android.print.PrintManager: android.print.PrintJob print(java.lang.String,android.print.PrintDocumentAdapter,android.print.PrintAttributes)>($r1, r4, $r10);

        return;

     label3:
        i0 = r0.<android.support.v4.print.PrintHelperKitkat: int mOrientation>;

        if i0 != 2 goto label2;

        $r9 = <android.print.PrintAttributes$MediaSize: android.print.PrintAttributes$MediaSize UNKNOWN_PORTRAIT>;

        virtualinvoke r5.<android.print.PrintAttributes$Builder: android.print.PrintAttributes$Builder setMediaSize(android.print.PrintAttributes$MediaSize)>($r9);

        goto label2;
    }
    public void setColorMode(int)
    {
        android.support.v4.print.PrintHelperKitkat r0;
        int $i0;

        r0 := @this: android.support.v4.print.PrintHelperKitkat;

        $i0 := @parameter0: int;

        r0.<android.support.v4.print.PrintHelperKitkat: int mColorMode> = $i0;

        return;
    }
    public void setOrientation(int)
    {
        android.support.v4.print.PrintHelperKitkat r0;
        int $i0;

        r0 := @this: android.support.v4.print.PrintHelperKitkat;

        $i0 := @parameter0: int;

        r0.<android.support.v4.print.PrintHelperKitkat: int mOrientation> = $i0;

        return;
    }
    public void setScaleMode(int)
    {
        android.support.v4.print.PrintHelperKitkat r0;
        int $i0;

        r0 := @this: android.support.v4.print.PrintHelperKitkat;

        $i0 := @parameter0: int;

        r0.<android.support.v4.print.PrintHelperKitkat: int mScaleMode> = $i0;

        return;
    }
