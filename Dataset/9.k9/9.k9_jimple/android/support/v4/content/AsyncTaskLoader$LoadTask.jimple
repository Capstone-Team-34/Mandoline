android.support.v4.content.AsyncTaskLoader$LoadTask extends android.support.v4.content.ModernAsyncTask implements java.lang.Runnable
private final java.util.concurrent.CountDownLatch mDone
final android.support.v4.content.AsyncTaskLoader this$0
boolean waiting
    void <init>(android.support.v4.content.AsyncTaskLoader)
    {
        android.support.v4.content.AsyncTaskLoader$LoadTask r0;
        android.support.v4.content.AsyncTaskLoader $r1;
        java.util.concurrent.CountDownLatch $r2;

        r0 := @this: android.support.v4.content.AsyncTaskLoader$LoadTask;

        $r1 := @parameter0: android.support.v4.content.AsyncTaskLoader;

        r0.<android.support.v4.content.AsyncTaskLoader$LoadTask: android.support.v4.content.AsyncTaskLoader this$0> = $r1;

        specialinvoke r0.<android.support.v4.content.ModernAsyncTask: void <init>()>();

        $r2 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r2.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        r0.<android.support.v4.content.AsyncTaskLoader$LoadTask: java.util.concurrent.CountDownLatch mDone> = $r2;

        return;
    }
    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        android.support.v4.content.AsyncTaskLoader$LoadTask r0;
        java.lang.Object $r1;
        java.lang.Object[] $r2;
        java.lang.Void[] $r3;

        r0 := @this: android.support.v4.content.AsyncTaskLoader$LoadTask;

        $r2 := @parameter0: java.lang.Object[];

        $r3 = (java.lang.Void[]) $r2;

        $r1 = virtualinvoke r0.<android.support.v4.content.AsyncTaskLoader$LoadTask: java.lang.Object doInBackground(java.lang.Void[])>($r3);

        return $r1;
    }
    protected transient java.lang.Object doInBackground(java.lang.Void[])
    {
        android.support.v4.content.AsyncTaskLoader$LoadTask r0;
        java.lang.Void[] $r1;
        android.support.v4.os.OperationCanceledException r2;
        android.support.v4.content.AsyncTaskLoader $r3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: android.support.v4.content.AsyncTaskLoader$LoadTask;

        $r1 := @parameter0: java.lang.Void[];

        $r3 = r0.<android.support.v4.content.AsyncTaskLoader$LoadTask: android.support.v4.content.AsyncTaskLoader this$0>;

     label1:
        $r4 = virtualinvoke $r3.<android.support.v4.content.AsyncTaskLoader: java.lang.Object onLoadInBackground()>();

     label2:
        return $r4;

     label3:
        r2 := @caughtexception;

        $z0 = virtualinvoke r0.<android.support.v4.content.AsyncTaskLoader$LoadTask: boolean isCancelled()>();

        if $z0 != 0 goto label4;

        throw r2;

     label4:
        return null;

        catch android.support.v4.os.OperationCanceledException from label1 to label2 with label3;
    }
    protected void onCancelled(java.lang.Object)
    {
        android.support.v4.content.AsyncTaskLoader$LoadTask r0;
        java.lang.Object r1;
        java.util.concurrent.CountDownLatch $r2;
        android.support.v4.content.AsyncTaskLoader $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.support.v4.content.AsyncTaskLoader$LoadTask;

        r1 := @parameter0: java.lang.Object;

     label1:
        $r3 = r0.<android.support.v4.content.AsyncTaskLoader$LoadTask: android.support.v4.content.AsyncTaskLoader this$0>;

        virtualinvoke $r3.<android.support.v4.content.AsyncTaskLoader: void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object)>(r0, r1);

     label2:
        $r2 = r0.<android.support.v4.content.AsyncTaskLoader$LoadTask: java.util.concurrent.CountDownLatch mDone>;

        virtualinvoke $r2.<java.util.concurrent.CountDownLatch: void countDown()>();

        return;

     label3:
        $r4 := @caughtexception;

        $r2 = r0.<android.support.v4.content.AsyncTaskLoader$LoadTask: java.util.concurrent.CountDownLatch mDone>;

        virtualinvoke $r2.<java.util.concurrent.CountDownLatch: void countDown()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    protected void onPostExecute(java.lang.Object)
    {
        android.support.v4.content.AsyncTaskLoader$LoadTask r0;
        java.lang.Object r1;
        java.util.concurrent.CountDownLatch $r2;
        android.support.v4.content.AsyncTaskLoader $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.support.v4.content.AsyncTaskLoader$LoadTask;

        r1 := @parameter0: java.lang.Object;

     label1:
        $r3 = r0.<android.support.v4.content.AsyncTaskLoader$LoadTask: android.support.v4.content.AsyncTaskLoader this$0>;

        virtualinvoke $r3.<android.support.v4.content.AsyncTaskLoader: void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object)>(r0, r1);

     label2:
        $r2 = r0.<android.support.v4.content.AsyncTaskLoader$LoadTask: java.util.concurrent.CountDownLatch mDone>;

        virtualinvoke $r2.<java.util.concurrent.CountDownLatch: void countDown()>();

        return;

     label3:
        $r4 := @caughtexception;

        $r2 = r0.<android.support.v4.content.AsyncTaskLoader$LoadTask: java.util.concurrent.CountDownLatch mDone>;

        virtualinvoke $r2.<java.util.concurrent.CountDownLatch: void countDown()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void run()
    {
        android.support.v4.content.AsyncTaskLoader$LoadTask r0;
        android.support.v4.content.AsyncTaskLoader $r1;

        r0 := @this: android.support.v4.content.AsyncTaskLoader$LoadTask;

        r0.<android.support.v4.content.AsyncTaskLoader$LoadTask: boolean waiting> = 0;

        $r1 = r0.<android.support.v4.content.AsyncTaskLoader$LoadTask: android.support.v4.content.AsyncTaskLoader this$0>;

        virtualinvoke $r1.<android.support.v4.content.AsyncTaskLoader: void executePendingTask()>();

        return;
    }
    public void waitForLoader()
    {
        android.support.v4.content.AsyncTaskLoader$LoadTask r0;
        java.util.concurrent.CountDownLatch $r1;
        java.lang.InterruptedException $r2;

        r0 := @this: android.support.v4.content.AsyncTaskLoader$LoadTask;

        $r1 = r0.<android.support.v4.content.AsyncTaskLoader$LoadTask: java.util.concurrent.CountDownLatch mDone>;

     label1:
        virtualinvoke $r1.<java.util.concurrent.CountDownLatch: void await()>();

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }
