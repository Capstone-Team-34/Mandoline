de.cketti.library.changelog.ChangeLog$3 extends java.lang.Object implements java.util.Comparator
final de.cketti.library.changelog.ChangeLog this$0
    void <init>(de.cketti.library.changelog.ChangeLog)
    {
        de.cketti.library.changelog.ChangeLog$3 r0;
        de.cketti.library.changelog.ChangeLog $r1;

        r0 := @this: de.cketti.library.changelog.ChangeLog$3;

        $r1 := @parameter0: de.cketti.library.changelog.ChangeLog;

        r0.<de.cketti.library.changelog.ChangeLog$3: de.cketti.library.changelog.ChangeLog this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public int compare(de.cketti.library.changelog.ChangeLog$ReleaseItem, de.cketti.library.changelog.ChangeLog$ReleaseItem)
    {
        de.cketti.library.changelog.ChangeLog$3 r0;
        de.cketti.library.changelog.ChangeLog$ReleaseItem $r1, $r2;
        int $i0, $i1;

        r0 := @this: de.cketti.library.changelog.ChangeLog$3;

        $r1 := @parameter0: de.cketti.library.changelog.ChangeLog$ReleaseItem;

        $r2 := @parameter1: de.cketti.library.changelog.ChangeLog$ReleaseItem;

        $i0 = $r1.<de.cketti.library.changelog.ChangeLog$ReleaseItem: int versionCode>;

        $i1 = $r2.<de.cketti.library.changelog.ChangeLog$ReleaseItem: int versionCode>;

        if $i0 >= $i1 goto label1;

        return 1;

     label1:
        $i0 = $r1.<de.cketti.library.changelog.ChangeLog$ReleaseItem: int versionCode>;

        $i1 = $r2.<de.cketti.library.changelog.ChangeLog$ReleaseItem: int versionCode>;

        if $i0 <= $i1 goto label2;

        return -1;

     label2:
        return 0;
    }
    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        de.cketti.library.changelog.ChangeLog$3 r0;
        int $i0;
        java.lang.Object $r1, $r2;
        de.cketti.library.changelog.ChangeLog$ReleaseItem $r3, $r4;

        r0 := @this: de.cketti.library.changelog.ChangeLog$3;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (de.cketti.library.changelog.ChangeLog$ReleaseItem) $r1;

        $r4 = (de.cketti.library.changelog.ChangeLog$ReleaseItem) $r2;

        $i0 = virtualinvoke r0.<de.cketti.library.changelog.ChangeLog$3: int compare(de.cketti.library.changelog.ChangeLog$ReleaseItem,de.cketti.library.changelog.ChangeLog$ReleaseItem)>($r3, $r4);

        return $i0;
    }
