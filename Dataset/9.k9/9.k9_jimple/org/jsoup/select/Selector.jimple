org.jsoup.select.Selector extends java.lang.Object
private final org.jsoup.select.Evaluator evaluator
private final org.jsoup.nodes.Element root
    private void <init>(java.lang.String, org.jsoup.nodes.Element)
    {
        org.jsoup.select.Selector r0;
        org.jsoup.nodes.Element $r1;
        java.lang.String $r2;
        org.jsoup.select.Evaluator $r3;

        r0 := @this: org.jsoup.select.Selector;

        $r2 := @parameter0: java.lang.String;

        $r1 := @parameter1: org.jsoup.nodes.Element;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>($r2);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>($r2);

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>($r1);

        $r3 = staticinvoke <org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse(java.lang.String)>($r2);

        r0.<org.jsoup.select.Selector: org.jsoup.select.Evaluator evaluator> = $r3;

        r0.<org.jsoup.select.Selector: org.jsoup.nodes.Element root> = $r1;

        return;
    }
    private void <init>(org.jsoup.select.Evaluator, org.jsoup.nodes.Element)
    {
        org.jsoup.select.Selector r0;
        org.jsoup.select.Evaluator $r1;
        org.jsoup.nodes.Element $r2;

        r0 := @this: org.jsoup.select.Selector;

        $r1 := @parameter0: org.jsoup.select.Evaluator;

        $r2 := @parameter1: org.jsoup.nodes.Element;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>($r1);

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>($r2);

        r0.<org.jsoup.select.Selector: org.jsoup.select.Evaluator evaluator> = $r1;

        r0.<org.jsoup.select.Selector: org.jsoup.nodes.Element root> = $r2;

        return;
    }
    static org.jsoup.select.Elements filterOut(java.util.Collection, java.util.Collection)
    {
        java.util.Collection r0, r1;
        org.jsoup.select.Elements r2;
        java.util.Iterator $r3, $r6;
        boolean $z0, $z1;
        java.lang.Object $r4;
        org.jsoup.nodes.Element r5, r7;

        r0 := @parameter0: java.util.Collection;

        r1 := @parameter1: java.util.Collection;

        r2 = new org.jsoup.select.Elements;

        specialinvoke r2.<org.jsoup.select.Elements: void <init>()>();

        $r3 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.jsoup.nodes.Element) $r4;

        $z0 = 0;

        $r6 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.jsoup.nodes.Element) $r4;

        $z1 = virtualinvoke r5.<org.jsoup.nodes.Element: boolean equals(java.lang.Object)>(r7);

        if $z1 == 0 goto label2;

        $z0 = 1;

     label3:
        if $z0 != 0 goto label1;

        virtualinvoke r2.<org.jsoup.select.Elements: boolean add(java.lang.Object)>(r5);

        goto label1;

     label4:
        return r2;
    }
    private org.jsoup.select.Elements select()
    {
        org.jsoup.select.Selector r0;
        org.jsoup.nodes.Element $r1;
        org.jsoup.select.Elements $r2;
        org.jsoup.select.Evaluator $r3;

        r0 := @this: org.jsoup.select.Selector;

        $r3 = r0.<org.jsoup.select.Selector: org.jsoup.select.Evaluator evaluator>;

        $r1 = r0.<org.jsoup.select.Selector: org.jsoup.nodes.Element root>;

        $r2 = staticinvoke <org.jsoup.select.Collector: org.jsoup.select.Elements collect(org.jsoup.select.Evaluator,org.jsoup.nodes.Element)>($r3, $r1);

        return $r2;
    }
    public static org.jsoup.select.Elements select(java.lang.String, java.lang.Iterable)
    {
        java.lang.String $r0;
        java.lang.Iterable r1;
        java.util.ArrayList r2;
        java.util.IdentityHashMap r3;
        org.jsoup.select.Evaluator $r4;
        java.util.Iterator $r5, $r9;
        boolean $z0;
        java.lang.Object $r6;
        org.jsoup.nodes.Element r7;
        org.jsoup.select.Elements $r8;
        java.lang.Boolean $r10;

        $r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Iterable;

        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>($r0);

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);

        $r4 = staticinvoke <org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse(java.lang.String)>($r0);

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        r3 = new java.util.IdentityHashMap;

        specialinvoke r3.<java.util.IdentityHashMap: void <init>()>();

        $r5 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.jsoup.nodes.Element) $r6;

        $r8 = staticinvoke <org.jsoup.select.Selector: org.jsoup.select.Elements select(org.jsoup.select.Evaluator,org.jsoup.nodes.Element)>($r4, r7);

        $r9 = virtualinvoke $r8.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r6 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.jsoup.nodes.Element) $r6;

        $z0 = virtualinvoke r3.<java.util.IdentityHashMap: boolean containsKey(java.lang.Object)>(r7);

        if $z0 != 0 goto label2;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

        $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke r3.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r10);

        goto label2;

     label3:
        $r8 = new org.jsoup.select.Elements;

        specialinvoke $r8.<org.jsoup.select.Elements: void <init>(java.util.List)>(r2);

        return $r8;
    }
    public static org.jsoup.select.Elements select(java.lang.String, org.jsoup.nodes.Element)
    {
        java.lang.String $r0;
        org.jsoup.nodes.Element $r1;
        org.jsoup.select.Elements $r2;
        org.jsoup.select.Selector $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: org.jsoup.nodes.Element;

        $r3 = new org.jsoup.select.Selector;

        specialinvoke $r3.<org.jsoup.select.Selector: void <init>(java.lang.String,org.jsoup.nodes.Element)>($r0, $r1);

        $r2 = specialinvoke $r3.<org.jsoup.select.Selector: org.jsoup.select.Elements select()>();

        return $r2;
    }
    public static org.jsoup.select.Elements select(org.jsoup.select.Evaluator, org.jsoup.nodes.Element)
    {
        org.jsoup.select.Evaluator $r0;
        org.jsoup.nodes.Element $r1;
        org.jsoup.select.Elements $r2;
        org.jsoup.select.Selector $r3;

        $r0 := @parameter0: org.jsoup.select.Evaluator;

        $r1 := @parameter1: org.jsoup.nodes.Element;

        $r3 = new org.jsoup.select.Selector;

        specialinvoke $r3.<org.jsoup.select.Selector: void <init>(org.jsoup.select.Evaluator,org.jsoup.nodes.Element)>($r0, $r1);

        $r2 = specialinvoke $r3.<org.jsoup.select.Selector: org.jsoup.select.Elements select()>();

        return $r2;
    }
