org.jsoup.select.Elements extends java.util.ArrayList
    public void <init>()
    {
        org.jsoup.select.Elements r0;

        r0 := @this: org.jsoup.select.Elements;

        specialinvoke r0.<java.util.ArrayList: void <init>()>();

        return;
    }
    public void <init>(int)
    {
        org.jsoup.select.Elements r0;
        int $i0;

        r0 := @this: org.jsoup.select.Elements;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.util.ArrayList: void <init>(int)>($i0);

        return;
    }
    public void <init>(java.util.Collection)
    {
        org.jsoup.select.Elements r0;
        java.util.Collection r1;

        r0 := @this: org.jsoup.select.Elements;

        r1 := @parameter0: java.util.Collection;

        specialinvoke r0.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        return;
    }
    public void <init>(java.util.List)
    {
        org.jsoup.select.Elements r0;
        java.util.List r1;

        r0 := @this: org.jsoup.select.Elements;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        return;
    }
    public transient void <init>(org.jsoup.nodes.Element[])
    {
        org.jsoup.select.Elements r0;
        org.jsoup.nodes.Element[] $r1;
        java.util.List $r2;

        r0 := @this: org.jsoup.select.Elements;

        $r1 := @parameter0: org.jsoup.nodes.Element[];

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        specialinvoke r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        return;
    }
    private org.jsoup.select.Elements siblings(java.lang.String, boolean, boolean)
    {
        org.jsoup.select.Elements r0, r2;
        java.lang.String $r1;
        boolean $z0, $z1, $z2;
        org.jsoup.select.Evaluator $r3;
        java.util.Iterator $r4;
        java.lang.Object $r5;
        org.jsoup.nodes.Element r6;

        r0 := @this: org.jsoup.select.Elements;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        r2 = new org.jsoup.select.Elements;

        specialinvoke r2.<org.jsoup.select.Elements: void <init>()>();

        if $r1 == null goto label6;

        $r3 = staticinvoke <org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse(java.lang.String)>($r1);

     label1:
        $r4 = virtualinvoke r0.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label9;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.jsoup.nodes.Element) $r5;

     label3:
        if $z0 == 0 goto label7;

        r6 = virtualinvoke r6.<org.jsoup.nodes.Element: org.jsoup.nodes.Element nextElementSibling()>();

     label4:
        if r6 == null goto label2;

        if $r3 != null goto label8;

        virtualinvoke r2.<org.jsoup.select.Elements: boolean add(java.lang.Object)>(r6);

     label5:
        if $z1 != 0 goto label3;

        goto label2;

     label6:
        $r3 = null;

        goto label1;

     label7:
        r6 = virtualinvoke r6.<org.jsoup.nodes.Element: org.jsoup.nodes.Element previousElementSibling()>();

        goto label4;

     label8:
        $z2 = virtualinvoke r6.<org.jsoup.nodes.Element: boolean is(org.jsoup.select.Evaluator)>($r3);

        if $z2 == 0 goto label5;

        virtualinvoke r2.<org.jsoup.select.Elements: boolean add(java.lang.Object)>(r6);

        goto label5;

     label9:
        return r2;
    }
    public org.jsoup.select.Elements addClass(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.jsoup.nodes.Element r4;

        r0 := @this: org.jsoup.select.Elements;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jsoup.nodes.Element) $r3;

        virtualinvoke r4.<org.jsoup.nodes.Element: org.jsoup.nodes.Element addClass(java.lang.String)>($r1);

        goto label1;

     label2:
        return r0;
    }
    public org.jsoup.select.Elements after(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.jsoup.nodes.Element r4;

        r0 := @this: org.jsoup.select.Elements;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jsoup.nodes.Element) $r3;

        virtualinvoke r4.<org.jsoup.nodes.Element: org.jsoup.nodes.Element after(java.lang.String)>($r1);

        goto label1;

     label2:
        return r0;
    }
    public org.jsoup.select.Elements append(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.jsoup.nodes.Element r4;

        r0 := @this: org.jsoup.select.Elements;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jsoup.nodes.Element) $r3;

        virtualinvoke r4.<org.jsoup.nodes.Element: org.jsoup.nodes.Element append(java.lang.String)>($r1);

        goto label1;

     label2:
        return r0;
    }
    public java.lang.String attr(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.jsoup.nodes.Element r4;

        r0 := @this: org.jsoup.select.Elements;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jsoup.nodes.Element) $r3;

        $z0 = virtualinvoke r4.<org.jsoup.nodes.Element: boolean hasAttr(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r4.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>($r1);

        return $r1;

     label2:
        return "";
    }
    public org.jsoup.select.Elements attr(java.lang.String, java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String $r1, $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.jsoup.nodes.Element r5;

        r0 := @this: org.jsoup.select.Elements;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.jsoup.nodes.Element) $r4;

        virtualinvoke r5.<org.jsoup.nodes.Element: org.jsoup.nodes.Element attr(java.lang.String,java.lang.String)>($r1, $r2);

        goto label1;

     label2:
        return r0;
    }
    public org.jsoup.select.Elements before(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.jsoup.nodes.Element r4;

        r0 := @this: org.jsoup.select.Elements;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jsoup.nodes.Element) $r3;

        virtualinvoke r4.<org.jsoup.nodes.Element: org.jsoup.nodes.Element before(java.lang.String)>($r1);

        goto label1;

     label2:
        return r0;
    }
    public volatile java.lang.Object clone()
    {
        org.jsoup.select.Elements r0;

        r0 := @this: org.jsoup.select.Elements;

        r0 = virtualinvoke r0.<org.jsoup.select.Elements: org.jsoup.select.Elements clone()>();

        return r0;
    }
    public org.jsoup.select.Elements clone()
    {
        org.jsoup.select.Elements r0, r1;
        int $i0;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.jsoup.nodes.Element r4;

        r0 := @this: org.jsoup.select.Elements;

        r1 = new org.jsoup.select.Elements;

        $i0 = virtualinvoke r0.<org.jsoup.select.Elements: int size()>();

        specialinvoke r1.<org.jsoup.select.Elements: void <init>(int)>($i0);

        $r2 = virtualinvoke r0.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jsoup.nodes.Element) $r3;

        r4 = virtualinvoke r4.<org.jsoup.nodes.Element: org.jsoup.nodes.Element clone()>();

        virtualinvoke r1.<org.jsoup.select.Elements: boolean add(java.lang.Object)>(r4);

        goto label1;

     label2:
        return r1;
    }
    public org.jsoup.select.Elements empty()
    {
        org.jsoup.select.Elements r0;
        java.util.Iterator $r1;
        boolean $z0;
        java.lang.Object $r2;
        org.jsoup.nodes.Element r3;

        r0 := @this: org.jsoup.select.Elements;

        $r1 = virtualinvoke r0.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.jsoup.nodes.Element) $r2;

        virtualinvoke r3.<org.jsoup.nodes.Element: org.jsoup.nodes.Element empty()>();

        goto label1;

     label2:
        return r0;
    }
    public org.jsoup.select.Elements eq(int)
    {
        org.jsoup.select.Elements r0, $r1;
        int $i0, $i1;
        org.jsoup.nodes.Element[] $r2;
        java.lang.Object $r3;
        org.jsoup.nodes.Element $r4;

        r0 := @this: org.jsoup.select.Elements;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.jsoup.select.Elements: int size()>();

        if $i1 <= $i0 goto label1;

        $r1 = new org.jsoup.select.Elements;

        $r2 = newarray (org.jsoup.nodes.Element)[1];

        $r3 = virtualinvoke r0.<org.jsoup.select.Elements: java.lang.Object get(int)>($i0);

        $r4 = (org.jsoup.nodes.Element) $r3;

        $r2[0] = $r4;

        specialinvoke $r1.<org.jsoup.select.Elements: void <init>(org.jsoup.nodes.Element[])>($r2);

        return $r1;

     label1:
        r0 = new org.jsoup.select.Elements;

        specialinvoke r0.<org.jsoup.select.Elements: void <init>()>();

        return r0;
    }
    public org.jsoup.nodes.Element first()
    {
        org.jsoup.select.Elements r0;
        boolean $z0;
        java.lang.Object $r1;
        org.jsoup.nodes.Element $r2;

        r0 := @this: org.jsoup.select.Elements;

        $z0 = virtualinvoke r0.<org.jsoup.select.Elements: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<org.jsoup.select.Elements: java.lang.Object get(int)>(0);

        $r2 = (org.jsoup.nodes.Element) $r1;

        return $r2;
    }
    public java.util.List forms()
    {
        org.jsoup.select.Elements r0;
        java.util.ArrayList r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.jsoup.nodes.Element r4;
        org.jsoup.nodes.FormElement r5;

        r0 := @this: org.jsoup.select.Elements;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r2 = virtualinvoke r0.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jsoup.nodes.Element) $r3;

        $z0 = r4 instanceof org.jsoup.nodes.FormElement;

        if $z0 == 0 goto label1;

        r5 = (org.jsoup.nodes.FormElement) r4;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        goto label1;

     label2:
        return r1;
    }
    public boolean hasAttr(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.jsoup.nodes.Element r4;

        r0 := @this: org.jsoup.select.Elements;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jsoup.nodes.Element) $r3;

        $z0 = virtualinvoke r4.<org.jsoup.nodes.Element: boolean hasAttr(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label2:
        return 0;
    }
    public boolean hasClass(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.jsoup.nodes.Element r4;

        r0 := @this: org.jsoup.select.Elements;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jsoup.nodes.Element) $r3;

        $z0 = virtualinvoke r4.<org.jsoup.nodes.Element: boolean hasClass(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label2:
        return 0;
    }
    public boolean hasText()
    {
        org.jsoup.select.Elements r0;
        java.util.Iterator $r1;
        boolean $z0;
        java.lang.Object $r2;
        org.jsoup.nodes.Element r3;

        r0 := @this: org.jsoup.select.Elements;

        $r1 = virtualinvoke r0.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.jsoup.nodes.Element) $r2;

        $z0 = virtualinvoke r3.<org.jsoup.nodes.Element: boolean hasText()>();

        if $z0 == 0 goto label1;

        return 1;

     label2:
        return 0;
    }
    public java.lang.String html()
    {
        org.jsoup.select.Elements r0;
        java.lang.StringBuilder r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.jsoup.nodes.Element r4;
        int $i0;
        java.lang.String $r5;

        r0 := @this: org.jsoup.select.Elements;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jsoup.nodes.Element) $r3;

        $i0 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        if $i0 == 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label2:
        $r5 = virtualinvoke r4.<org.jsoup.nodes.Element: java.lang.String html()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        goto label1;

     label3:
        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
    public org.jsoup.select.Elements html(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.jsoup.nodes.Element r4;

        r0 := @this: org.jsoup.select.Elements;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jsoup.nodes.Element) $r3;

        virtualinvoke r4.<org.jsoup.nodes.Element: org.jsoup.nodes.Element html(java.lang.String)>($r1);

        goto label1;

     label2:
        return r0;
    }
    public boolean is(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String $r1;
        org.jsoup.select.Evaluator $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.jsoup.nodes.Element r5;

        r0 := @this: org.jsoup.select.Elements;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse(java.lang.String)>($r1);

        $r3 = virtualinvoke r0.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.jsoup.nodes.Element) $r4;

        $z0 = virtualinvoke r5.<org.jsoup.nodes.Element: boolean is(org.jsoup.select.Evaluator)>($r2);

        if $z0 == 0 goto label1;

        return 1;

     label2:
        return 0;
    }
    public org.jsoup.nodes.Element last()
    {
        org.jsoup.select.Elements r0;
        boolean $z0;
        int $i0;
        java.lang.Object $r1;
        org.jsoup.nodes.Element $r2;

        r0 := @this: org.jsoup.select.Elements;

        $z0 = virtualinvoke r0.<org.jsoup.select.Elements: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r0.<org.jsoup.select.Elements: int size()>();

        $i0 = $i0 + -1;

        $r1 = virtualinvoke r0.<org.jsoup.select.Elements: java.lang.Object get(int)>($i0);

        $r2 = (org.jsoup.nodes.Element) $r1;

        return $r2;
    }
    public org.jsoup.select.Elements next()
    {
        org.jsoup.select.Elements r0;

        r0 := @this: org.jsoup.select.Elements;

        r0 = specialinvoke r0.<org.jsoup.select.Elements: org.jsoup.select.Elements siblings(java.lang.String,boolean,boolean)>(null, 1, 0);

        return r0;
    }
    public org.jsoup.select.Elements next(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.select.Elements;

        $r1 := @parameter0: java.lang.String;

        r0 = specialinvoke r0.<org.jsoup.select.Elements: org.jsoup.select.Elements siblings(java.lang.String,boolean,boolean)>($r1, 1, 0);

        return r0;
    }
    public org.jsoup.select.Elements nextAll()
    {
        org.jsoup.select.Elements r0;

        r0 := @this: org.jsoup.select.Elements;

        r0 = specialinvoke r0.<org.jsoup.select.Elements: org.jsoup.select.Elements siblings(java.lang.String,boolean,boolean)>(null, 1, 1);

        return r0;
    }
    public org.jsoup.select.Elements nextAll(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.select.Elements;

        $r1 := @parameter0: java.lang.String;

        r0 = specialinvoke r0.<org.jsoup.select.Elements: org.jsoup.select.Elements siblings(java.lang.String,boolean,boolean)>($r1, 1, 1);

        return r0;
    }
    public org.jsoup.select.Elements not(java.lang.String)
    {
        org.jsoup.select.Elements r0, $r2;
        java.lang.String $r1;

        r0 := @this: org.jsoup.select.Elements;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.jsoup.select.Selector: org.jsoup.select.Elements select(java.lang.String,java.lang.Iterable)>($r1, r0);

        r0 = staticinvoke <org.jsoup.select.Selector: org.jsoup.select.Elements filterOut(java.util.Collection,java.util.Collection)>(r0, $r2);

        return r0;
    }
    public java.lang.String outerHtml()
    {
        org.jsoup.select.Elements r0;
        java.lang.StringBuilder r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.jsoup.nodes.Element r4;
        int $i0;
        java.lang.String $r5;

        r0 := @this: org.jsoup.select.Elements;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jsoup.nodes.Element) $r3;

        $i0 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        if $i0 == 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label2:
        $r5 = virtualinvoke r4.<org.jsoup.nodes.Element: java.lang.String outerHtml()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        goto label1;

     label3:
        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
    public org.jsoup.select.Elements parents()
    {
        org.jsoup.select.Elements r0;
        java.util.LinkedHashSet r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.jsoup.nodes.Element r4;

        r0 := @this: org.jsoup.select.Elements;

        r1 = new java.util.LinkedHashSet;

        specialinvoke r1.<java.util.LinkedHashSet: void <init>()>();

        $r2 = virtualinvoke r0.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jsoup.nodes.Element) $r3;

        r0 = virtualinvoke r4.<org.jsoup.nodes.Element: org.jsoup.select.Elements parents()>();

        virtualinvoke r1.<java.util.HashSet: boolean addAll(java.util.Collection)>(r0);

        goto label1;

     label2:
        r0 = new org.jsoup.select.Elements;

        specialinvoke r0.<org.jsoup.select.Elements: void <init>(java.util.Collection)>(r1);

        return r0;
    }
    public org.jsoup.select.Elements prepend(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.jsoup.nodes.Element r4;

        r0 := @this: org.jsoup.select.Elements;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jsoup.nodes.Element) $r3;

        virtualinvoke r4.<org.jsoup.nodes.Element: org.jsoup.nodes.Element prepend(java.lang.String)>($r1);

        goto label1;

     label2:
        return r0;
    }
    public org.jsoup.select.Elements prev()
    {
        org.jsoup.select.Elements r0;

        r0 := @this: org.jsoup.select.Elements;

        r0 = specialinvoke r0.<org.jsoup.select.Elements: org.jsoup.select.Elements siblings(java.lang.String,boolean,boolean)>(null, 0, 0);

        return r0;
    }
    public org.jsoup.select.Elements prev(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.select.Elements;

        $r1 := @parameter0: java.lang.String;

        r0 = specialinvoke r0.<org.jsoup.select.Elements: org.jsoup.select.Elements siblings(java.lang.String,boolean,boolean)>($r1, 0, 0);

        return r0;
    }
    public org.jsoup.select.Elements prevAll()
    {
        org.jsoup.select.Elements r0;

        r0 := @this: org.jsoup.select.Elements;

        r0 = specialinvoke r0.<org.jsoup.select.Elements: org.jsoup.select.Elements siblings(java.lang.String,boolean,boolean)>(null, 0, 1);

        return r0;
    }
    public org.jsoup.select.Elements prevAll(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.select.Elements;

        $r1 := @parameter0: java.lang.String;

        r0 = specialinvoke r0.<org.jsoup.select.Elements: org.jsoup.select.Elements siblings(java.lang.String,boolean,boolean)>($r1, 0, 1);

        return r0;
    }
    public org.jsoup.select.Elements remove()
    {
        org.jsoup.select.Elements r0;
        java.util.Iterator $r1;
        boolean $z0;
        java.lang.Object $r2;
        org.jsoup.nodes.Element r3;

        r0 := @this: org.jsoup.select.Elements;

        $r1 = virtualinvoke r0.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.jsoup.nodes.Element) $r2;

        virtualinvoke r3.<org.jsoup.nodes.Element: void remove()>();

        goto label1;

     label2:
        return r0;
    }
    public org.jsoup.select.Elements removeAttr(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.jsoup.nodes.Element r4;

        r0 := @this: org.jsoup.select.Elements;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jsoup.nodes.Element) $r3;

        virtualinvoke r4.<org.jsoup.nodes.Element: org.jsoup.nodes.Node removeAttr(java.lang.String)>($r1);

        goto label1;

     label2:
        return r0;
    }
    public org.jsoup.select.Elements removeClass(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.jsoup.nodes.Element r4;

        r0 := @this: org.jsoup.select.Elements;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jsoup.nodes.Element) $r3;

        virtualinvoke r4.<org.jsoup.nodes.Element: org.jsoup.nodes.Element removeClass(java.lang.String)>($r1);

        goto label1;

     label2:
        return r0;
    }
    public org.jsoup.select.Elements select(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.select.Elements;

        $r1 := @parameter0: java.lang.String;

        r0 = staticinvoke <org.jsoup.select.Selector: org.jsoup.select.Elements select(java.lang.String,java.lang.Iterable)>($r1, r0);

        return r0;
    }
    public org.jsoup.select.Elements tagName(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.jsoup.nodes.Element r4;

        r0 := @this: org.jsoup.select.Elements;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jsoup.nodes.Element) $r3;

        virtualinvoke r4.<org.jsoup.nodes.Element: org.jsoup.nodes.Element tagName(java.lang.String)>($r1);

        goto label1;

     label2:
        return r0;
    }
    public java.lang.String text()
    {
        org.jsoup.select.Elements r0;
        java.lang.StringBuilder r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.jsoup.nodes.Element r4;
        int $i0;
        java.lang.String $r5;

        r0 := @this: org.jsoup.select.Elements;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jsoup.nodes.Element) $r3;

        $i0 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        if $i0 == 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label2:
        $r5 = virtualinvoke r4.<org.jsoup.nodes.Element: java.lang.String text()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        goto label1;

     label3:
        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
    public java.lang.String toString()
    {
        org.jsoup.select.Elements r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.select.Elements;

        $r1 = virtualinvoke r0.<org.jsoup.select.Elements: java.lang.String outerHtml()>();

        return $r1;
    }
    public org.jsoup.select.Elements toggleClass(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.jsoup.nodes.Element r4;

        r0 := @this: org.jsoup.select.Elements;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jsoup.nodes.Element) $r3;

        virtualinvoke r4.<org.jsoup.nodes.Element: org.jsoup.nodes.Element toggleClass(java.lang.String)>($r1);

        goto label1;

     label2:
        return r0;
    }
    public org.jsoup.select.Elements traverse(org.jsoup.select.NodeVisitor)
    {
        org.jsoup.select.Elements r0;
        org.jsoup.select.NodeVisitor $r1;
        org.jsoup.select.NodeTraversor r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.jsoup.nodes.Element r5;

        r0 := @this: org.jsoup.select.Elements;

        $r1 := @parameter0: org.jsoup.select.NodeVisitor;

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>($r1);

        r2 = new org.jsoup.select.NodeTraversor;

        specialinvoke r2.<org.jsoup.select.NodeTraversor: void <init>(org.jsoup.select.NodeVisitor)>($r1);

        $r3 = virtualinvoke r0.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.jsoup.nodes.Element) $r4;

        virtualinvoke r2.<org.jsoup.select.NodeTraversor: void traverse(org.jsoup.nodes.Node)>(r5);

        goto label1;

     label2:
        return r0;
    }
    public org.jsoup.select.Elements unwrap()
    {
        org.jsoup.select.Elements r0;
        java.util.Iterator $r1;
        boolean $z0;
        java.lang.Object $r2;
        org.jsoup.nodes.Element r3;

        r0 := @this: org.jsoup.select.Elements;

        $r1 = virtualinvoke r0.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.jsoup.nodes.Element) $r2;

        virtualinvoke r3.<org.jsoup.nodes.Element: org.jsoup.nodes.Node unwrap()>();

        goto label1;

     label2:
        return r0;
    }
    public java.lang.String val()
    {
        org.jsoup.select.Elements r0;
        int $i0;
        org.jsoup.nodes.Element $r1;
        java.lang.String $r2;

        r0 := @this: org.jsoup.select.Elements;

        $i0 = virtualinvoke r0.<org.jsoup.select.Elements: int size()>();

        if $i0 <= 0 goto label1;

        $r1 = virtualinvoke r0.<org.jsoup.select.Elements: org.jsoup.nodes.Element first()>();

        $r2 = virtualinvoke $r1.<org.jsoup.nodes.Element: java.lang.String val()>();

        return $r2;

     label1:
        return "";
    }
    public org.jsoup.select.Elements val(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.jsoup.nodes.Element r4;

        r0 := @this: org.jsoup.select.Elements;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jsoup.nodes.Element) $r3;

        virtualinvoke r4.<org.jsoup.nodes.Element: org.jsoup.nodes.Element val(java.lang.String)>($r1);

        goto label1;

     label2:
        return r0;
    }
    public org.jsoup.select.Elements wrap(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.jsoup.nodes.Element r4;

        r0 := @this: org.jsoup.select.Elements;

        $r1 := @parameter0: java.lang.String;

        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>($r1);

        $r2 = virtualinvoke r0.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jsoup.nodes.Element) $r3;

        virtualinvoke r4.<org.jsoup.nodes.Element: org.jsoup.nodes.Element wrap(java.lang.String)>($r1);

        goto label1;

     label2:
        return r0;
    }
