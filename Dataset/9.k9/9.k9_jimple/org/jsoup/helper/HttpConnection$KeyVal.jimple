org.jsoup.helper.HttpConnection$KeyVal extends java.lang.Object implements org.jsoup.Connection$KeyVal
private java.lang.String key
private java.io.InputStream stream
private java.lang.String value
    private void <init>()
    {
        org.jsoup.helper.HttpConnection$KeyVal r0;

        r0 := @this: org.jsoup.helper.HttpConnection$KeyVal;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static org.jsoup.helper.HttpConnection$KeyVal create(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        org.jsoup.helper.HttpConnection$KeyVal $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = new org.jsoup.helper.HttpConnection$KeyVal;

        specialinvoke $r2.<org.jsoup.helper.HttpConnection$KeyVal: void <init>()>();

        $r2 = virtualinvoke $r2.<org.jsoup.helper.HttpConnection$KeyVal: org.jsoup.helper.HttpConnection$KeyVal key(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<org.jsoup.helper.HttpConnection$KeyVal: org.jsoup.helper.HttpConnection$KeyVal value(java.lang.String)>($r1);

        return $r2;
    }
    public static org.jsoup.helper.HttpConnection$KeyVal create(java.lang.String, java.lang.String, java.io.InputStream)
    {
        java.lang.String $r0, $r1;
        java.io.InputStream $r2;
        org.jsoup.helper.HttpConnection$KeyVal $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.io.InputStream;

        $r3 = new org.jsoup.helper.HttpConnection$KeyVal;

        specialinvoke $r3.<org.jsoup.helper.HttpConnection$KeyVal: void <init>()>();

        $r3 = virtualinvoke $r3.<org.jsoup.helper.HttpConnection$KeyVal: org.jsoup.helper.HttpConnection$KeyVal key(java.lang.String)>($r0);

        $r3 = virtualinvoke $r3.<org.jsoup.helper.HttpConnection$KeyVal: org.jsoup.helper.HttpConnection$KeyVal value(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<org.jsoup.helper.HttpConnection$KeyVal: org.jsoup.helper.HttpConnection$KeyVal inputStream(java.io.InputStream)>($r2);

        return $r3;
    }
    public boolean hasInputStream()
    {
        org.jsoup.helper.HttpConnection$KeyVal r0;
        java.io.InputStream $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$KeyVal;

        $r1 = r0.<org.jsoup.helper.HttpConnection$KeyVal: java.io.InputStream stream>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public java.io.InputStream inputStream()
    {
        org.jsoup.helper.HttpConnection$KeyVal r0;
        java.io.InputStream r1;

        r0 := @this: org.jsoup.helper.HttpConnection$KeyVal;

        r1 = r0.<org.jsoup.helper.HttpConnection$KeyVal: java.io.InputStream stream>;

        return r1;
    }
    public volatile org.jsoup.Connection$KeyVal inputStream(java.io.InputStream)
    {
        org.jsoup.helper.HttpConnection$KeyVal r0;
        java.io.InputStream $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$KeyVal;

        $r1 := @parameter0: java.io.InputStream;

        r0 = virtualinvoke r0.<org.jsoup.helper.HttpConnection$KeyVal: org.jsoup.helper.HttpConnection$KeyVal inputStream(java.io.InputStream)>($r1);

        return r0;
    }
    public org.jsoup.helper.HttpConnection$KeyVal inputStream(java.io.InputStream)
    {
        org.jsoup.helper.HttpConnection$KeyVal r0;
        java.io.InputStream $r1;
        java.lang.String $r2;

        r0 := @this: org.jsoup.helper.HttpConnection$KeyVal;

        $r1 := @parameter0: java.io.InputStream;

        $r2 = r0.<org.jsoup.helper.HttpConnection$KeyVal: java.lang.String value>;

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>($r2, "Data input stream must not be null");

        r0.<org.jsoup.helper.HttpConnection$KeyVal: java.io.InputStream stream> = $r1;

        return r0;
    }
    public java.lang.String key()
    {
        org.jsoup.helper.HttpConnection$KeyVal r0;
        java.lang.String r1;

        r0 := @this: org.jsoup.helper.HttpConnection$KeyVal;

        r1 = r0.<org.jsoup.helper.HttpConnection$KeyVal: java.lang.String key>;

        return r1;
    }
    public volatile org.jsoup.Connection$KeyVal key(java.lang.String)
    {
        org.jsoup.helper.HttpConnection$KeyVal r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$KeyVal;

        $r1 := @parameter0: java.lang.String;

        r0 = virtualinvoke r0.<org.jsoup.helper.HttpConnection$KeyVal: org.jsoup.helper.HttpConnection$KeyVal key(java.lang.String)>($r1);

        return r0;
    }
    public org.jsoup.helper.HttpConnection$KeyVal key(java.lang.String)
    {
        org.jsoup.helper.HttpConnection$KeyVal r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$KeyVal;

        $r1 := @parameter0: java.lang.String;

        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String,java.lang.String)>($r1, "Data key must not be empty");

        r0.<org.jsoup.helper.HttpConnection$KeyVal: java.lang.String key> = $r1;

        return r0;
    }
    public java.lang.String toString()
    {
        org.jsoup.helper.HttpConnection$KeyVal r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: org.jsoup.helper.HttpConnection$KeyVal;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.jsoup.helper.HttpConnection$KeyVal: java.lang.String key>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r2 = r0.<org.jsoup.helper.HttpConnection$KeyVal: java.lang.String value>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
    public java.lang.String value()
    {
        org.jsoup.helper.HttpConnection$KeyVal r0;
        java.lang.String r1;

        r0 := @this: org.jsoup.helper.HttpConnection$KeyVal;

        r1 = r0.<org.jsoup.helper.HttpConnection$KeyVal: java.lang.String value>;

        return r1;
    }
    public volatile org.jsoup.Connection$KeyVal value(java.lang.String)
    {
        org.jsoup.helper.HttpConnection$KeyVal r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$KeyVal;

        $r1 := @parameter0: java.lang.String;

        r0 = virtualinvoke r0.<org.jsoup.helper.HttpConnection$KeyVal: org.jsoup.helper.HttpConnection$KeyVal value(java.lang.String)>($r1);

        return r0;
    }
    public org.jsoup.helper.HttpConnection$KeyVal value(java.lang.String)
    {
        org.jsoup.helper.HttpConnection$KeyVal r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$KeyVal;

        $r1 := @parameter0: java.lang.String;

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>($r1, "Data value must not be null");

        r0.<org.jsoup.helper.HttpConnection$KeyVal: java.lang.String value> = $r1;

        return r0;
    }
