org.jsoup.helper.W3CDom$W3CBuilder extends java.lang.Object implements org.jsoup.select.NodeVisitor
private static final java.lang.String xmlnsKey
private static final java.lang.String xmlnsPrefix
private org.w3c.dom.Element dest
private final org.w3c.dom.Document doc
private final java.util.HashMap namespaces
    public void <init>(org.w3c.dom.Document)
    {
        org.jsoup.helper.W3CDom$W3CBuilder r0;
        org.w3c.dom.Document $r1;
        java.util.HashMap $r2;

        r0 := @this: org.jsoup.helper.W3CDom$W3CBuilder;

        $r1 := @parameter0: org.w3c.dom.Document;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.jsoup.helper.W3CDom$W3CBuilder: java.util.HashMap namespaces> = $r2;

        r0.<org.jsoup.helper.W3CDom$W3CBuilder: org.w3c.dom.Document doc> = $r1;

        return;
    }
    private void copyAttributes(org.jsoup.nodes.Node, org.w3c.dom.Element)
    {
        org.jsoup.helper.W3CDom$W3CBuilder r0;
        org.jsoup.nodes.Node $r1;
        org.w3c.dom.Element $r2;
        org.jsoup.nodes.Attributes $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        org.jsoup.nodes.Attribute r6;
        java.lang.String $r7, $r8;

        r0 := @this: org.jsoup.helper.W3CDom$W3CBuilder;

        $r1 := @parameter0: org.jsoup.nodes.Node;

        $r2 := @parameter1: org.w3c.dom.Element;

        $r3 = virtualinvoke $r1.<org.jsoup.nodes.Node: org.jsoup.nodes.Attributes attributes()>();

        $r4 = virtualinvoke $r3.<org.jsoup.nodes.Attributes: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.jsoup.nodes.Attribute) $r5;

        $r7 = virtualinvoke r6.<org.jsoup.nodes.Attribute: java.lang.String getKey()>();

        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[^-a-zA-Z0-9_:.]", "");

        $z0 = virtualinvoke $r7.<java.lang.String: boolean matches(java.lang.String)>("[a-zA-Z_:]{1}[-a-zA-Z0-9_:.]*");

        if $z0 == 0 goto label1;

        $r8 = virtualinvoke r6.<org.jsoup.nodes.Attribute: java.lang.String getValue()>();

        interfaceinvoke $r2.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>($r7, $r8);

        goto label1;

     label2:
        return;
    }
    private java.lang.String updateNamespaces(org.jsoup.nodes.Element)
    {
        org.jsoup.helper.W3CDom$W3CBuilder r0;
        org.jsoup.nodes.Element $r1;
        org.jsoup.nodes.Attributes $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.jsoup.nodes.Attribute r5;
        java.lang.String $r6, $r8;
        java.util.HashMap $r7;
        int $i0;

        r0 := @this: org.jsoup.helper.W3CDom$W3CBuilder;

        $r1 := @parameter0: org.jsoup.nodes.Element;

        $r2 = virtualinvoke $r1.<org.jsoup.nodes.Element: org.jsoup.nodes.Attributes attributes()>();

        $r3 = virtualinvoke $r2.<org.jsoup.nodes.Attributes: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.jsoup.nodes.Attribute) $r4;

        $r6 = virtualinvoke r5.<org.jsoup.nodes.Attribute: java.lang.String getKey()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z0 == 0 goto label3;

        $r6 = "";

     label2:
        $r7 = r0.<org.jsoup.helper.W3CDom$W3CBuilder: java.util.HashMap namespaces>;

        $r8 = virtualinvoke r5.<org.jsoup.nodes.Attribute: java.lang.String getValue()>();

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r8);

        goto label1;

     label3:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("xmlns:");

        if $z0 == 0 goto label1;

        $r8 = "xmlns:";

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int)>($i0);

        goto label2;

     label4:
        $r6 = virtualinvoke $r1.<org.jsoup.nodes.Element: java.lang.String tagName()>();

        $i0 = virtualinvoke $r6.<java.lang.String: int indexOf(java.lang.String)>(":");

        if $i0 <= 0 goto label5;

        $r6 = virtualinvoke $r1.<org.jsoup.nodes.Element: java.lang.String tagName()>();

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        return $r6;

     label5:
        return "";
    }
    public void head(org.jsoup.nodes.Node, int)
    {
        org.jsoup.helper.W3CDom$W3CBuilder r0;
        org.jsoup.nodes.Node $r1;
        int $i0;
        boolean $z0;
        org.jsoup.nodes.Element r2;
        java.lang.String $r3, $r7;
        java.util.HashMap $r4;
        java.lang.Object $r5;
        org.w3c.dom.Document $r6;
        org.w3c.dom.Element $r8, $r9;
        org.jsoup.nodes.TextNode r10;
        org.w3c.dom.Text $r11;
        org.jsoup.nodes.Comment r12;
        org.w3c.dom.Comment $r13;
        org.jsoup.nodes.DataNode r14;

        r0 := @this: org.jsoup.helper.W3CDom$W3CBuilder;

        $r1 := @parameter0: org.jsoup.nodes.Node;

        $i0 := @parameter1: int;

        $z0 = $r1 instanceof org.jsoup.nodes.Element;

        if $z0 == 0 goto label3;

        r2 = (org.jsoup.nodes.Element) $r1;

        $r3 = specialinvoke r0.<org.jsoup.helper.W3CDom$W3CBuilder: java.lang.String updateNamespaces(org.jsoup.nodes.Element)>(r2);

        $r4 = r0.<org.jsoup.helper.W3CDom$W3CBuilder: java.util.HashMap namespaces>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r3 = (java.lang.String) $r5;

        $r6 = r0.<org.jsoup.helper.W3CDom$W3CBuilder: org.w3c.dom.Document doc>;

        $r7 = virtualinvoke r2.<org.jsoup.nodes.Element: java.lang.String tagName()>();

        $r8 = interfaceinvoke $r6.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>($r3, $r7);

        specialinvoke r0.<org.jsoup.helper.W3CDom$W3CBuilder: void copyAttributes(org.jsoup.nodes.Node,org.w3c.dom.Element)>(r2, $r8);

        $r9 = r0.<org.jsoup.helper.W3CDom$W3CBuilder: org.w3c.dom.Element dest>;

        if $r9 != null goto label2;

        $r6 = r0.<org.jsoup.helper.W3CDom$W3CBuilder: org.w3c.dom.Document doc>;

        interfaceinvoke $r6.<org.w3c.dom.Document: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r8);

     label1:
        r0.<org.jsoup.helper.W3CDom$W3CBuilder: org.w3c.dom.Element dest> = $r8;

        return;

     label2:
        $r9 = r0.<org.jsoup.helper.W3CDom$W3CBuilder: org.w3c.dom.Element dest>;

        interfaceinvoke $r9.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r8);

        goto label1;

     label3:
        $z0 = $r1 instanceof org.jsoup.nodes.TextNode;

        if $z0 == 0 goto label4;

        r10 = (org.jsoup.nodes.TextNode) $r1;

        $r6 = r0.<org.jsoup.helper.W3CDom$W3CBuilder: org.w3c.dom.Document doc>;

        $r3 = virtualinvoke r10.<org.jsoup.nodes.TextNode: java.lang.String getWholeText()>();

        $r11 = interfaceinvoke $r6.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r3);

        $r8 = r0.<org.jsoup.helper.W3CDom$W3CBuilder: org.w3c.dom.Element dest>;

        interfaceinvoke $r8.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r11);

        return;

     label4:
        $z0 = $r1 instanceof org.jsoup.nodes.Comment;

        if $z0 == 0 goto label5;

        r12 = (org.jsoup.nodes.Comment) $r1;

        $r6 = r0.<org.jsoup.helper.W3CDom$W3CBuilder: org.w3c.dom.Document doc>;

        $r3 = virtualinvoke r12.<org.jsoup.nodes.Comment: java.lang.String getData()>();

        $r13 = interfaceinvoke $r6.<org.w3c.dom.Document: org.w3c.dom.Comment createComment(java.lang.String)>($r3);

        $r8 = r0.<org.jsoup.helper.W3CDom$W3CBuilder: org.w3c.dom.Element dest>;

        interfaceinvoke $r8.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r13);

        return;

     label5:
        $z0 = $r1 instanceof org.jsoup.nodes.DataNode;

        if $z0 == 0 goto label6;

        r14 = (org.jsoup.nodes.DataNode) $r1;

        $r6 = r0.<org.jsoup.helper.W3CDom$W3CBuilder: org.w3c.dom.Document doc>;

        $r3 = virtualinvoke r14.<org.jsoup.nodes.DataNode: java.lang.String getWholeData()>();

        $r11 = interfaceinvoke $r6.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r3);

        $r8 = r0.<org.jsoup.helper.W3CDom$W3CBuilder: org.w3c.dom.Element dest>;

        interfaceinvoke $r8.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r11);

     label6:
        return;
    }
    public void tail(org.jsoup.nodes.Node, int)
    {
        org.jsoup.helper.W3CDom$W3CBuilder r0;
        org.jsoup.nodes.Node $r1;
        int $i0;
        boolean $z0;
        org.w3c.dom.Element $r2;
        org.w3c.dom.Node $r3;

        r0 := @this: org.jsoup.helper.W3CDom$W3CBuilder;

        $r1 := @parameter0: org.jsoup.nodes.Node;

        $i0 := @parameter1: int;

        $z0 = $r1 instanceof org.jsoup.nodes.Element;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.jsoup.helper.W3CDom$W3CBuilder: org.w3c.dom.Element dest>;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Element: org.w3c.dom.Node getParentNode()>();

        $z0 = $r3 instanceof org.w3c.dom.Element;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.jsoup.helper.W3CDom$W3CBuilder: org.w3c.dom.Element dest>;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Element: org.w3c.dom.Node getParentNode()>();

        $r2 = (org.w3c.dom.Element) $r3;

        r0.<org.jsoup.helper.W3CDom$W3CBuilder: org.w3c.dom.Element dest> = $r2;

     label1:
        return;
    }
