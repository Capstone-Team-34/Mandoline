org.jsoup.helper.W3CDom extends java.lang.Object
protected javax.xml.parsers.DocumentBuilderFactory factory
    public void <init>()
    {
        org.jsoup.helper.W3CDom r0;
        javax.xml.parsers.DocumentBuilderFactory $r1;

        r0 := @this: org.jsoup.helper.W3CDom;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        r0.<org.jsoup.helper.W3CDom: javax.xml.parsers.DocumentBuilderFactory factory> = $r1;

        return;
    }
    public java.lang.String asString(org.w3c.dom.Document)
    {
        org.jsoup.helper.W3CDom r0;
        org.w3c.dom.Document $r1;
        javax.xml.transform.dom.DOMSource r2;
        javax.xml.transform.TransformerException r3;
        javax.xml.transform.stream.StreamResult r4;
        java.io.StringWriter r5;
        javax.xml.transform.TransformerFactory $r6;
        javax.xml.transform.Transformer $r7;
        java.lang.String $r8;
        java.lang.IllegalStateException $r9;

        r0 := @this: org.jsoup.helper.W3CDom;

        $r1 := @parameter0: org.w3c.dom.Document;

        r2 = new javax.xml.transform.dom.DOMSource;

     label1:
        specialinvoke r2.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>($r1);

     label2:
        r5 = new java.io.StringWriter;

     label3:
        specialinvoke r5.<java.io.StringWriter: void <init>()>();

     label4:
        r4 = new javax.xml.transform.stream.StreamResult;

     label5:
        specialinvoke r4.<javax.xml.transform.stream.StreamResult: void <init>(java.io.Writer)>(r5);

        $r6 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance()>();

        $r7 = virtualinvoke $r6.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer()>();

        virtualinvoke $r7.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>(r2, r4);

        $r8 = virtualinvoke r5.<java.io.StringWriter: java.lang.String toString()>();

     label6:
        return $r8;

     label7:
        r3 := @caughtexception;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(r3);

        throw $r9;

        catch javax.xml.transform.TransformerException from label1 to label2 with label7;
        catch javax.xml.transform.TransformerException from label3 to label4 with label7;
        catch javax.xml.transform.TransformerException from label5 to label6 with label7;
    }
    public void convert(org.jsoup.nodes.Document, org.w3c.dom.Document)
    {
        org.jsoup.helper.W3CDom r0;
        org.jsoup.nodes.Document $r1;
        org.w3c.dom.Document $r2;
        org.jsoup.select.NodeTraversor r3;
        java.lang.String $r4;
        boolean $z0;
        org.jsoup.nodes.Element $r5;
        org.jsoup.helper.W3CDom$W3CBuilder $r6;

        r0 := @this: org.jsoup.helper.W3CDom;

        $r1 := @parameter0: org.jsoup.nodes.Document;

        $r2 := @parameter1: org.w3c.dom.Document;

        $r4 = virtualinvoke $r1.<org.jsoup.nodes.Document: java.lang.String location()>();

        $z0 = staticinvoke <org.jsoup.helper.StringUtil: boolean isBlank(java.lang.String)>($r4);

        if $z0 != 0 goto label1;

        $r4 = virtualinvoke $r1.<org.jsoup.nodes.Document: java.lang.String location()>();

        interfaceinvoke $r2.<org.w3c.dom.Document: void setDocumentURI(java.lang.String)>($r4);

     label1:
        $r5 = virtualinvoke $r1.<org.jsoup.nodes.Document: org.jsoup.nodes.Element child(int)>(0);

        r3 = new org.jsoup.select.NodeTraversor;

        $r6 = new org.jsoup.helper.W3CDom$W3CBuilder;

        specialinvoke $r6.<org.jsoup.helper.W3CDom$W3CBuilder: void <init>(org.w3c.dom.Document)>($r2);

        specialinvoke r3.<org.jsoup.select.NodeTraversor: void <init>(org.jsoup.select.NodeVisitor)>($r6);

        virtualinvoke r3.<org.jsoup.select.NodeTraversor: void traverse(org.jsoup.nodes.Node)>($r5);

        return;
    }
    public org.w3c.dom.Document fromJsoup(org.jsoup.nodes.Document)
    {
        org.jsoup.helper.W3CDom r0;
        org.jsoup.nodes.Document $r1;
        javax.xml.parsers.ParserConfigurationException r2;
        javax.xml.parsers.DocumentBuilderFactory $r3;
        javax.xml.parsers.DocumentBuilder $r4;
        org.w3c.dom.Document $r5;
        java.lang.IllegalStateException $r6;

        r0 := @this: org.jsoup.helper.W3CDom;

        $r1 := @parameter0: org.jsoup.nodes.Document;

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>($r1);

        $r3 = r0.<org.jsoup.helper.W3CDom: javax.xml.parsers.DocumentBuilderFactory factory>;

     label1:
        virtualinvoke $r3.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>(1);

     label2:
        $r3 = r0.<org.jsoup.helper.W3CDom: javax.xml.parsers.DocumentBuilderFactory factory>;

     label3:
        $r4 = virtualinvoke $r3.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r5 = virtualinvoke $r4.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>();

        virtualinvoke r0.<org.jsoup.helper.W3CDom: void convert(org.jsoup.nodes.Document,org.w3c.dom.Document)>($r1, $r5);

     label4:
        return $r5;

     label5:
        r2 := @caughtexception;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(r2);

        throw $r6;

        catch javax.xml.parsers.ParserConfigurationException from label1 to label2 with label5;
        catch javax.xml.parsers.ParserConfigurationException from label3 to label4 with label5;
    }
