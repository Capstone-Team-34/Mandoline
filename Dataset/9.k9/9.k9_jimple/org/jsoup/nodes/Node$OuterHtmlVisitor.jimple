org.jsoup.nodes.Node$OuterHtmlVisitor extends java.lang.Object implements org.jsoup.select.NodeVisitor
private java.lang.Appendable accum
private org.jsoup.nodes.Document$OutputSettings out
    void <init>(java.lang.Appendable, org.jsoup.nodes.Document$OutputSettings)
    {
        org.jsoup.nodes.Node$OuterHtmlVisitor r0;
        java.lang.Appendable $r1;
        org.jsoup.nodes.Document$OutputSettings $r2;

        r0 := @this: org.jsoup.nodes.Node$OuterHtmlVisitor;

        $r1 := @parameter0: java.lang.Appendable;

        $r2 := @parameter1: org.jsoup.nodes.Document$OutputSettings;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.jsoup.nodes.Node$OuterHtmlVisitor: java.lang.Appendable accum> = $r1;

        r0.<org.jsoup.nodes.Node$OuterHtmlVisitor: org.jsoup.nodes.Document$OutputSettings out> = $r2;

        return;
    }
    public void head(org.jsoup.nodes.Node, int)
    {
        org.jsoup.nodes.Node$OuterHtmlVisitor r0;
        org.jsoup.nodes.Node $r1;
        int $i0;
        java.io.IOException r2;
        org.jsoup.nodes.Document$OutputSettings $r3;
        java.lang.Appendable $r4;
        org.jsoup.SerializationException $r5;

        r0 := @this: org.jsoup.nodes.Node$OuterHtmlVisitor;

        $r1 := @parameter0: org.jsoup.nodes.Node;

        $i0 := @parameter1: int;

        $r4 = r0.<org.jsoup.nodes.Node$OuterHtmlVisitor: java.lang.Appendable accum>;

        $r3 = r0.<org.jsoup.nodes.Node$OuterHtmlVisitor: org.jsoup.nodes.Document$OutputSettings out>;

     label1:
        virtualinvoke $r1.<org.jsoup.nodes.Node: void outerHtmlHead(java.lang.Appendable,int,org.jsoup.nodes.Document$OutputSettings)>($r4, $i0, $r3);

     label2:
        return;

     label3:
        r2 := @caughtexception;

        $r5 = new org.jsoup.SerializationException;

        specialinvoke $r5.<org.jsoup.SerializationException: void <init>(java.lang.Throwable)>(r2);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public void tail(org.jsoup.nodes.Node, int)
    {
        org.jsoup.nodes.Node$OuterHtmlVisitor r0;
        org.jsoup.nodes.Node $r1;
        int $i0;
        java.io.IOException r2;
        java.lang.String $r3;
        boolean $z0;
        java.lang.Appendable $r4;
        org.jsoup.nodes.Document$OutputSettings $r5;
        org.jsoup.SerializationException $r6;

        r0 := @this: org.jsoup.nodes.Node$OuterHtmlVisitor;

        $r1 := @parameter0: org.jsoup.nodes.Node;

        $i0 := @parameter1: int;

        $r3 = virtualinvoke $r1.<org.jsoup.nodes.Node: java.lang.String nodeName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("#text");

        if $z0 != 0 goto label4;

        $r4 = r0.<org.jsoup.nodes.Node$OuterHtmlVisitor: java.lang.Appendable accum>;

        $r5 = r0.<org.jsoup.nodes.Node$OuterHtmlVisitor: org.jsoup.nodes.Document$OutputSettings out>;

     label1:
        virtualinvoke $r1.<org.jsoup.nodes.Node: void outerHtmlTail(java.lang.Appendable,int,org.jsoup.nodes.Document$OutputSettings)>($r4, $i0, $r5);

     label2:
        return;

     label3:
        r2 := @caughtexception;

        $r6 = new org.jsoup.SerializationException;

        specialinvoke $r6.<org.jsoup.SerializationException: void <init>(java.lang.Throwable)>(r2);

        throw $r6;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
