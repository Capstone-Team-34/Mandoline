org.jsoup.nodes.XmlDeclaration extends org.jsoup.nodes.Node
private final boolean isProcessingInstruction
private final java.lang.String name
    public void <init>(java.lang.String, java.lang.String, boolean)
    {
        org.jsoup.nodes.XmlDeclaration r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: org.jsoup.nodes.XmlDeclaration;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        specialinvoke r0.<org.jsoup.nodes.Node: void <init>(java.lang.String)>($r2);

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>($r1);

        r0.<org.jsoup.nodes.XmlDeclaration: java.lang.String name> = $r1;

        r0.<org.jsoup.nodes.XmlDeclaration: boolean isProcessingInstruction> = $z0;

        return;
    }
    public java.lang.String getWholeDeclaration()
    {
        org.jsoup.nodes.XmlDeclaration r0;
        org.jsoup.nodes.Attributes $r1;
        java.lang.String $r2;

        r0 := @this: org.jsoup.nodes.XmlDeclaration;

        $r1 = r0.<org.jsoup.nodes.XmlDeclaration: org.jsoup.nodes.Attributes attributes>;

        $r2 = virtualinvoke $r1.<org.jsoup.nodes.Attributes: java.lang.String html()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        return $r2;
    }
    public java.lang.String name()
    {
        org.jsoup.nodes.XmlDeclaration r0;
        java.lang.String r1;

        r0 := @this: org.jsoup.nodes.XmlDeclaration;

        r1 = r0.<org.jsoup.nodes.XmlDeclaration: java.lang.String name>;

        return r1;
    }
    public java.lang.String nodeName()
    {
        org.jsoup.nodes.XmlDeclaration r0;

        r0 := @this: org.jsoup.nodes.XmlDeclaration;

        return "#declaration";
    }
    void outerHtmlHead(java.lang.Appendable, int, org.jsoup.nodes.Document$OutputSettings) throws java.io.IOException
    {
        org.jsoup.nodes.XmlDeclaration r0;
        java.lang.Appendable $r1, $r3;
        int $i0;
        org.jsoup.nodes.Document$OutputSettings $r2;
        boolean $z0;
        java.lang.String $r4;
        org.jsoup.nodes.Attributes $r5;

        r0 := @this: org.jsoup.nodes.XmlDeclaration;

        $r1 := @parameter0: java.lang.Appendable;

        $i0 := @parameter1: int;

        $r2 := @parameter2: org.jsoup.nodes.Document$OutputSettings;

        $r3 = interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("<");

        $z0 = r0.<org.jsoup.nodes.XmlDeclaration: boolean isProcessingInstruction>;

        if $z0 == 0 goto label3;

        $r4 = "!";

     label1:
        $r3 = interfaceinvoke $r3.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r4);

        $r4 = r0.<org.jsoup.nodes.XmlDeclaration: java.lang.String name>;

        interfaceinvoke $r3.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r4);

        $r5 = r0.<org.jsoup.nodes.XmlDeclaration: org.jsoup.nodes.Attributes attributes>;

        virtualinvoke $r5.<org.jsoup.nodes.Attributes: void html(java.lang.Appendable,org.jsoup.nodes.Document$OutputSettings)>($r1, $r2);

        $z0 = r0.<org.jsoup.nodes.XmlDeclaration: boolean isProcessingInstruction>;

        if $z0 == 0 goto label4;

        $r4 = "!";

     label2:
        $r1 = interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r4);

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>(">");

        return;

     label3:
        $r4 = "?";

        goto label1;

     label4:
        $r4 = "?";

        goto label2;
    }
    void outerHtmlTail(java.lang.Appendable, int, org.jsoup.nodes.Document$OutputSettings)
    {
        org.jsoup.nodes.XmlDeclaration r0;
        java.lang.Appendable $r1;
        int $i0;
        org.jsoup.nodes.Document$OutputSettings $r2;

        r0 := @this: org.jsoup.nodes.XmlDeclaration;

        $r1 := @parameter0: java.lang.Appendable;

        $i0 := @parameter1: int;

        $r2 := @parameter2: org.jsoup.nodes.Document$OutputSettings;

        return;
    }
    public java.lang.String toString()
    {
        org.jsoup.nodes.XmlDeclaration r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.nodes.XmlDeclaration;

        $r1 = virtualinvoke r0.<org.jsoup.nodes.XmlDeclaration: java.lang.String outerHtml()>();

        return $r1;
    }
