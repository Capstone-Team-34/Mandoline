org.jsoup.parser.HtmlTreeBuilderState$1 extends org.jsoup.parser.HtmlTreeBuilderState
    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.HtmlTreeBuilderState$1 r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$1;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>($r1, $i0, null);

        return;
    }
    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$1 r0;
        org.jsoup.parser.Token $r1;
        org.jsoup.parser.HtmlTreeBuilder $r2;
        org.jsoup.nodes.DocumentType r3;
        boolean $z0;
        org.jsoup.parser.Token$Comment $r4;
        org.jsoup.parser.Token$Doctype $r5;
        org.jsoup.parser.ParseSettings $r6;
        java.lang.String $r7, $r8, $r9, $r10, $r11;
        org.jsoup.nodes.Document $r12;
        org.jsoup.nodes.Document$QuirksMode $r13;
        org.jsoup.parser.HtmlTreeBuilderState $r14;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$1;

        $r1 := @parameter0: org.jsoup.parser.Token;

        $r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;

        $z0 = staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: boolean access$100(org.jsoup.parser.Token)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke $r1.<org.jsoup.parser.Token: boolean isComment()>();

        if $z0 == 0 goto label3;

        $r4 = virtualinvoke $r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Comment asComment()>();

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Comment)>($r4);

     label2:
        return 1;

     label3:
        $z0 = virtualinvoke $r1.<org.jsoup.parser.Token: boolean isDoctype()>();

        if $z0 == 0 goto label5;

        $r5 = virtualinvoke $r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Doctype asDoctype()>();

        r3 = new org.jsoup.nodes.DocumentType;

        $r6 = $r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.ParseSettings settings>;

        $r7 = virtualinvoke $r5.<org.jsoup.parser.Token$Doctype: java.lang.String getName()>();

        $r7 = virtualinvoke $r6.<org.jsoup.parser.ParseSettings: java.lang.String normalizeTag(java.lang.String)>($r7);

        $r8 = virtualinvoke $r5.<org.jsoup.parser.Token$Doctype: java.lang.String getPubSysKey()>();

        $r9 = virtualinvoke $r5.<org.jsoup.parser.Token$Doctype: java.lang.String getPublicIdentifier()>();

        $r10 = virtualinvoke $r5.<org.jsoup.parser.Token$Doctype: java.lang.String getSystemIdentifier()>();

        $r11 = virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: java.lang.String getBaseUri()>();

        specialinvoke r3.<org.jsoup.nodes.DocumentType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r7, $r8, $r9, $r10, $r11);

        $r12 = virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Document getDocument()>();

        virtualinvoke $r12.<org.jsoup.nodes.Document: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>(r3);

        $z0 = virtualinvoke $r5.<org.jsoup.parser.Token$Doctype: boolean isForceQuirks()>();

        if $z0 == 0 goto label4;

        $r12 = virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Document getDocument()>();

        $r13 = <org.jsoup.nodes.Document$QuirksMode: org.jsoup.nodes.Document$QuirksMode quirks>;

        virtualinvoke $r12.<org.jsoup.nodes.Document: org.jsoup.nodes.Document quirksMode(org.jsoup.nodes.Document$QuirksMode)>($r13);

     label4:
        $r14 = <org.jsoup.parser.HtmlTreeBuilderState$1: org.jsoup.parser.HtmlTreeBuilderState BeforeHtml>;

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r14);

        goto label2;

     label5:
        $r14 = <org.jsoup.parser.HtmlTreeBuilderState$1: org.jsoup.parser.HtmlTreeBuilderState BeforeHtml>;

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r14);

        $z0 = virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r1);

        return $z0;
    }
