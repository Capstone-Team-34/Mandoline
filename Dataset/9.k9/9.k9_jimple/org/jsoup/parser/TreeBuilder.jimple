org.jsoup.parser.TreeBuilder extends java.lang.Object
protected java.lang.String baseUri
protected org.jsoup.parser.Token currentToken
protected org.jsoup.nodes.Document doc
private org.jsoup.parser.Token$EndTag end
protected org.jsoup.parser.ParseErrorList errors
org.jsoup.parser.CharacterReader reader
protected org.jsoup.parser.ParseSettings settings
protected java.util.ArrayList stack
private org.jsoup.parser.Token$StartTag start
org.jsoup.parser.Tokeniser tokeniser
    void <init>()
    {
        org.jsoup.parser.TreeBuilder r0;
        org.jsoup.parser.Token$StartTag $r1;
        org.jsoup.parser.Token$EndTag $r2;

        r0 := @this: org.jsoup.parser.TreeBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.jsoup.parser.Token$StartTag;

        specialinvoke $r1.<org.jsoup.parser.Token$StartTag: void <init>()>();

        r0.<org.jsoup.parser.TreeBuilder: org.jsoup.parser.Token$StartTag start> = $r1;

        $r2 = new org.jsoup.parser.Token$EndTag;

        specialinvoke $r2.<org.jsoup.parser.Token$EndTag: void <init>()>();

        r0.<org.jsoup.parser.TreeBuilder: org.jsoup.parser.Token$EndTag end> = $r2;

        return;
    }
    protected org.jsoup.nodes.Element currentElement()
    {
        org.jsoup.parser.TreeBuilder r0;
        int $i0;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        org.jsoup.nodes.Element $r3;

        r0 := @this: org.jsoup.parser.TreeBuilder;

        $r1 = r0.<org.jsoup.parser.TreeBuilder: java.util.ArrayList stack>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label1;

        $r1 = r0.<org.jsoup.parser.TreeBuilder: java.util.ArrayList stack>;

        $i0 = $i0 + -1;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (org.jsoup.nodes.Element) $r2;

        return $r3;

     label1:
        return null;
    }
abstract org.jsoup.parser.ParseSettings defaultSettings() { 
// no body
} 
    protected void initialiseParse(java.lang.String, java.lang.String, org.jsoup.parser.ParseErrorList, org.jsoup.parser.ParseSettings)
    {
        org.jsoup.parser.TreeBuilder r0;
        java.lang.String $r1, $r2;
        org.jsoup.parser.ParseErrorList $r3;
        org.jsoup.parser.ParseSettings $r4;
        org.jsoup.nodes.Document $r5;
        org.jsoup.parser.CharacterReader $r6;
        org.jsoup.parser.Tokeniser $r7;
        java.util.ArrayList $r8;

        r0 := @this: org.jsoup.parser.TreeBuilder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: org.jsoup.parser.ParseErrorList;

        $r4 := @parameter3: org.jsoup.parser.ParseSettings;

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>($r1, "String input must not be null");

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>($r2, "BaseURI must not be null");

        $r5 = new org.jsoup.nodes.Document;

        specialinvoke $r5.<org.jsoup.nodes.Document: void <init>(java.lang.String)>($r2);

        r0.<org.jsoup.parser.TreeBuilder: org.jsoup.nodes.Document doc> = $r5;

        r0.<org.jsoup.parser.TreeBuilder: org.jsoup.parser.ParseSettings settings> = $r4;

        $r6 = new org.jsoup.parser.CharacterReader;

        specialinvoke $r6.<org.jsoup.parser.CharacterReader: void <init>(java.lang.String)>($r1);

        r0.<org.jsoup.parser.TreeBuilder: org.jsoup.parser.CharacterReader reader> = $r6;

        r0.<org.jsoup.parser.TreeBuilder: org.jsoup.parser.ParseErrorList errors> = $r3;

        $r7 = new org.jsoup.parser.Tokeniser;

        $r6 = r0.<org.jsoup.parser.TreeBuilder: org.jsoup.parser.CharacterReader reader>;

        specialinvoke $r7.<org.jsoup.parser.Tokeniser: void <init>(org.jsoup.parser.CharacterReader,org.jsoup.parser.ParseErrorList)>($r6, $r3);

        r0.<org.jsoup.parser.TreeBuilder: org.jsoup.parser.Tokeniser tokeniser> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(32);

        r0.<org.jsoup.parser.TreeBuilder: java.util.ArrayList stack> = $r8;

        r0.<org.jsoup.parser.TreeBuilder: java.lang.String baseUri> = $r2;

        return;
    }
    org.jsoup.nodes.Document parse(java.lang.String, java.lang.String, org.jsoup.parser.ParseErrorList, org.jsoup.parser.ParseSettings)
    {
        org.jsoup.parser.TreeBuilder r0;
        java.lang.String $r1, $r2;
        org.jsoup.parser.ParseErrorList $r3;
        org.jsoup.parser.ParseSettings $r4;
        org.jsoup.nodes.Document r5;

        r0 := @this: org.jsoup.parser.TreeBuilder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: org.jsoup.parser.ParseErrorList;

        $r4 := @parameter3: org.jsoup.parser.ParseSettings;

        virtualinvoke r0.<org.jsoup.parser.TreeBuilder: void initialiseParse(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList,org.jsoup.parser.ParseSettings)>($r1, $r2, $r3, $r4);

        virtualinvoke r0.<org.jsoup.parser.TreeBuilder: void runParser()>();

        r5 = r0.<org.jsoup.parser.TreeBuilder: org.jsoup.nodes.Document doc>;

        return r5;
    }
protected abstract boolean process(org.jsoup.parser.Token) { 
// no body
} 
    protected boolean processEndTag(java.lang.String)
    {
        org.jsoup.parser.TreeBuilder r0;
        java.lang.String $r1;
        org.jsoup.parser.Token$EndTag $r2;
        org.jsoup.parser.Token $r3;
        org.jsoup.parser.Token$Tag $r4;
        boolean $z0;

        r0 := @this: org.jsoup.parser.TreeBuilder;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.jsoup.parser.TreeBuilder: org.jsoup.parser.Token currentToken>;

        $r2 = r0.<org.jsoup.parser.TreeBuilder: org.jsoup.parser.Token$EndTag end>;

        if $r3 != $r2 goto label1;

        $r2 = new org.jsoup.parser.Token$EndTag;

        specialinvoke $r2.<org.jsoup.parser.Token$EndTag: void <init>()>();

        $r4 = virtualinvoke $r2.<org.jsoup.parser.Token$EndTag: org.jsoup.parser.Token$Tag name(java.lang.String)>($r1);

        $z0 = virtualinvoke r0.<org.jsoup.parser.TreeBuilder: boolean process(org.jsoup.parser.Token)>($r4);

        return $z0;

     label1:
        $r2 = r0.<org.jsoup.parser.TreeBuilder: org.jsoup.parser.Token$EndTag end>;

        $r4 = virtualinvoke $r2.<org.jsoup.parser.Token$EndTag: org.jsoup.parser.Token$Tag reset()>();

        $r4 = virtualinvoke $r4.<org.jsoup.parser.Token$Tag: org.jsoup.parser.Token$Tag name(java.lang.String)>($r1);

        $z0 = virtualinvoke r0.<org.jsoup.parser.TreeBuilder: boolean process(org.jsoup.parser.Token)>($r4);

        return $z0;
    }
    protected boolean processStartTag(java.lang.String)
    {
        org.jsoup.parser.TreeBuilder r0;
        java.lang.String $r1;
        org.jsoup.parser.Token$StartTag $r2;
        org.jsoup.parser.Token $r3;
        org.jsoup.parser.Token$Tag $r4;
        boolean $z0;

        r0 := @this: org.jsoup.parser.TreeBuilder;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.jsoup.parser.TreeBuilder: org.jsoup.parser.Token currentToken>;

        $r2 = r0.<org.jsoup.parser.TreeBuilder: org.jsoup.parser.Token$StartTag start>;

        if $r3 != $r2 goto label1;

        $r2 = new org.jsoup.parser.Token$StartTag;

        specialinvoke $r2.<org.jsoup.parser.Token$StartTag: void <init>()>();

        $r4 = virtualinvoke $r2.<org.jsoup.parser.Token$StartTag: org.jsoup.parser.Token$Tag name(java.lang.String)>($r1);

        $z0 = virtualinvoke r0.<org.jsoup.parser.TreeBuilder: boolean process(org.jsoup.parser.Token)>($r4);

        return $z0;

     label1:
        $r2 = r0.<org.jsoup.parser.TreeBuilder: org.jsoup.parser.Token$StartTag start>;

        $r4 = virtualinvoke $r2.<org.jsoup.parser.Token$StartTag: org.jsoup.parser.Token$Tag reset()>();

        $r4 = virtualinvoke $r4.<org.jsoup.parser.Token$Tag: org.jsoup.parser.Token$Tag name(java.lang.String)>($r1);

        $z0 = virtualinvoke r0.<org.jsoup.parser.TreeBuilder: boolean process(org.jsoup.parser.Token)>($r4);

        return $z0;
    }
    public boolean processStartTag(java.lang.String, org.jsoup.nodes.Attributes)
    {
        org.jsoup.parser.TreeBuilder r0;
        java.lang.String $r1;
        org.jsoup.nodes.Attributes $r2;
        org.jsoup.parser.Token$StartTag $r3;
        org.jsoup.parser.Token $r4;
        boolean $z0;

        r0 := @this: org.jsoup.parser.TreeBuilder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.jsoup.nodes.Attributes;

        $r4 = r0.<org.jsoup.parser.TreeBuilder: org.jsoup.parser.Token currentToken>;

        $r3 = r0.<org.jsoup.parser.TreeBuilder: org.jsoup.parser.Token$StartTag start>;

        if $r4 != $r3 goto label1;

        $r3 = new org.jsoup.parser.Token$StartTag;

        specialinvoke $r3.<org.jsoup.parser.Token$StartTag: void <init>()>();

        $r3 = virtualinvoke $r3.<org.jsoup.parser.Token$StartTag: org.jsoup.parser.Token$StartTag nameAttr(java.lang.String,org.jsoup.nodes.Attributes)>($r1, $r2);

        $z0 = virtualinvoke r0.<org.jsoup.parser.TreeBuilder: boolean process(org.jsoup.parser.Token)>($r3);

        return $z0;

     label1:
        $r3 = r0.<org.jsoup.parser.TreeBuilder: org.jsoup.parser.Token$StartTag start>;

        virtualinvoke $r3.<org.jsoup.parser.Token$StartTag: org.jsoup.parser.Token$Tag reset()>();

        $r3 = r0.<org.jsoup.parser.TreeBuilder: org.jsoup.parser.Token$StartTag start>;

        virtualinvoke $r3.<org.jsoup.parser.Token$StartTag: org.jsoup.parser.Token$StartTag nameAttr(java.lang.String,org.jsoup.nodes.Attributes)>($r1, $r2);

        $r3 = r0.<org.jsoup.parser.TreeBuilder: org.jsoup.parser.Token$StartTag start>;

        $z0 = virtualinvoke r0.<org.jsoup.parser.TreeBuilder: boolean process(org.jsoup.parser.Token)>($r3);

        return $z0;
    }
    protected void runParser()
    {
        org.jsoup.parser.TreeBuilder r0;
        org.jsoup.parser.Token$TokenType $r1, $r4;
        org.jsoup.parser.Token $r2;
        org.jsoup.parser.Tokeniser $r3;

        r0 := @this: org.jsoup.parser.TreeBuilder;

     label1:
        $r3 = r0.<org.jsoup.parser.TreeBuilder: org.jsoup.parser.Tokeniser tokeniser>;

        $r2 = virtualinvoke $r3.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token read()>();

        virtualinvoke r0.<org.jsoup.parser.TreeBuilder: boolean process(org.jsoup.parser.Token)>($r2);

        virtualinvoke $r2.<org.jsoup.parser.Token: org.jsoup.parser.Token reset()>();

        $r4 = $r2.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;

        $r1 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType EOF>;

        if $r4 != $r1 goto label1;

        return;
    }
