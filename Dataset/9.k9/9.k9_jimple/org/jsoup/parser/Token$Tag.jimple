org.jsoup.parser.Token$Tag extends org.jsoup.parser.Token
org.jsoup.nodes.Attributes attributes
private boolean hasEmptyAttributeValue
private boolean hasPendingAttributeValue
protected java.lang.String normalName
private java.lang.String pendingAttributeName
private java.lang.StringBuilder pendingAttributeValue
private java.lang.String pendingAttributeValueS
boolean selfClosing
protected java.lang.String tagName
    void <init>()
    {
        org.jsoup.parser.Token$Tag r0;
        java.lang.StringBuilder $r1;

        r0 := @this: org.jsoup.parser.Token$Tag;

        specialinvoke r0.<org.jsoup.parser.Token: void <init>(org.jsoup.parser.Token$1)>(null);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        r0.<org.jsoup.parser.Token$Tag: java.lang.StringBuilder pendingAttributeValue> = $r1;

        r0.<org.jsoup.parser.Token$Tag: boolean hasEmptyAttributeValue> = 0;

        r0.<org.jsoup.parser.Token$Tag: boolean hasPendingAttributeValue> = 0;

        r0.<org.jsoup.parser.Token$Tag: boolean selfClosing> = 0;

        return;
    }
    private void ensureAttributeValue()
    {
        org.jsoup.parser.Token$Tag r0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;

        r0 := @this: org.jsoup.parser.Token$Tag;

        r0.<org.jsoup.parser.Token$Tag: boolean hasPendingAttributeValue> = 1;

        $r1 = r0.<org.jsoup.parser.Token$Tag: java.lang.String pendingAttributeValueS>;

        if $r1 == null goto label1;

        $r2 = r0.<org.jsoup.parser.Token$Tag: java.lang.StringBuilder pendingAttributeValue>;

        $r1 = r0.<org.jsoup.parser.Token$Tag: java.lang.String pendingAttributeValueS>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        r0.<org.jsoup.parser.Token$Tag: java.lang.String pendingAttributeValueS> = null;

     label1:
        return;
    }
    final void appendAttributeName(char)
    {
        org.jsoup.parser.Token$Tag r0;
        char $c0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.parser.Token$Tag;

        $c0 := @parameter0: char;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c0);

        virtualinvoke r0.<org.jsoup.parser.Token$Tag: void appendAttributeName(java.lang.String)>($r1);

        return;
    }
    final void appendAttributeName(java.lang.String)
    {
        org.jsoup.parser.Token$Tag r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.jsoup.parser.Token$Tag;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.jsoup.parser.Token$Tag: java.lang.String pendingAttributeName>;

        if $r2 != null goto label2;

     label1:
        r0.<org.jsoup.parser.Token$Tag: java.lang.String pendingAttributeName> = $r1;

        return;

     label2:
        $r2 = r0.<org.jsoup.parser.Token$Tag: java.lang.String pendingAttributeName>;

        $r1 = virtualinvoke $r2.<java.lang.String: java.lang.String concat(java.lang.String)>($r1);

        goto label1;
    }
    final void appendAttributeValue(char)
    {
        org.jsoup.parser.Token$Tag r0;
        char $c0;
        java.lang.StringBuilder $r1;

        r0 := @this: org.jsoup.parser.Token$Tag;

        $c0 := @parameter0: char;

        specialinvoke r0.<org.jsoup.parser.Token$Tag: void ensureAttributeValue()>();

        $r1 = r0.<org.jsoup.parser.Token$Tag: java.lang.StringBuilder pendingAttributeValue>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        return;
    }
    final void appendAttributeValue(java.lang.String)
    {
        org.jsoup.parser.Token$Tag r0;
        java.lang.String $r1;
        int $i0;
        java.lang.StringBuilder $r2;

        r0 := @this: org.jsoup.parser.Token$Tag;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.jsoup.parser.Token$Tag: void ensureAttributeValue()>();

        $r2 = r0.<org.jsoup.parser.Token$Tag: java.lang.StringBuilder pendingAttributeValue>;

        $i0 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if $i0 != 0 goto label1;

        r0.<org.jsoup.parser.Token$Tag: java.lang.String pendingAttributeValueS> = $r1;

        return;

     label1:
        $r2 = r0.<org.jsoup.parser.Token$Tag: java.lang.StringBuilder pendingAttributeValue>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        return;
    }
    final void appendAttributeValue(char[])
    {
        org.jsoup.parser.Token$Tag r0;
        char[] $r1;
        java.lang.StringBuilder $r2;

        r0 := @this: org.jsoup.parser.Token$Tag;

        $r1 := @parameter0: char[];

        specialinvoke r0.<org.jsoup.parser.Token$Tag: void ensureAttributeValue()>();

        $r2 = r0.<org.jsoup.parser.Token$Tag: java.lang.StringBuilder pendingAttributeValue>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>($r1);

        return;
    }
    final void appendAttributeValue(int[])
    {
        org.jsoup.parser.Token$Tag r0;
        int[] $r1;
        int i0, $i1, $i2;
        java.lang.StringBuilder $r2;

        r0 := @this: org.jsoup.parser.Token$Tag;

        $r1 := @parameter0: int[];

        specialinvoke r0.<org.jsoup.parser.Token$Tag: void ensureAttributeValue()>();

        $i1 = lengthof $r1;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        i0 = $r1[$i2];

        $r2 = r0.<org.jsoup.parser.Token$Tag: java.lang.StringBuilder pendingAttributeValue>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder appendCodePoint(int)>(i0);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }
    final void appendTagName(char)
    {
        org.jsoup.parser.Token$Tag r0;
        char $c0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.parser.Token$Tag;

        $c0 := @parameter0: char;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c0);

        virtualinvoke r0.<org.jsoup.parser.Token$Tag: void appendTagName(java.lang.String)>($r1);

        return;
    }
    final void appendTagName(java.lang.String)
    {
        org.jsoup.parser.Token$Tag r0;
        java.lang.String r1, $r2;

        r0 := @this: org.jsoup.parser.Token$Tag;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.jsoup.parser.Token$Tag: java.lang.String tagName>;

        if $r2 != null goto label2;

     label1:
        r0.<org.jsoup.parser.Token$Tag: java.lang.String tagName> = r1;

        r1 = r0.<org.jsoup.parser.Token$Tag: java.lang.String tagName>;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        r0.<org.jsoup.parser.Token$Tag: java.lang.String normalName> = r1;

        return;

     label2:
        $r2 = r0.<org.jsoup.parser.Token$Tag: java.lang.String tagName>;

        r1 = virtualinvoke $r2.<java.lang.String: java.lang.String concat(java.lang.String)>(r1);

        goto label1;
    }
    final void finaliseTag()
    {
        org.jsoup.parser.Token$Tag r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.parser.Token$Tag;

        $r1 = r0.<org.jsoup.parser.Token$Tag: java.lang.String pendingAttributeName>;

        if $r1 == null goto label1;

        virtualinvoke r0.<org.jsoup.parser.Token$Tag: void newAttribute()>();

     label1:
        return;
    }
    final org.jsoup.nodes.Attributes getAttributes()
    {
        org.jsoup.parser.Token$Tag r0;
        org.jsoup.nodes.Attributes r1;

        r0 := @this: org.jsoup.parser.Token$Tag;

        r1 = r0.<org.jsoup.parser.Token$Tag: org.jsoup.nodes.Attributes attributes>;

        return r1;
    }
    final boolean isSelfClosing()
    {
        org.jsoup.parser.Token$Tag r0;
        boolean z0;

        r0 := @this: org.jsoup.parser.Token$Tag;

        z0 = r0.<org.jsoup.parser.Token$Tag: boolean selfClosing>;

        return z0;
    }
    final java.lang.String name()
    {
        org.jsoup.parser.Token$Tag r0;
        int $i0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.jsoup.parser.Token$Tag;

        $r1 = r0.<org.jsoup.parser.Token$Tag: java.lang.String tagName>;

        if $r1 == null goto label1;

        $r1 = r0.<org.jsoup.parser.Token$Tag: java.lang.String tagName>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

     label1:
        $z0 = 1;

     label2:
        staticinvoke <org.jsoup.helper.Validate: void isFalse(boolean)>($z0);

        $r1 = r0.<org.jsoup.parser.Token$Tag: java.lang.String tagName>;

        return $r1;

     label3:
        $z0 = 0;

        goto label2;
    }
    final org.jsoup.parser.Token$Tag name(java.lang.String)
    {
        org.jsoup.parser.Token$Tag r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.parser.Token$Tag;

        $r1 := @parameter0: java.lang.String;

        r0.<org.jsoup.parser.Token$Tag: java.lang.String tagName> = $r1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        r0.<org.jsoup.parser.Token$Tag: java.lang.String normalName> = $r1;

        return r0;
    }
    final void newAttribute()
    {
        org.jsoup.parser.Token$Tag r0;
        org.jsoup.nodes.Attributes $r1, $r6;
        java.lang.String $r2, $r5;
        boolean $z0;
        org.jsoup.nodes.Attribute r3, $r7;
        java.lang.StringBuilder $r4;
        int $i0;
        org.jsoup.nodes.BooleanAttribute $r8;

        r0 := @this: org.jsoup.parser.Token$Tag;

        $r1 = r0.<org.jsoup.parser.Token$Tag: org.jsoup.nodes.Attributes attributes>;

        if $r1 != null goto label1;

        $r6 = new org.jsoup.nodes.Attributes;

        specialinvoke $r6.<org.jsoup.nodes.Attributes: void <init>()>();

        r0.<org.jsoup.parser.Token$Tag: org.jsoup.nodes.Attributes attributes> = $r6;

     label1:
        $r2 = r0.<org.jsoup.parser.Token$Tag: java.lang.String pendingAttributeName>;

        if $r2 == null goto label4;

        $z0 = r0.<org.jsoup.parser.Token$Tag: boolean hasPendingAttributeValue>;

        if $z0 == 0 goto label6;

        $r7 = new org.jsoup.nodes.Attribute;

        r3 = $r7;

        $r2 = r0.<org.jsoup.parser.Token$Tag: java.lang.String pendingAttributeName>;

        $r4 = r0.<org.jsoup.parser.Token$Tag: java.lang.StringBuilder pendingAttributeValue>;

        $i0 = virtualinvoke $r4.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label5;

        $r4 = r0.<org.jsoup.parser.Token$Tag: java.lang.StringBuilder pendingAttributeValue>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        specialinvoke $r7.<org.jsoup.nodes.Attribute: void <init>(java.lang.String,java.lang.String)>($r2, $r5);

     label3:
        $r1 = r0.<org.jsoup.parser.Token$Tag: org.jsoup.nodes.Attributes attributes>;

        virtualinvoke $r1.<org.jsoup.nodes.Attributes: void put(org.jsoup.nodes.Attribute)>(r3);

     label4:
        r0.<org.jsoup.parser.Token$Tag: java.lang.String pendingAttributeName> = null;

        r0.<org.jsoup.parser.Token$Tag: boolean hasEmptyAttributeValue> = 0;

        r0.<org.jsoup.parser.Token$Tag: boolean hasPendingAttributeValue> = 0;

        $r4 = r0.<org.jsoup.parser.Token$Tag: java.lang.StringBuilder pendingAttributeValue>;

        staticinvoke <org.jsoup.parser.Token$Tag: void reset(java.lang.StringBuilder)>($r4);

        r0.<org.jsoup.parser.Token$Tag: java.lang.String pendingAttributeValueS> = null;

        return;

     label5:
        $r5 = r0.<org.jsoup.parser.Token$Tag: java.lang.String pendingAttributeValueS>;

        goto label2;

     label6:
        $z0 = r0.<org.jsoup.parser.Token$Tag: boolean hasEmptyAttributeValue>;

        if $z0 == 0 goto label7;

        $r7 = new org.jsoup.nodes.Attribute;

        r3 = $r7;

        $r2 = r0.<org.jsoup.parser.Token$Tag: java.lang.String pendingAttributeName>;

        specialinvoke $r7.<org.jsoup.nodes.Attribute: void <init>(java.lang.String,java.lang.String)>($r2, "");

        goto label3;

     label7:
        $r8 = new org.jsoup.nodes.BooleanAttribute;

        r3 = $r8;

        $r2 = r0.<org.jsoup.parser.Token$Tag: java.lang.String pendingAttributeName>;

        specialinvoke $r8.<org.jsoup.nodes.BooleanAttribute: void <init>(java.lang.String)>($r2);

        goto label3;
    }
    final java.lang.String normalName()
    {
        org.jsoup.parser.Token$Tag r0;
        java.lang.String r1;

        r0 := @this: org.jsoup.parser.Token$Tag;

        r1 = r0.<org.jsoup.parser.Token$Tag: java.lang.String normalName>;

        return r1;
    }
    org.jsoup.parser.Token$Tag reset()
    {
        org.jsoup.parser.Token$Tag r0;
        java.lang.StringBuilder $r1;

        r0 := @this: org.jsoup.parser.Token$Tag;

        r0.<org.jsoup.parser.Token$Tag: java.lang.String tagName> = null;

        r0.<org.jsoup.parser.Token$Tag: java.lang.String normalName> = null;

        r0.<org.jsoup.parser.Token$Tag: java.lang.String pendingAttributeName> = null;

        $r1 = r0.<org.jsoup.parser.Token$Tag: java.lang.StringBuilder pendingAttributeValue>;

        staticinvoke <org.jsoup.parser.Token$Tag: void reset(java.lang.StringBuilder)>($r1);

        r0.<org.jsoup.parser.Token$Tag: java.lang.String pendingAttributeValueS> = null;

        r0.<org.jsoup.parser.Token$Tag: boolean hasEmptyAttributeValue> = 0;

        r0.<org.jsoup.parser.Token$Tag: boolean hasPendingAttributeValue> = 0;

        r0.<org.jsoup.parser.Token$Tag: boolean selfClosing> = 0;

        r0.<org.jsoup.parser.Token$Tag: org.jsoup.nodes.Attributes attributes> = null;

        return r0;
    }
    volatile org.jsoup.parser.Token reset()
    {
        org.jsoup.parser.Token$Tag r0;

        r0 := @this: org.jsoup.parser.Token$Tag;

        r0 = virtualinvoke r0.<org.jsoup.parser.Token$Tag: org.jsoup.parser.Token$Tag reset()>();

        return r0;
    }
    final void setEmptyAttributeValue()
    {
        org.jsoup.parser.Token$Tag r0;

        r0 := @this: org.jsoup.parser.Token$Tag;

        r0.<org.jsoup.parser.Token$Tag: boolean hasEmptyAttributeValue> = 1;

        return;
    }
