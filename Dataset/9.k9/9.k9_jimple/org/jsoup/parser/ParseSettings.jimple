org.jsoup.parser.ParseSettings extends java.lang.Object
public static final org.jsoup.parser.ParseSettings htmlDefault
public static final org.jsoup.parser.ParseSettings preserveCase
private final boolean preserveAttributeCase
private final boolean preserveTagCase
    static void <clinit>()
    {
        org.jsoup.parser.ParseSettings $r0;

        $r0 = new org.jsoup.parser.ParseSettings;

        specialinvoke $r0.<org.jsoup.parser.ParseSettings: void <init>(boolean,boolean)>(0, 0);

        <org.jsoup.parser.ParseSettings: org.jsoup.parser.ParseSettings htmlDefault> = $r0;

        $r0 = new org.jsoup.parser.ParseSettings;

        specialinvoke $r0.<org.jsoup.parser.ParseSettings: void <init>(boolean,boolean)>(1, 1);

        <org.jsoup.parser.ParseSettings: org.jsoup.parser.ParseSettings preserveCase> = $r0;

        return;
    }
    public void <init>(boolean, boolean)
    {
        org.jsoup.parser.ParseSettings r0;
        boolean $z0, $z1;

        r0 := @this: org.jsoup.parser.ParseSettings;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.jsoup.parser.ParseSettings: boolean preserveTagCase> = $z0;

        r0.<org.jsoup.parser.ParseSettings: boolean preserveAttributeCase> = $z1;

        return;
    }
    java.lang.String normalizeAttribute(java.lang.String)
    {
        org.jsoup.parser.ParseSettings r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.parser.ParseSettings;

        $r1 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $z0 = r0.<org.jsoup.parser.ParseSettings: boolean preserveAttributeCase>;

        if $z0 != 0 goto label1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

     label1:
        return $r1;
    }
    org.jsoup.nodes.Attributes normalizeAttributes(org.jsoup.nodes.Attributes)
    {
        org.jsoup.parser.ParseSettings r0;
        org.jsoup.nodes.Attributes $r1;
        boolean $z0;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        org.jsoup.nodes.Attribute r4;
        java.lang.String $r5;

        r0 := @this: org.jsoup.parser.ParseSettings;

        $r1 := @parameter0: org.jsoup.nodes.Attributes;

        $z0 = r0.<org.jsoup.parser.ParseSettings: boolean preserveAttributeCase>;

        if $z0 != 0 goto label2;

        $r2 = virtualinvoke $r1.<org.jsoup.nodes.Attributes: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jsoup.nodes.Attribute) $r3;

        $r5 = virtualinvoke r4.<org.jsoup.nodes.Attribute: java.lang.String getKey()>();

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String toLowerCase()>();

        virtualinvoke r4.<org.jsoup.nodes.Attribute: void setKey(java.lang.String)>($r5);

        goto label1;

     label2:
        return $r1;
    }
    java.lang.String normalizeTag(java.lang.String)
    {
        org.jsoup.parser.ParseSettings r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.parser.ParseSettings;

        $r1 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $z0 = r0.<org.jsoup.parser.ParseSettings: boolean preserveTagCase>;

        if $z0 != 0 goto label1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

     label1:
        return $r1;
    }
