org.jsoup.parser.XmlTreeBuilder extends org.jsoup.parser.TreeBuilder
    public void <init>()
    {
        org.jsoup.parser.XmlTreeBuilder r0;

        r0 := @this: org.jsoup.parser.XmlTreeBuilder;

        specialinvoke r0.<org.jsoup.parser.TreeBuilder: void <init>()>();

        return;
    }
    private void insertNode(org.jsoup.nodes.Node)
    {
        org.jsoup.parser.XmlTreeBuilder r0;
        org.jsoup.nodes.Node $r1;
        org.jsoup.nodes.Element $r2;

        r0 := @this: org.jsoup.parser.XmlTreeBuilder;

        $r1 := @parameter0: org.jsoup.nodes.Node;

        $r2 = virtualinvoke r0.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();

        virtualinvoke $r2.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>($r1);

        return;
    }
    private void popStackToClose(org.jsoup.parser.Token$EndTag)
    {
        org.jsoup.parser.XmlTreeBuilder r0;
        org.jsoup.parser.Token$EndTag $r1;
        java.lang.String $r2, $r7;
        org.jsoup.nodes.Element r3, r6;
        java.util.ArrayList $r4;
        int $i0;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: org.jsoup.parser.XmlTreeBuilder;

        $r1 := @parameter0: org.jsoup.parser.Token$EndTag;

        $r2 = virtualinvoke $r1.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();

        r3 = null;

        $r4 = r0.<org.jsoup.parser.XmlTreeBuilder: java.util.ArrayList stack>;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label2;

        $r4 = r0.<org.jsoup.parser.XmlTreeBuilder: java.util.ArrayList stack>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        r6 = (org.jsoup.nodes.Element) $r5;

        $r7 = virtualinvoke r6.<org.jsoup.nodes.Element: java.lang.String nodeName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

        r3 = r6;

     label2:
        if r3 != null goto label4;

        return;

     label3:
        $i0 = $i0 + -1;

        goto label1;

     label4:
        $r4 = r0.<org.jsoup.parser.XmlTreeBuilder: java.util.ArrayList stack>;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i0 = $i0 + -1;

     label5:
        if $i0 < 0 goto label6;

        $r4 = r0.<org.jsoup.parser.XmlTreeBuilder: java.util.ArrayList stack>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        r6 = (org.jsoup.nodes.Element) $r5;

        $r4 = r0.<org.jsoup.parser.XmlTreeBuilder: java.util.ArrayList stack>;

        virtualinvoke $r4.<java.util.ArrayList: java.lang.Object remove(int)>($i0);

        if r6 == r3 goto label6;

        $i0 = $i0 + -1;

        goto label5;

     label6:
        return;
    }
    org.jsoup.parser.ParseSettings defaultSettings()
    {
        org.jsoup.parser.XmlTreeBuilder r0;
        org.jsoup.parser.ParseSettings r1;

        r0 := @this: org.jsoup.parser.XmlTreeBuilder;

        r1 = <org.jsoup.parser.ParseSettings: org.jsoup.parser.ParseSettings preserveCase>;

        return r1;
    }
    protected void initialiseParse(java.lang.String, java.lang.String, org.jsoup.parser.ParseErrorList, org.jsoup.parser.ParseSettings)
    {
        org.jsoup.parser.XmlTreeBuilder r0;
        java.lang.String $r1, $r2;
        org.jsoup.parser.ParseErrorList $r3;
        org.jsoup.parser.ParseSettings $r4;
        org.jsoup.nodes.Document$OutputSettings $r5;
        java.util.ArrayList $r6;
        org.jsoup.nodes.Document $r7;
        org.jsoup.nodes.Document$OutputSettings$Syntax $r8;

        r0 := @this: org.jsoup.parser.XmlTreeBuilder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: org.jsoup.parser.ParseErrorList;

        $r4 := @parameter3: org.jsoup.parser.ParseSettings;

        specialinvoke r0.<org.jsoup.parser.TreeBuilder: void initialiseParse(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList,org.jsoup.parser.ParseSettings)>($r1, $r2, $r3, $r4);

        $r6 = r0.<org.jsoup.parser.XmlTreeBuilder: java.util.ArrayList stack>;

        $r7 = r0.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.nodes.Document doc>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $r7 = r0.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.nodes.Document doc>;

        $r5 = virtualinvoke $r7.<org.jsoup.nodes.Document: org.jsoup.nodes.Document$OutputSettings outputSettings()>();

        $r8 = <org.jsoup.nodes.Document$OutputSettings$Syntax: org.jsoup.nodes.Document$OutputSettings$Syntax xml>;

        virtualinvoke $r5.<org.jsoup.nodes.Document$OutputSettings: org.jsoup.nodes.Document$OutputSettings syntax(org.jsoup.nodes.Document$OutputSettings$Syntax)>($r8);

        return;
    }
    org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)
    {
        org.jsoup.parser.XmlTreeBuilder r0;
        org.jsoup.parser.Token$StartTag $r1;
        org.jsoup.nodes.Element r2;
        org.jsoup.nodes.Attributes $r3;
        java.lang.String $r4;
        org.jsoup.parser.ParseSettings $r5;
        org.jsoup.parser.Tag $r6;
        boolean $z0;
        org.jsoup.parser.Tokeniser $r7;
        java.util.ArrayList $r8;

        r0 := @this: org.jsoup.parser.XmlTreeBuilder;

        $r1 := @parameter0: org.jsoup.parser.Token$StartTag;

        $r4 = virtualinvoke $r1.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();

        $r5 = r0.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.parser.ParseSettings settings>;

        $r6 = staticinvoke <org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String,org.jsoup.parser.ParseSettings)>($r4, $r5);

        r2 = new org.jsoup.nodes.Element;

        $r4 = r0.<org.jsoup.parser.XmlTreeBuilder: java.lang.String baseUri>;

        $r5 = r0.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.parser.ParseSettings settings>;

        $r3 = $r1.<org.jsoup.parser.Token$StartTag: org.jsoup.nodes.Attributes attributes>;

        $r3 = virtualinvoke $r5.<org.jsoup.parser.ParseSettings: org.jsoup.nodes.Attributes normalizeAttributes(org.jsoup.nodes.Attributes)>($r3);

        specialinvoke r2.<org.jsoup.nodes.Element: void <init>(org.jsoup.parser.Tag,java.lang.String,org.jsoup.nodes.Attributes)>($r6, $r4, $r3);

        specialinvoke r0.<org.jsoup.parser.XmlTreeBuilder: void insertNode(org.jsoup.nodes.Node)>(r2);

        $z0 = virtualinvoke $r1.<org.jsoup.parser.Token$StartTag: boolean isSelfClosing()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.parser.Tokeniser tokeniser>;

        virtualinvoke $r7.<org.jsoup.parser.Tokeniser: void acknowledgeSelfClosingFlag()>();

        $z0 = virtualinvoke $r6.<org.jsoup.parser.Tag: boolean isKnownTag()>();

        if $z0 != 0 goto label2;

        virtualinvoke $r6.<org.jsoup.parser.Tag: org.jsoup.parser.Tag setSelfClosing()>();

        return r2;

     label1:
        $r8 = r0.<org.jsoup.parser.XmlTreeBuilder: java.util.ArrayList stack>;

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

     label2:
        return r2;
    }
    void insert(org.jsoup.parser.Token$Character)
    {
        org.jsoup.parser.XmlTreeBuilder r0;
        org.jsoup.parser.Token$Character $r1;
        org.jsoup.nodes.TextNode r2;
        java.lang.String $r3, $r4;

        r0 := @this: org.jsoup.parser.XmlTreeBuilder;

        $r1 := @parameter0: org.jsoup.parser.Token$Character;

        r2 = new org.jsoup.nodes.TextNode;

        $r4 = virtualinvoke $r1.<org.jsoup.parser.Token$Character: java.lang.String getData()>();

        $r3 = r0.<org.jsoup.parser.XmlTreeBuilder: java.lang.String baseUri>;

        specialinvoke r2.<org.jsoup.nodes.TextNode: void <init>(java.lang.String,java.lang.String)>($r4, $r3);

        specialinvoke r0.<org.jsoup.parser.XmlTreeBuilder: void insertNode(org.jsoup.nodes.Node)>(r2);

        return;
    }
    void insert(org.jsoup.parser.Token$Comment)
    {
        org.jsoup.parser.XmlTreeBuilder r0;
        org.jsoup.parser.Token$Comment $r1;
        java.lang.String $r3, $r4, $r7;
        org.jsoup.nodes.Node r5;
        boolean $z0;
        int $i0;
        java.lang.StringBuilder $r6, $r15;
        org.jsoup.parser.Parser $r8;
        org.jsoup.nodes.Document $r9;
        org.jsoup.nodes.Element $r10;
        org.jsoup.parser.ParseSettings $r11;
        org.jsoup.nodes.Attributes $r12, $r13;
        org.jsoup.nodes.Comment $r14;
        org.jsoup.nodes.XmlDeclaration $r16;

        r0 := @this: org.jsoup.parser.XmlTreeBuilder;

        $r1 := @parameter0: org.jsoup.parser.Token$Comment;

        $r14 = new org.jsoup.nodes.Comment;

        $r3 = virtualinvoke $r1.<org.jsoup.parser.Token$Comment: java.lang.String getData()>();

        $r4 = r0.<org.jsoup.parser.XmlTreeBuilder: java.lang.String baseUri>;

        specialinvoke $r14.<org.jsoup.nodes.Comment: void <init>(java.lang.String,java.lang.String)>($r3, $r4);

        r5 = $r14;

        $z0 = $r1.<org.jsoup.parser.Token$Comment: boolean bogus>;

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke $r14.<org.jsoup.nodes.Comment: java.lang.String getData()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 <= 1 goto label2;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("!");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("?");

        if $z0 == 0 goto label2;

     label1:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = r0.<org.jsoup.parser.XmlTreeBuilder: java.lang.String baseUri>;

        $r8 = staticinvoke <org.jsoup.parser.Parser: org.jsoup.parser.Parser xmlParser()>();

        $r9 = staticinvoke <org.jsoup.Jsoup: org.jsoup.nodes.Document parse(java.lang.String,java.lang.String,org.jsoup.parser.Parser)>($r4, $r7, $r8);

        $r10 = virtualinvoke $r9.<org.jsoup.nodes.Document: org.jsoup.nodes.Element child(int)>(0);

        $r16 = new org.jsoup.nodes.XmlDeclaration;

        r5 = $r16;

        $r11 = r0.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.parser.ParseSettings settings>;

        $r4 = virtualinvoke $r10.<org.jsoup.nodes.Element: java.lang.String tagName()>();

        $r4 = virtualinvoke $r11.<org.jsoup.parser.ParseSettings: java.lang.String normalizeTag(java.lang.String)>($r4);

        $r7 = virtualinvoke $r14.<org.jsoup.nodes.Comment: java.lang.String baseUri()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("!");

        specialinvoke $r16.<org.jsoup.nodes.XmlDeclaration: void <init>(java.lang.String,java.lang.String,boolean)>($r4, $r7, $z0);

        $r12 = virtualinvoke $r16.<org.jsoup.nodes.Node: org.jsoup.nodes.Attributes attributes()>();

        $r13 = virtualinvoke $r10.<org.jsoup.nodes.Element: org.jsoup.nodes.Attributes attributes()>();

        virtualinvoke $r12.<org.jsoup.nodes.Attributes: void addAll(org.jsoup.nodes.Attributes)>($r13);

     label2:
        specialinvoke r0.<org.jsoup.parser.XmlTreeBuilder: void insertNode(org.jsoup.nodes.Node)>(r5);

        return;
    }
    void insert(org.jsoup.parser.Token$Doctype)
    {
        org.jsoup.parser.XmlTreeBuilder r0;
        org.jsoup.parser.Token$Doctype $r1;
        org.jsoup.nodes.DocumentType r2;
        java.lang.String $r3, $r5, $r6, $r7, $r8;
        org.jsoup.parser.ParseSettings $r4;

        r0 := @this: org.jsoup.parser.XmlTreeBuilder;

        $r1 := @parameter0: org.jsoup.parser.Token$Doctype;

        r2 = new org.jsoup.nodes.DocumentType;

        $r4 = r0.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.parser.ParseSettings settings>;

        $r3 = virtualinvoke $r1.<org.jsoup.parser.Token$Doctype: java.lang.String getName()>();

        $r5 = virtualinvoke $r4.<org.jsoup.parser.ParseSettings: java.lang.String normalizeTag(java.lang.String)>($r3);

        $r6 = virtualinvoke $r1.<org.jsoup.parser.Token$Doctype: java.lang.String getPubSysKey()>();

        $r7 = virtualinvoke $r1.<org.jsoup.parser.Token$Doctype: java.lang.String getPublicIdentifier()>();

        $r8 = virtualinvoke $r1.<org.jsoup.parser.Token$Doctype: java.lang.String getSystemIdentifier()>();

        $r3 = r0.<org.jsoup.parser.XmlTreeBuilder: java.lang.String baseUri>;

        specialinvoke r2.<org.jsoup.nodes.DocumentType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r5, $r6, $r7, $r8, $r3);

        specialinvoke r0.<org.jsoup.parser.XmlTreeBuilder: void insertNode(org.jsoup.nodes.Node)>(r2);

        return;
    }
    org.jsoup.nodes.Document parse(java.lang.String, java.lang.String)
    {
        org.jsoup.parser.XmlTreeBuilder r0;
        java.lang.String $r1, $r2;
        org.jsoup.parser.ParseSettings $r3;
        org.jsoup.parser.ParseErrorList $r4;
        org.jsoup.nodes.Document $r5;

        r0 := @this: org.jsoup.parser.XmlTreeBuilder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r4 = staticinvoke <org.jsoup.parser.ParseErrorList: org.jsoup.parser.ParseErrorList noTracking()>();

        $r3 = <org.jsoup.parser.ParseSettings: org.jsoup.parser.ParseSettings preserveCase>;

        $r5 = virtualinvoke r0.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.nodes.Document parse(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList,org.jsoup.parser.ParseSettings)>($r1, $r2, $r4, $r3);

        return $r5;
    }
    java.util.List parseFragment(java.lang.String, java.lang.String, org.jsoup.parser.ParseErrorList, org.jsoup.parser.ParseSettings)
    {
        org.jsoup.parser.XmlTreeBuilder r0;
        java.lang.String $r1, $r2;
        org.jsoup.parser.ParseErrorList $r3;
        org.jsoup.parser.ParseSettings $r4;
        java.util.List $r5;
        org.jsoup.nodes.Document $r6;

        r0 := @this: org.jsoup.parser.XmlTreeBuilder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: org.jsoup.parser.ParseErrorList;

        $r4 := @parameter3: org.jsoup.parser.ParseSettings;

        virtualinvoke r0.<org.jsoup.parser.XmlTreeBuilder: void initialiseParse(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList,org.jsoup.parser.ParseSettings)>($r1, $r2, $r3, $r4);

        virtualinvoke r0.<org.jsoup.parser.XmlTreeBuilder: void runParser()>();

        $r6 = r0.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.nodes.Document doc>;

        $r5 = virtualinvoke $r6.<org.jsoup.nodes.Document: java.util.List childNodes()>();

        return $r5;
    }
    protected boolean process(org.jsoup.parser.Token)
    {
        org.jsoup.parser.XmlTreeBuilder r0;
        org.jsoup.parser.Token $r1;
        int[] $r2;
        org.jsoup.parser.Token$TokenType $r3;
        int $i0;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        org.jsoup.parser.Token$StartTag $r6;
        org.jsoup.parser.Token$EndTag $r7;
        org.jsoup.parser.Token$Comment $r8;
        org.jsoup.parser.Token$Character $r9;
        org.jsoup.parser.Token$Doctype $r10;

        r0 := @this: org.jsoup.parser.XmlTreeBuilder;

        $r1 := @parameter0: org.jsoup.parser.Token;

        $r2 = <org.jsoup.parser.XmlTreeBuilder$1: int[] $SwitchMap$org$jsoup$parser$Token$TokenType>;

        $r3 = $r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;

        $i0 = virtualinvoke $r3.<org.jsoup.parser.Token$TokenType: int ordinal()>();

        $i0 = $r2[$i0];

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label7;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected token type: ");

        $r3 = $r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.jsoup.helper.Validate: void fail(java.lang.String)>($r5);

     label2:
        return 1;

     label3:
        $r6 = virtualinvoke $r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();

        virtualinvoke r0.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>($r6);

        goto label2;

     label4:
        $r7 = virtualinvoke $r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();

        specialinvoke r0.<org.jsoup.parser.XmlTreeBuilder: void popStackToClose(org.jsoup.parser.Token$EndTag)>($r7);

        goto label2;

     label5:
        $r8 = virtualinvoke $r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Comment asComment()>();

        virtualinvoke r0.<org.jsoup.parser.XmlTreeBuilder: void insert(org.jsoup.parser.Token$Comment)>($r8);

        goto label2;

     label6:
        $r9 = virtualinvoke $r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Character asCharacter()>();

        virtualinvoke r0.<org.jsoup.parser.XmlTreeBuilder: void insert(org.jsoup.parser.Token$Character)>($r9);

        goto label2;

     label7:
        $r10 = virtualinvoke $r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Doctype asDoctype()>();

        virtualinvoke r0.<org.jsoup.parser.XmlTreeBuilder: void insert(org.jsoup.parser.Token$Doctype)>($r10);

        goto label2;
    }
    public volatile boolean processStartTag(java.lang.String, org.jsoup.nodes.Attributes)
    {
        org.jsoup.parser.XmlTreeBuilder r0;
        java.lang.String $r1;
        org.jsoup.nodes.Attributes $r2;
        boolean $z0;

        r0 := @this: org.jsoup.parser.XmlTreeBuilder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.jsoup.nodes.Attributes;

        $z0 = specialinvoke r0.<org.jsoup.parser.TreeBuilder: boolean processStartTag(java.lang.String,org.jsoup.nodes.Attributes)>($r1, $r2);

        return $z0;
    }
