org.openintents.openpgp.AutocryptPeerUpdate extends java.lang.Object implements android.os.Parcelable
public static final android.os.Parcelable$Creator CREATOR
private static final int PARCELABLE_VERSION
private final java.util.Date effectiveDate
private final byte[] keyData
private final org.openintents.openpgp.AutocryptPeerUpdate$PreferEncrypt preferEncrypt
    static void <clinit>()
    {
        org.openintents.openpgp.AutocryptPeerUpdate$1 $r0;

        $r0 = new org.openintents.openpgp.AutocryptPeerUpdate$1;

        specialinvoke $r0.<org.openintents.openpgp.AutocryptPeerUpdate$1: void <init>()>();

        <org.openintents.openpgp.AutocryptPeerUpdate: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }
    private void <init>(android.os.Parcel, int)
    {
        org.openintents.openpgp.AutocryptPeerUpdate r0;
        android.os.Parcel $r1;
        int $i0;
        byte[] $r2;
        java.util.Date $r3;
        long $l1;
        org.openintents.openpgp.AutocryptPeerUpdate$PreferEncrypt[] $r4;
        org.openintents.openpgp.AutocryptPeerUpdate$PreferEncrypt $r5;

        r0 := @this: org.openintents.openpgp.AutocryptPeerUpdate;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke $r1.<android.os.Parcel: byte[] createByteArray()>();

        r0.<org.openintents.openpgp.AutocryptPeerUpdate: byte[] keyData> = $r2;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label2;

        $r3 = new java.util.Date;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        specialinvoke $r3.<java.util.Date: void <init>(long)>($l1);

     label1:
        r0.<org.openintents.openpgp.AutocryptPeerUpdate: java.util.Date effectiveDate> = $r3;

        $r4 = staticinvoke <org.openintents.openpgp.AutocryptPeerUpdate$PreferEncrypt: org.openintents.openpgp.AutocryptPeerUpdate$PreferEncrypt[] values()>();

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r5 = $r4[$i0];

        r0.<org.openintents.openpgp.AutocryptPeerUpdate: org.openintents.openpgp.AutocryptPeerUpdate$PreferEncrypt preferEncrypt> = $r5;

        return;

     label2:
        $r3 = null;

        goto label1;
    }
    void <init>(android.os.Parcel, int, org.openintents.openpgp.AutocryptPeerUpdate$1)
    {
        org.openintents.openpgp.AutocryptPeerUpdate r0;
        android.os.Parcel $r1;
        int $i0;
        org.openintents.openpgp.AutocryptPeerUpdate$1 $r2;

        r0 := @this: org.openintents.openpgp.AutocryptPeerUpdate;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $r2 := @parameter2: org.openintents.openpgp.AutocryptPeerUpdate$1;

        specialinvoke r0.<org.openintents.openpgp.AutocryptPeerUpdate: void <init>(android.os.Parcel,int)>($r1, $i0);

        return;
    }
    private void <init>(byte[], java.util.Date, org.openintents.openpgp.AutocryptPeerUpdate$PreferEncrypt)
    {
        org.openintents.openpgp.AutocryptPeerUpdate r0;
        byte[] $r1;
        java.util.Date $r2;
        org.openintents.openpgp.AutocryptPeerUpdate$PreferEncrypt $r3;

        r0 := @this: org.openintents.openpgp.AutocryptPeerUpdate;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: java.util.Date;

        $r3 := @parameter2: org.openintents.openpgp.AutocryptPeerUpdate$PreferEncrypt;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.openintents.openpgp.AutocryptPeerUpdate: byte[] keyData> = $r1;

        r0.<org.openintents.openpgp.AutocryptPeerUpdate: java.util.Date effectiveDate> = $r2;

        r0.<org.openintents.openpgp.AutocryptPeerUpdate: org.openintents.openpgp.AutocryptPeerUpdate$PreferEncrypt preferEncrypt> = $r3;

        return;
    }
    public static org.openintents.openpgp.AutocryptPeerUpdate create(byte[], java.util.Date, boolean)
    {
        byte[] $r0;
        java.util.Date $r1;
        boolean $z0;
        org.openintents.openpgp.AutocryptPeerUpdate $r2;
        org.openintents.openpgp.AutocryptPeerUpdate$PreferEncrypt $r3;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.util.Date;

        $z0 := @parameter2: boolean;

        $r2 = new org.openintents.openpgp.AutocryptPeerUpdate;

        if $z0 == 0 goto label2;

        $r3 = <org.openintents.openpgp.AutocryptPeerUpdate$PreferEncrypt: org.openintents.openpgp.AutocryptPeerUpdate$PreferEncrypt MUTUAL>;

     label1:
        specialinvoke $r2.<org.openintents.openpgp.AutocryptPeerUpdate: void <init>(byte[],java.util.Date,org.openintents.openpgp.AutocryptPeerUpdate$PreferEncrypt)>($r0, $r1, $r3);

        return $r2;

     label2:
        $r3 = <org.openintents.openpgp.AutocryptPeerUpdate$PreferEncrypt: org.openintents.openpgp.AutocryptPeerUpdate$PreferEncrypt NOPREFERENCE>;

        goto label1;
    }
    public int describeContents()
    {
        org.openintents.openpgp.AutocryptPeerUpdate r0;

        r0 := @this: org.openintents.openpgp.AutocryptPeerUpdate;

        return 0;
    }
    public java.util.Date getEffectiveDate()
    {
        org.openintents.openpgp.AutocryptPeerUpdate r0;
        java.util.Date r1;

        r0 := @this: org.openintents.openpgp.AutocryptPeerUpdate;

        r1 = r0.<org.openintents.openpgp.AutocryptPeerUpdate: java.util.Date effectiveDate>;

        return r1;
    }
    public byte[] getKeyData()
    {
        org.openintents.openpgp.AutocryptPeerUpdate r0;
        byte[] r1;

        r0 := @this: org.openintents.openpgp.AutocryptPeerUpdate;

        r1 = r0.<org.openintents.openpgp.AutocryptPeerUpdate: byte[] keyData>;

        return r1;
    }
    public org.openintents.openpgp.AutocryptPeerUpdate$PreferEncrypt getPreferEncrypt()
    {
        org.openintents.openpgp.AutocryptPeerUpdate r0;
        org.openintents.openpgp.AutocryptPeerUpdate$PreferEncrypt r1;

        r0 := @this: org.openintents.openpgp.AutocryptPeerUpdate;

        r1 = r0.<org.openintents.openpgp.AutocryptPeerUpdate: org.openintents.openpgp.AutocryptPeerUpdate$PreferEncrypt preferEncrypt>;

        return r1;
    }
    public boolean hasKeyData()
    {
        org.openintents.openpgp.AutocryptPeerUpdate r0;
        byte[] $r1;

        r0 := @this: org.openintents.openpgp.AutocryptPeerUpdate;

        $r1 = r0.<org.openintents.openpgp.AutocryptPeerUpdate: byte[] keyData>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public void writeToParcel(android.os.Parcel, int)
    {
        org.openintents.openpgp.AutocryptPeerUpdate r0;
        android.os.Parcel $r1;
        int $i0, i1, $i2;
        byte[] $r2;
        java.util.Date $r3;
        long $l3;
        org.openintents.openpgp.AutocryptPeerUpdate$PreferEncrypt $r4;

        r0 := @this: org.openintents.openpgp.AutocryptPeerUpdate;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>(1);

        $i0 = virtualinvoke $r1.<android.os.Parcel: int dataPosition()>();

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>(0);

        $i2 = virtualinvoke $r1.<android.os.Parcel: int dataPosition()>();

        $r2 = r0.<org.openintents.openpgp.AutocryptPeerUpdate: byte[] keyData>;

        virtualinvoke $r1.<android.os.Parcel: void writeByteArray(byte[])>($r2);

        $r3 = r0.<org.openintents.openpgp.AutocryptPeerUpdate: java.util.Date effectiveDate>;

        if $r3 == null goto label2;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>(1);

        $r3 = r0.<org.openintents.openpgp.AutocryptPeerUpdate: java.util.Date effectiveDate>;

        $l3 = virtualinvoke $r3.<java.util.Date: long getTime()>();

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l3);

     label1:
        $r4 = r0.<org.openintents.openpgp.AutocryptPeerUpdate: org.openintents.openpgp.AutocryptPeerUpdate$PreferEncrypt preferEncrypt>;

        i1 = virtualinvoke $r4.<org.openintents.openpgp.AutocryptPeerUpdate$PreferEncrypt: int ordinal()>();

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>(i1);

        i1 = virtualinvoke $r1.<android.os.Parcel: int dataPosition()>();

        i1 = i1 - $i2;

        virtualinvoke $r1.<android.os.Parcel: void setDataPosition(int)>($i0);

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>(i1);

        $i0 = $i2 + i1;

        virtualinvoke $r1.<android.os.Parcel: void setDataPosition(int)>($i0);

        return;

     label2:
        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label1;
    }
