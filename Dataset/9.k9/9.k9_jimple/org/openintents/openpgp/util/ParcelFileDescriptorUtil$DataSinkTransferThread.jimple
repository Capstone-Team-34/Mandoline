org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSinkTransferThread extends java.lang.Thread
final org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink dataSink
final java.io.InputStream inputStream
java.lang.Object sinkResult
    void <init>(org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink, java.io.InputStream)
    {
        org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSinkTransferThread r0;
        org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink r1;
        java.io.InputStream $r2;

        r0 := @this: org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSinkTransferThread;

        r1 := @parameter0: org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink;

        $r2 := @parameter1: java.io.InputStream;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>("IPC Transfer Thread (FROM service)");

        r0.<org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSinkTransferThread: org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink dataSink> = r1;

        r0.<org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSinkTransferThread: java.io.InputStream inputStream> = $r2;

        virtualinvoke r0.<org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSinkTransferThread: void setDaemon(boolean)>(1);

        return;
    }
    java.lang.Object getResult()
    {
        org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSinkTransferThread r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        java.lang.Object r2;

        r0 := @this: org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSinkTransferThread;

        $z0 = virtualinvoke r0.<org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSinkTransferThread: boolean isAlive()>();

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("result must be accessed only *after* the thread finished execution!");

        throw $r1;

     label1:
        r2 = r0.<org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSinkTransferThread: java.lang.Object sinkResult>;

        return r2;
    }
    public void run()
    {
        org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSinkTransferThread r0;
        java.io.IOException r1, $r5, $r7, $r8;
        org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink $r2;
        java.io.InputStream $r3;
        java.lang.Object $r4;
        boolean $z0;
        java.lang.Throwable $r6;

        r0 := @this: org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSinkTransferThread;

     label01:
        $r2 = r0.<org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSinkTransferThread: org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink dataSink>;

        $r3 = r0.<org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSinkTransferThread: java.io.InputStream inputStream>;

     label02:
        $r4 = interfaceinvoke $r2.<org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink: java.lang.Object processData(java.io.InputStream)>($r3);

     label03:
        r0.<org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSinkTransferThread: java.lang.Object sinkResult> = $r4;

     label04:
        $r3 = r0.<org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSinkTransferThread: java.io.InputStream inputStream>;

     label05:
        virtualinvoke $r3.<java.io.InputStream: void close()>();

     label06:
        return;

     label07:
        r1 := @caughtexception;

     label08:
        $z0 = staticinvoke <org.openintents.openpgp.util.ParcelFileDescriptorUtil: boolean access$000(java.io.IOException)>(r1);

     label09:
        if $z0 == 0 goto label16;

     label10:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("OpenPgp API", "Stopped read due to broken pipe (other end closed pipe?)");

     label11:
        r0.<org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSinkTransferThread: java.lang.Object sinkResult> = null;

     label12:
        $r3 = r0.<org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSinkTransferThread: java.io.InputStream inputStream>;

     label13:
        virtualinvoke $r3.<java.io.InputStream: void close()>();

     label14:
        return;

     label15:
        $r5 := @caughtexception;

        return;

     label16:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("OpenPgp API", "IOException while reading from in", r1);

     label17:
        goto label11;

     label18:
        $r6 := @caughtexception;

        $r3 = r0.<org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSinkTransferThread: java.io.InputStream inputStream>;

     label19:
        virtualinvoke $r3.<java.io.InputStream: void close()>();

     label20:
        throw $r6;

     label21:
        $r7 := @caughtexception;

        goto label20;

     label22:
        $r8 := @caughtexception;

        return;

        catch java.io.IOException from label02 to label03 with label07;
        catch java.lang.Throwable from label01 to label04 with label18;
        catch java.io.IOException from label05 to label06 with label22;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Throwable from label10 to label12 with label18;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.io.IOException from label19 to label20 with label21;
    }
