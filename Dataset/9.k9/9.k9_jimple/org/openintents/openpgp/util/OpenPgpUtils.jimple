org.openintents.openpgp.util.OpenPgpUtils extends java.lang.Object
public static final int PARSE_RESULT_MESSAGE
public static final int PARSE_RESULT_NO_PGP
public static final int PARSE_RESULT_SIGNED_MESSAGE
public static final java.lang.String PGP_MARKER_CLEARSIGN_BEGIN_MESSAGE
public static final java.lang.String PGP_MARKER_CLEARSIGN_BEGIN_SIGNATURE
public static final java.util.regex.Pattern PGP_MESSAGE
public static final java.util.regex.Pattern PGP_SIGNED_MESSAGE
private static final java.util.regex.Pattern USER_ID_PATTERN
    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("(-----BEGIN PGP MESSAGE-----.*?-----END PGP MESSAGE-----).*", 32);

        <org.openintents.openpgp.util.OpenPgpUtils: java.util.regex.Pattern PGP_MESSAGE> = $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("(-----BEGIN PGP SIGNED MESSAGE-----.*?-----BEGIN PGP SIGNATURE-----.*?-----END PGP SIGNATURE-----).*", 32);

        <org.openintents.openpgp.util.OpenPgpUtils: java.util.regex.Pattern PGP_SIGNED_MESSAGE> = $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^(.*?)(?: \\((.*)\\))?(?: <(.*)>)?$");

        <org.openintents.openpgp.util.OpenPgpUtils: java.util.regex.Pattern USER_ID_PATTERN> = $r0;

        return;
    }
    public void <init>()
    {
        org.openintents.openpgp.util.OpenPgpUtils r0;

        r0 := @this: org.openintents.openpgp.util.OpenPgpUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static java.lang.String convertKeyIdToHex(long)
    {
        long $l0, $l1;
        java.lang.StringBuilder $r0;
        java.lang.String $r1;

        $l0 := @parameter0: long;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $l1 = $l0 >> 32;

        $r1 = staticinvoke <org.openintents.openpgp.util.OpenPgpUtils: java.lang.String convertKeyIdToHex32bit(long)>($l1);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = staticinvoke <org.openintents.openpgp.util.OpenPgpUtils: java.lang.String convertKeyIdToHex32bit(long)>($l0);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
    private static java.lang.String convertKeyIdToHex32bit(long)
    {
        long $l0;
        java.lang.String $r0;
        java.util.Locale $r1;
        int $i1;
        java.lang.StringBuilder $r2;

        $l0 := @parameter0: long;

        $l0 = 4294967295L & $l0;

        $r0 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l0);

        $r1 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1);

     label1:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 >= 8 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label2:
        return $r0;
    }
    public static java.lang.String createUserId(org.openintents.openpgp.util.OpenPgpUtils$UserId)
    {
        org.openintents.openpgp.util.OpenPgpUtils$UserId $r0;
        java.lang.String r1, $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;

        $r0 := @parameter0: org.openintents.openpgp.util.OpenPgpUtils$UserId;

        r1 = $r0.<org.openintents.openpgp.util.OpenPgpUtils$UserId: java.lang.String name>;

        if r1 == null goto label1;

        $r2 = $r0.<org.openintents.openpgp.util.OpenPgpUtils$UserId: java.lang.String comment>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        r1 = $r0.<org.openintents.openpgp.util.OpenPgpUtils$UserId: java.lang.String comment>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        if r1 == null goto label2;

        $r2 = $r0.<org.openintents.openpgp.util.OpenPgpUtils$UserId: java.lang.String email>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" <");

        r1 = $r0.<org.openintents.openpgp.util.OpenPgpUtils$UserId: java.lang.String email>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return r1;
    }
    public static java.lang.String extractClearsignedMessage(java.lang.String)
    {
        java.lang.String $r0;
        int i0, $i1, i2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label3;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("-----BEGIN PGP SIGNED MESSAGE-----");

        if $z0 != 0 goto label1;

        return null;

     label1:
        i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>("\r\n\r\n");

        i0 = i0 + 4;

        if i0 < 0 goto label3;

        $i1 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>("-----BEGIN PGP SIGNATURE-----");

        i2 = $i1;

        if $i1 >= 0 goto label2;

        i2 = virtualinvoke $r0.<java.lang.String: int length()>();

     label2:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(i0, i2);

        return $r0;

     label3:
        return null;
    }
    public static boolean isAvailable(android.content.Context)
    {
        android.content.Context $r0;
        android.content.Intent r1;
        android.content.pm.PackageManager $r2;
        java.util.List $r3;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        r1 = new android.content.Intent;

        specialinvoke r1.<android.content.Intent: void <init>(java.lang.String)>("org.openintents.openpgp.IOpenPgpService2");

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r2.<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>(r1, 0);

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public static int parseMessage(java.lang.String)
    {
        java.lang.String $r0;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <org.openintents.openpgp.util.OpenPgpUtils: int parseMessage(java.lang.String,boolean)>($r0, 0);

        return $i0;
    }
    public static int parseMessage(java.lang.String, boolean)
    {
        java.lang.String $r0;
        boolean $z0, $z1;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2, $r3;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r1 = <org.openintents.openpgp.util.OpenPgpUtils: java.util.regex.Pattern PGP_SIGNED_MESSAGE>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $r1 = <org.openintents.openpgp.util.OpenPgpUtils: java.util.regex.Pattern PGP_MESSAGE>;

        $r3 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke $r3.<java.util.regex.Matcher: boolean matches()>();

        if $z1 == 0 goto label3;

     label1:
        return 0;

     label2:
        $z1 = virtualinvoke $r3.<java.util.regex.Matcher: boolean find()>();

        if $z1 != 0 goto label1;

     label3:
        if $z0 == 0 goto label5;

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label6;

     label4:
        return 1;

     label5:
        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean find()>();

        if $z0 != 0 goto label4;

     label6:
        return -1;
    }
    public static org.openintents.openpgp.util.OpenPgpUtils$UserId splitUserId(java.lang.String)
    {
        java.lang.String $r0, $r4, $r5;
        boolean $z0;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;
        org.openintents.openpgp.util.OpenPgpUtils$UserId $r3;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 != 0 goto label1;

        $r1 = <org.openintents.openpgp.util.OpenPgpUtils: java.util.regex.Pattern USER_ID_PATTERN>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label1;

        $r3 = new org.openintents.openpgp.util.OpenPgpUtils$UserId;

        $r0 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r4 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        $r5 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        specialinvoke $r3.<org.openintents.openpgp.util.OpenPgpUtils$UserId: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r0, $r4, $r5);

        return $r3;

     label1:
        $r3 = new org.openintents.openpgp.util.OpenPgpUtils$UserId;

        specialinvoke $r3.<org.openintents.openpgp.util.OpenPgpUtils$UserId: void <init>(java.lang.String,java.lang.String,java.lang.String)>(null, null, null);

        return $r3;
    }
