org.openintents.openpgp.util.OpenPgpKeyPreference extends android.preference.Preference
private static final int NO_KEY
public static final int REQUEST_CODE_KEY_PREFERENCE
private java.lang.String mDefaultUserId
private long mKeyId
private java.lang.String mOpenPgpProvider
private org.openintents.openpgp.util.OpenPgpServiceConnection mServiceConnection
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        org.openintents.openpgp.util.OpenPgpKeyPreference r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        r0 := @this: org.openintents.openpgp.util.OpenPgpKeyPreference;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.preference.Preference: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        return;
    }
    static void access$000(org.openintents.openpgp.util.OpenPgpKeyPreference, android.content.Intent)
    {
        org.openintents.openpgp.util.OpenPgpKeyPreference $r0;
        android.content.Intent $r1;

        $r0 := @parameter0: org.openintents.openpgp.util.OpenPgpKeyPreference;

        $r1 := @parameter1: android.content.Intent;

        specialinvoke $r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: void getSignKeyId(android.content.Intent)>($r1);

        return;
    }
    static void access$200(org.openintents.openpgp.util.OpenPgpKeyPreference, long)
    {
        org.openintents.openpgp.util.OpenPgpKeyPreference $r0;
        long $l0;

        $r0 := @parameter0: org.openintents.openpgp.util.OpenPgpKeyPreference;

        $l0 := @parameter1: long;

        specialinvoke $r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: void save(long)>($l0);

        return;
    }
    private void getSignKeyId(android.content.Intent)
    {
        org.openintents.openpgp.util.OpenPgpKeyPreference r0;
        android.content.Intent $r1;
        org.openintents.openpgp.util.OpenPgpApi r2;
        java.lang.String $r3;
        android.content.Context $r4;
        org.openintents.openpgp.util.OpenPgpServiceConnection $r5;
        org.openintents.openpgp.IOpenPgpService2 $r6;
        org.openintents.openpgp.util.OpenPgpKeyPreference$MyCallback $r7;

        r0 := @this: org.openintents.openpgp.util.OpenPgpKeyPreference;

        $r1 := @parameter0: android.content.Intent;

        virtualinvoke $r1.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("org.openintents.openpgp.action.GET_SIGN_KEY_ID");

        $r3 = r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: java.lang.String mDefaultUserId>;

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("user_id", $r3);

        r2 = new org.openintents.openpgp.util.OpenPgpApi;

        $r4 = virtualinvoke r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: android.content.Context getContext()>();

        $r5 = r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: org.openintents.openpgp.util.OpenPgpServiceConnection mServiceConnection>;

        $r6 = virtualinvoke $r5.<org.openintents.openpgp.util.OpenPgpServiceConnection: org.openintents.openpgp.IOpenPgpService2 getService()>();

        specialinvoke r2.<org.openintents.openpgp.util.OpenPgpApi: void <init>(android.content.Context,org.openintents.openpgp.IOpenPgpService2)>($r4, $r6);

        $r7 = new org.openintents.openpgp.util.OpenPgpKeyPreference$MyCallback;

        specialinvoke $r7.<org.openintents.openpgp.util.OpenPgpKeyPreference$MyCallback: void <init>(org.openintents.openpgp.util.OpenPgpKeyPreference,int,org.openintents.openpgp.util.OpenPgpKeyPreference$1)>(r0, 9999, null);

        virtualinvoke r2.<org.openintents.openpgp.util.OpenPgpApi: void executeApiAsync(android.content.Intent,java.io.InputStream,java.io.OutputStream,org.openintents.openpgp.util.OpenPgpApi$IOpenPgpCallback)>($r1, null, null, $r7);

        return;
    }
    private void save(long)
    {
        org.openintents.openpgp.util.OpenPgpKeyPreference r0;
        long $l0;
        java.lang.Long $r1;
        boolean $z0;

        r0 := @this: org.openintents.openpgp.util.OpenPgpKeyPreference;

        $l0 := @parameter0: long;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $z0 = virtualinvoke r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: boolean callChangeListener(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: void setAndPersist(long)>($l0);

        return;
    }
    private void setAndPersist(long)
    {
        org.openintents.openpgp.util.OpenPgpKeyPreference r0;
        long $l0;
        java.lang.CharSequence $r1;

        r0 := @this: org.openintents.openpgp.util.OpenPgpKeyPreference;

        $l0 := @parameter0: long;

        r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: long mKeyId> = $l0;

        $l0 = r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: long mKeyId>;

        virtualinvoke r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: boolean persistLong(long)>($l0);

        virtualinvoke r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: void notifyChanged()>();

        $r1 = virtualinvoke r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: java.lang.CharSequence getSummary()>();

        virtualinvoke r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: void setSummary(java.lang.CharSequence)>($r1);

        return;
    }
    private void updateEnabled()
    {
        org.openintents.openpgp.util.OpenPgpKeyPreference r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: org.openintents.openpgp.util.OpenPgpKeyPreference;

        $r1 = r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: java.lang.String mOpenPgpProvider>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: void setEnabled(boolean)>(0);

        return;

     label1:
        virtualinvoke r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: void setEnabled(boolean)>(1);

        return;
    }
    public java.lang.CharSequence getSummary()
    {
        org.openintents.openpgp.util.OpenPgpKeyPreference r0;
        long $l0;
        byte $b1;
        android.content.Context $r1;
        int $i2;
        java.lang.String $r2;

        r0 := @this: org.openintents.openpgp.util.OpenPgpKeyPreference;

        $l0 = r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: long mKeyId>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $r1 = virtualinvoke r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: android.content.Context getContext()>();

        $i2 = <org.openintents.openpgp.R$string: int openpgp_no_key_selected>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getString(int)>($i2);

        return $r2;

     label1:
        $r1 = virtualinvoke r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: android.content.Context getContext()>();

        $i2 = <org.openintents.openpgp.R$string: int openpgp_key_selected>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getString(int)>($i2);

        return $r2;
    }
    public long getValue()
    {
        org.openintents.openpgp.util.OpenPgpKeyPreference r0;
        long l0;

        r0 := @this: org.openintents.openpgp.util.OpenPgpKeyPreference;

        l0 = r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: long mKeyId>;

        return l0;
    }
    public boolean handleOnActivityResult(int, int, android.content.Intent)
    {
        org.openintents.openpgp.util.OpenPgpKeyPreference r0;
        int $i0, $i1;
        android.content.Intent $r1;

        r0 := @this: org.openintents.openpgp.util.OpenPgpKeyPreference;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.content.Intent;

        if $i0 != 9999 goto label1;

        if $i1 != -1 goto label1;

        specialinvoke r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: void getSignKeyId(android.content.Intent)>($r1);

        return 1;

     label1:
        return 0;
    }
    protected void onClick()
    {
        org.openintents.openpgp.util.OpenPgpKeyPreference r0;
        java.lang.String $r1;
        org.openintents.openpgp.util.OpenPgpKeyPreference$1 $r2;
        org.openintents.openpgp.util.OpenPgpServiceConnection $r3;
        android.content.Context $r4;

        r0 := @this: org.openintents.openpgp.util.OpenPgpKeyPreference;

        $r3 = new org.openintents.openpgp.util.OpenPgpServiceConnection;

        $r4 = virtualinvoke r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: android.content.Context getContext()>();

        $r4 = virtualinvoke $r4.<android.content.Context: android.content.Context getApplicationContext()>();

        $r1 = r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: java.lang.String mOpenPgpProvider>;

        $r2 = new org.openintents.openpgp.util.OpenPgpKeyPreference$1;

        specialinvoke $r2.<org.openintents.openpgp.util.OpenPgpKeyPreference$1: void <init>(org.openintents.openpgp.util.OpenPgpKeyPreference)>(r0);

        specialinvoke $r3.<org.openintents.openpgp.util.OpenPgpServiceConnection: void <init>(android.content.Context,java.lang.String,org.openintents.openpgp.util.OpenPgpServiceConnection$OnBound)>($r4, $r1, $r2);

        r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: org.openintents.openpgp.util.OpenPgpServiceConnection mServiceConnection> = $r3;

        $r3 = r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: org.openintents.openpgp.util.OpenPgpServiceConnection mServiceConnection>;

        virtualinvoke $r3.<org.openintents.openpgp.util.OpenPgpServiceConnection: void bindToService()>();

        return;
    }
    protected java.lang.Object onGetDefaultValue(android.content.res.TypedArray, int)
    {
        org.openintents.openpgp.util.OpenPgpKeyPreference r0;
        android.content.res.TypedArray $r1;
        int $i0;
        long $l1;
        java.lang.Long $r2;

        r0 := @this: org.openintents.openpgp.util.OpenPgpKeyPreference;

        $r1 := @parameter0: android.content.res.TypedArray;

        $i0 := @parameter1: int;

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getInteger(int,int)>($i0, 0);

        $l1 = (long) $i0;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r2;
    }
    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        org.openintents.openpgp.util.OpenPgpKeyPreference r0;
        android.os.Parcelable $r1;
        java.lang.Class $r2;
        boolean $z0;
        org.openintents.openpgp.util.OpenPgpKeyPreference$SavedState r3;
        long $l0;
        java.lang.String $r4;

        r0 := @this: org.openintents.openpgp.util.OpenPgpKeyPreference;

        $r1 := @parameter0: android.os.Parcelable;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(class "Lorg/openintents/openpgp/util/OpenPgpKeyPreference$SavedState;");

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.preference.Preference: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        return;

     label1:
        r3 = (org.openintents.openpgp.util.OpenPgpKeyPreference$SavedState) $r1;

        $r1 = virtualinvoke r3.<org.openintents.openpgp.util.OpenPgpKeyPreference$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.preference.Preference: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        $l0 = r3.<org.openintents.openpgp.util.OpenPgpKeyPreference$SavedState: long keyId>;

        r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: long mKeyId> = $l0;

        $r4 = r3.<org.openintents.openpgp.util.OpenPgpKeyPreference$SavedState: java.lang.String openPgpProvider>;

        r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: java.lang.String mOpenPgpProvider> = $r4;

        $r4 = r3.<org.openintents.openpgp.util.OpenPgpKeyPreference$SavedState: java.lang.String defaultUserId>;

        r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: java.lang.String mDefaultUserId> = $r4;

        virtualinvoke r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: void notifyChanged()>();

        return;
    }
    protected android.os.Parcelable onSaveInstanceState()
    {
        org.openintents.openpgp.util.OpenPgpKeyPreference r0;
        org.openintents.openpgp.util.OpenPgpKeyPreference$SavedState r1;
        android.os.Parcelable $r2;
        boolean $z0;
        long $l0;
        java.lang.String $r3;

        r0 := @this: org.openintents.openpgp.util.OpenPgpKeyPreference;

        $r2 = specialinvoke r0.<android.preference.Preference: android.os.Parcelable onSaveInstanceState()>();

        $z0 = virtualinvoke r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: boolean isPersistent()>();

        if $z0 == 0 goto label1;

        return $r2;

     label1:
        r1 = new org.openintents.openpgp.util.OpenPgpKeyPreference$SavedState;

        specialinvoke r1.<org.openintents.openpgp.util.OpenPgpKeyPreference$SavedState: void <init>(android.os.Parcelable)>($r2);

        $l0 = r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: long mKeyId>;

        r1.<org.openintents.openpgp.util.OpenPgpKeyPreference$SavedState: long keyId> = $l0;

        $r3 = r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: java.lang.String mOpenPgpProvider>;

        r1.<org.openintents.openpgp.util.OpenPgpKeyPreference$SavedState: java.lang.String openPgpProvider> = $r3;

        $r3 = r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: java.lang.String mDefaultUserId>;

        r1.<org.openintents.openpgp.util.OpenPgpKeyPreference$SavedState: java.lang.String defaultUserId> = $r3;

        return r1;
    }
    protected void onSetInitialValue(boolean, java.lang.Object)
    {
        org.openintents.openpgp.util.OpenPgpKeyPreference r0;
        boolean $z0;
        java.lang.Object r1;
        long $l0;
        java.lang.Long r2;

        r0 := @this: org.openintents.openpgp.util.OpenPgpKeyPreference;

        $z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.Object;

        if $z0 == 0 goto label1;

        $l0 = r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: long mKeyId>;

        $l0 = virtualinvoke r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: long getPersistedLong(long)>($l0);

        r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: long mKeyId> = $l0;

        return;

     label1:
        r2 = (java.lang.Long) r1;

        $l0 = virtualinvoke r2.<java.lang.Long: long longValue()>();

        specialinvoke r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: void setAndPersist(long)>($l0);

        return;
    }
    public void setDefaultUserId(java.lang.String)
    {
        org.openintents.openpgp.util.OpenPgpKeyPreference r0;
        java.lang.String $r1;

        r0 := @this: org.openintents.openpgp.util.OpenPgpKeyPreference;

        $r1 := @parameter0: java.lang.String;

        r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: java.lang.String mDefaultUserId> = $r1;

        return;
    }
    public void setOpenPgpProvider(java.lang.String)
    {
        org.openintents.openpgp.util.OpenPgpKeyPreference r0;
        java.lang.String $r1;

        r0 := @this: org.openintents.openpgp.util.OpenPgpKeyPreference;

        $r1 := @parameter0: java.lang.String;

        r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: java.lang.String mOpenPgpProvider> = $r1;

        specialinvoke r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: void updateEnabled()>();

        return;
    }
    public void setValue(long)
    {
        org.openintents.openpgp.util.OpenPgpKeyPreference r0;
        long $l0;

        r0 := @this: org.openintents.openpgp.util.OpenPgpKeyPreference;

        $l0 := @parameter0: long;

        specialinvoke r0.<org.openintents.openpgp.util.OpenPgpKeyPreference: void setAndPersist(long)>($l0);

        return;
    }
