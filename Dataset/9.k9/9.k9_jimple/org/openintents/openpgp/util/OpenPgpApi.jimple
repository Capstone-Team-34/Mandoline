org.openintents.openpgp.util.OpenPgpApi extends java.lang.Object
public static final java.lang.String ACTION_BACKUP
public static final java.lang.String ACTION_CHECK_PERMISSION
public static final java.lang.String ACTION_CLEARTEXT_SIGN
public static final java.lang.String ACTION_DECRYPT_METADATA
public static final java.lang.String ACTION_DECRYPT_VERIFY
public static final java.lang.String ACTION_DETACHED_SIGN
public static final java.lang.String ACTION_ENCRYPT
public static final java.lang.String ACTION_GET_KEY
public static final java.lang.String ACTION_GET_KEY_IDS
public static final java.lang.String ACTION_GET_SIGN_KEY_ID
public static final java.lang.String ACTION_QUERY_AUTOCRYPT_STATUS
public static final java.lang.String ACTION_SIGN
public static final java.lang.String ACTION_SIGN_AND_ENCRYPT
public static final java.lang.String ACTION_UPDATE_AUTOCRYPT_PEER
public static final int API_VERSION
public static final int AUTOCRYPT_STATUS_AVAILABLE
public static final int AUTOCRYPT_STATUS_DISCOURAGE
public static final int AUTOCRYPT_STATUS_MUTUAL
public static final int AUTOCRYPT_STATUS_UNAVAILABLE
public static final java.lang.String EXTRA_API_VERSION
public static final java.lang.String EXTRA_AUTOCRYPT_PEER_ID
public static final java.lang.String EXTRA_AUTOCRYPT_PEER_UPDATE
public static final java.lang.String EXTRA_BACKUP_SECRET
public static final java.lang.String EXTRA_CALL_UUID1
public static final java.lang.String EXTRA_CALL_UUID2
public static final java.lang.String EXTRA_DATA_LENGTH
public static final java.lang.String EXTRA_DECRYPTION_RESULT
public static final java.lang.String EXTRA_DETACHED_SIGNATURE
public static final java.lang.String EXTRA_ENABLE_COMPRESSION
public static final java.lang.String EXTRA_KEY_ID
public static final java.lang.String EXTRA_KEY_IDS
public static final java.lang.String EXTRA_KEY_IDS_SELECTED
public static final java.lang.String EXTRA_MINIMIZE
public static final java.lang.String EXTRA_MINIMIZE_USER_ID
public static final java.lang.String EXTRA_OPPORTUNISTIC_ENCRYPTION
public static final java.lang.String EXTRA_ORIGINAL_FILENAME
public static final java.lang.String EXTRA_PASSPHRASE
public static final java.lang.String EXTRA_PROGRESS_MESSENGER
public static final java.lang.String EXTRA_REQUEST_ASCII_ARMOR
public static final java.lang.String EXTRA_SENDER_ADDRESS
public static final java.lang.String EXTRA_SIGN_KEY_ID
public static final java.lang.String EXTRA_SUPPORT_OVERRIDE_CRYPTO_WARNING
public static final java.lang.String EXTRA_USER_ID
public static final java.lang.String EXTRA_USER_IDS
public static final java.lang.String RESULT_AUTOCRYPT_STATUS
public static final java.lang.String RESULT_CHARSET
public static final java.lang.String RESULT_CODE
public static final int RESULT_CODE_ERROR
public static final int RESULT_CODE_SUCCESS
public static final int RESULT_CODE_USER_INTERACTION_REQUIRED
public static final java.lang.String RESULT_DECRYPTION
public static final java.lang.String RESULT_DETACHED_SIGNATURE
public static final java.lang.String RESULT_ERROR
public static final java.lang.String RESULT_INSECURE_DETAIL_INTENT
public static final java.lang.String RESULT_INTENT
public static final java.lang.String RESULT_KEYS_CONFIRMED
public static final java.lang.String RESULT_KEY_IDS
public static final java.lang.String RESULT_METADATA
public static final java.lang.String RESULT_OVERRIDE_CRYPTO_WARNING
public static final java.lang.String RESULT_SIGNATURE
public static final java.lang.String RESULT_SIGNATURE_MICALG
public static final java.lang.String SERVICE_INTENT_2
public static final java.lang.String TAG
android.content.Context mContext
final java.util.concurrent.atomic.AtomicInteger mPipeIdGen
org.openintents.openpgp.IOpenPgpService2 mService
    public void <init>(android.content.Context, org.openintents.openpgp.IOpenPgpService2)
    {
        org.openintents.openpgp.util.OpenPgpApi r0;
        android.content.Context $r1;
        org.openintents.openpgp.IOpenPgpService2 $r2;
        java.util.concurrent.atomic.AtomicInteger $r3;

        r0 := @this: org.openintents.openpgp.util.OpenPgpApi;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: org.openintents.openpgp.IOpenPgpService2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<org.openintents.openpgp.util.OpenPgpApi: java.util.concurrent.atomic.AtomicInteger mPipeIdGen> = $r3;

        r0.<org.openintents.openpgp.util.OpenPgpApi: android.content.Context mContext> = $r1;

        r0.<org.openintents.openpgp.util.OpenPgpApi: org.openintents.openpgp.IOpenPgpService2 mService> = $r2;

        return;
    }
    private static void closeLoudly(android.os.ParcelFileDescriptor)
    {
        android.os.ParcelFileDescriptor $r0;
        java.io.IOException r1;

        $r0 := @parameter0: android.os.ParcelFileDescriptor;

        if $r0 == null goto label4;

     label1:
        virtualinvoke $r0.<android.os.ParcelFileDescriptor: void close()>();

     label2:
        return;

     label3:
        r1 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("OpenPgp API", "IOException when closing ParcelFileDescriptor!", r1);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
    private android.content.Intent executeApi(android.content.Intent, android.os.ParcelFileDescriptor, int)
    {
        org.openintents.openpgp.util.OpenPgpApi r0;
        android.content.Intent $r1;
        android.os.ParcelFileDescriptor $r2;
        int $i0;
        java.lang.Exception r3;
        org.openintents.openpgp.IOpenPgpService2 $r4;
        android.content.Context $r5;
        java.lang.ClassLoader $r6;
        org.openintents.openpgp.OpenPgpError $r7;
        java.lang.String $r8;
        java.lang.Throwable $r9;

        r0 := @this: org.openintents.openpgp.util.OpenPgpApi;

        $r1 := @parameter0: android.content.Intent;

        $r2 := @parameter1: android.os.ParcelFileDescriptor;

        $i0 := @parameter2: int;

     label1:
        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("api_version", 12);

        $r4 = r0.<org.openintents.openpgp.util.OpenPgpApi: org.openintents.openpgp.IOpenPgpService2 mService>;

        $r1 = interfaceinvoke $r4.<org.openintents.openpgp.IOpenPgpService2: android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,int)>($r1, $r2, $i0);

        $r5 = r0.<org.openintents.openpgp.util.OpenPgpApi: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke $r1.<android.content.Intent: void setExtrasClassLoader(java.lang.ClassLoader)>($r6);

     label2:
        staticinvoke <org.openintents.openpgp.util.OpenPgpApi: void closeLoudly(android.os.ParcelFileDescriptor)>($r2);

        return $r1;

     label3:
        r3 := @caughtexception;

     label4:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("OpenPgp API", "Exception in executeApi call", r3);

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>()>();

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("result_code", 0);

        $r7 = new org.openintents.openpgp.OpenPgpError;

        $r8 = virtualinvoke r3.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r7.<org.openintents.openpgp.OpenPgpError: void <init>(int,java.lang.String)>(-1, $r8);

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("error", $r7);

     label5:
        staticinvoke <org.openintents.openpgp.util.OpenPgpApi: void closeLoudly(android.os.ParcelFileDescriptor)>($r2);

        return $r1;

     label6:
        $r9 := @caughtexception;

        staticinvoke <org.openintents.openpgp.util.OpenPgpApi: void closeLoudly(android.os.ParcelFileDescriptor)>($r2);

        throw $r9;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }
    public void checkPermissionPing(org.openintents.openpgp.util.OpenPgpApi$PermissionPingCallback)
    {
        org.openintents.openpgp.util.OpenPgpApi r0;
        org.openintents.openpgp.util.OpenPgpApi$PermissionPingCallback $r1;
        android.content.Intent r2;
        org.openintents.openpgp.util.OpenPgpApi$2 $r3;

        r0 := @this: org.openintents.openpgp.util.OpenPgpApi;

        $r1 := @parameter0: org.openintents.openpgp.util.OpenPgpApi$PermissionPingCallback;

        r2 = new android.content.Intent;

        specialinvoke r2.<android.content.Intent: void <init>(java.lang.String)>("org.openintents.openpgp.action.CHECK_PERMISSION");

        $r3 = new org.openintents.openpgp.util.OpenPgpApi$2;

        specialinvoke $r3.<org.openintents.openpgp.util.OpenPgpApi$2: void <init>(org.openintents.openpgp.util.OpenPgpApi,org.openintents.openpgp.util.OpenPgpApi$PermissionPingCallback)>(r0, $r1);

        virtualinvoke r0.<org.openintents.openpgp.util.OpenPgpApi: void executeApiAsync(android.content.Intent,java.io.InputStream,java.io.OutputStream,org.openintents.openpgp.util.OpenPgpApi$IOpenPgpCallback)>(r2, null, null, $r3);

        return;
    }
    public android.content.Intent executeApi(android.content.Intent, java.io.InputStream, java.io.OutputStream)
    {
        org.openintents.openpgp.util.OpenPgpApi r0;
        android.content.Intent $r1;
        java.io.InputStream $r2;
        java.io.OutputStream $r3;
        java.lang.Exception r4;
        android.os.ParcelFileDescriptor r5, r6, $r10;
        org.openintents.openpgp.util.ParcelFileDescriptorUtil$TransferThread r7;
        int i0, $i1;
        java.util.concurrent.atomic.AtomicInteger $r8;
        org.openintents.openpgp.IOpenPgpService2 $r9;
        org.openintents.openpgp.OpenPgpError $r11;
        java.lang.String $r12;
        java.lang.Throwable $r13;

        r0 := @this: org.openintents.openpgp.util.OpenPgpApi;

        $r1 := @parameter0: android.content.Intent;

        $r2 := @parameter1: java.io.InputStream;

        $r3 := @parameter2: java.io.OutputStream;

        r5 = null;

        r6 = null;

        if $r2 == null goto label02;

     label01:
        r5 = staticinvoke <org.openintents.openpgp.util.ParcelFileDescriptorUtil: android.os.ParcelFileDescriptor pipeFrom(java.io.InputStream)>($r2);

     label02:
        r7 = null;

        i0 = 0;

        if $r3 == null goto label08;

     label03:
        $r8 = r0.<org.openintents.openpgp.util.OpenPgpApi: java.util.concurrent.atomic.AtomicInteger mPipeIdGen>;

        $i1 = virtualinvoke $r8.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

     label04:
        i0 = $i1;

     label05:
        $r9 = r0.<org.openintents.openpgp.util.OpenPgpApi: org.openintents.openpgp.IOpenPgpService2 mService>;

        $r10 = interfaceinvoke $r9.<org.openintents.openpgp.IOpenPgpService2: android.os.ParcelFileDescriptor createOutputPipe(int)>($i1);

     label06:
        r6 = $r10;

     label07:
        r7 = staticinvoke <org.openintents.openpgp.util.ParcelFileDescriptorUtil: org.openintents.openpgp.util.ParcelFileDescriptorUtil$TransferThread pipeTo(java.io.OutputStream,android.os.ParcelFileDescriptor)>($r3, $r10);

     label08:
        $r1 = specialinvoke r0.<org.openintents.openpgp.util.OpenPgpApi: android.content.Intent executeApi(android.content.Intent,android.os.ParcelFileDescriptor,int)>($r1, r5, i0);

     label09:
        if r7 == null goto label11;

     label10:
        virtualinvoke r7.<java.lang.Thread: void join()>();

     label11:
        staticinvoke <org.openintents.openpgp.util.OpenPgpApi: void closeLoudly(android.os.ParcelFileDescriptor)>(r6);

        return $r1;

     label12:
        r4 := @caughtexception;

     label13:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("OpenPgp API", "Exception in executeApi call", r4);

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>()>();

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("result_code", 0);

        $r11 = new org.openintents.openpgp.OpenPgpError;

        $r12 = virtualinvoke r4.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r11.<org.openintents.openpgp.OpenPgpError: void <init>(int,java.lang.String)>(-1, $r12);

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("error", $r11);

     label14:
        staticinvoke <org.openintents.openpgp.util.OpenPgpApi: void closeLoudly(android.os.ParcelFileDescriptor)>(r6);

        return $r1;

     label15:
        $r13 := @caughtexception;

        staticinvoke <org.openintents.openpgp.util.OpenPgpApi: void closeLoudly(android.os.ParcelFileDescriptor)>(r6);

        throw $r13;

        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label03 to label04 with label12;
        catch java.lang.Exception from label05 to label06 with label12;
        catch java.lang.Exception from label07 to label08 with label12;
        catch java.lang.Exception from label08 to label09 with label12;
        catch java.lang.Exception from label10 to label11 with label12;
        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }
    public android.content.Intent executeApi(android.content.Intent, org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource, java.io.OutputStream)
    {
        org.openintents.openpgp.util.OpenPgpApi r0;
        android.content.Intent $r1;
        org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource $r2;
        java.io.OutputStream $r3;
        java.lang.Exception r4;
        android.os.ParcelFileDescriptor r5, $r10;
        java.lang.Long $r6;
        long $l0;
        org.openintents.openpgp.util.ParcelFileDescriptorUtil$TransferThread r7;
        int i1, $i2;
        java.util.concurrent.atomic.AtomicInteger $r8;
        org.openintents.openpgp.IOpenPgpService2 $r9;
        org.openintents.openpgp.OpenPgpError $r11;
        java.lang.String $r12;

        r0 := @this: org.openintents.openpgp.util.OpenPgpApi;

        $r1 := @parameter0: android.content.Intent;

        $r2 := @parameter1: org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource;

        $r3 := @parameter2: java.io.OutputStream;

        r5 = null;

        if $r2 == null goto label05;

     label01:
        $r6 = virtualinvoke $r2.<org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource: java.lang.Long getSizeForProgress()>();

     label02:
        if $r6 == null goto label13;

     label03:
        $l0 = virtualinvoke $r6.<java.lang.Long: long longValue()>();

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("data_length", $l0);

     label04:
        r5 = virtualinvoke $r2.<org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource: android.os.ParcelFileDescriptor startPumpThread()>();

     label05:
        r7 = null;

        i1 = 0;

        if $r3 == null goto label09;

     label06:
        $r8 = r0.<org.openintents.openpgp.util.OpenPgpApi: java.util.concurrent.atomic.AtomicInteger mPipeIdGen>;

        $i2 = virtualinvoke $r8.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

     label07:
        i1 = $i2;

     label08:
        $r9 = r0.<org.openintents.openpgp.util.OpenPgpApi: org.openintents.openpgp.IOpenPgpService2 mService>;

        $r10 = interfaceinvoke $r9.<org.openintents.openpgp.IOpenPgpService2: android.os.ParcelFileDescriptor createOutputPipe(int)>($i2);

        r7 = staticinvoke <org.openintents.openpgp.util.ParcelFileDescriptorUtil: org.openintents.openpgp.util.ParcelFileDescriptorUtil$TransferThread pipeTo(java.io.OutputStream,android.os.ParcelFileDescriptor)>($r3, $r10);

     label09:
        $r1 = specialinvoke r0.<org.openintents.openpgp.util.OpenPgpApi: android.content.Intent executeApi(android.content.Intent,android.os.ParcelFileDescriptor,int)>($r1, r5, i1);

     label10:
        if r7 == null goto label16;

     label11:
        virtualinvoke r7.<java.lang.Thread: void join()>();

     label12:
        return $r1;

     label13:
        virtualinvoke $r1.<android.content.Intent: void removeExtra(java.lang.String)>("progress_messenger");

     label14:
        goto label04;

     label15:
        r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("OpenPgp API", "Exception in executeApi call", r4);

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>()>();

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("result_code", 0);

        $r11 = new org.openintents.openpgp.OpenPgpError;

        $r12 = virtualinvoke r4.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r11.<org.openintents.openpgp.OpenPgpError: void <init>(int,java.lang.String)>(-1, $r12);

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("error", $r11);

     label16:
        return $r1;

        catch java.lang.Exception from label01 to label02 with label15;
        catch java.lang.Exception from label03 to label05 with label15;
        catch java.lang.Exception from label06 to label07 with label15;
        catch java.lang.Exception from label08 to label09 with label15;
        catch java.lang.Exception from label09 to label10 with label15;
        catch java.lang.Exception from label11 to label12 with label15;
        catch java.lang.Exception from label13 to label14 with label15;
    }
    public org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataResult executeApi(android.content.Intent, org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource, org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink)
    {
        org.openintents.openpgp.util.OpenPgpApi r0;
        android.content.Intent $r1;
        org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource $r2;
        org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink r3;
        java.lang.Exception r4;
        android.os.ParcelFileDescriptor r5, r6, $r11;
        java.lang.Long $r7;
        long $l0;
        org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSinkTransferThread r8;
        int i1, $i2;
        java.util.concurrent.atomic.AtomicInteger $r9;
        org.openintents.openpgp.IOpenPgpService2 $r10;
        org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataResult $r12;
        org.openintents.openpgp.OpenPgpError $r13;
        java.lang.String $r14;
        java.lang.Object $r15;
        java.lang.Throwable $r16;

        r0 := @this: org.openintents.openpgp.util.OpenPgpApi;

        $r1 := @parameter0: android.content.Intent;

        $r2 := @parameter1: org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource;

        r3 := @parameter2: org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink;

        r5 = null;

        r6 = null;

        if $r2 == null goto label05;

     label01:
        $r7 = virtualinvoke $r2.<org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource: java.lang.Long getSizeForProgress()>();

     label02:
        if $r7 == null goto label16;

     label03:
        $l0 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("data_length", $l0);

     label04:
        r5 = virtualinvoke $r2.<org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource: android.os.ParcelFileDescriptor startPumpThread()>();

     label05:
        r8 = null;

        i1 = 0;

        if r3 == null goto label11;

     label06:
        $r9 = r0.<org.openintents.openpgp.util.OpenPgpApi: java.util.concurrent.atomic.AtomicInteger mPipeIdGen>;

        $i2 = virtualinvoke $r9.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

     label07:
        i1 = $i2;

     label08:
        $r10 = r0.<org.openintents.openpgp.util.OpenPgpApi: org.openintents.openpgp.IOpenPgpService2 mService>;

        $r11 = interfaceinvoke $r10.<org.openintents.openpgp.IOpenPgpService2: android.os.ParcelFileDescriptor createOutputPipe(int)>($i2);

     label09:
        r6 = $r11;

     label10:
        r8 = staticinvoke <org.openintents.openpgp.util.ParcelFileDescriptorUtil: org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSinkTransferThread asyncPipeToDataSink(org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink,android.os.ParcelFileDescriptor)>(r3, $r11);

     label11:
        $r1 = specialinvoke r0.<org.openintents.openpgp.util.OpenPgpApi: android.content.Intent executeApi(android.content.Intent,android.os.ParcelFileDescriptor,int)>($r1, r5, i1);

     label12:
        if r8 != null goto label21;

     label13:
        $r12 = new org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataResult;

     label14:
        specialinvoke $r12.<org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataResult: void <init>(android.content.Intent,java.lang.Object)>($r1, null);

     label15:
        staticinvoke <org.openintents.openpgp.util.OpenPgpApi: void closeLoudly(android.os.ParcelFileDescriptor)>(r6);

        return $r12;

     label16:
        virtualinvoke $r1.<android.content.Intent: void removeExtra(java.lang.String)>("progress_messenger");

     label17:
        goto label04;

     label18:
        r4 := @caughtexception;

     label19:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("OpenPgp API", "Exception in executeApi call", r4);

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>()>();

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("result_code", 0);

        $r13 = new org.openintents.openpgp.OpenPgpError;

        $r14 = virtualinvoke r4.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r13.<org.openintents.openpgp.OpenPgpError: void <init>(int,java.lang.String)>(-1, $r14);

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("error", $r13);

        $r12 = new org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataResult;

        specialinvoke $r12.<org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataResult: void <init>(android.content.Intent,java.lang.Object)>($r1, null);

     label20:
        staticinvoke <org.openintents.openpgp.util.OpenPgpApi: void closeLoudly(android.os.ParcelFileDescriptor)>(r6);

        return $r12;

     label21:
        virtualinvoke r8.<org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSinkTransferThread: void join()>();

     label22:
        $r12 = new org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataResult;

     label23:
        $r15 = virtualinvoke r8.<org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSinkTransferThread: java.lang.Object getResult()>();

        specialinvoke $r12.<org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataResult: void <init>(android.content.Intent,java.lang.Object)>($r1, $r15);

     label24:
        staticinvoke <org.openintents.openpgp.util.OpenPgpApi: void closeLoudly(android.os.ParcelFileDescriptor)>(r6);

        return $r12;

     label25:
        $r16 := @caughtexception;

        staticinvoke <org.openintents.openpgp.util.OpenPgpApi: void closeLoudly(android.os.ParcelFileDescriptor)>(r6);

        throw $r16;

        catch java.lang.Exception from label01 to label02 with label18;
        catch java.lang.Exception from label03 to label05 with label18;
        catch java.lang.Exception from label06 to label07 with label18;
        catch java.lang.Exception from label08 to label09 with label18;
        catch java.lang.Exception from label10 to label11 with label18;
        catch java.lang.Exception from label11 to label12 with label18;
        catch java.lang.Exception from label14 to label15 with label18;
        catch java.lang.Throwable from label01 to label02 with label25;
        catch java.lang.Throwable from label03 to label05 with label25;
        catch java.lang.Throwable from label06 to label07 with label25;
        catch java.lang.Throwable from label08 to label09 with label25;
        catch java.lang.Throwable from label10 to label11 with label25;
        catch java.lang.Throwable from label11 to label12 with label25;
        catch java.lang.Throwable from label13 to label15 with label25;
        catch java.lang.Exception from label16 to label17 with label18;
        catch java.lang.Throwable from label16 to label17 with label25;
        catch java.lang.Throwable from label19 to label20 with label25;
        catch java.lang.Exception from label21 to label22 with label18;
        catch java.lang.Exception from label23 to label24 with label18;
        catch java.lang.Throwable from label21 to label24 with label25;
    }
    public android.os.AsyncTask executeApiAsync(android.content.Intent, org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource, org.openintents.openpgp.util.OpenPgpApi$IOpenPgpSinkResultCallback)
    {
        org.openintents.openpgp.util.OpenPgpApi r0;
        android.content.Intent $r1;
        org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource $r2;
        org.openintents.openpgp.util.OpenPgpApi$IOpenPgpSinkResultCallback r3;
        org.openintents.openpgp.util.OpenPgpApi$OpenPgpSourceSinkAsyncTask r4;
        int $i0;
        java.util.concurrent.Executor $r5;

        r0 := @this: org.openintents.openpgp.util.OpenPgpApi;

        $r1 := @parameter0: android.content.Intent;

        $r2 := @parameter1: org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource;

        r3 := @parameter2: org.openintents.openpgp.util.OpenPgpApi$IOpenPgpSinkResultCallback;

        r4 = new org.openintents.openpgp.util.OpenPgpApi$OpenPgpSourceSinkAsyncTask;

        specialinvoke r4.<org.openintents.openpgp.util.OpenPgpApi$OpenPgpSourceSinkAsyncTask: void <init>(org.openintents.openpgp.util.OpenPgpApi,android.content.Intent,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink,org.openintents.openpgp.util.OpenPgpApi$IOpenPgpSinkResultCallback,org.openintents.openpgp.util.OpenPgpApi$1)>(r0, $r1, $r2, null, r3, null);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 11 goto label1;

        $r5 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        virtualinvoke r4.<org.openintents.openpgp.util.OpenPgpApi$OpenPgpSourceSinkAsyncTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r5, null);

        return r4;

     label1:
        virtualinvoke r4.<org.openintents.openpgp.util.OpenPgpApi$OpenPgpSourceSinkAsyncTask: android.os.AsyncTask execute(java.lang.Object[])>(null);

        return r4;
    }
    public org.openintents.openpgp.util.OpenPgpApi$CancelableBackgroundOperation executeApiAsync(android.content.Intent, org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource, org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink, org.openintents.openpgp.util.OpenPgpApi$IOpenPgpSinkResultCallback)
    {
        org.openintents.openpgp.util.OpenPgpApi r0;
        android.content.Intent $r1;
        org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource $r2;
        org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink r3;
        org.openintents.openpgp.util.OpenPgpApi$IOpenPgpSinkResultCallback r4;
        org.openintents.openpgp.util.OpenPgpApi$OpenPgpSourceSinkAsyncTask r5;
        android.os.Messenger r6;
        android.os.Handler $r7;
        org.openintents.openpgp.util.OpenPgpApi$1 $r8;
        int $i0;
        java.util.concurrent.Executor $r9;

        r0 := @this: org.openintents.openpgp.util.OpenPgpApi;

        $r1 := @parameter0: android.content.Intent;

        $r2 := @parameter1: org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource;

        r3 := @parameter2: org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink;

        r4 := @parameter3: org.openintents.openpgp.util.OpenPgpApi$IOpenPgpSinkResultCallback;

        r6 = new android.os.Messenger;

        $r7 = new android.os.Handler;

        $r8 = new org.openintents.openpgp.util.OpenPgpApi$1;

        specialinvoke $r8.<org.openintents.openpgp.util.OpenPgpApi$1: void <init>(org.openintents.openpgp.util.OpenPgpApi,org.openintents.openpgp.util.OpenPgpApi$IOpenPgpSinkResultCallback)>(r0, r4);

        specialinvoke $r7.<android.os.Handler: void <init>(android.os.Handler$Callback)>($r8);

        specialinvoke r6.<android.os.Messenger: void <init>(android.os.Handler)>($r7);

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("progress_messenger", r6);

        r5 = new org.openintents.openpgp.util.OpenPgpApi$OpenPgpSourceSinkAsyncTask;

        specialinvoke r5.<org.openintents.openpgp.util.OpenPgpApi$OpenPgpSourceSinkAsyncTask: void <init>(org.openintents.openpgp.util.OpenPgpApi,android.content.Intent,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink,org.openintents.openpgp.util.OpenPgpApi$IOpenPgpSinkResultCallback,org.openintents.openpgp.util.OpenPgpApi$1)>(r0, $r1, $r2, r3, r4, null);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 11 goto label1;

        $r9 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        virtualinvoke r5.<org.openintents.openpgp.util.OpenPgpApi$OpenPgpSourceSinkAsyncTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r9, null);

        return r5;

     label1:
        virtualinvoke r5.<org.openintents.openpgp.util.OpenPgpApi$OpenPgpSourceSinkAsyncTask: android.os.AsyncTask execute(java.lang.Object[])>(null);

        return r5;
    }
    public void executeApiAsync(android.content.Intent, java.io.InputStream, java.io.OutputStream, org.openintents.openpgp.util.OpenPgpApi$IOpenPgpCallback)
    {
        org.openintents.openpgp.util.OpenPgpApi r0;
        android.content.Intent $r1;
        java.io.InputStream $r2;
        java.io.OutputStream $r3;
        org.openintents.openpgp.util.OpenPgpApi$IOpenPgpCallback $r4;
        org.openintents.openpgp.util.OpenPgpApi$OpenPgpAsyncTask r5;
        int $i0;
        java.util.concurrent.Executor $r6;

        r0 := @this: org.openintents.openpgp.util.OpenPgpApi;

        $r1 := @parameter0: android.content.Intent;

        $r2 := @parameter1: java.io.InputStream;

        $r3 := @parameter2: java.io.OutputStream;

        $r4 := @parameter3: org.openintents.openpgp.util.OpenPgpApi$IOpenPgpCallback;

        r5 = new org.openintents.openpgp.util.OpenPgpApi$OpenPgpAsyncTask;

        specialinvoke r5.<org.openintents.openpgp.util.OpenPgpApi$OpenPgpAsyncTask: void <init>(org.openintents.openpgp.util.OpenPgpApi,android.content.Intent,java.io.InputStream,java.io.OutputStream,org.openintents.openpgp.util.OpenPgpApi$IOpenPgpCallback,org.openintents.openpgp.util.OpenPgpApi$1)>(r0, $r1, $r2, $r3, $r4, null);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 11 goto label1;

        $r6 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        virtualinvoke r5.<org.openintents.openpgp.util.OpenPgpApi$OpenPgpAsyncTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r6, null);

        return;

     label1:
        virtualinvoke r5.<org.openintents.openpgp.util.OpenPgpApi$OpenPgpAsyncTask: android.os.AsyncTask execute(java.lang.Object[])>(null);

        return;
    }
