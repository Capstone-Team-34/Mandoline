org.apache.commons.io.comparator.DirectoryFileComparator extends org.apache.commons.io.comparator.AbstractFileComparator implements java.io.Serializable
public static final java.util.Comparator DIRECTORY_COMPARATOR
public static final java.util.Comparator DIRECTORY_REVERSE
    static void <clinit>()
    {
        java.util.Comparator $r0;
        org.apache.commons.io.comparator.DirectoryFileComparator $r1;
        org.apache.commons.io.comparator.ReverseComparator $r2;

        $r1 = new org.apache.commons.io.comparator.DirectoryFileComparator;

        specialinvoke $r1.<org.apache.commons.io.comparator.DirectoryFileComparator: void <init>()>();

        <org.apache.commons.io.comparator.DirectoryFileComparator: java.util.Comparator DIRECTORY_COMPARATOR> = $r1;

        $r2 = new org.apache.commons.io.comparator.ReverseComparator;

        $r0 = <org.apache.commons.io.comparator.DirectoryFileComparator: java.util.Comparator DIRECTORY_COMPARATOR>;

        specialinvoke $r2.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r0);

        <org.apache.commons.io.comparator.DirectoryFileComparator: java.util.Comparator DIRECTORY_REVERSE> = $r2;

        return;
    }
    public void <init>()
    {
        org.apache.commons.io.comparator.DirectoryFileComparator r0;

        r0 := @this: org.apache.commons.io.comparator.DirectoryFileComparator;

        specialinvoke r0.<org.apache.commons.io.comparator.AbstractFileComparator: void <init>()>();

        return;
    }
    private int getType(java.io.File)
    {
        org.apache.commons.io.comparator.DirectoryFileComparator r0;
        java.io.File $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.io.comparator.DirectoryFileComparator;

        $r1 := @parameter0: java.io.File;

        $z0 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 2;
    }
    public int compare(java.io.File, java.io.File)
    {
        org.apache.commons.io.comparator.DirectoryFileComparator r0;
        java.io.File $r1, $r2;
        int $i0, $i1;

        r0 := @this: org.apache.commons.io.comparator.DirectoryFileComparator;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.io.File;

        $i0 = specialinvoke r0.<org.apache.commons.io.comparator.DirectoryFileComparator: int getType(java.io.File)>($r1);

        $i1 = specialinvoke r0.<org.apache.commons.io.comparator.DirectoryFileComparator: int getType(java.io.File)>($r2);

        $i0 = $i0 - $i1;

        return $i0;
    }
    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.io.comparator.DirectoryFileComparator r0;
        int $i0;
        java.lang.Object $r1, $r2;
        java.io.File $r3, $r4;

        r0 := @this: org.apache.commons.io.comparator.DirectoryFileComparator;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (java.io.File) $r1;

        $r4 = (java.io.File) $r2;

        $i0 = virtualinvoke r0.<org.apache.commons.io.comparator.DirectoryFileComparator: int compare(java.io.File,java.io.File)>($r3, $r4);

        return $i0;
    }
    public volatile java.util.List sort(java.util.List)
    {
        org.apache.commons.io.comparator.DirectoryFileComparator r0;
        java.util.List $r1;

        r0 := @this: org.apache.commons.io.comparator.DirectoryFileComparator;

        $r1 := @parameter0: java.util.List;

        $r1 = specialinvoke r0.<org.apache.commons.io.comparator.AbstractFileComparator: java.util.List sort(java.util.List)>($r1);

        return $r1;
    }
    public volatile java.io.File[] sort(java.io.File[])
    {
        org.apache.commons.io.comparator.DirectoryFileComparator r0;
        java.io.File[] $r1;

        r0 := @this: org.apache.commons.io.comparator.DirectoryFileComparator;

        $r1 := @parameter0: java.io.File[];

        $r1 = specialinvoke r0.<org.apache.commons.io.comparator.AbstractFileComparator: java.io.File[] sort(java.io.File[])>($r1);

        return $r1;
    }
    public volatile java.lang.String toString()
    {
        org.apache.commons.io.comparator.DirectoryFileComparator r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.io.comparator.DirectoryFileComparator;

        $r1 = specialinvoke r0.<org.apache.commons.io.comparator.AbstractFileComparator: java.lang.String toString()>();

        return $r1;
    }
