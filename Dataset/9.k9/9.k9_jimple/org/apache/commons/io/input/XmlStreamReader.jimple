org.apache.commons.io.input.XmlStreamReader extends java.io.Reader
private static final org.apache.commons.io.ByteOrderMark[] BOMS
private static final int BUFFER_SIZE
private static final java.util.regex.Pattern CHARSET_PATTERN
private static final java.lang.String EBCDIC
public static final java.util.regex.Pattern ENCODING_PATTERN
private static final java.lang.String HTTP_EX_1
private static final java.lang.String HTTP_EX_2
private static final java.lang.String HTTP_EX_3
private static final java.lang.String RAW_EX_1
private static final java.lang.String RAW_EX_2
private static final java.lang.String US_ASCII
private static final java.lang.String UTF_16
private static final java.lang.String UTF_16BE
private static final java.lang.String UTF_16LE
private static final java.lang.String UTF_32
private static final java.lang.String UTF_32BE
private static final java.lang.String UTF_32LE
private static final java.lang.String UTF_8
private static final org.apache.commons.io.ByteOrderMark[] XML_GUESS_BYTES
private final java.lang.String defaultEncoding
private final java.lang.String encoding
private final java.io.Reader reader
    static void <clinit>()
    {
        org.apache.commons.io.ByteOrderMark[] $r0;
        org.apache.commons.io.ByteOrderMark $r1;
        int[] $r2;
        java.util.regex.Pattern $r3;

        $r0 = newarray (org.apache.commons.io.ByteOrderMark)[5];

        $r1 = <org.apache.commons.io.ByteOrderMark: org.apache.commons.io.ByteOrderMark UTF_8>;

        $r0[0] = $r1;

        $r1 = <org.apache.commons.io.ByteOrderMark: org.apache.commons.io.ByteOrderMark UTF_16BE>;

        $r0[1] = $r1;

        $r1 = <org.apache.commons.io.ByteOrderMark: org.apache.commons.io.ByteOrderMark UTF_16LE>;

        $r0[2] = $r1;

        $r1 = <org.apache.commons.io.ByteOrderMark: org.apache.commons.io.ByteOrderMark UTF_32BE>;

        $r0[3] = $r1;

        $r1 = <org.apache.commons.io.ByteOrderMark: org.apache.commons.io.ByteOrderMark UTF_32LE>;

        $r0[4] = $r1;

        <org.apache.commons.io.input.XmlStreamReader: org.apache.commons.io.ByteOrderMark[] BOMS> = $r0;

        $r0 = newarray (org.apache.commons.io.ByteOrderMark)[6];

        $r1 = new org.apache.commons.io.ByteOrderMark;

        $r2 = newarray (int)[4];

        $r2[0] = 60;

        $r2[1] = 63;

        $r2[2] = 120;

        $r2[3] = 109;

        specialinvoke $r1.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>("UTF-8", $r2);

        $r0[0] = $r1;

        $r1 = new org.apache.commons.io.ByteOrderMark;

        $r2 = newarray (int)[4];

        $r2[0] = 0;

        $r2[1] = 60;

        $r2[2] = 0;

        $r2[3] = 63;

        specialinvoke $r1.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>("UTF-16BE", $r2);

        $r0[1] = $r1;

        $r1 = new org.apache.commons.io.ByteOrderMark;

        $r2 = newarray (int)[4];

        $r2[0] = 60;

        $r2[1] = 0;

        $r2[2] = 63;

        $r2[3] = 0;

        specialinvoke $r1.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>("UTF-16LE", $r2);

        $r0[2] = $r1;

        $r1 = new org.apache.commons.io.ByteOrderMark;

        $r2 = newarray (int)[16];

        $r2[0] = 0;

        $r2[1] = 0;

        $r2[2] = 0;

        $r2[3] = 60;

        $r2[4] = 0;

        $r2[5] = 0;

        $r2[6] = 0;

        $r2[7] = 63;

        $r2[8] = 0;

        $r2[9] = 0;

        $r2[10] = 0;

        $r2[11] = 120;

        $r2[12] = 0;

        $r2[13] = 0;

        $r2[14] = 0;

        $r2[15] = 109;

        specialinvoke $r1.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>("UTF-32BE", $r2);

        $r0[3] = $r1;

        $r1 = new org.apache.commons.io.ByteOrderMark;

        $r2 = newarray (int)[16];

        $r2[0] = 60;

        $r2[1] = 0;

        $r2[2] = 0;

        $r2[3] = 0;

        $r2[4] = 63;

        $r2[5] = 0;

        $r2[6] = 0;

        $r2[7] = 0;

        $r2[8] = 120;

        $r2[9] = 0;

        $r2[10] = 0;

        $r2[11] = 0;

        $r2[12] = 109;

        $r2[13] = 0;

        $r2[14] = 0;

        $r2[15] = 0;

        specialinvoke $r1.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>("UTF-32LE", $r2);

        $r0[4] = $r1;

        $r1 = new org.apache.commons.io.ByteOrderMark;

        $r2 = newarray (int)[4];

        $r2[0] = 76;

        $r2[1] = 111;

        $r2[2] = 167;

        $r2[3] = 148;

        specialinvoke $r1.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>("CP1047", $r2);

        $r0[5] = $r1;

        <org.apache.commons.io.input.XmlStreamReader: org.apache.commons.io.ByteOrderMark[] XML_GUESS_BYTES> = $r0;

        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("charset=[\"\']?([.[^; \"\']]*)[\"\']?");

        <org.apache.commons.io.input.XmlStreamReader: java.util.regex.Pattern CHARSET_PATTERN> = $r3;

        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("<\\?xml.*encoding[\\s]*=[\\s]*((?:\".[^\"]*\")|(?:\'.[^\']*\'))", 8);

        <org.apache.commons.io.input.XmlStreamReader: java.util.regex.Pattern ENCODING_PATTERN> = $r3;

        return;
    }
    public void <init>(java.io.File) throws java.io.IOException
    {
        org.apache.commons.io.input.XmlStreamReader r0;
        java.io.File $r1;
        java.io.FileInputStream $r2;

        r0 := @this: org.apache.commons.io.input.XmlStreamReader;

        $r1 := @parameter0: java.io.File;

        $r2 = new java.io.FileInputStream;

        specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

        specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream)>($r2);

        return;
    }
    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        org.apache.commons.io.input.XmlStreamReader r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.commons.io.input.XmlStreamReader;

        $r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>($r1, 1);

        return;
    }
    public void <init>(java.io.InputStream, java.lang.String) throws java.io.IOException
    {
        org.apache.commons.io.input.XmlStreamReader r0;
        java.io.InputStream $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.io.input.XmlStreamReader;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean)>($r1, $r2, 1);

        return;
    }
    public void <init>(java.io.InputStream, java.lang.String, boolean) throws java.io.IOException
    {
        org.apache.commons.io.input.XmlStreamReader r0;
        java.io.InputStream $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.io.input.XmlStreamReader;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>($r1, $r2, $z0, null);

        return;
    }
    public void <init>(java.io.InputStream, java.lang.String, boolean, java.lang.String) throws java.io.IOException
    {
        org.apache.commons.io.input.XmlStreamReader r0;
        java.io.InputStream $r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        org.apache.commons.io.input.BOMInputStream r4, r5;
        org.apache.commons.io.ByteOrderMark[] $r6;
        java.io.BufferedInputStream $r7;
        java.io.InputStreamReader $r8;

        r0 := @this: org.apache.commons.io.input.XmlStreamReader;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r3 := @parameter3: java.lang.String;

        specialinvoke r0.<java.io.Reader: void <init>()>();

        r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String defaultEncoding> = $r3;

        r4 = new org.apache.commons.io.input.BOMInputStream;

        $r7 = new java.io.BufferedInputStream;

        specialinvoke $r7.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r1, 4096);

        $r6 = <org.apache.commons.io.input.XmlStreamReader: org.apache.commons.io.ByteOrderMark[] BOMS>;

        specialinvoke r4.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r7, 0, $r6);

        r5 = new org.apache.commons.io.input.BOMInputStream;

        $r6 = <org.apache.commons.io.input.XmlStreamReader: org.apache.commons.io.ByteOrderMark[] XML_GUESS_BYTES>;

        specialinvoke r5.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>(r4, 1, $r6);

        $r2 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)>(r4, r5, $r2, $z0);

        r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String encoding> = $r2;

        $r8 = new java.io.InputStreamReader;

        $r2 = r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String encoding>;

        specialinvoke $r8.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r5, $r2);

        r0.<org.apache.commons.io.input.XmlStreamReader: java.io.Reader reader> = $r8;

        return;
    }
    public void <init>(java.io.InputStream, boolean) throws java.io.IOException
    {
        org.apache.commons.io.input.XmlStreamReader r0;
        java.io.InputStream $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.io.input.XmlStreamReader;

        $r1 := @parameter0: java.io.InputStream;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>($r1, $z0, null);

        return;
    }
    public void <init>(java.io.InputStream, boolean, java.lang.String) throws java.io.IOException
    {
        org.apache.commons.io.input.XmlStreamReader r0;
        java.io.InputStream $r1;
        boolean $z0;
        java.lang.String $r2;
        org.apache.commons.io.input.BOMInputStream r3, r4;
        org.apache.commons.io.ByteOrderMark[] $r5;
        java.io.BufferedInputStream $r6;
        java.io.InputStreamReader $r7;

        r0 := @this: org.apache.commons.io.input.XmlStreamReader;

        $r1 := @parameter0: java.io.InputStream;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.io.Reader: void <init>()>();

        r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String defaultEncoding> = $r2;

        r3 = new org.apache.commons.io.input.BOMInputStream;

        $r6 = new java.io.BufferedInputStream;

        specialinvoke $r6.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r1, 4096);

        $r5 = <org.apache.commons.io.input.XmlStreamReader: org.apache.commons.io.ByteOrderMark[] BOMS>;

        specialinvoke r3.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r6, 0, $r5);

        r4 = new org.apache.commons.io.input.BOMInputStream;

        $r5 = <org.apache.commons.io.input.XmlStreamReader: org.apache.commons.io.ByteOrderMark[] XML_GUESS_BYTES>;

        specialinvoke r4.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>(r3, 1, $r5);

        $r2 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)>(r3, r4, $z0);

        r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String encoding> = $r2;

        $r7 = new java.io.InputStreamReader;

        $r2 = r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String encoding>;

        specialinvoke $r7.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r4, $r2);

        r0.<org.apache.commons.io.input.XmlStreamReader: java.io.Reader reader> = $r7;

        return;
    }
    public void <init>(java.net.URL) throws java.io.IOException
    {
        org.apache.commons.io.input.XmlStreamReader r0;
        java.net.URL $r1;
        java.net.URLConnection $r2;

        r0 := @this: org.apache.commons.io.input.XmlStreamReader;

        $r1 := @parameter0: java.net.URL;

        $r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>();

        specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>($r2, null);

        return;
    }
    public void <init>(java.net.URLConnection, java.lang.String) throws java.io.IOException
    {
        org.apache.commons.io.input.XmlStreamReader r0;
        java.net.URLConnection $r1;
        java.lang.String $r2;
        org.apache.commons.io.input.BOMInputStream r3, r4;
        org.apache.commons.io.ByteOrderMark[] $r5;
        java.io.InputStream $r6;
        java.io.BufferedInputStream $r7;
        boolean $z0;
        java.io.InputStreamReader $r8;

        r0 := @this: org.apache.commons.io.input.XmlStreamReader;

        $r1 := @parameter0: java.net.URLConnection;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.io.Reader: void <init>()>();

        r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String defaultEncoding> = $r2;

        $r2 = virtualinvoke $r1.<java.net.URLConnection: java.lang.String getContentType()>();

        $r6 = virtualinvoke $r1.<java.net.URLConnection: java.io.InputStream getInputStream()>();

        r3 = new org.apache.commons.io.input.BOMInputStream;

        $r7 = new java.io.BufferedInputStream;

        specialinvoke $r7.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r6, 4096);

        $r5 = <org.apache.commons.io.input.XmlStreamReader: org.apache.commons.io.ByteOrderMark[] BOMS>;

        specialinvoke r3.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r7, 0, $r5);

        r4 = new org.apache.commons.io.input.BOMInputStream;

        $r5 = <org.apache.commons.io.input.XmlStreamReader: org.apache.commons.io.ByteOrderMark[] XML_GUESS_BYTES>;

        specialinvoke r4.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>(r3, 1, $r5);

        $z0 = $r1 instanceof java.net.HttpURLConnection;

        if $z0 != 0 goto label1;

        if $r2 == null goto label3;

     label1:
        $r2 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)>(r3, r4, $r2, 1);

        r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String encoding> = $r2;

     label2:
        $r8 = new java.io.InputStreamReader;

        $r2 = r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String encoding>;

        specialinvoke $r8.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r4, $r2);

        r0.<org.apache.commons.io.input.XmlStreamReader: java.io.Reader reader> = $r8;

        return;

     label3:
        $r2 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)>(r3, r4, 1);

        r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String encoding> = $r2;

        goto label2;
    }
    private java.lang.String doHttpStream(org.apache.commons.io.input.BOMInputStream, org.apache.commons.io.input.BOMInputStream, java.lang.String, boolean) throws java.io.IOException
    {
        org.apache.commons.io.input.XmlStreamReader r0;
        org.apache.commons.io.input.BOMInputStream $r1, $r2;
        java.lang.String $r3, $r5, $r6, $r7;
        boolean $z0;
        org.apache.commons.io.input.XmlStreamReaderException r4;

        r0 := @this: org.apache.commons.io.input.XmlStreamReader;

        $r1 := @parameter0: org.apache.commons.io.input.BOMInputStream;

        $r2 := @parameter1: org.apache.commons.io.input.BOMInputStream;

        $r3 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        $r5 = virtualinvoke $r1.<org.apache.commons.io.input.BOMInputStream: java.lang.String getBOMCharsetName()>();

        $r6 = virtualinvoke $r2.<org.apache.commons.io.input.BOMInputStream: java.lang.String getBOMCharsetName()>();

        $r7 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>($r2, $r6);

     label1:
        $r5 = virtualinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>($r3, $r5, $r6, $r7, $z0);

     label2:
        return $r5;

     label3:
        r4 := @caughtexception;

        if $z0 == 0 goto label4;

        $r3 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doLenientDetection(java.lang.String,org.apache.commons.io.input.XmlStreamReaderException)>($r3, r4);

        return $r3;

     label4:
        throw r4;

        catch org.apache.commons.io.input.XmlStreamReaderException from label1 to label2 with label3;
    }
    private java.lang.String doLenientDetection(java.lang.String, org.apache.commons.io.input.XmlStreamReaderException) throws java.io.IOException
    {
        org.apache.commons.io.input.XmlStreamReader r0;
        org.apache.commons.io.input.XmlStreamReaderException r1, $r3;
        java.lang.String $r2, $r4, $r6, $r7;
        boolean $z0;
        int $i0;
        java.lang.StringBuilder $r5;

        r0 := @this: org.apache.commons.io.input.XmlStreamReader;

        $r2 := @parameter0: java.lang.String;

        $r3 := @parameter1: org.apache.commons.io.input.XmlStreamReaderException;

        if $r2 == null goto label4;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("text/html");

        if $z0 == 0 goto label4;

        $r4 = "text/html";

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("text/xml");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r4 = virtualinvoke $r3.<org.apache.commons.io.input.XmlStreamReaderException: java.lang.String getBomEncoding()>();

        $r6 = virtualinvoke $r3.<org.apache.commons.io.input.XmlStreamReaderException: java.lang.String getXmlGuessEncoding()>();

        $r7 = virtualinvoke $r3.<org.apache.commons.io.input.XmlStreamReaderException: java.lang.String getXmlEncoding()>();

        $r2 = virtualinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>($r2, $r4, $r6, $r7, 1);

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $r3 = r1;

     label4:
        $r2 = virtualinvoke $r3.<org.apache.commons.io.input.XmlStreamReaderException: java.lang.String getXmlEncoding()>();

        $r4 = $r2;

        if $r2 != null goto label5;

        $r4 = virtualinvoke $r3.<org.apache.commons.io.input.XmlStreamReaderException: java.lang.String getContentTypeEncoding()>();

     label5:
        if $r4 != null goto label7;

        $r2 = r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String defaultEncoding>;

        if $r2 != null goto label6;

        return "UTF-8";

     label6:
        $r2 = r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String defaultEncoding>;

        return $r2;

     label7:
        return $r4;

        catch org.apache.commons.io.input.XmlStreamReaderException from label1 to label2 with label3;
    }
    private java.lang.String doRawStream(org.apache.commons.io.input.BOMInputStream, org.apache.commons.io.input.BOMInputStream, boolean) throws java.io.IOException
    {
        org.apache.commons.io.input.XmlStreamReader r0;
        org.apache.commons.io.input.BOMInputStream $r1, $r2;
        boolean $z0;
        org.apache.commons.io.input.XmlStreamReaderException r3;
        java.lang.String $r4, $r5, $r6;

        r0 := @this: org.apache.commons.io.input.XmlStreamReader;

        $r1 := @parameter0: org.apache.commons.io.input.BOMInputStream;

        $r2 := @parameter1: org.apache.commons.io.input.BOMInputStream;

        $z0 := @parameter2: boolean;

        $r4 = virtualinvoke $r1.<org.apache.commons.io.input.BOMInputStream: java.lang.String getBOMCharsetName()>();

        $r5 = virtualinvoke $r2.<org.apache.commons.io.input.BOMInputStream: java.lang.String getBOMCharsetName()>();

        $r6 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>($r2, $r5);

     label1:
        $r4 = virtualinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>($r4, $r5, $r6);

     label2:
        return $r4;

     label3:
        r3 := @caughtexception;

        if $z0 == 0 goto label4;

        $r4 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doLenientDetection(java.lang.String,org.apache.commons.io.input.XmlStreamReaderException)>(null, r3);

        return $r4;

     label4:
        throw r3;

        catch org.apache.commons.io.input.XmlStreamReaderException from label1 to label2 with label3;
    }
    static java.lang.String getContentTypeEncoding(java.lang.String)
    {
        java.lang.String $r0;
        int $i0;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;
        boolean $z0;
        java.util.Locale $r3;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label3;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>(";");

        if $i0 <= -1 goto label3;

        $i0 = $i0 + 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        $r1 = <org.apache.commons.io.input.XmlStreamReader: java.util.regex.Pattern CHARSET_PATTERN>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label2;

        $r0 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);

     label1:
        if $r0 == null goto label3;

        $r3 = <java.util.Locale: java.util.Locale US>;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r3);

        return $r0;

     label2:
        $r0 = null;

        goto label1;

     label3:
        return null;
    }
    static java.lang.String getContentTypeMime(java.lang.String)
    {
        java.lang.String $r0;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label3;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>(";");

        if $i0 < 0 goto label2;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label1:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        return $r0;

     label2:
        goto label1;

     label3:
        return null;
    }
    private static java.lang.String getXmlProlog(java.io.InputStream, java.lang.String) throws java.io.IOException
    {
        java.io.InputStream $r0;
        java.lang.String $r1, r5;
        java.io.BufferedReader r2;
        byte[] r3;
        java.lang.StringBuffer r4;
        int i0, i1, $i2, i3;
        java.io.IOException $r6;
        java.lang.StringBuilder $r7;
        java.io.StringReader $r8;
        java.util.regex.Pattern $r9;
        java.util.regex.Matcher $r10;
        boolean $z0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.lang.String;

        if $r1 == null goto label7;

        r3 = newarray (byte)[4096];

        virtualinvoke $r0.<java.io.InputStream: void mark(int)>(4096);

        i0 = 0;

        i1 = 4096;

        $i2 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>(r3, 0, 4096);

        i3 = -1;

        r5 = null;

     label1:
        if $i2 == -1 goto label2;

        if i3 != -1 goto label2;

        if i0 >= 4096 goto label2;

        i0 = i0 + $i2;

        i1 = i1 - $i2;

        $i2 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>(r3, i0, i1);

        r5 = new java.lang.String;

        specialinvoke r5.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r3, 0, i0, $r1);

        i3 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(62);

        goto label1;

     label2:
        if i3 != -1 goto label4;

        if $i2 != -1 goto label3;

        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("Unexpected end of XML stream");

        throw $r6;

     label3:
        $r6 = new java.io.IOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XML prolog or ROOT element not found on first ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r1);

        throw $r6;

     label4:
        if i0 <= 0 goto label7;

        virtualinvoke $r0.<java.io.InputStream: void reset()>();

        r2 = new java.io.BufferedReader;

        $r8 = new java.io.StringReader;

        i0 = i3 + 1;

        $r1 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        specialinvoke $r8.<java.io.StringReader: void <init>(java.lang.String)>($r1);

        specialinvoke r2.<java.io.BufferedReader: void <init>(java.io.Reader)>($r8);

        r4 = new java.lang.StringBuffer;

        specialinvoke r4.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke r2.<java.io.BufferedReader: java.lang.String readLine()>();

     label5:
        if $r1 == null goto label6;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke r2.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label5;

     label6:
        $r9 = <org.apache.commons.io.input.XmlStreamReader: java.util.regex.Pattern ENCODING_PATTERN>;

        $r10 = virtualinvoke $r9.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r4);

        $z0 = virtualinvoke $r10.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label7;

        $r1 = virtualinvoke $r10.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toUpperCase()>();

        i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        i0 = i0 + -1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(1, i0);

        return $r1;

     label7:
        return null;
    }
    static boolean isAppXml(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label2;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("application/xml");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("application/xml-dtd");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("application/xml-external-parsed-entity");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("application/");

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean endsWith(java.lang.String)>("+xml");

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    static boolean isTextXml(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label2;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("text/xml");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("text/xml-external-parsed-entity");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("text/");

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean endsWith(java.lang.String)>("+xml");

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    java.lang.String calculateHttpEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean) throws java.io.IOException
    {
        org.apache.commons.io.input.XmlStreamReader r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r7;
        boolean $z0, $z1;
        java.lang.Object[] $r6;
        org.apache.commons.io.input.XmlStreamReaderException $r8;

        r0 := @this: org.apache.commons.io.input.XmlStreamReader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $z0 := @parameter4: boolean;

        if $z0 == 0 goto label01;

        if $r4 == null goto label01;

        return $r4;

     label01:
        $r5 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>($r1);

        $r1 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>($r1);

        $z0 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>($r5);

        $z1 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>($r5);

        if $z0 != 0 goto label02;

        if $z1 != 0 goto label02;

        $r6 = newarray (java.lang.Object)[5];

        $r6[0] = $r5;

        $r6[1] = $r1;

        $r6[2] = $r2;

        $r6[3] = $r3;

        $r6[4] = $r4;

        $r7 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], Invalid MIME", $r6);

        $r8 = new org.apache.commons.io.input.XmlStreamReaderException;

        specialinvoke $r8.<org.apache.commons.io.input.XmlStreamReaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r7, $r5, $r1, $r2, $r3, $r4);

        throw $r8;

     label02:
        if $r1 != null goto label06;

        if $z0 == 0 goto label03;

        $r1 = virtualinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>($r2, $r3, $r4);

        return $r1;

     label03:
        $r1 = r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String defaultEncoding>;

        if $r1 != null goto label05;

        $r1 = "US-ASCII";

     label04:
        return $r1;

     label05:
        $r1 = r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String defaultEncoding>;

        goto label04;

     label06:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("UTF-16BE");

        if $z0 != 0 goto label07;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("UTF-16LE");

        if $z0 == 0 goto label08;

     label07:
        if $r2 == null goto label14;

        $r6 = newarray (java.lang.Object)[5];

        $r6[0] = $r5;

        $r6[1] = $r1;

        $r6[2] = $r2;

        $r6[3] = $r3;

        $r6[4] = $r4;

        $r7 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], BOM must be NULL", $r6);

        $r8 = new org.apache.commons.io.input.XmlStreamReaderException;

        specialinvoke $r8.<org.apache.commons.io.input.XmlStreamReaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r7, $r5, $r1, $r2, $r3, $r4);

        throw $r8;

     label08:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("UTF-16");

        if $z0 == 0 goto label10;

        if $r2 == null goto label09;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("UTF-16");

        if $z0 == 0 goto label09;

        return $r2;

     label09:
        $r6 = newarray (java.lang.Object)[5];

        $r6[0] = $r5;

        $r6[1] = $r1;

        $r6[2] = $r2;

        $r6[3] = $r3;

        $r6[4] = $r4;

        $r7 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], encoding mismatch", $r6);

        $r8 = new org.apache.commons.io.input.XmlStreamReaderException;

        specialinvoke $r8.<org.apache.commons.io.input.XmlStreamReaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r7, $r5, $r1, $r2, $r3, $r4);

        throw $r8;

     label10:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("UTF-32BE");

        if $z0 != 0 goto label11;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("UTF-32LE");

        if $z0 == 0 goto label12;

     label11:
        if $r2 == null goto label14;

        $r6 = newarray (java.lang.Object)[5];

        $r6[0] = $r5;

        $r6[1] = $r1;

        $r6[2] = $r2;

        $r6[3] = $r3;

        $r6[4] = $r4;

        $r7 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], BOM must be NULL", $r6);

        $r8 = new org.apache.commons.io.input.XmlStreamReaderException;

        specialinvoke $r8.<org.apache.commons.io.input.XmlStreamReaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r7, $r5, $r1, $r2, $r3, $r4);

        throw $r8;

     label12:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("UTF-32");

        if $z0 == 0 goto label14;

        if $r2 == null goto label13;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("UTF-32");

        if $z0 == 0 goto label13;

        return $r2;

     label13:
        $r6 = newarray (java.lang.Object)[5];

        $r6[0] = $r5;

        $r6[1] = $r1;

        $r6[2] = $r2;

        $r6[3] = $r3;

        $r6[4] = $r4;

        $r7 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], encoding mismatch", $r6);

        $r8 = new org.apache.commons.io.input.XmlStreamReaderException;

        specialinvoke $r8.<org.apache.commons.io.input.XmlStreamReaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r7, $r5, $r1, $r2, $r3, $r4);

        throw $r8;

     label14:
        return $r1;
    }
    java.lang.String calculateRawEncoding(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.apache.commons.io.input.XmlStreamReader r0;
        java.lang.String $r1, $r2, r3, $r5;
        boolean $z0;
        java.lang.Object[] $r4;
        org.apache.commons.io.input.XmlStreamReaderException $r6;

        r0 := @this: org.apache.commons.io.input.XmlStreamReader;

        r3 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        if r3 != null goto label07;

        if $r1 == null goto label01;

        if $r2 != null goto label04;

     label01:
        r3 = r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String defaultEncoding>;

        if r3 != null goto label03;

        r3 = "UTF-8";

     label02:
        return r3;

     label03:
        r3 = r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String defaultEncoding>;

        goto label02;

     label04:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("UTF-16");

        if $z0 == 0 goto label06;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("UTF-16BE");

        if $z0 != 0 goto label05;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("UTF-16LE");

        if $z0 == 0 goto label06;

     label05:
        return $r1;

     label06:
        return $r2;

     label07:
        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("UTF-8");

        if $z0 == 0 goto label09;

        if $r1 == null goto label08;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("UTF-8");

        if $z0 != 0 goto label08;

        $r4 = newarray (java.lang.Object)[3];

        $r4[0] = r3;

        $r4[1] = $r1;

        $r4[2] = $r2;

        $r5 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid encoding, BOM [{0}] XML guess [{1}] XML prolog [{2}] encoding mismatch", $r4);

        $r6 = new org.apache.commons.io.input.XmlStreamReaderException;

        specialinvoke $r6.<org.apache.commons.io.input.XmlStreamReaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r5, r3, $r1, $r2);

        throw $r6;

     label08:
        if $r2 == null goto label16;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("UTF-8");

        if $z0 != 0 goto label16;

        $r4 = newarray (java.lang.Object)[3];

        $r4[0] = r3;

        $r4[1] = $r1;

        $r4[2] = $r2;

        $r5 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid encoding, BOM [{0}] XML guess [{1}] XML prolog [{2}] encoding mismatch", $r4);

        $r6 = new org.apache.commons.io.input.XmlStreamReaderException;

        specialinvoke $r6.<org.apache.commons.io.input.XmlStreamReaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r5, r3, $r1, $r2);

        throw $r6;

     label09:
        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("UTF-16BE");

        if $z0 != 0 goto label10;

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("UTF-16LE");

        if $z0 == 0 goto label12;

     label10:
        if $r1 == null goto label11;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 != 0 goto label11;

        $r4 = newarray (java.lang.Object)[3];

        $r4[0] = r3;

        $r4[1] = $r1;

        $r4[2] = $r2;

        $r5 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid encoding, BOM [{0}] XML guess [{1}] XML prolog [{2}] encoding mismatch", $r4);

        $r6 = new org.apache.commons.io.input.XmlStreamReaderException;

        specialinvoke $r6.<org.apache.commons.io.input.XmlStreamReaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r5, r3, $r1, $r2);

        throw $r6;

     label11:
        if $r2 == null goto label16;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("UTF-16");

        if $z0 != 0 goto label16;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 != 0 goto label16;

        $r4 = newarray (java.lang.Object)[3];

        $r4[0] = r3;

        $r4[1] = $r1;

        $r4[2] = $r2;

        $r5 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid encoding, BOM [{0}] XML guess [{1}] XML prolog [{2}] encoding mismatch", $r4);

        $r6 = new org.apache.commons.io.input.XmlStreamReaderException;

        specialinvoke $r6.<org.apache.commons.io.input.XmlStreamReaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r5, r3, $r1, $r2);

        throw $r6;

     label12:
        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("UTF-32BE");

        if $z0 != 0 goto label13;

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("UTF-32LE");

        if $z0 == 0 goto label15;

     label13:
        if $r1 == null goto label14;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 != 0 goto label14;

        $r4 = newarray (java.lang.Object)[3];

        $r4[0] = r3;

        $r4[1] = $r1;

        $r4[2] = $r2;

        $r5 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid encoding, BOM [{0}] XML guess [{1}] XML prolog [{2}] encoding mismatch", $r4);

        $r6 = new org.apache.commons.io.input.XmlStreamReaderException;

        specialinvoke $r6.<org.apache.commons.io.input.XmlStreamReaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r5, r3, $r1, $r2);

        throw $r6;

     label14:
        if $r2 == null goto label16;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("UTF-32");

        if $z0 != 0 goto label16;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 != 0 goto label16;

        $r4 = newarray (java.lang.Object)[3];

        $r4[0] = r3;

        $r4[1] = $r1;

        $r4[2] = $r2;

        $r5 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid encoding, BOM [{0}] XML guess [{1}] XML prolog [{2}] encoding mismatch", $r4);

        $r6 = new org.apache.commons.io.input.XmlStreamReaderException;

        specialinvoke $r6.<org.apache.commons.io.input.XmlStreamReaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r5, r3, $r1, $r2);

        throw $r6;

     label15:
        $r4 = newarray (java.lang.Object)[3];

        $r4[0] = r3;

        $r4[1] = $r1;

        $r4[2] = $r2;

        $r5 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid encoding, BOM [{0}] XML guess [{1}] XML prolog [{2}] unknown BOM", $r4);

        $r6 = new org.apache.commons.io.input.XmlStreamReaderException;

        specialinvoke $r6.<org.apache.commons.io.input.XmlStreamReaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r5, r3, $r1, $r2);

        throw $r6;

     label16:
        return r3;
    }
    public void close() throws java.io.IOException
    {
        org.apache.commons.io.input.XmlStreamReader r0;
        java.io.Reader $r1;

        r0 := @this: org.apache.commons.io.input.XmlStreamReader;

        $r1 = r0.<org.apache.commons.io.input.XmlStreamReader: java.io.Reader reader>;

        virtualinvoke $r1.<java.io.Reader: void close()>();

        return;
    }
    public java.lang.String getDefaultEncoding()
    {
        org.apache.commons.io.input.XmlStreamReader r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.io.input.XmlStreamReader;

        r1 = r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String defaultEncoding>;

        return r1;
    }
    public java.lang.String getEncoding()
    {
        org.apache.commons.io.input.XmlStreamReader r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.io.input.XmlStreamReader;

        r1 = r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String encoding>;

        return r1;
    }
    public int read(char[], int, int) throws java.io.IOException
    {
        org.apache.commons.io.input.XmlStreamReader r0;
        char[] $r1;
        int $i0, $i1;
        java.io.Reader $r2;

        r0 := @this: org.apache.commons.io.input.XmlStreamReader;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<org.apache.commons.io.input.XmlStreamReader: java.io.Reader reader>;

        $i0 = virtualinvoke $r2.<java.io.Reader: int read(char[],int,int)>($r1, $i0, $i1);

        return $i0;
    }
