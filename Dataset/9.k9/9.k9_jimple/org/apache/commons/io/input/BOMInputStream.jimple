org.apache.commons.io.input.BOMInputStream extends org.apache.commons.io.input.ProxyInputStream
private static final java.util.Comparator ByteOrderMarkLengthComparator
private final java.util.List boms
private org.apache.commons.io.ByteOrderMark byteOrderMark
private int fbIndex
private int fbLength
private int[] firstBytes
private final boolean include
private int markFbIndex
private boolean markedAtStart
    static void <clinit>()
    {
        org.apache.commons.io.input.BOMInputStream$1 $r0;

        $r0 = new org.apache.commons.io.input.BOMInputStream$1;

        specialinvoke $r0.<org.apache.commons.io.input.BOMInputStream$1: void <init>()>();

        <org.apache.commons.io.input.BOMInputStream: java.util.Comparator ByteOrderMarkLengthComparator> = $r0;

        return;
    }
    public void <init>(java.io.InputStream)
    {
        org.apache.commons.io.input.BOMInputStream r0;
        java.io.InputStream $r1;
        org.apache.commons.io.ByteOrderMark $r2;
        org.apache.commons.io.ByteOrderMark[] $r3;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        $r1 := @parameter0: java.io.InputStream;

        $r3 = newarray (org.apache.commons.io.ByteOrderMark)[1];

        $r2 = <org.apache.commons.io.ByteOrderMark: org.apache.commons.io.ByteOrderMark UTF_8>;

        $r3[0] = $r2;

        specialinvoke r0.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r1, 0, $r3);

        return;
    }
    public void <init>(java.io.InputStream, boolean)
    {
        org.apache.commons.io.input.BOMInputStream r0;
        java.io.InputStream $r1;
        boolean $z0;
        org.apache.commons.io.ByteOrderMark $r2;
        org.apache.commons.io.ByteOrderMark[] $r3;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        $r1 := @parameter0: java.io.InputStream;

        $z0 := @parameter1: boolean;

        $r3 = newarray (org.apache.commons.io.ByteOrderMark)[1];

        $r2 = <org.apache.commons.io.ByteOrderMark: org.apache.commons.io.ByteOrderMark UTF_8>;

        $r3[0] = $r2;

        specialinvoke r0.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r1, $z0, $r3);

        return;
    }
    public transient void <init>(java.io.InputStream, boolean, org.apache.commons.io.ByteOrderMark[])
    {
        org.apache.commons.io.input.BOMInputStream r0;
        java.io.InputStream $r1;
        boolean $z0;
        org.apache.commons.io.ByteOrderMark[] $r2;
        java.util.List $r3;
        int $i0;
        java.lang.IllegalArgumentException $r4;
        java.util.Comparator $r5;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        $r1 := @parameter0: java.io.InputStream;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: org.apache.commons.io.ByteOrderMark[];

        specialinvoke r0.<org.apache.commons.io.input.ProxyInputStream: void <init>(java.io.InputStream)>($r1);

        if $r2 == null goto label1;

        $i0 = lengthof $r2;

        if $i0 != 0 goto label2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No BOMs specified");

        throw $r4;

     label2:
        r0.<org.apache.commons.io.input.BOMInputStream: boolean include> = $z0;

        $r5 = <org.apache.commons.io.input.BOMInputStream: java.util.Comparator ByteOrderMarkLengthComparator>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($r2, $r5);

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        r0.<org.apache.commons.io.input.BOMInputStream: java.util.List boms> = $r3;

        return;
    }
    public transient void <init>(java.io.InputStream, org.apache.commons.io.ByteOrderMark[])
    {
        org.apache.commons.io.input.BOMInputStream r0;
        java.io.InputStream $r1;
        org.apache.commons.io.ByteOrderMark[] $r2;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: org.apache.commons.io.ByteOrderMark[];

        specialinvoke r0.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r1, 0, $r2);

        return;
    }
    private org.apache.commons.io.ByteOrderMark find()
    {
        org.apache.commons.io.input.BOMInputStream r0;
        java.util.List $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.apache.commons.io.ByteOrderMark r4;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        $r1 = r0.<org.apache.commons.io.input.BOMInputStream: java.util.List boms>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.commons.io.ByteOrderMark) $r3;

        $z0 = specialinvoke r0.<org.apache.commons.io.input.BOMInputStream: boolean matches(org.apache.commons.io.ByteOrderMark)>(r4);

        if $z0 == 0 goto label1;

        return r4;

     label2:
        return null;
    }
    private boolean matches(org.apache.commons.io.ByteOrderMark)
    {
        org.apache.commons.io.input.BOMInputStream r0;
        org.apache.commons.io.ByteOrderMark $r1;
        int i0, $i1, $i2;
        int[] $r2;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        $r1 := @parameter0: org.apache.commons.io.ByteOrderMark;

        i0 = 0;

     label1:
        $i1 = virtualinvoke $r1.<org.apache.commons.io.ByteOrderMark: int length()>();

        if i0 >= $i1 goto label3;

        $i1 = virtualinvoke $r1.<org.apache.commons.io.ByteOrderMark: int get(int)>(i0);

        $r2 = r0.<org.apache.commons.io.input.BOMInputStream: int[] firstBytes>;

        $i2 = $r2[i0];

        if $i1 == $i2 goto label2;

        return 0;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return 1;
    }
    private int readFirstBytes() throws java.io.IOException
    {
        org.apache.commons.io.input.BOMInputStream r0;
        int $i0, $i1;
        int[] $r1;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        virtualinvoke r0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark getBOM()>();

        $i0 = r0.<org.apache.commons.io.input.BOMInputStream: int fbIndex>;

        $i1 = r0.<org.apache.commons.io.input.BOMInputStream: int fbLength>;

        if $i0 >= $i1 goto label1;

        $r1 = r0.<org.apache.commons.io.input.BOMInputStream: int[] firstBytes>;

        $i1 = r0.<org.apache.commons.io.input.BOMInputStream: int fbIndex>;

        $i0 = $i1 + 1;

        r0.<org.apache.commons.io.input.BOMInputStream: int fbIndex> = $i0;

        $i0 = $r1[$i1];

        return $i0;

     label1:
        return -1;
    }
    public org.apache.commons.io.ByteOrderMark getBOM() throws java.io.IOException
    {
        org.apache.commons.io.input.BOMInputStream r0;
        int[] $r1;
        java.util.List $r2;
        java.lang.Object $r3;
        org.apache.commons.io.ByteOrderMark $r4;
        int $i0, $i1;
        java.io.InputStream $r5;
        boolean $z0;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        $r1 = r0.<org.apache.commons.io.input.BOMInputStream: int[] firstBytes>;

        if $r1 != null goto label3;

        r0.<org.apache.commons.io.input.BOMInputStream: int fbLength> = 0;

        $r2 = r0.<org.apache.commons.io.input.BOMInputStream: java.util.List boms>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (org.apache.commons.io.ByteOrderMark) $r3;

        $i0 = virtualinvoke $r4.<org.apache.commons.io.ByteOrderMark: int length()>();

        $r1 = newarray (int)[$i0];

        r0.<org.apache.commons.io.input.BOMInputStream: int[] firstBytes> = $r1;

        $i0 = 0;

     label1:
        $r1 = r0.<org.apache.commons.io.input.BOMInputStream: int[] firstBytes>;

        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label2;

        $r1 = r0.<org.apache.commons.io.input.BOMInputStream: int[] firstBytes>;

        $r5 = r0.<org.apache.commons.io.input.BOMInputStream: java.io.InputStream in>;

        $i1 = virtualinvoke $r5.<java.io.InputStream: int read()>();

        $r1[$i0] = $i1;

        $i1 = r0.<org.apache.commons.io.input.BOMInputStream: int fbLength>;

        $i1 = $i1 + 1;

        r0.<org.apache.commons.io.input.BOMInputStream: int fbLength> = $i1;

        $r1 = r0.<org.apache.commons.io.input.BOMInputStream: int[] firstBytes>;

        $i1 = $r1[$i0];

        if $i1 >= 0 goto label4;

     label2:
        $r4 = specialinvoke r0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark find()>();

        r0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark byteOrderMark> = $r4;

        $r4 = r0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark byteOrderMark>;

        if $r4 == null goto label3;

        $z0 = r0.<org.apache.commons.io.input.BOMInputStream: boolean include>;

        if $z0 != 0 goto label3;

        $r4 = r0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark byteOrderMark>;

        $i0 = virtualinvoke $r4.<org.apache.commons.io.ByteOrderMark: int length()>();

        $r1 = r0.<org.apache.commons.io.input.BOMInputStream: int[] firstBytes>;

        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label5;

        $r4 = r0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark byteOrderMark>;

        $i0 = virtualinvoke $r4.<org.apache.commons.io.ByteOrderMark: int length()>();

        r0.<org.apache.commons.io.input.BOMInputStream: int fbIndex> = $i0;

     label3:
        $r4 = r0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark byteOrderMark>;

        return $r4;

     label4:
        $i0 = $i0 + 1;

        goto label1;

     label5:
        r0.<org.apache.commons.io.input.BOMInputStream: int fbLength> = 0;

        goto label3;
    }
    public java.lang.String getBOMCharsetName() throws java.io.IOException
    {
        org.apache.commons.io.input.BOMInputStream r0;
        java.lang.String $r1;
        org.apache.commons.io.ByteOrderMark $r2;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        virtualinvoke r0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark getBOM()>();

        $r2 = r0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark byteOrderMark>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark byteOrderMark>;

        $r1 = virtualinvoke $r2.<org.apache.commons.io.ByteOrderMark: java.lang.String getCharsetName()>();

        return $r1;
    }
    public boolean hasBOM() throws java.io.IOException
    {
        org.apache.commons.io.input.BOMInputStream r0;
        org.apache.commons.io.ByteOrderMark $r1;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        $r1 = virtualinvoke r0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark getBOM()>();

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean hasBOM(org.apache.commons.io.ByteOrderMark) throws java.io.IOException
    {
        org.apache.commons.io.input.BOMInputStream r0;
        org.apache.commons.io.ByteOrderMark $r1, $r6;
        java.util.List $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        $r1 := @parameter0: org.apache.commons.io.ByteOrderMark;

        $r2 = r0.<org.apache.commons.io.input.BOMInputStream: java.util.List boms>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stream not configure to detect ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label1:
        $r6 = r0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark byteOrderMark>;

        if $r6 == null goto label2;

        $r6 = virtualinvoke r0.<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark getBOM()>();

        $z0 = virtualinvoke $r6.<org.apache.commons.io.ByteOrderMark: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }
    public void mark(int)
    {
        org.apache.commons.io.input.BOMInputStream r0;
        int $i0, $i1;
        int[] $r1;
        boolean $z0;
        java.io.InputStream $r2;
        java.lang.Throwable $r3;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        $i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $i1 = r0.<org.apache.commons.io.input.BOMInputStream: int fbIndex>;

        r0.<org.apache.commons.io.input.BOMInputStream: int markFbIndex> = $i1;

        $r1 = r0.<org.apache.commons.io.input.BOMInputStream: int[] firstBytes>;

        if $r1 != null goto label4;

        $z0 = 1;

     label2:
        r0.<org.apache.commons.io.input.BOMInputStream: boolean markedAtStart> = $z0;

        $r2 = r0.<org.apache.commons.io.input.BOMInputStream: java.io.InputStream in>;

        virtualinvoke $r2.<java.io.InputStream: void mark(int)>($i0);

     label3:
        exitmonitor r0;

        return;

     label4:
        $z0 = 0;

        goto label2;

     label5:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label5;
    }
    public int read() throws java.io.IOException
    {
        org.apache.commons.io.input.BOMInputStream r0;
        java.io.InputStream $r1;
        int $i0;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        $i0 = specialinvoke r0.<org.apache.commons.io.input.BOMInputStream: int readFirstBytes()>();

        if $i0 < 0 goto label1;

        return $i0;

     label1:
        $r1 = r0.<org.apache.commons.io.input.BOMInputStream: java.io.InputStream in>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        return $i0;
    }
    public int read(byte[]) throws java.io.IOException
    {
        org.apache.commons.io.input.BOMInputStream r0;
        byte[] $r1;
        int $i0;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        $i0 = virtualinvoke r0.<org.apache.commons.io.input.BOMInputStream: int read(byte[],int,int)>($r1, 0, $i0);

        return $i0;
    }
    public int read(byte[], int, int) throws java.io.IOException
    {
        org.apache.commons.io.input.BOMInputStream r0;
        byte[] $r1;
        int i0, $i1, i2, i3, $i4;
        byte $b5;
        java.io.InputStream $r2;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        $r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 := @parameter2: int;

        i2 = 0;

        i3 = 0;

     label1:
        if $i1 <= 0 goto label2;

        if i3 < 0 goto label2;

        $i4 = specialinvoke r0.<org.apache.commons.io.input.BOMInputStream: int readFirstBytes()>();

        i3 = $i4;

        if $i4 < 0 goto label1;

        $i4 = $i4 & 255;

        $b5 = (byte) $i4;

        $r1[i0] = $b5;

        $i1 = $i1 + -1;

        i2 = i2 + 1;

        i0 = i0 + 1;

        goto label1;

     label2:
        $r2 = r0.<org.apache.commons.io.input.BOMInputStream: java.io.InputStream in>;

        i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, i0, $i1);

        if i0 >= 0 goto label4;

        if i2 <= 0 goto label3;

        return i2;

     label3:
        return -1;

     label4:
        i0 = i2 + i0;

        return i0;
    }
    public void reset() throws java.io.IOException
    {
        org.apache.commons.io.input.BOMInputStream r0;
        int $i0;
        boolean $z0;
        java.io.InputStream $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        entermonitor r0;

     label1:
        $i0 = r0.<org.apache.commons.io.input.BOMInputStream: int markFbIndex>;

        r0.<org.apache.commons.io.input.BOMInputStream: int fbIndex> = $i0;

        $z0 = r0.<org.apache.commons.io.input.BOMInputStream: boolean markedAtStart>;

        if $z0 == 0 goto label2;

        r0.<org.apache.commons.io.input.BOMInputStream: int[] firstBytes> = null;

     label2:
        $r1 = r0.<org.apache.commons.io.input.BOMInputStream: java.io.InputStream in>;

        virtualinvoke $r1.<java.io.InputStream: void reset()>();

     label3:
        exitmonitor r0;

        return;

     label4:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
    }
    public long skip(long) throws java.io.IOException
    {
        org.apache.commons.io.input.BOMInputStream r0;
        long $l0;
        byte $b1;
        int $i2;
        java.io.InputStream $r1;

        r0 := @this: org.apache.commons.io.input.BOMInputStream;

        $l0 := @parameter0: long;

     label1:
        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label2;

        $i2 = specialinvoke r0.<org.apache.commons.io.input.BOMInputStream: int readFirstBytes()>();

        if $i2 < 0 goto label2;

        $l0 = $l0 - 1L;

        goto label1;

     label2:
        $r1 = r0.<org.apache.commons.io.input.BOMInputStream: java.io.InputStream in>;

        $l0 = virtualinvoke $r1.<java.io.InputStream: long skip(long)>($l0);

        return $l0;
    }
