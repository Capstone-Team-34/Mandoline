org.apache.commons.io.filefilter.SuffixFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable
private final org.apache.commons.io.IOCase caseSensitivity
private final java.lang.String[] suffixes
    public void <init>(java.lang.String)
    {
        org.apache.commons.io.filefilter.SuffixFileFilter r0;
        java.lang.String $r1;
        org.apache.commons.io.IOCase $r2;

        r0 := @this: org.apache.commons.io.filefilter.SuffixFileFilter;

        $r1 := @parameter0: java.lang.String;

        $r2 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;

        specialinvoke r0.<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>($r1, $r2);

        return;
    }
    public void <init>(java.lang.String, org.apache.commons.io.IOCase)
    {
        org.apache.commons.io.filefilter.SuffixFileFilter r0;
        java.lang.String $r1;
        org.apache.commons.io.IOCase $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.String[] $r4;

        r0 := @this: org.apache.commons.io.filefilter.SuffixFileFilter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.apache.commons.io.IOCase;

        specialinvoke r0.<org.apache.commons.io.filefilter.AbstractFileFilter: void <init>()>();

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The suffix must not be null");

        throw $r3;

     label1:
        $r4 = newarray (java.lang.String)[1];

        $r4[0] = $r1;

        r0.<org.apache.commons.io.filefilter.SuffixFileFilter: java.lang.String[] suffixes> = $r4;

        if $r2 != null goto label2;

        $r2 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;

     label2:
        r0.<org.apache.commons.io.filefilter.SuffixFileFilter: org.apache.commons.io.IOCase caseSensitivity> = $r2;

        return;
    }
    public void <init>(java.util.List)
    {
        org.apache.commons.io.filefilter.SuffixFileFilter r0;
        java.util.List r1;
        org.apache.commons.io.IOCase $r2;

        r0 := @this: org.apache.commons.io.filefilter.SuffixFileFilter;

        r1 := @parameter0: java.util.List;

        $r2 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;

        specialinvoke r0.<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.util.List,org.apache.commons.io.IOCase)>(r1, $r2);

        return;
    }
    public void <init>(java.util.List, org.apache.commons.io.IOCase)
    {
        org.apache.commons.io.filefilter.SuffixFileFilter r0;
        java.util.List r1;
        org.apache.commons.io.IOCase $r2;
        java.lang.IllegalArgumentException $r3;
        int $i0;
        java.lang.String[] $r4;
        java.lang.Object[] $r5;

        r0 := @this: org.apache.commons.io.filefilter.SuffixFileFilter;

        r1 := @parameter0: java.util.List;

        $r2 := @parameter1: org.apache.commons.io.IOCase;

        specialinvoke r0.<org.apache.commons.io.filefilter.AbstractFileFilter: void <init>()>();

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The list of suffixes must not be null");

        throw $r3;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $r4 = newarray (java.lang.String)[$i0];

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r4 = (java.lang.String[]) $r5;

        r0.<org.apache.commons.io.filefilter.SuffixFileFilter: java.lang.String[] suffixes> = $r4;

        if $r2 != null goto label2;

        $r2 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;

     label2:
        r0.<org.apache.commons.io.filefilter.SuffixFileFilter: org.apache.commons.io.IOCase caseSensitivity> = $r2;

        return;
    }
    public void <init>(java.lang.String[])
    {
        org.apache.commons.io.filefilter.SuffixFileFilter r0;
        java.lang.String[] $r1;
        org.apache.commons.io.IOCase $r2;

        r0 := @this: org.apache.commons.io.filefilter.SuffixFileFilter;

        $r1 := @parameter0: java.lang.String[];

        $r2 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;

        specialinvoke r0.<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>($r1, $r2);

        return;
    }
    public void <init>(java.lang.String[], org.apache.commons.io.IOCase)
    {
        org.apache.commons.io.filefilter.SuffixFileFilter r0;
        java.lang.String[] $r1, $r4;
        org.apache.commons.io.IOCase $r2;
        java.lang.IllegalArgumentException $r3;
        int $i0;

        r0 := @this: org.apache.commons.io.filefilter.SuffixFileFilter;

        $r1 := @parameter0: java.lang.String[];

        $r2 := @parameter1: org.apache.commons.io.IOCase;

        specialinvoke r0.<org.apache.commons.io.filefilter.AbstractFileFilter: void <init>()>();

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The array of suffixes must not be null");

        throw $r3;

     label1:
        $i0 = lengthof $r1;

        $r4 = newarray (java.lang.String)[$i0];

        r0.<org.apache.commons.io.filefilter.SuffixFileFilter: java.lang.String[] suffixes> = $r4;

        $r4 = r0.<org.apache.commons.io.filefilter.SuffixFileFilter: java.lang.String[] suffixes>;

        $i0 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r4, 0, $i0);

        if $r2 != null goto label2;

        $r2 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;

     label2:
        r0.<org.apache.commons.io.filefilter.SuffixFileFilter: org.apache.commons.io.IOCase caseSensitivity> = $r2;

        return;
    }
    public boolean accept(java.io.File)
    {
        org.apache.commons.io.filefilter.SuffixFileFilter r0;
        java.io.File $r1;
        java.lang.String[] r2;
        int i0, i1;
        java.lang.String r3, $r4;
        org.apache.commons.io.IOCase $r5;
        boolean $z0;

        r0 := @this: org.apache.commons.io.filefilter.SuffixFileFilter;

        $r1 := @parameter0: java.io.File;

        $r4 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        r2 = r0.<org.apache.commons.io.filefilter.SuffixFileFilter: java.lang.String[] suffixes>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        $r5 = r0.<org.apache.commons.io.filefilter.SuffixFileFilter: org.apache.commons.io.IOCase caseSensitivity>;

        $z0 = virtualinvoke $r5.<org.apache.commons.io.IOCase: boolean checkEndsWith(java.lang.String,java.lang.String)>($r4, r3);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }
    public boolean accept(java.io.File, java.lang.String)
    {
        org.apache.commons.io.filefilter.SuffixFileFilter r0;
        java.io.File $r1;
        java.lang.String $r2, r4;
        java.lang.String[] r3;
        int i0, i1;
        boolean $z0;
        org.apache.commons.io.IOCase $r5;

        r0 := @this: org.apache.commons.io.filefilter.SuffixFileFilter;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.lang.String;

        r3 = r0.<org.apache.commons.io.filefilter.SuffixFileFilter: java.lang.String[] suffixes>;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r4 = r3[i1];

        $r5 = r0.<org.apache.commons.io.filefilter.SuffixFileFilter: org.apache.commons.io.IOCase caseSensitivity>;

        $z0 = virtualinvoke $r5.<org.apache.commons.io.IOCase: boolean checkEndsWith(java.lang.String,java.lang.String)>($r2, r4);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }
    public java.lang.String toString()
    {
        org.apache.commons.io.filefilter.SuffixFileFilter r0;
        java.lang.StringBuilder r1;
        java.lang.String $r2;
        java.lang.String[] $r3;
        int i0, $i1;

        r0 := @this: org.apache.commons.io.filefilter.SuffixFileFilter;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.commons.io.filefilter.AbstractFileFilter: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r3 = r0.<org.apache.commons.io.filefilter.SuffixFileFilter: java.lang.String[] suffixes>;

        if $r3 == null goto label3;

        i0 = 0;

     label1:
        $r3 = r0.<org.apache.commons.io.filefilter.SuffixFileFilter: java.lang.String[] suffixes>;

        $i1 = lengthof $r3;

        if i0 >= $i1 goto label3;

        if i0 <= 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label2:
        $r3 = r0.<org.apache.commons.io.filefilter.SuffixFileFilter: java.lang.String[] suffixes>;

        $r2 = $r3[i0];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        i0 = i0 + 1;

        goto label1;

     label3:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
