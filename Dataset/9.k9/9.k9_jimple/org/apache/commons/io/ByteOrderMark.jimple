org.apache.commons.io.ByteOrderMark extends java.lang.Object implements java.io.Serializable
public static final org.apache.commons.io.ByteOrderMark UTF_16BE
public static final org.apache.commons.io.ByteOrderMark UTF_16LE
public static final org.apache.commons.io.ByteOrderMark UTF_32BE
public static final org.apache.commons.io.ByteOrderMark UTF_32LE
public static final org.apache.commons.io.ByteOrderMark UTF_8
private static final long serialVersionUID
private final int[] bytes
private final java.lang.String charsetName
    static void <clinit>()
    {
        org.apache.commons.io.ByteOrderMark $r0;
        int[] $r1;

        $r0 = new org.apache.commons.io.ByteOrderMark;

        $r1 = newarray (int)[3];

        $r1[0] = 239;

        $r1[1] = 187;

        $r1[2] = 191;

        specialinvoke $r0.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>("UTF-8", $r1);

        <org.apache.commons.io.ByteOrderMark: org.apache.commons.io.ByteOrderMark UTF_8> = $r0;

        $r0 = new org.apache.commons.io.ByteOrderMark;

        $r1 = newarray (int)[2];

        $r1[0] = 254;

        $r1[1] = 255;

        specialinvoke $r0.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>("UTF-16BE", $r1);

        <org.apache.commons.io.ByteOrderMark: org.apache.commons.io.ByteOrderMark UTF_16BE> = $r0;

        $r0 = new org.apache.commons.io.ByteOrderMark;

        $r1 = newarray (int)[2];

        $r1[0] = 255;

        $r1[1] = 254;

        specialinvoke $r0.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>("UTF-16LE", $r1);

        <org.apache.commons.io.ByteOrderMark: org.apache.commons.io.ByteOrderMark UTF_16LE> = $r0;

        $r0 = new org.apache.commons.io.ByteOrderMark;

        $r1 = newarray (int)[4];

        $r1[0] = 0;

        $r1[1] = 0;

        $r1[2] = 254;

        $r1[3] = 255;

        specialinvoke $r0.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>("UTF-32BE", $r1);

        <org.apache.commons.io.ByteOrderMark: org.apache.commons.io.ByteOrderMark UTF_32BE> = $r0;

        $r0 = new org.apache.commons.io.ByteOrderMark;

        $r1 = newarray (int)[4];

        $r1[0] = 255;

        $r1[1] = 254;

        $r1[2] = 0;

        $r1[3] = 0;

        specialinvoke $r0.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>("UTF-32LE", $r1);

        <org.apache.commons.io.ByteOrderMark: org.apache.commons.io.ByteOrderMark UTF_32LE> = $r0;

        return;
    }
    public transient void <init>(java.lang.String, int[])
    {
        org.apache.commons.io.ByteOrderMark r0;
        java.lang.String $r1;
        int[] $r2, $r4;
        int $i0;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.apache.commons.io.ByteOrderMark;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: int[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No charsetName specified");

        throw $r3;

     label2:
        if $r2 == null goto label3;

        $i0 = lengthof $r2;

        if $i0 != 0 goto label4;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No bytes specified");

        throw $r3;

     label4:
        r0.<org.apache.commons.io.ByteOrderMark: java.lang.String charsetName> = $r1;

        $i0 = lengthof $r2;

        $r4 = newarray (int)[$i0];

        r0.<org.apache.commons.io.ByteOrderMark: int[] bytes> = $r4;

        $r4 = r0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;

        $i0 = lengthof $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r4, 0, $i0);

        return;
    }
    public boolean equals(java.lang.Object)
    {
        org.apache.commons.io.ByteOrderMark r0, r2;
        java.lang.Object $r1;
        boolean $z0;
        int[] $r3;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.commons.io.ByteOrderMark;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof org.apache.commons.io.ByteOrderMark;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.apache.commons.io.ByteOrderMark) $r1;

        $r3 = r0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;

        $i0 = lengthof $r3;

        $i1 = virtualinvoke r2.<org.apache.commons.io.ByteOrderMark: int length()>();

        if $i0 != $i1 goto label4;

        $i0 = 0;

     label2:
        $r3 = r0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;

        $i1 = lengthof $r3;

        if $i0 >= $i1 goto label3;

        $r3 = r0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;

        $i1 = $r3[$i0];

        $i2 = virtualinvoke r2.<org.apache.commons.io.ByteOrderMark: int get(int)>($i0);

        if $i1 != $i2 goto label4;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return 1;

     label4:
        return 0;
    }
    public int get(int)
    {
        org.apache.commons.io.ByteOrderMark r0;
        int $i0;
        int[] $r1;

        r0 := @this: org.apache.commons.io.ByteOrderMark;

        $i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;

        $i0 = $r1[$i0];

        return $i0;
    }
    public byte[] getBytes()
    {
        org.apache.commons.io.ByteOrderMark r0;
        byte[] r1;
        int[] $r2;
        int $i0, $i1;
        byte $b2;

        r0 := @this: org.apache.commons.io.ByteOrderMark;

        $r2 = r0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;

        $i0 = lengthof $r2;

        r1 = newarray (byte)[$i0];

        $i0 = 0;

     label1:
        $r2 = r0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;

        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label2;

        $r2 = r0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;

        $i1 = $r2[$i0];

        $b2 = (byte) $i1;

        r1[$i0] = $b2;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r1;
    }
    public java.lang.String getCharsetName()
    {
        org.apache.commons.io.ByteOrderMark r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.io.ByteOrderMark;

        r1 = r0.<org.apache.commons.io.ByteOrderMark: java.lang.String charsetName>;

        return r1;
    }
    public int hashCode()
    {
        org.apache.commons.io.ByteOrderMark r0;
        int[] r1;
        int i0, i1, i2, i3;
        java.lang.Class $r2;

        r0 := @this: org.apache.commons.io.ByteOrderMark;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        i2 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        r1 = r0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;

        i1 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i1 goto label2;

        i0 = r1[i3];

        i2 = i2 + i0;

        i3 = i3 + 1;

        goto label1;

     label2:
        return i2;
    }
    public int length()
    {
        org.apache.commons.io.ByteOrderMark r0;
        int[] $r1;
        int $i0;

        r0 := @this: org.apache.commons.io.ByteOrderMark;

        $r1 = r0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;

        $i0 = lengthof $r1;

        return $i0;
    }
    public java.lang.String toString()
    {
        org.apache.commons.io.ByteOrderMark r0;
        java.lang.StringBuilder r1;
        java.lang.Class $r2;
        java.lang.String $r3;
        int i0, $i1;
        int[] $r4;

        r0 := @this: org.apache.commons.io.ByteOrderMark;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $r3 = r0.<org.apache.commons.io.ByteOrderMark: java.lang.String charsetName>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        i0 = 0;

     label1:
        $r4 = r0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;

        $i1 = lengthof $r4;

        if i0 >= $i1 goto label3;

        if i0 <= 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $r4 = r0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;

        $i1 = $r4[i0];

        $i1 = $i1 & 255;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toUpperCase()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        i0 = i0 + 1;

        goto label1;

     label3:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
