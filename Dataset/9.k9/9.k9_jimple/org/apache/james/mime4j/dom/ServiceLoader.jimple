org.apache.james.mime4j.dom.ServiceLoader extends java.lang.Object
    private void <init>()
    {
        org.apache.james.mime4j.dom.ServiceLoader r0;

        r0 := @this: org.apache.james.mime4j.dom.ServiceLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    static java.lang.Object load(java.lang.Class)
    {
        java.lang.Class r0, $r11;
        java.io.BufferedReader r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, r10;
        java.lang.ClassLoader $r4;
        java.util.Enumeration $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.net.URL r7;
        java.io.InputStream $r8;
        java.io.InputStreamReader $r9;
        int $i0;
        java.io.IOException r12;
        org.apache.james.mime4j.dom.ServiceLoaderException $r13;
        java.lang.Throwable $r14;
        java.lang.ClassNotFoundException r15;
        java.lang.IllegalAccessException r16;
        java.lang.InstantiationException r17;

        r0 := @parameter0: java.lang.Class;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("META-INF/services/");

        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label01:
        $r5 = virtualinvoke $r4.<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>($r3);

     label02:
        $z0 = interfaceinvoke $r5.<java.util.Enumeration: boolean hasMoreElements()>();

     label03:
        if $z0 == 0 goto label30;

     label04:
        $r6 = interfaceinvoke $r5.<java.util.Enumeration: java.lang.Object nextElement()>();

     label05:
        r7 = (java.net.URL) $r6;

     label06:
        $r8 = virtualinvoke r7.<java.net.URL: java.io.InputStream openStream()>();

     label07:
        r1 = new java.io.BufferedReader;

        $r9 = new java.io.InputStreamReader;

        specialinvoke $r9.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r8);

        specialinvoke r1.<java.io.BufferedReader: void <init>(java.io.Reader)>($r9);

     label08:
        $r3 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

     label09:
        if $r3 == null goto label23;

     label10:
        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

     label11:
        r10 = $r3;

     label12:
        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(35);

     label13:
        if $i0 == -1 goto label16;

     label14:
        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

     label15:
        r10 = $r3;

     label16:
        $i0 = virtualinvoke r10.<java.lang.String: int length()>();

     label17:
        if $i0 == 0 goto label08;

     label18:
        $r11 = virtualinvoke $r4.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r10);

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r11);

     label19:
        if $z0 == 0 goto label08;

     label20:
        $r6 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>();

        $r6 = virtualinvoke r0.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r6);

     label21:
        virtualinvoke $r8.<java.io.InputStream: void close()>();

     label22:
        return $r6;

     label23:
        virtualinvoke r1.<java.io.BufferedReader: void close()>();

     label24:
        virtualinvoke $r8.<java.io.InputStream: void close()>();

     label25:
        goto label02;

     label26:
        r12 := @caughtexception;

        $r13 = new org.apache.james.mime4j.dom.ServiceLoaderException;

        specialinvoke $r13.<org.apache.james.mime4j.dom.ServiceLoaderException: void <init>(java.lang.Throwable)>(r12);

        throw $r13;

     label27:
        $r14 := @caughtexception;

     label28:
        virtualinvoke $r8.<java.io.InputStream: void close()>();

        throw $r14;

     label29:
        r15 := @caughtexception;

        $r13 = new org.apache.james.mime4j.dom.ServiceLoaderException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown SPI class \'");

        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<org.apache.james.mime4j.dom.ServiceLoaderException: void <init>(java.lang.String,java.lang.Throwable)>($r3, r15);

        throw $r13;

     label30:
        return null;

     label31:
        r16 := @caughtexception;

        return null;

     label32:
        r17 := @caughtexception;

        $r13 = new org.apache.james.mime4j.dom.ServiceLoaderException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SPI class \'");

        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' cannot be instantiated");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<org.apache.james.mime4j.dom.ServiceLoaderException: void <init>(java.lang.String,java.lang.Throwable)>($r3, r17);

        throw $r13;

        catch java.io.IOException from label01 to label03 with label26;
        catch java.io.IOException from label04 to label05 with label26;
        catch java.io.IOException from label06 to label07 with label26;
        catch java.lang.ClassNotFoundException from label01 to label03 with label29;
        catch java.lang.ClassNotFoundException from label04 to label05 with label29;
        catch java.lang.ClassNotFoundException from label06 to label07 with label29;
        catch java.lang.IllegalAccessException from label01 to label03 with label31;
        catch java.lang.IllegalAccessException from label04 to label05 with label31;
        catch java.lang.IllegalAccessException from label06 to label07 with label31;
        catch java.lang.InstantiationException from label01 to label03 with label32;
        catch java.lang.InstantiationException from label04 to label05 with label32;
        catch java.lang.InstantiationException from label06 to label07 with label32;
        catch java.lang.Throwable from label07 to label09 with label27;
        catch java.lang.Throwable from label10 to label11 with label27;
        catch java.lang.Throwable from label12 to label13 with label27;
        catch java.lang.Throwable from label14 to label15 with label27;
        catch java.lang.Throwable from label16 to label17 with label27;
        catch java.lang.Throwable from label18 to label19 with label27;
        catch java.lang.Throwable from label20 to label21 with label27;
        catch java.io.IOException from label21 to label22 with label26;
        catch java.lang.ClassNotFoundException from label21 to label22 with label29;
        catch java.lang.IllegalAccessException from label21 to label22 with label31;
        catch java.lang.InstantiationException from label21 to label22 with label32;
        catch java.lang.Throwable from label23 to label24 with label27;
        catch java.io.IOException from label24 to label25 with label26;
        catch java.lang.ClassNotFoundException from label24 to label25 with label29;
        catch java.lang.IllegalAccessException from label24 to label25 with label31;
        catch java.lang.InstantiationException from label24 to label25 with label32;
        catch java.io.IOException from label28 to label29 with label26;
        catch java.lang.ClassNotFoundException from label28 to label29 with label29;
        catch java.lang.IllegalAccessException from label28 to label29 with label31;
        catch java.lang.InstantiationException from label28 to label29 with label32;
    }
