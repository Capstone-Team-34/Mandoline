org.apache.james.mime4j.dom.SingleBody extends java.lang.Object implements org.apache.james.mime4j.dom.Body
static final int DEFAULT_ENCODING_BUFFER_SIZE
private org.apache.james.mime4j.dom.Entity parent
    protected void <init>()
    {
        org.apache.james.mime4j.dom.SingleBody r0;

        r0 := @this: org.apache.james.mime4j.dom.SingleBody;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.james.mime4j.dom.SingleBody: org.apache.james.mime4j.dom.Entity parent> = null;

        return;
    }
    private static void copy(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        java.io.OutputStream $r1;
        byte[] r2;
        int $i0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.io.OutputStream;

        r2 = newarray (byte)[1024];

     label1:
        $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>(r2);

        if -1 == $i0 goto label2;

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>(r2, 0, $i0);

        goto label1;

     label2:
        return;
    }
    public org.apache.james.mime4j.dom.SingleBody copy()
    {
        org.apache.james.mime4j.dom.SingleBody r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.apache.james.mime4j.dom.SingleBody;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }
    public void dispose()
    {
        org.apache.james.mime4j.dom.SingleBody r0;

        r0 := @this: org.apache.james.mime4j.dom.SingleBody;

        return;
    }
public abstract java.io.InputStream getInputStream() throws java.io.IOException { 
// no body
} 
    public org.apache.james.mime4j.dom.Entity getParent()
    {
        org.apache.james.mime4j.dom.SingleBody r0;
        org.apache.james.mime4j.dom.Entity r1;

        r0 := @this: org.apache.james.mime4j.dom.SingleBody;

        r1 = r0.<org.apache.james.mime4j.dom.SingleBody: org.apache.james.mime4j.dom.Entity parent>;

        return r1;
    }
    public void setParent(org.apache.james.mime4j.dom.Entity)
    {
        org.apache.james.mime4j.dom.SingleBody r0;
        org.apache.james.mime4j.dom.Entity $r1;

        r0 := @this: org.apache.james.mime4j.dom.SingleBody;

        $r1 := @parameter0: org.apache.james.mime4j.dom.Entity;

        r0.<org.apache.james.mime4j.dom.SingleBody: org.apache.james.mime4j.dom.Entity parent> = $r1;

        return;
    }
    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.james.mime4j.dom.SingleBody r0;
        java.io.OutputStream $r1;
        java.lang.IllegalArgumentException $r2;
        java.io.InputStream $r3;

        r0 := @this: org.apache.james.mime4j.dom.SingleBody;

        $r1 := @parameter0: java.io.OutputStream;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        $r3 = virtualinvoke r0.<org.apache.james.mime4j.dom.SingleBody: java.io.InputStream getInputStream()>();

        staticinvoke <org.apache.james.mime4j.dom.SingleBody: void copy(java.io.InputStream,java.io.OutputStream)>($r3, $r1);

        virtualinvoke $r3.<java.io.InputStream: void close()>();

        return;
    }
