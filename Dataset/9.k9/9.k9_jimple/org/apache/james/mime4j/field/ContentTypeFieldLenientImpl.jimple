org.apache.james.mime4j.field.ContentTypeFieldLenientImpl extends org.apache.james.mime4j.field.AbstractField implements org.apache.james.mime4j.dom.field.ContentTypeField
public static final org.apache.james.mime4j.dom.FieldParser PARSER
private java.lang.String mediaType
private java.lang.String mimeType
private final java.util.Map parameters
private boolean parsed
private java.lang.String subType
    static void <clinit>()
    {
        org.apache.james.mime4j.field.ContentTypeFieldLenientImpl$1 $r0;

        $r0 = new org.apache.james.mime4j.field.ContentTypeFieldLenientImpl$1;

        specialinvoke $r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl$1: void <init>()>();

        <org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: org.apache.james.mime4j.dom.FieldParser PARSER> = $r0;

        return;
    }
    void <init>(org.apache.james.mime4j.stream.Field, org.apache.james.mime4j.codec.DecodeMonitor)
    {
        org.apache.james.mime4j.field.ContentTypeFieldLenientImpl r0;
        org.apache.james.mime4j.stream.Field $r1;
        org.apache.james.mime4j.codec.DecodeMonitor $r2;
        java.util.HashMap $r3;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldLenientImpl;

        $r1 := @parameter0: org.apache.james.mime4j.stream.Field;

        $r2 := @parameter1: org.apache.james.mime4j.codec.DecodeMonitor;

        specialinvoke r0.<org.apache.james.mime4j.field.AbstractField: void <init>(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor)>($r1, $r2);

        r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: boolean parsed> = 0;

        r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.lang.String mimeType> = null;

        r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.lang.String mediaType> = null;

        r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.lang.String subType> = null;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.util.Map parameters> = $r3;

        return;
    }
    private void parse()
    {
        org.apache.james.mime4j.field.ContentTypeFieldLenientImpl r0;
        org.apache.james.mime4j.stream.RawField $r1;
        org.apache.james.mime4j.stream.RawFieldParser $r2;
        org.apache.james.mime4j.stream.RawBody $r3;
        java.lang.String $r4, r5, r6, r7, $r8;
        int $i0;
        boolean z0;
        java.lang.StringBuilder $r9;
        org.apache.james.mime4j.codec.DecodeMonitor $r10;
        java.util.Map $r11;
        java.util.List $r12;
        java.util.Iterator $r13;
        java.lang.Object $r14;
        org.apache.james.mime4j.stream.NameValuePair r15;
        java.util.Locale $r16;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldLenientImpl;

        r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: boolean parsed> = 1;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: org.apache.james.mime4j.stream.RawField getRawField()>();

        $r2 = <org.apache.james.mime4j.stream.RawFieldParser: org.apache.james.mime4j.stream.RawFieldParser DEFAULT>;

        $r3 = virtualinvoke $r2.<org.apache.james.mime4j.stream.RawFieldParser: org.apache.james.mime4j.stream.RawBody parseRawBody(org.apache.james.mime4j.stream.RawField)>($r1);

        $r4 = virtualinvoke $r3.<org.apache.james.mime4j.stream.RawBody: java.lang.String getValue()>();

        r5 = $r4;

        r6 = null;

        r7 = null;

        if $r4 == null goto label3;

        r5 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase()>();

        $r8 = virtualinvoke r5.<java.lang.String: java.lang.String trim()>();

        r5 = $r8;

        $i0 = virtualinvoke $r8.<java.lang.String: int indexOf(int)>(47);

        z0 = 0;

        if $i0 == -1 goto label1;

        r6 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r4 = virtualinvoke r6.<java.lang.String: java.lang.String trim()>();

        r6 = $r4;

        $i0 = $i0 + 1;

        r7 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int)>($i0);

        $r8 = virtualinvoke r7.<java.lang.String: java.lang.String trim()>();

        r7 = $r8;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        z0 = 1;

     label1:
        if z0 != 0 goto label3;

        $r10 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: org.apache.james.mime4j.codec.DecodeMonitor monitor>;

        z0 = virtualinvoke $r10.<org.apache.james.mime4j.codec.DecodeMonitor: boolean isListening()>();

        if z0 == 0 goto label2;

        $r10 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: org.apache.james.mime4j.codec.DecodeMonitor monitor>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid Content-Type: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<org.apache.james.mime4j.codec.DecodeMonitor: boolean warn(java.lang.String,java.lang.String)>(r6, "Content-Type value ignored");

     label2:
        r5 = null;

        r6 = null;

        r7 = null;

     label3:
        r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.lang.String mimeType> = r5;

        r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.lang.String mediaType> = r6;

        r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.lang.String subType> = r7;

        $r11 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.util.Map parameters>;

        interfaceinvoke $r11.<java.util.Map: void clear()>();

        $r12 = virtualinvoke $r3.<org.apache.james.mime4j.stream.RawBody: java.util.List getParams()>();

        $r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label4:
        z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if z0 == 0 goto label5;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r15 = (org.apache.james.mime4j.stream.NameValuePair) $r14;

        r6 = virtualinvoke r15.<org.apache.james.mime4j.stream.NameValuePair: java.lang.String getName()>();

        $r16 = <java.util.Locale: java.util.Locale US>;

        r6 = virtualinvoke r6.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r16);

        $r11 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.util.Map parameters>;

        r5 = virtualinvoke r15.<org.apache.james.mime4j.stream.NameValuePair: java.lang.String getValue()>();

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r5);

        goto label4;

     label5:
        return;
    }
    public java.lang.String getBoundary()
    {
        org.apache.james.mime4j.field.ContentTypeFieldLenientImpl r0;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldLenientImpl;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.lang.String getParameter(java.lang.String)>("boundary");

        return $r1;
    }
    public java.lang.String getCharset()
    {
        org.apache.james.mime4j.field.ContentTypeFieldLenientImpl r0;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldLenientImpl;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.lang.String getParameter(java.lang.String)>("charset");

        return $r1;
    }
    public java.lang.String getMediaType()
    {
        org.apache.james.mime4j.field.ContentTypeFieldLenientImpl r0;
        boolean $z0;
        java.lang.String r1;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldLenientImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: void parse()>();

     label1:
        r1 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.lang.String mediaType>;

        return r1;
    }
    public java.lang.String getMimeType()
    {
        org.apache.james.mime4j.field.ContentTypeFieldLenientImpl r0;
        boolean $z0;
        java.lang.String r1;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldLenientImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: void parse()>();

     label1:
        r1 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.lang.String mimeType>;

        return r1;
    }
    public java.lang.String getParameter(java.lang.String)
    {
        org.apache.james.mime4j.field.ContentTypeFieldLenientImpl r0;
        java.lang.String $r1;
        boolean $z0;
        java.util.Map $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldLenientImpl;

        $r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: void parse()>();

     label1:
        $r2 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.util.Map parameters>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r1 = (java.lang.String) $r3;

        return $r1;
    }
    public java.util.Map getParameters()
    {
        org.apache.james.mime4j.field.ContentTypeFieldLenientImpl r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldLenientImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: void parse()>();

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.util.Map parameters>;

        $r1 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r1;
    }
    public java.lang.String getSubType()
    {
        org.apache.james.mime4j.field.ContentTypeFieldLenientImpl r0;
        boolean $z0;
        java.lang.String r1;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldLenientImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: void parse()>();

     label1:
        r1 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.lang.String subType>;

        return r1;
    }
    public boolean isMimeType(java.lang.String)
    {
        org.apache.james.mime4j.field.ContentTypeFieldLenientImpl r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldLenientImpl;

        $r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: void parse()>();

     label1:
        $r2 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.lang.String mimeType>;

        if $r2 == null goto label2;

        $r2 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.lang.String mimeType>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }
    public boolean isMultipart()
    {
        org.apache.james.mime4j.field.ContentTypeFieldLenientImpl r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldLenientImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: void parse()>();

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.lang.String mimeType>;

        if $r1 == null goto label2;

        $r1 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.lang.String mimeType>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("multipart/");

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }
