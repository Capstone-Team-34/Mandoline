org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl extends org.apache.james.mime4j.field.AbstractField implements org.apache.james.mime4j.dom.field.ContentDispositionField
private static final java.lang.String DEFAULT_DATE_FORMAT
public static final org.apache.james.mime4j.dom.FieldParser PARSER
private java.util.Date creationDate
private boolean creationDateParsed
private final java.util.List datePatterns
private java.lang.String dispositionType
private java.util.Date modificationDate
private boolean modificationDateParsed
private final java.util.Map parameters
private boolean parsed
private java.util.Date readDate
private boolean readDateParsed
    static void <clinit>()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl$1 $r0;

        $r0 = new org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl$1;

        specialinvoke $r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl$1: void <init>()>();

        <org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: org.apache.james.mime4j.dom.FieldParser PARSER> = $r0;

        return;
    }
    void <init>(org.apache.james.mime4j.stream.Field, java.util.Collection, org.apache.james.mime4j.codec.DecodeMonitor)
    {
        org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl r0;
        org.apache.james.mime4j.stream.Field $r1;
        java.util.Collection r2;
        org.apache.james.mime4j.codec.DecodeMonitor $r3;
        java.util.HashMap $r4;
        java.util.ArrayList $r5;
        java.util.List $r6;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl;

        $r1 := @parameter0: org.apache.james.mime4j.stream.Field;

        r2 := @parameter1: java.util.Collection;

        $r3 := @parameter2: org.apache.james.mime4j.codec.DecodeMonitor;

        specialinvoke r0.<org.apache.james.mime4j.field.AbstractField: void <init>(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor)>($r1, $r3);

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: boolean parsed> = 0;

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.lang.String dispositionType> = "";

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.Map parameters> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.List datePatterns> = $r5;

        if r2 == null goto label1;

        $r6 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.List datePatterns>;

        interfaceinvoke $r6.<java.util.List: boolean addAll(java.util.Collection)>(r2);

        return;

     label1:
        $r6 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.List datePatterns>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>("EEE, dd MMM yyyy hh:mm:ss ZZZZ");

        return;
    }
    private void parse()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl r0;
        org.apache.james.mime4j.stream.RawField $r1;
        org.apache.james.mime4j.stream.RawFieldParser $r2;
        org.apache.james.mime4j.stream.RawBody $r3;
        java.lang.String $r4, $r11;
        java.util.Locale $r5;
        java.util.Map $r6;
        java.util.List $r7;
        java.util.Iterator $r8;
        boolean $z0;
        java.lang.Object $r9;
        org.apache.james.mime4j.stream.NameValuePair r10;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl;

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: boolean parsed> = 1;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: org.apache.james.mime4j.stream.RawField getRawField()>();

        $r2 = <org.apache.james.mime4j.stream.RawFieldParser: org.apache.james.mime4j.stream.RawFieldParser DEFAULT>;

        $r3 = virtualinvoke $r2.<org.apache.james.mime4j.stream.RawFieldParser: org.apache.james.mime4j.stream.RawBody parseRawBody(org.apache.james.mime4j.stream.RawField)>($r1);

        $r4 = virtualinvoke $r3.<org.apache.james.mime4j.stream.RawBody: java.lang.String getValue()>();

        if $r4 == null goto label3;

        $r5 = <java.util.Locale: java.util.Locale US>;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r5);

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.lang.String dispositionType> = $r4;

     label1:
        $r6 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.Map parameters>;

        interfaceinvoke $r6.<java.util.Map: void clear()>();

        $r7 = virtualinvoke $r3.<org.apache.james.mime4j.stream.RawBody: java.util.List getParams()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.apache.james.mime4j.stream.NameValuePair) $r9;

        $r4 = virtualinvoke r10.<org.apache.james.mime4j.stream.NameValuePair: java.lang.String getName()>();

        $r5 = <java.util.Locale: java.util.Locale US>;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r5);

        $r6 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.Map parameters>;

        $r11 = virtualinvoke r10.<org.apache.james.mime4j.stream.NameValuePair: java.lang.String getValue()>();

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r11);

        goto label2;

     label3:
        r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.lang.String dispositionType> = null;

        goto label1;

     label4:
        return;
    }
    private java.util.Date parseDate(java.lang.String)
    {
        org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl r0;
        java.lang.String $r1, $r3, r7;
        java.text.SimpleDateFormat r2;
        java.util.List $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.util.Locale $r8;
        java.util.TimeZone $r9;
        java.util.Date $r10;
        org.apache.james.mime4j.codec.DecodeMonitor $r11;
        java.lang.StringBuilder $r12;
        java.text.ParseException $r13;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl;

        $r1 := @parameter0: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.lang.String getParameter(java.lang.String)>($r1);

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.List datePatterns>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

        r2 = new java.text.SimpleDateFormat;

        $r8 = <java.util.Locale: java.util.Locale US>;

     label3:
        specialinvoke r2.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>(r7, $r8);

        $r9 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        virtualinvoke r2.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r9);

        virtualinvoke r2.<java.text.SimpleDateFormat: void setLenient(boolean)>(1);

        $r10 = virtualinvoke r2.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r3);

     label4:
        return $r10;

     label5:
        $r11 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: org.apache.james.mime4j.codec.DecodeMonitor monitor>;

        $z0 = virtualinvoke $r11.<org.apache.james.mime4j.codec.DecodeMonitor: boolean isListening()>();

        if $z0 == 0 goto label7;

        $r11 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: org.apache.james.mime4j.codec.DecodeMonitor monitor>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" parameter is invalid: ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" parameter is ignored");

        $r1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<org.apache.james.mime4j.codec.DecodeMonitor: boolean warn(java.lang.String,java.lang.String)>($r3, $r1);

        return null;

     label6:
        $r13 := @caughtexception;

        goto label2;

     label7:
        return null;

        catch java.text.ParseException from label3 to label4 with label6;
    }
    public java.util.Date getCreationDate()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl r0;
        java.util.Date $r1;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: boolean creationDateParsed>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.Date parseDate(java.lang.String)>("creation-date");

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.Date creationDate> = $r1;

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: boolean creationDateParsed> = 1;

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.Date creationDate>;

        return $r1;
    }
    public java.lang.String getDispositionType()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl r0;
        boolean $z0;
        java.lang.String r1;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: void parse()>();

     label1:
        r1 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.lang.String dispositionType>;

        return r1;
    }
    public java.lang.String getFilename()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl r0;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.lang.String getParameter(java.lang.String)>("filename");

        return $r1;
    }
    public java.util.Date getModificationDate()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl r0;
        java.util.Date $r1;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: boolean modificationDateParsed>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.Date parseDate(java.lang.String)>("modification-date");

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.Date modificationDate> = $r1;

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: boolean modificationDateParsed> = 1;

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.Date modificationDate>;

        return $r1;
    }
    public java.lang.String getParameter(java.lang.String)
    {
        org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl r0;
        java.lang.String $r1;
        boolean $z0;
        java.util.Map $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl;

        $r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: void parse()>();

     label1:
        $r2 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.Map parameters>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r1 = (java.lang.String) $r3;

        return $r1;
    }
    public java.util.Map getParameters()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: void parse()>();

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.Map parameters>;

        $r1 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r1;
    }
    public java.util.Date getReadDate()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl r0;
        java.util.Date $r1;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: boolean readDateParsed>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.Date parseDate(java.lang.String)>("read-date");

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.Date readDate> = $r1;

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: boolean readDateParsed> = 1;

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.Date readDate>;

        return $r1;
    }
    public long getSize()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl r0;
        java.lang.NumberFormatException r1;
        java.lang.String $r2;
        long $l0, l1;
        byte $b2;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl;

        $r2 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.lang.String getParameter(java.lang.String)>("size");

        if $r2 != null goto label1;

        return -1L;

     label1:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r2);

     label2:
        l1 = $l0;

        $b2 = $l0 cmp 0L;

        if $b2 >= 0 goto label3;

        l1 = -1L;

     label3:
        return l1;

     label4:
        r1 := @caughtexception;

        return -1L;

        catch java.lang.NumberFormatException from label1 to label2 with label4;
    }
    public boolean isAttachment()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: void parse()>();

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.lang.String dispositionType>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("attachment");

        return $z0;
    }
    public boolean isDispositionType(java.lang.String)
    {
        org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl;

        $r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: void parse()>();

     label1:
        $r2 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.lang.String dispositionType>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        return $z0;
    }
    public boolean isInline()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: void parse()>();

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.lang.String dispositionType>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("inline");

        return $z0;
    }
