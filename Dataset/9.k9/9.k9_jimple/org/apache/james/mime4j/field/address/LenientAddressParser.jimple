org.apache.james.mime4j.field.address.LenientAddressParser extends java.lang.Object implements org.apache.james.mime4j.field.address.AddressParser
private static final int AT
private static final java.util.BitSet AT_AND_CLOSING_BRACKET
private static final int CLOSING_BRACKET
private static final java.util.BitSet CLOSING_BRACKET_ONLY
private static final int COLON
private static final java.util.BitSet COLON_ONLY
private static final int COMMA
private static final java.util.BitSet COMMA_ONLY
public static final org.apache.james.mime4j.field.address.LenientAddressParser DEFAULT
private static final int OPENING_BRACKET
private static final int SEMICOLON
private static final java.util.BitSet SEMICOLON_ONLY
private final org.apache.james.mime4j.codec.DecodeMonitor monitor
private final org.apache.james.mime4j.stream.RawFieldParser parser
    static void <clinit>()
    {
        int[] $r0;
        java.util.BitSet $r1;
        org.apache.james.mime4j.field.address.LenientAddressParser $r2;
        org.apache.james.mime4j.codec.DecodeMonitor $r3;

        $r0 = newarray (int)[2];

        $r0[0] = 64;

        $r0[1] = 62;

        $r1 = staticinvoke <org.apache.james.mime4j.stream.RawFieldParser: java.util.BitSet INIT_BITSET(int[])>($r0);

        <org.apache.james.mime4j.field.address.LenientAddressParser: java.util.BitSet AT_AND_CLOSING_BRACKET> = $r1;

        $r0 = newarray (int)[1];

        $r0[0] = 62;

        $r1 = staticinvoke <org.apache.james.mime4j.stream.RawFieldParser: java.util.BitSet INIT_BITSET(int[])>($r0);

        <org.apache.james.mime4j.field.address.LenientAddressParser: java.util.BitSet CLOSING_BRACKET_ONLY> = $r1;

        $r0 = newarray (int)[1];

        $r0[0] = 44;

        $r1 = staticinvoke <org.apache.james.mime4j.stream.RawFieldParser: java.util.BitSet INIT_BITSET(int[])>($r0);

        <org.apache.james.mime4j.field.address.LenientAddressParser: java.util.BitSet COMMA_ONLY> = $r1;

        $r0 = newarray (int)[1];

        $r0[0] = 58;

        $r1 = staticinvoke <org.apache.james.mime4j.stream.RawFieldParser: java.util.BitSet INIT_BITSET(int[])>($r0);

        <org.apache.james.mime4j.field.address.LenientAddressParser: java.util.BitSet COLON_ONLY> = $r1;

        $r0 = newarray (int)[1];

        $r0[0] = 59;

        $r1 = staticinvoke <org.apache.james.mime4j.stream.RawFieldParser: java.util.BitSet INIT_BITSET(int[])>($r0);

        <org.apache.james.mime4j.field.address.LenientAddressParser: java.util.BitSet SEMICOLON_ONLY> = $r1;

        $r2 = new org.apache.james.mime4j.field.address.LenientAddressParser;

        $r3 = <org.apache.james.mime4j.codec.DecodeMonitor: org.apache.james.mime4j.codec.DecodeMonitor SILENT>;

        specialinvoke $r2.<org.apache.james.mime4j.field.address.LenientAddressParser: void <init>(org.apache.james.mime4j.codec.DecodeMonitor)>($r3);

        <org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.field.address.LenientAddressParser DEFAULT> = $r2;

        return;
    }
    protected void <init>(org.apache.james.mime4j.codec.DecodeMonitor)
    {
        org.apache.james.mime4j.field.address.LenientAddressParser r0;
        org.apache.james.mime4j.codec.DecodeMonitor $r1;
        org.apache.james.mime4j.stream.RawFieldParser $r2;

        r0 := @this: org.apache.james.mime4j.field.address.LenientAddressParser;

        $r1 := @parameter0: org.apache.james.mime4j.codec.DecodeMonitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.codec.DecodeMonitor monitor> = $r1;

        $r2 = new org.apache.james.mime4j.stream.RawFieldParser;

        specialinvoke $r2.<org.apache.james.mime4j.stream.RawFieldParser: void <init>()>();

        r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.stream.RawFieldParser parser> = $r2;

        return;
    }
    private org.apache.james.mime4j.dom.address.Mailbox createMailbox(java.lang.String)
    {
        org.apache.james.mime4j.field.address.LenientAddressParser r0;
        java.lang.String $r1;
        int $i0;
        org.apache.james.mime4j.dom.address.Mailbox $r2;

        r0 := @this: org.apache.james.mime4j.field.address.LenientAddressParser;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r2 = new org.apache.james.mime4j.dom.address.Mailbox;

        specialinvoke $r2.<org.apache.james.mime4j.dom.address.Mailbox: void <init>(java.lang.String,org.apache.james.mime4j.dom.address.DomainList,java.lang.String,java.lang.String)>(null, null, $r1, null);

        return $r2;

     label1:
        return null;
    }
    private org.apache.james.mime4j.dom.address.Mailbox createMailbox(java.lang.String, org.apache.james.mime4j.dom.address.DomainList, java.lang.String, java.lang.String)
    {
        org.apache.james.mime4j.field.address.LenientAddressParser r0;
        java.lang.String $r1, $r3, $r4;
        org.apache.james.mime4j.dom.address.DomainList $r2;
        org.apache.james.mime4j.dom.address.Mailbox $r5;
        org.apache.james.mime4j.codec.DecodeMonitor $r6;

        r0 := @this: org.apache.james.mime4j.field.address.LenientAddressParser;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.apache.james.mime4j.dom.address.DomainList;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 = new org.apache.james.mime4j.dom.address.Mailbox;

        if $r1 == null goto label2;

        $r6 = r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.codec.DecodeMonitor monitor>;

        $r1 = staticinvoke <org.apache.james.mime4j.codec.DecoderUtil: java.lang.String decodeEncodedWords(java.lang.String,org.apache.james.mime4j.codec.DecodeMonitor)>($r1, $r6);

     label1:
        specialinvoke $r5.<org.apache.james.mime4j.dom.address.Mailbox: void <init>(java.lang.String,org.apache.james.mime4j.dom.address.DomainList,java.lang.String,java.lang.String)>($r1, $r2, $r3, $r4);

        return $r5;

     label2:
        $r1 = null;

        goto label1;
    }
    public org.apache.james.mime4j.dom.address.Address parseAddress(java.lang.CharSequence)
    {
        org.apache.james.mime4j.field.address.LenientAddressParser r0;
        java.lang.CharSequence $r1;
        org.apache.james.mime4j.stream.ParserCursor r2;
        org.apache.james.mime4j.util.ByteSequence $r3;
        int $i0;
        org.apache.james.mime4j.dom.address.Address $r4;

        r0 := @this: org.apache.james.mime4j.field.address.LenientAddressParser;

        $r1 := @parameter0: java.lang.CharSequence;

        $r3 = staticinvoke <org.apache.james.mime4j.util.ContentUtil: org.apache.james.mime4j.util.ByteSequence encode(java.lang.CharSequence)>($r1);

        r2 = new org.apache.james.mime4j.stream.ParserCursor;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        specialinvoke r2.<org.apache.james.mime4j.stream.ParserCursor: void <init>(int,int)>(0, $i0);

        $r4 = virtualinvoke r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.dom.address.Address parseAddress(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor,java.util.BitSet)>($r3, r2, null);

        return $r4;
    }
    public org.apache.james.mime4j.dom.address.Address parseAddress(org.apache.james.mime4j.util.ByteSequence, org.apache.james.mime4j.stream.ParserCursor, java.util.BitSet)
    {
        org.apache.james.mime4j.field.address.LenientAddressParser r0;
        org.apache.james.mime4j.util.ByteSequence $r1;
        org.apache.james.mime4j.stream.ParserCursor $r2;
        java.util.BitSet $r3, $r5;
        int[] $r4;
        org.apache.james.mime4j.stream.RawFieldParser $r6;
        java.lang.String $r7, $r9;
        boolean $z0;
        org.apache.james.mime4j.dom.address.Mailbox $r8;
        int $i0, $i2;
        byte $b1;
        char c3;
        java.util.List $r10;
        org.apache.james.mime4j.dom.address.Group $r11;

        r0 := @this: org.apache.james.mime4j.field.address.LenientAddressParser;

        $r1 := @parameter0: org.apache.james.mime4j.util.ByteSequence;

        $r2 := @parameter1: org.apache.james.mime4j.stream.ParserCursor;

        $r3 := @parameter2: java.util.BitSet;

        $r4 = newarray (int)[3];

        $r4[0] = 58;

        $r4[1] = 64;

        $r4[2] = 60;

        $r5 = staticinvoke <org.apache.james.mime4j.stream.RawFieldParser: java.util.BitSet INIT_BITSET(int[])>($r4);

        if $r3 == null goto label1;

        virtualinvoke $r5.<java.util.BitSet: void or(java.util.BitSet)>($r3);

     label1:
        $r6 = r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.stream.RawFieldParser parser>;

        $r7 = virtualinvoke $r6.<org.apache.james.mime4j.stream.RawFieldParser: java.lang.String parseValue(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor,java.util.BitSet)>($r1, $r2, $r5);

        $z0 = virtualinvoke $r2.<org.apache.james.mime4j.stream.ParserCursor: boolean atEnd()>();

        if $z0 == 0 goto label2;

        $r8 = specialinvoke r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.dom.address.Mailbox createMailbox(java.lang.String)>($r7);

        return $r8;

     label2:
        $i0 = virtualinvoke $r2.<org.apache.james.mime4j.stream.ParserCursor: int getPos()>();

        $b1 = interfaceinvoke $r1.<org.apache.james.mime4j.util.ByteSequence: byte byteAt(int)>($i0);

        $i2 = $b1 & 255;

        c3 = (char) $i2;

        if c3 != 60 goto label3;

        $r8 = virtualinvoke r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.dom.address.Mailbox parseMailboxAddress(java.lang.String,org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor)>($r7, $r1, $r2);

        return $r8;

     label3:
        if c3 != 64 goto label4;

        $i0 = $i0 + 1;

        virtualinvoke $r2.<org.apache.james.mime4j.stream.ParserCursor: void updatePos(int)>($i0);

        $r9 = virtualinvoke r0.<org.apache.james.mime4j.field.address.LenientAddressParser: java.lang.String parseDomain(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor,java.util.BitSet)>($r1, $r2, $r3);

        $r8 = new org.apache.james.mime4j.dom.address.Mailbox;

        specialinvoke $r8.<org.apache.james.mime4j.dom.address.Mailbox: void <init>(java.lang.String,org.apache.james.mime4j.dom.address.DomainList,java.lang.String,java.lang.String)>(null, null, $r7, $r9);

        return $r8;

     label4:
        if c3 != 58 goto label6;

        $i0 = $i0 + 1;

        virtualinvoke $r2.<org.apache.james.mime4j.stream.ParserCursor: void updatePos(int)>($i0);

        $r3 = <org.apache.james.mime4j.field.address.LenientAddressParser: java.util.BitSet SEMICOLON_ONLY>;

        $r10 = virtualinvoke r0.<org.apache.james.mime4j.field.address.LenientAddressParser: java.util.List parseMailboxes(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor,java.util.BitSet)>($r1, $r2, $r3);

        $z0 = virtualinvoke $r2.<org.apache.james.mime4j.stream.ParserCursor: boolean atEnd()>();

        if $z0 != 0 goto label5;

        $i0 = virtualinvoke $r2.<org.apache.james.mime4j.stream.ParserCursor: int getPos()>();

        $b1 = interfaceinvoke $r1.<org.apache.james.mime4j.util.ByteSequence: byte byteAt(int)>($i0);

        $i2 = $b1 & 255;

        c3 = (char) $i2;

        if c3 != 59 goto label5;

        $i0 = $i0 + 1;

        virtualinvoke $r2.<org.apache.james.mime4j.stream.ParserCursor: void updatePos(int)>($i0);

     label5:
        $r11 = new org.apache.james.mime4j.dom.address.Group;

        specialinvoke $r11.<org.apache.james.mime4j.dom.address.Group: void <init>(java.lang.String,java.util.Collection)>($r7, $r10);

        return $r11;

     label6:
        $r8 = specialinvoke r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.dom.address.Mailbox createMailbox(java.lang.String)>($r7);

        return $r8;
    }
    public org.apache.james.mime4j.dom.address.AddressList parseAddressList(java.lang.CharSequence)
    {
        org.apache.james.mime4j.field.address.LenientAddressParser r0;
        java.lang.CharSequence $r1;
        org.apache.james.mime4j.stream.ParserCursor r2;
        org.apache.james.mime4j.util.ByteSequence $r3;
        int $i0;
        org.apache.james.mime4j.dom.address.AddressList $r4;

        r0 := @this: org.apache.james.mime4j.field.address.LenientAddressParser;

        $r1 := @parameter0: java.lang.CharSequence;

        $r3 = staticinvoke <org.apache.james.mime4j.util.ContentUtil: org.apache.james.mime4j.util.ByteSequence encode(java.lang.CharSequence)>($r1);

        r2 = new org.apache.james.mime4j.stream.ParserCursor;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        specialinvoke r2.<org.apache.james.mime4j.stream.ParserCursor: void <init>(int,int)>(0, $i0);

        $r4 = virtualinvoke r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.dom.address.AddressList parseAddressList(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor)>($r3, r2);

        return $r4;
    }
    public org.apache.james.mime4j.dom.address.AddressList parseAddressList(org.apache.james.mime4j.util.ByteSequence, org.apache.james.mime4j.stream.ParserCursor)
    {
        org.apache.james.mime4j.field.address.LenientAddressParser r0;
        org.apache.james.mime4j.util.ByteSequence $r1;
        org.apache.james.mime4j.stream.ParserCursor $r2;
        java.util.ArrayList r3;
        char c0;
        boolean $z0;
        int $i1, $i3;
        byte $b2;
        java.util.BitSet $r4;
        org.apache.james.mime4j.dom.address.Address $r5;
        org.apache.james.mime4j.dom.address.AddressList $r6;

        r0 := @this: org.apache.james.mime4j.field.address.LenientAddressParser;

        $r1 := @parameter0: org.apache.james.mime4j.util.ByteSequence;

        $r2 := @parameter1: org.apache.james.mime4j.stream.ParserCursor;

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

     label1:
        $z0 = virtualinvoke $r2.<org.apache.james.mime4j.stream.ParserCursor: boolean atEnd()>();

        if $z0 != 0 goto label3;

        $i1 = virtualinvoke $r2.<org.apache.james.mime4j.stream.ParserCursor: int getPos()>();

        $b2 = interfaceinvoke $r1.<org.apache.james.mime4j.util.ByteSequence: byte byteAt(int)>($i1);

        $i3 = $b2 & 255;

        c0 = (char) $i3;

        if c0 != 44 goto label2;

        $i1 = $i1 + 1;

        virtualinvoke $r2.<org.apache.james.mime4j.stream.ParserCursor: void updatePos(int)>($i1);

        goto label1;

     label2:
        $r4 = <org.apache.james.mime4j.field.address.LenientAddressParser: java.util.BitSet COMMA_ONLY>;

        $r5 = virtualinvoke r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.dom.address.Address parseAddress(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor,java.util.BitSet)>($r1, $r2, $r4);

        if $r5 == null goto label1;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label1;

     label3:
        $r6 = new org.apache.james.mime4j.dom.address.AddressList;

        specialinvoke $r6.<org.apache.james.mime4j.dom.address.AddressList: void <init>(java.util.List,boolean)>(r3, 0);

        return $r6;
    }
    java.lang.String parseDomain(org.apache.james.mime4j.util.ByteSequence, org.apache.james.mime4j.stream.ParserCursor, java.util.BitSet)
    {
        org.apache.james.mime4j.field.address.LenientAddressParser r0;
        org.apache.james.mime4j.util.ByteSequence $r1;
        org.apache.james.mime4j.stream.ParserCursor $r2;
        java.util.BitSet $r3;
        char c0;
        java.lang.StringBuilder r4;
        boolean $z0;
        int $i1;
        byte $b2;
        java.lang.String $r5;
        org.apache.james.mime4j.stream.RawFieldParser $r6;

        r0 := @this: org.apache.james.mime4j.field.address.LenientAddressParser;

        $r1 := @parameter0: org.apache.james.mime4j.util.ByteSequence;

        $r2 := @parameter1: org.apache.james.mime4j.stream.ParserCursor;

        $r3 := @parameter2: java.util.BitSet;

        r4 = new java.lang.StringBuilder;

        specialinvoke r4.<java.lang.StringBuilder: void <init>()>();

     label1:
        $z0 = virtualinvoke $r2.<org.apache.james.mime4j.stream.ParserCursor: boolean atEnd()>();

        if $z0 != 0 goto label2;

        $i1 = virtualinvoke $r2.<org.apache.james.mime4j.stream.ParserCursor: int getPos()>();

        $b2 = interfaceinvoke $r1.<org.apache.james.mime4j.util.ByteSequence: byte byteAt(int)>($i1);

        $i1 = $b2 & 255;

        c0 = (char) $i1;

        if $r3 == null goto label3;

        $z0 = virtualinvoke $r3.<java.util.BitSet: boolean get(int)>(c0);

        if $z0 == 0 goto label3;

     label2:
        $r5 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label3:
        $z0 = staticinvoke <org.apache.james.mime4j.util.CharsetUtil: boolean isWhitespace(char)>(c0);

        if $z0 == 0 goto label4;

        $r6 = r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.stream.RawFieldParser parser>;

        virtualinvoke $r6.<org.apache.james.mime4j.stream.RawFieldParser: void skipWhiteSpace(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor)>($r1, $r2);

        goto label1;

     label4:
        if c0 != 40 goto label5;

        $r6 = r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.stream.RawFieldParser parser>;

        virtualinvoke $r6.<org.apache.james.mime4j.stream.RawFieldParser: void skipComment(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor)>($r1, $r2);

        goto label1;

     label5:
        $r6 = r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.stream.RawFieldParser parser>;

        virtualinvoke $r6.<org.apache.james.mime4j.stream.RawFieldParser: void copyContent(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor,java.util.BitSet,java.lang.StringBuilder)>($r1, $r2, $r3, r4);

        goto label1;
    }
    public org.apache.james.mime4j.dom.address.Group parseGroup(java.lang.CharSequence)
    {
        org.apache.james.mime4j.field.address.LenientAddressParser r0;
        java.lang.CharSequence $r1;
        org.apache.james.mime4j.stream.ParserCursor r2;
        org.apache.james.mime4j.util.ByteSequence $r3;
        int $i0;
        org.apache.james.mime4j.dom.address.Group $r4;

        r0 := @this: org.apache.james.mime4j.field.address.LenientAddressParser;

        $r1 := @parameter0: java.lang.CharSequence;

        $r3 = staticinvoke <org.apache.james.mime4j.util.ContentUtil: org.apache.james.mime4j.util.ByteSequence encode(java.lang.CharSequence)>($r1);

        r2 = new org.apache.james.mime4j.stream.ParserCursor;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        specialinvoke r2.<org.apache.james.mime4j.stream.ParserCursor: void <init>(int,int)>(0, $i0);

        $r4 = virtualinvoke r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.dom.address.Group parseGroup(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor)>($r3, r2);

        return $r4;
    }
    public org.apache.james.mime4j.dom.address.Group parseGroup(org.apache.james.mime4j.util.ByteSequence, org.apache.james.mime4j.stream.ParserCursor)
    {
        org.apache.james.mime4j.field.address.LenientAddressParser r0;
        org.apache.james.mime4j.util.ByteSequence $r1;
        org.apache.james.mime4j.stream.ParserCursor $r2;
        char c0;
        org.apache.james.mime4j.stream.RawFieldParser $r3;
        java.util.BitSet $r4;
        java.lang.String $r5;
        boolean $z0;
        org.apache.james.mime4j.dom.address.Group $r6;
        java.util.List $r7;
        int $i1, $i3;
        byte $b2;

        r0 := @this: org.apache.james.mime4j.field.address.LenientAddressParser;

        $r1 := @parameter0: org.apache.james.mime4j.util.ByteSequence;

        $r2 := @parameter1: org.apache.james.mime4j.stream.ParserCursor;

        $r3 = r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.stream.RawFieldParser parser>;

        $r4 = <org.apache.james.mime4j.field.address.LenientAddressParser: java.util.BitSet COLON_ONLY>;

        $r5 = virtualinvoke $r3.<org.apache.james.mime4j.stream.RawFieldParser: java.lang.String parseToken(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor,java.util.BitSet)>($r1, $r2, $r4);

        $z0 = virtualinvoke $r2.<org.apache.james.mime4j.stream.ParserCursor: boolean atEnd()>();

        if $z0 == 0 goto label1;

        $r6 = new org.apache.james.mime4j.dom.address.Group;

        $r7 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        specialinvoke $r6.<org.apache.james.mime4j.dom.address.Group: void <init>(java.lang.String,java.util.Collection)>($r5, $r7);

        return $r6;

     label1:
        $i1 = virtualinvoke $r2.<org.apache.james.mime4j.stream.ParserCursor: int getPos()>();

        $b2 = interfaceinvoke $r1.<org.apache.james.mime4j.util.ByteSequence: byte byteAt(int)>($i1);

        $i3 = $b2 & 255;

        c0 = (char) $i3;

        if c0 != 58 goto label2;

        $i1 = $i1 + 1;

        virtualinvoke $r2.<org.apache.james.mime4j.stream.ParserCursor: void updatePos(int)>($i1);

     label2:
        $r4 = <org.apache.james.mime4j.field.address.LenientAddressParser: java.util.BitSet SEMICOLON_ONLY>;

        $r7 = virtualinvoke r0.<org.apache.james.mime4j.field.address.LenientAddressParser: java.util.List parseMailboxes(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor,java.util.BitSet)>($r1, $r2, $r4);

        $r6 = new org.apache.james.mime4j.dom.address.Group;

        specialinvoke $r6.<org.apache.james.mime4j.dom.address.Group: void <init>(java.lang.String,java.util.Collection)>($r5, $r7);

        return $r6;
    }
    public org.apache.james.mime4j.dom.address.Mailbox parseMailbox(java.lang.CharSequence)
    {
        org.apache.james.mime4j.field.address.LenientAddressParser r0;
        java.lang.CharSequence $r1;
        org.apache.james.mime4j.stream.ParserCursor r2;
        org.apache.james.mime4j.util.ByteSequence $r3;
        int $i0;
        org.apache.james.mime4j.dom.address.Mailbox $r4;

        r0 := @this: org.apache.james.mime4j.field.address.LenientAddressParser;

        $r1 := @parameter0: java.lang.CharSequence;

        $r3 = staticinvoke <org.apache.james.mime4j.util.ContentUtil: org.apache.james.mime4j.util.ByteSequence encode(java.lang.CharSequence)>($r1);

        r2 = new org.apache.james.mime4j.stream.ParserCursor;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        specialinvoke r2.<org.apache.james.mime4j.stream.ParserCursor: void <init>(int,int)>(0, $i0);

        $r4 = virtualinvoke r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.dom.address.Mailbox parseMailbox(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor,java.util.BitSet)>($r3, r2, null);

        return $r4;
    }
    public org.apache.james.mime4j.dom.address.Mailbox parseMailbox(org.apache.james.mime4j.util.ByteSequence, org.apache.james.mime4j.stream.ParserCursor, java.util.BitSet)
    {
        org.apache.james.mime4j.field.address.LenientAddressParser r0;
        org.apache.james.mime4j.util.ByteSequence $r1;
        org.apache.james.mime4j.stream.ParserCursor $r2;
        java.util.BitSet $r3, $r5;
        char c0;
        int[] $r4;
        org.apache.james.mime4j.stream.RawFieldParser $r6;
        java.lang.String $r7, $r9;
        boolean $z0;
        org.apache.james.mime4j.dom.address.Mailbox $r8;
        int $i1, $i3;
        byte $b2;

        r0 := @this: org.apache.james.mime4j.field.address.LenientAddressParser;

        $r1 := @parameter0: org.apache.james.mime4j.util.ByteSequence;

        $r2 := @parameter1: org.apache.james.mime4j.stream.ParserCursor;

        $r3 := @parameter2: java.util.BitSet;

        $r4 = newarray (int)[2];

        $r4[0] = 64;

        $r4[1] = 60;

        $r5 = staticinvoke <org.apache.james.mime4j.stream.RawFieldParser: java.util.BitSet INIT_BITSET(int[])>($r4);

        if $r3 == null goto label1;

        virtualinvoke $r5.<java.util.BitSet: void or(java.util.BitSet)>($r3);

     label1:
        $r6 = r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.stream.RawFieldParser parser>;

        $r7 = virtualinvoke $r6.<org.apache.james.mime4j.stream.RawFieldParser: java.lang.String parseValue(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor,java.util.BitSet)>($r1, $r2, $r5);

        $z0 = virtualinvoke $r2.<org.apache.james.mime4j.stream.ParserCursor: boolean atEnd()>();

        if $z0 == 0 goto label2;

        $r8 = specialinvoke r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.dom.address.Mailbox createMailbox(java.lang.String)>($r7);

        return $r8;

     label2:
        $i1 = virtualinvoke $r2.<org.apache.james.mime4j.stream.ParserCursor: int getPos()>();

        $b2 = interfaceinvoke $r1.<org.apache.james.mime4j.util.ByteSequence: byte byteAt(int)>($i1);

        $i3 = $b2 & 255;

        c0 = (char) $i3;

        if c0 != 60 goto label3;

        $r8 = virtualinvoke r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.dom.address.Mailbox parseMailboxAddress(java.lang.String,org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor)>($r7, $r1, $r2);

        return $r8;

     label3:
        if c0 != 64 goto label4;

        $i1 = $i1 + 1;

        virtualinvoke $r2.<org.apache.james.mime4j.stream.ParserCursor: void updatePos(int)>($i1);

        $r9 = virtualinvoke r0.<org.apache.james.mime4j.field.address.LenientAddressParser: java.lang.String parseDomain(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor,java.util.BitSet)>($r1, $r2, $r3);

        $r8 = new org.apache.james.mime4j.dom.address.Mailbox;

        specialinvoke $r8.<org.apache.james.mime4j.dom.address.Mailbox: void <init>(java.lang.String,org.apache.james.mime4j.dom.address.DomainList,java.lang.String,java.lang.String)>(null, null, $r7, $r9);

        return $r8;

     label4:
        $r8 = specialinvoke r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.dom.address.Mailbox createMailbox(java.lang.String)>($r7);

        return $r8;
    }
    org.apache.james.mime4j.dom.address.Mailbox parseMailboxAddress(java.lang.String, org.apache.james.mime4j.util.ByteSequence, org.apache.james.mime4j.stream.ParserCursor)
    {
        org.apache.james.mime4j.field.address.LenientAddressParser r0;
        java.lang.String $r1, $r8, $r9;
        org.apache.james.mime4j.util.ByteSequence $r2;
        org.apache.james.mime4j.stream.ParserCursor $r3;
        java.util.BitSet $r4;
        boolean $z0;
        org.apache.james.mime4j.dom.address.Mailbox $r5;
        int $i0, $i2;
        byte $b1;
        char c3;
        org.apache.james.mime4j.dom.address.DomainList $r6;
        org.apache.james.mime4j.stream.RawFieldParser $r7;

        r0 := @this: org.apache.james.mime4j.field.address.LenientAddressParser;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.apache.james.mime4j.util.ByteSequence;

        $r3 := @parameter2: org.apache.james.mime4j.stream.ParserCursor;

        $z0 = virtualinvoke $r3.<org.apache.james.mime4j.stream.ParserCursor: boolean atEnd()>();

        if $z0 == 0 goto label1;

        $r5 = specialinvoke r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.dom.address.Mailbox createMailbox(java.lang.String,org.apache.james.mime4j.dom.address.DomainList,java.lang.String,java.lang.String)>(null, null, $r1, null);

        return $r5;

     label1:
        $i0 = virtualinvoke $r3.<org.apache.james.mime4j.stream.ParserCursor: int getPos()>();

        $b1 = interfaceinvoke $r2.<org.apache.james.mime4j.util.ByteSequence: byte byteAt(int)>($i0);

        $i2 = $b1 & 255;

        c3 = (char) $i2;

        if c3 != 60 goto label2;

        $i0 = $i0 + 1;

        virtualinvoke $r3.<org.apache.james.mime4j.stream.ParserCursor: void updatePos(int)>($i0);

        $r4 = <org.apache.james.mime4j.field.address.LenientAddressParser: java.util.BitSet CLOSING_BRACKET_ONLY>;

        $r6 = virtualinvoke r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.dom.address.DomainList parseRoute(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor,java.util.BitSet)>($r2, $r3, $r4);

        $r7 = r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.stream.RawFieldParser parser>;

        $r4 = <org.apache.james.mime4j.field.address.LenientAddressParser: java.util.BitSet AT_AND_CLOSING_BRACKET>;

        $r8 = virtualinvoke $r7.<org.apache.james.mime4j.stream.RawFieldParser: java.lang.String parseValue(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor,java.util.BitSet)>($r2, $r3, $r4);

        $z0 = virtualinvoke $r3.<org.apache.james.mime4j.stream.ParserCursor: boolean atEnd()>();

        if $z0 == 0 goto label3;

        $r5 = specialinvoke r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.dom.address.Mailbox createMailbox(java.lang.String,org.apache.james.mime4j.dom.address.DomainList,java.lang.String,java.lang.String)>($r1, $r6, $r8, null);

        return $r5;

     label2:
        $r5 = specialinvoke r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.dom.address.Mailbox createMailbox(java.lang.String,org.apache.james.mime4j.dom.address.DomainList,java.lang.String,java.lang.String)>(null, null, $r1, null);

        return $r5;

     label3:
        $i0 = virtualinvoke $r3.<org.apache.james.mime4j.stream.ParserCursor: int getPos()>();

        $b1 = interfaceinvoke $r2.<org.apache.james.mime4j.util.ByteSequence: byte byteAt(int)>($i0);

        $i2 = $b1 & 255;

        c3 = (char) $i2;

        if c3 != 64 goto label4;

        $i0 = $i0 + 1;

        virtualinvoke $r3.<org.apache.james.mime4j.stream.ParserCursor: void updatePos(int)>($i0);

        $r4 = <org.apache.james.mime4j.field.address.LenientAddressParser: java.util.BitSet CLOSING_BRACKET_ONLY>;

        $r9 = virtualinvoke r0.<org.apache.james.mime4j.field.address.LenientAddressParser: java.lang.String parseDomain(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor,java.util.BitSet)>($r2, $r3, $r4);

        $z0 = virtualinvoke $r3.<org.apache.james.mime4j.stream.ParserCursor: boolean atEnd()>();

        if $z0 == 0 goto label5;

        $r5 = specialinvoke r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.dom.address.Mailbox createMailbox(java.lang.String,org.apache.james.mime4j.dom.address.DomainList,java.lang.String,java.lang.String)>($r1, $r6, $r8, $r9);

        return $r5;

     label4:
        $r5 = specialinvoke r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.dom.address.Mailbox createMailbox(java.lang.String,org.apache.james.mime4j.dom.address.DomainList,java.lang.String,java.lang.String)>($r1, $r6, $r8, null);

        return $r5;

     label5:
        $i0 = virtualinvoke $r3.<org.apache.james.mime4j.stream.ParserCursor: int getPos()>();

        $b1 = interfaceinvoke $r2.<org.apache.james.mime4j.util.ByteSequence: byte byteAt(int)>($i0);

        $i2 = $b1 & 255;

        c3 = (char) $i2;

        if c3 != 62 goto label7;

        $i0 = $i0 + 1;

        virtualinvoke $r3.<org.apache.james.mime4j.stream.ParserCursor: void updatePos(int)>($i0);

     label6:
        $z0 = virtualinvoke $r3.<org.apache.james.mime4j.stream.ParserCursor: boolean atEnd()>();

        if $z0 != 0 goto label9;

        $i0 = virtualinvoke $r3.<org.apache.james.mime4j.stream.ParserCursor: int getPos()>();

        $b1 = interfaceinvoke $r2.<org.apache.james.mime4j.util.ByteSequence: byte byteAt(int)>($i0);

        $i0 = $b1 & 255;

        c3 = (char) $i0;

        $z0 = staticinvoke <org.apache.james.mime4j.util.CharsetUtil: boolean isWhitespace(char)>(c3);

        if $z0 == 0 goto label8;

        $r7 = r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.stream.RawFieldParser parser>;

        virtualinvoke $r7.<org.apache.james.mime4j.stream.RawFieldParser: void skipWhiteSpace(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor)>($r2, $r3);

        goto label6;

     label7:
        $r5 = specialinvoke r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.dom.address.Mailbox createMailbox(java.lang.String,org.apache.james.mime4j.dom.address.DomainList,java.lang.String,java.lang.String)>($r1, $r6, $r8, $r9);

        return $r5;

     label8:
        if c3 != 40 goto label9;

        $r7 = r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.stream.RawFieldParser parser>;

        virtualinvoke $r7.<org.apache.james.mime4j.stream.RawFieldParser: void skipComment(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor)>($r2, $r3);

        goto label6;

     label9:
        $r5 = specialinvoke r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.dom.address.Mailbox createMailbox(java.lang.String,org.apache.james.mime4j.dom.address.DomainList,java.lang.String,java.lang.String)>($r1, $r6, $r8, $r9);

        return $r5;
    }
    java.util.List parseMailboxes(org.apache.james.mime4j.util.ByteSequence, org.apache.james.mime4j.stream.ParserCursor, java.util.BitSet)
    {
        org.apache.james.mime4j.field.address.LenientAddressParser r0;
        org.apache.james.mime4j.util.ByteSequence $r1;
        org.apache.james.mime4j.stream.ParserCursor $r2;
        java.util.BitSet $r3, $r6;
        char c0;
        java.util.ArrayList r4;
        int[] $r5;
        boolean $z0;
        int $i1, $i3;
        byte $b2;
        org.apache.james.mime4j.dom.address.Mailbox $r7;

        r0 := @this: org.apache.james.mime4j.field.address.LenientAddressParser;

        $r1 := @parameter0: org.apache.james.mime4j.util.ByteSequence;

        $r2 := @parameter1: org.apache.james.mime4j.stream.ParserCursor;

        $r3 := @parameter2: java.util.BitSet;

        $r5 = newarray (int)[1];

        $r5[0] = 44;

        $r6 = staticinvoke <org.apache.james.mime4j.stream.RawFieldParser: java.util.BitSet INIT_BITSET(int[])>($r5);

        if $r3 == null goto label1;

        virtualinvoke $r6.<java.util.BitSet: void or(java.util.BitSet)>($r3);

     label1:
        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

     label2:
        $z0 = virtualinvoke $r2.<org.apache.james.mime4j.stream.ParserCursor: boolean atEnd()>();

        if $z0 != 0 goto label5;

        $i1 = virtualinvoke $r2.<org.apache.james.mime4j.stream.ParserCursor: int getPos()>();

        $b2 = interfaceinvoke $r1.<org.apache.james.mime4j.util.ByteSequence: byte byteAt(int)>($i1);

        $i3 = $b2 & 255;

        c0 = (char) $i3;

        if $r3 == null goto label3;

        $z0 = virtualinvoke $r3.<java.util.BitSet: boolean get(int)>(c0);

        if $z0 == 0 goto label3;

        return r4;

     label3:
        if c0 != 44 goto label4;

        $i1 = $i1 + 1;

        virtualinvoke $r2.<org.apache.james.mime4j.stream.ParserCursor: void updatePos(int)>($i1);

        goto label2;

     label4:
        $r7 = virtualinvoke r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.dom.address.Mailbox parseMailbox(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor,java.util.BitSet)>($r1, $r2, $r6);

        if $r7 == null goto label2;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label2;

     label5:
        return r4;
    }
    org.apache.james.mime4j.dom.address.DomainList parseRoute(org.apache.james.mime4j.util.ByteSequence, org.apache.james.mime4j.stream.ParserCursor, java.util.BitSet)
    {
        org.apache.james.mime4j.field.address.LenientAddressParser r0;
        org.apache.james.mime4j.util.ByteSequence $r1;
        org.apache.james.mime4j.stream.ParserCursor $r2;
        java.util.BitSet $r3, $r5;
        int[] $r4;
        java.util.ArrayList r6;
        org.apache.james.mime4j.stream.RawFieldParser $r7;
        boolean $z0;
        org.apache.james.mime4j.dom.address.DomainList $r8;
        int $i0, $i2;
        byte $b1;
        char c3;
        java.lang.String $r9;

        r0 := @this: org.apache.james.mime4j.field.address.LenientAddressParser;

        $r1 := @parameter0: org.apache.james.mime4j.util.ByteSequence;

        $r2 := @parameter1: org.apache.james.mime4j.stream.ParserCursor;

        $r3 := @parameter2: java.util.BitSet;

        $r4 = newarray (int)[2];

        $r4[0] = 44;

        $r4[1] = 58;

        $r5 = staticinvoke <org.apache.james.mime4j.stream.RawFieldParser: java.util.BitSet INIT_BITSET(int[])>($r4);

        if $r3 == null goto label1;

        virtualinvoke $r5.<java.util.BitSet: void or(java.util.BitSet)>($r3);

     label1:
        r6 = null;

     label2:
        $r7 = r0.<org.apache.james.mime4j.field.address.LenientAddressParser: org.apache.james.mime4j.stream.RawFieldParser parser>;

        virtualinvoke $r7.<org.apache.james.mime4j.stream.RawFieldParser: void skipAllWhiteSpace(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor)>($r1, $r2);

        $z0 = virtualinvoke $r2.<org.apache.james.mime4j.stream.ParserCursor: boolean atEnd()>();

        if $z0 == 0 goto label4;

     label3:
        if r6 == null goto label8;

        $r8 = new org.apache.james.mime4j.dom.address.DomainList;

        specialinvoke $r8.<org.apache.james.mime4j.dom.address.DomainList: void <init>(java.util.List)>(r6);

        return $r8;

     label4:
        $i0 = virtualinvoke $r2.<org.apache.james.mime4j.stream.ParserCursor: int getPos()>();

        $b1 = interfaceinvoke $r1.<org.apache.james.mime4j.util.ByteSequence: byte byteAt(int)>($i0);

        $i2 = $b1 & 255;

        c3 = (char) $i2;

        if c3 != 64 goto label3;

        $i0 = $i0 + 1;

        virtualinvoke $r2.<org.apache.james.mime4j.stream.ParserCursor: void updatePos(int)>($i0);

        $r9 = virtualinvoke r0.<org.apache.james.mime4j.field.address.LenientAddressParser: java.lang.String parseDomain(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor,java.util.BitSet)>($r1, $r2, $r5);

        if $r9 == null goto label6;

        $i0 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i0 <= 0 goto label6;

        if r6 != null goto label5;

        r6 = new java.util.ArrayList;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

     label5:
        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r9);

     label6:
        $z0 = virtualinvoke $r2.<org.apache.james.mime4j.stream.ParserCursor: boolean atEnd()>();

        if $z0 != 0 goto label3;

        $i0 = virtualinvoke $r2.<org.apache.james.mime4j.stream.ParserCursor: int getPos()>();

        $b1 = interfaceinvoke $r1.<org.apache.james.mime4j.util.ByteSequence: byte byteAt(int)>($i0);

        $i2 = $b1 & 255;

        c3 = (char) $i2;

        if c3 != 44 goto label7;

        $i0 = $i0 + 1;

        virtualinvoke $r2.<org.apache.james.mime4j.stream.ParserCursor: void updatePos(int)>($i0);

        goto label2;

     label7:
        if c3 != 58 goto label3;

        $i0 = $i0 + 1;

        virtualinvoke $r2.<org.apache.james.mime4j.stream.ParserCursor: void updatePos(int)>($i0);

        goto label3;

     label8:
        return null;
    }
