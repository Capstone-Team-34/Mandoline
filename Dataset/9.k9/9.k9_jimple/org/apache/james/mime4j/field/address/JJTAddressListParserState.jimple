org.apache.james.mime4j.field.address.JJTAddressListParserState extends java.lang.Object
private java.util.List marks
private int mk
private boolean node_created
private java.util.List nodes
private int sp
    public void <init>()
    {
        org.apache.james.mime4j.field.address.JJTAddressListParserState r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.james.mime4j.field.address.JJTAddressListParserState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: java.util.List nodes> = $r1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: java.util.List marks> = $r1;

        r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: int sp> = 0;

        r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: int mk> = 0;

        return;
    }
    public void clearNodeScope(org.apache.james.mime4j.field.address.Node)
    {
        org.apache.james.mime4j.field.address.JJTAddressListParserState r0;
        org.apache.james.mime4j.field.address.Node $r1;
        int $i0, $i1;
        java.util.List $r2, $r3;
        java.lang.Object $r4;
        java.lang.Integer $r5;

        r0 := @this: org.apache.james.mime4j.field.address.JJTAddressListParserState;

        $r1 := @parameter0: org.apache.james.mime4j.field.address.Node;

     label1:
        $i0 = r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: int sp>;

        $i1 = r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: int mk>;

        if $i0 <= $i1 goto label2;

        virtualinvoke r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: org.apache.james.mime4j.field.address.Node popNode()>();

        goto label1;

     label2:
        $r2 = r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: java.util.List marks>;

        $r3 = r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: java.util.List marks>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i0 = $i0 + -1;

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>($i0);

        $r5 = (java.lang.Integer) $r4;

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: int mk> = $i0;

        return;
    }
    public void closeNodeScope(org.apache.james.mime4j.field.address.Node, int)
    {
        org.apache.james.mime4j.field.address.JJTAddressListParserState r0;
        org.apache.james.mime4j.field.address.Node $r1, $r6;
        int i0, $i1;
        java.util.List $r2, $r3;
        java.lang.Object $r4;
        java.lang.Integer $r5;

        r0 := @this: org.apache.james.mime4j.field.address.JJTAddressListParserState;

        $r1 := @parameter0: org.apache.james.mime4j.field.address.Node;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: java.util.List marks>;

        $r3 = r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: java.util.List marks>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i1 = $i1 + -1;

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>($i1);

        $r5 = (java.lang.Integer) $r4;

        $i1 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: int mk> = $i1;

     label1:
        $i1 = i0 + -1;

        if i0 <= 0 goto label2;

        $r6 = virtualinvoke r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: org.apache.james.mime4j.field.address.Node popNode()>();

        interfaceinvoke $r6.<org.apache.james.mime4j.field.address.Node: void jjtSetParent(org.apache.james.mime4j.field.address.Node)>($r1);

        interfaceinvoke $r1.<org.apache.james.mime4j.field.address.Node: void jjtAddChild(org.apache.james.mime4j.field.address.Node,int)>($r6, $i1);

        i0 = $i1;

        goto label1;

     label2:
        interfaceinvoke $r1.<org.apache.james.mime4j.field.address.Node: void jjtClose()>();

        virtualinvoke r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: void pushNode(org.apache.james.mime4j.field.address.Node)>($r1);

        r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: boolean node_created> = 1;

        return;
    }
    public void closeNodeScope(org.apache.james.mime4j.field.address.Node, boolean)
    {
        org.apache.james.mime4j.field.address.JJTAddressListParserState r0;
        org.apache.james.mime4j.field.address.Node $r1, $r6;
        boolean $z0;
        int $i0, $i1;
        java.util.List $r2, $r3;
        java.lang.Object $r4;
        java.lang.Integer $r5;

        r0 := @this: org.apache.james.mime4j.field.address.JJTAddressListParserState;

        $r1 := @parameter0: org.apache.james.mime4j.field.address.Node;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: int nodeArity()>();

        $r2 = r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: java.util.List marks>;

        $r3 = r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: java.util.List marks>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i1 = $i1 + -1;

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>($i1);

        $r5 = (java.lang.Integer) $r4;

        $i1 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: int mk> = $i1;

     label1:
        $i1 = $i0 + -1;

        if $i0 <= 0 goto label2;

        $r6 = virtualinvoke r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: org.apache.james.mime4j.field.address.Node popNode()>();

        interfaceinvoke $r6.<org.apache.james.mime4j.field.address.Node: void jjtSetParent(org.apache.james.mime4j.field.address.Node)>($r1);

        interfaceinvoke $r1.<org.apache.james.mime4j.field.address.Node: void jjtAddChild(org.apache.james.mime4j.field.address.Node,int)>($r6, $i1);

        $i0 = $i1;

        goto label1;

     label2:
        interfaceinvoke $r1.<org.apache.james.mime4j.field.address.Node: void jjtClose()>();

        virtualinvoke r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: void pushNode(org.apache.james.mime4j.field.address.Node)>($r1);

        r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: boolean node_created> = 1;

        return;

     label3:
        $r2 = r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: java.util.List marks>;

        $r3 = r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: java.util.List marks>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i0 = $i0 + -1;

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>($i0);

        $r5 = (java.lang.Integer) $r4;

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: int mk> = $i0;

        r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: boolean node_created> = 0;

        return;
    }
    public int nodeArity()
    {
        org.apache.james.mime4j.field.address.JJTAddressListParserState r0;
        int $i0, $i1;

        r0 := @this: org.apache.james.mime4j.field.address.JJTAddressListParserState;

        $i1 = r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: int sp>;

        $i0 = r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: int mk>;

        $i0 = $i1 - $i0;

        return $i0;
    }
    public boolean nodeCreated()
    {
        org.apache.james.mime4j.field.address.JJTAddressListParserState r0;
        boolean z0;

        r0 := @this: org.apache.james.mime4j.field.address.JJTAddressListParserState;

        z0 = r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: boolean node_created>;

        return z0;
    }
    public void openNodeScope(org.apache.james.mime4j.field.address.Node)
    {
        org.apache.james.mime4j.field.address.JJTAddressListParserState r0;
        org.apache.james.mime4j.field.address.Node $r1;
        java.lang.Integer $r2;
        java.util.List $r3;
        int $i0;

        r0 := @this: org.apache.james.mime4j.field.address.JJTAddressListParserState;

        $r1 := @parameter0: org.apache.james.mime4j.field.address.Node;

        $r3 = r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: java.util.List marks>;

        $i0 = r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: int mk>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        $i0 = r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: int sp>;

        r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: int mk> = $i0;

        interfaceinvoke $r1.<org.apache.james.mime4j.field.address.Node: void jjtOpen()>();

        return;
    }
    public org.apache.james.mime4j.field.address.Node peekNode()
    {
        org.apache.james.mime4j.field.address.JJTAddressListParserState r0;
        java.util.List $r1, $r2;
        int $i0;
        java.lang.Object $r3;
        org.apache.james.mime4j.field.address.Node $r4;

        r0 := @this: org.apache.james.mime4j.field.address.JJTAddressListParserState;

        $r1 = r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: java.util.List nodes>;

        $r2 = r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: java.util.List nodes>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i0 = $i0 + -1;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (org.apache.james.mime4j.field.address.Node) $r3;

        return $r4;
    }
    public org.apache.james.mime4j.field.address.Node popNode()
    {
        org.apache.james.mime4j.field.address.JJTAddressListParserState r0;
        int $i0, $i1;
        java.util.List $r1, $r2;
        java.lang.Object $r3;
        java.lang.Integer $r4;
        org.apache.james.mime4j.field.address.Node $r5;

        r0 := @this: org.apache.james.mime4j.field.address.JJTAddressListParserState;

        $i0 = r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: int sp>;

        $i0 = $i0 + -1;

        r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: int sp> = $i0;

        $i1 = r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: int mk>;

        if $i0 >= $i1 goto label1;

        $r1 = r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: java.util.List marks>;

        $r2 = r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: java.util.List marks>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i0 = $i0 + -1;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>($i0);

        $r4 = (java.lang.Integer) $r3;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: int mk> = $i0;

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: java.util.List nodes>;

        $r2 = r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: java.util.List nodes>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i0 = $i0 + -1;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>($i0);

        $r5 = (org.apache.james.mime4j.field.address.Node) $r3;

        return $r5;
    }
    public void pushNode(org.apache.james.mime4j.field.address.Node)
    {
        org.apache.james.mime4j.field.address.JJTAddressListParserState r0;
        org.apache.james.mime4j.field.address.Node $r1;
        java.util.List $r2;
        int $i0;

        r0 := @this: org.apache.james.mime4j.field.address.JJTAddressListParserState;

        $r1 := @parameter0: org.apache.james.mime4j.field.address.Node;

        $r2 = r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: java.util.List nodes>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        $i0 = r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: int sp>;

        $i0 = $i0 + 1;

        r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: int sp> = $i0;

        return;
    }
    public void reset()
    {
        org.apache.james.mime4j.field.address.JJTAddressListParserState r0;
        java.util.List $r1;

        r0 := @this: org.apache.james.mime4j.field.address.JJTAddressListParserState;

        $r1 = r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: java.util.List nodes>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r1 = r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: java.util.List marks>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: int sp> = 0;

        r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: int mk> = 0;

        return;
    }
    public org.apache.james.mime4j.field.address.Node rootNode()
    {
        org.apache.james.mime4j.field.address.JJTAddressListParserState r0;
        java.lang.Object $r1;
        java.util.List $r2;
        org.apache.james.mime4j.field.address.Node $r3;

        r0 := @this: org.apache.james.mime4j.field.address.JJTAddressListParserState;

        $r2 = r0.<org.apache.james.mime4j.field.address.JJTAddressListParserState: java.util.List nodes>;

        $r1 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (org.apache.james.mime4j.field.address.Node) $r1;

        return $r3;
    }
