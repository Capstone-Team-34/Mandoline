org.apache.james.mime4j.message.BasicBodyFactory$BinaryBody1 extends org.apache.james.mime4j.dom.BinaryBody
private final byte[] content
    void <init>(byte[])
    {
        org.apache.james.mime4j.message.BasicBodyFactory$BinaryBody1 r0;
        byte[] $r1;

        r0 := @this: org.apache.james.mime4j.message.BasicBodyFactory$BinaryBody1;

        $r1 := @parameter0: byte[];

        specialinvoke r0.<org.apache.james.mime4j.dom.BinaryBody: void <init>()>();

        r0.<org.apache.james.mime4j.message.BasicBodyFactory$BinaryBody1: byte[] content> = $r1;

        return;
    }
    public org.apache.james.mime4j.dom.SingleBody copy()
    {
        org.apache.james.mime4j.message.BasicBodyFactory$BinaryBody1 r0, $r1;
        byte[] $r2;

        r0 := @this: org.apache.james.mime4j.message.BasicBodyFactory$BinaryBody1;

        $r1 = new org.apache.james.mime4j.message.BasicBodyFactory$BinaryBody1;

        $r2 = r0.<org.apache.james.mime4j.message.BasicBodyFactory$BinaryBody1: byte[] content>;

        specialinvoke $r1.<org.apache.james.mime4j.message.BasicBodyFactory$BinaryBody1: void <init>(byte[])>($r2);

        return $r1;
    }
    public void dispose()
    {
        org.apache.james.mime4j.message.BasicBodyFactory$BinaryBody1 r0;

        r0 := @this: org.apache.james.mime4j.message.BasicBodyFactory$BinaryBody1;

        return;
    }
    public java.io.InputStream getInputStream() throws java.io.IOException
    {
        org.apache.james.mime4j.message.BasicBodyFactory$BinaryBody1 r0;
        java.io.InputStream $r1;
        byte[] $r2;

        r0 := @this: org.apache.james.mime4j.message.BasicBodyFactory$BinaryBody1;

        $r2 = r0.<org.apache.james.mime4j.message.BasicBodyFactory$BinaryBody1: byte[] content>;

        $r1 = staticinvoke <org.apache.james.mime4j.io.InputStreams: java.io.InputStream create(byte[])>($r2);

        return $r1;
    }
