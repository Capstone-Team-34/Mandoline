org.apache.james.mime4j.message.AbstractHeader extends java.lang.Object implements org.apache.james.mime4j.dom.Header
private final java.util.Map fieldMap
private final java.util.List fields
    public void <init>()
    {
        org.apache.james.mime4j.message.AbstractHeader r0;
        java.util.LinkedList $r1;
        java.util.HashMap $r2;

        r0 := @this: org.apache.james.mime4j.message.AbstractHeader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.james.mime4j.message.AbstractHeader: java.util.List fields> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.james.mime4j.message.AbstractHeader: java.util.Map fieldMap> = $r2;

        return;
    }
    public void <init>(org.apache.james.mime4j.dom.Header)
    {
        org.apache.james.mime4j.message.AbstractHeader r0;
        org.apache.james.mime4j.dom.Header $r1;
        java.util.LinkedList $r2;
        java.util.HashMap $r3;
        java.util.List $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        org.apache.james.mime4j.stream.Field r7;

        r0 := @this: org.apache.james.mime4j.message.AbstractHeader;

        $r1 := @parameter0: org.apache.james.mime4j.dom.Header;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.james.mime4j.message.AbstractHeader: java.util.List fields> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.james.mime4j.message.AbstractHeader: java.util.Map fieldMap> = $r3;

        $r4 = interfaceinvoke $r1.<org.apache.james.mime4j.dom.Header: java.util.List getFields()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.james.mime4j.stream.Field) $r6;

        virtualinvoke r0.<org.apache.james.mime4j.message.AbstractHeader: void addField(org.apache.james.mime4j.stream.Field)>(r7);

        goto label1;

     label2:
        return;
    }
    public void addField(org.apache.james.mime4j.stream.Field)
    {
        org.apache.james.mime4j.message.AbstractHeader r0;
        org.apache.james.mime4j.stream.Field $r1;
        java.util.Map $r2;
        java.lang.String $r3;
        java.util.Locale $r4;
        java.lang.Object $r5;
        java.util.List r6;
        java.util.LinkedList $r7;

        r0 := @this: org.apache.james.mime4j.message.AbstractHeader;

        $r1 := @parameter0: org.apache.james.mime4j.stream.Field;

        $r2 = r0.<org.apache.james.mime4j.message.AbstractHeader: java.util.Map fieldMap>;

        $r3 = interfaceinvoke $r1.<org.apache.james.mime4j.stream.Field: java.lang.String getName()>();

        $r4 = <java.util.Locale: java.util.Locale US>;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r4);

        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r6 = (java.util.List) $r5;

        if r6 != null goto label1;

        $r7 = new java.util.LinkedList;

        r6 = $r7;

        specialinvoke $r7.<java.util.LinkedList: void <init>()>();

        $r2 = r0.<org.apache.james.mime4j.message.AbstractHeader: java.util.Map fieldMap>;

        $r3 = interfaceinvoke $r1.<org.apache.james.mime4j.stream.Field: java.lang.String getName()>();

        $r4 = <java.util.Locale: java.util.Locale US>;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r4);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r7);

     label1:
        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r1);

        r6 = r0.<org.apache.james.mime4j.message.AbstractHeader: java.util.List fields>;

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }
    public org.apache.james.mime4j.stream.Field getField(java.lang.String)
    {
        org.apache.james.mime4j.message.AbstractHeader r0;
        java.lang.String $r1;
        java.util.Map $r2;
        java.util.Locale $r3;
        java.lang.Object $r4;
        java.util.List r5;
        boolean $z0;
        org.apache.james.mime4j.stream.Field $r6;

        r0 := @this: org.apache.james.mime4j.message.AbstractHeader;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.james.mime4j.message.AbstractHeader: java.util.Map fieldMap>;

        $r3 = <java.util.Locale: java.util.Locale US>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r3);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r5 = (java.util.List) $r4;

        if r5 == null goto label1;

        $z0 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r4 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (org.apache.james.mime4j.stream.Field) $r4;

        return $r6;

     label1:
        return null;
    }
    public org.apache.james.mime4j.stream.Field getField(java.lang.String, java.lang.Class)
    {
        org.apache.james.mime4j.message.AbstractHeader r0;
        java.lang.String $r1;
        java.lang.Class r2;
        java.util.Map $r3;
        java.util.Locale $r4;
        java.lang.Object $r5;
        java.util.List r6;
        int i0, $i1;
        org.apache.james.mime4j.stream.Field r7;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.message.AbstractHeader;

        $r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        $r3 = r0.<org.apache.james.mime4j.message.AbstractHeader: java.util.Map fieldMap>;

        $r4 = <java.util.Locale: java.util.Locale US>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r4);

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r6 = (java.util.List) $r5;

        i0 = 0;

     label1:
        $i1 = interfaceinvoke r6.<java.util.List: int size()>();

        if i0 >= $i1 goto label3;

        $r5 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i0);

        r7 = (org.apache.james.mime4j.stream.Field) $r5;

        $z0 = virtualinvoke r2.<java.lang.Class: boolean isInstance(java.lang.Object)>(r7);

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r2.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r7);

        r7 = (org.apache.james.mime4j.stream.Field) $r5;

        return r7;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return null;
    }
    public java.util.List getFields()
    {
        org.apache.james.mime4j.message.AbstractHeader r0;
        java.util.List $r1;

        r0 := @this: org.apache.james.mime4j.message.AbstractHeader;

        $r1 = r0.<org.apache.james.mime4j.message.AbstractHeader: java.util.List fields>;

        $r1 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r1;
    }
    public java.util.List getFields(java.lang.String)
    {
        org.apache.james.mime4j.message.AbstractHeader r0;
        java.lang.String $r1;
        java.util.Locale $r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.util.List r5;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.message.AbstractHeader;

        $r1 := @parameter0: java.lang.String;

        $r2 = <java.util.Locale: java.util.Locale US>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        $r3 = r0.<org.apache.james.mime4j.message.AbstractHeader: java.util.Map fieldMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r5 = (java.util.List) $r4;

        if r5 == null goto label1;

        $z0 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return r5;

     label2:
        r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r5);

        return r5;
    }
    public java.util.List getFields(java.lang.String, java.lang.Class)
    {
        org.apache.james.mime4j.message.AbstractHeader r0;
        java.lang.String $r1;
        java.lang.Class r2;
        java.util.Locale $r3;
        java.util.Map $r4;
        java.lang.Object $r5;
        java.util.List r6;
        java.util.ArrayList r7;
        int i0, $i1;
        org.apache.james.mime4j.stream.Field r8;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.message.AbstractHeader;

        $r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        $r3 = <java.util.Locale: java.util.Locale US>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r3);

        $r4 = r0.<org.apache.james.mime4j.message.AbstractHeader: java.util.Map fieldMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r6 = (java.util.List) $r5;

        if r6 != null goto label1;

        r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return r6;

     label1:
        r7 = new java.util.ArrayList;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        i0 = 0;

     label2:
        $i1 = interfaceinvoke r6.<java.util.List: int size()>();

        if i0 >= $i1 goto label4;

        $r5 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i0);

        r8 = (org.apache.james.mime4j.stream.Field) $r5;

        $z0 = virtualinvoke r2.<java.lang.Class: boolean isInstance(java.lang.Object)>(r8);

        if $z0 == 0 goto label3;

        $r5 = virtualinvoke r2.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r8);

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r5);

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        return r7;
    }
    public java.util.Iterator iterator()
    {
        org.apache.james.mime4j.message.AbstractHeader r0;
        java.util.List $r1;
        java.util.Iterator $r2;

        r0 := @this: org.apache.james.mime4j.message.AbstractHeader;

        $r1 = r0.<org.apache.james.mime4j.message.AbstractHeader: java.util.List fields>;

        $r1 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }
    public int removeFields(java.lang.String)
    {
        org.apache.james.mime4j.message.AbstractHeader r0;
        java.lang.String $r1, $r3;
        java.util.Locale $r2;
        java.util.Map $r4;
        java.lang.Object $r5;
        java.util.List r6, $r7;
        boolean $z0;
        java.util.Iterator $r8;
        org.apache.james.mime4j.stream.Field r9;
        int $i0;

        r0 := @this: org.apache.james.mime4j.message.AbstractHeader;

        $r1 := @parameter0: java.lang.String;

        $r2 = <java.util.Locale: java.util.Locale US>;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        $r4 = r0.<org.apache.james.mime4j.message.AbstractHeader: java.util.Map fieldMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r3);

        r6 = (java.util.List) $r5;

        if r6 == null goto label1;

        $z0 = interfaceinvoke r6.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        return 0;

     label2:
        $r7 = r0.<org.apache.james.mime4j.message.AbstractHeader: java.util.List fields>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.apache.james.mime4j.stream.Field) $r5;

        $r3 = interfaceinvoke r9.<org.apache.james.mime4j.stream.Field: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label3;

        interfaceinvoke $r8.<java.util.Iterator: void remove()>();

        goto label3;

     label4:
        $i0 = interfaceinvoke r6.<java.util.List: int size()>();

        return $i0;
    }
    public void setField(org.apache.james.mime4j.stream.Field)
    {
        org.apache.james.mime4j.message.AbstractHeader r0;
        org.apache.james.mime4j.stream.Field $r1, r8;
        java.lang.String $r2, $r9;
        java.util.Locale $r3;
        java.util.Map $r4;
        java.lang.Object $r5;
        java.util.List r6;
        boolean $z0;
        int i0, i1;
        java.util.Iterator $r7;

        r0 := @this: org.apache.james.mime4j.message.AbstractHeader;

        $r1 := @parameter0: org.apache.james.mime4j.stream.Field;

        $r2 = interfaceinvoke $r1.<org.apache.james.mime4j.stream.Field: java.lang.String getName()>();

        $r3 = <java.util.Locale: java.util.Locale US>;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r3);

        $r4 = r0.<org.apache.james.mime4j.message.AbstractHeader: java.util.Map fieldMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r6 = (java.util.List) $r5;

        if r6 == null goto label1;

        $z0 = interfaceinvoke r6.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        virtualinvoke r0.<org.apache.james.mime4j.message.AbstractHeader: void addField(org.apache.james.mime4j.stream.Field)>($r1);

        return;

     label2:
        interfaceinvoke r6.<java.util.List: void clear()>();

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r1);

        i0 = -1;

        i1 = 0;

        r6 = r0.<org.apache.james.mime4j.message.AbstractHeader: java.util.List fields>;

        $r7 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.james.mime4j.stream.Field) $r5;

        $r2 = interfaceinvoke r8.<org.apache.james.mime4j.stream.Field: java.lang.String getName()>();

        $r9 = interfaceinvoke $r1.<org.apache.james.mime4j.stream.Field: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r9);

        if $z0 == 0 goto label4;

        interfaceinvoke $r7.<java.util.Iterator: void remove()>();

        if i0 != -1 goto label4;

        i0 = i1;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        r6 = r0.<org.apache.james.mime4j.message.AbstractHeader: java.util.List fields>;

        interfaceinvoke r6.<java.util.List: void add(int,java.lang.Object)>(i0, $r1);

        return;
    }
    public java.lang.String toString()
    {
        org.apache.james.mime4j.message.AbstractHeader r0;
        java.lang.StringBuilder r1;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.apache.james.mime4j.stream.Field r5;
        java.lang.String $r6;

        r0 := @this: org.apache.james.mime4j.message.AbstractHeader;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>(int)>(128);

        $r2 = r0.<org.apache.james.mime4j.message.AbstractHeader: java.util.List fields>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.james.mime4j.stream.Field) $r4;

        $r6 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        goto label1;

     label2:
        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
