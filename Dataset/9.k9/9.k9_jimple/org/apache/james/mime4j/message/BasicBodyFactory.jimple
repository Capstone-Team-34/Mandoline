org.apache.james.mime4j.message.BasicBodyFactory extends java.lang.Object implements org.apache.james.mime4j.message.BodyFactory
public static final org.apache.james.mime4j.message.BasicBodyFactory INSTANCE
private final java.nio.charset.Charset defaultCharset
    static void <clinit>()
    {
        org.apache.james.mime4j.message.BasicBodyFactory $r0;

        $r0 = new org.apache.james.mime4j.message.BasicBodyFactory;

        specialinvoke $r0.<org.apache.james.mime4j.message.BasicBodyFactory: void <init>()>();

        <org.apache.james.mime4j.message.BasicBodyFactory: org.apache.james.mime4j.message.BasicBodyFactory INSTANCE> = $r0;

        return;
    }
    public void <init>()
    {
        org.apache.james.mime4j.message.BasicBodyFactory r0;

        r0 := @this: org.apache.james.mime4j.message.BasicBodyFactory;

        specialinvoke r0.<org.apache.james.mime4j.message.BasicBodyFactory: void <init>(boolean)>(1);

        return;
    }
    public void <init>(java.nio.charset.Charset)
    {
        org.apache.james.mime4j.message.BasicBodyFactory r0;
        java.nio.charset.Charset $r1;

        r0 := @this: org.apache.james.mime4j.message.BasicBodyFactory;

        $r1 := @parameter0: java.nio.charset.Charset;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.james.mime4j.message.BasicBodyFactory: java.nio.charset.Charset defaultCharset> = $r1;

        return;
    }
    public void <init>(boolean)
    {
        org.apache.james.mime4j.message.BasicBodyFactory r0;
        boolean $z0;
        java.nio.charset.Charset $r1;

        r0 := @this: org.apache.james.mime4j.message.BasicBodyFactory;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label2;

        $r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();

     label1:
        specialinvoke r0.<org.apache.james.mime4j.message.BasicBodyFactory: void <init>(java.nio.charset.Charset)>($r1);

        return;

     label2:
        $r1 = null;

        goto label1;
    }
    public org.apache.james.mime4j.dom.BinaryBody binaryBody(java.io.InputStream) throws java.io.IOException
    {
        org.apache.james.mime4j.message.BasicBodyFactory r0;
        java.io.InputStream $r1;
        org.apache.james.mime4j.message.BasicBodyFactory$BinaryBody1 $r2;
        byte[] $r3;

        r0 := @this: org.apache.james.mime4j.message.BasicBodyFactory;

        $r1 := @parameter0: java.io.InputStream;

        $r2 = new org.apache.james.mime4j.message.BasicBodyFactory$BinaryBody1;

        $r3 = staticinvoke <org.apache.james.mime4j.util.ContentUtil: byte[] buffer(java.io.InputStream)>($r1);

        specialinvoke $r2.<org.apache.james.mime4j.message.BasicBodyFactory$BinaryBody1: void <init>(byte[])>($r3);

        return $r2;
    }
    public org.apache.james.mime4j.dom.BinaryBody binaryBody(java.lang.String, java.nio.charset.Charset)
    {
        org.apache.james.mime4j.message.BasicBodyFactory r0;
        java.lang.String $r1;
        java.nio.charset.Charset $r2;
        java.lang.IllegalArgumentException $r3;
        org.apache.james.mime4j.message.BasicBodyFactory$BinaryBody2 $r4;

        r0 := @this: org.apache.james.mime4j.message.BasicBodyFactory;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.nio.charset.Charset;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Content may not be null");

        throw $r3;

     label1:
        $r4 = new org.apache.james.mime4j.message.BasicBodyFactory$BinaryBody2;

        specialinvoke $r4.<org.apache.james.mime4j.message.BasicBodyFactory$BinaryBody2: void <init>(java.lang.String,java.nio.charset.Charset)>($r1, $r2);

        return $r4;
    }
    public org.apache.james.mime4j.dom.BinaryBody binaryBody(byte[])
    {
        org.apache.james.mime4j.message.BasicBodyFactory r0;
        byte[] $r1;
        org.apache.james.mime4j.message.BasicBodyFactory$BinaryBody1 $r2;

        r0 := @this: org.apache.james.mime4j.message.BasicBodyFactory;

        $r1 := @parameter0: byte[];

        $r2 = new org.apache.james.mime4j.message.BasicBodyFactory$BinaryBody1;

        specialinvoke $r2.<org.apache.james.mime4j.message.BasicBodyFactory$BinaryBody1: void <init>(byte[])>($r1);

        return $r2;
    }
    public java.nio.charset.Charset getDefaultCharset()
    {
        org.apache.james.mime4j.message.BasicBodyFactory r0;
        java.nio.charset.Charset r1;

        r0 := @this: org.apache.james.mime4j.message.BasicBodyFactory;

        r1 = r0.<org.apache.james.mime4j.message.BasicBodyFactory: java.nio.charset.Charset defaultCharset>;

        return r1;
    }
    protected java.nio.charset.Charset resolveCharset(java.lang.String) throws java.io.UnsupportedEncodingException
    {
        org.apache.james.mime4j.message.BasicBodyFactory r0;
        java.lang.String $r1;
        java.nio.charset.Charset $r2;
        java.nio.charset.UnsupportedCharsetException r3;
        java.io.UnsupportedEncodingException $r4;
        java.nio.charset.IllegalCharsetNameException r5;

        r0 := @this: org.apache.james.mime4j.message.BasicBodyFactory;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label5;

     label1:
        $r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r1);

     label2:
        return $r2;

     label3:
        r3 := @caughtexception;

        $r2 = r0.<org.apache.james.mime4j.message.BasicBodyFactory: java.nio.charset.Charset defaultCharset>;

        if $r2 != null goto label5;

        $r4 = new java.io.UnsupportedEncodingException;

        specialinvoke $r4.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>($r1);

        throw $r4;

     label4:
        r5 := @caughtexception;

        $r2 = r0.<org.apache.james.mime4j.message.BasicBodyFactory: java.nio.charset.Charset defaultCharset>;

        if $r2 != null goto label5;

        $r4 = new java.io.UnsupportedEncodingException;

        specialinvoke $r4.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>($r1);

        throw $r4;

     label5:
        $r2 = r0.<org.apache.james.mime4j.message.BasicBodyFactory: java.nio.charset.Charset defaultCharset>;

        return $r2;

        catch java.nio.charset.UnsupportedCharsetException from label1 to label2 with label3;
        catch java.nio.charset.IllegalCharsetNameException from label1 to label2 with label4;
    }
    public org.apache.james.mime4j.dom.TextBody textBody(java.io.InputStream, java.lang.String) throws java.io.IOException
    {
        org.apache.james.mime4j.message.BasicBodyFactory r0;
        java.io.InputStream $r1;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r3;
        org.apache.james.mime4j.message.BasicBodyFactory$StringBody2 $r4;
        byte[] $r5;
        java.nio.charset.Charset $r6;

        r0 := @this: org.apache.james.mime4j.message.BasicBodyFactory;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Input stream may not be null");

        throw $r3;

     label1:
        $r4 = new org.apache.james.mime4j.message.BasicBodyFactory$StringBody2;

        $r5 = staticinvoke <org.apache.james.mime4j.util.ContentUtil: byte[] buffer(java.io.InputStream)>($r1);

        $r6 = virtualinvoke r0.<org.apache.james.mime4j.message.BasicBodyFactory: java.nio.charset.Charset resolveCharset(java.lang.String)>($r2);

        specialinvoke $r4.<org.apache.james.mime4j.message.BasicBodyFactory$StringBody2: void <init>(byte[],java.nio.charset.Charset)>($r5, $r6);

        return $r4;
    }
    public org.apache.james.mime4j.dom.TextBody textBody(java.lang.String)
    {
        org.apache.james.mime4j.message.BasicBodyFactory r0;
        java.lang.String $r1;
        org.apache.james.mime4j.dom.TextBody $r2;
        java.nio.charset.Charset $r3;

        r0 := @this: org.apache.james.mime4j.message.BasicBodyFactory;

        $r1 := @parameter0: java.lang.String;

        $r3 = <org.apache.james.mime4j.Charsets: java.nio.charset.Charset DEFAULT_CHARSET>;

        $r2 = virtualinvoke r0.<org.apache.james.mime4j.message.BasicBodyFactory: org.apache.james.mime4j.dom.TextBody textBody(java.lang.String,java.nio.charset.Charset)>($r1, $r3);

        return $r2;
    }
    public org.apache.james.mime4j.dom.TextBody textBody(java.lang.String, java.lang.String) throws java.io.UnsupportedEncodingException
    {
        org.apache.james.mime4j.message.BasicBodyFactory r0;
        java.lang.String $r1, $r2;
        java.nio.charset.Charset $r3;
        java.lang.IllegalArgumentException $r4;
        org.apache.james.mime4j.message.BasicBodyFactory$StringBody1 $r5;

        r0 := @this: org.apache.james.mime4j.message.BasicBodyFactory;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Text may not be null");

        throw $r4;

     label1:
        $r5 = new org.apache.james.mime4j.message.BasicBodyFactory$StringBody1;

        $r3 = virtualinvoke r0.<org.apache.james.mime4j.message.BasicBodyFactory: java.nio.charset.Charset resolveCharset(java.lang.String)>($r2);

        specialinvoke $r5.<org.apache.james.mime4j.message.BasicBodyFactory$StringBody1: void <init>(java.lang.String,java.nio.charset.Charset)>($r1, $r3);

        return $r5;
    }
    public org.apache.james.mime4j.dom.TextBody textBody(java.lang.String, java.nio.charset.Charset)
    {
        org.apache.james.mime4j.message.BasicBodyFactory r0;
        java.lang.String $r1;
        java.nio.charset.Charset $r2;
        java.lang.IllegalArgumentException $r3;
        org.apache.james.mime4j.message.BasicBodyFactory$StringBody1 $r4;

        r0 := @this: org.apache.james.mime4j.message.BasicBodyFactory;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.nio.charset.Charset;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Text may not be null");

        throw $r3;

     label1:
        $r4 = new org.apache.james.mime4j.message.BasicBodyFactory$StringBody1;

        specialinvoke $r4.<org.apache.james.mime4j.message.BasicBodyFactory$StringBody1: void <init>(java.lang.String,java.nio.charset.Charset)>($r1, $r2);

        return $r4;
    }
    public org.apache.james.mime4j.dom.TextBody textBody(byte[], java.nio.charset.Charset)
    {
        org.apache.james.mime4j.message.BasicBodyFactory r0;
        byte[] $r1;
        java.nio.charset.Charset $r2;
        java.lang.IllegalArgumentException $r3;
        org.apache.james.mime4j.message.BasicBodyFactory$StringBody2 $r4;

        r0 := @this: org.apache.james.mime4j.message.BasicBodyFactory;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: java.nio.charset.Charset;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Content may not be null");

        throw $r3;

     label1:
        $r4 = new org.apache.james.mime4j.message.BasicBodyFactory$StringBody2;

        specialinvoke $r4.<org.apache.james.mime4j.message.BasicBodyFactory$StringBody2: void <init>(byte[],java.nio.charset.Charset)>($r1, $r2);

        return $r4;
    }
