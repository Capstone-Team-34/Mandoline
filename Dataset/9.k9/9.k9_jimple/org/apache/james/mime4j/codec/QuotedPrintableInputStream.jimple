org.apache.james.mime4j.codec.QuotedPrintableInputStream extends java.io.InputStream
private static final byte CR
private static final int DEFAULT_BUFFER_SIZE
private static final byte EQ
private static final byte LF
private final org.apache.james.mime4j.util.ByteArrayBuffer blanks
private boolean closed
private final org.apache.james.mime4j.util.ByteArrayBuffer decodedBuf
private final byte[] encoded
private final java.io.InputStream in
private boolean lastWasCR
private int limit
private final org.apache.james.mime4j.codec.DecodeMonitor monitor
private int pos
private final byte[] singleByte
    protected void <init>(int, java.io.InputStream, org.apache.james.mime4j.codec.DecodeMonitor)
    {
        org.apache.james.mime4j.codec.QuotedPrintableInputStream r0;
        int $i0;
        java.io.InputStream $r1;
        org.apache.james.mime4j.codec.DecodeMonitor $r2;
        byte[] $r3;
        org.apache.james.mime4j.util.ByteArrayBuffer $r4;

        r0 := @this: org.apache.james.mime4j.codec.QuotedPrintableInputStream;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.io.InputStream;

        $r2 := @parameter2: org.apache.james.mime4j.codec.DecodeMonitor;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        $r3 = newarray (byte)[1];

        r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: byte[] singleByte> = $r3;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int pos> = 0;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int limit> = 0;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: boolean lastWasCR> = 0;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: java.io.InputStream in> = $r1;

        $r3 = newarray (byte)[$i0];

        r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: byte[] encoded> = $r3;

        $r4 = new org.apache.james.mime4j.util.ByteArrayBuffer;

        specialinvoke $r4.<org.apache.james.mime4j.util.ByteArrayBuffer: void <init>(int)>(512);

        r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.util.ByteArrayBuffer decodedBuf> = $r4;

        $r4 = new org.apache.james.mime4j.util.ByteArrayBuffer;

        specialinvoke $r4.<org.apache.james.mime4j.util.ByteArrayBuffer: void <init>(int)>(512);

        r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.util.ByteArrayBuffer blanks> = $r4;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: boolean closed> = 0;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.codec.DecodeMonitor monitor> = $r2;

        return;
    }
    protected void <init>(int, java.io.InputStream, boolean)
    {
        org.apache.james.mime4j.codec.QuotedPrintableInputStream r0;
        int $i0;
        java.io.InputStream $r1;
        boolean $z0;
        org.apache.james.mime4j.codec.DecodeMonitor $r2;

        r0 := @this: org.apache.james.mime4j.codec.QuotedPrintableInputStream;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.io.InputStream;

        $z0 := @parameter2: boolean;

        if $z0 == 0 goto label2;

        $r2 = <org.apache.james.mime4j.codec.DecodeMonitor: org.apache.james.mime4j.codec.DecodeMonitor STRICT>;

     label1:
        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: void <init>(int,java.io.InputStream,org.apache.james.mime4j.codec.DecodeMonitor)>($i0, $r1, $r2);

        return;

     label2:
        $r2 = <org.apache.james.mime4j.codec.DecodeMonitor: org.apache.james.mime4j.codec.DecodeMonitor SILENT>;

        goto label1;
    }
    public void <init>(java.io.InputStream)
    {
        org.apache.james.mime4j.codec.QuotedPrintableInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.james.mime4j.codec.QuotedPrintableInputStream;

        $r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: void <init>(java.io.InputStream,boolean)>($r1, 0);

        return;
    }
    public void <init>(java.io.InputStream, org.apache.james.mime4j.codec.DecodeMonitor)
    {
        org.apache.james.mime4j.codec.QuotedPrintableInputStream r0;
        java.io.InputStream $r1;
        org.apache.james.mime4j.codec.DecodeMonitor $r2;

        r0 := @this: org.apache.james.mime4j.codec.QuotedPrintableInputStream;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: org.apache.james.mime4j.codec.DecodeMonitor;

        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: void <init>(int,java.io.InputStream,org.apache.james.mime4j.codec.DecodeMonitor)>(2048, $r1, $r2);

        return;
    }
    public void <init>(java.io.InputStream, boolean)
    {
        org.apache.james.mime4j.codec.QuotedPrintableInputStream r0;
        java.io.InputStream $r1;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.codec.QuotedPrintableInputStream;

        $r1 := @parameter0: java.io.InputStream;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: void <init>(int,java.io.InputStream,boolean)>(2048, $r1, $z0);

        return;
    }
    private int convert(int)
    {
        org.apache.james.mime4j.codec.QuotedPrintableInputStream r0;
        int $i0;

        r0 := @this: org.apache.james.mime4j.codec.QuotedPrintableInputStream;

        $i0 := @parameter0: int;

        if $i0 < 48 goto label1;

        if $i0 > 57 goto label1;

        $i0 = $i0 + -48;

        return $i0;

     label1:
        if $i0 < 65 goto label2;

        if $i0 > 70 goto label2;

        $i0 = $i0 + -65;

        $i0 = $i0 + 10;

        return $i0;

     label2:
        if $i0 < 97 goto label3;

        if $i0 > 102 goto label3;

        $i0 = $i0 + -97;

        $i0 = $i0 + 10;

        return $i0;

     label3:
        return -1;
    }
    private int fillBuffer() throws java.io.IOException
    {
        org.apache.james.mime4j.codec.QuotedPrintableInputStream r0;
        int i0, $i1, $i2;
        byte[] $r1, $r2;
        java.io.InputStream $r3;

        r0 := @this: org.apache.james.mime4j.codec.QuotedPrintableInputStream;

        i0 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int pos>;

        $i1 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int limit>;

        if i0 >= $i1 goto label2;

        $r1 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: byte[] encoded>;

        i0 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int pos>;

        $r2 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: byte[] encoded>;

        $i2 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int limit>;

        $i1 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int pos>;

        $i1 = $i2 - $i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, i0, $r2, 0, $i1);

        i0 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int limit>;

        $i1 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int pos>;

        i0 = i0 - $i1;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int limit> = i0;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int pos> = 0;

     label1:
        $r1 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: byte[] encoded>;

        i0 = lengthof $r1;

        $i1 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int limit>;

        i0 = i0 - $i1;

        if i0 <= 0 goto label3;

        $r3 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: java.io.InputStream in>;

        $r1 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: byte[] encoded>;

        $i1 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int limit>;

        i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>($r1, $i1, i0);

        if i0 <= 0 goto label4;

        $i1 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int limit>;

        $i1 = $i1 + i0;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int limit> = $i1;

        return i0;

     label2:
        r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int limit> = 0;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int pos> = 0;

        goto label1;

     label3:
        return 0;

     label4:
        return i0;
    }
    private int getnext()
    {
        org.apache.james.mime4j.codec.QuotedPrintableInputStream r0;
        byte b0;
        int $i1, $i2;
        byte[] $r1;

        r0 := @this: org.apache.james.mime4j.codec.QuotedPrintableInputStream;

        $i1 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int pos>;

        $i2 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int limit>;

        if $i1 >= $i2 goto label1;

        $r1 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: byte[] encoded>;

        $i1 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int pos>;

        b0 = $r1[$i1];

        $i1 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int pos>;

        $i1 = $i1 + 1;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int pos> = $i1;

        $i1 = b0 & 255;

        return $i1;

     label1:
        return -1;
    }
    private int peek(int)
    {
        org.apache.james.mime4j.codec.QuotedPrintableInputStream r0;
        int $i0, $i1, $i2;
        byte[] $r1;
        byte $b3;

        r0 := @this: org.apache.james.mime4j.codec.QuotedPrintableInputStream;

        $i0 := @parameter0: int;

        $i1 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int pos>;

        $i1 = $i1 + $i0;

        $i2 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int limit>;

        if $i1 >= $i2 goto label1;

        $r1 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: byte[] encoded>;

        $i1 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int pos>;

        $i0 = $i1 + $i0;

        $b3 = $r1[$i0];

        $i0 = $b3 & 255;

        return $i0;

     label1:
        return -1;
    }
    private int read0(byte[], int, int) throws java.io.IOException
    {
        org.apache.james.mime4j.codec.QuotedPrintableInputStream r0;
        byte[] $r1, $r3;
        int $i0, $i1, i2, i3, $i4, $i6, $i8;
        boolean z0, $z1;
        org.apache.james.mime4j.util.ByteArrayBuffer $r2;
        byte $b5;
        org.apache.james.mime4j.codec.DecodeMonitor $r4;
        java.io.IOException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        char $c7;

        r0 := @this: org.apache.james.mime4j.codec.QuotedPrintableInputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        z0 = 0;

        $i1 = $i0 + $i1;

        i3 = $i0;

        $r2 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.util.ByteArrayBuffer decodedBuf>;

        $i4 = virtualinvoke $r2.<org.apache.james.mime4j.util.ByteArrayBuffer: int length()>();

        if $i4 <= 0 goto label01;

        $r2 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.util.ByteArrayBuffer decodedBuf>;

        i3 = virtualinvoke $r2.<org.apache.james.mime4j.util.ByteArrayBuffer: int length()>();

        $i4 = $i1 - $i0;

        i3 = staticinvoke <java.lang.Math: int min(int,int)>(i3, $i4);

        $r2 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.util.ByteArrayBuffer decodedBuf>;

        $r3 = virtualinvoke $r2.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r1, $i0, i3);

        $r2 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.util.ByteArrayBuffer decodedBuf>;

        virtualinvoke $r2.<org.apache.james.mime4j.util.ByteArrayBuffer: void remove(int,int)>(0, i3);

        i3 = $i0 + i3;

     label01:
        if i3 >= $i1 goto label27;

        $i4 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int limit>;

        i2 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int pos>;

        $i4 = $i4 - i2;

        if $i4 >= 3 goto label02;

        $i4 = specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int fillBuffer()>();

        if $i4 != -1 goto label03;

        z0 = 1;

     label02:
        $i4 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int limit>;

        i2 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int pos>;

        $i4 = $i4 - i2;

        if $i4 != 0 goto label07;

        if z0 == 0 goto label07;

        if i3 != $i0 goto label04;

        return -1;

     label03:
        z0 = 0;

        goto label02;

     label04:
        $i0 = i3 - $i0;

        return $i0;

     label05:
        i3 = specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int transfer(int,byte[],int,int,boolean)>(13, $r1, i3, $i1, 0);

     label06:
        if i2 != 13 goto label09;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: boolean lastWasCR> = 1;

     label07:
        $i4 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int pos>;

        i2 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int limit>;

        if $i4 >= i2 goto label01;

        if i3 >= $i1 goto label01;

        $r3 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: byte[] encoded>;

        $i4 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int pos>;

        i2 = $i4 + 1;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int pos> = i2;

        $b5 = $r3[$i4];

        i2 = $b5 & 255;

        $z1 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: boolean lastWasCR>;

        if $z1 == 0 goto label08;

        if i2 == 10 goto label08;

        $r4 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.codec.DecodeMonitor monitor>;

        $z1 = virtualinvoke $r4.<org.apache.james.mime4j.codec.DecodeMonitor: boolean warn(java.lang.String,java.lang.String)>("Found CR without LF", "Leaving it as is");

        if $z1 == 0 goto label05;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("Found CR without LF");

        throw $r5;

     label08:
        $z1 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: boolean lastWasCR>;

        if $z1 != 0 goto label06;

        if i2 != 10 goto label06;

        $r4 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.codec.DecodeMonitor monitor>;

        $z1 = virtualinvoke $r4.<org.apache.james.mime4j.codec.DecodeMonitor: boolean warn(java.lang.String,java.lang.String)>("Found LF without CR", "Translating to CRLF");

        if $z1 == 0 goto label06;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("Found LF without CR");

        throw $r5;

     label09:
        r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: boolean lastWasCR> = 0;

        if i2 != 10 goto label12;

        $r2 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.util.ByteArrayBuffer blanks>;

        $i4 = virtualinvoke $r2.<org.apache.james.mime4j.util.ByteArrayBuffer: int length()>();

        if $i4 != 0 goto label11;

        i3 = specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int transfer(int,byte[],int,int,boolean)>(13, $r1, i3, $i1, 0);

        i3 = specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int transfer(int,byte[],int,int,boolean)>(10, $r1, i3, $i1, 0);

     label10:
        $r2 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.util.ByteArrayBuffer blanks>;

        virtualinvoke $r2.<org.apache.james.mime4j.util.ByteArrayBuffer: void clear()>();

        goto label07;

     label11:
        $r2 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.util.ByteArrayBuffer blanks>;

        $b5 = virtualinvoke $r2.<org.apache.james.mime4j.util.ByteArrayBuffer: byte byteAt(int)>(0);

        if $b5 == 61 goto label10;

        i3 = specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int transfer(int,byte[],int,int,boolean)>(13, $r1, i3, $i1, 0);

        i3 = specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int transfer(int,byte[],int,int,boolean)>(10, $r1, i3, $i1, 0);

        goto label10;

     label12:
        if i2 != 61 goto label25;

        $i4 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int limit>;

        $i6 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int pos>;

        $i4 = $i4 - $i6;

        if $i4 >= 2 goto label13;

        if z0 != 0 goto label13;

        $i4 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int pos>;

        $i4 = $i4 + -1;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int pos> = $i4;

        goto label01;

     label13:
        $i4 = specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int getnext()>();

        if $i4 != 61 goto label16;

        i3 = specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int transfer(int,byte[],int,int,boolean)>($i4, $r1, i3, $i1, 1);

        i2 = specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int peek(int)>(0);

        $i6 = specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int peek(int)>(1);

        if i2 == 10 goto label14;

        if i2 != 13 goto label15;

        if $i6 != 10 goto label15;

     label14:
        $r4 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.codec.DecodeMonitor monitor>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("== 0x");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" 0x");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<org.apache.james.mime4j.codec.DecodeMonitor: boolean warn(java.lang.String,java.lang.String)>("Unexpected ==EOL encountered", $r7);

        $r2 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.util.ByteArrayBuffer blanks>;

        virtualinvoke $r2.<org.apache.james.mime4j.util.ByteArrayBuffer: void append(int)>($i4);

        goto label07;

     label15:
        $r4 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.codec.DecodeMonitor monitor>;

        virtualinvoke $r4.<org.apache.james.mime4j.codec.DecodeMonitor: boolean warn(java.lang.String,java.lang.String)>("Unexpected == encountered", "==");

        goto label07;

     label16:
        $c7 = (char) $i4;

        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c7);

        if $z1 == 0 goto label22;

        $i6 = specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int peek(int)>(0);

        if $i4 != 13 goto label17;

        if $i6 == 10 goto label18;

     label17:
        $r4 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.codec.DecodeMonitor monitor>;

        $z1 = virtualinvoke $r4.<org.apache.james.mime4j.codec.DecodeMonitor: boolean warn(java.lang.String,java.lang.String)>("Found non-standard soft line break", "Translating to soft line break");

        if $z1 == 0 goto label18;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("Non-standard soft line break");

        throw $r5;

     label18:
        if $i6 != 10 goto label20;

        if $i4 != 13 goto label21;

        $z1 = 1;

     label19:
        r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: boolean lastWasCR> = $z1;

     label20:
        i3 = specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int transfer(int,byte[],int,int,boolean)>(-1, $r1, i3, $i1, 1);

        if $i4 == 10 goto label07;

        $r2 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.util.ByteArrayBuffer blanks>;

        virtualinvoke $r2.<org.apache.james.mime4j.util.ByteArrayBuffer: void append(int)>(i2);

        $r2 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.util.ByteArrayBuffer blanks>;

        virtualinvoke $r2.<org.apache.james.mime4j.util.ByteArrayBuffer: void append(int)>($i4);

        goto label07;

     label21:
        $z1 = 0;

        goto label19;

     label22:
        i2 = specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int getnext()>();

        $i8 = specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int convert(int)>($i4);

        $i6 = specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int convert(int)>(i2);

        if $i8 < 0 goto label23;

        if $i6 >= 0 goto label24;

     label23:
        $r4 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.codec.DecodeMonitor monitor>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("leaving =");

        $c7 = (char) $i4;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c7);

        $c7 = (char) i2;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as is");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<org.apache.james.mime4j.codec.DecodeMonitor: boolean warn(java.lang.String,java.lang.String)>("Malformed encoded value encountered", $r7);

        i3 = specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int transfer(int,byte[],int,int,boolean)>(61, $r1, i3, $i1, 1);

        i3 = specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int transfer(int,byte[],int,int,boolean)>($i4, $r1, i3, $i1, 0);

        i3 = specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int transfer(int,byte[],int,int,boolean)>(i2, $r1, i3, $i1, 0);

        goto label07;

     label24:
        $i4 = $i8 << 4;

        $i4 = $i4 | $i6;

        i3 = specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int transfer(int,byte[],int,int,boolean)>($i4, $r1, i3, $i1, 1);

        goto label07;

     label25:
        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(int)>(i2);

        if $z1 == 0 goto label26;

        $r2 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.util.ByteArrayBuffer blanks>;

        virtualinvoke $r2.<org.apache.james.mime4j.util.ByteArrayBuffer: void append(int)>(i2);

        goto label07;

     label26:
        $i4 = i2 & 255;

        i3 = specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int transfer(int,byte[],int,int,boolean)>($i4, $r1, i3, $i1, 1);

        goto label07;

     label27:
        $i0 = $i1 - $i0;

        return $i0;
    }
    private int transfer(int, byte[], int, int, boolean) throws java.io.IOException
    {
        org.apache.james.mime4j.codec.QuotedPrintableInputStream r0;
        int $i0, $i1, $i2, i3, $i4;
        byte[] $r1, $r4;
        boolean $z0;
        java.lang.StringBuilder r2, $r6;
        org.apache.james.mime4j.util.ByteArrayBuffer $r3, $r5;
        byte $b5;
        org.apache.james.mime4j.codec.DecodeMonitor $r7;
        java.lang.String $r8;
        java.io.IOException $r9;

        r0 := @this: org.apache.james.mime4j.codec.QuotedPrintableInputStream;

        $i0 := @parameter0: int;

        $r1 := @parameter1: byte[];

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $z0 := @parameter4: boolean;

        if $z0 == 0 goto label3;

        $r3 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.util.ByteArrayBuffer blanks>;

        $i4 = virtualinvoke $r3.<org.apache.james.mime4j.util.ByteArrayBuffer: int length()>();

        if $i4 <= 0 goto label3;

        $r3 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.util.ByteArrayBuffer blanks>;

        $i4 = virtualinvoke $r3.<org.apache.james.mime4j.util.ByteArrayBuffer: int length()>();

        i3 = $i2 - $i1;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i4, i3);

        $r3 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.util.ByteArrayBuffer blanks>;

        $r4 = virtualinvoke $r3.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r1, $i1, $i4);

        $i1 = $i1 + $i4;

        $r3 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.util.ByteArrayBuffer blanks>;

        i3 = virtualinvoke $r3.<org.apache.james.mime4j.util.ByteArrayBuffer: int length()>();

        i3 = i3 - $i4;

        if i3 <= 0 goto label1;

        $r3 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.util.ByteArrayBuffer decodedBuf>;

        $r5 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.util.ByteArrayBuffer blanks>;

        $r4 = virtualinvoke $r5.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer()>();

        virtualinvoke $r3.<org.apache.james.mime4j.util.ByteArrayBuffer: void append(byte[],int,int)>($r4, $i4, i3);

     label1:
        $r3 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.util.ByteArrayBuffer blanks>;

        virtualinvoke $r3.<org.apache.james.mime4j.util.ByteArrayBuffer: void clear()>();

     label2:
        if $i0 == -1 goto label7;

        if $i1 >= $i2 goto label6;

        $i2 = $i1 + 1;

        $b5 = (byte) $i0;

        $r1[$i1] = $b5;

        return $i2;

     label3:
        $r3 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.util.ByteArrayBuffer blanks>;

        $i4 = virtualinvoke $r3.<org.apache.james.mime4j.util.ByteArrayBuffer: int length()>();

        if $i4 <= 0 goto label8;

        if $z0 != 0 goto label8;

        r2 = new java.lang.StringBuilder;

        $r3 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.util.ByteArrayBuffer blanks>;

        $i4 = virtualinvoke $r3.<org.apache.james.mime4j.util.ByteArrayBuffer: int length()>();

        $i4 = $i4 * 3;

        specialinvoke r2.<java.lang.StringBuilder: void <init>(int)>($i4);

        $i4 = 0;

     label4:
        $r3 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.util.ByteArrayBuffer blanks>;

        i3 = virtualinvoke $r3.<org.apache.james.mime4j.util.ByteArrayBuffer: int length()>();

        if $i4 >= i3 goto label5;

        $r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r3 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.util.ByteArrayBuffer blanks>;

        $b5 = virtualinvoke $r3.<org.apache.james.mime4j.util.ByteArrayBuffer: byte byteAt(int)>($i4);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b5);

        $i4 = $i4 + 1;

        goto label4;

     label5:
        $r7 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.codec.DecodeMonitor monitor>;

        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke $r7.<org.apache.james.mime4j.codec.DecodeMonitor: boolean warn(java.lang.String,java.lang.String)>("ignored blanks", $r8);

        if $z0 == 0 goto label8;

        $r9 = new java.io.IOException;

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>("ignored blanks");

        throw $r9;

     label6:
        $r3 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: org.apache.james.mime4j.util.ByteArrayBuffer decodedBuf>;

        virtualinvoke $r3.<org.apache.james.mime4j.util.ByteArrayBuffer: void append(int)>($i0);

     label7:
        return $i1;

     label8:
        goto label2;
    }
    public void close() throws java.io.IOException
    {
        org.apache.james.mime4j.codec.QuotedPrintableInputStream r0;

        r0 := @this: org.apache.james.mime4j.codec.QuotedPrintableInputStream;

        r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: boolean closed> = 1;

        return;
    }
    public int read() throws java.io.IOException
    {
        org.apache.james.mime4j.codec.QuotedPrintableInputStream r0;
        int $i0;
        boolean $z0;
        java.io.IOException $r1;
        byte[] $r2;
        byte $b1;

        r0 := @this: org.apache.james.mime4j.codec.QuotedPrintableInputStream;

        $z0 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: boolean closed>;

        if $z0 == 0 goto label1;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Stream has been closed");

        throw $r1;

     label1:
        $r2 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: byte[] singleByte>;

        $i0 = virtualinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int read(byte[],int,int)>($r2, 0, 1);

        if $i0 != -1 goto label2;

        return -1;

     label2:
        if $i0 != 1 goto label1;

        $r2 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: byte[] singleByte>;

        $b1 = $r2[0];

        $i0 = $b1 & 255;

        return $i0;
    }
    public int read(byte[], int, int) throws java.io.IOException
    {
        org.apache.james.mime4j.codec.QuotedPrintableInputStream r0;
        byte[] $r1;
        int $i0, $i1;
        boolean $z0;
        java.io.IOException $r2;

        r0 := @this: org.apache.james.mime4j.codec.QuotedPrintableInputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: boolean closed>;

        if $z0 == 0 goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("Stream has been closed");

        throw $r2;

     label1:
        $i0 = specialinvoke r0.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int read0(byte[],int,int)>($r1, $i0, $i1);

        return $i0;
    }
