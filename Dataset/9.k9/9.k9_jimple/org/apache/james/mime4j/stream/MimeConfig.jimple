org.apache.james.mime4j.stream.MimeConfig extends java.lang.Object
public static final org.apache.james.mime4j.stream.MimeConfig DEFAULT
public static final org.apache.james.mime4j.stream.MimeConfig STRICT
private final boolean countLineNumbers
private final java.lang.String headlessParsing
private final boolean malformedHeaderStartsBody
private final long maxContentLen
private final int maxHeaderCount
private final int maxHeaderLen
private final int maxLineLen
private final boolean strictParsing
    static void <clinit>()
    {
        org.apache.james.mime4j.stream.MimeConfig$Builder $r0;
        org.apache.james.mime4j.stream.MimeConfig $r1;

        $r0 = new org.apache.james.mime4j.stream.MimeConfig$Builder;

        specialinvoke $r0.<org.apache.james.mime4j.stream.MimeConfig$Builder: void <init>()>();

        $r1 = virtualinvoke $r0.<org.apache.james.mime4j.stream.MimeConfig$Builder: org.apache.james.mime4j.stream.MimeConfig build()>();

        <org.apache.james.mime4j.stream.MimeConfig: org.apache.james.mime4j.stream.MimeConfig DEFAULT> = $r1;

        $r0 = new org.apache.james.mime4j.stream.MimeConfig$Builder;

        specialinvoke $r0.<org.apache.james.mime4j.stream.MimeConfig$Builder: void <init>()>();

        $r0 = virtualinvoke $r0.<org.apache.james.mime4j.stream.MimeConfig$Builder: org.apache.james.mime4j.stream.MimeConfig$Builder setStrictParsing(boolean)>(1);

        $r0 = virtualinvoke $r0.<org.apache.james.mime4j.stream.MimeConfig$Builder: org.apache.james.mime4j.stream.MimeConfig$Builder setMalformedHeaderStartsBody(boolean)>(0);

        $r1 = virtualinvoke $r0.<org.apache.james.mime4j.stream.MimeConfig$Builder: org.apache.james.mime4j.stream.MimeConfig build()>();

        <org.apache.james.mime4j.stream.MimeConfig: org.apache.james.mime4j.stream.MimeConfig STRICT> = $r1;

        return;
    }
    void <init>(boolean, int, int, int, long, boolean, java.lang.String, boolean)
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2;
        long $l3;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $l3 := @parameter4: long;

        $z1 := @parameter5: boolean;

        $r1 := @parameter6: java.lang.String;

        $z2 := @parameter7: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.james.mime4j.stream.MimeConfig: boolean strictParsing> = $z0;

        r0.<org.apache.james.mime4j.stream.MimeConfig: boolean countLineNumbers> = $z1;

        r0.<org.apache.james.mime4j.stream.MimeConfig: boolean malformedHeaderStartsBody> = $z2;

        r0.<org.apache.james.mime4j.stream.MimeConfig: int maxLineLen> = $i0;

        r0.<org.apache.james.mime4j.stream.MimeConfig: int maxHeaderCount> = $i1;

        r0.<org.apache.james.mime4j.stream.MimeConfig: int maxHeaderLen> = $i2;

        r0.<org.apache.james.mime4j.stream.MimeConfig: long maxContentLen> = $l3;

        r0.<org.apache.james.mime4j.stream.MimeConfig: java.lang.String headlessParsing> = $r1;

        return;
    }
    public static org.apache.james.mime4j.stream.MimeConfig$Builder copy(org.apache.james.mime4j.stream.MimeConfig)
    {
        org.apache.james.mime4j.stream.MimeConfig $r0;
        java.lang.IllegalArgumentException $r1;
        org.apache.james.mime4j.stream.MimeConfig$Builder $r2;
        boolean $z0;
        int $i0;
        long $l1;
        java.lang.String $r3;

        $r0 := @parameter0: org.apache.james.mime4j.stream.MimeConfig;

        if $r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Config may not be null");

        throw $r1;

     label1:
        $r2 = new org.apache.james.mime4j.stream.MimeConfig$Builder;

        specialinvoke $r2.<org.apache.james.mime4j.stream.MimeConfig$Builder: void <init>()>();

        $z0 = virtualinvoke $r0.<org.apache.james.mime4j.stream.MimeConfig: boolean isStrictParsing()>();

        $r2 = virtualinvoke $r2.<org.apache.james.mime4j.stream.MimeConfig$Builder: org.apache.james.mime4j.stream.MimeConfig$Builder setStrictParsing(boolean)>($z0);

        $i0 = virtualinvoke $r0.<org.apache.james.mime4j.stream.MimeConfig: int getMaxLineLen()>();

        $r2 = virtualinvoke $r2.<org.apache.james.mime4j.stream.MimeConfig$Builder: org.apache.james.mime4j.stream.MimeConfig$Builder setMaxLineLen(int)>($i0);

        $i0 = virtualinvoke $r0.<org.apache.james.mime4j.stream.MimeConfig: int getMaxHeaderCount()>();

        $r2 = virtualinvoke $r2.<org.apache.james.mime4j.stream.MimeConfig$Builder: org.apache.james.mime4j.stream.MimeConfig$Builder setMaxHeaderCount(int)>($i0);

        $i0 = virtualinvoke $r0.<org.apache.james.mime4j.stream.MimeConfig: int getMaxHeaderLen()>();

        $r2 = virtualinvoke $r2.<org.apache.james.mime4j.stream.MimeConfig$Builder: org.apache.james.mime4j.stream.MimeConfig$Builder setMaxHeaderLen(int)>($i0);

        $l1 = virtualinvoke $r0.<org.apache.james.mime4j.stream.MimeConfig: long getMaxContentLen()>();

        $r2 = virtualinvoke $r2.<org.apache.james.mime4j.stream.MimeConfig$Builder: org.apache.james.mime4j.stream.MimeConfig$Builder setMaxContentLen(long)>($l1);

        $z0 = virtualinvoke $r0.<org.apache.james.mime4j.stream.MimeConfig: boolean isCountLineNumbers()>();

        $r2 = virtualinvoke $r2.<org.apache.james.mime4j.stream.MimeConfig$Builder: org.apache.james.mime4j.stream.MimeConfig$Builder setCountLineNumbers(boolean)>($z0);

        $r3 = virtualinvoke $r0.<org.apache.james.mime4j.stream.MimeConfig: java.lang.String getHeadlessParsing()>();

        $r2 = virtualinvoke $r2.<org.apache.james.mime4j.stream.MimeConfig$Builder: org.apache.james.mime4j.stream.MimeConfig$Builder setHeadlessParsing(java.lang.String)>($r3);

        $z0 = virtualinvoke $r0.<org.apache.james.mime4j.stream.MimeConfig: boolean isMalformedHeaderStartsBody()>();

        $r2 = virtualinvoke $r2.<org.apache.james.mime4j.stream.MimeConfig$Builder: org.apache.james.mime4j.stream.MimeConfig$Builder setMalformedHeaderStartsBody(boolean)>($z0);

        return $r2;
    }
    public static org.apache.james.mime4j.stream.MimeConfig$Builder custom()
    {
        org.apache.james.mime4j.stream.MimeConfig$Builder $r0;

        $r0 = new org.apache.james.mime4j.stream.MimeConfig$Builder;

        specialinvoke $r0.<org.apache.james.mime4j.stream.MimeConfig$Builder: void <init>()>();

        return $r0;
    }
    public java.lang.String getHeadlessParsing()
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        java.lang.String r1;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        r1 = r0.<org.apache.james.mime4j.stream.MimeConfig: java.lang.String headlessParsing>;

        return r1;
    }
    public long getMaxContentLen()
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        long l0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        l0 = r0.<org.apache.james.mime4j.stream.MimeConfig: long maxContentLen>;

        return l0;
    }
    public int getMaxHeaderCount()
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        int i0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        i0 = r0.<org.apache.james.mime4j.stream.MimeConfig: int maxHeaderCount>;

        return i0;
    }
    public int getMaxHeaderLen()
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        int i0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        i0 = r0.<org.apache.james.mime4j.stream.MimeConfig: int maxHeaderLen>;

        return i0;
    }
    public int getMaxLineLen()
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        int i0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        i0 = r0.<org.apache.james.mime4j.stream.MimeConfig: int maxLineLen>;

        return i0;
    }
    public boolean isCountLineNumbers()
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        boolean z0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        z0 = r0.<org.apache.james.mime4j.stream.MimeConfig: boolean countLineNumbers>;

        return z0;
    }
    public boolean isMalformedHeaderStartsBody()
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        boolean z0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        z0 = r0.<org.apache.james.mime4j.stream.MimeConfig: boolean malformedHeaderStartsBody>;

        return z0;
    }
    public boolean isStrictParsing()
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        boolean z0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        z0 = r0.<org.apache.james.mime4j.stream.MimeConfig: boolean strictParsing>;

        return z0;
    }
    public java.lang.String toString()
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        java.lang.StringBuilder r1, $r2;
        boolean $z0;
        int $i0;
        long $l1;
        java.lang.String $r3;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[strictParsing=");

        $z0 = r0.<org.apache.james.mime4j.stream.MimeConfig: boolean strictParsing>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", maxLineLen=");

        $i0 = r0.<org.apache.james.mime4j.stream.MimeConfig: int maxLineLen>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", maxHeaderCount=");

        $i0 = r0.<org.apache.james.mime4j.stream.MimeConfig: int maxHeaderCount>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", maxHeaderLen=");

        $i0 = r0.<org.apache.james.mime4j.stream.MimeConfig: int maxHeaderLen>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", maxContentLen=");

        $l1 = r0.<org.apache.james.mime4j.stream.MimeConfig: long maxContentLen>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", countLineNumbers=");

        $z0 = r0.<org.apache.james.mime4j.stream.MimeConfig: boolean countLineNumbers>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", headlessParsing=");

        $r3 = r0.<org.apache.james.mime4j.stream.MimeConfig: java.lang.String headlessParsing>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", malformedHeaderStartsBody=");

        $z0 = r0.<org.apache.james.mime4j.stream.MimeConfig: boolean malformedHeaderStartsBody>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
