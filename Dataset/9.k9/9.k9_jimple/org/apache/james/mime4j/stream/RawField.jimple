org.apache.james.mime4j.stream.RawField extends java.lang.Object implements org.apache.james.mime4j.stream.Field
private final java.lang.String body
private final int delimiterIdx
private final java.lang.String name
private final org.apache.james.mime4j.util.ByteSequence raw
    public void <init>(java.lang.String, java.lang.String)
    {
        org.apache.james.mime4j.stream.RawField r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.apache.james.mime4j.stream.RawField;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.james.mime4j.stream.RawField: void <init>(org.apache.james.mime4j.util.ByteSequence,int,java.lang.String,java.lang.String)>(null, -1, $r1, $r2);

        return;
    }
    void <init>(org.apache.james.mime4j.util.ByteSequence, int, java.lang.String, java.lang.String)
    {
        org.apache.james.mime4j.stream.RawField r0;
        org.apache.james.mime4j.util.ByteSequence $r1;
        int $i0;
        java.lang.String $r2, $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.apache.james.mime4j.stream.RawField;

        $r1 := @parameter0: org.apache.james.mime4j.util.ByteSequence;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $r2 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Field may not be null");

        throw $r4;

     label1:
        r0.<org.apache.james.mime4j.stream.RawField: org.apache.james.mime4j.util.ByteSequence raw> = $r1;

        r0.<org.apache.james.mime4j.stream.RawField: int delimiterIdx> = $i0;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        r0.<org.apache.james.mime4j.stream.RawField: java.lang.String name> = $r2;

        r0.<org.apache.james.mime4j.stream.RawField: java.lang.String body> = $r3;

        return;
    }
    public java.lang.String getBody()
    {
        org.apache.james.mime4j.stream.RawField r0;
        int $i0, $i1, $i2;
        java.lang.String $r1;
        org.apache.james.mime4j.util.ByteSequence $r2;
        byte $b3;
        char $c4;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.stream.RawField;

        $r1 = r0.<org.apache.james.mime4j.stream.RawField: java.lang.String body>;

        if $r1 == null goto label1;

        $r1 = r0.<org.apache.james.mime4j.stream.RawField: java.lang.String body>;

        return $r1;

     label1:
        $r2 = r0.<org.apache.james.mime4j.stream.RawField: org.apache.james.mime4j.util.ByteSequence raw>;

        if $r2 == null goto label3;

        $r2 = r0.<org.apache.james.mime4j.stream.RawField: org.apache.james.mime4j.util.ByteSequence raw>;

        $i0 = interfaceinvoke $r2.<org.apache.james.mime4j.util.ByteSequence: int length()>();

        $i1 = r0.<org.apache.james.mime4j.stream.RawField: int delimiterIdx>;

        $i1 = $i1 + 1;

        $i2 = $i1 + 1;

        if $i0 <= $i2 goto label2;

        $r2 = r0.<org.apache.james.mime4j.stream.RawField: org.apache.james.mime4j.util.ByteSequence raw>;

        $b3 = interfaceinvoke $r2.<org.apache.james.mime4j.util.ByteSequence: byte byteAt(int)>($i1);

        $i2 = $b3 & 255;

        $c4 = (char) $i2;

        $z0 = staticinvoke <org.apache.james.mime4j.util.CharsetUtil: boolean isWhitespace(char)>($c4);

        if $z0 == 0 goto label2;

        $i1 = $i1 + 1;

     label2:
        $r2 = r0.<org.apache.james.mime4j.stream.RawField: org.apache.james.mime4j.util.ByteSequence raw>;

        $i0 = $i0 - $i1;

        $r1 = staticinvoke <org.apache.james.mime4j.util.ContentUtil: java.lang.String decode(org.apache.james.mime4j.util.ByteSequence,int,int)>($r2, $i1, $i0);

        $r1 = staticinvoke <org.apache.james.mime4j.util.MimeUtil: java.lang.String unfold(java.lang.String)>($r1);

        return $r1;

     label3:
        return null;
    }
    public int getDelimiterIdx()
    {
        org.apache.james.mime4j.stream.RawField r0;
        int i0;

        r0 := @this: org.apache.james.mime4j.stream.RawField;

        i0 = r0.<org.apache.james.mime4j.stream.RawField: int delimiterIdx>;

        return i0;
    }
    public java.lang.String getName()
    {
        org.apache.james.mime4j.stream.RawField r0;
        java.lang.String r1;

        r0 := @this: org.apache.james.mime4j.stream.RawField;

        r1 = r0.<org.apache.james.mime4j.stream.RawField: java.lang.String name>;

        return r1;
    }
    public org.apache.james.mime4j.util.ByteSequence getRaw()
    {
        org.apache.james.mime4j.stream.RawField r0;
        org.apache.james.mime4j.util.ByteSequence r1;

        r0 := @this: org.apache.james.mime4j.stream.RawField;

        r1 = r0.<org.apache.james.mime4j.stream.RawField: org.apache.james.mime4j.util.ByteSequence raw>;

        return r1;
    }
    public java.lang.String toString()
    {
        org.apache.james.mime4j.stream.RawField r0;
        java.lang.StringBuilder r1;
        org.apache.james.mime4j.util.ByteSequence $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.james.mime4j.stream.RawField;

        $r2 = r0.<org.apache.james.mime4j.stream.RawField: org.apache.james.mime4j.util.ByteSequence raw>;

        if $r2 == null goto label1;

        $r2 = r0.<org.apache.james.mime4j.stream.RawField: org.apache.james.mime4j.util.ByteSequence raw>;

        $r3 = staticinvoke <org.apache.james.mime4j.util.ContentUtil: java.lang.String decode(org.apache.james.mime4j.util.ByteSequence)>($r2);

        return $r3;

     label1:
        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<org.apache.james.mime4j.stream.RawField: java.lang.String name>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r3 = r0.<org.apache.james.mime4j.stream.RawField: java.lang.String body>;

        if $r3 == null goto label2;

        $r3 = r0.<org.apache.james.mime4j.stream.RawField: java.lang.String body>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label2:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
