org.apache.james.mime4j.util.ByteArrayBuffer extends java.lang.Object implements org.apache.james.mime4j.util.ByteSequence
private byte[] buffer
private int len
    public void <init>(int)
    {
        org.apache.james.mime4j.util.ByteArrayBuffer r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;
        byte[] $r2;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $i0 >= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Buffer capacity may not be negative");

        throw $r1;

     label1:
        $r2 = newarray (byte)[$i0];

        r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer> = $r2;

        return;
    }
    public void <init>(byte[], int, boolean)
    {
        org.apache.james.mime4j.util.ByteArrayBuffer r0;
        byte[] $r1, $r3;
        int $i0, $i1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        if $i0 < 0 goto label2;

        $i1 = lengthof $r1;

        if $i0 <= $i1 goto label3;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label3:
        if $z0 == 0 goto label5;

        r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer> = $r1;

     label4:
        r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len> = $i0;

        return;

     label5:
        $r3 = newarray (byte)[$i0];

        r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer> = $r3;

        $r3 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r3, 0, $i0);

        goto label4;
    }
    public void <init>(byte[], boolean)
    {
        org.apache.james.mime4j.util.ByteArrayBuffer r0;
        byte[] $r1;
        boolean $z0;
        int $i0;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        $r1 := @parameter0: byte[];

        $z0 := @parameter1: boolean;

        $i0 = lengthof $r1;

        specialinvoke r0.<org.apache.james.mime4j.util.ByteArrayBuffer: void <init>(byte[],int,boolean)>($r1, $i0, $z0);

        return;
    }
    private void expand(int)
    {
        org.apache.james.mime4j.util.ByteArrayBuffer r0;
        int $i0, $i1;
        byte[] r1, $r2;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        $i0 := @parameter0: int;

        r1 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        $i1 = lengthof r1;

        $i1 = $i1 << 1;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i0);

        r1 = newarray (byte)[$i0];

        $r2 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        $i0 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i0);

        r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer> = r1;

        return;
    }
    public void append(int)
    {
        org.apache.james.mime4j.util.ByteArrayBuffer r0;
        int $i0, i1, $i2;
        byte $b3;
        byte[] $r1;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        $i0 := @parameter0: int;

        i1 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        i1 = i1 + 1;

        $r1 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        $i2 = lengthof $r1;

        if i1 <= $i2 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.util.ByteArrayBuffer: void expand(int)>(i1);

     label1:
        $r1 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        $i2 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        $b3 = (byte) $i0;

        $r1[$i2] = $b3;

        r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len> = i1;

        return;
    }
    public void append(byte[], int, int)
    {
        org.apache.james.mime4j.util.ByteArrayBuffer r0;
        byte[] $r1, $r3;
        int $i0, $i1, i2, $i3;
        java.lang.IndexOutOfBoundsException $r2;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $r1 != null goto label1;

        return;

     label1:
        if $i0 < 0 goto label2;

        i2 = lengthof $r1;

        if $i0 > i2 goto label2;

        if $i1 < 0 goto label2;

        i2 = $i0 + $i1;

        if i2 < 0 goto label2;

        i2 = $i0 + $i1;

        $i3 = lengthof $r1;

        if i2 <= $i3 goto label3;

     label2:
        $r2 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r2;

     label3:
        if $i1 == 0 goto label5;

        i2 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        i2 = i2 + $i1;

        $r3 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        $i3 = lengthof $r3;

        if i2 <= $i3 goto label4;

        specialinvoke r0.<org.apache.james.mime4j.util.ByteArrayBuffer: void expand(int)>(i2);

     label4:
        $r3 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        $i3 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r3, $i3, $i1);

        r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len> = i2;

     label5:
        return;
    }
    public byte[] buffer()
    {
        org.apache.james.mime4j.util.ByteArrayBuffer r0;
        byte[] r1;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        r1 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        return r1;
    }
    public byte byteAt(int)
    {
        org.apache.james.mime4j.util.ByteArrayBuffer r0;
        int $i0, $i1;
        java.lang.IndexOutOfBoundsException $r1;
        byte[] $r2;
        byte $b2;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $i1 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        if $i0 < $i1 goto label2;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r1;

     label2:
        $r2 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        $b2 = $r2[$i0];

        return $b2;
    }
    public int capacity()
    {
        org.apache.james.mime4j.util.ByteArrayBuffer r0;
        byte[] $r1;
        int $i0;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        $r1 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        $i0 = lengthof $r1;

        return $i0;
    }
    public void clear()
    {
        org.apache.james.mime4j.util.ByteArrayBuffer r0;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len> = 0;

        return;
    }
    public int indexOf(byte)
    {
        org.apache.james.mime4j.util.ByteArrayBuffer r0;
        byte $b0;
        int $i1;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        $b0 := @parameter0: byte;

        $i1 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        $i1 = virtualinvoke r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int indexOf(byte,int,int)>($b0, 0, $i1);

        return $i1;
    }
    public int indexOf(byte, int, int)
    {
        org.apache.james.mime4j.util.ByteArrayBuffer r0;
        byte $b0, $b4;
        int $i1, $i2, $i3;
        byte[] $r1;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        $b0 := @parameter0: byte;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        if $i1 >= 0 goto label1;

        $i1 = 0;

     label1:
        $i3 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        if $i2 <= $i3 goto label2;

        $i2 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

     label2:
        if $i1 <= $i2 goto label3;

        return -1;

     label3:
        if $i1 >= $i2 goto label4;

        $r1 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        $b4 = $r1[$i1];

        if $b4 == $b0 goto label5;

        $i1 = $i1 + 1;

        goto label3;

     label4:
        return -1;

     label5:
        return $i1;
    }
    public boolean isEmpty()
    {
        org.apache.james.mime4j.util.ByteArrayBuffer r0;
        int $i0;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        $i0 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean isFull()
    {
        org.apache.james.mime4j.util.ByteArrayBuffer r0;
        int $i0, $i1;
        byte[] $r1;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        $i0 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        $r1 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        $i1 = lengthof $r1;

        if $i0 != $i1 goto label1;

        return 1;

     label1:
        return 0;
    }
    public int length()
    {
        org.apache.james.mime4j.util.ByteArrayBuffer r0;
        int i0;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        i0 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        return i0;
    }
    public void remove(int, int)
    {
        org.apache.james.mime4j.util.ByteArrayBuffer r0;
        int $i0, $i1, i2, $i3;
        byte[] $r1, $r3;
        java.lang.IndexOutOfBoundsException $r2;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 < 0 goto label1;

        i2 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        if $i0 > i2 goto label1;

        if $i1 < 0 goto label1;

        i2 = $i0 + $i1;

        if i2 < 0 goto label1;

        i2 = $i0 + $i1;

        $i3 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        if i2 <= $i3 goto label2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r2;

     label2:
        if $i1 != 0 goto label3;

        return;

     label3:
        i2 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        i2 = i2 - $i0;

        i2 = i2 - $i1;

        if i2 <= 0 goto label4;

        $r3 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        $i3 = $i0 + $i1;

        $r1 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i3, $r1, $i0, i2);

     label4:
        $i0 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        $i0 = $i0 - $i1;

        r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len> = $i0;

        return;
    }
    public void setLength(int)
    {
        org.apache.james.mime4j.util.ByteArrayBuffer r0;
        int $i0, $i1;
        byte[] $r1;
        java.lang.IndexOutOfBoundsException $r2;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $r1 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        $i1 = lengthof $r1;

        if $i0 <= $i1 goto label2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r2;

     label2:
        r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len> = $i0;

        return;
    }
    public byte[] toByteArray()
    {
        org.apache.james.mime4j.util.ByteArrayBuffer r0;
        byte[] r1, $r2;
        int $i0;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        $i0 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        r1 = newarray (byte)[$i0];

        $i0 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        if $i0 <= 0 goto label1;

        $r2 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        $i0 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i0);

     label1:
        return r1;
    }
    public java.lang.String toString()
    {
        org.apache.james.mime4j.util.ByteArrayBuffer r0;
        java.lang.String $r1;
        byte[] $r2;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        $r1 = new java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] toByteArray()>();

        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r2);

        return $r1;
    }
