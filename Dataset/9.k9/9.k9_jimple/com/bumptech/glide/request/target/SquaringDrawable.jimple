com.bumptech.glide.request.target.SquaringDrawable extends com.bumptech.glide.load.resource.drawable.GlideDrawable
private boolean mutated
private com.bumptech.glide.request.target.SquaringDrawable$State state
private com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped
    public void <init>(com.bumptech.glide.load.resource.drawable.GlideDrawable, int)
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r1;
        int $i0;
        com.bumptech.glide.request.target.SquaringDrawable$State $r2;
        android.graphics.drawable.Drawable$ConstantState $r3;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $r1 := @parameter0: com.bumptech.glide.load.resource.drawable.GlideDrawable;

        $i0 := @parameter1: int;

        $r2 = new com.bumptech.glide.request.target.SquaringDrawable$State;

        $r3 = virtualinvoke $r1.<com.bumptech.glide.load.resource.drawable.GlideDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        specialinvoke $r2.<com.bumptech.glide.request.target.SquaringDrawable$State: void <init>(android.graphics.drawable.Drawable$ConstantState,int)>($r3, $i0);

        specialinvoke r0.<com.bumptech.glide.request.target.SquaringDrawable: void <init>(com.bumptech.glide.request.target.SquaringDrawable$State,com.bumptech.glide.load.resource.drawable.GlideDrawable,android.content.res.Resources)>($r2, $r1, null);

        return;
    }
    void <init>(com.bumptech.glide.request.target.SquaringDrawable$State, com.bumptech.glide.load.resource.drawable.GlideDrawable, android.content.res.Resources)
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        com.bumptech.glide.request.target.SquaringDrawable$State $r1;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r2;
        android.content.res.Resources $r3;
        android.graphics.drawable.Drawable$ConstantState $r4;
        android.graphics.drawable.Drawable $r5;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $r1 := @parameter0: com.bumptech.glide.request.target.SquaringDrawable$State;

        $r2 := @parameter1: com.bumptech.glide.load.resource.drawable.GlideDrawable;

        $r3 := @parameter2: android.content.res.Resources;

        specialinvoke r0.<com.bumptech.glide.load.resource.drawable.GlideDrawable: void <init>()>();

        r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.request.target.SquaringDrawable$State state> = $r1;

        if $r2 != null goto label2;

        if $r3 == null goto label1;

        $r4 = staticinvoke <com.bumptech.glide.request.target.SquaringDrawable$State: android.graphics.drawable.Drawable$ConstantState access$000(com.bumptech.glide.request.target.SquaringDrawable$State)>($r1);

        $r5 = virtualinvoke $r4.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>($r3);

        $r2 = (com.bumptech.glide.load.resource.drawable.GlideDrawable) $r5;

        r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped> = $r2;

        return;

     label1:
        $r4 = staticinvoke <com.bumptech.glide.request.target.SquaringDrawable$State: android.graphics.drawable.Drawable$ConstantState access$000(com.bumptech.glide.request.target.SquaringDrawable$State)>($r1);

        $r5 = virtualinvoke $r4.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable()>();

        $r2 = (com.bumptech.glide.load.resource.drawable.GlideDrawable) $r5;

        r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped> = $r2;

        return;

     label2:
        r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped> = $r2;

        return;
    }
    public void clearColorFilter()
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r1;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped>;

        virtualinvoke $r1.<com.bumptech.glide.load.resource.drawable.GlideDrawable: void clearColorFilter()>();

        return;
    }
    public void draw(android.graphics.Canvas)
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        android.graphics.Canvas $r1;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r2;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped>;

        virtualinvoke $r2.<com.bumptech.glide.load.resource.drawable.GlideDrawable: void draw(android.graphics.Canvas)>($r1);

        return;
    }
    public int getAlpha()
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        int $i0;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r1;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped>;

        $i0 = virtualinvoke $r1.<com.bumptech.glide.load.resource.drawable.GlideDrawable: int getAlpha()>();

        return $i0;
    }
    public android.graphics.drawable.Drawable$Callback getCallback()
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        android.graphics.drawable.Drawable$Callback $r1;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r2;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $r2 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped>;

        $r1 = virtualinvoke $r2.<com.bumptech.glide.load.resource.drawable.GlideDrawable: android.graphics.drawable.Drawable$Callback getCallback()>();

        return $r1;
    }
    public int getChangingConfigurations()
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        int $i0;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r1;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped>;

        $i0 = virtualinvoke $r1.<com.bumptech.glide.load.resource.drawable.GlideDrawable: int getChangingConfigurations()>();

        return $i0;
    }
    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        com.bumptech.glide.request.target.SquaringDrawable$State r1;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.request.target.SquaringDrawable$State state>;

        return r1;
    }
    public android.graphics.drawable.Drawable getCurrent()
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        android.graphics.drawable.Drawable $r1;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r2;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $r2 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped>;

        $r1 = virtualinvoke $r2.<com.bumptech.glide.load.resource.drawable.GlideDrawable: android.graphics.drawable.Drawable getCurrent()>();

        return $r1;
    }
    public int getIntrinsicHeight()
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        int $i0;
        com.bumptech.glide.request.target.SquaringDrawable$State $r1;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.request.target.SquaringDrawable$State state>;

        $i0 = staticinvoke <com.bumptech.glide.request.target.SquaringDrawable$State: int access$100(com.bumptech.glide.request.target.SquaringDrawable$State)>($r1);

        return $i0;
    }
    public int getIntrinsicWidth()
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        int $i0;
        com.bumptech.glide.request.target.SquaringDrawable$State $r1;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.request.target.SquaringDrawable$State state>;

        $i0 = staticinvoke <com.bumptech.glide.request.target.SquaringDrawable$State: int access$100(com.bumptech.glide.request.target.SquaringDrawable$State)>($r1);

        return $i0;
    }
    public int getMinimumHeight()
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        int $i0;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r1;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped>;

        $i0 = virtualinvoke $r1.<com.bumptech.glide.load.resource.drawable.GlideDrawable: int getMinimumHeight()>();

        return $i0;
    }
    public int getMinimumWidth()
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        int $i0;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r1;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped>;

        $i0 = virtualinvoke $r1.<com.bumptech.glide.load.resource.drawable.GlideDrawable: int getMinimumWidth()>();

        return $i0;
    }
    public int getOpacity()
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        int $i0;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r1;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped>;

        $i0 = virtualinvoke $r1.<com.bumptech.glide.load.resource.drawable.GlideDrawable: int getOpacity()>();

        return $i0;
    }
    public boolean getPadding(android.graphics.Rect)
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        android.graphics.Rect $r1;
        boolean $z0;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r2;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped>;

        $z0 = virtualinvoke $r2.<com.bumptech.glide.load.resource.drawable.GlideDrawable: boolean getPadding(android.graphics.Rect)>($r1);

        return $z0;
    }
    public void invalidateSelf()
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r1;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        specialinvoke r0.<com.bumptech.glide.load.resource.drawable.GlideDrawable: void invalidateSelf()>();

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped>;

        virtualinvoke $r1.<com.bumptech.glide.load.resource.drawable.GlideDrawable: void invalidateSelf()>();

        return;
    }
    public boolean isAnimated()
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        boolean $z0;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r1;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped>;

        $z0 = virtualinvoke $r1.<com.bumptech.glide.load.resource.drawable.GlideDrawable: boolean isAnimated()>();

        return $z0;
    }
    public boolean isRunning()
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        boolean $z0;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r1;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped>;

        $z0 = virtualinvoke $r1.<com.bumptech.glide.load.resource.drawable.GlideDrawable: boolean isRunning()>();

        return $z0;
    }
    public android.graphics.drawable.Drawable mutate()
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        com.bumptech.glide.request.target.SquaringDrawable$State $r1, $r4;
        boolean $z0;
        android.graphics.drawable.Drawable $r2;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r3;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $z0 = r0.<com.bumptech.glide.request.target.SquaringDrawable: boolean mutated>;

        if $z0 != 0 goto label1;

        $r2 = specialinvoke r0.<com.bumptech.glide.load.resource.drawable.GlideDrawable: android.graphics.drawable.Drawable mutate()>();

        if $r2 != r0 goto label1;

        $r3 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped>;

        $r2 = virtualinvoke $r3.<com.bumptech.glide.load.resource.drawable.GlideDrawable: android.graphics.drawable.Drawable mutate()>();

        $r3 = (com.bumptech.glide.load.resource.drawable.GlideDrawable) $r2;

        r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped> = $r3;

        $r4 = new com.bumptech.glide.request.target.SquaringDrawable$State;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.request.target.SquaringDrawable$State state>;

        specialinvoke $r4.<com.bumptech.glide.request.target.SquaringDrawable$State: void <init>(com.bumptech.glide.request.target.SquaringDrawable$State)>($r1);

        r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.request.target.SquaringDrawable$State state> = $r4;

        r0.<com.bumptech.glide.request.target.SquaringDrawable: boolean mutated> = 1;

     label1:
        return r0;
    }
    public void scheduleSelf(java.lang.Runnable, long)
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        java.lang.Runnable $r1;
        long $l0;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r2;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $r1 := @parameter0: java.lang.Runnable;

        $l0 := @parameter1: long;

        specialinvoke r0.<com.bumptech.glide.load.resource.drawable.GlideDrawable: void scheduleSelf(java.lang.Runnable,long)>($r1, $l0);

        $r2 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped>;

        virtualinvoke $r2.<com.bumptech.glide.load.resource.drawable.GlideDrawable: void scheduleSelf(java.lang.Runnable,long)>($r1, $l0);

        return;
    }
    public void setAlpha(int)
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        int $i0;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r1;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $i0 := @parameter0: int;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped>;

        virtualinvoke $r1.<com.bumptech.glide.load.resource.drawable.GlideDrawable: void setAlpha(int)>($i0);

        return;
    }
    public void setBounds(int, int, int, int)
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        int $i0, $i1, $i2, $i3;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r1;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        specialinvoke r0.<com.bumptech.glide.load.resource.drawable.GlideDrawable: void setBounds(int,int,int,int)>($i0, $i1, $i2, $i3);

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped>;

        virtualinvoke $r1.<com.bumptech.glide.load.resource.drawable.GlideDrawable: void setBounds(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }
    public void setBounds(android.graphics.Rect)
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        android.graphics.Rect $r1;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r2;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $r1 := @parameter0: android.graphics.Rect;

        specialinvoke r0.<com.bumptech.glide.load.resource.drawable.GlideDrawable: void setBounds(android.graphics.Rect)>($r1);

        $r2 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped>;

        virtualinvoke $r2.<com.bumptech.glide.load.resource.drawable.GlideDrawable: void setBounds(android.graphics.Rect)>($r1);

        return;
    }
    public void setChangingConfigurations(int)
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        int $i0;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r1;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $i0 := @parameter0: int;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped>;

        virtualinvoke $r1.<com.bumptech.glide.load.resource.drawable.GlideDrawable: void setChangingConfigurations(int)>($i0);

        return;
    }
    public void setColorFilter(int, android.graphics.PorterDuff$Mode)
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        int $i0;
        android.graphics.PorterDuff$Mode $r1;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r2;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.graphics.PorterDuff$Mode;

        $r2 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped>;

        virtualinvoke $r2.<com.bumptech.glide.load.resource.drawable.GlideDrawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r1);

        return;
    }
    public void setColorFilter(android.graphics.ColorFilter)
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        android.graphics.ColorFilter $r1;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r2;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped>;

        virtualinvoke $r2.<com.bumptech.glide.load.resource.drawable.GlideDrawable: void setColorFilter(android.graphics.ColorFilter)>($r1);

        return;
    }
    public void setDither(boolean)
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        boolean $z0;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r1;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped>;

        virtualinvoke $r1.<com.bumptech.glide.load.resource.drawable.GlideDrawable: void setDither(boolean)>($z0);

        return;
    }
    public void setFilterBitmap(boolean)
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        boolean $z0;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r1;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped>;

        virtualinvoke $r1.<com.bumptech.glide.load.resource.drawable.GlideDrawable: void setFilterBitmap(boolean)>($z0);

        return;
    }
    public void setLoopCount(int)
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        int $i0;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r1;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $i0 := @parameter0: int;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped>;

        virtualinvoke $r1.<com.bumptech.glide.load.resource.drawable.GlideDrawable: void setLoopCount(int)>($i0);

        return;
    }
    public boolean setVisible(boolean, boolean)
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        boolean $z0, $z1;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r1;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped>;

        $z0 = virtualinvoke $r1.<com.bumptech.glide.load.resource.drawable.GlideDrawable: boolean setVisible(boolean,boolean)>($z0, $z1);

        return $z0;
    }
    public void start()
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r1;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped>;

        virtualinvoke $r1.<com.bumptech.glide.load.resource.drawable.GlideDrawable: void start()>();

        return;
    }
    public void stop()
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r1;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped>;

        virtualinvoke $r1.<com.bumptech.glide.load.resource.drawable.GlideDrawable: void stop()>();

        return;
    }
    public void unscheduleSelf(java.lang.Runnable)
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        java.lang.Runnable $r1;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r2;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $r1 := @parameter0: java.lang.Runnable;

        specialinvoke r0.<com.bumptech.glide.load.resource.drawable.GlideDrawable: void unscheduleSelf(java.lang.Runnable)>($r1);

        $r2 = r0.<com.bumptech.glide.request.target.SquaringDrawable: com.bumptech.glide.load.resource.drawable.GlideDrawable wrapped>;

        virtualinvoke $r2.<com.bumptech.glide.load.resource.drawable.GlideDrawable: void unscheduleSelf(java.lang.Runnable)>($r1);

        return;
    }
