com.bumptech.glide.request.target.ImageViewTargetFactory extends java.lang.Object
    public void <init>()
    {
        com.bumptech.glide.request.target.ImageViewTargetFactory r0;

        r0 := @this: com.bumptech.glide.request.target.ImageViewTargetFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public com.bumptech.glide.request.target.Target buildTarget(android.widget.ImageView, java.lang.Class)
    {
        com.bumptech.glide.request.target.ImageViewTargetFactory r0;
        android.widget.ImageView $r1;
        java.lang.Class r2, $r3;
        boolean $z0;
        com.bumptech.glide.request.target.GlideDrawableImageViewTarget $r4;
        com.bumptech.glide.request.target.BitmapImageViewTarget $r5;
        com.bumptech.glide.request.target.DrawableImageViewTarget $r6;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;

        r0 := @this: com.bumptech.glide.request.target.ImageViewTargetFactory;

        $r1 := @parameter0: android.widget.ImageView;

        r2 := @parameter1: java.lang.Class;

        $r3 = class "Lcom/bumptech/glide/load/resource/drawable/GlideDrawable;";

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z0 == 0 goto label1;

        $r4 = new com.bumptech.glide.request.target.GlideDrawableImageViewTarget;

        specialinvoke $r4.<com.bumptech.glide.request.target.GlideDrawableImageViewTarget: void <init>(android.widget.ImageView)>($r1);

        return $r4;

     label1:
        $r3 = class "Landroid/graphics/Bitmap;";

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        $r5 = new com.bumptech.glide.request.target.BitmapImageViewTarget;

        specialinvoke $r5.<com.bumptech.glide.request.target.BitmapImageViewTarget: void <init>(android.widget.ImageView)>($r1);

        return $r5;

     label2:
        $r3 = class "Landroid/graphics/drawable/Drawable;";

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z0 == 0 goto label3;

        $r6 = new com.bumptech.glide.request.target.DrawableImageViewTarget;

        specialinvoke $r6.<com.bumptech.glide.request.target.DrawableImageViewTarget: void <init>(android.widget.ImageView)>($r1);

        return $r6;

     label3:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled class: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", try .as*(Class).transcode(ResourceTranscoder)");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r7;
    }
