com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider extends java.lang.Object implements com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider
private volatile com.bumptech.glide.load.engine.cache.DiskCache diskCache
private final com.bumptech.glide.load.engine.cache.DiskCache$Factory factory
    public void <init>(com.bumptech.glide.load.engine.cache.DiskCache$Factory)
    {
        com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider r0;
        com.bumptech.glide.load.engine.cache.DiskCache$Factory $r1;

        r0 := @this: com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider;

        $r1 := @parameter0: com.bumptech.glide.load.engine.cache.DiskCache$Factory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider: com.bumptech.glide.load.engine.cache.DiskCache$Factory factory> = $r1;

        return;
    }
    public com.bumptech.glide.load.engine.cache.DiskCache getDiskCache()
    {
        com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider r0;
        com.bumptech.glide.load.engine.cache.DiskCache $r1;
        com.bumptech.glide.load.engine.cache.DiskCache$Factory $r2;
        com.bumptech.glide.load.engine.cache.DiskCacheAdapter $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider;

        $r1 = r0.<com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider: com.bumptech.glide.load.engine.cache.DiskCache diskCache>;

        if $r1 != null goto label4;

        entermonitor r0;

     label1:
        $r1 = r0.<com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider: com.bumptech.glide.load.engine.cache.DiskCache diskCache>;

        if $r1 != null goto label2;

        $r2 = r0.<com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider: com.bumptech.glide.load.engine.cache.DiskCache$Factory factory>;

        $r1 = interfaceinvoke $r2.<com.bumptech.glide.load.engine.cache.DiskCache$Factory: com.bumptech.glide.load.engine.cache.DiskCache build()>();

        r0.<com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider: com.bumptech.glide.load.engine.cache.DiskCache diskCache> = $r1;

     label2:
        $r1 = r0.<com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider: com.bumptech.glide.load.engine.cache.DiskCache diskCache>;

        if $r1 != null goto label3;

        $r3 = new com.bumptech.glide.load.engine.cache.DiskCacheAdapter;

        specialinvoke $r3.<com.bumptech.glide.load.engine.cache.DiskCacheAdapter: void <init>()>();

        r0.<com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider: com.bumptech.glide.load.engine.cache.DiskCache diskCache> = $r3;

     label3:
        exitmonitor r0;

     label4:
        $r1 = r0.<com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider: com.bumptech.glide.load.engine.cache.DiskCache diskCache>;

        return $r1;

     label5:
        $r4 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }
