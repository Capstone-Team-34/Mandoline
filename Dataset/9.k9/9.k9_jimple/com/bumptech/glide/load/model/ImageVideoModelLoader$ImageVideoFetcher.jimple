com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher extends java.lang.Object implements com.bumptech.glide.load.data.DataFetcher
private final com.bumptech.glide.load.data.DataFetcher fileDescriptorFetcher
private final com.bumptech.glide.load.data.DataFetcher streamFetcher
    public void <init>(com.bumptech.glide.load.data.DataFetcher, com.bumptech.glide.load.data.DataFetcher)
    {
        com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher r0;
        com.bumptech.glide.load.data.DataFetcher r1, r2;

        r0 := @this: com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher;

        r1 := @parameter0: com.bumptech.glide.load.data.DataFetcher;

        r2 := @parameter1: com.bumptech.glide.load.data.DataFetcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher streamFetcher> = r1;

        r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher fileDescriptorFetcher> = r2;

        return;
    }
    public void cancel()
    {
        com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher r0;
        com.bumptech.glide.load.data.DataFetcher $r1;

        r0 := @this: com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher;

        $r1 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher streamFetcher>;

        if $r1 == null goto label1;

        $r1 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher streamFetcher>;

        interfaceinvoke $r1.<com.bumptech.glide.load.data.DataFetcher: void cancel()>();

     label1:
        $r1 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher fileDescriptorFetcher>;

        if $r1 == null goto label2;

        $r1 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher fileDescriptorFetcher>;

        interfaceinvoke $r1.<com.bumptech.glide.load.data.DataFetcher: void cancel()>();

     label2:
        return;
    }
    public void cleanup()
    {
        com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher r0;
        com.bumptech.glide.load.data.DataFetcher $r1;

        r0 := @this: com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher;

        $r1 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher streamFetcher>;

        if $r1 == null goto label1;

        $r1 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher streamFetcher>;

        interfaceinvoke $r1.<com.bumptech.glide.load.data.DataFetcher: void cleanup()>();

     label1:
        $r1 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher fileDescriptorFetcher>;

        if $r1 == null goto label2;

        $r1 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher fileDescriptorFetcher>;

        interfaceinvoke $r1.<com.bumptech.glide.load.data.DataFetcher: void cleanup()>();

     label2:
        return;
    }
    public java.lang.String getId()
    {
        com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher r0;
        com.bumptech.glide.load.data.DataFetcher $r1;
        java.lang.String $r2;

        r0 := @this: com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher;

        $r1 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher streamFetcher>;

        if $r1 == null goto label1;

        $r1 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher streamFetcher>;

        $r2 = interfaceinvoke $r1.<com.bumptech.glide.load.data.DataFetcher: java.lang.String getId()>();

        return $r2;

     label1:
        $r1 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher fileDescriptorFetcher>;

        $r2 = interfaceinvoke $r1.<com.bumptech.glide.load.data.DataFetcher: java.lang.String getId()>();

        return $r2;
    }
    public com.bumptech.glide.load.model.ImageVideoWrapper loadData(com.bumptech.glide.Priority) throws java.lang.Exception
    {
        com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher r0;
        com.bumptech.glide.Priority $r1;
        java.io.InputStream r2, $r5;
        com.bumptech.glide.load.data.DataFetcher $r3;
        java.lang.Object $r4;
        android.os.ParcelFileDescriptor r6, $r7;
        com.bumptech.glide.load.model.ImageVideoWrapper $r8;
        java.lang.Exception r9, r10;
        boolean $z0;

        r0 := @this: com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher;

        $r1 := @parameter0: com.bumptech.glide.Priority;

        r2 = null;

        $r3 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher streamFetcher>;

        if $r3 == null goto label03;

     label01:
        $r3 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher streamFetcher>;

        $r4 = interfaceinvoke $r3.<com.bumptech.glide.load.data.DataFetcher: java.lang.Object loadData(com.bumptech.glide.Priority)>($r1);

        $r5 = (java.io.InputStream) $r4;

     label02:
        r2 = $r5;

     label03:
        r6 = null;

        $r3 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher fileDescriptorFetcher>;

        if $r3 == null goto label06;

     label04:
        $r3 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher fileDescriptorFetcher>;

        $r4 = interfaceinvoke $r3.<com.bumptech.glide.load.data.DataFetcher: java.lang.Object loadData(com.bumptech.glide.Priority)>($r1);

        $r7 = (android.os.ParcelFileDescriptor) $r4;

     label05:
        r6 = $r7;

     label06:
        $r8 = new com.bumptech.glide.load.model.ImageVideoWrapper;

        specialinvoke $r8.<com.bumptech.glide.load.model.ImageVideoWrapper: void <init>(java.io.InputStream,android.os.ParcelFileDescriptor)>(r2, r6);

        return $r8;

     label07:
        r9 := @caughtexception;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("IVML", 2);

        if $z0 == 0 goto label08;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("IVML", "Exception fetching input stream, trying ParcelFileDescriptor", r9);

     label08:
        $r3 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher fileDescriptorFetcher>;

        if $r3 != null goto label03;

        throw r9;

     label09:
        r10 := @caughtexception;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("IVML", 2);

        if $z0 == 0 goto label10;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("IVML", "Exception fetching ParcelFileDescriptor", r10);

     label10:
        if r2 != null goto label06;

        throw r10;

        catch java.lang.Exception from label01 to label02 with label07;
        catch java.lang.Exception from label04 to label05 with label09;
    }
    public volatile java.lang.Object loadData(com.bumptech.glide.Priority) throws java.lang.Exception
    {
        com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher r0;
        com.bumptech.glide.Priority $r1;
        com.bumptech.glide.load.model.ImageVideoWrapper $r2;

        r0 := @this: com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher;

        $r1 := @parameter0: com.bumptech.glide.Priority;

        $r2 = virtualinvoke r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.model.ImageVideoWrapper loadData(com.bumptech.glide.Priority)>($r1);

        return $r2;
    }
