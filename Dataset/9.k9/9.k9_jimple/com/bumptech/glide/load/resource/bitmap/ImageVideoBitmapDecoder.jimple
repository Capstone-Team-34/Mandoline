com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder extends java.lang.Object implements com.bumptech.glide.load.ResourceDecoder
private static final java.lang.String TAG
private final com.bumptech.glide.load.ResourceDecoder fileDescriptorDecoder
private final com.bumptech.glide.load.ResourceDecoder streamDecoder
    public void <init>(com.bumptech.glide.load.ResourceDecoder, com.bumptech.glide.load.ResourceDecoder)
    {
        com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder r0;
        com.bumptech.glide.load.ResourceDecoder r1, r2;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder;

        r1 := @parameter0: com.bumptech.glide.load.ResourceDecoder;

        r2 := @parameter1: com.bumptech.glide.load.ResourceDecoder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder: com.bumptech.glide.load.ResourceDecoder streamDecoder> = r1;

        r0.<com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder: com.bumptech.glide.load.ResourceDecoder fileDescriptorDecoder> = r2;

        return;
    }
    public com.bumptech.glide.load.engine.Resource decode(com.bumptech.glide.load.model.ImageVideoWrapper, int, int) throws java.io.IOException
    {
        com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder r0;
        com.bumptech.glide.load.model.ImageVideoWrapper $r1;
        int $i0, $i1;
        java.io.IOException r2;
        com.bumptech.glide.load.engine.Resource r3, $r6;
        java.io.InputStream $r4;
        com.bumptech.glide.load.ResourceDecoder $r5;
        android.os.ParcelFileDescriptor $r7;
        boolean $z0;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder;

        $r1 := @parameter0: com.bumptech.glide.load.model.ImageVideoWrapper;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        r3 = null;

        $r4 = virtualinvoke $r1.<com.bumptech.glide.load.model.ImageVideoWrapper: java.io.InputStream getStream()>();

        if $r4 == null goto label3;

        $r5 = r0.<com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder: com.bumptech.glide.load.ResourceDecoder streamDecoder>;

     label1:
        $r6 = interfaceinvoke $r5.<com.bumptech.glide.load.ResourceDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int)>($r4, $i0, $i1);

     label2:
        r3 = $r6;

     label3:
        if r3 != null goto label5;

        $r7 = virtualinvoke $r1.<com.bumptech.glide.load.model.ImageVideoWrapper: android.os.ParcelFileDescriptor getFileDescriptor()>();

        if $r7 == null goto label5;

        $r5 = r0.<com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder: com.bumptech.glide.load.ResourceDecoder fileDescriptorDecoder>;

        r3 = interfaceinvoke $r5.<com.bumptech.glide.load.ResourceDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int)>($r7, $i0, $i1);

        return r3;

     label4:
        r2 := @caughtexception;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("ImageVideoDecoder", 2);

        if $z0 == 0 goto label3;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("ImageVideoDecoder", "Failed to load image from stream, trying FileDescriptor", r2);

        goto label3;

     label5:
        return r3;

        catch java.io.IOException from label1 to label2 with label4;
    }
    public volatile com.bumptech.glide.load.engine.Resource decode(java.lang.Object, int, int) throws java.io.IOException
    {
        com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder r0;
        int $i0, $i1;
        com.bumptech.glide.load.engine.Resource $r1;
        java.lang.Object $r2;
        com.bumptech.glide.load.model.ImageVideoWrapper $r3;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder;

        $r2 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r3 = (com.bumptech.glide.load.model.ImageVideoWrapper) $r2;

        $r1 = virtualinvoke r0.<com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder: com.bumptech.glide.load.engine.Resource decode(com.bumptech.glide.load.model.ImageVideoWrapper,int,int)>($r3, $i0, $i1);

        return $r1;
    }
    public java.lang.String getId()
    {
        com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder r0;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder;

        return "ImageVideoBitmapDecoder.com.bumptech.glide.load.resource.bitmap";
    }
