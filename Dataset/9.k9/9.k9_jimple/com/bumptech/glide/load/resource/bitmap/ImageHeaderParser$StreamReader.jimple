com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$StreamReader extends java.lang.Object
private final java.io.InputStream is
    public void <init>(java.io.InputStream)
    {
        com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$StreamReader r0;
        java.io.InputStream $r1;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$StreamReader;

        $r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$StreamReader: java.io.InputStream is> = $r1;

        return;
    }
    public int getByte() throws java.io.IOException
    {
        com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$StreamReader r0;
        int $i0;
        java.io.InputStream $r1;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$StreamReader;

        $r1 = r0.<com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$StreamReader: java.io.InputStream is>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        return $i0;
    }
    public int getUInt16() throws java.io.IOException
    {
        com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$StreamReader r0;
        java.io.InputStream $r1;
        int $i0, $i1;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$StreamReader;

        $r1 = r0.<com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$StreamReader: java.io.InputStream is>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        $i0 = $i0 << 8;

        $i0 = $i0 & 65280;

        $r1 = r0.<com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$StreamReader: java.io.InputStream is>;

        $i1 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        $i1 = $i1 & 255;

        $i0 = $i0 | $i1;

        return $i0;
    }
    public short getUInt8() throws java.io.IOException
    {
        com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$StreamReader r0;
        int $i0;
        java.io.InputStream $r1;
        short $s1;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$StreamReader;

        $r1 = r0.<com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$StreamReader: java.io.InputStream is>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        $i0 = $i0 & 255;

        $s1 = (short) $i0;

        return $s1;
    }
    public int read(byte[]) throws java.io.IOException
    {
        com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$StreamReader r0;
        byte[] $r1;
        int $i0, i1;
        java.io.InputStream $r2;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$StreamReader;

        $r1 := @parameter0: byte[];

        i1 = lengthof $r1;

     label1:
        if i1 <= 0 goto label2;

        $r2 = r0.<com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$StreamReader: java.io.InputStream is>;

        $i0 = lengthof $r1;

        $i0 = $i0 - i1;

        $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, i1);

        if $i0 == -1 goto label2;

        i1 = i1 - $i0;

        goto label1;

     label2:
        $i0 = lengthof $r1;

        i1 = $i0 - i1;

        return i1;
    }
    public long skip(long) throws java.io.IOException
    {
        com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$StreamReader r0;
        long $l0, l2, $l3;
        byte $b1;
        java.io.InputStream $r1;
        int $i4;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$StreamReader;

        $l0 := @parameter0: long;

        $b1 = $l0 cmp 0L;

        if $b1 >= 0 goto label1;

        return 0L;

     label1:
        l2 = $l0;

     label2:
        $b1 = l2 cmp 0L;

        if $b1 <= 0 goto label4;

        $r1 = r0.<com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$StreamReader: java.io.InputStream is>;

        $l3 = virtualinvoke $r1.<java.io.InputStream: long skip(long)>(l2);

        $b1 = $l3 cmp 0L;

        if $b1 <= 0 goto label3;

        l2 = l2 - $l3;

        goto label2;

     label3:
        $r1 = r0.<com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$StreamReader: java.io.InputStream is>;

        $i4 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        if $i4 != -1 goto label5;

     label4:
        $l0 = $l0 - l2;

        return $l0;

     label5:
        l2 = l2 - 1L;

        goto label2;
    }
