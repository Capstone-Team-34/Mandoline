com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable extends com.bumptech.glide.load.resource.drawable.GlideDrawable
private boolean applyGravity
private final android.graphics.Rect destRect
private int height
private boolean mutated
private com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState state
private int width
    public void <init>(android.content.res.Resources, android.graphics.Bitmap)
    {
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable r0;
        android.content.res.Resources $r1;
        android.graphics.Bitmap $r2;
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState $r3;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable;

        $r1 := @parameter0: android.content.res.Resources;

        $r2 := @parameter1: android.graphics.Bitmap;

        $r3 = new com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState;

        specialinvoke $r3.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState: void <init>(android.graphics.Bitmap)>($r2);

        specialinvoke r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: void <init>(android.content.res.Resources,com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState)>($r1, $r3);

        return;
    }
    void <init>(android.content.res.Resources, com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState)
    {
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable r0;
        android.content.res.Resources $r1;
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState $r2;
        int i0, $i1;
        android.graphics.Rect $r3;
        java.lang.NullPointerException $r4;
        android.util.DisplayMetrics $r5;
        android.graphics.Bitmap $r6;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable;

        $r1 := @parameter0: android.content.res.Resources;

        $r2 := @parameter1: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState;

        specialinvoke r0.<com.bumptech.glide.load.resource.drawable.GlideDrawable: void <init>()>();

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: android.graphics.Rect destRect> = $r3;

        if $r2 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("BitmapState must not be null");

        throw $r4;

     label1:
        r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState state> = $r2;

        if $r1 == null goto label5;

        $r5 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        i0 = $r5.<android.util.DisplayMetrics: int densityDpi>;

        if i0 != 0 goto label4;

        i0 = 160;

     label2:
        $r2.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState: int targetDensity> = i0;

     label3:
        $r6 = $r2.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState: android.graphics.Bitmap bitmap>;

        $i1 = virtualinvoke $r6.<android.graphics.Bitmap: int getScaledWidth(int)>(i0);

        r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: int width> = $i1;

        $r6 = $r2.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState: android.graphics.Bitmap bitmap>;

        i0 = virtualinvoke $r6.<android.graphics.Bitmap: int getScaledHeight(int)>(i0);

        r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: int height> = i0;

        return;

     label4:
        goto label2;

     label5:
        i0 = $r2.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState: int targetDensity>;

        goto label3;
    }
    public void draw(android.graphics.Canvas)
    {
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable r0;
        android.graphics.Canvas $r1;
        android.graphics.Rect $r2, $r3;
        boolean $z0;
        int $i0, $i1;
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState $r4;
        android.graphics.Bitmap $r5;
        android.graphics.Paint $r6;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        $z0 = r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: boolean applyGravity>;

        if $z0 == 0 goto label1;

        $i0 = r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: int width>;

        $i1 = r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: int height>;

        $r3 = virtualinvoke r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: android.graphics.Rect getBounds()>();

        $r2 = r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: android.graphics.Rect destRect>;

        staticinvoke <android.view.Gravity: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect)>(119, $i0, $i1, $r3, $r2);

        r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: boolean applyGravity> = 0;

     label1:
        $r4 = r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState state>;

        $r5 = $r4.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState: android.graphics.Bitmap bitmap>;

        $r2 = r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: android.graphics.Rect destRect>;

        $r4 = r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState state>;

        $r6 = $r4.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>($r5, null, $r2, $r6);

        return;
    }
    public android.graphics.Bitmap getBitmap()
    {
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable r0;
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState $r1;
        android.graphics.Bitmap r2;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable;

        $r1 = r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState state>;

        r2 = $r1.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState: android.graphics.Bitmap bitmap>;

        return r2;
    }
    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable r0;
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState r1;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable;

        r1 = r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState state>;

        return r1;
    }
    public int getIntrinsicHeight()
    {
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable r0;
        int i0;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable;

        i0 = r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: int height>;

        return i0;
    }
    public int getIntrinsicWidth()
    {
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable r0;
        int i0;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable;

        i0 = r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: int width>;

        return i0;
    }
    public int getOpacity()
    {
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable r0;
        android.graphics.Bitmap r1;
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState $r2;
        boolean $z0;
        android.graphics.Paint $r3;
        int $i0;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable;

        $r2 = r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState state>;

        r1 = $r2.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState: android.graphics.Bitmap bitmap>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.graphics.Bitmap: boolean hasAlpha()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState state>;

        $r3 = $r2.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState: android.graphics.Paint paint>;

        $i0 = virtualinvoke $r3.<android.graphics.Paint: int getAlpha()>();

        if $i0 >= 255 goto label2;

     label1:
        return -3;

     label2:
        return -1;
    }
    public boolean isAnimated()
    {
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable r0;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable;

        return 0;
    }
    public boolean isRunning()
    {
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable r0;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable;

        return 0;
    }
    public android.graphics.drawable.Drawable mutate()
    {
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable r0;
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState $r1, $r3;
        android.graphics.drawable.Drawable $r2;
        boolean $z0;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable;

        $z0 = r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: boolean mutated>;

        if $z0 != 0 goto label1;

        $r2 = specialinvoke r0.<com.bumptech.glide.load.resource.drawable.GlideDrawable: android.graphics.drawable.Drawable mutate()>();

        if $r2 != r0 goto label1;

        $r3 = new com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState;

        $r1 = r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState state>;

        specialinvoke $r3.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState: void <init>(com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState)>($r1);

        r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState state> = $r3;

        r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: boolean mutated> = 1;

     label1:
        return r0;
    }
    protected void onBoundsChange(android.graphics.Rect)
    {
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable r0;
        android.graphics.Rect $r1;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable;

        $r1 := @parameter0: android.graphics.Rect;

        specialinvoke r0.<com.bumptech.glide.load.resource.drawable.GlideDrawable: void onBoundsChange(android.graphics.Rect)>($r1);

        r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: boolean applyGravity> = 1;

        return;
    }
    public void setAlpha(int)
    {
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable r0;
        int $i0, $i1;
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState $r1;
        android.graphics.Paint $r2;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable;

        $i0 := @parameter0: int;

        $r1 = r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState state>;

        $r2 = $r1.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState: android.graphics.Paint paint>;

        $i1 = virtualinvoke $r2.<android.graphics.Paint: int getAlpha()>();

        if $i1 == $i0 goto label1;

        $r1 = r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState state>;

        virtualinvoke $r1.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState: void setAlpha(int)>($i0);

        virtualinvoke r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: void invalidateSelf()>();

     label1:
        return;
    }
    public void setColorFilter(android.graphics.ColorFilter)
    {
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable r0;
        android.graphics.ColorFilter $r1;
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState $r2;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable;

        $r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState state>;

        virtualinvoke $r2.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState: void setColorFilter(android.graphics.ColorFilter)>($r1);

        virtualinvoke r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: void invalidateSelf()>();

        return;
    }
    public void setLoopCount(int)
    {
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable r0;
        int $i0;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable;

        $i0 := @parameter0: int;

        return;
    }
    public void start()
    {
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable r0;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable;

        return;
    }
    public void stop()
    {
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable r0;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable;

        return;
    }
