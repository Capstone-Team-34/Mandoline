com.bumptech.glide.util.ViewPreloadSizeProvider extends java.lang.Object implements com.bumptech.glide.ListPreloader$PreloadSizeProvider com.bumptech.glide.request.target.SizeReadyCallback
private int[] size
private com.bumptech.glide.util.ViewPreloadSizeProvider$SizeViewTarget viewTarget
    public void <init>()
    {
        com.bumptech.glide.util.ViewPreloadSizeProvider r0;

        r0 := @this: com.bumptech.glide.util.ViewPreloadSizeProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public void <init>(android.view.View)
    {
        com.bumptech.glide.util.ViewPreloadSizeProvider r0;
        android.view.View $r1;

        r0 := @this: com.bumptech.glide.util.ViewPreloadSizeProvider;

        $r1 := @parameter0: android.view.View;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<com.bumptech.glide.util.ViewPreloadSizeProvider: void setView(android.view.View)>($r1);

        return;
    }
    public int[] getPreloadSize(java.lang.Object, int, int)
    {
        com.bumptech.glide.util.ViewPreloadSizeProvider r0;
        java.lang.Object r1;
        int $i0, $i1;
        int[] $r2, $r3;

        r0 := @this: com.bumptech.glide.util.ViewPreloadSizeProvider;

        r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<com.bumptech.glide.util.ViewPreloadSizeProvider: int[] size>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r2 = r0.<com.bumptech.glide.util.ViewPreloadSizeProvider: int[] size>;

        $r3 = r0.<com.bumptech.glide.util.ViewPreloadSizeProvider: int[] size>;

        $i0 = lengthof $r3;

        $r2 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r2, $i0);

        return $r2;
    }
    public void onSizeReady(int, int)
    {
        com.bumptech.glide.util.ViewPreloadSizeProvider r0;
        int $i0, $i1;
        int[] $r1;

        r0 := @this: com.bumptech.glide.util.ViewPreloadSizeProvider;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = newarray (int)[2];

        $r1[0] = $i0;

        $r1[1] = $i1;

        r0.<com.bumptech.glide.util.ViewPreloadSizeProvider: int[] size> = $r1;

        r0.<com.bumptech.glide.util.ViewPreloadSizeProvider: com.bumptech.glide.util.ViewPreloadSizeProvider$SizeViewTarget viewTarget> = null;

        return;
    }
    public void setView(android.view.View)
    {
        com.bumptech.glide.util.ViewPreloadSizeProvider r0;
        android.view.View $r1;
        int[] $r2;
        com.bumptech.glide.util.ViewPreloadSizeProvider$SizeViewTarget $r3;

        r0 := @this: com.bumptech.glide.util.ViewPreloadSizeProvider;

        $r1 := @parameter0: android.view.View;

        $r2 = r0.<com.bumptech.glide.util.ViewPreloadSizeProvider: int[] size>;

        if $r2 != null goto label2;

        $r3 = r0.<com.bumptech.glide.util.ViewPreloadSizeProvider: com.bumptech.glide.util.ViewPreloadSizeProvider$SizeViewTarget viewTarget>;

        if $r3 == null goto label1;

        return;

     label1:
        $r3 = new com.bumptech.glide.util.ViewPreloadSizeProvider$SizeViewTarget;

        specialinvoke $r3.<com.bumptech.glide.util.ViewPreloadSizeProvider$SizeViewTarget: void <init>(android.view.View,com.bumptech.glide.request.target.SizeReadyCallback)>($r1, r0);

        r0.<com.bumptech.glide.util.ViewPreloadSizeProvider: com.bumptech.glide.util.ViewPreloadSizeProvider$SizeViewTarget viewTarget> = $r3;

     label2:
        return;
    }
