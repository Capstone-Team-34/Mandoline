com.bumptech.glide.manager.RequestTracker extends java.lang.Object
private boolean isPaused
private final java.util.List pendingRequests
private final java.util.Set requests
    public void <init>()
    {
        com.bumptech.glide.manager.RequestTracker r0;
        java.util.Set $r1;
        java.util.WeakHashMap $r2;
        java.util.ArrayList $r3;

        r0 := @this: com.bumptech.glide.manager.RequestTracker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.WeakHashMap;

        specialinvoke $r2.<java.util.WeakHashMap: void <init>()>();

        $r1 = staticinvoke <java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>($r2);

        r0.<com.bumptech.glide.manager.RequestTracker: java.util.Set requests> = $r1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.bumptech.glide.manager.RequestTracker: java.util.List pendingRequests> = $r3;

        return;
    }
    void addRequest(com.bumptech.glide.request.Request)
    {
        com.bumptech.glide.manager.RequestTracker r0;
        com.bumptech.glide.request.Request $r1;
        java.util.Set $r2;

        r0 := @this: com.bumptech.glide.manager.RequestTracker;

        $r1 := @parameter0: com.bumptech.glide.request.Request;

        $r2 = r0.<com.bumptech.glide.manager.RequestTracker: java.util.Set requests>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return;
    }
    public void clearRequests()
    {
        com.bumptech.glide.manager.RequestTracker r0;
        java.util.Set $r1;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.bumptech.glide.request.Request r5;

        r0 := @this: com.bumptech.glide.manager.RequestTracker;

        $r1 = r0.<com.bumptech.glide.manager.RequestTracker: java.util.Set requests>;

        $r2 = staticinvoke <com.bumptech.glide.util.Util: java.util.List getSnapshot(java.util.Collection)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.bumptech.glide.request.Request) $r4;

        interfaceinvoke r5.<com.bumptech.glide.request.Request: void clear()>();

        goto label1;

     label2:
        $r2 = r0.<com.bumptech.glide.manager.RequestTracker: java.util.List pendingRequests>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        return;
    }
    public boolean isPaused()
    {
        com.bumptech.glide.manager.RequestTracker r0;
        boolean z0;

        r0 := @this: com.bumptech.glide.manager.RequestTracker;

        z0 = r0.<com.bumptech.glide.manager.RequestTracker: boolean isPaused>;

        return z0;
    }
    public void pauseRequests()
    {
        com.bumptech.glide.manager.RequestTracker r0;
        java.util.Set $r1;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.bumptech.glide.request.Request r5;

        r0 := @this: com.bumptech.glide.manager.RequestTracker;

        r0.<com.bumptech.glide.manager.RequestTracker: boolean isPaused> = 1;

        $r1 = r0.<com.bumptech.glide.manager.RequestTracker: java.util.Set requests>;

        $r2 = staticinvoke <com.bumptech.glide.util.Util: java.util.List getSnapshot(java.util.Collection)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.bumptech.glide.request.Request) $r4;

        $z0 = interfaceinvoke r5.<com.bumptech.glide.request.Request: boolean isRunning()>();

        if $z0 == 0 goto label1;

        interfaceinvoke r5.<com.bumptech.glide.request.Request: void pause()>();

        $r2 = r0.<com.bumptech.glide.manager.RequestTracker: java.util.List pendingRequests>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r5);

        goto label1;

     label2:
        return;
    }
    public void removeRequest(com.bumptech.glide.request.Request)
    {
        com.bumptech.glide.manager.RequestTracker r0;
        com.bumptech.glide.request.Request $r1;
        java.util.Set $r2;
        java.util.List $r3;

        r0 := @this: com.bumptech.glide.manager.RequestTracker;

        $r1 := @parameter0: com.bumptech.glide.request.Request;

        $r2 = r0.<com.bumptech.glide.manager.RequestTracker: java.util.Set requests>;

        interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>($r1);

        $r3 = r0.<com.bumptech.glide.manager.RequestTracker: java.util.List pendingRequests>;

        interfaceinvoke $r3.<java.util.List: boolean remove(java.lang.Object)>($r1);

        return;
    }
    public void restartRequests()
    {
        com.bumptech.glide.manager.RequestTracker r0;
        java.util.Set $r1;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.bumptech.glide.request.Request r5;

        r0 := @this: com.bumptech.glide.manager.RequestTracker;

        $r1 = r0.<com.bumptech.glide.manager.RequestTracker: java.util.Set requests>;

        $r2 = staticinvoke <com.bumptech.glide.util.Util: java.util.List getSnapshot(java.util.Collection)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.bumptech.glide.request.Request) $r4;

        $z0 = interfaceinvoke r5.<com.bumptech.glide.request.Request: boolean isComplete()>();

        if $z0 != 0 goto label1;

        $z0 = interfaceinvoke r5.<com.bumptech.glide.request.Request: boolean isCancelled()>();

        if $z0 != 0 goto label1;

        interfaceinvoke r5.<com.bumptech.glide.request.Request: void pause()>();

        $z0 = r0.<com.bumptech.glide.manager.RequestTracker: boolean isPaused>;

        if $z0 != 0 goto label2;

        interfaceinvoke r5.<com.bumptech.glide.request.Request: void begin()>();

        goto label1;

     label2:
        $r2 = r0.<com.bumptech.glide.manager.RequestTracker: java.util.List pendingRequests>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r5);

        goto label1;

     label3:
        return;
    }
    public void resumeRequests()
    {
        com.bumptech.glide.manager.RequestTracker r0;
        java.util.Set $r1;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.bumptech.glide.request.Request r5;

        r0 := @this: com.bumptech.glide.manager.RequestTracker;

        r0.<com.bumptech.glide.manager.RequestTracker: boolean isPaused> = 0;

        $r1 = r0.<com.bumptech.glide.manager.RequestTracker: java.util.Set requests>;

        $r2 = staticinvoke <com.bumptech.glide.util.Util: java.util.List getSnapshot(java.util.Collection)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.bumptech.glide.request.Request) $r4;

        $z0 = interfaceinvoke r5.<com.bumptech.glide.request.Request: boolean isComplete()>();

        if $z0 != 0 goto label1;

        $z0 = interfaceinvoke r5.<com.bumptech.glide.request.Request: boolean isCancelled()>();

        if $z0 != 0 goto label1;

        $z0 = interfaceinvoke r5.<com.bumptech.glide.request.Request: boolean isRunning()>();

        if $z0 != 0 goto label1;

        interfaceinvoke r5.<com.bumptech.glide.request.Request: void begin()>();

        goto label1;

     label2:
        $r2 = r0.<com.bumptech.glide.manager.RequestTracker: java.util.List pendingRequests>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        return;
    }
    public void runRequest(com.bumptech.glide.request.Request)
    {
        com.bumptech.glide.manager.RequestTracker r0;
        com.bumptech.glide.request.Request $r1;
        java.util.Set $r2;
        boolean $z0;
        java.util.List $r3;

        r0 := @this: com.bumptech.glide.manager.RequestTracker;

        $r1 := @parameter0: com.bumptech.glide.request.Request;

        $r2 = r0.<com.bumptech.glide.manager.RequestTracker: java.util.Set requests>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r1);

        $z0 = r0.<com.bumptech.glide.manager.RequestTracker: boolean isPaused>;

        if $z0 != 0 goto label1;

        interfaceinvoke $r1.<com.bumptech.glide.request.Request: void begin()>();

        return;

     label1:
        $r3 = r0.<com.bumptech.glide.manager.RequestTracker: java.util.List pendingRequests>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }
