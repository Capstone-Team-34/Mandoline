com.tokenautocomplete.CharacterTokenizer extends java.lang.Object implements android.widget.MultiAutoCompleteTextView$Tokenizer
java.util.ArrayList splitChar
    void <init>(char[])
    {
        com.tokenautocomplete.CharacterTokenizer r0;
        char[] $r1;
        char c0;
        java.util.ArrayList $r2;
        java.lang.Character $r3;
        int $i1, $i2;

        r0 := @this: com.tokenautocomplete.CharacterTokenizer;

        $r1 := @parameter0: char[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        $i1 = lengthof $r1;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i1);

        r0.<com.tokenautocomplete.CharacterTokenizer: java.util.ArrayList splitChar> = $r2;

        $i1 = lengthof $r1;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        c0 = $r1[$i2];

        $r2 = r0.<com.tokenautocomplete.CharacterTokenizer: java.util.ArrayList splitChar>;

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c0);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }
    public int findTokenEnd(java.lang.CharSequence, int)
    {
        com.tokenautocomplete.CharacterTokenizer r0;
        java.lang.CharSequence $r1;
        int $i0, $i1;
        java.util.ArrayList $r2;
        char $c2;
        java.lang.Character $r3;
        boolean $z0;

        r0 := @this: com.tokenautocomplete.CharacterTokenizer;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

     label1:
        if $i0 >= $i1 goto label3;

        $r2 = r0.<com.tokenautocomplete.CharacterTokenizer: java.util.ArrayList splitChar>;

        $c2 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        return $i0;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return $i1;
    }
    public int findTokenStart(java.lang.CharSequence, int)
    {
        com.tokenautocomplete.CharacterTokenizer r0;
        java.lang.CharSequence $r1;
        int $i0, i1, $i2;
        java.util.ArrayList $r2;
        char $c3;
        java.lang.Character $r3;
        boolean $z0;

        r0 := @this: com.tokenautocomplete.CharacterTokenizer;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        i1 = $i0;

     label1:
        if i1 <= 0 goto label2;

        $r2 = r0.<com.tokenautocomplete.CharacterTokenizer: java.util.ArrayList splitChar>;

        $i2 = i1 + -1;

        $c3 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i2);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>($r3);

        if $z0 != 0 goto label2;

        i1 = i1 + -1;

        goto label1;

     label2:
        if i1 >= $i0 goto label3;

        $c3 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>(i1);

        if $c3 != 32 goto label3;

        i1 = i1 + 1;

        goto label2;

     label3:
        return i1;
    }
    public java.lang.CharSequence terminateToken(java.lang.CharSequence)
    {
        com.tokenautocomplete.CharacterTokenizer r0;
        android.text.SpannableString r1;
        java.lang.CharSequence r2;
        int $i0, $i1;
        char $c2;
        java.util.ArrayList $r3;
        java.lang.Character $r4;
        boolean $z0;
        java.lang.StringBuilder $r5;
        java.lang.Object $r6;
        java.lang.String $r7;
        android.text.Spanned $r8;

        r0 := @this: com.tokenautocomplete.CharacterTokenizer;

        r2 := @parameter0: java.lang.CharSequence;

        $i0 = interfaceinvoke r2.<java.lang.CharSequence: int length()>();

     label1:
        if $i0 <= 0 goto label2;

        $i1 = $i0 + -1;

        $c2 = interfaceinvoke r2.<java.lang.CharSequence: char charAt(int)>($i1);

        if $c2 != 32 goto label2;

        $i0 = $i0 + -1;

        goto label1;

     label2:
        if $i0 <= 0 goto label3;

        $r3 = r0.<com.tokenautocomplete.CharacterTokenizer: java.util.ArrayList splitChar>;

        $i0 = $i0 + -1;

        $c2 = interfaceinvoke r2.<java.lang.CharSequence: char charAt(int)>($i0);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean contains(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        return r2;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<com.tokenautocomplete.CharacterTokenizer: java.util.ArrayList splitChar>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i0 <= 1 goto label5;

        $r3 = r0.<com.tokenautocomplete.CharacterTokenizer: java.util.ArrayList splitChar>;

        $r6 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r4 = (java.lang.Character) $r6;

        $c2 = virtualinvoke $r4.<java.lang.Character: char charValue()>();

        if $c2 != 32 goto label5;

        $r3 = r0.<com.tokenautocomplete.CharacterTokenizer: java.util.ArrayList splitChar>;

        $r6 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(1);

        $r4 = (java.lang.Character) $r6;

     label4:
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = r2 instanceof android.text.Spanned;

        if $z0 == 0 goto label6;

        r1 = new android.text.SpannableString;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<android.text.SpannableString: void <init>(java.lang.CharSequence)>($r7);

        $r8 = (android.text.Spanned) r2;

        $i0 = interfaceinvoke r2.<java.lang.CharSequence: int length()>();

        staticinvoke <android.text.TextUtils: void copySpansFrom(android.text.Spanned,int,int,java.lang.Class,android.text.Spannable,int)>($r8, 0, $i0, class "Ljava/lang/Object;", r1, 0);

        return r1;

     label5:
        $r3 = r0.<com.tokenautocomplete.CharacterTokenizer: java.util.ArrayList splitChar>;

        $r6 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r4 = (java.lang.Character) $r6;

        goto label4;

     label6:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
