com.tokenautocomplete.TokenCompleteTextView extends android.widget.MultiAutoCompleteTextView implements android.widget.TextView$OnEditorActionListener
static final boolean $assertionsDisabled
public static final java.lang.String TAG
private boolean allowCollapse
private boolean allowDuplicates
private com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle deletionStyle
private boolean focusChanging
private java.util.List hiddenSpans
private boolean hintVisible
boolean inInvalidate
private boolean initialized
private android.text.Layout lastLayout
private com.tokenautocomplete.TokenCompleteTextView$TokenListener listener
private java.util.ArrayList objects
private boolean performBestGuess
private java.lang.CharSequence prefix
private boolean savingState
private java.lang.Object selectedObject
private boolean shouldFocusNext
private com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher spanWatcher
private char[] splitChar
private com.tokenautocomplete.TokenCompleteTextView$TokenTextWatcher textWatcher
private com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle tokenClickStyle
private int tokenLimit
private android.widget.MultiAutoCompleteTextView$Tokenizer tokenizer
    static void <clinit>()
    {
        boolean $z0;
        java.lang.Class $r0;

        $r0 = class "Lcom/tokenautocomplete/TokenCompleteTextView;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        <com.tokenautocomplete.TokenCompleteTextView: boolean $assertionsDisabled> = $z0;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }
    public void <init>(android.content.Context)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        android.content.Context $r1;
        char[] $r2;
        com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle $r3;
        com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle $r4;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.MultiAutoCompleteTextView: void <init>(android.content.Context)>($r1);

        $r2 = newarray (char)[2];

        $r2[0] = 44;

        $r2[1] = 59;

        r0.<com.tokenautocomplete.TokenCompleteTextView: char[] splitChar> = $r2;

        $r3 = <com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle: com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle _Parent>;

        r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle deletionStyle> = $r3;

        $r4 = <com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle: com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle None>;

        r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle tokenClickStyle> = $r4;

        r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.CharSequence prefix> = "";

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean hintVisible> = 0;

        r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Layout lastLayout> = null;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean allowDuplicates> = 1;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean focusChanging> = 0;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean initialized> = 0;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean performBestGuess> = 1;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean savingState> = 0;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean shouldFocusNext> = 0;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean allowCollapse> = 1;

        r0.<com.tokenautocomplete.TokenCompleteTextView: int tokenLimit> = -1;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean inInvalidate> = 0;

        specialinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void init()>();

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        char[] $r3;
        com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle $r4;
        com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle $r5;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.MultiAutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r3 = newarray (char)[2];

        $r3[0] = 44;

        $r3[1] = 59;

        r0.<com.tokenautocomplete.TokenCompleteTextView: char[] splitChar> = $r3;

        $r4 = <com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle: com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle _Parent>;

        r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle deletionStyle> = $r4;

        $r5 = <com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle: com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle None>;

        r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle tokenClickStyle> = $r5;

        r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.CharSequence prefix> = "";

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean hintVisible> = 0;

        r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Layout lastLayout> = null;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean allowDuplicates> = 1;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean focusChanging> = 0;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean initialized> = 0;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean performBestGuess> = 1;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean savingState> = 0;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean shouldFocusNext> = 0;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean allowCollapse> = 1;

        r0.<com.tokenautocomplete.TokenCompleteTextView: int tokenLimit> = -1;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean inInvalidate> = 0;

        specialinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void init()>();

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        char[] $r3;
        com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle $r4;
        com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle $r5;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.widget.MultiAutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r3 = newarray (char)[2];

        $r3[0] = 44;

        $r3[1] = 59;

        r0.<com.tokenautocomplete.TokenCompleteTextView: char[] splitChar> = $r3;

        $r4 = <com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle: com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle _Parent>;

        r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle deletionStyle> = $r4;

        $r5 = <com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle: com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle None>;

        r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle tokenClickStyle> = $r5;

        r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.CharSequence prefix> = "";

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean hintVisible> = 0;

        r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Layout lastLayout> = null;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean allowDuplicates> = 1;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean focusChanging> = 0;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean initialized> = 0;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean performBestGuess> = 1;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean savingState> = 0;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean shouldFocusNext> = 0;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean allowCollapse> = 1;

        r0.<com.tokenautocomplete.TokenCompleteTextView: int tokenLimit> = -1;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean inInvalidate> = 0;

        specialinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void init()>();

        return;
    }
    static void access$1000(com.tokenautocomplete.TokenCompleteTextView)
    {
        com.tokenautocomplete.TokenCompleteTextView $r0;

        $r0 := @parameter0: com.tokenautocomplete.TokenCompleteTextView;

        specialinvoke $r0.<com.tokenautocomplete.TokenCompleteTextView: void updateCountSpan()>();

        return;
    }
    static void access$1100(com.tokenautocomplete.TokenCompleteTextView, com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan)
    {
        com.tokenautocomplete.TokenCompleteTextView $r0;
        com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan $r1;

        $r0 := @parameter0: com.tokenautocomplete.TokenCompleteTextView;

        $r1 := @parameter1: com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan;

        specialinvoke $r0.<com.tokenautocomplete.TokenCompleteTextView: void removeSpan(com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan)>($r1);

        return;
    }
    static com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle access$1200(com.tokenautocomplete.TokenCompleteTextView)
    {
        com.tokenautocomplete.TokenCompleteTextView $r0;
        com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle r1;

        $r0 := @parameter0: com.tokenautocomplete.TokenCompleteTextView;

        r1 = $r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle tokenClickStyle>;

        return r1;
    }
    static void access$1300(com.tokenautocomplete.TokenCompleteTextView)
    {
        com.tokenautocomplete.TokenCompleteTextView $r0;

        $r0 := @parameter0: com.tokenautocomplete.TokenCompleteTextView;

        specialinvoke $r0.<com.tokenautocomplete.TokenCompleteTextView: void clearSelections()>();

        return;
    }
    static boolean access$1400(com.tokenautocomplete.TokenCompleteTextView)
    {
        com.tokenautocomplete.TokenCompleteTextView $r0;
        boolean z0;

        $r0 := @parameter0: com.tokenautocomplete.TokenCompleteTextView;

        z0 = $r0.<com.tokenautocomplete.TokenCompleteTextView: boolean savingState>;

        return z0;
    }
    static boolean access$1500(com.tokenautocomplete.TokenCompleteTextView)
    {
        com.tokenautocomplete.TokenCompleteTextView $r0;
        boolean z0;

        $r0 := @parameter0: com.tokenautocomplete.TokenCompleteTextView;

        z0 = $r0.<com.tokenautocomplete.TokenCompleteTextView: boolean focusChanging>;

        return z0;
    }
    static com.tokenautocomplete.TokenCompleteTextView$TokenListener access$1600(com.tokenautocomplete.TokenCompleteTextView)
    {
        com.tokenautocomplete.TokenCompleteTextView $r0;
        com.tokenautocomplete.TokenCompleteTextView$TokenListener r1;

        $r0 := @parameter0: com.tokenautocomplete.TokenCompleteTextView;

        r1 = $r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenListener listener>;

        return r1;
    }
    static void access$1700(com.tokenautocomplete.TokenCompleteTextView)
    {
        com.tokenautocomplete.TokenCompleteTextView $r0;

        $r0 := @parameter0: com.tokenautocomplete.TokenCompleteTextView;

        specialinvoke $r0.<com.tokenautocomplete.TokenCompleteTextView: void updateHint()>();

        return;
    }
    static boolean access$1900(com.tokenautocomplete.TokenCompleteTextView, boolean)
    {
        com.tokenautocomplete.TokenCompleteTextView $r0;
        boolean $z0;

        $r0 := @parameter0: com.tokenautocomplete.TokenCompleteTextView;

        $z0 := @parameter1: boolean;

        $z0 = specialinvoke $r0.<com.tokenautocomplete.TokenCompleteTextView: boolean deleteSelectedObject(boolean)>($z0);

        return $z0;
    }
    static int access$200(com.tokenautocomplete.TokenCompleteTextView)
    {
        com.tokenautocomplete.TokenCompleteTextView $r0;
        int i0;

        $r0 := @parameter0: com.tokenautocomplete.TokenCompleteTextView;

        i0 = $r0.<com.tokenautocomplete.TokenCompleteTextView: int tokenLimit>;

        return i0;
    }
    static java.util.ArrayList access$300(com.tokenautocomplete.TokenCompleteTextView)
    {
        com.tokenautocomplete.TokenCompleteTextView $r0;
        java.util.ArrayList r1;

        $r0 := @parameter0: com.tokenautocomplete.TokenCompleteTextView;

        r1 = $r0.<com.tokenautocomplete.TokenCompleteTextView: java.util.ArrayList objects>;

        return r1;
    }
    static boolean access$400(com.tokenautocomplete.TokenCompleteTextView, char)
    {
        com.tokenautocomplete.TokenCompleteTextView $r0;
        char $c0;
        boolean $z0;

        $r0 := @parameter0: com.tokenautocomplete.TokenCompleteTextView;

        $c0 := @parameter1: char;

        $z0 = specialinvoke $r0.<com.tokenautocomplete.TokenCompleteTextView: boolean isSplitChar(char)>($c0);

        return $z0;
    }
    static java.lang.CharSequence access$500(com.tokenautocomplete.TokenCompleteTextView)
    {
        com.tokenautocomplete.TokenCompleteTextView $r0;
        java.lang.CharSequence r1;

        $r0 := @parameter0: com.tokenautocomplete.TokenCompleteTextView;

        r1 = $r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.CharSequence prefix>;

        return r1;
    }
    static boolean access$600(com.tokenautocomplete.TokenCompleteTextView)
    {
        com.tokenautocomplete.TokenCompleteTextView $r0;
        boolean z0;

        $r0 := @parameter0: com.tokenautocomplete.TokenCompleteTextView;

        z0 = $r0.<com.tokenautocomplete.TokenCompleteTextView: boolean allowDuplicates>;

        return z0;
    }
    static void access$700(com.tokenautocomplete.TokenCompleteTextView, java.lang.Object, java.lang.CharSequence)
    {
        com.tokenautocomplete.TokenCompleteTextView $r0;
        java.lang.Object $r1;
        java.lang.CharSequence $r2;

        $r0 := @parameter0: com.tokenautocomplete.TokenCompleteTextView;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.CharSequence;

        specialinvoke $r0.<com.tokenautocomplete.TokenCompleteTextView: void insertSpan(java.lang.Object,java.lang.CharSequence)>($r1, $r2);

        return;
    }
    static java.util.List access$800(com.tokenautocomplete.TokenCompleteTextView)
    {
        com.tokenautocomplete.TokenCompleteTextView $r0;
        java.util.List r1;

        $r0 := @parameter0: com.tokenautocomplete.TokenCompleteTextView;

        r1 = $r0.<com.tokenautocomplete.TokenCompleteTextView: java.util.List hiddenSpans>;

        return r1;
    }
    static com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher access$900(com.tokenautocomplete.TokenCompleteTextView)
    {
        com.tokenautocomplete.TokenCompleteTextView $r0;
        com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher r1;

        $r0 := @parameter0: com.tokenautocomplete.TokenCompleteTextView;

        r1 = $r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher spanWatcher>;

        return r1;
    }
    private void api16Invalidate()
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        boolean $z0;
        float $f0, $f1, $f2;
        int $i0;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $z0 = r0.<com.tokenautocomplete.TokenCompleteTextView: boolean initialized>;

        if $z0 == 0 goto label1;

        $z0 = r0.<com.tokenautocomplete.TokenCompleteTextView: boolean inInvalidate>;

        if $z0 != 0 goto label1;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean inInvalidate> = 1;

        $f0 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: float getShadowRadius()>();

        $f1 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: float getShadowDx()>();

        $f2 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: float getShadowDy()>();

        $i0 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: int getShadowColor()>();

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void setShadowLayer(float,float,float,int)>($f0, $f1, $f2, $i0);

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean inInvalidate> = 0;

     label1:
        return;
    }
    private android.text.SpannableStringBuilder buildSpannableForText(java.lang.CharSequence)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        java.lang.CharSequence $r1;
        char c0;
        char[] $r2;
        android.text.SpannableStringBuilder $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        android.widget.MultiAutoCompleteTextView$Tokenizer $r6;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.tokenautocomplete.TokenCompleteTextView: char[] splitChar>;

        c0 = $r2[0];

        $r3 = new android.text.SpannableStringBuilder;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = r0.<com.tokenautocomplete.TokenCompleteTextView: android.widget.MultiAutoCompleteTextView$Tokenizer tokenizer>;

        $r1 = interfaceinvoke $r6.<android.widget.MultiAutoCompleteTextView$Tokenizer: java.lang.CharSequence terminateToken(java.lang.CharSequence)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>($r5);

        return $r3;
    }
    private void clearSelections()
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan r1;
        android.view.View $r2;
        com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle $r3;
        boolean $z0;
        android.text.Editable $r4;
        int $i0, $i1;
        java.lang.Object[] $r5;
        com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan[] r6;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $r3 = r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle tokenClickStyle>;

        if $r3 == null goto label4;

        $r3 = r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle tokenClickStyle>;

        $z0 = virtualinvoke $r3.<com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle: boolean isSelectable()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Editable getText()>();

        if $r4 == null goto label4;

        $i0 = interfaceinvoke $r4.<android.text.Editable: int length()>();

        $r5 = interfaceinvoke $r4.<android.text.Editable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "Lcom/tokenautocomplete/TokenCompleteTextView$TokenImageSpan;");

        r6 = (com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan[]) $r5;

        $i0 = lengthof r6;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        r1 = r6[$i1];

        $r2 = r1.<com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan: android.view.View view>;

        virtualinvoke $r2.<android.view.View: void setSelected(boolean)>(0);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void invalidate()>();

     label4:
        return;
    }
    private boolean deleteSelectedObject(boolean)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan r1;
        boolean z0, $z1;
        int $i0, $i1;
        com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle $r2;
        android.text.Editable $r3;
        java.lang.Object[] $r4;
        com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan[] r5;
        android.view.View $r6;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        z0 := @parameter0: boolean;

        $i0 = 0;

        $r2 = r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle tokenClickStyle>;

        if $r2 == null goto label3;

        $r2 = r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle tokenClickStyle>;

        $z1 = virtualinvoke $r2.<com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle: boolean isSelectable()>();

        if $z1 == 0 goto label3;

        $r3 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Editable getText()>();

        if $r3 != null goto label1;

        return z0;

     label1:
        $i1 = interfaceinvoke $r3.<android.text.Editable: int length()>();

        $r4 = interfaceinvoke $r3.<android.text.Editable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i1, class "Lcom/tokenautocomplete/TokenCompleteTextView$TokenImageSpan;");

        r5 = (com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan[]) $r4;

        $i1 = lengthof r5;

     label2:
        if $i0 >= $i1 goto label3;

        r1 = r5[$i0];

        $r6 = r1.<com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan: android.view.View view>;

        $z1 = virtualinvoke $r6.<android.view.View: boolean isSelected()>();

        if $z1 == 0 goto label4;

        specialinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void removeSpan(com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan)>(r1);

        z0 = 1;

     label3:
        return z0;

     label4:
        $i0 = $i0 + 1;

        goto label2;
    }
    private int getCorrectedTokenBeginning(int)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        int $i0, $i1;
        android.widget.MultiAutoCompleteTextView$Tokenizer $r1;
        android.text.Editable $r2;
        java.lang.CharSequence $r3;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $i0 := @parameter0: int;

        $r1 = r0.<com.tokenautocomplete.TokenCompleteTextView: android.widget.MultiAutoCompleteTextView$Tokenizer tokenizer>;

        $r2 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Editable getText()>();

        $i0 = interfaceinvoke $r1.<android.widget.MultiAutoCompleteTextView$Tokenizer: int findTokenStart(java.lang.CharSequence,int)>($r2, $i0);

        $r3 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.CharSequence prefix>;

        $i1 = interfaceinvoke $r3.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label1;

        $r3 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.CharSequence prefix>;

        $i0 = interfaceinvoke $r3.<java.lang.CharSequence: int length()>();

     label1:
        return $i0;
    }
    private int getCorrectedTokenEnd()
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        android.text.Editable $r1;
        int $i0;
        android.widget.MultiAutoCompleteTextView$Tokenizer $r2;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $r1 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Editable getText()>();

        $i0 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: int getSelectionEnd()>();

        $r2 = r0.<com.tokenautocomplete.TokenCompleteTextView: android.widget.MultiAutoCompleteTextView$Tokenizer tokenizer>;

        $i0 = interfaceinvoke $r2.<android.widget.MultiAutoCompleteTextView$Tokenizer: int findTokenEnd(java.lang.CharSequence,int)>($r1, $i0);

        return $i0;
    }
    private void handleDone()
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.view.inputmethod.InputMethodManager r3;
        android.os.IBinder $r4;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void performCompletion()>();

        $r1 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("input_method");

        r3 = (android.view.inputmethod.InputMethodManager) $r2;

        $r4 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.os.IBinder getWindowToken()>();

        virtualinvoke r3.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r4, 0);

        return;
    }
    private void init()
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        boolean $z0;
        android.widget.MultiAutoCompleteTextView$CommaTokenizer $r1;
        java.util.ArrayList $r2;
        android.text.Editable $r3;
        java.lang.AssertionError $r4;
        com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher $r5;
        com.tokenautocomplete.TokenCompleteTextView$TokenTextWatcher $r6;
        int $i0;
        android.text.InputFilter[] $r7;
        com.tokenautocomplete.TokenCompleteTextView$1 $r8;
        com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle $r9;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $z0 = r0.<com.tokenautocomplete.TokenCompleteTextView: boolean initialized>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new android.widget.MultiAutoCompleteTextView$CommaTokenizer;

        specialinvoke $r1.<android.widget.MultiAutoCompleteTextView$CommaTokenizer: void <init>()>();

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void setTokenizer(android.widget.MultiAutoCompleteTextView$Tokenizer)>($r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.tokenautocomplete.TokenCompleteTextView: java.util.ArrayList objects> = $r2;

        $r3 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Editable getText()>();

        $z0 = <com.tokenautocomplete.TokenCompleteTextView: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if $r3 != null goto label2;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label2:
        $r5 = new com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher;

        specialinvoke $r5.<com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher: void <init>(com.tokenautocomplete.TokenCompleteTextView,com.tokenautocomplete.TokenCompleteTextView$1)>(r0, null);

        r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher spanWatcher> = $r5;

        $r6 = new com.tokenautocomplete.TokenCompleteTextView$TokenTextWatcher;

        specialinvoke $r6.<com.tokenautocomplete.TokenCompleteTextView$TokenTextWatcher: void <init>(com.tokenautocomplete.TokenCompleteTextView,com.tokenautocomplete.TokenCompleteTextView$1)>(r0, null);

        r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenTextWatcher textWatcher> = $r6;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.tokenautocomplete.TokenCompleteTextView: java.util.List hiddenSpans> = $r2;

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void addListeners()>();

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void setTextIsSelectable(boolean)>(0);

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void setLongClickable(boolean)>(0);

        $i0 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: int getInputType()>();

        $i0 = $i0 | 524288;

        $i0 = $i0 | 65536;

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void setInputType(int)>($i0);

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void setHorizontallyScrolling(boolean)>(0);

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void setOnEditorActionListener(android.widget.TextView$OnEditorActionListener)>(r0);

        $r7 = newarray (android.text.InputFilter)[1];

        $r8 = new com.tokenautocomplete.TokenCompleteTextView$1;

        specialinvoke $r8.<com.tokenautocomplete.TokenCompleteTextView$1: void <init>(com.tokenautocomplete.TokenCompleteTextView)>(r0);

        $r7[0] = $r8;

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void setFilters(android.text.InputFilter[])>($r7);

        $r9 = <com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle: com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle Clear>;

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void setDeletionStyle(com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle)>($r9);

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean initialized> = 1;

        return;
    }
    private void insertSpan(com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan r1;
        java.lang.Object $r2;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        r1 := @parameter0: com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan;

        $r2 = virtualinvoke r1.<com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan: java.lang.Object getToken()>();

        specialinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void insertSpan(java.lang.Object)>($r2);

        return;
    }
    private void insertSpan(java.lang.Object)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        java.lang.Object r1;
        com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle $r2, $r3;
        java.lang.String $r4;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle deletionStyle>;

        $r3 = <com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle: com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle ToString>;

        if $r2 != $r3 goto label3;

        if r1 == null goto label2;

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

     label1:
        specialinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void insertSpan(java.lang.Object,java.lang.CharSequence)>(r1, $r4);

        return;

     label2:
        $r4 = "";

        goto label1;

     label3:
        $r4 = "";

        goto label1;
    }
    private void insertSpan(java.lang.Object, java.lang.CharSequence)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        java.lang.Object r1;
        java.lang.CharSequence $r2;
        android.text.SpannableStringBuilder $r3;
        com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan $r4;
        android.text.Editable $r5;
        boolean $z0;
        java.util.List $r6;
        int $i0, $i1;
        java.util.ArrayList $r7;
        com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher $r8;
        java.lang.String $r9;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.CharSequence;

        $r3 = specialinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.SpannableStringBuilder buildSpannableForText(java.lang.CharSequence)>($r2);

        $r4 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan buildSpanForObject(java.lang.Object)>(r1);

        $r5 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Editable getText()>();

        if $r5 != null goto label1;

        return;

     label1:
        $z0 = r0.<com.tokenautocomplete.TokenCompleteTextView: boolean allowCollapse>;

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: boolean isFocused()>();

        if $z0 != 0 goto label2;

        $r6 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.util.List hiddenSpans>;

        $z0 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label7;

     label2:
        $i0 = interfaceinvoke $r5.<android.text.Editable: int length()>();

        $z0 = r0.<com.tokenautocomplete.TokenCompleteTextView: boolean hintVisible>;

        if $z0 == 0 goto label5;

        $r2 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.CharSequence prefix>;

        $i1 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        $i0 = $i1;

        interfaceinvoke $r5.<android.text.Editable: android.text.Editable insert(int,java.lang.CharSequence)>($i1, $r3);

     label3:
        $i1 = virtualinvoke $r3.<android.text.SpannableStringBuilder: int length()>();

        $i1 = $i1 + $i0;

        $i1 = $i1 + -1;

        interfaceinvoke $r5.<android.text.Editable: void setSpan(java.lang.Object,int,int,int)>($r4, $i0, $i1, 33);

        $z0 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: boolean isFocused()>();

        if $z0 != 0 goto label4;

        $z0 = r0.<com.tokenautocomplete.TokenCompleteTextView: boolean allowCollapse>;

        if $z0 == 0 goto label4;

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void performCollapse(boolean)>(0);

     label4:
        $r7 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.util.ArrayList objects>;

        $z0 = virtualinvoke $r7.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label8;

        $r8 = r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher spanWatcher>;

        virtualinvoke $r8.<com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>($r5, $r4, 0, 0);

        return;

     label5:
        $r9 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.String currentCompletionText()>();

        if $r9 == null goto label6;

        $i1 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i1 <= 0 goto label6;

        $i0 = staticinvoke <android.text.TextUtils: int indexOf(java.lang.CharSequence,java.lang.CharSequence)>($r5, $r9);

     label6:
        interfaceinvoke $r5.<android.text.Editable: android.text.Editable insert(int,java.lang.CharSequence)>($i0, $r3);

        goto label3;

     label7:
        $r6 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.util.List hiddenSpans>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r8 = r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher spanWatcher>;

        virtualinvoke $r8.<com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>($r5, $r4, 0, 0);

        specialinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void updateCountSpan()>();

     label8:
        return;
    }
    private boolean isSplitChar(char)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        char $c0, c1;
        char[] $r1;
        int $i2, $i3;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $c0 := @parameter0: char;

        $r1 = r0.<com.tokenautocomplete.TokenCompleteTextView: char[] splitChar>;

        $i2 = lengthof $r1;

        $i3 = 0;

     label1:
        if $i3 >= $i2 goto label3;

        c1 = $r1[$i3];

        if $c0 != c1 goto label2;

        return 1;

     label2:
        $i3 = $i3 + 1;

        goto label1;

     label3:
        return 0;
    }
    private void removeSpan(com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan r1;
        android.text.Editable $r2;
        int $i0, $i1;
        java.lang.Object[] $r3;
        com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher[] r4;
        com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher $r5;
        boolean $z0;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        r1 := @parameter0: com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan;

        $r2 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Editable getText()>();

        if $r2 != null goto label1;

        return;

     label1:
        $i0 = interfaceinvoke $r2.<android.text.Editable: int length()>();

        $r3 = interfaceinvoke $r2.<android.text.Editable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "Lcom/tokenautocomplete/TokenCompleteTextView$TokenSpanWatcher;");

        r4 = (com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher[]) $r3;

        $i0 = lengthof r4;

        if $i0 != 0 goto label2;

        $r5 = r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher spanWatcher>;

        $i0 = interfaceinvoke $r2.<android.text.Editable: int getSpanStart(java.lang.Object)>(r1);

        $i1 = interfaceinvoke $r2.<android.text.Editable: int getSpanEnd(java.lang.Object)>(r1);

        virtualinvoke $r5.<com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>($r2, r1, $i0, $i1);

     label2:
        $i0 = interfaceinvoke $r2.<android.text.Editable: int getSpanStart(java.lang.Object)>(r1);

        $i1 = interfaceinvoke $r2.<android.text.Editable: int getSpanEnd(java.lang.Object)>(r1);

        $i1 = $i1 + 1;

        interfaceinvoke $r2.<android.text.Editable: android.text.Editable delete(int,int)>($i0, $i1);

        $z0 = r0.<com.tokenautocomplete.TokenCompleteTextView: boolean allowCollapse>;

        if $z0 == 0 goto label3;

        $z0 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: boolean isFocused()>();

        if $z0 != 0 goto label3;

        specialinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void updateCountSpan()>();

     label3:
        return;
    }
    private void updateCountSpan()
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        com.tokenautocomplete.CountSpan r1;
        int $i0, $i1, $i2, $i3, $i4;
        android.text.Editable $r2;
        java.lang.Object[] $r3;
        com.tokenautocomplete.CountSpan[] r4;
        java.util.List $r5;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $i0 = 0;

        $r2 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Editable getText()>();

        $i1 = interfaceinvoke $r2.<android.text.Editable: int length()>();

        $r3 = interfaceinvoke $r2.<android.text.Editable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i1, class "Lcom/tokenautocomplete/CountSpan;");

        r4 = (com.tokenautocomplete.CountSpan[]) $r3;

        $r5 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.util.List hiddenSpans>;

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i2 = lengthof r4;

     label1:
        if $i0 >= $i2 goto label4;

        r1 = r4[$i0];

        if $i1 != 0 goto label3;

        $i3 = interfaceinvoke $r2.<android.text.Editable: int getSpanStart(java.lang.Object)>(r1);

        $i4 = interfaceinvoke $r2.<android.text.Editable: int getSpanEnd(java.lang.Object)>(r1);

        interfaceinvoke $r2.<android.text.Editable: android.text.Editable delete(int,int)>($i3, $i4);

        interfaceinvoke $r2.<android.text.Editable: void removeSpan(java.lang.Object)>(r1);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r5 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.util.List hiddenSpans>;

        $i3 = interfaceinvoke $r5.<java.util.List: int size()>();

        virtualinvoke r1.<com.tokenautocomplete.CountSpan: void setCount(int)>($i3);

        $i3 = interfaceinvoke $r2.<android.text.Editable: int getSpanStart(java.lang.Object)>(r1);

        $i4 = interfaceinvoke $r2.<android.text.Editable: int getSpanEnd(java.lang.Object)>(r1);

        interfaceinvoke $r2.<android.text.Editable: void setSpan(java.lang.Object,int,int,int)>(r1, $i3, $i4, 33);

        goto label2;

     label4:
        return;
    }
    private void updateHint()
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        com.tokenautocomplete.HintSpan r1;
        android.text.Editable $r2;
        java.lang.CharSequence $r3, $r4;
        int $i0, i1, $i2;
        java.lang.Object[] $r5;
        com.tokenautocomplete.HintSpan[] r6;
        android.graphics.Typeface $r7;
        android.content.res.ColorStateList $r8;
        float $f0;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $r2 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Editable getText()>();

        $r3 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.CharSequence getHint()>();

        if $r2 == null goto label5;

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.CharSequence prefix>;

        $i0 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label5;

        $i0 = interfaceinvoke $r2.<android.text.Editable: int length()>();

        $r5 = interfaceinvoke $r2.<android.text.Editable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "Lcom/tokenautocomplete/HintSpan;");

        r6 = (com.tokenautocomplete.HintSpan[]) $r5;

        r1 = null;

        $r4 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.CharSequence prefix>;

        $i0 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        i1 = $i0;

        $i2 = lengthof r6;

        if $i2 <= 0 goto label2;

        r1 = r6[0];

        i1 = interfaceinvoke $r2.<android.text.Editable: int getSpanEnd(java.lang.Object)>(r1);

        $i2 = interfaceinvoke $r2.<android.text.Editable: int getSpanStart(java.lang.Object)>(r1);

        i1 = i1 - $i2;

        i1 = $i0 + i1;

     label2:
        $i0 = interfaceinvoke $r2.<android.text.Editable: int length()>();

        if $i0 != i1 goto label4;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean hintVisible> = 1;

        if r1 != null goto label5;

        $r7 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.graphics.Typeface getTypeface()>();

        $i0 = 0;

        if $r7 == null goto label3;

        $i0 = virtualinvoke $r7.<android.graphics.Typeface: int getStyle()>();

     label3:
        $r8 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.content.res.ColorStateList getHintTextColors()>();

        r1 = new com.tokenautocomplete.HintSpan;

        $f0 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: float getTextSize()>();

        i1 = (int) $f0;

        specialinvoke r1.<com.tokenautocomplete.HintSpan: void <init>(java.lang.String,int,int,android.content.res.ColorStateList,android.content.res.ColorStateList)>(null, $i0, i1, $r8, $r8);

        $r4 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.CharSequence prefix>;

        $i0 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        interfaceinvoke $r2.<android.text.Editable: android.text.Editable insert(int,java.lang.CharSequence)>($i0, $r3);

        $r3 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.CharSequence prefix>;

        $i0 = interfaceinvoke $r3.<java.lang.CharSequence: int length()>();

        $r3 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.CharSequence prefix>;

        i1 = interfaceinvoke $r3.<java.lang.CharSequence: int length()>();

        $r3 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.CharSequence getHint()>();

        $i2 = interfaceinvoke $r3.<java.lang.CharSequence: int length()>();

        i1 = i1 + $i2;

        interfaceinvoke $r2.<android.text.Editable: void setSpan(java.lang.Object,int,int,int)>(r1, $i0, i1, 33);

        $r3 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.CharSequence prefix>;

        $i0 = interfaceinvoke $r3.<java.lang.CharSequence: int length()>();

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void setSelection(int)>($i0);

        return;

     label4:
        if r1 == null goto label5;

        $i0 = interfaceinvoke $r2.<android.text.Editable: int getSpanStart(java.lang.Object)>(r1);

        i1 = interfaceinvoke $r2.<android.text.Editable: int getSpanEnd(java.lang.Object)>(r1);

        interfaceinvoke $r2.<android.text.Editable: void removeSpan(java.lang.Object)>(r1);

        interfaceinvoke $r2.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>($i0, i1, "");

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean hintVisible> = 0;

     label5:
        return;
    }
    protected void addListeners()
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        android.text.Editable $r1;
        com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher $r2;
        int $i0;
        com.tokenautocomplete.TokenCompleteTextView$TokenTextWatcher $r3;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $r1 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Editable getText()>();

        if $r1 == null goto label1;

        $r2 = r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher spanWatcher>;

        $i0 = interfaceinvoke $r1.<android.text.Editable: int length()>();

        interfaceinvoke $r1.<android.text.Editable: void setSpan(java.lang.Object,int,int,int)>($r2, 0, $i0, 18);

        $r3 = r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenTextWatcher textWatcher>;

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void addTextChangedListener(android.text.TextWatcher)>($r3);

     label1:
        return;
    }
    public void addObject(java.lang.Object)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        java.lang.Object r1;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void addObject(java.lang.Object,java.lang.CharSequence)>(r1, "");

        return;
    }
    public void addObject(java.lang.Object, java.lang.CharSequence)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        java.lang.Object r1;
        java.lang.CharSequence $r2;
        com.tokenautocomplete.TokenCompleteTextView$3 $r3;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.CharSequence;

        $r3 = new com.tokenautocomplete.TokenCompleteTextView$3;

        specialinvoke $r3.<com.tokenautocomplete.TokenCompleteTextView$3: void <init>(com.tokenautocomplete.TokenCompleteTextView,java.lang.Object,java.lang.CharSequence)>(r0, r1, $r2);

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: boolean post(java.lang.Runnable)>($r3);

        return;
    }
    public void allowCollapse(boolean)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        boolean $z0;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $z0 := @parameter0: boolean;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean allowCollapse> = $z0;

        return;
    }
    public void allowDuplicates(boolean)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        boolean $z0;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $z0 := @parameter0: boolean;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean allowDuplicates> = $z0;

        return;
    }
    protected com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan buildSpanForObject(java.lang.Object)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        java.lang.Object r1;
        android.view.View $r2;
        com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan $r3;
        float $f0;
        int $i0;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.view.View getViewForObject(java.lang.Object)>(r1);

        $r3 = new com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan;

        $f0 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: float maxTextWidth()>();

        $i0 = (int) $f0;

        specialinvoke $r3.<com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan: void <init>(com.tokenautocomplete.TokenCompleteTextView,android.view.View,java.lang.Object,int)>(r0, $r2, r1, $i0);

        return $r3;
    }
    public boolean canDeleteSelection(int)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan r1;
        java.util.ArrayList $r2;
        android.text.Editable $r3;
        java.lang.Object[] $r4;
        com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan[] r5;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $i0 := @parameter0: int;

        $r2 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.util.ArrayList objects>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i1 >= 1 goto label1;

        return 1;

     label1:
        $i1 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: int getSelectionEnd()>();

        if $i0 != 1 goto label5;

        $i0 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: int getSelectionStart()>();

     label2:
        $r3 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Editable getText()>();

        $i2 = interfaceinvoke $r3.<android.text.Editable: int length()>();

        $r4 = interfaceinvoke $r3.<android.text.Editable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i2, class "Lcom/tokenautocomplete/TokenCompleteTextView$TokenImageSpan;");

        r5 = (com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan[]) $r4;

        $i2 = lengthof r5;

        $i3 = 0;

     label3:
        if $i3 >= $i2 goto label8;

        r1 = r5[$i3];

        $i4 = interfaceinvoke $r3.<android.text.Editable: int getSpanStart(java.lang.Object)>(r1);

        $i5 = interfaceinvoke $r3.<android.text.Editable: int getSpanEnd(java.lang.Object)>(r1);

        $r6 = staticinvoke <com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan: java.lang.Object access$1800(com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan)>(r1);

        $z0 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: boolean isTokenRemovable(java.lang.Object)>($r6);

        if $z0 == 0 goto label6;

     label4:
        $i3 = $i3 + 1;

        goto label3;

     label5:
        $i0 = $i1 - $i0;

        goto label2;

     label6:
        if $i0 != $i1 goto label7;

        $i4 = $i5 + 1;

        if $i4 != $i1 goto label4;

        return 0;

     label7:
        if $i0 > $i4 goto label4;

        $i4 = $i5 + 1;

        if $i4 > $i1 goto label4;

        return 0;

     label8:
        return 1;
    }
    public void clear()
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        com.tokenautocomplete.TokenCompleteTextView$5 $r1;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $r1 = new com.tokenautocomplete.TokenCompleteTextView$5;

        specialinvoke $r1.<com.tokenautocomplete.TokenCompleteTextView$5: void <init>(com.tokenautocomplete.TokenCompleteTextView)>(r0);

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: boolean post(java.lang.Runnable)>($r1);

        return;
    }
    protected java.lang.CharSequence convertSelectionToString(java.lang.Object)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        java.lang.Object $r1;
        int[] $r2;
        com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle $r3;
        int $i0;
        java.lang.CharSequence $r4;
        java.lang.String $r5;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $r1 := @parameter0: java.lang.Object;

        r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.Object selectedObject> = $r1;

        $r2 = <com.tokenautocomplete.TokenCompleteTextView$7: int[] $SwitchMap$com$tokenautocomplete$TokenCompleteTextView$TokenDeleteStyle>;

        $r3 = r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle deletionStyle>;

        $i0 = virtualinvoke $r3.<com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle: int ordinal()>();

        $i0 = $r2[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label1;
        };

     label1:
        $r4 = specialinvoke r0.<android.widget.MultiAutoCompleteTextView: java.lang.CharSequence convertSelectionToString(java.lang.Object)>($r1);

        return $r4;

     label2:
        return "";

     label3:
        $r5 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.String currentCompletionText()>();

        return $r5;

     label4:
        if $r1 == null goto label5;

        $r5 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r5;

     label5:
        return "";
    }
    protected java.util.ArrayList convertSerializableArrayToObjectArray(java.util.ArrayList)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        java.util.ArrayList r1;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        r1 := @parameter0: java.util.ArrayList;

        return r1;
    }
    protected java.lang.String currentCompletionText()
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        boolean $z0;
        android.text.Editable $r1;
        int $i0, $i1;
        java.lang.String $r2;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $z0 = r0.<com.tokenautocomplete.TokenCompleteTextView: boolean hintVisible>;

        if $z0 == 0 goto label1;

        return "";

     label1:
        $r1 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Editable getText()>();

        $i0 = specialinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: int getCorrectedTokenEnd()>();

        $i1 = specialinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: int getCorrectedTokenBeginning(int)>($i0);

        $r2 = staticinvoke <android.text.TextUtils: java.lang.String substring(java.lang.CharSequence,int,int)>($r1, $i1, $i0);

        return $r2;
    }
protected abstract java.lang.Object defaultObject(java.lang.String) { 
// no body
} 
    public boolean enoughToFilter()
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        boolean $z0, $z1;
        android.widget.MultiAutoCompleteTextView$Tokenizer $r1;
        int $i0, $i1;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $z0 = 1;

        $r1 = r0.<com.tokenautocomplete.TokenCompleteTextView: android.widget.MultiAutoCompleteTextView$Tokenizer tokenizer>;

        if $r1 == null goto label4;

        $z1 = r0.<com.tokenautocomplete.TokenCompleteTextView: boolean hintVisible>;

        if $z1 == 0 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: int getSelectionEnd()>();

        if $i0 < 0 goto label4;

        $i0 = specialinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: int getCorrectedTokenEnd()>();

        $i1 = specialinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: int getCorrectedTokenBeginning(int)>($i0);

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: int getThreshold()>();

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i1, 1);

        if $i0 < $i1 goto label3;

     label2:
        return $z0;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        return 0;
    }
    public boolean extractText(android.view.inputmethod.ExtractedTextRequest, android.view.inputmethod.ExtractedText)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        android.view.inputmethod.ExtractedTextRequest $r1;
        android.view.inputmethod.ExtractedText $r2;
        java.lang.IndexOutOfBoundsException r3;
        boolean $z0;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $r1 := @parameter0: android.view.inputmethod.ExtractedTextRequest;

        $r2 := @parameter1: android.view.inputmethod.ExtractedText;

     label1:
        $z0 = specialinvoke r0.<android.widget.MultiAutoCompleteTextView: boolean extractText(android.view.inputmethod.ExtractedTextRequest,android.view.inputmethod.ExtractedText)>($r1, $r2);

     label2:
        return $z0;

     label3:
        r3 := @caughtexception;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("TokenAutoComplete", "extractText hit IndexOutOfBoundsException. This may be normal.", r3);

        return 0;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
    }
    public java.util.List getObjects()
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        java.util.ArrayList r1;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        r1 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.util.ArrayList objects>;

        return r1;
    }
    protected java.util.ArrayList getSerializableObjects()
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        java.util.ArrayList r1, $r8;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.io.Serializable r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        int $i0, $i1;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r2 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: java.util.List getObjects()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $z0 = $r4 instanceof java.io.Serializable;

        if $z0 == 0 goto label2;

        r5 = (java.io.Serializable) $r4;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        goto label1;

     label2:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to save \'");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TokenAutoComplete", $r7);

        goto label1;

     label3:
        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $r8 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.util.ArrayList objects>;

        $i1 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if $i0 == $i1 goto label4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TokenAutoComplete", "You should make your objects Serializable or override\ngetSerializableObjects and convertSerializableArrayToObjectArray");

     label4:
        return r1;
    }
    public java.lang.CharSequence getTextForAccessibility()
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan r1;
        java.util.List $r2;
        int $i0, i1, i2, $i3;
        android.text.Editable $r3;
        android.text.SpannableStringBuilder r4;
        java.lang.Object[] $r5;
        com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan[] r6;
        android.widget.MultiAutoCompleteTextView$Tokenizer $r7;
        java.lang.Object $r8;
        java.lang.String $r9;
        java.lang.CharSequence $r10;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $r2 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: java.util.List getObjects()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 != 0 goto label01;

        $r3 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Editable getText()>();

        return $r3;

     label01:
        r4 = new android.text.SpannableStringBuilder;

        specialinvoke r4.<android.text.SpannableStringBuilder: void <init>()>();

        $r3 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Editable getText()>();

        $i0 = -1;

        i1 = -1;

        i2 = 0;

     label02:
        $i3 = interfaceinvoke $r3.<android.text.Editable: int length()>();

        if i2 >= $i3 goto label07;

        $i3 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r3);

        if i2 != $i3 goto label03;

        $i0 = virtualinvoke r4.<android.text.SpannableStringBuilder: int length()>();

     label03:
        $i3 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r3);

        if i2 != $i3 goto label04;

        i1 = virtualinvoke r4.<android.text.SpannableStringBuilder: int length()>();

     label04:
        $r5 = interfaceinvoke $r3.<android.text.Editable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i2, i2, class "Lcom/tokenautocomplete/TokenCompleteTextView$TokenImageSpan;");

        r6 = (com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan[]) $r5;

        $i3 = lengthof r6;

        if $i3 <= 0 goto label06;

        r1 = r6[0];

        $r7 = r0.<com.tokenautocomplete.TokenCompleteTextView: android.widget.MultiAutoCompleteTextView$Tokenizer tokenizer>;

        $r8 = virtualinvoke r1.<com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan: java.lang.Object getToken()>();

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        $r10 = interfaceinvoke $r7.<android.widget.MultiAutoCompleteTextView$Tokenizer: java.lang.CharSequence terminateToken(java.lang.CharSequence)>($r9);

        r4 = virtualinvoke r4.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>($r10);

        i2 = interfaceinvoke $r3.<android.text.Editable: int getSpanEnd(java.lang.Object)>(r1);

     label05:
        i2 = i2 + 1;

        goto label02;

     label06:
        $i3 = i2 + 1;

        $r10 = interfaceinvoke $r3.<android.text.Editable: java.lang.CharSequence subSequence(int,int)>(i2, $i3);

        r4 = virtualinvoke r4.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>($r10);

        goto label05;

     label07:
        $i3 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r3);

        if i2 != $i3 goto label08;

        $i0 = virtualinvoke r4.<android.text.SpannableStringBuilder: int length()>();

     label08:
        $i3 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r3);

        if i2 != $i3 goto label09;

        i1 = virtualinvoke r4.<android.text.SpannableStringBuilder: int length()>();

     label09:
        if $i0 < 0 goto label10;

        if i1 < 0 goto label10;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>(r4, $i0, i1);

     label10:
        return r4;
    }
protected abstract android.view.View getViewForObject(java.lang.Object) { 
// no body
} 
    public void invalidate()
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        int $i0;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label1;

        specialinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void api16Invalidate()>();

     label1:
        specialinvoke r0.<android.widget.MultiAutoCompleteTextView: void invalidate()>();

        return;
    }
    public boolean isTokenRemovable(java.lang.Object)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        java.lang.Object r1;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        r1 := @parameter0: java.lang.Object;

        return 1;
    }
    protected float maxTextWidth()
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        int $i0, $i1;
        float $f0;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $i0 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: int getWidth()>();

        $i1 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: int getPaddingLeft()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: int getPaddingRight()>();

        $i0 = $i0 - $i1;

        $f0 = (float) $i0;

        return $f0;
    }
    public android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        android.view.inputmethod.EditorInfo $r1;
        android.view.inputmethod.InputConnection $r2;
        com.tokenautocomplete.TokenCompleteTextView$TokenInputConnection r3;
        int $i0;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $r1 := @parameter0: android.view.inputmethod.EditorInfo;

        $r2 = specialinvoke r0.<android.widget.MultiAutoCompleteTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>($r1);

        if $r2 == null goto label1;

        r3 = new com.tokenautocomplete.TokenCompleteTextView$TokenInputConnection;

        specialinvoke r3.<com.tokenautocomplete.TokenCompleteTextView$TokenInputConnection: void <init>(com.tokenautocomplete.TokenCompleteTextView,android.view.inputmethod.InputConnection,boolean)>(r0, $r2, 1);

        $i0 = $r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i0 = $i0 & -1073741825;

        $r1.<android.view.inputmethod.EditorInfo: int imeOptions> = $i0;

        $i0 = $r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i0 = $i0 | 268435456;

        $r1.<android.view.inputmethod.EditorInfo: int imeOptions> = $i0;

        return r3;

     label1:
        return null;
    }
    public boolean onEditorAction(android.widget.TextView, int, android.view.KeyEvent)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        android.widget.TextView $r1;
        int $i0;
        android.view.KeyEvent $r2;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $r1 := @parameter0: android.widget.TextView;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.view.KeyEvent;

        if $i0 != 6 goto label1;

        specialinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void handleDone()>();

        return 1;

     label1:
        return 0;
    }
    public void onFocusChanged(boolean, int, android.graphics.Rect)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        boolean $z0, $z1;
        int $i0;
        android.graphics.Rect $r1;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.graphics.Rect;

        specialinvoke r0.<android.widget.MultiAutoCompleteTextView: void onFocusChanged(boolean,int,android.graphics.Rect)>($z0, $i0, $r1);

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void performCompletion()>();

     label1:
        $z1 = r0.<com.tokenautocomplete.TokenCompleteTextView: boolean allowCollapse>;

        if $z1 == 0 goto label2;

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void performCollapse(boolean)>($z0);

     label2:
        return;
    }
    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        android.view.accessibility.AccessibilityEvent $r1;
        int $i0;
        java.lang.CharSequence $r2;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.MultiAutoCompleteTextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>($r1);

        $i0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: int getEventType()>();

        if $i0 != 8192 goto label1;

        $r2 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.CharSequence getTextForAccessibility()>();

        $i0 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r2);

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setFromIndex(int)>($i0);

        $i0 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r2);

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setToIndex(int)>($i0);

        $i0 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setItemCount(int)>($i0);

     label1:
        return;
    }
    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        int $i0;
        android.view.KeyEvent $r1;
        boolean z0, $z1;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        z0 = 0;

        lookupswitch($i0)
        {
            case 23: goto label3;
            case 61: goto label3;
            case 66: goto label3;
            case 67: goto label4;
            default: goto label1;
        };

     label1:
        if z0 != 0 goto label2;

        z0 = specialinvoke r0.<android.widget.MultiAutoCompleteTextView: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1);

        if z0 == 0 goto label7;

     label2:
        return 1;

     label3:
        $z1 = virtualinvoke $r1.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z1 == 0 goto label1;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean shouldFocusNext> = 1;

        z0 = 1;

        goto label1;

     label4:
        z0 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: boolean canDeleteSelection(int)>(1);

        if z0 == 0 goto label5;

        z0 = specialinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: boolean deleteSelectedObject(boolean)>(0);

        if z0 == 0 goto label6;

     label5:
        z0 = 1;

        goto label1;

     label6:
        z0 = 0;

        goto label1;

     label7:
        return 0;
    }
    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        int $i0;
        android.view.KeyEvent $r1;
        boolean $z0, $z1;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        $z0 = specialinvoke r0.<android.widget.MultiAutoCompleteTextView: boolean onKeyUp(int,android.view.KeyEvent)>($i0, $r1);

        $z1 = r0.<com.tokenautocomplete.TokenCompleteTextView: boolean shouldFocusNext>;

        if $z1 == 0 goto label1;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean shouldFocusNext> = 0;

        specialinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void handleDone()>();

     label1:
        return $z0;
    }
    protected void onLayout(boolean, int, int, int, int)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        android.text.Layout $r1;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        specialinvoke r0.<android.widget.MultiAutoCompleteTextView: void onLayout(boolean,int,int,int,int)>($z0, $i0, $i1, $i2, $i3);

        $r1 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Layout getLayout()>();

        r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Layout lastLayout> = $r1;

        return;
    }
    public void onRestoreInstanceState(android.os.Parcelable)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        android.os.Parcelable $r1;
        boolean $z0;
        com.tokenautocomplete.TokenCompleteTextView$SavedState r2;
        java.lang.CharSequence $r3;
        com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle $r4;
        com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle $r5;
        char[] $r6;
        java.util.ArrayList $r7;
        java.util.Iterator $r8;
        java.lang.Object $r9;
        com.tokenautocomplete.TokenCompleteTextView$6 $r10;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $r1 := @parameter0: android.os.Parcelable;

        $z0 = $r1 instanceof com.tokenautocomplete.TokenCompleteTextView$SavedState;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.widget.MultiAutoCompleteTextView: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        return;

     label1:
        r2 = (com.tokenautocomplete.TokenCompleteTextView$SavedState) $r1;

        $r1 = virtualinvoke r2.<com.tokenautocomplete.TokenCompleteTextView$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.widget.MultiAutoCompleteTextView: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        $r3 = r2.<com.tokenautocomplete.TokenCompleteTextView$SavedState: java.lang.CharSequence prefix>;

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void setText(java.lang.CharSequence)>($r3);

        $r3 = r2.<com.tokenautocomplete.TokenCompleteTextView$SavedState: java.lang.CharSequence prefix>;

        r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.CharSequence prefix> = $r3;

        specialinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void updateHint()>();

        $z0 = r2.<com.tokenautocomplete.TokenCompleteTextView$SavedState: boolean allowCollapse>;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean allowCollapse> = $z0;

        $z0 = r2.<com.tokenautocomplete.TokenCompleteTextView$SavedState: boolean allowDuplicates>;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean allowDuplicates> = $z0;

        $z0 = r2.<com.tokenautocomplete.TokenCompleteTextView$SavedState: boolean performBestGuess>;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean performBestGuess> = $z0;

        $r4 = r2.<com.tokenautocomplete.TokenCompleteTextView$SavedState: com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle tokenClickStyle>;

        r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle tokenClickStyle> = $r4;

        $r5 = r2.<com.tokenautocomplete.TokenCompleteTextView$SavedState: com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle tokenDeleteStyle>;

        r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle deletionStyle> = $r5;

        $r6 = r2.<com.tokenautocomplete.TokenCompleteTextView$SavedState: char[] splitChar>;

        r0.<com.tokenautocomplete.TokenCompleteTextView: char[] splitChar> = $r6;

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void addListeners()>();

        $r7 = r2.<com.tokenautocomplete.TokenCompleteTextView$SavedState: java.util.ArrayList baseObjects>;

        $r7 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: java.util.ArrayList convertSerializableArrayToObjectArray(java.util.ArrayList)>($r7);

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void addObject(java.lang.Object)>($r9);

        goto label2;

     label3:
        $z0 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: boolean isFocused()>();

        if $z0 != 0 goto label4;

        $z0 = r0.<com.tokenautocomplete.TokenCompleteTextView: boolean allowCollapse>;

        if $z0 == 0 goto label4;

        $r10 = new com.tokenautocomplete.TokenCompleteTextView$6;

        specialinvoke $r10.<com.tokenautocomplete.TokenCompleteTextView$6: void <init>(com.tokenautocomplete.TokenCompleteTextView)>(r0);

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: boolean post(java.lang.Runnable)>($r10);

     label4:
        return;
    }
    public android.os.Parcelable onSaveInstanceState()
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        com.tokenautocomplete.TokenCompleteTextView$SavedState r1;
        java.util.ArrayList $r2;
        android.os.Parcelable $r3;
        java.lang.CharSequence $r4;
        boolean $z0;
        com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle $r5;
        com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle $r6;
        char[] $r7;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $r2 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: java.util.ArrayList getSerializableObjects()>();

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void removeListeners()>();

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean savingState> = 1;

        $r3 = specialinvoke r0.<android.widget.MultiAutoCompleteTextView: android.os.Parcelable onSaveInstanceState()>();

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean savingState> = 0;

        r1 = new com.tokenautocomplete.TokenCompleteTextView$SavedState;

        specialinvoke r1.<com.tokenautocomplete.TokenCompleteTextView$SavedState: void <init>(android.os.Parcelable)>($r3);

        $r4 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.CharSequence prefix>;

        r1.<com.tokenautocomplete.TokenCompleteTextView$SavedState: java.lang.CharSequence prefix> = $r4;

        $z0 = r0.<com.tokenautocomplete.TokenCompleteTextView: boolean allowCollapse>;

        r1.<com.tokenautocomplete.TokenCompleteTextView$SavedState: boolean allowCollapse> = $z0;

        $z0 = r0.<com.tokenautocomplete.TokenCompleteTextView: boolean allowDuplicates>;

        r1.<com.tokenautocomplete.TokenCompleteTextView$SavedState: boolean allowDuplicates> = $z0;

        $z0 = r0.<com.tokenautocomplete.TokenCompleteTextView: boolean performBestGuess>;

        r1.<com.tokenautocomplete.TokenCompleteTextView$SavedState: boolean performBestGuess> = $z0;

        $r5 = r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle tokenClickStyle>;

        r1.<com.tokenautocomplete.TokenCompleteTextView$SavedState: com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle tokenClickStyle> = $r5;

        $r6 = r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle deletionStyle>;

        r1.<com.tokenautocomplete.TokenCompleteTextView$SavedState: com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle tokenDeleteStyle> = $r6;

        r1.<com.tokenautocomplete.TokenCompleteTextView$SavedState: java.util.ArrayList baseObjects> = $r2;

        $r7 = r0.<com.tokenautocomplete.TokenCompleteTextView: char[] splitChar>;

        r1.<com.tokenautocomplete.TokenCompleteTextView$SavedState: char[] splitChar> = $r7;

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void addListeners()>();

        return r1;
    }
    protected void onSelectionChanged(int, int)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle $r2;
        android.text.Editable $r3;
        java.lang.CharSequence $r4;
        java.lang.Object[] $r5;
        com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan[] r6;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $i1 := @parameter0: int;

        $i2 := @parameter1: int;

        $z0 = r0.<com.tokenautocomplete.TokenCompleteTextView: boolean hintVisible>;

        if $z0 == 0 goto label1;

        $i1 = 0;

     label1:
        $i2 = $i1;

        $r2 = r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle tokenClickStyle>;

        if $r2 == null goto label2;

        $r2 = r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle tokenClickStyle>;

        $z0 = virtualinvoke $r2.<com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle: boolean isSelectable()>();

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Editable getText()>();

        if $r3 == null goto label2;

        specialinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void clearSelections()>();

     label2:
        $r4 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.CharSequence prefix>;

        if $r4 == null goto label4;

        $r4 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.CharSequence prefix>;

        $i3 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        if $i1 < $i3 goto label3;

        $r4 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.CharSequence prefix>;

        $i3 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        if $i2 >= $i3 goto label4;

     label3:
        $r4 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.CharSequence prefix>;

        $i1 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void setSelection(int)>($i1);

        return;

     label4:
        $r3 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Editable getText()>();

        if $r3 == null goto label8;

        $r5 = interfaceinvoke $r3.<android.text.Editable: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i1, $i2, class "Lcom/tokenautocomplete/TokenCompleteTextView$TokenImageSpan;");

        r6 = (com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan[]) $r5;

        $i0 = lengthof r6;

        $i4 = 0;

     label5:
        if $i4 >= $i0 goto label8;

        r1 = r6[$i4];

        $i3 = interfaceinvoke $r3.<android.text.Editable: int getSpanEnd(java.lang.Object)>(r1);

        if $i1 > $i3 goto label7;

        $i5 = interfaceinvoke $r3.<android.text.Editable: int getSpanStart(java.lang.Object)>(r1);

        if $i5 >= $i1 goto label7;

        $i1 = interfaceinvoke $r3.<android.text.Editable: int length()>();

        if $i3 != $i1 goto label6;

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void setSelection(int)>($i3);

        return;

     label6:
        $i1 = $i3 + 1;

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void setSelection(int)>($i1);

        return;

     label7:
        $i4 = $i4 + 1;

        goto label5;

     label8:
        specialinvoke r0.<android.widget.MultiAutoCompleteTextView: void onSelectionChanged(int,int)>($i1, $i2);

        return;
    }
    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        android.view.MotionEvent $r1;
        int $i0;
        android.text.Editable $r2;
        boolean z0, $z1;
        com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle $r3, $r4;
        android.text.Layout $r5;
        float $f0, $f1;
        java.lang.Object[] $r6;
        com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan[] r7;
        com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan $r8;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getActionMasked()>();

        $r2 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Editable getText()>();

        z0 = 0;

        $r3 = r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle tokenClickStyle>;

        $r4 = <com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle: com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle None>;

        if $r3 != $r4 goto label1;

        z0 = specialinvoke r0.<android.widget.MultiAutoCompleteTextView: boolean onTouchEvent(android.view.MotionEvent)>($r1);

     label1:
        $z1 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: boolean isFocused()>();

        if $z1 == 0 goto label2;

        if $r2 == null goto label2;

        $r5 = r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Layout lastLayout>;

        if $r5 == null goto label2;

        if $i0 != 1 goto label2;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $i0 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: int getOffsetForPosition(float,float)>($f0, $f1);

        if $i0 == -1 goto label2;

        $r6 = interfaceinvoke $r2.<android.text.Editable: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i0, $i0, class "Lcom/tokenautocomplete/TokenCompleteTextView$TokenImageSpan;");

        r7 = (com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan[]) $r6;

        $i0 = lengthof r7;

        if $i0 <= 0 goto label3;

        $r8 = r7[0];

        virtualinvoke $r8.<com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan: void onClick()>();

        z0 = 1;

     label2:
        if z0 != 0 goto label4;

        $r3 = r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle tokenClickStyle>;

        $r4 = <com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle: com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle None>;

        if $r3 == $r4 goto label4;

        z0 = specialinvoke r0.<android.widget.MultiAutoCompleteTextView: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        return z0;

     label3:
        specialinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void clearSelections()>();

        goto label2;

     label4:
        return z0;
    }
    public void performBestGuess(boolean)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        boolean $z0;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $z0 := @parameter0: boolean;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean performBestGuess> = $z0;

        return;
    }
    public void performCollapse(boolean)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        boolean $z0;
        com.tokenautocomplete.CountSpan r1;
        com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan r2;
        android.text.Editable $r3, $r16, $r17;
        android.text.Layout $r4;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object[] $r5;
        com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan[] r6;
        java.util.ArrayList $r7;
        com.tokenautocomplete.CountSpan[] r8;
        android.content.Context $r9;
        float $f0, $f1;
        java.lang.String $r10;
        android.text.TextPaint $r11;
        byte $b5;
        java.util.List $r12;
        java.util.Iterator $r13;
        java.lang.Object $r14;
        java.lang.CharSequence $r15;
        com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher[] r18;
        com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher $r19;
        com.tokenautocomplete.TokenCompleteTextView$2 $r20;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $z0 := @parameter0: boolean;

        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean focusChanging> = 1;

        if $z0 != 0 goto label05;

        $r3 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Editable getText()>();

        if $r3 == null goto label11;

        $r4 = r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Layout lastLayout>;

        if $r4 == null goto label11;

        $r4 = r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Layout lastLayout>;

        $i0 = virtualinvoke $r4.<android.text.Layout: int getLineVisibleEnd(int)>(0);

        $r5 = interfaceinvoke $r3.<android.text.Editable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "Lcom/tokenautocomplete/TokenCompleteTextView$TokenImageSpan;");

        r6 = (com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan[]) $r5;

        $r7 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.util.ArrayList objects>;

        $i1 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        $i2 = lengthof r6;

        $i1 = $i1 - $i2;

        $r5 = interfaceinvoke $r3.<android.text.Editable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "Lcom/tokenautocomplete/CountSpan;");

        r8 = (com.tokenautocomplete.CountSpan[]) $r5;

        if $i1 <= 0 goto label11;

        $i2 = lengthof r8;

        if $i2 != 0 goto label11;

        $i0 = $i0 + 1;

        r1 = new com.tokenautocomplete.CountSpan;

        $r9 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.content.Context getContext()>();

        $i2 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: int getCurrentTextColor()>();

        $f0 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: float getTextSize()>();

        $i3 = (int) $f0;

        $f0 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: float maxTextWidth()>();

        $i4 = (int) $f0;

        specialinvoke r1.<com.tokenautocomplete.CountSpan: void <init>(int,android.content.Context,int,int,int)>($i1, $r9, $i2, $i3, $i4);

        $r10 = r1.<com.tokenautocomplete.CountSpan: java.lang.String text>;

        interfaceinvoke $r3.<android.text.Editable: android.text.Editable insert(int,java.lang.CharSequence)>($i0, $r10);

        $r10 = r1.<com.tokenautocomplete.CountSpan: java.lang.String text>;

        $i2 = virtualinvoke $r10.<java.lang.String: int length()>();

        $i2 = $i2 + $i0;

        $r4 = r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Layout lastLayout>;

        $r11 = virtualinvoke $r4.<android.text.Layout: android.text.TextPaint getPaint()>();

        $f0 = staticinvoke <android.text.Layout: float getDesiredWidth(java.lang.CharSequence,int,int,android.text.TextPaint)>($r3, 0, $i2, $r11);

        $f1 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: float maxTextWidth()>();

        $b5 = $f0 cmpl $f1;

        if $b5 <= 0 goto label02;

        $r10 = r1.<com.tokenautocomplete.CountSpan: java.lang.String text>;

        $i2 = virtualinvoke $r10.<java.lang.String: int length()>();

        $i2 = $i2 + $i0;

        interfaceinvoke $r3.<android.text.Editable: android.text.Editable delete(int,int)>($i0, $i2);

        $i0 = lengthof r6;

        if $i0 <= 0 goto label04;

        $i0 = lengthof r6;

        $i0 = $i0 + -1;

        r2 = r6[$i0];

        $i0 = interfaceinvoke $r3.<android.text.Editable: int getSpanStart(java.lang.Object)>(r2);

        $i1 = $i1 + 1;

        virtualinvoke r1.<com.tokenautocomplete.CountSpan: void setCount(int)>($i1);

     label01:
        $r10 = r1.<com.tokenautocomplete.CountSpan: java.lang.String text>;

        interfaceinvoke $r3.<android.text.Editable: android.text.Editable insert(int,java.lang.CharSequence)>($i0, $r10);

     label02:
        $r10 = r1.<com.tokenautocomplete.CountSpan: java.lang.String text>;

        $i1 = virtualinvoke $r10.<java.lang.String: int length()>();

        $i1 = $i1 + $i0;

        interfaceinvoke $r3.<android.text.Editable: void setSpan(java.lang.Object,int,int,int)>(r1, $i0, $i1, 33);

        $r7 = new java.util.ArrayList;

        $r10 = r1.<com.tokenautocomplete.CountSpan: java.lang.String text>;

        $i1 = virtualinvoke $r10.<java.lang.String: int length()>();

        $i1 = $i1 + $i0;

        $i0 = interfaceinvoke $r3.<android.text.Editable: int length()>();

        $r5 = interfaceinvoke $r3.<android.text.Editable: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i1, $i0, class "Lcom/tokenautocomplete/TokenCompleteTextView$TokenImageSpan;");

        r6 = (com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan[]) $r5;

        $r12 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r6);

        specialinvoke $r7.<java.util.ArrayList: void <init>(java.util.Collection)>($r12);

        r0.<com.tokenautocomplete.TokenCompleteTextView: java.util.List hiddenSpans> = $r7;

        $r12 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.util.List hiddenSpans>;

        $r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan) $r14;

        specialinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void removeSpan(com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan)>(r2);

        goto label03;

     label04:
        $r15 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.CharSequence prefix>;

        $i0 = interfaceinvoke $r15.<java.lang.CharSequence: int length()>();

        goto label01;

     label05:
        $r3 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Editable getText()>();

        if $r3 == null goto label11;

        $i1 = interfaceinvoke $r3.<android.text.Editable: int length()>();

        $r5 = interfaceinvoke $r3.<android.text.Editable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i1, class "Lcom/tokenautocomplete/CountSpan;");

        r8 = (com.tokenautocomplete.CountSpan[]) $r5;

        $i1 = lengthof r8;

        $i0 = 0;

     label06:
        if $i0 >= $i1 goto label07;

        r1 = r8[$i0];

        $i2 = interfaceinvoke $r3.<android.text.Editable: int getSpanStart(java.lang.Object)>(r1);

        $i3 = interfaceinvoke $r3.<android.text.Editable: int getSpanEnd(java.lang.Object)>(r1);

        interfaceinvoke $r3.<android.text.Editable: android.text.Editable delete(int,int)>($i2, $i3);

        interfaceinvoke $r3.<android.text.Editable: void removeSpan(java.lang.Object)>(r1);

        $i0 = $i0 + 1;

        goto label06;

     label07:
        $r12 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.util.List hiddenSpans>;

        $r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan) $r14;

        specialinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void insertSpan(com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan)>(r2);

        goto label08;

     label09:
        $r12 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.util.List hiddenSpans>;

        interfaceinvoke $r12.<java.util.List: void clear()>();

        $z0 = r0.<com.tokenautocomplete.TokenCompleteTextView: boolean hintVisible>;

        if $z0 == 0 goto label12;

        $r15 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.CharSequence prefix>;

        $i1 = interfaceinvoke $r15.<java.lang.CharSequence: int length()>();

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void setSelection(int)>($i1);

     label10:
        $r16 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Editable getText()>();

        $r17 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Editable getText()>();

        $i1 = interfaceinvoke $r17.<android.text.Editable: int length()>();

        $r5 = interfaceinvoke $r16.<android.text.Editable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i1, class "Lcom/tokenautocomplete/TokenCompleteTextView$TokenSpanWatcher;");

        r18 = (com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher[]) $r5;

        $i1 = lengthof r18;

        if $i1 != 0 goto label11;

        $r19 = r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher spanWatcher>;

        $i1 = interfaceinvoke $r3.<android.text.Editable: int length()>();

        interfaceinvoke $r3.<android.text.Editable: void setSpan(java.lang.Object,int,int,int)>($r19, 0, $i1, 18);

     label11:
        r0.<com.tokenautocomplete.TokenCompleteTextView: boolean focusChanging> = 0;

        return;

     label12:
        $r20 = new com.tokenautocomplete.TokenCompleteTextView$2;

        specialinvoke $r20.<com.tokenautocomplete.TokenCompleteTextView$2: void <init>(com.tokenautocomplete.TokenCompleteTextView,android.text.Editable)>(r0, $r3);

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: boolean postDelayed(java.lang.Runnable,long)>($r20, 10L);

        goto label10;
    }
    public void performCompletion()
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        android.widget.ListAdapter $r1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.CharSequence $r3;
        java.lang.String $r4;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $r1 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.widget.ListAdapter getAdapter()>();

        if $r1 == null goto label1;

        $i0 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: int getListSelection()>();

        if $i0 != -1 goto label4;

     label1:
        $z0 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: boolean enoughToFilter()>();

        if $z0 == 0 goto label4;

        $r1 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.widget.ListAdapter getAdapter()>();

        if $r1 == null goto label3;

        $r1 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.widget.ListAdapter getAdapter()>();

        $i0 = interfaceinvoke $r1.<android.widget.ListAdapter: int getCount()>();

        if $i0 <= 0 goto label3;

        $z0 = r0.<com.tokenautocomplete.TokenCompleteTextView: boolean performBestGuess>;

        if $z0 == 0 goto label3;

        $r1 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.widget.ListAdapter getAdapter()>();

        $r2 = interfaceinvoke $r1.<android.widget.ListAdapter: java.lang.Object getItem(int)>(0);

     label2:
        $r3 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.CharSequence convertSelectionToString(java.lang.Object)>($r2);

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void replaceText(java.lang.CharSequence)>($r3);

        return;

     label3:
        $r4 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.String currentCompletionText()>();

        $r2 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.Object defaultObject(java.lang.String)>($r4);

        goto label2;

     label4:
        specialinvoke r0.<android.widget.MultiAutoCompleteTextView: void performCompletion()>();

        return;
    }
    protected void performFiltering(java.lang.CharSequence, int, int, int)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        java.lang.CharSequence $r1, $r2;
        int $i0, $i1, $i2;
        android.widget.Filter $r3;
        boolean $z0;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $r1 := @parameter0: java.lang.CharSequence;

        $i2 := @parameter1: int;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r2 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.CharSequence prefix>;

        $i1 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        if $i2 >= $i1 goto label1;

        $r2 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.CharSequence prefix>;

        $i2 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

     label1:
        $r3 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.widget.Filter getFilter()>();

        if $r3 == null goto label3;

        $z0 = r0.<com.tokenautocomplete.TokenCompleteTextView: boolean hintVisible>;

        if $z0 == 0 goto label2;

        virtualinvoke $r3.<android.widget.Filter: void filter(java.lang.CharSequence)>("");

        return;

     label2:
        $r1 = interfaceinvoke $r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>($i2, $i0);

        virtualinvoke $r3.<android.widget.Filter: void filter(java.lang.CharSequence,android.widget.Filter$FilterListener)>($r1, r0);

     label3:
        return;
    }
    protected void removeListeners()
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher r1;
        int $i0, $i1;
        android.text.Editable $r2;
        java.lang.Object[] $r3;
        com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher[] r4;
        com.tokenautocomplete.TokenCompleteTextView$TokenTextWatcher $r5;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $i0 = 0;

        $r2 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Editable getText()>();

        if $r2 == null goto label3;

        $i1 = interfaceinvoke $r2.<android.text.Editable: int length()>();

        $r3 = interfaceinvoke $r2.<android.text.Editable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i1, class "Lcom/tokenautocomplete/TokenCompleteTextView$TokenSpanWatcher;");

        r4 = (com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher[]) $r3;

        $i1 = lengthof r4;

     label1:
        if $i0 >= $i1 goto label2;

        r1 = r4[$i0];

        interfaceinvoke $r2.<android.text.Editable: void removeSpan(java.lang.Object)>(r1);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r5 = r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenTextWatcher textWatcher>;

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void removeTextChangedListener(android.text.TextWatcher)>($r5);

     label3:
        return;
    }
    public void removeObject(java.lang.Object)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        java.lang.Object r1;
        com.tokenautocomplete.TokenCompleteTextView$4 $r2;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        r1 := @parameter0: java.lang.Object;

        $r2 = new com.tokenautocomplete.TokenCompleteTextView$4;

        specialinvoke $r2.<com.tokenautocomplete.TokenCompleteTextView$4: void <init>(com.tokenautocomplete.TokenCompleteTextView,java.lang.Object)>(r0, r1);

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: boolean post(java.lang.Runnable)>($r2);

        return;
    }
    protected void replaceText(java.lang.CharSequence)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        java.lang.CharSequence $r1;
        java.lang.Object $r2;
        java.lang.String $r3;
        boolean $z0;
        android.text.SpannableStringBuilder $r4;
        com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan $r5;
        android.text.Editable $r6;
        int $i0, i1;
        java.util.ArrayList $r7;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $r1 := @parameter0: java.lang.CharSequence;

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void clearComposingText()>();

        $r2 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.Object selectedObject>;

        if $r2 == null goto label5;

        $r2 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.Object selectedObject>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = specialinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.SpannableStringBuilder buildSpannableForText(java.lang.CharSequence)>($r1);

        $r2 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.Object selectedObject>;

        $r5 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan buildSpanForObject(java.lang.Object)>($r2);

        $r6 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Editable getText()>();

        $i0 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: int getSelectionEnd()>();

        i1 = $i0;

        $z0 = r0.<com.tokenautocomplete.TokenCompleteTextView: boolean hintVisible>;

        if $z0 != 0 goto label2;

        $i0 = specialinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: int getCorrectedTokenEnd()>();

        i1 = $i0;

        $i0 = specialinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: int getCorrectedTokenBeginning(int)>($i0);

     label2:
        $r3 = staticinvoke <android.text.TextUtils: java.lang.String substring(java.lang.CharSequence,int,int)>($r6, $i0, i1);

        if $r6 == null goto label5;

        if $r5 != null goto label3;

        interfaceinvoke $r6.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>($i0, i1, "");

        return;

     label3:
        $z0 = r0.<com.tokenautocomplete.TokenCompleteTextView: boolean allowDuplicates>;

        if $z0 != 0 goto label4;

        $r7 = r0.<com.tokenautocomplete.TokenCompleteTextView: java.util.ArrayList objects>;

        $r2 = virtualinvoke $r5.<com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan: java.lang.Object getToken()>();

        $z0 = virtualinvoke $r7.<java.util.ArrayList: boolean contains(java.lang.Object)>($r2);

        if $z0 == 0 goto label4;

        interfaceinvoke $r6.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>($i0, i1, "");

        return;

     label4:
        staticinvoke <android.text.method.QwertyKeyListener: void markAsReplaced(android.text.Spannable,int,int,java.lang.String)>($r6, $i0, i1, $r3);

        interfaceinvoke $r6.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>($i0, i1, $r4);

        i1 = virtualinvoke $r4.<android.text.SpannableStringBuilder: int length()>();

        i1 = i1 + $i0;

        i1 = i1 + -1;

        interfaceinvoke $r6.<android.text.Editable: void setSpan(java.lang.Object,int,int,int)>($r5, $i0, i1, 33);

     label5:
        return;
    }
    public void setDeletionStyle(com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle $r1;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $r1 := @parameter0: com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle;

        r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle deletionStyle> = $r1;

        return;
    }
    public void setPrefix(java.lang.CharSequence)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        java.lang.CharSequence $r1;
        android.text.Editable $r2;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $r1 := @parameter0: java.lang.CharSequence;

        r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.CharSequence prefix> = "";

        $r2 = virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: android.text.Editable getText()>();

        if $r2 == null goto label1;

        interfaceinvoke $r2.<android.text.Editable: android.text.Editable insert(int,java.lang.CharSequence)>(0, $r1);

     label1:
        r0.<com.tokenautocomplete.TokenCompleteTextView: java.lang.CharSequence prefix> = $r1;

        specialinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void updateHint()>();

        return;
    }
    public void setSplitChar(char)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        char $c0;
        char[] $r1;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $c0 := @parameter0: char;

        $r1 = newarray (char)[1];

        $r1[0] = $c0;

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void setSplitChar(char[])>($r1);

        return;
    }
    public void setSplitChar(char[])
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        char[] $r1, r2;
        char $c0;
        int $i1;
        com.tokenautocomplete.CharacterTokenizer $r3;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $r1 := @parameter0: char[];

        r2 = $r1;

        $c0 = $r1[0];

        if $c0 != 32 goto label1;

        $i1 = lengthof $r1;

        $i1 = $i1 + 1;

        r2 = newarray (char)[$i1];

        r2[0] = 167;

        $i1 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, r2, 1, $i1);

     label1:
        r0.<com.tokenautocomplete.TokenCompleteTextView: char[] splitChar> = r2;

        $r3 = new com.tokenautocomplete.CharacterTokenizer;

        specialinvoke $r3.<com.tokenautocomplete.CharacterTokenizer: void <init>(char[])>($r1);

        virtualinvoke r0.<com.tokenautocomplete.TokenCompleteTextView: void setTokenizer(android.widget.MultiAutoCompleteTextView$Tokenizer)>($r3);

        return;
    }
    public void setTokenClickStyle(com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle $r1;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $r1 := @parameter0: com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle;

        r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle tokenClickStyle> = $r1;

        return;
    }
    public void setTokenLimit(int)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        int $i0;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $i0 := @parameter0: int;

        r0.<com.tokenautocomplete.TokenCompleteTextView: int tokenLimit> = $i0;

        return;
    }
    public void setTokenListener(com.tokenautocomplete.TokenCompleteTextView$TokenListener)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        com.tokenautocomplete.TokenCompleteTextView$TokenListener r1;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        r1 := @parameter0: com.tokenautocomplete.TokenCompleteTextView$TokenListener;

        r0.<com.tokenautocomplete.TokenCompleteTextView: com.tokenautocomplete.TokenCompleteTextView$TokenListener listener> = r1;

        return;
    }
    public void setTokenizer(android.widget.MultiAutoCompleteTextView$Tokenizer)
    {
        com.tokenautocomplete.TokenCompleteTextView r0;
        android.widget.MultiAutoCompleteTextView$Tokenizer $r1;

        r0 := @this: com.tokenautocomplete.TokenCompleteTextView;

        $r1 := @parameter0: android.widget.MultiAutoCompleteTextView$Tokenizer;

        specialinvoke r0.<android.widget.MultiAutoCompleteTextView: void setTokenizer(android.widget.MultiAutoCompleteTextView$Tokenizer)>($r1);

        r0.<com.tokenautocomplete.TokenCompleteTextView: android.widget.MultiAutoCompleteTextView$Tokenizer tokenizer> = $r1;

        return;
    }
