com.beetstra.jutf7.UTF7StyleCharset extends java.nio.charset.Charset
private static final java.util.List CONTAINED
com.beetstra.jutf7.Base64Util base64
final boolean strict
    static void <clinit>()
    {
        java.util.List $r0;
        java.lang.String[] $r1;

        $r1 = newarray (java.lang.String)[6];

        $r1[0] = "US-ASCII";

        $r1[1] = "ISO-8859-1";

        $r1[2] = "UTF-8";

        $r1[3] = "UTF-16";

        $r1[4] = "UTF-16LE";

        $r1[5] = "UTF-16BE";

        $r0 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        <com.beetstra.jutf7.UTF7StyleCharset: java.util.List CONTAINED> = $r0;

        return;
    }
    protected void <init>(java.lang.String, java.lang.String[], java.lang.String, boolean)
    {
        com.beetstra.jutf7.UTF7StyleCharset r0;
        java.lang.String $r1, $r3;
        java.lang.String[] $r2;
        boolean $z0;
        com.beetstra.jutf7.Base64Util $r4;

        r0 := @this: com.beetstra.jutf7.UTF7StyleCharset;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String[];

        $r3 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        specialinvoke r0.<java.nio.charset.Charset: void <init>(java.lang.String,java.lang.String[])>($r1, $r2);

        $r4 = new com.beetstra.jutf7.Base64Util;

        specialinvoke $r4.<com.beetstra.jutf7.Base64Util: void <init>(java.lang.String)>($r3);

        r0.<com.beetstra.jutf7.UTF7StyleCharset: com.beetstra.jutf7.Base64Util base64> = $r4;

        r0.<com.beetstra.jutf7.UTF7StyleCharset: boolean strict> = $z0;

        return;
    }
abstract boolean canEncodeDirectly(char) { 
// no body
} 
    public boolean contains(java.nio.charset.Charset)
    {
        com.beetstra.jutf7.UTF7StyleCharset r0;
        java.nio.charset.Charset $r1;
        java.util.List $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: com.beetstra.jutf7.UTF7StyleCharset;

        $r1 := @parameter0: java.nio.charset.Charset;

        $r2 = <com.beetstra.jutf7.UTF7StyleCharset: java.util.List CONTAINED>;

        $r3 = virtualinvoke $r1.<java.nio.charset.Charset: java.lang.String name()>();

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>($r3);

        return $z0;
    }
    public java.nio.charset.CharsetDecoder newDecoder()
    {
        com.beetstra.jutf7.UTF7StyleCharset r0;
        com.beetstra.jutf7.UTF7StyleCharsetDecoder $r1;
        com.beetstra.jutf7.Base64Util $r2;
        boolean $z0;

        r0 := @this: com.beetstra.jutf7.UTF7StyleCharset;

        $r1 = new com.beetstra.jutf7.UTF7StyleCharsetDecoder;

        $r2 = r0.<com.beetstra.jutf7.UTF7StyleCharset: com.beetstra.jutf7.Base64Util base64>;

        $z0 = r0.<com.beetstra.jutf7.UTF7StyleCharset: boolean strict>;

        specialinvoke $r1.<com.beetstra.jutf7.UTF7StyleCharsetDecoder: void <init>(com.beetstra.jutf7.UTF7StyleCharset,com.beetstra.jutf7.Base64Util,boolean)>(r0, $r2, $z0);

        return $r1;
    }
    public java.nio.charset.CharsetEncoder newEncoder()
    {
        com.beetstra.jutf7.UTF7StyleCharset r0;
        com.beetstra.jutf7.UTF7StyleCharsetEncoder $r1;
        com.beetstra.jutf7.Base64Util $r2;
        boolean $z0;

        r0 := @this: com.beetstra.jutf7.UTF7StyleCharset;

        $r1 = new com.beetstra.jutf7.UTF7StyleCharsetEncoder;

        $r2 = r0.<com.beetstra.jutf7.UTF7StyleCharset: com.beetstra.jutf7.Base64Util base64>;

        $z0 = r0.<com.beetstra.jutf7.UTF7StyleCharset: boolean strict>;

        specialinvoke $r1.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: void <init>(com.beetstra.jutf7.UTF7StyleCharset,com.beetstra.jutf7.Base64Util,boolean)>(r0, $r2, $z0);

        return $r1;
    }
abstract byte shift() { 
// no body
} 
abstract byte unshift() { 
// no body
} 
