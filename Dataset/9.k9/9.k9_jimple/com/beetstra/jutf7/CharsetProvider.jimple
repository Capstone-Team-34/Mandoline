com.beetstra.jutf7.CharsetProvider extends java.nio.charset.spi.CharsetProvider
private static final java.lang.String[] UTF7_ALIASES
private static final java.lang.String[] UTF7_M_ALIASES
private static final java.lang.String UTF7_M_NAME
private static final java.lang.String UTF7_NAME
private static final java.lang.String[] UTF7_O_ALIASES
private static final java.lang.String UTF7_O_NAME
private java.util.List charsets
private java.nio.charset.Charset imap4charset
private java.nio.charset.Charset utf7charset
private java.nio.charset.Charset utf7oCharset
    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[4];

        $r0[0] = "UNICODE-1-1-UTF-7";

        $r0[1] = "CSUNICODE11UTF7";

        $r0[2] = "X-RFC2152";

        $r0[3] = "X-RFC-2152";

        <com.beetstra.jutf7.CharsetProvider: java.lang.String[] UTF7_ALIASES> = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "X-RFC2152-OPTIONAL";

        $r0[1] = "X-RFC-2152-OPTIONAL";

        <com.beetstra.jutf7.CharsetProvider: java.lang.String[] UTF7_O_ALIASES> = $r0;

        $r0 = newarray (java.lang.String)[5];

        $r0[0] = "X-IMAP-MODIFIED-UTF-7";

        $r0[1] = "X-IMAP4-MODIFIED-UTF7";

        $r0[2] = "X-IMAP4-MODIFIED-UTF-7";

        $r0[3] = "X-RFC3501";

        $r0[4] = "X-RFC-3501";

        <com.beetstra.jutf7.CharsetProvider: java.lang.String[] UTF7_M_ALIASES> = $r0;

        return;
    }
    public void <init>()
    {
        com.beetstra.jutf7.CharsetProvider r0;
        java.util.List $r1;
        com.beetstra.jutf7.UTF7Charset $r2;
        java.lang.String[] $r3;
        com.beetstra.jutf7.ModifiedUTF7Charset $r4;
        java.lang.Object[] $r5;
        java.nio.charset.Charset $r6;

        r0 := @this: com.beetstra.jutf7.CharsetProvider;

        specialinvoke r0.<java.nio.charset.spi.CharsetProvider: void <init>()>();

        $r2 = new com.beetstra.jutf7.UTF7Charset;

        $r3 = <com.beetstra.jutf7.CharsetProvider: java.lang.String[] UTF7_ALIASES>;

        specialinvoke $r2.<com.beetstra.jutf7.UTF7Charset: void <init>(java.lang.String,java.lang.String[],boolean)>("UTF-7", $r3, 0);

        r0.<com.beetstra.jutf7.CharsetProvider: java.nio.charset.Charset utf7charset> = $r2;

        $r2 = new com.beetstra.jutf7.UTF7Charset;

        $r3 = <com.beetstra.jutf7.CharsetProvider: java.lang.String[] UTF7_O_ALIASES>;

        specialinvoke $r2.<com.beetstra.jutf7.UTF7Charset: void <init>(java.lang.String,java.lang.String[],boolean)>("X-UTF-7-OPTIONAL", $r3, 1);

        r0.<com.beetstra.jutf7.CharsetProvider: java.nio.charset.Charset utf7oCharset> = $r2;

        $r4 = new com.beetstra.jutf7.ModifiedUTF7Charset;

        $r3 = <com.beetstra.jutf7.CharsetProvider: java.lang.String[] UTF7_M_ALIASES>;

        specialinvoke $r4.<com.beetstra.jutf7.ModifiedUTF7Charset: void <init>(java.lang.String,java.lang.String[])>("X-MODIFIED-UTF-7", $r3);

        r0.<com.beetstra.jutf7.CharsetProvider: java.nio.charset.Charset imap4charset> = $r4;

        $r5 = newarray (java.lang.Object)[3];

        $r6 = r0.<com.beetstra.jutf7.CharsetProvider: java.nio.charset.Charset utf7charset>;

        $r5[0] = $r6;

        $r6 = r0.<com.beetstra.jutf7.CharsetProvider: java.nio.charset.Charset imap4charset>;

        $r5[1] = $r6;

        $r6 = r0.<com.beetstra.jutf7.CharsetProvider: java.nio.charset.Charset utf7oCharset>;

        $r5[2] = $r6;

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);

        r0.<com.beetstra.jutf7.CharsetProvider: java.util.List charsets> = $r1;

        return;
    }
    public static void main(java.lang.String[]) throws java.io.UnsupportedEncodingException
    {
        java.lang.String[] $r0;
        int $i0;
        java.lang.String $r1, $r2;
        boolean $z0;
        byte[] $r3;
        java.io.PrintStream $r4;

        $r0 := @parameter0: java.lang.String[];

        $i0 = lengthof $r0;

        if $i0 >= 2 goto label1;

        staticinvoke <com.beetstra.jutf7.CharsetProvider: void showUsage()>();

        return;

     label1:
        $r1 = "encode";

        $r2 = $r0[0];

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label2;

        $r1 = $r0[1];

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-7");

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.lang.String)>($r3, "US-ASCII");

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r1);

        return;

     label2:
        $r1 = "decode";

        $r2 = $r0[0];

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label3;

        $r1 = $r0[1];

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("US-ASCII");

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.lang.String)>($r3, "UTF-7");

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r1);

        return;

     label3:
        staticinvoke <com.beetstra.jutf7.CharsetProvider: void showUsage()>();

        return;
    }
    private static void showUsage()
    {
        java.io.PrintStream $r0;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("Usage: java -jar jutf7.jar [encode|decode] <text>");

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println()>();

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("Example: java -jar jutf7 encode caf\u00d4\u00f8\u03a9");

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("Result: caf+AOk-");

        return;
    }
    public java.nio.charset.Charset charsetForName(java.lang.String)
    {
        com.beetstra.jutf7.CharsetProvider r0;
        java.lang.String $r1, $r7;
        java.util.Locale $r2;
        java.util.List $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.nio.charset.Charset r6;
        java.util.Set $r8;

        r0 := @this: com.beetstra.jutf7.CharsetProvider;

        $r1 := @parameter0: java.lang.String;

        $r2 = <java.util.Locale: java.util.Locale US>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r2);

        $r3 = r0.<com.beetstra.jutf7.CharsetProvider: java.util.List charsets>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.nio.charset.Charset) $r5;

        $r7 = virtualinvoke r6.<java.nio.charset.Charset: java.lang.String name()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return r6;

     label2:
        $r3 = r0.<com.beetstra.jutf7.CharsetProvider: java.util.List charsets>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.nio.charset.Charset) $r5;

        $r8 = virtualinvoke r6.<java.nio.charset.Charset: java.util.Set aliases()>();

        $z0 = interfaceinvoke $r8.<java.util.Set: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        return r6;

     label4:
        return null;
    }
    public java.util.Iterator charsets()
    {
        com.beetstra.jutf7.CharsetProvider r0;
        java.util.Iterator $r1;
        java.util.List $r2;

        r0 := @this: com.beetstra.jutf7.CharsetProvider;

        $r2 = r0.<com.beetstra.jutf7.CharsetProvider: java.util.List charsets>;

        $r1 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        return $r1;
    }
