com.squareup.moshi.Moshi extends java.lang.Object
static final java.util.List BUILT_IN_FACTORIES
private final java.util.Map adapterCache
private final java.util.List factories
private final java.lang.ThreadLocal reentrantCalls
    static void <clinit>()
    {
        java.util.ArrayList $r0;
        java.util.List $r1;
        com.squareup.moshi.JsonAdapter$Factory $r2;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(5);

        <com.squareup.moshi.Moshi: java.util.List BUILT_IN_FACTORIES> = $r0;

        $r1 = <com.squareup.moshi.Moshi: java.util.List BUILT_IN_FACTORIES>;

        $r2 = <com.squareup.moshi.StandardJsonAdapters: com.squareup.moshi.JsonAdapter$Factory FACTORY>;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r1 = <com.squareup.moshi.Moshi: java.util.List BUILT_IN_FACTORIES>;

        $r2 = <com.squareup.moshi.CollectionJsonAdapter: com.squareup.moshi.JsonAdapter$Factory FACTORY>;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r1 = <com.squareup.moshi.Moshi: java.util.List BUILT_IN_FACTORIES>;

        $r2 = <com.squareup.moshi.MapJsonAdapter: com.squareup.moshi.JsonAdapter$Factory FACTORY>;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r1 = <com.squareup.moshi.Moshi: java.util.List BUILT_IN_FACTORIES>;

        $r2 = <com.squareup.moshi.ArrayJsonAdapter: com.squareup.moshi.JsonAdapter$Factory FACTORY>;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r1 = <com.squareup.moshi.Moshi: java.util.List BUILT_IN_FACTORIES>;

        $r2 = <com.squareup.moshi.ClassJsonAdapter: com.squareup.moshi.JsonAdapter$Factory FACTORY>;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        return;
    }
    void <init>(com.squareup.moshi.Moshi$Builder)
    {
        com.squareup.moshi.Moshi r0;
        com.squareup.moshi.Moshi$Builder $r1;
        java.util.ArrayList r2;
        java.lang.ThreadLocal $r3;
        java.util.LinkedHashMap $r4;
        java.util.List $r5;
        int $i0, $i1;

        r0 := @this: com.squareup.moshi.Moshi;

        $r1 := @parameter0: com.squareup.moshi.Moshi$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.ThreadLocal;

        specialinvoke $r3.<java.lang.ThreadLocal: void <init>()>();

        r0.<com.squareup.moshi.Moshi: java.lang.ThreadLocal reentrantCalls> = $r3;

        $r4 = new java.util.LinkedHashMap;

        specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.squareup.moshi.Moshi: java.util.Map adapterCache> = $r4;

        r2 = new java.util.ArrayList;

        $r5 = $r1.<com.squareup.moshi.Moshi$Builder: java.util.List factories>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r5 = <com.squareup.moshi.Moshi: java.util.List BUILT_IN_FACTORIES>;

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i0 = $i0 + $i1;

        specialinvoke r2.<java.util.ArrayList: void <init>(int)>($i0);

        $r5 = $r1.<com.squareup.moshi.Moshi$Builder: java.util.List factories>;

        interfaceinvoke r2.<java.util.List: boolean addAll(java.util.Collection)>($r5);

        $r5 = <com.squareup.moshi.Moshi: java.util.List BUILT_IN_FACTORIES>;

        interfaceinvoke r2.<java.util.List: boolean addAll(java.util.Collection)>($r5);

        $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r2);

        r0.<com.squareup.moshi.Moshi: java.util.List factories> = $r5;

        return;
    }
    private java.lang.Object cacheKey(java.lang.reflect.Type, java.util.Set)
    {
        com.squareup.moshi.Moshi r0;
        java.util.Set r1;
        java.lang.reflect.Type r2;
        boolean $z0;
        java.lang.Object[] $r3;
        java.util.List $r4;

        r0 := @this: com.squareup.moshi.Moshi;

        r2 := @parameter0: java.lang.reflect.Type;

        r1 := @parameter1: java.util.Set;

        $z0 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return r2;

     label1:
        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = r2;

        $r3[1] = r1;

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        return $r4;
    }
    public com.squareup.moshi.JsonAdapter adapter(java.lang.Class)
    {
        com.squareup.moshi.Moshi r0;
        java.lang.Class r1;
        com.squareup.moshi.JsonAdapter $r2;
        java.util.Set $r3;

        r0 := @this: com.squareup.moshi.Moshi;

        r1 := @parameter0: java.lang.Class;

        $r3 = <com.squareup.moshi.Util: java.util.Set NO_ANNOTATIONS>;

        $r2 = virtualinvoke r0.<com.squareup.moshi.Moshi: com.squareup.moshi.JsonAdapter adapter(java.lang.reflect.Type,java.util.Set)>(r1, $r3);

        return $r2;
    }
    public com.squareup.moshi.JsonAdapter adapter(java.lang.reflect.Type)
    {
        com.squareup.moshi.Moshi r0;
        java.lang.reflect.Type $r1;
        com.squareup.moshi.JsonAdapter $r2;
        java.util.Set $r3;

        r0 := @this: com.squareup.moshi.Moshi;

        $r1 := @parameter0: java.lang.reflect.Type;

        $r3 = <com.squareup.moshi.Util: java.util.Set NO_ANNOTATIONS>;

        $r2 = virtualinvoke r0.<com.squareup.moshi.Moshi: com.squareup.moshi.JsonAdapter adapter(java.lang.reflect.Type,java.util.Set)>($r1, $r3);

        return $r2;
    }
    public com.squareup.moshi.JsonAdapter adapter(java.lang.reflect.Type, java.util.Set)
    {
        com.squareup.moshi.Moshi r0;
        java.util.Set r1;
        com.squareup.moshi.Moshi$DeferredAdapter r2, $r19;
        java.lang.reflect.Type $r3;
        java.lang.Object $r4, $r7;
        java.util.Map $r5, $r6;
        com.squareup.moshi.JsonAdapter r8;
        java.lang.ThreadLocal $r9;
        java.util.List r10, $r12;
        int i0, $i1;
        boolean $z0;
        java.lang.Throwable $r11, $r14, $r15;
        com.squareup.moshi.JsonAdapter$Factory $r13;
        java.lang.StringBuilder $r16, $r20;
        java.lang.String $r17;
        java.util.ArrayList $r18;
        java.lang.IllegalArgumentException $r21;

        r0 := @this: com.squareup.moshi.Moshi;

        $r3 := @parameter0: java.lang.reflect.Type;

        r1 := @parameter1: java.util.Set;

        $r3 = staticinvoke <com.squareup.moshi.Types: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)>($r3);

        $r4 = specialinvoke r0.<com.squareup.moshi.Moshi: java.lang.Object cacheKey(java.lang.reflect.Type,java.util.Set)>($r3, r1);

        $r5 = r0.<com.squareup.moshi.Moshi: java.util.Map adapterCache>;

        entermonitor $r5;

     label01:
        $r6 = r0.<com.squareup.moshi.Moshi: java.util.Map adapterCache>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r8 = (com.squareup.moshi.JsonAdapter) $r7;

        if r8 == null goto label03;

        exitmonitor $r5;

     label02:
        return r8;

     label03:
        exitmonitor $r5;

     label04:
        $r9 = r0.<com.squareup.moshi.Moshi: java.lang.ThreadLocal reentrantCalls>;

        $r7 = virtualinvoke $r9.<java.lang.ThreadLocal: java.lang.Object get()>();

        r10 = (java.util.List) $r7;

        if r10 == null goto label10;

        i0 = 0;

        $i1 = interfaceinvoke r10.<java.util.List: int size()>();

     label05:
        if i0 >= $i1 goto label11;

        $r7 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(i0);

        r2 = (com.squareup.moshi.Moshi$DeferredAdapter) $r7;

        $r7 = r2.<com.squareup.moshi.Moshi$DeferredAdapter: java.lang.Object cacheKey>;

        $z0 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label09;

        return r2;

     label06:
        $r11 := @caughtexception;

     label07:
        exitmonitor $r5;

     label08:
        throw $r11;

     label09:
        i0 = i0 + 1;

        goto label05;

     label10:
        $r18 = new java.util.ArrayList;

        r10 = $r18;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        $r9 = r0.<com.squareup.moshi.Moshi: java.lang.ThreadLocal reentrantCalls>;

        virtualinvoke $r9.<java.lang.ThreadLocal: void set(java.lang.Object)>($r18);

     label11:
        $r19 = new com.squareup.moshi.Moshi$DeferredAdapter;

        specialinvoke $r19.<com.squareup.moshi.Moshi$DeferredAdapter: void <init>(java.lang.Object)>($r4);

        interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>($r19);

        i0 = 0;

     label12:
        $r12 = r0.<com.squareup.moshi.Moshi: java.util.List factories>;

        $i1 = interfaceinvoke $r12.<java.util.List: int size()>();

     label13:
        if i0 >= $i1 goto label26;

     label14:
        $r12 = r0.<com.squareup.moshi.Moshi: java.util.List factories>;

        $r7 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i0);

        $r13 = (com.squareup.moshi.JsonAdapter$Factory) $r7;

        r8 = interfaceinvoke $r13.<com.squareup.moshi.JsonAdapter$Factory: com.squareup.moshi.JsonAdapter create(java.lang.reflect.Type,java.util.Set,com.squareup.moshi.Moshi)>($r3, r1, r0);

     label15:
        if r8 == null goto label25;

     label16:
        virtualinvoke $r19.<com.squareup.moshi.Moshi$DeferredAdapter: void ready(com.squareup.moshi.JsonAdapter)>(r8);

        $r5 = r0.<com.squareup.moshi.Moshi: java.util.Map adapterCache>;

        entermonitor $r5;

     label17:
        $r6 = r0.<com.squareup.moshi.Moshi: java.util.Map adapterCache>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r8);

        exitmonitor $r5;

     label18:
        i0 = interfaceinvoke r10.<java.util.List: int size()>();

        i0 = i0 + -1;

        interfaceinvoke r10.<java.util.List: java.lang.Object remove(int)>(i0);

        $z0 = interfaceinvoke r10.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label19;

        $r9 = r0.<com.squareup.moshi.Moshi: java.lang.ThreadLocal reentrantCalls>;

        virtualinvoke $r9.<java.lang.ThreadLocal: void remove()>();

     label19:
        return r8;

     label20:
        $r14 := @caughtexception;

     label21:
        exitmonitor $r5;

     label22:
        throw $r14;

     label23:
        $r15 := @caughtexception;

        i0 = interfaceinvoke r10.<java.util.List: int size()>();

        i0 = i0 + -1;

        interfaceinvoke r10.<java.util.List: java.lang.Object remove(int)>(i0);

        $z0 = interfaceinvoke r10.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label24;

        $r9 = r0.<com.squareup.moshi.Moshi: java.lang.ThreadLocal reentrantCalls>;

        virtualinvoke $r9.<java.lang.ThreadLocal: void remove()>();

     label24:
        throw $r15;

     label25:
        i0 = i0 + 1;

        goto label13;

     label26:
        i0 = interfaceinvoke r10.<java.util.List: int size()>();

        i0 = i0 + -1;

        interfaceinvoke r10.<java.util.List: java.lang.Object remove(int)>(i0);

        $z0 = interfaceinvoke r10.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label27;

        $r9 = r0.<com.squareup.moshi.Moshi: java.lang.ThreadLocal reentrantCalls>;

        virtualinvoke $r9.<java.lang.ThreadLocal: void remove()>();

     label27:
        $r21 = new java.lang.IllegalArgumentException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No JsonAdapter for ");

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" annotated ");

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r21;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label12 to label13 with label23;
        catch java.lang.Throwable from label14 to label15 with label23;
        catch java.lang.Throwable from label16 to label17 with label23;
        catch java.lang.Throwable from label17 to label18 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
        catch java.lang.Throwable from label22 to label23 with label23;
    }
    public com.squareup.moshi.Moshi$Builder newBuilder()
    {
        com.squareup.moshi.Moshi r0;
        int $i0, $i1;
        java.util.List $r1;
        com.squareup.moshi.Moshi$Builder $r2;

        r0 := @this: com.squareup.moshi.Moshi;

        $r1 = r0.<com.squareup.moshi.Moshi: java.util.List factories>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r1 = <com.squareup.moshi.Moshi: java.util.List BUILT_IN_FACTORIES>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r1 = r0.<com.squareup.moshi.Moshi: java.util.List factories>;

        $i0 = $i0 - $i1;

        $r1 = interfaceinvoke $r1.<java.util.List: java.util.List subList(int,int)>(0, $i0);

        $r2 = new com.squareup.moshi.Moshi$Builder;

        specialinvoke $r2.<com.squareup.moshi.Moshi$Builder: void <init>()>();

        $r2 = virtualinvoke $r2.<com.squareup.moshi.Moshi$Builder: com.squareup.moshi.Moshi$Builder addAll(java.util.List)>($r1);

        return $r2;
    }
    public com.squareup.moshi.JsonAdapter nextAdapter(com.squareup.moshi.JsonAdapter$Factory, java.lang.reflect.Type, java.util.Set)
    {
        com.squareup.moshi.Moshi r0;
        com.squareup.moshi.JsonAdapter$Factory $r1;
        java.util.Set r2;
        java.lang.reflect.Type $r3;
        java.util.List $r4;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        java.lang.Object $r8;
        com.squareup.moshi.JsonAdapter $r9;

        r0 := @this: com.squareup.moshi.Moshi;

        $r1 := @parameter0: com.squareup.moshi.JsonAdapter$Factory;

        $r3 := @parameter1: java.lang.reflect.Type;

        r2 := @parameter2: java.util.Set;

        $r3 = staticinvoke <com.squareup.moshi.Types: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)>($r3);

        $r4 = r0.<com.squareup.moshi.Moshi: java.util.List factories>;

        $i0 = interfaceinvoke $r4.<java.util.List: int indexOf(java.lang.Object)>($r1);

        if $i0 != -1 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to skip past unknown factory ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label1:
        $i0 = $i0 + 1;

        $r4 = r0.<com.squareup.moshi.Moshi: java.util.List factories>;

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

     label2:
        if $i0 >= $i1 goto label4;

        $r4 = r0.<com.squareup.moshi.Moshi: java.util.List factories>;

        $r8 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i0);

        $r1 = (com.squareup.moshi.JsonAdapter$Factory) $r8;

        $r9 = interfaceinvoke $r1.<com.squareup.moshi.JsonAdapter$Factory: com.squareup.moshi.JsonAdapter create(java.lang.reflect.Type,java.util.Set,com.squareup.moshi.Moshi)>($r3, r2, r0);

        if $r9 == null goto label3;

        return $r9;

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No next JsonAdapter for ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" annotated ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r5;
    }
