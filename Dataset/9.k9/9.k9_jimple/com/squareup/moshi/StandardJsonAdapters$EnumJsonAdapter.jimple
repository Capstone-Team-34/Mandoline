com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter extends com.squareup.moshi.JsonAdapter
private final java.lang.Enum[] constants
private final java.lang.Class enumType
private final java.util.Map nameConstantMap
private final java.lang.String[] nameStrings
private final com.squareup.moshi.JsonReader$Options options
    public void <init>(java.lang.Class)
    {
        com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter r0;
        java.lang.Class r1;
        java.lang.Enum r2;
        java.lang.NoSuchFieldException r3;
        java.lang.Object[] $r4;
        java.lang.Enum[] $r5;
        java.util.LinkedHashMap $r6;
        int $i0, $i1;
        java.lang.String[] $r7;
        java.lang.String $r8;
        java.lang.reflect.Field $r9;
        java.lang.'annotation'.Annotation $r10;
        com.squareup.moshi.Json r11;
        java.util.Map $r12;
        com.squareup.moshi.JsonReader$Options $r13;
        java.lang.AssertionError $r14;
        java.lang.StringBuilder $r15;

        r0 := @this: com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<com.squareup.moshi.JsonAdapter: void <init>()>();

        r0.<com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter: java.lang.Class enumType> = r1;

     label01:
        $r4 = virtualinvoke r1.<java.lang.Class: java.lang.Object[] getEnumConstants()>();

     label02:
        $r5 = (java.lang.Enum[]) $r4;

        r0.<com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter: java.lang.Enum[] constants> = $r5;

        $r6 = new java.util.LinkedHashMap;

     label03:
        specialinvoke $r6.<java.util.LinkedHashMap: void <init>()>();

     label04:
        r0.<com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter: java.util.Map nameConstantMap> = $r6;

        $r5 = r0.<com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter: java.lang.Enum[] constants>;

        $i0 = lengthof $r5;

        $r7 = newarray (java.lang.String)[$i0];

        r0.<com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter: java.lang.String[] nameStrings> = $r7;

        $i0 = 0;

     label05:
        $r5 = r0.<com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter: java.lang.Enum[] constants>;

        $i1 = lengthof $r5;

        if $i0 >= $i1 goto label14;

        $r5 = r0.<com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter: java.lang.Enum[] constants>;

        r2 = $r5[$i0];

     label06:
        $r8 = virtualinvoke r2.<java.lang.Enum: java.lang.String name()>();

        $r9 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.reflect.Field: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lcom/squareup/moshi/Json;");

     label07:
        r11 = (com.squareup.moshi.Json) $r10;

        if r11 == null goto label12;

     label08:
        $r8 = interfaceinvoke r11.<com.squareup.moshi.Json: java.lang.String name()>();

     label09:
        $r12 = r0.<com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter: java.util.Map nameConstantMap>;

     label10:
        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r2);

     label11:
        $r7 = r0.<com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter: java.lang.String[] nameStrings>;

        $r7[$i0] = $r8;

        $i0 = $i0 + 1;

        goto label05;

     label12:
        $r8 = virtualinvoke r2.<java.lang.Enum: java.lang.String name()>();

     label13:
        goto label09;

     label14:
        $r7 = r0.<com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter: java.lang.String[] nameStrings>;

     label15:
        $r13 = staticinvoke <com.squareup.moshi.JsonReader$Options: com.squareup.moshi.JsonReader$Options of(java.lang.String[])>($r7);

     label16:
        r0.<com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter: com.squareup.moshi.JsonReader$Options options> = $r13;

        return;

     label17:
        r3 := @caughtexception;

        $r14 = new java.lang.AssertionError;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing field in ");

        $r8 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.AssertionError: void <init>(java.lang.String,java.lang.Throwable)>($r8, r3);

        throw $r14;

        catch java.lang.NoSuchFieldException from label01 to label02 with label17;
        catch java.lang.NoSuchFieldException from label03 to label04 with label17;
        catch java.lang.NoSuchFieldException from label06 to label07 with label17;
        catch java.lang.NoSuchFieldException from label08 to label09 with label17;
        catch java.lang.NoSuchFieldException from label10 to label11 with label17;
        catch java.lang.NoSuchFieldException from label12 to label13 with label17;
        catch java.lang.NoSuchFieldException from label15 to label16 with label17;
    }
    public java.lang.Enum fromJson(com.squareup.moshi.JsonReader) throws java.io.IOException
    {
        com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter r0;
        com.squareup.moshi.JsonReader $r1;
        com.squareup.moshi.JsonReader$Options $r2;
        int $i0;
        java.lang.Enum[] $r3;
        java.lang.Enum r4;
        java.lang.String $r5;
        java.util.Map $r6;
        java.lang.Object $r7;
        com.squareup.moshi.JsonDataException $r8;
        java.lang.StringBuilder $r9;
        java.util.Set $r10;

        r0 := @this: com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter;

        $r1 := @parameter0: com.squareup.moshi.JsonReader;

        $r2 = r0.<com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter: com.squareup.moshi.JsonReader$Options options>;

        $i0 = virtualinvoke $r1.<com.squareup.moshi.JsonReader: int selectString(com.squareup.moshi.JsonReader$Options)>($r2);

        if $i0 == -1 goto label1;

        $r3 = r0.<com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter: java.lang.Enum[] constants>;

        r4 = $r3[$i0];

        return r4;

     label1:
        $r5 = virtualinvoke $r1.<com.squareup.moshi.JsonReader: java.lang.String nextString()>();

        $r6 = r0.<com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter: java.util.Map nameConstantMap>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r4 = (java.lang.Enum) $r7;

        if r4 != null goto label2;

        $r8 = new com.squareup.moshi.JsonDataException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected one of ");

        $r6 = r0.<com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter: java.util.Map nameConstantMap>;

        $r10 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but was ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at path ");

        $r5 = virtualinvoke $r1.<com.squareup.moshi.JsonReader: java.lang.String getPath()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<com.squareup.moshi.JsonDataException: void <init>(java.lang.String)>($r5);

        throw $r8;

     label2:
        return r4;
    }
    public volatile java.lang.Object fromJson(com.squareup.moshi.JsonReader) throws java.io.IOException
    {
        com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter r0;
        com.squareup.moshi.JsonReader $r1;
        java.lang.Enum $r2;

        r0 := @this: com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter;

        $r1 := @parameter0: com.squareup.moshi.JsonReader;

        $r2 = virtualinvoke r0.<com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter: java.lang.Enum fromJson(com.squareup.moshi.JsonReader)>($r1);

        return $r2;
    }
    public void toJson(com.squareup.moshi.JsonWriter, java.lang.Enum) throws java.io.IOException
    {
        com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter r0;
        com.squareup.moshi.JsonWriter $r1;
        java.lang.Enum r2;
        int $i0;
        java.lang.String[] $r3;
        java.lang.String $r4;

        r0 := @this: com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter;

        $r1 := @parameter0: com.squareup.moshi.JsonWriter;

        r2 := @parameter1: java.lang.Enum;

        $r3 = r0.<com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter: java.lang.String[] nameStrings>;

        $i0 = virtualinvoke r2.<java.lang.Enum: int ordinal()>();

        $r4 = $r3[$i0];

        virtualinvoke $r1.<com.squareup.moshi.JsonWriter: com.squareup.moshi.JsonWriter value(java.lang.String)>($r4);

        return;
    }
    public volatile void toJson(com.squareup.moshi.JsonWriter, java.lang.Object) throws java.io.IOException
    {
        com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter r0;
        com.squareup.moshi.JsonWriter $r1;
        java.lang.Object $r2;
        java.lang.Enum $r3;

        r0 := @this: com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter;

        $r1 := @parameter0: com.squareup.moshi.JsonWriter;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Enum) $r2;

        virtualinvoke r0.<com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter: void toJson(com.squareup.moshi.JsonWriter,java.lang.Enum)>($r1, $r3);

        return;
    }
    public java.lang.String toString()
    {
        com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter r0;
        java.lang.StringBuilder $r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JsonAdapter(");

        $r2 = r0.<com.squareup.moshi.StandardJsonAdapters$EnumJsonAdapter: java.lang.Class enumType>;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
