com.squareup.moshi.CollectionJsonAdapter extends com.squareup.moshi.JsonAdapter
public static final com.squareup.moshi.JsonAdapter$Factory FACTORY
private final com.squareup.moshi.JsonAdapter elementAdapter
    static void <clinit>()
    {
        com.squareup.moshi.CollectionJsonAdapter$1 $r0;

        $r0 = new com.squareup.moshi.CollectionJsonAdapter$1;

        specialinvoke $r0.<com.squareup.moshi.CollectionJsonAdapter$1: void <init>()>();

        <com.squareup.moshi.CollectionJsonAdapter: com.squareup.moshi.JsonAdapter$Factory FACTORY> = $r0;

        return;
    }
    private void <init>(com.squareup.moshi.JsonAdapter)
    {
        com.squareup.moshi.CollectionJsonAdapter r0;
        com.squareup.moshi.JsonAdapter r1;

        r0 := @this: com.squareup.moshi.CollectionJsonAdapter;

        r1 := @parameter0: com.squareup.moshi.JsonAdapter;

        specialinvoke r0.<com.squareup.moshi.JsonAdapter: void <init>()>();

        r0.<com.squareup.moshi.CollectionJsonAdapter: com.squareup.moshi.JsonAdapter elementAdapter> = r1;

        return;
    }
    void <init>(com.squareup.moshi.JsonAdapter, com.squareup.moshi.CollectionJsonAdapter$1)
    {
        com.squareup.moshi.CollectionJsonAdapter r0;
        com.squareup.moshi.JsonAdapter $r1;
        com.squareup.moshi.CollectionJsonAdapter$1 $r2;

        r0 := @this: com.squareup.moshi.CollectionJsonAdapter;

        $r1 := @parameter0: com.squareup.moshi.JsonAdapter;

        $r2 := @parameter1: com.squareup.moshi.CollectionJsonAdapter$1;

        specialinvoke r0.<com.squareup.moshi.CollectionJsonAdapter: void <init>(com.squareup.moshi.JsonAdapter)>($r1);

        return;
    }
    static com.squareup.moshi.JsonAdapter newArrayListAdapter(java.lang.reflect.Type, com.squareup.moshi.Moshi)
    {
        java.lang.reflect.Type $r0;
        com.squareup.moshi.Moshi $r1;
        com.squareup.moshi.JsonAdapter $r2;
        com.squareup.moshi.CollectionJsonAdapter$2 $r3;

        $r0 := @parameter0: java.lang.reflect.Type;

        $r1 := @parameter1: com.squareup.moshi.Moshi;

        $r0 = staticinvoke <com.squareup.moshi.Types: java.lang.reflect.Type collectionElementType(java.lang.reflect.Type,java.lang.Class)>($r0, class "Ljava/util/Collection;");

        $r2 = virtualinvoke $r1.<com.squareup.moshi.Moshi: com.squareup.moshi.JsonAdapter adapter(java.lang.reflect.Type)>($r0);

        $r3 = new com.squareup.moshi.CollectionJsonAdapter$2;

        specialinvoke $r3.<com.squareup.moshi.CollectionJsonAdapter$2: void <init>(com.squareup.moshi.JsonAdapter)>($r2);

        return $r3;
    }
    static com.squareup.moshi.JsonAdapter newLinkedHashSetAdapter(java.lang.reflect.Type, com.squareup.moshi.Moshi)
    {
        java.lang.reflect.Type $r0;
        com.squareup.moshi.Moshi $r1;
        com.squareup.moshi.JsonAdapter $r2;
        com.squareup.moshi.CollectionJsonAdapter$3 $r3;

        $r0 := @parameter0: java.lang.reflect.Type;

        $r1 := @parameter1: com.squareup.moshi.Moshi;

        $r0 = staticinvoke <com.squareup.moshi.Types: java.lang.reflect.Type collectionElementType(java.lang.reflect.Type,java.lang.Class)>($r0, class "Ljava/util/Collection;");

        $r2 = virtualinvoke $r1.<com.squareup.moshi.Moshi: com.squareup.moshi.JsonAdapter adapter(java.lang.reflect.Type)>($r0);

        $r3 = new com.squareup.moshi.CollectionJsonAdapter$3;

        specialinvoke $r3.<com.squareup.moshi.CollectionJsonAdapter$3: void <init>(com.squareup.moshi.JsonAdapter)>($r2);

        return $r3;
    }
    public volatile java.lang.Object fromJson(com.squareup.moshi.JsonReader) throws java.io.IOException
    {
        com.squareup.moshi.CollectionJsonAdapter r0;
        com.squareup.moshi.JsonReader $r1;
        java.util.Collection $r2;

        r0 := @this: com.squareup.moshi.CollectionJsonAdapter;

        $r1 := @parameter0: com.squareup.moshi.JsonReader;

        $r2 = virtualinvoke r0.<com.squareup.moshi.CollectionJsonAdapter: java.util.Collection fromJson(com.squareup.moshi.JsonReader)>($r1);

        return $r2;
    }
    public java.util.Collection fromJson(com.squareup.moshi.JsonReader) throws java.io.IOException
    {
        com.squareup.moshi.CollectionJsonAdapter r0;
        com.squareup.moshi.JsonReader $r1;
        java.util.Collection $r2;
        boolean $z0;
        com.squareup.moshi.JsonAdapter $r3;
        java.lang.Object $r4;

        r0 := @this: com.squareup.moshi.CollectionJsonAdapter;

        $r1 := @parameter0: com.squareup.moshi.JsonReader;

        $r2 = virtualinvoke r0.<com.squareup.moshi.CollectionJsonAdapter: java.util.Collection newCollection()>();

        virtualinvoke $r1.<com.squareup.moshi.JsonReader: void beginArray()>();

     label1:
        $z0 = virtualinvoke $r1.<com.squareup.moshi.JsonReader: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.squareup.moshi.CollectionJsonAdapter: com.squareup.moshi.JsonAdapter elementAdapter>;

        $r4 = virtualinvoke $r3.<com.squareup.moshi.JsonAdapter: java.lang.Object fromJson(com.squareup.moshi.JsonReader)>($r1);

        interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        goto label1;

     label2:
        virtualinvoke $r1.<com.squareup.moshi.JsonReader: void endArray()>();

        return $r2;
    }
abstract java.util.Collection newCollection() { 
// no body
} 
    public volatile void toJson(com.squareup.moshi.JsonWriter, java.lang.Object) throws java.io.IOException
    {
        com.squareup.moshi.CollectionJsonAdapter r0;
        com.squareup.moshi.JsonWriter $r1;
        java.lang.Object $r2;
        java.util.Collection $r3;

        r0 := @this: com.squareup.moshi.CollectionJsonAdapter;

        $r1 := @parameter0: com.squareup.moshi.JsonWriter;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (java.util.Collection) $r2;

        virtualinvoke r0.<com.squareup.moshi.CollectionJsonAdapter: void toJson(com.squareup.moshi.JsonWriter,java.util.Collection)>($r1, $r3);

        return;
    }
    public void toJson(com.squareup.moshi.JsonWriter, java.util.Collection) throws java.io.IOException
    {
        com.squareup.moshi.CollectionJsonAdapter r0;
        com.squareup.moshi.JsonWriter $r1;
        java.util.Collection r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.squareup.moshi.JsonAdapter $r5;

        r0 := @this: com.squareup.moshi.CollectionJsonAdapter;

        $r1 := @parameter0: com.squareup.moshi.JsonWriter;

        r2 := @parameter1: java.util.Collection;

        virtualinvoke $r1.<com.squareup.moshi.JsonWriter: com.squareup.moshi.JsonWriter beginArray()>();

        $r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = r0.<com.squareup.moshi.CollectionJsonAdapter: com.squareup.moshi.JsonAdapter elementAdapter>;

        virtualinvoke $r5.<com.squareup.moshi.JsonAdapter: void toJson(com.squareup.moshi.JsonWriter,java.lang.Object)>($r1, $r4);

        goto label1;

     label2:
        virtualinvoke $r1.<com.squareup.moshi.JsonWriter: com.squareup.moshi.JsonWriter endArray()>();

        return;
    }
    public java.lang.String toString()
    {
        com.squareup.moshi.CollectionJsonAdapter r0;
        java.lang.StringBuilder $r1;
        com.squareup.moshi.JsonAdapter $r2;
        java.lang.String $r3;

        r0 := @this: com.squareup.moshi.CollectionJsonAdapter;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<com.squareup.moshi.CollectionJsonAdapter: com.squareup.moshi.JsonAdapter elementAdapter>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".collection()");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
