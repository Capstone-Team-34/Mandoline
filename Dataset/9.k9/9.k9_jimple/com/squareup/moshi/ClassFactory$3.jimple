com.squareup.moshi.ClassFactory$3 extends com.squareup.moshi.ClassFactory
final int val$constructorId
final java.lang.reflect.Method val$newInstance
final java.lang.Class val$rawType
    void <init>(java.lang.reflect.Method, java.lang.Class, int)
    {
        com.squareup.moshi.ClassFactory$3 r0;
        java.lang.reflect.Method $r1;
        java.lang.Class $r2;
        int $i0;

        r0 := @this: com.squareup.moshi.ClassFactory$3;

        $r1 := @parameter0: java.lang.reflect.Method;

        $r2 := @parameter1: java.lang.Class;

        $i0 := @parameter2: int;

        r0.<com.squareup.moshi.ClassFactory$3: java.lang.reflect.Method val$newInstance> = $r1;

        r0.<com.squareup.moshi.ClassFactory$3: java.lang.Class val$rawType> = $r2;

        r0.<com.squareup.moshi.ClassFactory$3: int val$constructorId> = $i0;

        specialinvoke r0.<com.squareup.moshi.ClassFactory: void <init>()>();

        return;
    }
    public java.lang.Object newInstance() throws java.lang.reflect.InvocationTargetException, java.lang.IllegalAccessException
    {
        com.squareup.moshi.ClassFactory$3 r0;
        java.lang.reflect.Method $r1;
        java.lang.Object[] $r2;
        java.lang.Class $r3;
        int $i0;
        java.lang.Integer $r4;
        java.lang.Object $r5;

        r0 := @this: com.squareup.moshi.ClassFactory$3;

        $r1 = r0.<com.squareup.moshi.ClassFactory$3: java.lang.reflect.Method val$newInstance>;

        $r2 = newarray (java.lang.Object)[2];

        $r3 = r0.<com.squareup.moshi.ClassFactory$3: java.lang.Class val$rawType>;

        $r2[0] = $r3;

        $i0 = r0.<com.squareup.moshi.ClassFactory$3: int val$constructorId>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[1] = $r4;

        $r5 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r2);

        return $r5;
    }
    public java.lang.String toString()
    {
        com.squareup.moshi.ClassFactory$3 r0;
        java.lang.String $r1;
        java.lang.Class $r2;

        r0 := @this: com.squareup.moshi.ClassFactory$3;

        $r2 = r0.<com.squareup.moshi.ClassFactory$3: java.lang.Class val$rawType>;

        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        return $r1;
    }
