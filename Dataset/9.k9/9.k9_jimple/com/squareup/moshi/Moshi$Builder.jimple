com.squareup.moshi.Moshi$Builder extends java.lang.Object
final java.util.List factories
    public void <init>()
    {
        com.squareup.moshi.Moshi$Builder r0;
        java.util.ArrayList $r1;

        r0 := @this: com.squareup.moshi.Moshi$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.squareup.moshi.Moshi$Builder: java.util.List factories> = $r1;

        return;
    }
    public com.squareup.moshi.Moshi$Builder add(com.squareup.moshi.JsonAdapter$Factory)
    {
        com.squareup.moshi.Moshi$Builder r0;
        com.squareup.moshi.JsonAdapter$Factory $r1;
        java.util.List $r2;

        r0 := @this: com.squareup.moshi.Moshi$Builder;

        $r1 := @parameter0: com.squareup.moshi.JsonAdapter$Factory;

        $r2 = r0.<com.squareup.moshi.Moshi$Builder: java.util.List factories>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return r0;
    }
    public com.squareup.moshi.Moshi$Builder add(java.lang.Object)
    {
        com.squareup.moshi.Moshi$Builder r0;
        java.lang.Object $r1;
        com.squareup.moshi.AdapterMethodsFactory $r2;

        r0 := @this: com.squareup.moshi.Moshi$Builder;

        $r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <com.squareup.moshi.AdapterMethodsFactory: com.squareup.moshi.AdapterMethodsFactory get(java.lang.Object)>($r1);

        r0 = virtualinvoke r0.<com.squareup.moshi.Moshi$Builder: com.squareup.moshi.Moshi$Builder add(com.squareup.moshi.JsonAdapter$Factory)>($r2);

        return r0;
    }
    public com.squareup.moshi.Moshi$Builder add(java.lang.reflect.Type, com.squareup.moshi.JsonAdapter)
    {
        com.squareup.moshi.Moshi$Builder r0;
        java.lang.reflect.Type $r1;
        com.squareup.moshi.JsonAdapter r2;
        java.lang.IllegalArgumentException $r3;
        com.squareup.moshi.Moshi$Builder$1 $r4;

        r0 := @this: com.squareup.moshi.Moshi$Builder;

        $r1 := @parameter0: java.lang.reflect.Type;

        r2 := @parameter1: com.squareup.moshi.JsonAdapter;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("type == null");

        throw $r3;

     label1:
        if r2 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("jsonAdapter == null");

        throw $r3;

     label2:
        $r4 = new com.squareup.moshi.Moshi$Builder$1;

        specialinvoke $r4.<com.squareup.moshi.Moshi$Builder$1: void <init>(com.squareup.moshi.Moshi$Builder,java.lang.reflect.Type,com.squareup.moshi.JsonAdapter)>(r0, $r1, r2);

        r0 = virtualinvoke r0.<com.squareup.moshi.Moshi$Builder: com.squareup.moshi.Moshi$Builder add(com.squareup.moshi.JsonAdapter$Factory)>($r4);

        return r0;
    }
    public com.squareup.moshi.Moshi$Builder add(java.lang.reflect.Type, java.lang.Class, com.squareup.moshi.JsonAdapter)
    {
        com.squareup.moshi.Moshi$Builder r0;
        java.lang.reflect.Type $r1;
        java.lang.Class r2;
        com.squareup.moshi.JsonAdapter r3;
        java.lang.IllegalArgumentException $r4;
        boolean $z0;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        java.lang.reflect.Method[] $r7;
        int $i0;
        com.squareup.moshi.Moshi$Builder$2 $r8;

        r0 := @this: com.squareup.moshi.Moshi$Builder;

        $r1 := @parameter0: java.lang.reflect.Type;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: com.squareup.moshi.JsonAdapter;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("type == null");

        throw $r4;

     label1:
        if r2 != null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("annotation == null");

        throw $r4;

     label2:
        if r3 != null goto label3;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("jsonAdapter == null");

        throw $r4;

     label3:
        $z0 = virtualinvoke r2.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>(class "Lcom/squareup/moshi/JsonQualifier;");

        if $z0 != 0 goto label4;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have @JsonQualifier");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label4:
        $r7 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        $i0 = lengthof $r7;

        if $i0 <= 0 goto label5;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Use JsonAdapter.Factory for annotations with elements");

        throw $r4;

     label5:
        $r8 = new com.squareup.moshi.Moshi$Builder$2;

        specialinvoke $r8.<com.squareup.moshi.Moshi$Builder$2: void <init>(com.squareup.moshi.Moshi$Builder,java.lang.reflect.Type,java.lang.Class,com.squareup.moshi.JsonAdapter)>(r0, $r1, r2, r3);

        r0 = virtualinvoke r0.<com.squareup.moshi.Moshi$Builder: com.squareup.moshi.Moshi$Builder add(com.squareup.moshi.JsonAdapter$Factory)>($r8);

        return r0;
    }
    com.squareup.moshi.Moshi$Builder addAll(java.util.List)
    {
        com.squareup.moshi.Moshi$Builder r0;
        java.util.List r1, $r2;

        r0 := @this: com.squareup.moshi.Moshi$Builder;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<com.squareup.moshi.Moshi$Builder: java.util.List factories>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        return r0;
    }
    public com.squareup.moshi.Moshi build()
    {
        com.squareup.moshi.Moshi$Builder r0;
        com.squareup.moshi.Moshi $r1;

        r0 := @this: com.squareup.moshi.Moshi$Builder;

        $r1 = new com.squareup.moshi.Moshi;

        specialinvoke $r1.<com.squareup.moshi.Moshi: void <init>(com.squareup.moshi.Moshi$Builder)>(r0);

        return $r1;
    }
