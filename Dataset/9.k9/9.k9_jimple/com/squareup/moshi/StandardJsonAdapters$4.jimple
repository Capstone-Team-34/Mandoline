com.squareup.moshi.StandardJsonAdapters$4 extends com.squareup.moshi.JsonAdapter
    void <init>()
    {
        com.squareup.moshi.StandardJsonAdapters$4 r0;

        r0 := @this: com.squareup.moshi.StandardJsonAdapters$4;

        specialinvoke r0.<com.squareup.moshi.JsonAdapter: void <init>()>();

        return;
    }
    public java.lang.Character fromJson(com.squareup.moshi.JsonReader) throws java.io.IOException
    {
        com.squareup.moshi.StandardJsonAdapters$4 r0;
        com.squareup.moshi.JsonReader $r1;
        java.lang.String $r2;
        int $i0;
        com.squareup.moshi.JsonDataException $r3;
        java.lang.Object[] $r4;
        java.lang.StringBuilder $r5;
        char $c1;
        java.lang.Character $r6;

        r0 := @this: com.squareup.moshi.StandardJsonAdapters$4;

        $r1 := @parameter0: com.squareup.moshi.JsonReader;

        $r2 = virtualinvoke $r1.<com.squareup.moshi.JsonReader: java.lang.String nextString()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 1 goto label1;

        $r3 = new com.squareup.moshi.JsonDataException;

        $r4 = newarray (java.lang.Object)[3];

        $r4[0] = "a char";

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4[1] = $r2;

        $r2 = virtualinvoke $r1.<com.squareup.moshi.JsonReader: java.lang.String getPath()>();

        $r4[2] = $r2;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Expected %s but was %s at path %s", $r4);

        specialinvoke $r3.<com.squareup.moshi.JsonDataException: void <init>(java.lang.String)>($r2);

        throw $r3;

     label1:
        $c1 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(0);

        $r6 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r6;
    }
    public volatile java.lang.Object fromJson(com.squareup.moshi.JsonReader) throws java.io.IOException
    {
        com.squareup.moshi.StandardJsonAdapters$4 r0;
        com.squareup.moshi.JsonReader $r1;
        java.lang.Character $r2;

        r0 := @this: com.squareup.moshi.StandardJsonAdapters$4;

        $r1 := @parameter0: com.squareup.moshi.JsonReader;

        $r2 = virtualinvoke r0.<com.squareup.moshi.StandardJsonAdapters$4: java.lang.Character fromJson(com.squareup.moshi.JsonReader)>($r1);

        return $r2;
    }
    public void toJson(com.squareup.moshi.JsonWriter, java.lang.Character) throws java.io.IOException
    {
        com.squareup.moshi.StandardJsonAdapters$4 r0;
        com.squareup.moshi.JsonWriter $r1;
        java.lang.Character $r2;
        java.lang.String $r3;

        r0 := @this: com.squareup.moshi.StandardJsonAdapters$4;

        $r1 := @parameter0: com.squareup.moshi.JsonWriter;

        $r2 := @parameter1: java.lang.Character;

        $r3 = virtualinvoke $r2.<java.lang.Character: java.lang.String toString()>();

        virtualinvoke $r1.<com.squareup.moshi.JsonWriter: com.squareup.moshi.JsonWriter value(java.lang.String)>($r3);

        return;
    }
    public volatile void toJson(com.squareup.moshi.JsonWriter, java.lang.Object) throws java.io.IOException
    {
        com.squareup.moshi.StandardJsonAdapters$4 r0;
        com.squareup.moshi.JsonWriter $r1;
        java.lang.Object $r2;
        java.lang.Character $r3;

        r0 := @this: com.squareup.moshi.StandardJsonAdapters$4;

        $r1 := @parameter0: com.squareup.moshi.JsonWriter;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Character) $r2;

        virtualinvoke r0.<com.squareup.moshi.StandardJsonAdapters$4: void toJson(com.squareup.moshi.JsonWriter,java.lang.Character)>($r1, $r3);

        return;
    }
    public java.lang.String toString()
    {
        com.squareup.moshi.StandardJsonAdapters$4 r0;

        r0 := @this: com.squareup.moshi.StandardJsonAdapters$4;

        return "JsonAdapter(Character)";
    }
