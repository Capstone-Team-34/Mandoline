com.squareup.moshi.ArrayJsonAdapter extends com.squareup.moshi.JsonAdapter
public static final com.squareup.moshi.JsonAdapter$Factory FACTORY
private final com.squareup.moshi.JsonAdapter elementAdapter
private final java.lang.Class elementClass
    static void <clinit>()
    {
        com.squareup.moshi.ArrayJsonAdapter$1 $r0;

        $r0 = new com.squareup.moshi.ArrayJsonAdapter$1;

        specialinvoke $r0.<com.squareup.moshi.ArrayJsonAdapter$1: void <init>()>();

        <com.squareup.moshi.ArrayJsonAdapter: com.squareup.moshi.JsonAdapter$Factory FACTORY> = $r0;

        return;
    }
    void <init>(java.lang.Class, com.squareup.moshi.JsonAdapter)
    {
        com.squareup.moshi.ArrayJsonAdapter r0;
        java.lang.Class r1;
        com.squareup.moshi.JsonAdapter r2;

        r0 := @this: com.squareup.moshi.ArrayJsonAdapter;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: com.squareup.moshi.JsonAdapter;

        specialinvoke r0.<com.squareup.moshi.JsonAdapter: void <init>()>();

        r0.<com.squareup.moshi.ArrayJsonAdapter: java.lang.Class elementClass> = r1;

        r0.<com.squareup.moshi.ArrayJsonAdapter: com.squareup.moshi.JsonAdapter elementAdapter> = r2;

        return;
    }
    public java.lang.Object fromJson(com.squareup.moshi.JsonReader) throws java.io.IOException
    {
        com.squareup.moshi.ArrayJsonAdapter r0;
        com.squareup.moshi.JsonReader $r1;
        java.util.ArrayList r2;
        boolean $z0;
        com.squareup.moshi.JsonAdapter $r3;
        java.lang.Object $r4, $r6;
        java.lang.Class $r5;
        int $i0, $i1;

        r0 := @this: com.squareup.moshi.ArrayJsonAdapter;

        $r1 := @parameter0: com.squareup.moshi.JsonReader;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r1.<com.squareup.moshi.JsonReader: void beginArray()>();

     label1:
        $z0 = virtualinvoke $r1.<com.squareup.moshi.JsonReader: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.squareup.moshi.ArrayJsonAdapter: com.squareup.moshi.JsonAdapter elementAdapter>;

        $r4 = virtualinvoke $r3.<com.squareup.moshi.JsonAdapter: java.lang.Object fromJson(com.squareup.moshi.JsonReader)>($r1);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label1;

     label2:
        virtualinvoke $r1.<com.squareup.moshi.JsonReader: void endArray()>();

        $r5 = r0.<com.squareup.moshi.ArrayJsonAdapter: java.lang.Class elementClass>;

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r5, $i0);

        $i0 = 0;

     label3:
        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 >= $i1 goto label4;

        $r6 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i0);

        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>($r4, $i0, $r6);

        $i0 = $i0 + 1;

        goto label3;

     label4:
        return $r4;
    }
    public void toJson(com.squareup.moshi.JsonWriter, java.lang.Object) throws java.io.IOException
    {
        com.squareup.moshi.ArrayJsonAdapter r0;
        com.squareup.moshi.JsonWriter $r1;
        java.lang.Object $r2, $r4;
        com.squareup.moshi.JsonAdapter $r3;
        int i0, $i1;

        r0 := @this: com.squareup.moshi.ArrayJsonAdapter;

        $r1 := @parameter0: com.squareup.moshi.JsonWriter;

        $r2 := @parameter1: java.lang.Object;

        virtualinvoke $r1.<com.squareup.moshi.JsonWriter: com.squareup.moshi.JsonWriter beginArray()>();

        i0 = 0;

        $i1 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>($r2);

     label1:
        if i0 >= $i1 goto label2;

        $r3 = r0.<com.squareup.moshi.ArrayJsonAdapter: com.squareup.moshi.JsonAdapter elementAdapter>;

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>($r2, i0);

        virtualinvoke $r3.<com.squareup.moshi.JsonAdapter: void toJson(com.squareup.moshi.JsonWriter,java.lang.Object)>($r1, $r4);

        i0 = i0 + 1;

        goto label1;

     label2:
        virtualinvoke $r1.<com.squareup.moshi.JsonWriter: com.squareup.moshi.JsonWriter endArray()>();

        return;
    }
