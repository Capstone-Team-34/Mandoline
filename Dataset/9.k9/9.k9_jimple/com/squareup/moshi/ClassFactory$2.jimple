com.squareup.moshi.ClassFactory$2 extends com.squareup.moshi.ClassFactory
final java.lang.reflect.Method val$allocateInstance
final java.lang.Class val$rawType
final java.lang.Object val$unsafe
    void <init>(java.lang.reflect.Method, java.lang.Object, java.lang.Class)
    {
        com.squareup.moshi.ClassFactory$2 r0;
        java.lang.reflect.Method $r1;
        java.lang.Object $r2;
        java.lang.Class $r3;

        r0 := @this: com.squareup.moshi.ClassFactory$2;

        $r1 := @parameter0: java.lang.reflect.Method;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: java.lang.Class;

        r0.<com.squareup.moshi.ClassFactory$2: java.lang.reflect.Method val$allocateInstance> = $r1;

        r0.<com.squareup.moshi.ClassFactory$2: java.lang.Object val$unsafe> = $r2;

        r0.<com.squareup.moshi.ClassFactory$2: java.lang.Class val$rawType> = $r3;

        specialinvoke r0.<com.squareup.moshi.ClassFactory: void <init>()>();

        return;
    }
    public java.lang.Object newInstance() throws java.lang.reflect.InvocationTargetException, java.lang.IllegalAccessException
    {
        com.squareup.moshi.ClassFactory$2 r0;
        java.lang.Object $r1;
        java.lang.Class $r2;
        java.lang.reflect.Method $r3;
        java.lang.Object[] $r4;

        r0 := @this: com.squareup.moshi.ClassFactory$2;

        $r3 = r0.<com.squareup.moshi.ClassFactory$2: java.lang.reflect.Method val$allocateInstance>;

        $r1 = r0.<com.squareup.moshi.ClassFactory$2: java.lang.Object val$unsafe>;

        $r4 = newarray (java.lang.Object)[1];

        $r2 = r0.<com.squareup.moshi.ClassFactory$2: java.lang.Class val$rawType>;

        $r4[0] = $r2;

        $r1 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r4);

        return $r1;
    }
    public java.lang.String toString()
    {
        com.squareup.moshi.ClassFactory$2 r0;
        java.lang.String $r1;
        java.lang.Class $r2;

        r0 := @this: com.squareup.moshi.ClassFactory$2;

        $r2 = r0.<com.squareup.moshi.ClassFactory$2: java.lang.Class val$rawType>;

        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        return $r1;
    }
