com.squareup.moshi.JsonReader$Options extends java.lang.Object
final okio.Options doubleQuoteSuffix
final java.lang.String[] strings
    private void <init>(java.lang.String[], okio.Options)
    {
        com.squareup.moshi.JsonReader$Options r0;
        java.lang.String[] $r1;
        okio.Options $r2;

        r0 := @this: com.squareup.moshi.JsonReader$Options;

        $r1 := @parameter0: java.lang.String[];

        $r2 := @parameter1: okio.Options;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.squareup.moshi.JsonReader$Options: java.lang.String[] strings> = $r1;

        r0.<com.squareup.moshi.JsonReader$Options: okio.Options doubleQuoteSuffix> = $r2;

        return;
    }
    public static transient com.squareup.moshi.JsonReader$Options of(java.lang.String[])
    {
        java.lang.String[] $r0;
        okio.Buffer r1;
        java.io.IOException r2;
        okio.ByteString[] r3;
        com.squareup.moshi.JsonReader$Options $r4;
        int $i0, $i1;
        java.lang.String $r5;
        okio.ByteString $r6;
        java.lang.Object $r7;
        okio.Options $r8;
        java.lang.AssertionError $r9;

        $r0 := @parameter0: java.lang.String[];

        $i0 = lengthof $r0;

        r3 = newarray (okio.ByteString)[$i0];

        r1 = new okio.Buffer;

     label01:
        specialinvoke r1.<okio.Buffer: void <init>()>();

     label02:
        $i0 = 0;

     label03:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label06;

        $r5 = $r0[$i0];

     label04:
        staticinvoke <com.squareup.moshi.BufferedSinkJsonWriter: void string(okio.BufferedSink,java.lang.String)>(r1, $r5);

        virtualinvoke r1.<okio.Buffer: byte readByte()>();

        $r6 = virtualinvoke r1.<okio.Buffer: okio.ByteString readByteString()>();

     label05:
        r3[$i0] = $r6;

        $i0 = $i0 + 1;

        goto label03;

     label06:
        $r4 = new com.squareup.moshi.JsonReader$Options;

     label07:
        $r7 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

     label08:
        $r0 = (java.lang.String[]) $r7;

     label09:
        $r8 = staticinvoke <okio.Options: okio.Options of(okio.ByteString[])>(r3);

        specialinvoke $r4.<com.squareup.moshi.JsonReader$Options: void <init>(java.lang.String[],okio.Options)>($r0, $r8);

     label10:
        return $r4;

     label11:
        r2 := @caughtexception;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>(r2);

        throw $r9;

        catch java.io.IOException from label01 to label02 with label11;
        catch java.io.IOException from label04 to label05 with label11;
        catch java.io.IOException from label07 to label08 with label11;
        catch java.io.IOException from label09 to label10 with label11;
    }
