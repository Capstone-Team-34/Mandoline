com.squareup.moshi.Types$ParameterizedTypeImpl extends java.lang.Object implements java.lang.reflect.ParameterizedType
private final java.lang.reflect.Type ownerType
private final java.lang.reflect.Type rawType
final java.lang.reflect.Type[] typeArguments
    transient void <init>(java.lang.reflect.Type, java.lang.reflect.Type, java.lang.reflect.Type[])
    {
        com.squareup.moshi.Types$ParameterizedTypeImpl r0;
        java.lang.reflect.Type $r1, $r2;
        java.lang.reflect.Type[] $r3, $r8;
        boolean $z0;
        java.lang.Class r4;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r5;
        java.lang.Object $r6;
        java.lang.NullPointerException $r7;

        r0 := @this: com.squareup.moshi.Types$ParameterizedTypeImpl;

        $r1 := @parameter0: java.lang.reflect.Type;

        $r2 := @parameter1: java.lang.reflect.Type;

        $r3 := @parameter2: java.lang.reflect.Type[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = $r2 instanceof java.lang.Class;

        if $z0 == 0 goto label4;

        r4 = (java.lang.Class) $r2;

        $i0 = virtualinvoke r4.<java.lang.Class: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0);

        if $z0 != 0 goto label1;

        r4 = virtualinvoke r4.<java.lang.Class: java.lang.Class getEnclosingClass()>();

        if r4 != null goto label3;

     label1:
        $z0 = 1;

     label2:
        if $r1 != null goto label4;

        if $z0 != 0 goto label4;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        if $r1 != null goto label7;

        $r1 = null;

     label5:
        r0.<com.squareup.moshi.Types$ParameterizedTypeImpl: java.lang.reflect.Type ownerType> = $r1;

        $r1 = staticinvoke <com.squareup.moshi.Types: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)>($r2);

        r0.<com.squareup.moshi.Types$ParameterizedTypeImpl: java.lang.reflect.Type rawType> = $r1;

        $r6 = virtualinvoke $r3.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (java.lang.reflect.Type[]) $r6;

        r0.<com.squareup.moshi.Types$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments> = $r3;

        $i0 = 0;

     label6:
        $r3 = r0.<com.squareup.moshi.Types$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments>;

        $i1 = lengthof $r3;

        if $i0 >= $i1 goto label9;

        $r3 = r0.<com.squareup.moshi.Types$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments>;

        $r1 = $r3[$i0];

        if $r1 != null goto label8;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>()>();

        throw $r7;

     label7:
        $r1 = staticinvoke <com.squareup.moshi.Types: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)>($r1);

        goto label5;

     label8:
        $r3 = r0.<com.squareup.moshi.Types$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments>;

        $r1 = $r3[$i0];

        staticinvoke <com.squareup.moshi.Types: void checkNotPrimitive(java.lang.reflect.Type)>($r1);

        $r3 = r0.<com.squareup.moshi.Types$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments>;

        $r8 = r0.<com.squareup.moshi.Types$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments>;

        $r1 = $r8[$i0];

        $r1 = staticinvoke <com.squareup.moshi.Types: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)>($r1);

        $r3[$i0] = $r1;

        $i0 = $i0 + 1;

        goto label6;

     label9:
        return;
    }
    public boolean equals(java.lang.Object)
    {
        com.squareup.moshi.Types$ParameterizedTypeImpl r0;
        boolean $z0;
        java.lang.Object $r1;
        java.lang.reflect.ParameterizedType $r2;

        r0 := @this: com.squareup.moshi.Types$ParameterizedTypeImpl;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof java.lang.reflect.ParameterizedType;

        if $z0 == 0 goto label1;

        $r2 = (java.lang.reflect.ParameterizedType) $r1;

        $z0 = staticinvoke <com.squareup.moshi.Types: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)>(r0, $r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public java.lang.reflect.Type[] getActualTypeArguments()
    {
        com.squareup.moshi.Types$ParameterizedTypeImpl r0;
        java.lang.Object $r1;
        java.lang.reflect.Type[] $r2;

        r0 := @this: com.squareup.moshi.Types$ParameterizedTypeImpl;

        $r2 = r0.<com.squareup.moshi.Types$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments>;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (java.lang.reflect.Type[]) $r1;

        return $r2;
    }
    public java.lang.reflect.Type getOwnerType()
    {
        com.squareup.moshi.Types$ParameterizedTypeImpl r0;
        java.lang.reflect.Type r1;

        r0 := @this: com.squareup.moshi.Types$ParameterizedTypeImpl;

        r1 = r0.<com.squareup.moshi.Types$ParameterizedTypeImpl: java.lang.reflect.Type ownerType>;

        return r1;
    }
    public java.lang.reflect.Type getRawType()
    {
        com.squareup.moshi.Types$ParameterizedTypeImpl r0;
        java.lang.reflect.Type r1;

        r0 := @this: com.squareup.moshi.Types$ParameterizedTypeImpl;

        r1 = r0.<com.squareup.moshi.Types$ParameterizedTypeImpl: java.lang.reflect.Type rawType>;

        return r1;
    }
    public int hashCode()
    {
        com.squareup.moshi.Types$ParameterizedTypeImpl r0;
        java.lang.reflect.Type[] $r1;
        int $i0, $i1;
        java.lang.reflect.Type $r2;

        r0 := @this: com.squareup.moshi.Types$ParameterizedTypeImpl;

        $r1 = r0.<com.squareup.moshi.Types$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments>;

        $i0 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r1);

        $r2 = r0.<com.squareup.moshi.Types$ParameterizedTypeImpl: java.lang.reflect.Type rawType>;

        $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $i0 = $i0 ^ $i1;

        $r2 = r0.<com.squareup.moshi.Types$ParameterizedTypeImpl: java.lang.reflect.Type ownerType>;

        $i1 = staticinvoke <com.squareup.moshi.Types: int hashCodeOrZero(java.lang.Object)>($r2);

        $i0 = $i0 ^ $i1;

        return $i0;
    }
    public java.lang.String toString()
    {
        com.squareup.moshi.Types$ParameterizedTypeImpl r0;
        java.lang.StringBuilder r1, $r5;
        java.lang.reflect.Type[] $r2;
        int $i0, $i1;
        java.lang.reflect.Type $r3;
        java.lang.String $r4;

        r0 := @this: com.squareup.moshi.Types$ParameterizedTypeImpl;

        r1 = new java.lang.StringBuilder;

        $r2 = r0.<com.squareup.moshi.Types$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments>;

        $i0 = lengthof $r2;

        $i0 = $i0 + 1;

        $i0 = $i0 * 30;

        specialinvoke r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r3 = r0.<com.squareup.moshi.Types$ParameterizedTypeImpl: java.lang.reflect.Type rawType>;

        $r4 = staticinvoke <com.squareup.moshi.Types: java.lang.String typeToString(java.lang.reflect.Type)>($r3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r2 = r0.<com.squareup.moshi.Types$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments>;

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label1:
        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r2 = r0.<com.squareup.moshi.Types$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments>;

        $r3 = $r2[0];

        $r4 = staticinvoke <com.squareup.moshi.Types: java.lang.String typeToString(java.lang.reflect.Type)>($r3);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $i0 = 1;

     label2:
        $r2 = r0.<com.squareup.moshi.Types$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments>;

        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label3;

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r2 = r0.<com.squareup.moshi.Types$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments>;

        $r3 = $r2[$i0];

        $r4 = staticinvoke <com.squareup.moshi.Types: java.lang.String typeToString(java.lang.reflect.Type)>($r3);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $i0 = $i0 + 1;

        goto label2;

     label3:
        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
