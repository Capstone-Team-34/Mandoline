com.squareup.moshi.MapJsonAdapter extends com.squareup.moshi.JsonAdapter
public static final com.squareup.moshi.JsonAdapter$Factory FACTORY
private final com.squareup.moshi.JsonAdapter keyAdapter
private final com.squareup.moshi.JsonAdapter valueAdapter
    static void <clinit>()
    {
        com.squareup.moshi.MapJsonAdapter$1 $r0;

        $r0 = new com.squareup.moshi.MapJsonAdapter$1;

        specialinvoke $r0.<com.squareup.moshi.MapJsonAdapter$1: void <init>()>();

        <com.squareup.moshi.MapJsonAdapter: com.squareup.moshi.JsonAdapter$Factory FACTORY> = $r0;

        return;
    }
    public void <init>(com.squareup.moshi.Moshi, java.lang.reflect.Type, java.lang.reflect.Type)
    {
        com.squareup.moshi.MapJsonAdapter r0;
        com.squareup.moshi.Moshi $r1;
        java.lang.reflect.Type $r2, $r3;
        com.squareup.moshi.JsonAdapter $r4;

        r0 := @this: com.squareup.moshi.MapJsonAdapter;

        $r1 := @parameter0: com.squareup.moshi.Moshi;

        $r2 := @parameter1: java.lang.reflect.Type;

        $r3 := @parameter2: java.lang.reflect.Type;

        specialinvoke r0.<com.squareup.moshi.JsonAdapter: void <init>()>();

        $r4 = virtualinvoke $r1.<com.squareup.moshi.Moshi: com.squareup.moshi.JsonAdapter adapter(java.lang.reflect.Type)>($r2);

        r0.<com.squareup.moshi.MapJsonAdapter: com.squareup.moshi.JsonAdapter keyAdapter> = $r4;

        $r4 = virtualinvoke $r1.<com.squareup.moshi.Moshi: com.squareup.moshi.JsonAdapter adapter(java.lang.reflect.Type)>($r3);

        r0.<com.squareup.moshi.MapJsonAdapter: com.squareup.moshi.JsonAdapter valueAdapter> = $r4;

        return;
    }
    public volatile java.lang.Object fromJson(com.squareup.moshi.JsonReader) throws java.io.IOException
    {
        com.squareup.moshi.MapJsonAdapter r0;
        com.squareup.moshi.JsonReader $r1;
        java.util.Map $r2;

        r0 := @this: com.squareup.moshi.MapJsonAdapter;

        $r1 := @parameter0: com.squareup.moshi.JsonReader;

        $r2 = virtualinvoke r0.<com.squareup.moshi.MapJsonAdapter: java.util.Map fromJson(com.squareup.moshi.JsonReader)>($r1);

        return $r2;
    }
    public java.util.Map fromJson(com.squareup.moshi.JsonReader) throws java.io.IOException
    {
        com.squareup.moshi.MapJsonAdapter r0;
        com.squareup.moshi.JsonReader $r1;
        com.squareup.moshi.LinkedHashTreeMap r2;
        boolean $z0;
        com.squareup.moshi.JsonAdapter $r3;
        java.lang.Object $r4, $r5;
        com.squareup.moshi.JsonDataException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;

        r0 := @this: com.squareup.moshi.MapJsonAdapter;

        $r1 := @parameter0: com.squareup.moshi.JsonReader;

        r2 = new com.squareup.moshi.LinkedHashTreeMap;

        specialinvoke r2.<com.squareup.moshi.LinkedHashTreeMap: void <init>()>();

        virtualinvoke $r1.<com.squareup.moshi.JsonReader: void beginObject()>();

     label1:
        $z0 = virtualinvoke $r1.<com.squareup.moshi.JsonReader: boolean hasNext()>();

        if $z0 == 0 goto label2;

        virtualinvoke $r1.<com.squareup.moshi.JsonReader: void promoteNameToValue()>();

        $r3 = r0.<com.squareup.moshi.MapJsonAdapter: com.squareup.moshi.JsonAdapter keyAdapter>;

        $r4 = virtualinvoke $r3.<com.squareup.moshi.JsonAdapter: java.lang.Object fromJson(com.squareup.moshi.JsonReader)>($r1);

        $r3 = r0.<com.squareup.moshi.MapJsonAdapter: com.squareup.moshi.JsonAdapter valueAdapter>;

        $r5 = virtualinvoke $r3.<com.squareup.moshi.JsonAdapter: java.lang.Object fromJson(com.squareup.moshi.JsonReader)>($r1);

        $r5 = virtualinvoke r2.<com.squareup.moshi.LinkedHashTreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $r5 == null goto label1;

        $r6 = new com.squareup.moshi.JsonDataException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Map key \'");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' has multiple values at path ");

        $r8 = virtualinvoke $r1.<com.squareup.moshi.JsonReader: java.lang.String getPath()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.squareup.moshi.JsonDataException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label2:
        virtualinvoke $r1.<com.squareup.moshi.JsonReader: void endObject()>();

        return r2;
    }
    public volatile void toJson(com.squareup.moshi.JsonWriter, java.lang.Object) throws java.io.IOException
    {
        com.squareup.moshi.MapJsonAdapter r0;
        com.squareup.moshi.JsonWriter $r1;
        java.lang.Object $r2;
        java.util.Map $r3;

        r0 := @this: com.squareup.moshi.MapJsonAdapter;

        $r1 := @parameter0: com.squareup.moshi.JsonWriter;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (java.util.Map) $r2;

        virtualinvoke r0.<com.squareup.moshi.MapJsonAdapter: void toJson(com.squareup.moshi.JsonWriter,java.util.Map)>($r1, $r3);

        return;
    }
    public void toJson(com.squareup.moshi.JsonWriter, java.util.Map) throws java.io.IOException
    {
        com.squareup.moshi.MapJsonAdapter r0;
        com.squareup.moshi.JsonWriter $r1;
        java.util.Map r2;
        java.util.Set $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.util.Map$Entry r6;
        com.squareup.moshi.JsonDataException $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        com.squareup.moshi.JsonAdapter $r10;

        r0 := @this: com.squareup.moshi.MapJsonAdapter;

        $r1 := @parameter0: com.squareup.moshi.JsonWriter;

        r2 := @parameter1: java.util.Map;

        virtualinvoke $r1.<com.squareup.moshi.JsonWriter: com.squareup.moshi.JsonWriter beginObject()>();

        $r3 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        if $r5 != null goto label2;

        $r7 = new com.squareup.moshi.JsonDataException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Map key is null at path ");

        $r9 = virtualinvoke $r1.<com.squareup.moshi.JsonWriter: java.lang.String getPath()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<com.squareup.moshi.JsonDataException: void <init>(java.lang.String)>($r9);

        throw $r7;

     label2:
        virtualinvoke $r1.<com.squareup.moshi.JsonWriter: void promoteNameToValue()>();

        $r10 = r0.<com.squareup.moshi.MapJsonAdapter: com.squareup.moshi.JsonAdapter keyAdapter>;

        $r5 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke $r10.<com.squareup.moshi.JsonAdapter: void toJson(com.squareup.moshi.JsonWriter,java.lang.Object)>($r1, $r5);

        $r10 = r0.<com.squareup.moshi.MapJsonAdapter: com.squareup.moshi.JsonAdapter valueAdapter>;

        $r5 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r10.<com.squareup.moshi.JsonAdapter: void toJson(com.squareup.moshi.JsonWriter,java.lang.Object)>($r1, $r5);

        goto label1;

     label3:
        virtualinvoke $r1.<com.squareup.moshi.JsonWriter: com.squareup.moshi.JsonWriter endObject()>();

        return;
    }
    public java.lang.String toString()
    {
        com.squareup.moshi.MapJsonAdapter r0;
        java.lang.StringBuilder $r1;
        com.squareup.moshi.JsonAdapter $r2;
        java.lang.String $r3;

        r0 := @this: com.squareup.moshi.MapJsonAdapter;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JsonAdapter(");

        $r2 = r0.<com.squareup.moshi.MapJsonAdapter: com.squareup.moshi.JsonAdapter keyAdapter>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r2 = r0.<com.squareup.moshi.MapJsonAdapter: com.squareup.moshi.JsonAdapter valueAdapter>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
