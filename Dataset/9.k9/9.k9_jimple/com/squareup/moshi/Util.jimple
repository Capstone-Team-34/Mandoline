com.squareup.moshi.Util extends java.lang.Object
public static final java.util.Set NO_ANNOTATIONS
    static void <clinit>()
    {
        java.util.Set $r0;

        $r0 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        <com.squareup.moshi.Util: java.util.Set NO_ANNOTATIONS> = $r0;

        return;
    }
    void <init>()
    {
        com.squareup.moshi.Util r0;

        r0 := @this: com.squareup.moshi.Util;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static boolean hasNullable(java.lang.'annotation'.Annotation[])
    {
        java.lang.'annotation'.Annotation[] $r0;
        java.lang.'annotation'.Annotation r1;
        int $i0, $i1;
        java.lang.Class $r2;
        java.lang.String $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.'annotation'.Annotation[];

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        r1 = $r0[$i1];

        $r2 = interfaceinvoke r1.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("Nullable");

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 0;
    }
    public static boolean isAnnotationPresent(java.util.Set, java.lang.Class)
    {
        java.util.Set r0;
        java.lang.Class r1, $r5;
        boolean $z0;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        java.lang.'annotation'.Annotation r4;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: java.lang.Class;

        $z0 = interfaceinvoke r0.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r2 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.'annotation'.Annotation) $r3;

        $r5 = interfaceinvoke r4.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        if $r5 != r1 goto label2;

        return 1;

     label3:
        return 0;
    }
    public static java.util.Set jsonAnnotations(java.lang.reflect.AnnotatedElement)
    {
        java.lang.reflect.AnnotatedElement $r0;
        java.lang.'annotation'.Annotation[] $r1;
        java.util.Set $r2;

        $r0 := @parameter0: java.lang.reflect.AnnotatedElement;

        $r1 = interfaceinvoke $r0.<java.lang.reflect.AnnotatedElement: java.lang.'annotation'.Annotation[] getAnnotations()>();

        $r2 = staticinvoke <com.squareup.moshi.Util: java.util.Set jsonAnnotations(java.lang.'annotation'.Annotation[])>($r1);

        return $r2;
    }
    public static java.util.Set jsonAnnotations(java.lang.'annotation'.Annotation[])
    {
        java.lang.'annotation'.Annotation[] $r0;
        java.lang.'annotation'.Annotation r1;
        int $i0, $i1;
        java.util.LinkedHashSet r2;
        java.lang.Class $r3;
        boolean $z0;
        java.util.Set $r4;

        $r0 := @parameter0: java.lang.'annotation'.Annotation[];

        r2 = null;

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        r1 = $r0[$i1];

        $r3 = interfaceinvoke r1.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>(class "Lcom/squareup/moshi/JsonQualifier;");

        if $z0 == 0 goto label3;

        if r2 != null goto label2;

        r2 = new java.util.LinkedHashSet;

        specialinvoke r2.<java.util.LinkedHashSet: void <init>()>();

     label2:
        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        if r2 == null goto label5;

        $r4 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(r2);

        return $r4;

     label5:
        $r4 = <com.squareup.moshi.Util: java.util.Set NO_ANNOTATIONS>;

        return $r4;
    }
    public static boolean typesMatch(java.lang.reflect.Type, java.lang.reflect.Type)
    {
        java.lang.reflect.Type $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.reflect.Type;

        $r1 := @parameter1: java.lang.reflect.Type;

        $z0 = virtualinvoke $r0.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }
