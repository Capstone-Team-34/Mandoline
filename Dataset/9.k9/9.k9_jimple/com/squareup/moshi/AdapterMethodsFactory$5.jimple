com.squareup.moshi.AdapterMethodsFactory$5 extends com.squareup.moshi.AdapterMethodsFactory$AdapterMethod
final java.lang.reflect.Type[] val$parameterTypes
final java.util.Set val$qualifierAnnotations
    void <init>(java.lang.reflect.Type, java.util.Set, java.lang.Object, java.lang.reflect.Method, boolean, java.lang.reflect.Type[], java.util.Set)
    {
        com.squareup.moshi.AdapterMethodsFactory$5 r0;
        java.lang.reflect.Type $r1;
        java.util.Set r2, $r6;
        java.lang.Object $r3;
        java.lang.reflect.Method $r4;
        boolean $z0;
        java.lang.reflect.Type[] $r5;

        r0 := @this: com.squareup.moshi.AdapterMethodsFactory$5;

        $r1 := @parameter0: java.lang.reflect.Type;

        r2 := @parameter1: java.util.Set;

        $r3 := @parameter2: java.lang.Object;

        $r4 := @parameter3: java.lang.reflect.Method;

        $z0 := @parameter4: boolean;

        $r5 := @parameter5: java.lang.reflect.Type[];

        $r6 := @parameter6: java.util.Set;

        r0.<com.squareup.moshi.AdapterMethodsFactory$5: java.lang.reflect.Type[] val$parameterTypes> = $r5;

        r0.<com.squareup.moshi.AdapterMethodsFactory$5: java.util.Set val$qualifierAnnotations> = $r6;

        specialinvoke r0.<com.squareup.moshi.AdapterMethodsFactory$AdapterMethod: void <init>(java.lang.reflect.Type,java.util.Set,java.lang.Object,java.lang.reflect.Method,boolean)>($r1, r2, $r3, $r4, $z0);

        return;
    }
    public java.lang.Object fromJson(com.squareup.moshi.Moshi, com.squareup.moshi.JsonReader) throws java.io.IOException, java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException
    {
        com.squareup.moshi.AdapterMethodsFactory$5 r0;
        com.squareup.moshi.Moshi $r1;
        com.squareup.moshi.JsonReader $r2;
        java.lang.reflect.Type[] $r3;
        java.lang.reflect.Type $r4;
        java.util.Set $r5;
        com.squareup.moshi.JsonAdapter $r6;
        java.lang.Object $r7, $r9;
        java.lang.reflect.Method $r8;
        java.lang.Object[] $r10;

        r0 := @this: com.squareup.moshi.AdapterMethodsFactory$5;

        $r1 := @parameter0: com.squareup.moshi.Moshi;

        $r2 := @parameter1: com.squareup.moshi.JsonReader;

        $r3 = r0.<com.squareup.moshi.AdapterMethodsFactory$5: java.lang.reflect.Type[] val$parameterTypes>;

        $r4 = $r3[0];

        $r5 = r0.<com.squareup.moshi.AdapterMethodsFactory$5: java.util.Set val$qualifierAnnotations>;

        $r6 = virtualinvoke $r1.<com.squareup.moshi.Moshi: com.squareup.moshi.JsonAdapter adapter(java.lang.reflect.Type,java.util.Set)>($r4, $r5);

        $r7 = virtualinvoke $r6.<com.squareup.moshi.JsonAdapter: java.lang.Object fromJson(com.squareup.moshi.JsonReader)>($r2);

        $r8 = r0.<com.squareup.moshi.AdapterMethodsFactory$5: java.lang.reflect.Method method>;

        $r9 = r0.<com.squareup.moshi.AdapterMethodsFactory$5: java.lang.Object adapter>;

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = $r7;

        $r7 = virtualinvoke $r8.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r9, $r10);

        return $r7;
    }
