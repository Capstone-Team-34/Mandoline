com.github.amlcurran.showcaseview.NewShowcaseDrawer extends com.github.amlcurran.showcaseview.StandardShowcaseDrawer
private static final int ALPHA_60_PERCENT
private final float innerRadius
private final float outerRadius
    public void <init>(android.content.res.Resources, android.content.res.Resources$Theme)
    {
        com.github.amlcurran.showcaseview.NewShowcaseDrawer r0;
        android.content.res.Resources $r1;
        android.content.res.Resources$Theme $r2;
        int $i0;
        float $f0;

        r0 := @this: com.github.amlcurran.showcaseview.NewShowcaseDrawer;

        $r1 := @parameter0: android.content.res.Resources;

        $r2 := @parameter1: android.content.res.Resources$Theme;

        specialinvoke r0.<com.github.amlcurran.showcaseview.StandardShowcaseDrawer: void <init>(android.content.res.Resources,android.content.res.Resources$Theme)>($r1, $r2);

        $i0 = <com.github.amlcurran.showcaseview.R$dimen: int showcase_radius_outer>;

        $f0 = virtualinvoke $r1.<android.content.res.Resources: float getDimension(int)>($i0);

        r0.<com.github.amlcurran.showcaseview.NewShowcaseDrawer: float outerRadius> = $f0;

        $i0 = <com.github.amlcurran.showcaseview.R$dimen: int showcase_radius_inner>;

        $f0 = virtualinvoke $r1.<android.content.res.Resources: float getDimension(int)>($i0);

        r0.<com.github.amlcurran.showcaseview.NewShowcaseDrawer: float innerRadius> = $f0;

        return;
    }
    public void drawShowcase(android.graphics.Bitmap, float, float, float)
    {
        com.github.amlcurran.showcaseview.NewShowcaseDrawer r0;
        android.graphics.Bitmap $r1;
        float $f0, $f1, $f2;
        android.graphics.Canvas r2;
        android.graphics.Paint $r3;

        r0 := @this: com.github.amlcurran.showcaseview.NewShowcaseDrawer;

        $r1 := @parameter0: android.graphics.Bitmap;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $f2 := @parameter3: float;

        r2 = new android.graphics.Canvas;

        specialinvoke r2.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r1);

        $r3 = r0.<com.github.amlcurran.showcaseview.NewShowcaseDrawer: android.graphics.Paint eraserPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setAlpha(int)>(153);

        $f2 = r0.<com.github.amlcurran.showcaseview.NewShowcaseDrawer: float outerRadius>;

        $r3 = r0.<com.github.amlcurran.showcaseview.NewShowcaseDrawer: android.graphics.Paint eraserPaint>;

        virtualinvoke r2.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $r3);

        $r3 = r0.<com.github.amlcurran.showcaseview.NewShowcaseDrawer: android.graphics.Paint eraserPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setAlpha(int)>(0);

        $f2 = r0.<com.github.amlcurran.showcaseview.NewShowcaseDrawer: float innerRadius>;

        $r3 = r0.<com.github.amlcurran.showcaseview.NewShowcaseDrawer: android.graphics.Paint eraserPaint>;

        virtualinvoke r2.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $r3);

        return;
    }
    public float getBlockedRadius()
    {
        com.github.amlcurran.showcaseview.NewShowcaseDrawer r0;
        float f0;

        r0 := @this: com.github.amlcurran.showcaseview.NewShowcaseDrawer;

        f0 = r0.<com.github.amlcurran.showcaseview.NewShowcaseDrawer: float innerRadius>;

        return f0;
    }
    public int getShowcaseHeight()
    {
        com.github.amlcurran.showcaseview.NewShowcaseDrawer r0;
        float $f0;
        int $i0;

        r0 := @this: com.github.amlcurran.showcaseview.NewShowcaseDrawer;

        $f0 = r0.<com.github.amlcurran.showcaseview.NewShowcaseDrawer: float outerRadius>;

        $f0 = $f0 * 2.0F;

        $i0 = (int) $f0;

        return $i0;
    }
    public int getShowcaseWidth()
    {
        com.github.amlcurran.showcaseview.NewShowcaseDrawer r0;
        float $f0;
        int $i0;

        r0 := @this: com.github.amlcurran.showcaseview.NewShowcaseDrawer;

        $f0 = r0.<com.github.amlcurran.showcaseview.NewShowcaseDrawer: float outerRadius>;

        $f0 = $f0 * 2.0F;

        $i0 = (int) $f0;

        return $i0;
    }
    public void setShowcaseColour(int)
    {
        com.github.amlcurran.showcaseview.NewShowcaseDrawer r0;
        int $i0;
        android.graphics.Paint $r1;

        r0 := @this: com.github.amlcurran.showcaseview.NewShowcaseDrawer;

        $i0 := @parameter0: int;

        $r1 = r0.<com.github.amlcurran.showcaseview.NewShowcaseDrawer: android.graphics.Paint eraserPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);

        return;
    }
