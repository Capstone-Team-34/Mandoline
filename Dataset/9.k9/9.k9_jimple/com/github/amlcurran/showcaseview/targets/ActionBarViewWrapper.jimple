com.github.amlcurran.showcaseview.targets.ActionBarViewWrapper extends java.lang.Object
private java.lang.Class mAbsActionBarViewClass
private android.view.ViewParent mActionBarView
private java.lang.Class mActionBarViewClass
    public void <init>(android.view.ViewParent)
    {
        com.github.amlcurran.showcaseview.targets.ActionBarViewWrapper r0;
        android.view.ViewParent $r1, $r4;
        java.lang.Class $r2;
        java.lang.String $r3, $r5, $r6;
        boolean $z0;
        java.lang.IllegalStateException $r7;
        java.lang.StringBuilder $r8;

        r0 := @this: com.github.amlcurran.showcaseview.targets.ActionBarViewWrapper;

        $r1 := @parameter0: android.view.ViewParent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("ActionBarView");

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = interfaceinvoke $r1.<android.view.ViewParent: android.view.ViewParent getParent()>();

        $r1 = $r4;

        $r2 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r2 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean contains(java.lang.CharSequence)>("ActionBarView");

        if $z0 != 0 goto label1;

        $r7 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find ActionBarView for Activity, instead found ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r7;

     label1:
        r0.<com.github.amlcurran.showcaseview.targets.ActionBarViewWrapper: android.view.ViewParent mActionBarView> = $r1;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        r0.<com.github.amlcurran.showcaseview.targets.ActionBarViewWrapper: java.lang.Class mActionBarViewClass> = $r2;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r2.<java.lang.Class: java.lang.Class getSuperclass()>();

        r0.<com.github.amlcurran.showcaseview.targets.ActionBarViewWrapper: java.lang.Class mAbsActionBarViewClass> = $r2;

        return;
    }
    private java.lang.Object getMediaRouteButton(java.lang.Object)
    {
        com.github.amlcurran.showcaseview.targets.ActionBarViewWrapper r0;
        java.lang.Object $r1;
        java.lang.Class $r2;
        java.lang.reflect.Field $r3;
        java.lang.String $r4, $r5;
        boolean $z0;
        java.lang.NoSuchFieldException r6;
        java.lang.IllegalAccessException r7;

        r0 := @this: com.github.amlcurran.showcaseview.targets.ActionBarViewWrapper;

        $r1 := @parameter0: java.lang.Object;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mActionView");

        virtualinvoke $r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r1 = virtualinvoke $r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r1);

     label2:
        $r4 = "android.support.v7.app.MediaRouteButton";

     label3:
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

     label4:
        if $z0 == 0 goto label6;

        return $r1;

     label5:
        r6 := @caughtexception;

        virtualinvoke r6.<java.lang.NoSuchFieldException: void printStackTrace()>();

     label6:
        return null;

     label7:
        r7 := @caughtexception;

        virtualinvoke r7.<java.lang.IllegalAccessException: void printStackTrace()>();

        goto label6;

        catch java.lang.NoSuchFieldException from label1 to label2 with label5;
        catch java.lang.NoSuchFieldException from label3 to label4 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label7;
        catch java.lang.IllegalAccessException from label3 to label4 with label7;
    }
    public android.view.View getActionItem(int)
    {
        com.github.amlcurran.showcaseview.targets.ActionBarViewWrapper r0;
        int $i0, i1, i2, $i3;
        java.lang.Object r1;
        java.lang.Class $r2;
        java.lang.reflect.Field $r3;
        android.view.ViewParent $r4;
        java.lang.String $r5;
        boolean $z0;
        java.lang.Object[] $r6;
        android.view.View $r7;
        java.lang.IllegalAccessException r8;
        java.lang.NoSuchFieldException r9;

        r0 := @this: com.github.amlcurran.showcaseview.targets.ActionBarViewWrapper;

        $i0 := @parameter0: int;

        $r2 = r0.<com.github.amlcurran.showcaseview.targets.ActionBarViewWrapper: java.lang.Class mAbsActionBarViewClass>;

     label01:
        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mActionMenuPresenter");

        virtualinvoke $r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label02:
        $r4 = r0.<com.github.amlcurran.showcaseview.targets.ActionBarViewWrapper: android.view.ViewParent mActionBarView>;

     label03:
        r1 = virtualinvoke $r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r4);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r2.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mMenuView");

        virtualinvoke $r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        r1 = virtualinvoke $r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r1);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r2.<java.lang.Class: java.lang.String toString()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean contains(java.lang.CharSequence)>("com.actionbarsherlock");

     label04:
        if $z0 == 0 goto label11;

     label05:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r2.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r2 = virtualinvoke $r2.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r2 = virtualinvoke $r2.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r2 = virtualinvoke $r2.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mChildren");

     label06:
        virtualinvoke $r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        r1 = virtualinvoke $r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r1);

     label07:
        $r6 = (java.lang.Object[]) r1;

        i1 = lengthof $r6;

        i2 = 0;

     label08:
        if i2 >= i1 goto label19;

        r1 = $r6[i2];

        if r1 == null goto label17;

        $r7 = (android.view.View) r1;

     label09:
        $i3 = virtualinvoke $r7.<android.view.View: int getId()>();

     label10:
        if $i3 != $i0 goto label17;

        return $r7;

     label11:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r2.<java.lang.Class: java.lang.String toString()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean contains(java.lang.CharSequence)>("android.support.v7");

     label12:
        if $z0 == 0 goto label15;

     label13:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r2.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r2 = virtualinvoke $r2.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r2 = virtualinvoke $r2.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mChildren");

     label14:
        goto label06;

     label15:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r2.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r2 = virtualinvoke $r2.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mChildren");

     label16:
        goto label06;

     label17:
        i2 = i2 + 1;

        goto label08;

     label18:
        r8 := @caughtexception;

        virtualinvoke r8.<java.lang.IllegalAccessException: void printStackTrace()>();

     label19:
        return null;

     label20:
        r9 := @caughtexception;

        virtualinvoke r9.<java.lang.NoSuchFieldException: void printStackTrace()>();

        goto label19;

        catch java.lang.IllegalAccessException from label01 to label02 with label18;
        catch java.lang.IllegalAccessException from label03 to label04 with label18;
        catch java.lang.IllegalAccessException from label05 to label06 with label18;
        catch java.lang.IllegalAccessException from label06 to label07 with label18;
        catch java.lang.IllegalAccessException from label09 to label10 with label18;
        catch java.lang.IllegalAccessException from label11 to label12 with label18;
        catch java.lang.IllegalAccessException from label13 to label14 with label18;
        catch java.lang.IllegalAccessException from label15 to label16 with label18;
        catch java.lang.NoSuchFieldException from label01 to label02 with label20;
        catch java.lang.NoSuchFieldException from label03 to label04 with label20;
        catch java.lang.NoSuchFieldException from label05 to label06 with label20;
        catch java.lang.NoSuchFieldException from label06 to label07 with label20;
        catch java.lang.NoSuchFieldException from label09 to label10 with label20;
        catch java.lang.NoSuchFieldException from label11 to label12 with label20;
        catch java.lang.NoSuchFieldException from label13 to label14 with label20;
        catch java.lang.NoSuchFieldException from label15 to label16 with label20;
    }
    public android.view.View getMediaRouterButtonView()
    {
        com.github.amlcurran.showcaseview.targets.ActionBarViewWrapper r0;
        java.lang.Class $r1;
        java.lang.reflect.Field $r2;
        android.view.ViewParent $r3;
        java.lang.Object $r4;
        java.util.ArrayList r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.io.PrintStream $r7;
        android.view.View r8;
        java.lang.IllegalAccessException r9;
        java.lang.NoSuchFieldException r10;

        r0 := @this: com.github.amlcurran.showcaseview.targets.ActionBarViewWrapper;

        $r1 = r0.<com.github.amlcurran.showcaseview.targets.ActionBarViewWrapper: java.lang.Class mActionBarViewClass>;

     label01:
        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mOptionsMenu");

        virtualinvoke $r2.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label02:
        $r3 = r0.<com.github.amlcurran.showcaseview.targets.ActionBarViewWrapper: android.view.ViewParent mActionBarView>;

     label03:
        $r4 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mActionItems");

        virtualinvoke $r2.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r4 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r4);

     label04:
        r5 = (java.util.ArrayList) $r4;

        if r5 == null goto label12;

     label05:
        $r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

     label07:
        if $z0 == 0 goto label12;

     label08:
        $r4 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

     label09:
        $r7 = <java.lang.System: java.io.PrintStream out>;

     label10:
        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.Object)>($r4);

        $r4 = specialinvoke r0.<com.github.amlcurran.showcaseview.targets.ActionBarViewWrapper: java.lang.Object getMediaRouteButton(java.lang.Object)>($r4);

     label11:
        if $r4 == null goto label06;

        r8 = (android.view.View) $r4;

        return r8;

     label12:
        return null;

     label13:
        r9 := @caughtexception;

        virtualinvoke r9.<java.lang.IllegalAccessException: void printStackTrace()>();

     label14:
        return null;

     label15:
        r10 := @caughtexception;

        virtualinvoke r10.<java.lang.NoSuchFieldException: void printStackTrace()>();

        goto label14;

        catch java.lang.IllegalAccessException from label01 to label02 with label13;
        catch java.lang.IllegalAccessException from label03 to label04 with label13;
        catch java.lang.IllegalAccessException from label05 to label07 with label13;
        catch java.lang.IllegalAccessException from label08 to label09 with label13;
        catch java.lang.IllegalAccessException from label10 to label11 with label13;
        catch java.lang.NoSuchFieldException from label01 to label02 with label15;
        catch java.lang.NoSuchFieldException from label03 to label04 with label15;
        catch java.lang.NoSuchFieldException from label05 to label07 with label15;
        catch java.lang.NoSuchFieldException from label08 to label09 with label15;
        catch java.lang.NoSuchFieldException from label10 to label11 with label15;
    }
    public android.view.View getOverflowView()
    {
        com.github.amlcurran.showcaseview.targets.ActionBarViewWrapper r0;
        java.lang.Class $r1;
        java.lang.reflect.Field $r2;
        android.view.ViewParent $r3;
        java.lang.Object $r4;
        android.view.View $r5;
        java.lang.IllegalAccessException r6;
        java.lang.NoSuchFieldException r7;

        r0 := @this: com.github.amlcurran.showcaseview.targets.ActionBarViewWrapper;

        $r1 = r0.<com.github.amlcurran.showcaseview.targets.ActionBarViewWrapper: java.lang.Class mAbsActionBarViewClass>;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mActionMenuPresenter");

        virtualinvoke $r2.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label2:
        $r3 = r0.<com.github.amlcurran.showcaseview.targets.ActionBarViewWrapper: android.view.ViewParent mActionBarView>;

     label3:
        $r4 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mOverflowButton");

        virtualinvoke $r2.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r4 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r4);

     label4:
        $r5 = (android.view.View) $r4;

        return $r5;

     label5:
        r6 := @caughtexception;

        virtualinvoke r6.<java.lang.IllegalAccessException: void printStackTrace()>();

     label6:
        return null;

     label7:
        r7 := @caughtexception;

        virtualinvoke r7.<java.lang.NoSuchFieldException: void printStackTrace()>();

        goto label6;

        catch java.lang.IllegalAccessException from label1 to label2 with label5;
        catch java.lang.IllegalAccessException from label3 to label4 with label5;
        catch java.lang.NoSuchFieldException from label1 to label2 with label7;
        catch java.lang.NoSuchFieldException from label3 to label4 with label7;
    }
    public android.view.View getSpinnerView()
    {
        com.github.amlcurran.showcaseview.targets.ActionBarViewWrapper r0;
        java.lang.Class $r1;
        java.lang.reflect.Field $r2;
        android.view.ViewParent $r3;
        java.lang.Object $r4;
        android.view.View $r5;
        java.lang.NoSuchFieldException r6;
        java.lang.IllegalAccessException r7;

        r0 := @this: com.github.amlcurran.showcaseview.targets.ActionBarViewWrapper;

        $r1 = r0.<com.github.amlcurran.showcaseview.targets.ActionBarViewWrapper: java.lang.Class mActionBarViewClass>;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mSpinner");

        virtualinvoke $r2.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label2:
        $r3 = r0.<com.github.amlcurran.showcaseview.targets.ActionBarViewWrapper: android.view.ViewParent mActionBarView>;

     label3:
        $r4 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r3);

     label4:
        $r5 = (android.view.View) $r4;

        return $r5;

     label5:
        r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TAG", "Failed to find actionbar spinner", r6);

     label6:
        return null;

     label7:
        r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TAG", "Failed to access actionbar spinner", r7);

        goto label6;

        catch java.lang.NoSuchFieldException from label1 to label2 with label5;
        catch java.lang.NoSuchFieldException from label3 to label4 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label7;
        catch java.lang.IllegalAccessException from label3 to label4 with label7;
    }
    public android.view.View getTitleView()
    {
        com.github.amlcurran.showcaseview.targets.ActionBarViewWrapper r0;
        java.lang.Class $r1;
        java.lang.reflect.Field $r2;
        android.view.ViewParent $r3;
        java.lang.Object $r4;
        android.view.View $r5;
        java.lang.NoSuchFieldException r6;
        java.lang.IllegalAccessException r7;

        r0 := @this: com.github.amlcurran.showcaseview.targets.ActionBarViewWrapper;

        $r1 = r0.<com.github.amlcurran.showcaseview.targets.ActionBarViewWrapper: java.lang.Class mActionBarViewClass>;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mTitleView");

        virtualinvoke $r2.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label2:
        $r3 = r0.<com.github.amlcurran.showcaseview.targets.ActionBarViewWrapper: android.view.ViewParent mActionBarView>;

     label3:
        $r4 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r3);

     label4:
        $r5 = (android.view.View) $r4;

        return $r5;

     label5:
        r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TAG", "Failed to find actionbar title", r6);

     label6:
        return null;

     label7:
        r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TAG", "Failed to access actionbar title", r7);

        goto label6;

        catch java.lang.NoSuchFieldException from label1 to label2 with label5;
        catch java.lang.NoSuchFieldException from label3 to label4 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label7;
        catch java.lang.IllegalAccessException from label3 to label4 with label7;
    }
