com.github.amlcurran.showcaseview.MaterialShowcaseDrawer extends java.lang.Object implements com.github.amlcurran.showcaseview.ShowcaseDrawer
private int backgroundColor
private final android.graphics.Paint basicPaint
private final android.graphics.Paint eraserPaint
private final float radius
    public void <init>(android.content.res.Resources)
    {
        com.github.amlcurran.showcaseview.MaterialShowcaseDrawer r0;
        android.content.res.Resources $r1;
        android.graphics.PorterDuff$Mode $r2;
        float $f0;
        int $i0;
        android.graphics.Paint $r3;
        android.graphics.PorterDuffXfermode $r4;

        r0 := @this: com.github.amlcurran.showcaseview.MaterialShowcaseDrawer;

        $r1 := @parameter0: android.content.res.Resources;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = <com.github.amlcurran.showcaseview.R$dimen: int showcase_radius_material>;

        $f0 = virtualinvoke $r1.<android.content.res.Resources: float getDimension(int)>($i0);

        r0.<com.github.amlcurran.showcaseview.MaterialShowcaseDrawer: float radius> = $f0;

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>()>();

        r0.<com.github.amlcurran.showcaseview.MaterialShowcaseDrawer: android.graphics.Paint eraserPaint> = $r3;

        $r3 = r0.<com.github.amlcurran.showcaseview.MaterialShowcaseDrawer: android.graphics.Paint eraserPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>(16777215);

        $r3 = r0.<com.github.amlcurran.showcaseview.MaterialShowcaseDrawer: android.graphics.Paint eraserPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setAlpha(int)>(0);

        $r3 = r0.<com.github.amlcurran.showcaseview.MaterialShowcaseDrawer: android.graphics.Paint eraserPaint>;

        $r4 = new android.graphics.PorterDuffXfermode;

        $r2 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode MULTIPLY>;

        specialinvoke $r4.<android.graphics.PorterDuffXfermode: void <init>(android.graphics.PorterDuff$Mode)>($r2);

        virtualinvoke $r3.<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>($r4);

        $r3 = r0.<com.github.amlcurran.showcaseview.MaterialShowcaseDrawer: android.graphics.Paint eraserPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>()>();

        r0.<com.github.amlcurran.showcaseview.MaterialShowcaseDrawer: android.graphics.Paint basicPaint> = $r3;

        return;
    }
    public void drawShowcase(android.graphics.Bitmap, float, float, float)
    {
        com.github.amlcurran.showcaseview.MaterialShowcaseDrawer r0;
        android.graphics.Bitmap $r1;
        float $f0, $f1, $f2;
        android.graphics.Canvas r2;
        android.graphics.Paint $r3;

        r0 := @this: com.github.amlcurran.showcaseview.MaterialShowcaseDrawer;

        $r1 := @parameter0: android.graphics.Bitmap;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $f2 := @parameter3: float;

        r2 = new android.graphics.Canvas;

        specialinvoke r2.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r1);

        $f2 = r0.<com.github.amlcurran.showcaseview.MaterialShowcaseDrawer: float radius>;

        $r3 = r0.<com.github.amlcurran.showcaseview.MaterialShowcaseDrawer: android.graphics.Paint eraserPaint>;

        virtualinvoke r2.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $r3);

        return;
    }
    public void drawToCanvas(android.graphics.Canvas, android.graphics.Bitmap)
    {
        com.github.amlcurran.showcaseview.MaterialShowcaseDrawer r0;
        android.graphics.Canvas $r1;
        android.graphics.Bitmap $r2;
        android.graphics.Paint $r3;

        r0 := @this: com.github.amlcurran.showcaseview.MaterialShowcaseDrawer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.graphics.Bitmap;

        $r3 = r0.<com.github.amlcurran.showcaseview.MaterialShowcaseDrawer: android.graphics.Paint basicPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r2, 0.0F, 0.0F, $r3);

        return;
    }
    public void erase(android.graphics.Bitmap)
    {
        com.github.amlcurran.showcaseview.MaterialShowcaseDrawer r0;
        android.graphics.Bitmap $r1;
        int $i0;

        r0 := @this: com.github.amlcurran.showcaseview.MaterialShowcaseDrawer;

        $r1 := @parameter0: android.graphics.Bitmap;

        $i0 = r0.<com.github.amlcurran.showcaseview.MaterialShowcaseDrawer: int backgroundColor>;

        virtualinvoke $r1.<android.graphics.Bitmap: void eraseColor(int)>($i0);

        return;
    }
    public float getBlockedRadius()
    {
        com.github.amlcurran.showcaseview.MaterialShowcaseDrawer r0;
        float f0;

        r0 := @this: com.github.amlcurran.showcaseview.MaterialShowcaseDrawer;

        f0 = r0.<com.github.amlcurran.showcaseview.MaterialShowcaseDrawer: float radius>;

        return f0;
    }
    public int getShowcaseHeight()
    {
        com.github.amlcurran.showcaseview.MaterialShowcaseDrawer r0;
        float $f0;
        int $i0;

        r0 := @this: com.github.amlcurran.showcaseview.MaterialShowcaseDrawer;

        $f0 = r0.<com.github.amlcurran.showcaseview.MaterialShowcaseDrawer: float radius>;

        $f0 = $f0 * 2.0F;

        $i0 = (int) $f0;

        return $i0;
    }
    public int getShowcaseWidth()
    {
        com.github.amlcurran.showcaseview.MaterialShowcaseDrawer r0;
        float $f0;
        int $i0;

        r0 := @this: com.github.amlcurran.showcaseview.MaterialShowcaseDrawer;

        $f0 = r0.<com.github.amlcurran.showcaseview.MaterialShowcaseDrawer: float radius>;

        $f0 = $f0 * 2.0F;

        $i0 = (int) $f0;

        return $i0;
    }
    public void setBackgroundColour(int)
    {
        com.github.amlcurran.showcaseview.MaterialShowcaseDrawer r0;
        int $i0;

        r0 := @this: com.github.amlcurran.showcaseview.MaterialShowcaseDrawer;

        $i0 := @parameter0: int;

        r0.<com.github.amlcurran.showcaseview.MaterialShowcaseDrawer: int backgroundColor> = $i0;

        return;
    }
    public void setShowcaseColour(int)
    {
        com.github.amlcurran.showcaseview.MaterialShowcaseDrawer r0;
        int $i0;

        r0 := @this: com.github.amlcurran.showcaseview.MaterialShowcaseDrawer;

        $i0 := @parameter0: int;

        return;
    }
