com.fsck.k9.provider.MessageProvider$ThrottlingQueryHandler extends java.lang.Object implements com.fsck.k9.provider.MessageProvider$QueryHandler
private com.fsck.k9.provider.MessageProvider$QueryHandler delegate
final com.fsck.k9.provider.MessageProvider this$0
    public void <init>(com.fsck.k9.provider.MessageProvider, com.fsck.k9.provider.MessageProvider$QueryHandler)
    {
        com.fsck.k9.provider.MessageProvider$ThrottlingQueryHandler r0;
        com.fsck.k9.provider.MessageProvider $r1;
        com.fsck.k9.provider.MessageProvider$QueryHandler $r2;

        r0 := @this: com.fsck.k9.provider.MessageProvider$ThrottlingQueryHandler;

        $r1 := @parameter0: com.fsck.k9.provider.MessageProvider;

        $r2 := @parameter1: com.fsck.k9.provider.MessageProvider$QueryHandler;

        r0.<com.fsck.k9.provider.MessageProvider$ThrottlingQueryHandler: com.fsck.k9.provider.MessageProvider this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.fsck.k9.provider.MessageProvider$ThrottlingQueryHandler: com.fsck.k9.provider.MessageProvider$QueryHandler delegate> = $r2;

        return;
    }
    public java.lang.String getPath()
    {
        com.fsck.k9.provider.MessageProvider$ThrottlingQueryHandler r0;
        java.lang.String $r1;
        com.fsck.k9.provider.MessageProvider$QueryHandler $r2;

        r0 := @this: com.fsck.k9.provider.MessageProvider$ThrottlingQueryHandler;

        $r2 = r0.<com.fsck.k9.provider.MessageProvider$ThrottlingQueryHandler: com.fsck.k9.provider.MessageProvider$QueryHandler delegate>;

        $r1 = interfaceinvoke $r2.<com.fsck.k9.provider.MessageProvider$QueryHandler: java.lang.String getPath()>();

        return $r1;
    }
    public android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String) throws java.lang.Exception
    {
        com.fsck.k9.provider.MessageProvider$ThrottlingQueryHandler r0;
        android.net.Uri $r1;
        java.lang.String[] $r2, $r4;
        java.lang.String $r3, $r5;
        java.lang.ref.WeakReference r6;
        android.database.Cursor $r7;
        com.fsck.k9.provider.MessageProvider $r8;
        java.util.concurrent.Semaphore $r9;
        com.fsck.k9.provider.MessageProvider$QueryHandler $r10;
        boolean $z0;
        java.lang.Object[] $r11;
        java.lang.Throwable $r12;
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r13;
        android.database.CrossProcessCursor r14;
        java.util.concurrent.ScheduledExecutorService $r15;
        com.fsck.k9.provider.MessageProvider$ThrottlingQueryHandler$1 $r16;
        java.util.concurrent.TimeUnit $r17;

        r0 := @this: com.fsck.k9.provider.MessageProvider$ThrottlingQueryHandler;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.lang.String[];

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String[];

        $r5 := @parameter4: java.lang.String;

        $r8 = r0.<com.fsck.k9.provider.MessageProvider$ThrottlingQueryHandler: com.fsck.k9.provider.MessageProvider this$0>;

        $r9 = $r8.<com.fsck.k9.provider.MessageProvider: java.util.concurrent.Semaphore semaphore>;

        virtualinvoke $r9.<java.util.concurrent.Semaphore: void acquire()>();

     label1:
        $r10 = r0.<com.fsck.k9.provider.MessageProvider$ThrottlingQueryHandler: com.fsck.k9.provider.MessageProvider$QueryHandler delegate>;

        $r7 = interfaceinvoke $r10.<com.fsck.k9.provider.MessageProvider$QueryHandler: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, $r2, $r3, $r4, $r5);

     label2:
        if $r7 != null goto label3;

        $r8 = r0.<com.fsck.k9.provider.MessageProvider$ThrottlingQueryHandler: com.fsck.k9.provider.MessageProvider this$0>;

        $r9 = $r8.<com.fsck.k9.provider.MessageProvider: java.util.concurrent.Semaphore semaphore>;

        virtualinvoke $r9.<java.util.concurrent.Semaphore: void release()>();

     label3:
        $z0 = $r7 instanceof android.database.CrossProcessCursor;

        if $z0 != 0 goto label5;

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = $r7;

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Unsupported cursor, returning null: %s", $r11);

        $r8 = r0.<com.fsck.k9.provider.MessageProvider$ThrottlingQueryHandler: com.fsck.k9.provider.MessageProvider this$0>;

        $r9 = $r8.<com.fsck.k9.provider.MessageProvider: java.util.concurrent.Semaphore semaphore>;

        virtualinvoke $r9.<java.util.concurrent.Semaphore: void release()>();

        return null;

     label4:
        $r12 := @caughtexception;

        $r8 = r0.<com.fsck.k9.provider.MessageProvider$ThrottlingQueryHandler: com.fsck.k9.provider.MessageProvider this$0>;

        $r9 = $r8.<com.fsck.k9.provider.MessageProvider: java.util.concurrent.Semaphore semaphore>;

        virtualinvoke $r9.<java.util.concurrent.Semaphore: void release()>();

        throw $r12;

     label5:
        r13 = new com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        r14 = (android.database.CrossProcessCursor) $r7;

        $r8 = r0.<com.fsck.k9.provider.MessageProvider$ThrottlingQueryHandler: com.fsck.k9.provider.MessageProvider this$0>;

        $r9 = $r8.<com.fsck.k9.provider.MessageProvider: java.util.concurrent.Semaphore semaphore>;

        specialinvoke r13.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void <init>(android.database.CrossProcessCursor,java.util.concurrent.Semaphore)>(r14, $r9);

        r6 = new java.lang.ref.WeakReference;

        specialinvoke r6.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r13);

        $r8 = r0.<com.fsck.k9.provider.MessageProvider$ThrottlingQueryHandler: com.fsck.k9.provider.MessageProvider this$0>;

        $r15 = $r8.<com.fsck.k9.provider.MessageProvider: java.util.concurrent.ScheduledExecutorService scheduledPool>;

        $r16 = new com.fsck.k9.provider.MessageProvider$ThrottlingQueryHandler$1;

        specialinvoke $r16.<com.fsck.k9.provider.MessageProvider$ThrottlingQueryHandler$1: void <init>(com.fsck.k9.provider.MessageProvider$ThrottlingQueryHandler,java.lang.ref.WeakReference)>(r0, r6);

        $r17 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        interfaceinvoke $r15.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r16, 30L, $r17);

        return r13;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
