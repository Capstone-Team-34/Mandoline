com.fsck.k9.provider.MessageProvider$MessageInfoHolderRetrieverListener extends com.fsck.k9.controller.SimpleMessagingListener
private java.util.List holders
private final java.util.concurrent.BlockingQueue queue
final com.fsck.k9.provider.MessageProvider this$0
    public void <init>(com.fsck.k9.provider.MessageProvider, java.util.concurrent.BlockingQueue)
    {
        com.fsck.k9.provider.MessageProvider$MessageInfoHolderRetrieverListener r0;
        com.fsck.k9.provider.MessageProvider $r1;
        java.util.concurrent.BlockingQueue r2;
        java.util.ArrayList $r3;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MessageInfoHolderRetrieverListener;

        $r1 := @parameter0: com.fsck.k9.provider.MessageProvider;

        r2 := @parameter1: java.util.concurrent.BlockingQueue;

        r0.<com.fsck.k9.provider.MessageProvider$MessageInfoHolderRetrieverListener: com.fsck.k9.provider.MessageProvider this$0> = $r1;

        specialinvoke r0.<com.fsck.k9.controller.SimpleMessagingListener: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.fsck.k9.provider.MessageProvider$MessageInfoHolderRetrieverListener: java.util.List holders> = $r3;

        r0.<com.fsck.k9.provider.MessageProvider$MessageInfoHolderRetrieverListener: java.util.concurrent.BlockingQueue queue> = r2;

        return;
    }
    public void listLocalMessagesAddMessages(com.fsck.k9.Account, java.lang.String, java.util.List)
    {
        com.fsck.k9.provider.MessageProvider$MessageInfoHolderRetrieverListener r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2;
        java.util.List r3;
        com.fsck.k9.activity.FolderInfoHolder r4;
        com.fsck.k9.activity.MessageInfoHolder r5;
        com.fsck.k9.provider.MessageProvider $r6;
        android.content.Context $r7;
        java.util.Iterator $r8;
        boolean $z0;
        java.lang.Object $r9;
        com.fsck.k9.mailstore.LocalMessage r10;
        com.fsck.k9.mailstore.LocalFolder $r11;
        com.fsck.k9.helper.MessageHelper $r12;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MessageInfoHolderRetrieverListener;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.List;

        $r6 = r0.<com.fsck.k9.provider.MessageProvider$MessageInfoHolderRetrieverListener: com.fsck.k9.provider.MessageProvider this$0>;

        $r7 = virtualinvoke $r6.<com.fsck.k9.provider.MessageProvider: android.content.Context getContext()>();

        $r8 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.fsck.k9.mailstore.LocalMessage) $r9;

        r5 = new com.fsck.k9.activity.MessageInfoHolder;

        specialinvoke r5.<com.fsck.k9.activity.MessageInfoHolder: void <init>()>();

        $r11 = virtualinvoke r10.<com.fsck.k9.mailstore.LocalMessage: com.fsck.k9.mailstore.LocalFolder getFolder()>();

        $r1 = virtualinvoke r10.<com.fsck.k9.mailstore.LocalMessage: com.fsck.k9.Account getAccount()>();

        r4 = new com.fsck.k9.activity.FolderInfoHolder;

        specialinvoke r4.<com.fsck.k9.activity.FolderInfoHolder: void <init>(android.content.Context,com.fsck.k9.mailstore.LocalFolder,com.fsck.k9.Account)>($r7, $r11, $r1);

        $r6 = r0.<com.fsck.k9.provider.MessageProvider$MessageInfoHolderRetrieverListener: com.fsck.k9.provider.MessageProvider this$0>;

        $r12 = staticinvoke <com.fsck.k9.provider.MessageProvider: com.fsck.k9.helper.MessageHelper access$300(com.fsck.k9.provider.MessageProvider)>($r6);

        virtualinvoke $r12.<com.fsck.k9.helper.MessageHelper: void populate(com.fsck.k9.activity.MessageInfoHolder,com.fsck.k9.mailstore.LocalMessage,com.fsck.k9.activity.FolderInfoHolder,com.fsck.k9.Account)>(r5, r10, r4, $r1);

        r3 = r0.<com.fsck.k9.provider.MessageProvider$MessageInfoHolderRetrieverListener: java.util.List holders>;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r5);

        goto label1;

     label2:
        return;
    }
    public void searchStats(com.fsck.k9.AccountStats)
    {
        com.fsck.k9.provider.MessageProvider$MessageInfoHolderRetrieverListener r0;
        com.fsck.k9.AccountStats $r1;
        java.lang.InterruptedException r2;
        java.util.concurrent.BlockingQueue $r3;
        java.util.List $r4;
        java.lang.Object[] $r5;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MessageInfoHolderRetrieverListener;

        $r1 := @parameter0: com.fsck.k9.AccountStats;

        $r3 = r0.<com.fsck.k9.provider.MessageProvider$MessageInfoHolderRetrieverListener: java.util.concurrent.BlockingQueue queue>;

        $r4 = r0.<com.fsck.k9.provider.MessageProvider$MessageInfoHolderRetrieverListener: java.util.List holders>;

     label1:
        interfaceinvoke $r3.<java.util.concurrent.BlockingQueue: void put(java.lang.Object)>($r4);

     label2:
        return;

     label3:
        r2 := @caughtexception;

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r2, "Unable to return message list back to caller", $r5);

        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }
