com.fsck.k9.mailstore.AttachmentResolver extends java.lang.Object
java.util.Map contentIdToAttachmentUriMap
    private void <init>(java.util.Map)
    {
        com.fsck.k9.mailstore.AttachmentResolver r0;
        java.util.Map r1;

        r0 := @this: com.fsck.k9.mailstore.AttachmentResolver;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.fsck.k9.mailstore.AttachmentResolver: java.util.Map contentIdToAttachmentUriMap> = r1;

        return;
    }
    static java.util.Map buildCidToAttachmentUriMap(com.fsck.k9.message.extractors.AttachmentInfoExtractor, com.fsck.k9.mail.Part)
    {
        com.fsck.k9.message.extractors.AttachmentInfoExtractor $r0;
        com.fsck.k9.mail.Part $r1;
        com.fsck.k9.mail.MessagingException r2;
        java.util.Stack r3;
        java.util.HashMap r4;
        boolean $z0;
        java.lang.Object $r5;
        com.fsck.k9.mail.Body $r6;
        com.fsck.k9.mail.Multipart r7;
        java.util.List $r8;
        java.util.Iterator $r9;
        java.lang.String $r10;
        com.fsck.k9.mailstore.AttachmentViewInfo $r11;
        android.net.Uri $r12;
        java.lang.Object[] $r13;
        java.util.Map $r14;

        $r0 := @parameter0: com.fsck.k9.message.extractors.AttachmentInfoExtractor;

        $r1 := @parameter1: com.fsck.k9.mail.Part;

        r4 = new java.util.HashMap;

        specialinvoke r4.<java.util.HashMap: void <init>()>();

        r3 = new java.util.Stack;

        specialinvoke r3.<java.util.Stack: void <init>()>();

        virtualinvoke r3.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r1);

     label01:
        $z0 = virtualinvoke r3.<java.util.Stack: boolean isEmpty()>();

        if $z0 != 0 goto label10;

        $r5 = virtualinvoke r3.<java.util.Stack: java.lang.Object pop()>();

        $r1 = (com.fsck.k9.mail.Part) $r5;

        $r6 = interfaceinvoke $r1.<com.fsck.k9.mail.Part: com.fsck.k9.mail.Body getBody()>();

        $z0 = $r6 instanceof com.fsck.k9.mail.Multipart;

        if $z0 == 0 goto label03;

        r7 = (com.fsck.k9.mail.Multipart) $r6;

        $r8 = virtualinvoke r7.<com.fsck.k9.mail.Multipart: java.util.List getBodyParts()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label01;

        $r5 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (com.fsck.k9.mail.Part) $r5;

        virtualinvoke r3.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r1);

        goto label02;

     label03:
        $r10 = interfaceinvoke $r1.<com.fsck.k9.mail.Part: java.lang.String getContentId()>();

     label04:
        if $r10 == null goto label01;

     label05:
        $r11 = virtualinvoke $r0.<com.fsck.k9.message.extractors.AttachmentInfoExtractor: com.fsck.k9.mailstore.AttachmentViewInfo extractAttachmentInfo(com.fsck.k9.mail.Part)>($r1);

     label06:
        $r12 = $r11.<com.fsck.k9.mailstore.AttachmentViewInfo: android.net.Uri internalUri>;

     label07:
        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r12);

     label08:
        goto label01;

     label09:
        r2 := @caughtexception;

        $r13 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r2, "Error extracting attachment info", $r13);

        goto label01;

     label10:
        $r14 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r4);

        return $r14;

        catch com.fsck.k9.mail.MessagingException from label03 to label04 with label09;
        catch com.fsck.k9.mail.MessagingException from label05 to label06 with label09;
        catch com.fsck.k9.mail.MessagingException from label07 to label08 with label09;
    }
    public static com.fsck.k9.mailstore.AttachmentResolver createFromPart(com.fsck.k9.mail.Part)
    {
        com.fsck.k9.mail.Part $r0;
        com.fsck.k9.mailstore.AttachmentResolver $r1;
        com.fsck.k9.message.extractors.AttachmentInfoExtractor $r2;
        java.util.Map $r3;

        $r0 := @parameter0: com.fsck.k9.mail.Part;

        $r2 = staticinvoke <com.fsck.k9.message.extractors.AttachmentInfoExtractor: com.fsck.k9.message.extractors.AttachmentInfoExtractor getInstance()>();

        $r3 = staticinvoke <com.fsck.k9.mailstore.AttachmentResolver: java.util.Map buildCidToAttachmentUriMap(com.fsck.k9.message.extractors.AttachmentInfoExtractor,com.fsck.k9.mail.Part)>($r2, $r0);

        $r1 = new com.fsck.k9.mailstore.AttachmentResolver;

        specialinvoke $r1.<com.fsck.k9.mailstore.AttachmentResolver: void <init>(java.util.Map)>($r3);

        return $r1;
    }
    public android.net.Uri getAttachmentUriForContentId(java.lang.String)
    {
        com.fsck.k9.mailstore.AttachmentResolver r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.util.Map $r3;
        android.net.Uri $r4;

        r0 := @this: com.fsck.k9.mailstore.AttachmentResolver;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.fsck.k9.mailstore.AttachmentResolver: java.util.Map contentIdToAttachmentUriMap>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (android.net.Uri) $r2;

        return $r4;
    }
