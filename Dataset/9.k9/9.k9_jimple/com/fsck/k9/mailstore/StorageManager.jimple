com.fsck.k9.mailstore.StorageManager extends java.lang.Object
private static transient com.fsck.k9.mailstore.StorageManager instance
protected final android.content.Context context
private java.util.List mListeners
private final java.util.Map mProviderLocks
private final java.util.Map mProviders
    protected void <init>(android.content.Context) throws java.lang.NullPointerException
    {
        com.fsck.k9.mailstore.StorageManager r0;
        android.content.Context $r1;
        java.util.LinkedHashMap $r2;
        java.util.IdentityHashMap $r3;
        java.util.ArrayList $r4;
        java.lang.NullPointerException $r5;
        com.fsck.k9.mailstore.StorageManager$StorageProvider[] $r6;
        com.fsck.k9.mailstore.StorageManager$InternalStorageProvider $r7;
        com.fsck.k9.mailstore.StorageManager$ExternalStorageProvider $r8;
        java.util.List $r9;
        java.util.Iterator $r10;
        boolean $z0;
        java.lang.Object $r11;
        com.fsck.k9.mailstore.StorageManager$StorageProvider r12;
        java.util.Map $r13;
        java.lang.String $r14;
        com.fsck.k9.mailstore.StorageManager$SynchronizationAid $r15;

        r0 := @this: com.fsck.k9.mailstore.StorageManager;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.fsck.k9.mailstore.StorageManager: java.util.Map mProviders> = $r2;

        $r3 = new java.util.IdentityHashMap;

        specialinvoke $r3.<java.util.IdentityHashMap: void <init>()>();

        r0.<com.fsck.k9.mailstore.StorageManager: java.util.Map mProviderLocks> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.fsck.k9.mailstore.StorageManager: java.util.List mListeners> = $r4;

        if $r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("No Context given");

        throw $r5;

     label1:
        r0.<com.fsck.k9.mailstore.StorageManager: android.content.Context context> = $r1;

        $r6 = newarray (com.fsck.k9.mailstore.StorageManager$StorageProvider)[2];

        $r7 = new com.fsck.k9.mailstore.StorageManager$InternalStorageProvider;

        specialinvoke $r7.<com.fsck.k9.mailstore.StorageManager$InternalStorageProvider: void <init>()>();

        $r6[0] = $r7;

        $r8 = new com.fsck.k9.mailstore.StorageManager$ExternalStorageProvider;

        specialinvoke $r8.<com.fsck.k9.mailstore.StorageManager$ExternalStorageProvider: void <init>()>();

        $r6[1] = $r8;

        $r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r6);

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (com.fsck.k9.mailstore.StorageManager$StorageProvider) $r11;

        $z0 = interfaceinvoke r12.<com.fsck.k9.mailstore.StorageManager$StorageProvider: boolean isSupported(android.content.Context)>($r1);

        if $z0 == 0 goto label2;

        interfaceinvoke r12.<com.fsck.k9.mailstore.StorageManager$StorageProvider: void init(android.content.Context)>($r1);

        $r13 = r0.<com.fsck.k9.mailstore.StorageManager: java.util.Map mProviders>;

        $r14 = interfaceinvoke r12.<com.fsck.k9.mailstore.StorageManager$StorageProvider: java.lang.String getId()>();

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, r12);

        $r13 = r0.<com.fsck.k9.mailstore.StorageManager: java.util.Map mProviderLocks>;

        $r15 = new com.fsck.k9.mailstore.StorageManager$SynchronizationAid;

        specialinvoke $r15.<com.fsck.k9.mailstore.StorageManager$SynchronizationAid: void <init>()>();

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r12, $r15);

        goto label2;

     label3:
        return;
    }
    public static com.fsck.k9.mailstore.StorageManager getInstance(android.content.Context)
    {
        android.content.Context $r0;
        com.fsck.k9.mailstore.StorageManager $r1;
        java.lang.Throwable $r2;

        $r0 := @parameter0: android.content.Context;

        entermonitor class "Lcom/fsck/k9/mailstore/StorageManager;";

     label1:
        $r1 = <com.fsck.k9.mailstore.StorageManager: com.fsck.k9.mailstore.StorageManager instance>;

        if $r1 != null goto label2;

        $r1 = new com.fsck.k9.mailstore.StorageManager;

        $r0 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        specialinvoke $r1.<com.fsck.k9.mailstore.StorageManager: void <init>(android.content.Context)>($r0);

        <com.fsck.k9.mailstore.StorageManager: com.fsck.k9.mailstore.StorageManager instance> = $r1;

     label2:
        $r1 = <com.fsck.k9.mailstore.StorageManager: com.fsck.k9.mailstore.StorageManager instance>;

     label3:
        exitmonitor class "Lcom/fsck/k9/mailstore/StorageManager;";

        return $r1;

     label4:
        $r2 := @caughtexception;

        exitmonitor class "Lcom/fsck/k9/mailstore/StorageManager;";

        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
    }
    public static boolean isMountPoint(java.io.File)
    {
        java.io.File $r0, r1;
        int $i0, $i1;
        java.io.File[] $r2;
        boolean $z0;

        $r0 := @parameter0: java.io.File;

        $r2 = staticinvoke <java.io.File: java.io.File[] listRoots()>();

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        r1 = $r2[$i1];

        $z0 = virtualinvoke r1.<java.io.File: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 0;
    }
    public void addListener(com.fsck.k9.mailstore.StorageManager$StorageListener)
    {
        com.fsck.k9.mailstore.StorageManager r0;
        com.fsck.k9.mailstore.StorageManager$StorageListener $r1;
        java.util.List $r2;

        r0 := @this: com.fsck.k9.mailstore.StorageManager;

        $r1 := @parameter0: com.fsck.k9.mailstore.StorageManager$StorageListener;

        $r2 = r0.<com.fsck.k9.mailstore.StorageManager: java.util.List mListeners>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }
    public java.io.File getAttachmentDirectory(java.lang.String, java.lang.String)
    {
        com.fsck.k9.mailstore.StorageManager r0;
        java.lang.String $r1, $r2;
        com.fsck.k9.mailstore.StorageManager$StorageProvider $r3;
        android.content.Context $r4;
        java.io.File $r5;

        r0 := @this: com.fsck.k9.mailstore.StorageManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<com.fsck.k9.mailstore.StorageManager: com.fsck.k9.mailstore.StorageManager$StorageProvider getProvider(java.lang.String)>($r2);

        $r4 = r0.<com.fsck.k9.mailstore.StorageManager: android.content.Context context>;

        $r5 = interfaceinvoke $r3.<com.fsck.k9.mailstore.StorageManager$StorageProvider: java.io.File getAttachmentDirectory(android.content.Context,java.lang.String)>($r4, $r1);

        return $r5;
    }
    public java.util.Map getAvailableProviders()
    {
        com.fsck.k9.mailstore.StorageManager r0;
        java.util.LinkedHashMap r1;
        android.content.Context $r2;
        java.util.Map $r3;
        java.util.Set $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6, $r8;
        java.util.Map$Entry r7;
        com.fsck.k9.mailstore.StorageManager$StorageProvider $r9;
        java.lang.String $r10;

        r0 := @this: com.fsck.k9.mailstore.StorageManager;

        r1 = new java.util.LinkedHashMap;

        specialinvoke r1.<java.util.LinkedHashMap: void <init>()>();

        $r3 = r0.<com.fsck.k9.mailstore.StorageManager: java.util.Map mProviders>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (com.fsck.k9.mailstore.StorageManager$StorageProvider) $r8;

        $r2 = r0.<com.fsck.k9.mailstore.StorageManager: android.content.Context context>;

        $r10 = interfaceinvoke $r9.<com.fsck.k9.mailstore.StorageManager$StorageProvider: java.lang.String getName(android.content.Context)>($r2);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r10);

        goto label1;

     label2:
        return r1;
    }
    public java.io.File getDatabase(java.lang.String, java.lang.String)
    {
        com.fsck.k9.mailstore.StorageManager r0;
        java.lang.String $r1, $r2;
        com.fsck.k9.mailstore.StorageManager$StorageProvider $r3;
        android.content.Context $r4;
        java.io.File $r5;

        r0 := @this: com.fsck.k9.mailstore.StorageManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<com.fsck.k9.mailstore.StorageManager: com.fsck.k9.mailstore.StorageManager$StorageProvider getProvider(java.lang.String)>($r2);

        $r4 = r0.<com.fsck.k9.mailstore.StorageManager: android.content.Context context>;

        $r5 = interfaceinvoke $r3.<com.fsck.k9.mailstore.StorageManager$StorageProvider: java.io.File getDatabase(android.content.Context,java.lang.String)>($r4, $r1);

        return $r5;
    }
    public java.lang.String getDefaultProviderId()
    {
        com.fsck.k9.mailstore.StorageManager r0;
        java.util.Map $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        java.lang.String $r5;

        r0 := @this: com.fsck.k9.mailstore.StorageManager;

        $r1 = r0.<com.fsck.k9.mailstore.StorageManager: java.util.Map mProviders>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r4;

        return $r5;
    }
    protected com.fsck.k9.mailstore.StorageManager$StorageProvider getProvider(java.lang.String)
    {
        com.fsck.k9.mailstore.StorageManager r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.util.Map $r3;
        com.fsck.k9.mailstore.StorageManager$StorageProvider $r4;

        r0 := @this: com.fsck.k9.mailstore.StorageManager;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.fsck.k9.mailstore.StorageManager: java.util.Map mProviders>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (com.fsck.k9.mailstore.StorageManager$StorageProvider) $r2;

        return $r4;
    }
    public boolean isReady(java.lang.String)
    {
        com.fsck.k9.mailstore.StorageManager r0;
        java.lang.String $r1;
        com.fsck.k9.mailstore.StorageManager$StorageProvider $r2;
        java.lang.Object[] $r3;
        android.content.Context $r4;
        boolean $z0;

        r0 := @this: com.fsck.k9.mailstore.StorageManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.fsck.k9.mailstore.StorageManager: com.fsck.k9.mailstore.StorageManager$StorageProvider getProvider(java.lang.String)>($r1);

        if $r2 != null goto label1;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r1;

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Storage-Provider \"%s\" does not exist", $r3);

        return 0;

     label1:
        $r4 = r0.<com.fsck.k9.mailstore.StorageManager: android.content.Context context>;

        $z0 = interfaceinvoke $r2.<com.fsck.k9.mailstore.StorageManager$StorageProvider: boolean isReady(android.content.Context)>($r4);

        return $z0;
    }
    public void lockProvider(java.lang.String) throws com.fsck.k9.mailstore.UnavailableStorageException
    {
        com.fsck.k9.mailstore.StorageManager r0;
        java.lang.String $r1;
        com.fsck.k9.mailstore.StorageManager$StorageProvider $r2;
        com.fsck.k9.mailstore.UnavailableStorageException $r3;
        java.lang.StringBuilder $r4;
        java.util.Map $r5;
        java.lang.Object $r6;
        com.fsck.k9.mailstore.StorageManager$SynchronizationAid r7;
        java.util.concurrent.locks.Lock $r8;
        boolean $z0, $z1;
        android.content.Context $r9;

        r0 := @this: com.fsck.k9.mailstore.StorageManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.fsck.k9.mailstore.StorageManager: com.fsck.k9.mailstore.StorageManager$StorageProvider getProvider(java.lang.String)>($r1);

        if $r2 != null goto label1;

        $r3 = new com.fsck.k9.mailstore.UnavailableStorageException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StorageProvider not found: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<com.fsck.k9.mailstore.UnavailableStorageException: void <init>(java.lang.String)>($r1);

        throw $r3;

     label1:
        $r5 = r0.<com.fsck.k9.mailstore.StorageManager: java.util.Map mProviderLocks>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r7 = (com.fsck.k9.mailstore.StorageManager$SynchronizationAid) $r6;

        $r8 = r7.<com.fsck.k9.mailstore.StorageManager$SynchronizationAid: java.util.concurrent.locks.Lock readLock>;

        $z0 = interfaceinvoke $r8.<java.util.concurrent.locks.Lock: boolean tryLock()>();

        if $z0 == 0 goto label2;

        if $z0 == 0 goto label4;

        $z1 = r7.<com.fsck.k9.mailstore.StorageManager$SynchronizationAid: boolean unmounting>;

        if $z1 == 0 goto label4;

     label2:
        if $z0 == 0 goto label3;

        $r8 = r7.<com.fsck.k9.mailstore.StorageManager$SynchronizationAid: java.util.concurrent.locks.Lock readLock>;

        interfaceinvoke $r8.<java.util.concurrent.locks.Lock: void unlock()>();

     label3:
        $r3 = new com.fsck.k9.mailstore.UnavailableStorageException;

        specialinvoke $r3.<com.fsck.k9.mailstore.UnavailableStorageException: void <init>(java.lang.String)>("StorageProvider is unmounting");

        throw $r3;

     label4:
        if $z0 == 0 goto label5;

        $r9 = r0.<com.fsck.k9.mailstore.StorageManager: android.content.Context context>;

        $z0 = interfaceinvoke $r2.<com.fsck.k9.mailstore.StorageManager$StorageProvider: boolean isReady(android.content.Context)>($r9);

        if $z0 != 0 goto label5;

        $r8 = r7.<com.fsck.k9.mailstore.StorageManager$SynchronizationAid: java.util.concurrent.locks.Lock readLock>;

        interfaceinvoke $r8.<java.util.concurrent.locks.Lock: void unlock()>();

        $r3 = new com.fsck.k9.mailstore.UnavailableStorageException;

        specialinvoke $r3.<com.fsck.k9.mailstore.UnavailableStorageException: void <init>(java.lang.String)>("StorageProvider not ready");

        throw $r3;

     label5:
        return;
    }
    public void onAfterUnmount(java.lang.String)
    {
        com.fsck.k9.mailstore.StorageManager r0;
        java.lang.String $r1;
        java.lang.Object[] $r2;
        com.fsck.k9.mailstore.StorageManager$StorageProvider $r3;
        java.util.Map $r4;
        java.lang.Object $r5;
        com.fsck.k9.mailstore.StorageManager$SynchronizationAid r6;
        java.util.concurrent.locks.Lock $r7;
        android.content.Context $r8;

        r0 := @this: com.fsck.k9.mailstore.StorageManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = $r1;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("storage path \"%s\" unmounted", $r2);

        $r3 = virtualinvoke r0.<com.fsck.k9.mailstore.StorageManager: com.fsck.k9.mailstore.StorageManager$StorageProvider resolveProvider(java.lang.String)>($r1);

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = r0.<com.fsck.k9.mailstore.StorageManager: java.util.Map mProviderLocks>;

        $r3 = virtualinvoke r0.<com.fsck.k9.mailstore.StorageManager: com.fsck.k9.mailstore.StorageManager$StorageProvider resolveProvider(java.lang.String)>($r1);

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r6 = (com.fsck.k9.mailstore.StorageManager$SynchronizationAid) $r5;

        $r7 = r6.<com.fsck.k9.mailstore.StorageManager$SynchronizationAid: java.util.concurrent.locks.Lock writeLock>;

        interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void lock()>();

        r6.<com.fsck.k9.mailstore.StorageManager$SynchronizationAid: boolean unmounting> = 0;

        $r7 = r6.<com.fsck.k9.mailstore.StorageManager$SynchronizationAid: java.util.concurrent.locks.Lock writeLock>;

        interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void unlock()>();

        $r8 = r0.<com.fsck.k9.mailstore.StorageManager: android.content.Context context>;

        staticinvoke <com.fsck.k9.K9: void setServicesEnabled(android.content.Context)>($r8);

        return;
    }
    public void onBeforeUnmount(java.lang.String)
    {
        com.fsck.k9.mailstore.StorageManager r0;
        java.lang.String $r1, $r9;
        java.lang.Exception r2;
        java.lang.Object[] $r3;
        com.fsck.k9.mailstore.StorageManager$StorageProvider $r4;
        java.util.List $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;
        com.fsck.k9.mailstore.StorageManager$StorageListener r8;
        java.util.Map $r10;
        com.fsck.k9.mailstore.StorageManager$SynchronizationAid r11;
        java.util.concurrent.locks.Lock $r12;

        r0 := @this: com.fsck.k9.mailstore.StorageManager;

        $r1 := @parameter0: java.lang.String;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r1;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("storage path \"%s\" unmounting", $r3);

        $r4 = virtualinvoke r0.<com.fsck.k9.mailstore.StorageManager: com.fsck.k9.mailstore.StorageManager$StorageProvider resolveProvider(java.lang.String)>($r1);

        if $r4 != null goto label1;

        return;

     label1:
        $r5 = r0.<com.fsck.k9.mailstore.StorageManager: java.util.List mListeners>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.fsck.k9.mailstore.StorageManager$StorageListener) $r7;

     label3:
        $r9 = interfaceinvoke $r4.<com.fsck.k9.mailstore.StorageManager$StorageProvider: java.lang.String getId()>();

        interfaceinvoke r8.<com.fsck.k9.mailstore.StorageManager$StorageListener: void onUnmount(java.lang.String)>($r9);

     label4:
        goto label2;

     label5:
        r2 := @caughtexception;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void w(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r2, "Error while notifying StorageListener", $r3);

        goto label2;

     label6:
        $r10 = r0.<com.fsck.k9.mailstore.StorageManager: java.util.Map mProviderLocks>;

        $r4 = virtualinvoke r0.<com.fsck.k9.mailstore.StorageManager: com.fsck.k9.mailstore.StorageManager$StorageProvider resolveProvider(java.lang.String)>($r1);

        $r7 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r11 = (com.fsck.k9.mailstore.StorageManager$SynchronizationAid) $r7;

        $r12 = r11.<com.fsck.k9.mailstore.StorageManager$SynchronizationAid: java.util.concurrent.locks.Lock writeLock>;

        interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void lock()>();

        r11.<com.fsck.k9.mailstore.StorageManager$SynchronizationAid: boolean unmounting> = 1;

        $r12 = r11.<com.fsck.k9.mailstore.StorageManager$SynchronizationAid: java.util.concurrent.locks.Lock writeLock>;

        interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }
    public void onMount(java.lang.String, boolean)
    {
        com.fsck.k9.mailstore.StorageManager r0;
        java.lang.String $r1;
        boolean $z0;
        java.lang.Exception r2;
        java.lang.Object[] $r3;
        java.lang.Boolean $r4;
        com.fsck.k9.mailstore.StorageManager$StorageProvider $r5;
        java.util.List $r6;
        java.util.Iterator $r7;
        java.lang.Object $r8;
        com.fsck.k9.mailstore.StorageManager$StorageListener r9;
        android.content.Context $r10;

        r0 := @this: com.fsck.k9.mailstore.StorageManager;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = $r1;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3[1] = $r4;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("storage path \"%s\" mounted readOnly=%s", $r3);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r5 = virtualinvoke r0.<com.fsck.k9.mailstore.StorageManager: com.fsck.k9.mailstore.StorageManager$StorageProvider resolveProvider(java.lang.String)>($r1);

        if $r5 == null goto label7;

        $r6 = r0.<com.fsck.k9.mailstore.StorageManager: java.util.List mListeners>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (com.fsck.k9.mailstore.StorageManager$StorageListener) $r8;

     label3:
        $r1 = interfaceinvoke $r5.<com.fsck.k9.mailstore.StorageManager$StorageProvider: java.lang.String getId()>();

        interfaceinvoke r9.<com.fsck.k9.mailstore.StorageManager$StorageListener: void onMount(java.lang.String)>($r1);

     label4:
        goto label2;

     label5:
        r2 := @caughtexception;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void w(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r2, "Error while notifying StorageListener", $r3);

        goto label2;

     label6:
        $r10 = r0.<com.fsck.k9.mailstore.StorageManager: android.content.Context context>;

        staticinvoke <com.fsck.k9.K9: void setServicesEnabled(android.content.Context)>($r10);

     label7:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }
    public void removeListener(com.fsck.k9.mailstore.StorageManager$StorageListener)
    {
        com.fsck.k9.mailstore.StorageManager r0;
        com.fsck.k9.mailstore.StorageManager$StorageListener $r1;
        java.util.List $r2;

        r0 := @this: com.fsck.k9.mailstore.StorageManager;

        $r1 := @parameter0: com.fsck.k9.mailstore.StorageManager$StorageListener;

        $r2 = r0.<com.fsck.k9.mailstore.StorageManager: java.util.List mListeners>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>($r1);

        return;
    }
    protected com.fsck.k9.mailstore.StorageManager$StorageProvider resolveProvider(java.lang.String)
    {
        com.fsck.k9.mailstore.StorageManager r0;
        java.lang.String $r1, $r9;
        java.util.Map $r2;
        java.util.Collection $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        com.fsck.k9.mailstore.StorageManager$StorageProvider r6;
        android.content.Context $r7;
        java.io.File $r8;

        r0 := @this: com.fsck.k9.mailstore.StorageManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.fsck.k9.mailstore.StorageManager: java.util.Map mProviders>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.fsck.k9.mailstore.StorageManager$StorageProvider) $r5;

        $r7 = r0.<com.fsck.k9.mailstore.StorageManager: android.content.Context context>;

        $r8 = interfaceinvoke r6.<com.fsck.k9.mailstore.StorageManager$StorageProvider: java.io.File getRoot(android.content.Context)>($r7);

        $r9 = virtualinvoke $r8.<java.io.File: java.lang.String getAbsolutePath()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label1;

        return r6;

     label2:
        return null;
    }
    public void unlockProvider(java.lang.String)
    {
        com.fsck.k9.mailstore.StorageManager r0;
        java.lang.String $r1;
        com.fsck.k9.mailstore.StorageManager$StorageProvider $r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        com.fsck.k9.mailstore.StorageManager$SynchronizationAid r5;
        java.util.concurrent.locks.Lock $r6;

        r0 := @this: com.fsck.k9.mailstore.StorageManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.fsck.k9.mailstore.StorageManager: com.fsck.k9.mailstore.StorageManager$StorageProvider getProvider(java.lang.String)>($r1);

        $r3 = r0.<com.fsck.k9.mailstore.StorageManager: java.util.Map mProviderLocks>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r5 = (com.fsck.k9.mailstore.StorageManager$SynchronizationAid) $r4;

        $r6 = r5.<com.fsck.k9.mailstore.StorageManager$SynchronizationAid: java.util.concurrent.locks.Lock readLock>;

        interfaceinvoke $r6.<java.util.concurrent.locks.Lock: void unlock()>();

        return;
    }
