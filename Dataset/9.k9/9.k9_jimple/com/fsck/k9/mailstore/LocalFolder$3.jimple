com.fsck.k9.mailstore.LocalFolder$3 extends java.lang.Object implements com.fsck.k9.mailstore.LockableDatabase$DbCallback
final com.fsck.k9.mailstore.LocalFolder this$0
    void <init>(com.fsck.k9.mailstore.LocalFolder)
    {
        com.fsck.k9.mailstore.LocalFolder$3 r0;
        com.fsck.k9.mailstore.LocalFolder $r1;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$3;

        $r1 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        r0.<com.fsck.k9.mailstore.LocalFolder$3: com.fsck.k9.mailstore.LocalFolder this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public java.lang.Integer doDbWork(android.database.sqlite.SQLiteDatabase) throws com.fsck.k9.mailstore.LockableDatabase$WrappedException
    {
        com.fsck.k9.mailstore.LocalFolder$3 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        com.fsck.k9.mail.MessagingException r2;
        com.fsck.k9.mailstore.LocalFolder $r3;
        android.database.Cursor r4, $r7;
        java.lang.String[] $r5;
        long $l0;
        java.lang.String $r6;
        int $i1;
        java.lang.Integer $r8;
        com.fsck.k9.mailstore.LockableDatabase$WrappedException $r9;
        java.lang.Throwable $r10;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$3;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder$3: com.fsck.k9.mailstore.LocalFolder this$0>;

     label1:
        virtualinvoke $r3.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(0);

     label2:
        r4 = null;

     label3:
        $r5 = newarray (java.lang.String)[1];

        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder$3: com.fsck.k9.mailstore.LocalFolder this$0>;

        $l0 = staticinvoke <com.fsck.k9.mailstore.LocalFolder: long access$100(com.fsck.k9.mailstore.LocalFolder)>($r3);

        $r6 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        $r5[0] = $r6;

        $r7 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("SELECT COUNT(id) FROM messages WHERE empty = 0 AND deleted = 0 and folder_id = ?", $r5);

     label4:
        r4 = $r7;

     label5:
        interfaceinvoke $r7.<android.database.Cursor: boolean moveToFirst()>();

        $i1 = interfaceinvoke $r7.<android.database.Cursor: int getInt(int)>(0);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

     label6:
        staticinvoke <com.fsck.k9.helper.Utility: void closeQuietly(android.database.Cursor)>($r7);

        return $r8;

     label7:
        r2 := @caughtexception;

        $r9 = new com.fsck.k9.mailstore.LockableDatabase$WrappedException;

        specialinvoke $r9.<com.fsck.k9.mailstore.LockableDatabase$WrappedException: void <init>(java.lang.Exception)>(r2);

        throw $r9;

     label8:
        $r10 := @caughtexception;

        staticinvoke <com.fsck.k9.helper.Utility: void closeQuietly(android.database.Cursor)>(r4);

        throw $r10;

        catch com.fsck.k9.mail.MessagingException from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }
    public volatile java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase) throws com.fsck.k9.mailstore.LockableDatabase$WrappedException, com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder$3 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.Integer $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$3;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder$3: java.lang.Integer doDbWork(android.database.sqlite.SQLiteDatabase)>($r1);

        return $r2;
    }
