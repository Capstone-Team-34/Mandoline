com.fsck.k9.mailstore.LocalFolder extends com.fsck.k9.mail.Folder
private static final long INVALID_MESSAGE_PART_ID
private static final int MAX_BODY_SIZE_FOR_DATABASE
private final com.fsck.k9.message.extractors.AttachmentInfoExtractor attachmentInfoExtractor
private long databaseId
private com.fsck.k9.mail.Folder$FolderClass displayClass
private boolean isInTopGroup
private boolean isIntegrate
private java.lang.Integer lastUid
private final com.fsck.k9.mailstore.LocalStore localStore
private com.fsck.k9.mailstore.LocalFolder$MoreMessages moreMessages
private java.lang.String name
private com.fsck.k9.mail.Folder$FolderClass notifyClass
private java.lang.String prefId
private com.fsck.k9.mail.Folder$FolderClass pushClass
private java.lang.String pushState
private com.fsck.k9.mail.Folder$FolderClass syncClass
private int visibleLimit
    public void <init>(com.fsck.k9.mailstore.LocalStore, long)
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mailstore.LocalStore $r1;
        long $l0;
        com.fsck.k9.message.extractors.AttachmentInfoExtractor $r2;
        com.fsck.k9.mail.Folder$FolderClass $r3;
        com.fsck.k9.mailstore.LocalFolder$MoreMessages $r4;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: com.fsck.k9.mailstore.LocalStore;

        $l0 := @parameter1: long;

        specialinvoke r0.<com.fsck.k9.mail.Folder: void <init>()>();

        r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String name> = null;

        r0.<com.fsck.k9.mailstore.LocalFolder: long databaseId> = -1L;

        r0.<com.fsck.k9.mailstore.LocalFolder: int visibleLimit> = -1;

        r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String prefId> = null;

        $r3 = <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass NO_CLASS>;

        r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass displayClass> = $r3;

        $r3 = <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass INHERITED>;

        r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass syncClass> = $r3;

        $r3 = <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass SECOND_CLASS>;

        r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass pushClass> = $r3;

        $r3 = <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass INHERITED>;

        r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass notifyClass> = $r3;

        r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String pushState> = null;

        r0.<com.fsck.k9.mailstore.LocalFolder: boolean isInTopGroup> = 0;

        r0.<com.fsck.k9.mailstore.LocalFolder: boolean isIntegrate> = 0;

        r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.Integer lastUid> = null;

        $r4 = <com.fsck.k9.mailstore.LocalFolder$MoreMessages: com.fsck.k9.mailstore.LocalFolder$MoreMessages UNKNOWN>;

        r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalFolder$MoreMessages moreMessages> = $r4;

        r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore> = $r1;

        r0.<com.fsck.k9.mailstore.LocalFolder: long databaseId> = $l0;

        $r2 = virtualinvoke $r1.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.message.extractors.AttachmentInfoExtractor getAttachmentInfoExtractor()>();

        r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.message.extractors.AttachmentInfoExtractor attachmentInfoExtractor> = $r2;

        return;
    }
    public void <init>(com.fsck.k9.mailstore.LocalStore, java.lang.String)
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mailstore.LocalStore $r1;
        java.lang.String $r2, $r7;
        com.fsck.k9.mail.Folder$FolderClass $r3;
        com.fsck.k9.mailstore.LocalFolder$MoreMessages $r4;
        com.fsck.k9.message.extractors.AttachmentInfoExtractor $r5;
        com.fsck.k9.Account $r6;
        boolean $z0;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: com.fsck.k9.mailstore.LocalStore;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.fsck.k9.mail.Folder: void <init>()>();

        r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String name> = null;

        r0.<com.fsck.k9.mailstore.LocalFolder: long databaseId> = -1L;

        r0.<com.fsck.k9.mailstore.LocalFolder: int visibleLimit> = -1;

        r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String prefId> = null;

        $r3 = <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass NO_CLASS>;

        r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass displayClass> = $r3;

        $r3 = <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass INHERITED>;

        r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass syncClass> = $r3;

        $r3 = <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass SECOND_CLASS>;

        r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass pushClass> = $r3;

        $r3 = <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass INHERITED>;

        r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass notifyClass> = $r3;

        r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String pushState> = null;

        r0.<com.fsck.k9.mailstore.LocalFolder: boolean isInTopGroup> = 0;

        r0.<com.fsck.k9.mailstore.LocalFolder: boolean isIntegrate> = 0;

        r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.Integer lastUid> = null;

        $r4 = <com.fsck.k9.mailstore.LocalFolder$MoreMessages: com.fsck.k9.mailstore.LocalFolder$MoreMessages UNKNOWN>;

        r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalFolder$MoreMessages moreMessages> = $r4;

        r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore> = $r1;

        r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String name> = $r2;

        $r5 = virtualinvoke $r1.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.message.extractors.AttachmentInfoExtractor getAttachmentInfoExtractor()>();

        r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.message.extractors.AttachmentInfoExtractor attachmentInfoExtractor> = $r5;

        $r6 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.Account getAccount()>();

        $r2 = virtualinvoke $r6.<com.fsck.k9.Account: java.lang.String getInboxFolderName()>();

        $r7 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label1;

        $r3 = <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass FIRST_CLASS>;

        r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass syncClass> = $r3;

        $r3 = <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass FIRST_CLASS>;

        r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass pushClass> = $r3;

        r0.<com.fsck.k9.mailstore.LocalFolder: boolean isInTopGroup> = 1;

     label1:
        return;
    }
    static java.lang.String access$000(com.fsck.k9.mailstore.LocalFolder)
    {
        com.fsck.k9.mailstore.LocalFolder $r0;
        java.lang.String r1;

        $r0 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        r1 = $r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String name>;

        return r1;
    }
    static long access$100(com.fsck.k9.mailstore.LocalFolder)
    {
        com.fsck.k9.mailstore.LocalFolder $r0;
        long l0;

        $r0 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        l0 = $r0.<com.fsck.k9.mailstore.LocalFolder: long databaseId>;

        return l0;
    }
    static int access$1000(com.fsck.k9.mailstore.LocalFolder)
    {
        com.fsck.k9.mailstore.LocalFolder $r0;
        int i0;

        $r0 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        i0 = $r0.<com.fsck.k9.mailstore.LocalFolder: int visibleLimit>;

        return i0;
    }
    static void access$1100(com.fsck.k9.mailstore.LocalFolder, android.database.sqlite.SQLiteDatabase, com.fsck.k9.mailstore.LocalMessage) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder $r0;
        android.database.sqlite.SQLiteDatabase $r1;
        com.fsck.k9.mailstore.LocalMessage $r2;

        $r0 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter1: android.database.sqlite.SQLiteDatabase;

        $r2 := @parameter2: com.fsck.k9.mailstore.LocalMessage;

        specialinvoke $r0.<com.fsck.k9.mailstore.LocalFolder: void loadMessageParts(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.LocalMessage)>($r1, $r2);

        return;
    }
    static com.fsck.k9.mailstore.LocalStore access$1200(com.fsck.k9.mailstore.LocalFolder)
    {
        com.fsck.k9.mailstore.LocalFolder $r0;
        com.fsck.k9.mailstore.LocalStore r1;

        $r0 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        r1 = $r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

        return r1;
    }
    static com.fsck.k9.mailstore.ThreadInfo access$1300(com.fsck.k9.mailstore.LocalFolder, android.database.sqlite.SQLiteDatabase, com.fsck.k9.mail.Message) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder $r0;
        android.database.sqlite.SQLiteDatabase $r1;
        com.fsck.k9.mail.Message $r2;
        com.fsck.k9.mailstore.ThreadInfo $r3;

        $r0 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter1: android.database.sqlite.SQLiteDatabase;

        $r2 := @parameter2: com.fsck.k9.mail.Message;

        $r3 = specialinvoke $r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.ThreadInfo doMessageThreading(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message)>($r1, $r2);

        return $r3;
    }
    static void access$1400(com.fsck.k9.mailstore.LocalFolder, android.database.sqlite.SQLiteDatabase, com.fsck.k9.mail.Message, boolean, java.util.Map) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder $r0;
        android.database.sqlite.SQLiteDatabase $r1;
        com.fsck.k9.mail.Message $r2;
        boolean $z0;
        java.util.Map $r3;

        $r0 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter1: android.database.sqlite.SQLiteDatabase;

        $r2 := @parameter2: com.fsck.k9.mail.Message;

        $z0 := @parameter3: boolean;

        $r3 := @parameter4: java.util.Map;

        specialinvoke $r0.<com.fsck.k9.mailstore.LocalFolder: void saveMessage(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message,boolean,java.util.Map)>($r1, $r2, $z0, $r3);

        return;
    }
    static long access$1500(com.fsck.k9.mailstore.LocalFolder, android.database.sqlite.SQLiteDatabase, android.content.ContentValues, com.fsck.k9.mail.Part, long) throws java.io.IOException, com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder $r0;
        android.database.sqlite.SQLiteDatabase $r1;
        android.content.ContentValues $r2;
        com.fsck.k9.mail.Part $r3;
        long $l0;

        $r0 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter1: android.database.sqlite.SQLiteDatabase;

        $r2 := @parameter2: android.content.ContentValues;

        $r3 := @parameter3: com.fsck.k9.mail.Part;

        $l0 := @parameter4: long;

        $l0 = specialinvoke $r0.<com.fsck.k9.mailstore.LocalFolder: long updateOrInsertMessagePart(android.database.sqlite.SQLiteDatabase,android.content.ContentValues,com.fsck.k9.mail.Part,long)>($r1, $r2, $r3, $l0);

        return $l0;
    }
    static void access$1600(com.fsck.k9.mailstore.LocalFolder, long) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder $r0;
        long $l0;

        $r0 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        $l0 := @parameter1: long;

        specialinvoke $r0.<com.fsck.k9.mailstore.LocalFolder: void deleteMessageDataFromDisk(long)>($l0);

        return;
    }
    static boolean access$1700(com.fsck.k9.mailstore.LocalFolder, android.database.sqlite.SQLiteDatabase, long)
    {
        com.fsck.k9.mailstore.LocalFolder $r0;
        android.database.sqlite.SQLiteDatabase $r1;
        long $l0;
        boolean $z0;

        $r0 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter1: android.database.sqlite.SQLiteDatabase;

        $l0 := @parameter2: long;

        $z0 = specialinvoke $r0.<com.fsck.k9.mailstore.LocalFolder: boolean hasThreadChildren(android.database.sqlite.SQLiteDatabase,long)>($r1, $l0);

        return $z0;
    }
    static long access$1800(com.fsck.k9.mailstore.LocalFolder, android.database.sqlite.SQLiteDatabase, long)
    {
        com.fsck.k9.mailstore.LocalFolder $r0;
        android.database.sqlite.SQLiteDatabase $r1;
        long $l0;

        $r0 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter1: android.database.sqlite.SQLiteDatabase;

        $l0 := @parameter2: long;

        $l0 = specialinvoke $r0.<com.fsck.k9.mailstore.LocalFolder: long getEmptyThreadParent(android.database.sqlite.SQLiteDatabase,long)>($r1, $l0);

        return $l0;
    }
    static void access$1900(com.fsck.k9.mailstore.LocalFolder, android.database.sqlite.SQLiteDatabase, long)
    {
        com.fsck.k9.mailstore.LocalFolder $r0;
        android.database.sqlite.SQLiteDatabase $r1;
        long $l0;

        $r0 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter1: android.database.sqlite.SQLiteDatabase;

        $l0 := @parameter2: long;

        specialinvoke $r0.<com.fsck.k9.mailstore.LocalFolder: void deleteMessageRow(android.database.sqlite.SQLiteDatabase,long)>($r1, $l0);

        return;
    }
    static com.fsck.k9.mail.Folder$FolderClass access$200(com.fsck.k9.mailstore.LocalFolder)
    {
        com.fsck.k9.mailstore.LocalFolder $r0;
        com.fsck.k9.mail.Folder$FolderClass r1;

        $r0 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        r1 = $r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass displayClass>;

        return r1;
    }
    static void access$2000(com.fsck.k9.mailstore.LocalFolder, android.database.sqlite.SQLiteDatabase, long)
    {
        com.fsck.k9.mailstore.LocalFolder $r0;
        android.database.sqlite.SQLiteDatabase $r1;
        long $l0;

        $r0 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter1: android.database.sqlite.SQLiteDatabase;

        $l0 := @parameter2: long;

        specialinvoke $r0.<com.fsck.k9.mailstore.LocalFolder: void deleteMessagePartsFromDisk(android.database.sqlite.SQLiteDatabase,long)>($r1, $l0);

        return;
    }
    static com.fsck.k9.mail.Folder$FolderClass access$300(com.fsck.k9.mailstore.LocalFolder)
    {
        com.fsck.k9.mailstore.LocalFolder $r0;
        com.fsck.k9.mail.Folder$FolderClass r1;

        $r0 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        r1 = $r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass syncClass>;

        return r1;
    }
    static com.fsck.k9.mail.Folder$FolderClass access$400(com.fsck.k9.mailstore.LocalFolder)
    {
        com.fsck.k9.mailstore.LocalFolder $r0;
        com.fsck.k9.mail.Folder$FolderClass r1;

        $r0 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        r1 = $r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass notifyClass>;

        return r1;
    }
    static com.fsck.k9.mail.Folder$FolderClass access$500(com.fsck.k9.mailstore.LocalFolder)
    {
        com.fsck.k9.mailstore.LocalFolder $r0;
        com.fsck.k9.mail.Folder$FolderClass r1;

        $r0 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        r1 = $r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass pushClass>;

        return r1;
    }
    static boolean access$600(com.fsck.k9.mailstore.LocalFolder)
    {
        com.fsck.k9.mailstore.LocalFolder $r0;
        boolean z0;

        $r0 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        z0 = $r0.<com.fsck.k9.mailstore.LocalFolder: boolean isInTopGroup>;

        return z0;
    }
    static boolean access$700(com.fsck.k9.mailstore.LocalFolder)
    {
        com.fsck.k9.mailstore.LocalFolder $r0;
        boolean z0;

        $r0 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        z0 = $r0.<com.fsck.k9.mailstore.LocalFolder: boolean isIntegrate>;

        return z0;
    }
    static void access$801(com.fsck.k9.mailstore.LocalFolder, long) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder $r0;
        long $l0;

        $r0 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        $l0 := @parameter1: long;

        specialinvoke $r0.<com.fsck.k9.mail.Folder: void setLastChecked(long)>($l0);

        return;
    }
    static void access$901(com.fsck.k9.mailstore.LocalFolder, long) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder $r0;
        long $l0;

        $r0 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        $l0 := @parameter1: long;

        specialinvoke $r0.<com.fsck.k9.mail.Folder: void setLastPush(long)>($l0);

        return;
    }
    private void addChildrenToStack(java.util.Stack, com.fsck.k9.mail.Part, long)
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        java.util.Stack r1;
        com.fsck.k9.mail.Part $r2;
        long $l0;
        com.fsck.k9.mail.Body $r3;
        boolean $z0;
        com.fsck.k9.mail.Multipart r4;
        int $i1;
        com.fsck.k9.mail.BodyPart $r5;
        com.fsck.k9.mailstore.LocalFolder$PartContainer $r6;
        com.fsck.k9.mail.Message r7;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        r1 := @parameter0: java.util.Stack;

        $r2 := @parameter1: com.fsck.k9.mail.Part;

        $l0 := @parameter2: long;

        $r3 = interfaceinvoke $r2.<com.fsck.k9.mail.Part: com.fsck.k9.mail.Body getBody()>();

        $z0 = $r3 instanceof com.fsck.k9.mail.Multipart;

        if $z0 == 0 goto label2;

        r4 = (com.fsck.k9.mail.Multipart) $r3;

        $i1 = virtualinvoke r4.<com.fsck.k9.mail.Multipart: int getCount()>();

        $i1 = $i1 + -1;

     label1:
        if $i1 < 0 goto label3;

        $r5 = virtualinvoke r4.<com.fsck.k9.mail.Multipart: com.fsck.k9.mail.BodyPart getBodyPart(int)>($i1);

        $r6 = new com.fsck.k9.mailstore.LocalFolder$PartContainer;

        specialinvoke $r6.<com.fsck.k9.mailstore.LocalFolder$PartContainer: void <init>(long,com.fsck.k9.mail.Part)>($l0, $r5);

        virtualinvoke r1.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r6);

        $i1 = $i1 + -1;

        goto label1;

     label2:
        $z0 = $r3 instanceof com.fsck.k9.mail.Message;

        if $z0 == 0 goto label3;

        r7 = (com.fsck.k9.mail.Message) $r3;

        $r6 = new com.fsck.k9.mailstore.LocalFolder$PartContainer;

        specialinvoke $r6.<com.fsck.k9.mailstore.LocalFolder$PartContainer: void <init>(long,com.fsck.k9.mail.Part)>($l0, r7);

        virtualinvoke r1.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r6);

     label3:
        return;
    }
    private java.util.Map appendMessages(java.util.List, boolean) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        java.util.List r1;
        boolean $z0;
        com.fsck.k9.mailstore.LockableDatabase$WrappedException r2;
        java.util.HashMap r3;
        com.fsck.k9.mailstore.LocalFolder$17 $r4;
        com.fsck.k9.mailstore.LocalStore $r5;
        com.fsck.k9.mailstore.LockableDatabase $r6;
        java.lang.Throwable $r7;
        com.fsck.k9.mail.MessagingException $r8;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        r1 := @parameter0: java.util.List;

        $z0 := @parameter1: boolean;

        virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(0);

        r3 = new java.util.HashMap;

     label1:
        specialinvoke r3.<java.util.HashMap: void <init>()>();

     label2:
        $r5 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

     label3:
        $r6 = virtualinvoke $r5.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LockableDatabase getDatabase()>();

     label4:
        $r4 = new com.fsck.k9.mailstore.LocalFolder$17;

     label5:
        specialinvoke $r4.<com.fsck.k9.mailstore.LocalFolder$17: void <init>(com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,java.util.Map)>(r0, r1, $z0, r3);

        virtualinvoke $r6.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(1, $r4);

     label6:
        $r5 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

     label7:
        virtualinvoke $r5.<com.fsck.k9.mailstore.LocalStore: void notifyChange()>();

     label8:
        return r3;

     label9:
        r2 := @caughtexception;

        $r7 = virtualinvoke r2.<com.fsck.k9.mailstore.LockableDatabase$WrappedException: java.lang.Throwable getCause()>();

        $r8 = (com.fsck.k9.mail.MessagingException) $r7;

        throw $r8;

        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label1 to label2 with label9;
        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label3 to label4 with label9;
        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label5 to label6 with label9;
        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label7 to label8 with label9;
    }
    private long decodeAndCountBytes(java.io.File, java.lang.String, long) throws com.fsck.k9.mail.MessagingException, java.io.IOException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        java.io.File $r1;
        java.lang.String $r2;
        long $l0;
        java.io.FileInputStream r3;
        java.lang.Throwable $r4;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        r3 = new java.io.FileInputStream;

        specialinvoke r3.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

     label1:
        $l0 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: long decodeAndCountBytes(java.io.InputStream,java.lang.String,long)>(r3, $r2, $l0);

     label2:
        virtualinvoke r3.<java.io.InputStream: void close()>();

        return $l0;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r3.<java.io.InputStream: void close()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    private long decodeAndCountBytes(java.io.InputStream, java.lang.String, long)
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        java.io.InputStream $r1;
        java.lang.String $r2;
        com.fsck.k9.mail.filter.CountingOutputStream r3;
        java.io.IOException r4, $r5, $r7, $r9;
        long l0, $l1;
        com.fsck.k9.mailstore.LocalStore $r6;
        java.lang.Throwable $r8;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $r6 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

        $r1 = virtualinvoke $r6.<com.fsck.k9.mailstore.LocalStore: java.io.InputStream getDecodingInputStream(java.io.InputStream,java.lang.String)>($r1, $r2);

     label01:
        r3 = new com.fsck.k9.mail.filter.CountingOutputStream;

        specialinvoke r3.<com.fsck.k9.mail.filter.CountingOutputStream: void <init>()>();

     label02:
        staticinvoke <org.apache.commons.io.IOUtils: int copy(java.io.InputStream,java.io.OutputStream)>($r1, r3);

        $l1 = virtualinvoke r3.<com.fsck.k9.mail.filter.CountingOutputStream: long getCount()>();

     label03:
        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label04:
        return $l1;

     label05:
        r4 := @caughtexception;

     label06:
        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label07:
        return l0;

     label08:
        $r7 := @caughtexception;

        return l0;

     label09:
        $r8 := @caughtexception;

     label10:
        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label11:
        throw $r8;

     label12:
        $r9 := @caughtexception;

        return $l1;

     label13:
        $r5 := @caughtexception;

        goto label11;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.io.IOException from label02 to label03 with label05;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.io.IOException from label03 to label04 with label12;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.io.IOException from label10 to label11 with label13;
    }
    private long decodeAndCountBytes(byte[], java.lang.String, long)
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        byte[] $r1;
        java.lang.String $r2;
        long $l0;
        java.io.ByteArrayInputStream r3;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        r3 = new java.io.ByteArrayInputStream;

        specialinvoke r3.<java.io.ByteArrayInputStream: void <init>(byte[])>($r1);

        $l0 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: long decodeAndCountBytes(java.io.InputStream,java.lang.String,long)>(r3, $r2, $l0);

        return $l0;
    }
    private void deleteMessageDataFromDisk(long) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        long $l0;
        com.fsck.k9.mailstore.LocalFolder$25 $r1;
        com.fsck.k9.mailstore.LockableDatabase $r2;
        com.fsck.k9.mailstore.LocalStore $r3;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $l0 := @parameter0: long;

        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

        $r2 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LockableDatabase getDatabase()>();

        $r1 = new com.fsck.k9.mailstore.LocalFolder$25;

        specialinvoke $r1.<com.fsck.k9.mailstore.LocalFolder$25: void <init>(com.fsck.k9.mailstore.LocalFolder,long)>(r0, $l0);

        virtualinvoke $r2.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(0, $r1);

        return;
    }
    private void deleteMessageParts(long) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        long $l0;
        com.fsck.k9.mailstore.LocalFolder$24 $r1;
        com.fsck.k9.mailstore.LockableDatabase $r2;
        com.fsck.k9.mailstore.LocalStore $r3;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $l0 := @parameter0: long;

        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

        $r2 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LockableDatabase getDatabase()>();

        $r1 = new com.fsck.k9.mailstore.LocalFolder$24;

        specialinvoke $r1.<com.fsck.k9.mailstore.LocalFolder$24: void <init>(com.fsck.k9.mailstore.LocalFolder,long)>(r0, $l0);

        virtualinvoke $r2.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(0, $r1);

        return;
    }
    private void deleteMessagePartsFromDisk(android.database.sqlite.SQLiteDatabase, long)
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        android.database.sqlite.SQLiteDatabase $r1;
        long $l0;
        java.lang.String[] $r2, $r3;
        java.lang.String $r4;
        android.database.Cursor $r5;
        boolean $z0;
        com.fsck.k9.mailstore.LocalStore $r6;
        java.io.File $r7;
        java.lang.Object[] $r8;
        java.lang.Throwable $r9;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $l0 := @parameter1: long;

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = "id";

        $r3 = newarray (java.lang.String)[1];

        $r4 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        $r3[0] = $r4;

        $r5 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("message_parts", $r2, "root = ? AND data_location = 2", $r3, null, null, null);

     label01:
        $z0 = interfaceinvoke $r5.<android.database.Cursor: boolean moveToNext()>();

     label02:
        if $z0 == 0 goto label12;

     label03:
        $r4 = interfaceinvoke $r5.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r6 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

        $r7 = virtualinvoke $r6.<com.fsck.k9.mailstore.LocalStore: java.io.File getAttachmentFile(java.lang.String)>($r4);

        $z0 = virtualinvoke $r7.<java.io.File: boolean exists()>();

     label04:
        if $z0 == 0 goto label01;

     label05:
        $z0 = virtualinvoke $r7.<java.io.File: boolean delete()>();

     label06:
        if $z0 != 0 goto label01;

     label07:
        $z0 = staticinvoke <com.fsck.k9.K9: boolean isDebug()>();

     label08:
        if $z0 == 0 goto label01;

     label09:
        $r8 = newarray (java.lang.Object)[1];

        $r4 = virtualinvoke $r7.<java.io.File: java.lang.String getAbsolutePath()>();

        $r8[0] = $r4;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Couldn\'t delete message part file: %s", $r8);

     label10:
        goto label01;

     label11:
        $r9 := @caughtexception;

        interfaceinvoke $r5.<android.database.Cursor: void close()>();

        throw $r9;

     label12:
        interfaceinvoke $r5.<android.database.Cursor: void close()>();

        return;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }
    private void deleteMessageRow(android.database.sqlite.SQLiteDatabase, long)
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        android.database.sqlite.SQLiteDatabase $r1;
        long $l0;
        java.lang.String[] r2;
        java.lang.String $r3;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $l0 := @parameter1: long;

        r2 = newarray (java.lang.String)[1];

        $r3 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        r2[0] = $r3;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("messages", "id = ?", r2);

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("threads", "message_id = ?", r2);

        return;
    }
    private void destroyMessage(long, long, java.lang.String) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        long $l0, $l1;
        java.lang.String $r1;
        com.fsck.k9.mailstore.LockableDatabase$WrappedException r2;
        com.fsck.k9.mailstore.LocalStore $r3;
        com.fsck.k9.mailstore.LockableDatabase $r4;
        com.fsck.k9.mailstore.LocalFolder$23 $r5;
        java.lang.Throwable $r6;
        com.fsck.k9.mail.MessagingException $r7;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $r1 := @parameter2: java.lang.String;

        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

     label1:
        $r4 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LockableDatabase getDatabase()>();

     label2:
        $r5 = new com.fsck.k9.mailstore.LocalFolder$23;

     label3:
        specialinvoke $r5.<com.fsck.k9.mailstore.LocalFolder$23: void <init>(com.fsck.k9.mailstore.LocalFolder,long,long,java.lang.String)>(r0, $l1, $l0, $r1);

        virtualinvoke $r4.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(1, $r5);

     label4:
        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

        virtualinvoke $r3.<com.fsck.k9.mailstore.LocalStore: void notifyChange()>();

        return;

     label5:
        r2 := @caughtexception;

        $r6 = virtualinvoke r2.<com.fsck.k9.mailstore.LockableDatabase$WrappedException: java.lang.Throwable getCause()>();

        $r7 = (com.fsck.k9.mail.MessagingException) $r6;

        throw $r7;

        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label1 to label2 with label5;
        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label3 to label4 with label5;
    }
    private com.fsck.k9.mailstore.ThreadInfo doMessageThreading(android.database.sqlite.SQLiteDatabase, com.fsck.k9.mail.Message) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        android.database.sqlite.SQLiteDatabase $r1;
        com.fsck.k9.mail.Message $r2;
        java.lang.String $r3, $r8;
        com.fsck.k9.mailstore.ThreadInfo $r4, r5;
        java.lang.String[] $r6;
        java.util.List r7;
        int $i0;
        boolean $z0;
        java.util.Iterator $r9;
        long l1, l2, $l3, l5;
        java.lang.Object $r10;
        android.content.ContentValues r11, $r15;
        java.lang.Long $r12;
        java.lang.Integer $r13;
        byte $b4;
        java.util.ArrayList $r14;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 := @parameter1: com.fsck.k9.mail.Message;

        $r3 = virtualinvoke $r2.<com.fsck.k9.mail.Message: java.lang.String getMessageId()>();

        $r4 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.ThreadInfo getThreadInfo(android.database.sqlite.SQLiteDatabase,java.lang.String,boolean)>($r1, $r3, 1);

        r5 = $r4;

        $r6 = virtualinvoke $r2.<com.fsck.k9.mail.Message: java.lang.String[] getHeader(java.lang.String)>("References");

        r7 = null;

        $i0 = lengthof $r6;

        if $i0 <= 0 goto label01;

        $r8 = $r6[0];

        r7 = staticinvoke <com.fsck.k9.helper.Utility: java.util.List extractMessageIds(java.lang.String)>($r8);

     label01:
        $r6 = virtualinvoke $r2.<com.fsck.k9.mail.Message: java.lang.String[] getHeader(java.lang.String)>("In-Reply-To");

        $i0 = lengthof $r6;

        if $i0 <= 0 goto label02;

        $r8 = $r6[0];

        $r8 = staticinvoke <com.fsck.k9.helper.Utility: java.lang.String extractMessageId(java.lang.String)>($r8);

        if $r8 == null goto label02;

        if r7 != null goto label04;

        $r14 = new java.util.ArrayList;

        r7 = $r14;

        specialinvoke $r14.<java.util.ArrayList: void <init>(int)>(1);

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r8);

     label02:
        if r7 != null goto label06;

        if $r4 == null goto label05;

     label03:
        return r5;

     label04:
        $z0 = interfaceinvoke r7.<java.util.List: boolean contains(java.lang.Object)>($r8);

        if $z0 != 0 goto label02;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label02;

     label05:
        r5 = new com.fsck.k9.mailstore.ThreadInfo;

        specialinvoke r5.<com.fsck.k9.mailstore.ThreadInfo: void <init>(long,long,java.lang.String,long,long)>(-1L, -1L, $r3, -1L, -1L);

        goto label03;

     label06:
        $r9 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>();

        l1 = -1L;

        l2 = -1L;

     label07:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label14;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.lang.String) $r10;

        r5 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.ThreadInfo getThreadInfo(android.database.sqlite.SQLiteDatabase,java.lang.String,boolean)>($r1, $r8, 0);

        if r5 != null goto label10;

        $r15 = new android.content.ContentValues;

        r11 = $r15;

        specialinvoke $r15.<android.content.ContentValues: void <init>()>();

        virtualinvoke $r15.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("message_id", $r8);

        $l3 = r0.<com.fsck.k9.mailstore.LocalFolder: long databaseId>;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        virtualinvoke $r15.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("folder_id", $r12);

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r15.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("empty", $r13);

        $l3 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("messages", null, $r15);

        virtualinvoke $r15.<android.content.ContentValues: void clear()>();

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        virtualinvoke $r15.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("message_id", $r12);

        $b4 = l2 cmp -1L;

        if $b4 == 0 goto label08;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        virtualinvoke $r15.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("root", $r12);

     label08:
        $b4 = l1 cmp -1L;

        if $b4 == 0 goto label09;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        virtualinvoke r11.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("parent", $r12);

     label09:
        $l3 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("threads", null, r11);

        l1 = $l3;

        $b4 = l2 cmp -1L;

        if $b4 != 0 goto label07;

        l2 = $l3;

        goto label07;

     label10:
        $b4 = l2 cmp -1L;

        if $b4 == 0 goto label12;

        $l3 = r5.<com.fsck.k9.mailstore.ThreadInfo: long rootId>;

        $b4 = $l3 cmp -1L;

        if $b4 != 0 goto label12;

        $l3 = r5.<com.fsck.k9.mailstore.ThreadInfo: long threadId>;

        $b4 = l2 cmp $l3;

        if $b4 == 0 goto label12;

        $r15 = new android.content.ContentValues;

        specialinvoke $r15.<android.content.ContentValues: void <init>()>();

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        virtualinvoke $r15.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("root", $r12);

        $r6 = newarray (java.lang.String)[1];

        $l3 = r5.<com.fsck.k9.mailstore.ThreadInfo: long threadId>;

        $r8 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l3);

        $r6[0] = $r8;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("threads", $r15, "root = ?", $r6);

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        virtualinvoke $r15.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("parent", $r12);

        $r6 = newarray (java.lang.String)[1];

        l1 = r5.<com.fsck.k9.mailstore.ThreadInfo: long threadId>;

        $r8 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l1);

        $r6[0] = $r8;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("threads", $r15, "id = ?", $r6);

     label11:
        l1 = r5.<com.fsck.k9.mailstore.ThreadInfo: long threadId>;

        goto label07;

     label12:
        l2 = r5.<com.fsck.k9.mailstore.ThreadInfo: long rootId>;

        $b4 = l2 cmp -1L;

        if $b4 != 0 goto label13;

        l2 = r5.<com.fsck.k9.mailstore.ThreadInfo: long threadId>;

        goto label11;

     label13:
        l2 = r5.<com.fsck.k9.mailstore.ThreadInfo: long rootId>;

        goto label11;

     label14:
        if $r4 == null goto label16;

        $l3 = $r4.<com.fsck.k9.mailstore.ThreadInfo: long threadId>;

        l5 = $r4.<com.fsck.k9.mailstore.ThreadInfo: long msgId>;

     label15:
        r5 = new com.fsck.k9.mailstore.ThreadInfo;

        specialinvoke r5.<com.fsck.k9.mailstore.ThreadInfo: void <init>(long,long,java.lang.String,long,long)>($l3, l5, $r3, l2, l1);

        return r5;

     label16:
        $l3 = -1L;

        l5 = -1L;

        goto label15;
    }
    private com.fsck.k9.Account getAccount()
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mailstore.LocalStore $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r2 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

        $r1 = virtualinvoke $r2.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.Account getAccount()>();

        return $r1;
    }
    private byte[] getBodyBytes(com.fsck.k9.mail.Body) throws java.io.IOException, com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mail.Body $r1;
        java.io.ByteArrayOutputStream r2;
        byte[] $r3;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: com.fsck.k9.mail.Body;

        r2 = new java.io.ByteArrayOutputStream;

        specialinvoke r2.<java.io.ByteArrayOutputStream: void <init>()>();

        interfaceinvoke $r1.<com.fsck.k9.mail.Body: void writeTo(java.io.OutputStream)>(r2);

        $r3 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r3;
    }
    private long getEmptyThreadParent(android.database.sqlite.SQLiteDatabase, long)
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        android.database.sqlite.SQLiteDatabase $r1;
        long $l0;
        java.lang.String[] $r2;
        java.lang.String $r3;
        android.database.Cursor $r4;
        boolean $z0;
        java.lang.Throwable $r5;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $l0 := @parameter1: long;

        $r2 = newarray (java.lang.String)[1];

        $r3 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        $r2[0] = $r3;

        $r4 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("SELECT m.id FROM threads t1 JOIN threads t2 ON (t1.parent = t2.id) LEFT JOIN messages m ON (t2.message_id = m.id) WHERE t1.message_id = ? AND m.empty = 1", $r2);

     label1:
        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToFirst()>();

     label2:
        if $z0 == 0 goto label7;

     label3:
        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean isNull(int)>(0);

     label4:
        if $z0 != 0 goto label7;

     label5:
        $l0 = interfaceinvoke $r4.<android.database.Cursor: long getLong(int)>(0);

     label6:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        return $l0;

     label7:
        $l0 = -1L;

        goto label6;

     label8:
        $r5 := @caughtexception;

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }
    private byte[] getHeaderBytes(com.fsck.k9.mail.Part) throws java.io.IOException, com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mail.Part $r1;
        java.io.ByteArrayOutputStream r2;
        byte[] $r3;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: com.fsck.k9.mail.Part;

        r2 = new java.io.ByteArrayOutputStream;

        specialinvoke r2.<java.io.ByteArrayOutputStream: void <init>()>();

        interfaceinvoke $r1.<com.fsck.k9.mail.Part: void writeHeaderTo(java.io.OutputStream)>(r2);

        $r3 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r3;
    }
    private java.lang.String getPrefId() throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        java.lang.String $r1;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(0);

        $r1 = r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String name>;

        $r1 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String getPrefId(java.lang.String)>($r1);

        return $r1;
    }
    private java.lang.String getPrefId(java.lang.String)
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        java.lang.String $r1, $r2;
        java.lang.StringBuilder $r3;
        com.fsck.k9.Account $r4;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String prefId>;

        if $r2 != null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.Account getAccount()>();

        $r2 = virtualinvoke $r4.<com.fsck.k9.Account: java.lang.String getUuid()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String prefId> = $r1;

     label1:
        $r1 = r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String prefId>;

        return $r1;
    }
    private com.fsck.k9.mailstore.ThreadInfo getThreadInfo(android.database.sqlite.SQLiteDatabase, java.lang.String, boolean)
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.String $r2, $r5, $r6;
        boolean $z0;
        java.lang.String[] r3;
        java.lang.StringBuilder $r4;
        long $l0, $l2, l3, l4;
        android.database.Cursor $r7;
        int $i1;
        com.fsck.k9.mailstore.ThreadInfo $r8;
        java.lang.Throwable $r9;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        if $r2 != null goto label01;

        return null;

     label01:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT t.id, t.message_id, t.root, t.parent FROM messages m LEFT JOIN threads t ON (t.message_id = m.id) WHERE m.folder_id = ? AND m.message_id = ? ");

        if $z0 == 0 goto label11;

        $r5 = "AND m.empty = 1 ";

     label02:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ORDER BY m.id LIMIT 1");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r3 = newarray (java.lang.String)[2];

        $l0 = r0.<com.fsck.k9.mailstore.LocalFolder: long databaseId>;

        $r6 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        r3[0] = $r6;

        r3[1] = $r2;

        $r7 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r5, r3);

        if $r7 == null goto label17;

     label03:
        $i1 = interfaceinvoke $r7.<android.database.Cursor: int getCount()>();

     label04:
        if $i1 <= 0 goto label16;

     label05:
        interfaceinvoke $r7.<android.database.Cursor: boolean moveToFirst()>();

        $l0 = interfaceinvoke $r7.<android.database.Cursor: long getLong(int)>(0);

        $l2 = interfaceinvoke $r7.<android.database.Cursor: long getLong(int)>(1);

        $z0 = interfaceinvoke $r7.<android.database.Cursor: boolean isNull(int)>(2);

     label06:
        if $z0 == 0 goto label12;

        l3 = -1L;

     label07:
        $z0 = interfaceinvoke $r7.<android.database.Cursor: boolean isNull(int)>(3);

     label08:
        if $z0 == 0 goto label14;

        l4 = -1L;

     label09:
        $r8 = new com.fsck.k9.mailstore.ThreadInfo;

        specialinvoke $r8.<com.fsck.k9.mailstore.ThreadInfo: void <init>(long,long,java.lang.String,long,long)>($l0, $l2, $r2, l3, l4);

     label10:
        interfaceinvoke $r7.<android.database.Cursor: void close()>();

        return $r8;

     label11:
        $r5 = "";

        goto label02;

     label12:
        l3 = interfaceinvoke $r7.<android.database.Cursor: long getLong(int)>(2);

     label13:
        goto label07;

     label14:
        l4 = interfaceinvoke $r7.<android.database.Cursor: long getLong(int)>(3);

     label15:
        goto label09;

     label16:
        interfaceinvoke $r7.<android.database.Cursor: void close()>();

     label17:
        return null;

     label18:
        $r9 := @caughtexception;

        interfaceinvoke $r7.<android.database.Cursor: void close()>();

        throw $r9;

        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
    }
    private java.lang.String getTransferEncoding(com.fsck.k9.mail.Part)
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mail.Part $r1;
        java.util.Locale $r2;
        java.lang.String[] $r3;
        int $i0;
        java.lang.String $r4;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: com.fsck.k9.mail.Part;

        $r3 = interfaceinvoke $r1.<com.fsck.k9.mail.Part: java.lang.String[] getHeader(java.lang.String)>("Content-Transfer-Encoding");

        $i0 = lengthof $r3;

        if $i0 <= 0 goto label1;

        $r4 = $r3[0];

        $r2 = <java.util.Locale: java.util.Locale US>;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        return $r4;

     label1:
        return "7bit";
    }
    private boolean hasThreadChildren(android.database.sqlite.SQLiteDatabase, long)
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        android.database.sqlite.SQLiteDatabase $r1;
        long $l0;
        boolean $z0, $z1;
        java.lang.String[] $r2;
        java.lang.String $r3;
        android.database.Cursor $r4;
        byte $b1;
        java.lang.Throwable $r5;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $l0 := @parameter1: long;

        $z0 = 1;

        $r2 = newarray (java.lang.String)[1];

        $r3 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        $r2[0] = $r3;

        $r4 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("SELECT COUNT(t2.id) FROM threads t1 JOIN threads t2 ON (t2.parent = t1.id) WHERE t1.message_id = ?", $r2);

     label1:
        $z1 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToFirst()>();

     label2:
        if $z1 == 0 goto label8;

     label3:
        $z1 = interfaceinvoke $r4.<android.database.Cursor: boolean isNull(int)>(0);

     label4:
        if $z1 != 0 goto label8;

     label5:
        $l0 = interfaceinvoke $r4.<android.database.Cursor: long getLong(int)>(0);

     label6:
        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label8;

     label7:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        return $z0;

     label8:
        $z0 = 0;

        goto label7;

     label9:
        $r5 := @caughtexception;

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
    }
    private java.io.File leafPartToContentValues(android.content.ContentValues, com.fsck.k9.mail.Part, com.fsck.k9.mail.Body) throws com.fsck.k9.mail.MessagingException, java.io.IOException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        android.content.ContentValues $r1;
        com.fsck.k9.mail.Part $r2;
        com.fsck.k9.mail.Body $r3;
        com.fsck.k9.message.extractors.AttachmentInfoExtractor $r4;
        com.fsck.k9.mailstore.AttachmentViewInfo $r5;
        java.lang.String $r6;
        boolean $z0;
        java.lang.IllegalStateException $r7;
        com.fsck.k9.mail.internet.SizeAware r8;
        long $l0;
        java.io.File r9, $r10;
        byte $b1;
        java.lang.Long $r11;
        java.lang.Integer $r12;
        byte[] $r13;
        int $i2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: android.content.ContentValues;

        $r2 := @parameter1: com.fsck.k9.mail.Part;

        $r3 := @parameter2: com.fsck.k9.mail.Body;

        $r4 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.message.extractors.AttachmentInfoExtractor attachmentInfoExtractor>;

        $r5 = virtualinvoke $r4.<com.fsck.k9.message.extractors.AttachmentInfoExtractor: com.fsck.k9.mailstore.AttachmentViewInfo extractAttachmentInfoForDatabase(com.fsck.k9.mail.Part)>($r2);

        $r6 = $r5.<com.fsck.k9.mailstore.AttachmentViewInfo: java.lang.String displayName>;

        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("display_name", $r6);

        $r6 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String getTransferEncoding(com.fsck.k9.mail.Part)>($r2);

        $z0 = $r3 instanceof com.fsck.k9.mail.internet.SizeAware;

        if $z0 != 0 goto label1;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Body needs to implement SizeAware");

        throw $r7;

     label1:
        r8 = (com.fsck.k9.mail.internet.SizeAware) $r3;

        $l0 = interfaceinvoke r8.<com.fsck.k9.mail.internet.SizeAware: long getSize()>();

        r9 = null;

        $b1 = $l0 cmp 16384L;

        if $b1 <= 0 goto label3;

        $b1 = 2;

        $r10 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: java.io.File writeBodyToDiskIfNecessary(com.fsck.k9.mail.Part)>($r2);

        r9 = $r10;

        $l0 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: long decodeAndCountBytes(java.io.File,java.lang.String,long)>($r10, $r6, $l0);

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("decoded_body_size", $r11);

     label2:
        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b1);

        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("data_location", $r12);

        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("encoding", $r6);

        $r6 = interfaceinvoke $r2.<com.fsck.k9.mail.Part: java.lang.String getContentId()>();

        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("content_id", $r6);

        return r9;

     label3:
        $b1 = 1;

        $r13 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: byte[] getBodyBytes(com.fsck.k9.mail.Body)>($r3);

        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,byte[])>("data", $r13);

        $i2 = lengthof $r13;

        $l0 = (long) $i2;

        $l0 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: long decodeAndCountBytes(byte[],java.lang.String,long)>($r13, $r6, $l0);

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("decoded_body_size", $r11);

        goto label2;
    }
    private void loadMessagePart(com.fsck.k9.mailstore.LocalMessage, java.util.Map, android.database.Cursor) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mailstore.LocalMessage $r1;
        java.util.Map r2;
        android.database.Cursor $r3;
        com.fsck.k9.mailstore.LocalBodyPart r4;
        com.fsck.k9.mailstore.LocalMimeMessage r5;
        com.fsck.k9.mail.internet.MimeMultipart r6;
        long $l0, $l1, $l2, $l4;
        java.lang.String $r7, $r9, $r15;
        byte[] $r8, $r12;
        int $i3;
        byte $b5;
        com.fsck.k9.mail.Part r10;
        java.lang.Long $r11;
        boolean $z0;
        java.lang.Object $r13;
        java.lang.IllegalStateException $r14;
        com.fsck.k9.mail.Body $r16;
        com.fsck.k9.mail.Multipart $r17;
        com.fsck.k9.mailstore.BinaryMemoryBody r18;
        com.fsck.k9.mailstore.LocalStore $r19;
        java.io.File $r20;
        com.fsck.k9.mailstore.FileBackedBody r21;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: com.fsck.k9.mailstore.LocalMessage;

        r2 := @parameter1: java.util.Map;

        $r3 := @parameter2: android.database.Cursor;

        $l0 = interfaceinvoke $r3.<android.database.Cursor: long getLong(int)>(0);

        $l1 = interfaceinvoke $r3.<android.database.Cursor: long getLong(int)>(2);

        $r7 = interfaceinvoke $r3.<android.database.Cursor: java.lang.String getString(int)>(3);

        $l2 = interfaceinvoke $r3.<android.database.Cursor: long getLong(int)>(4);

        $r8 = interfaceinvoke $r3.<android.database.Cursor: byte[] getBlob(int)>(6);

        $i3 = interfaceinvoke $r3.<android.database.Cursor: int getInt(int)>(9);

        $r9 = interfaceinvoke $r3.<android.database.Cursor: java.lang.String getString(int)>(15);

        $l4 = virtualinvoke $r1.<com.fsck.k9.mailstore.LocalMessage: long getMessagePartId()>();

        $b5 = $l0 cmp $l4;

        if $b5 != 0 goto label2;

        r10 = $r1;

     label1:
        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, r10);

        interfaceinvoke r10.<com.fsck.k9.mail.Part: void setServerExtra(java.lang.String)>($r9);

        $z0 = staticinvoke <com.fsck.k9.mail.internet.MimeUtility: boolean isMultipart(java.lang.String)>($r7);

        if $z0 == 0 goto label7;

        $r8 = interfaceinvoke $r3.<android.database.Cursor: byte[] getBlob(int)>(11);

        $r12 = interfaceinvoke $r3.<android.database.Cursor: byte[] getBlob(int)>(12);

        $r9 = interfaceinvoke $r3.<android.database.Cursor: java.lang.String getString(int)>(13);

        r6 = new com.fsck.k9.mail.internet.MimeMultipart;

        specialinvoke r6.<com.fsck.k9.mail.internet.MimeMultipart: void <init>(java.lang.String,java.lang.String)>($r7, $r9);

        interfaceinvoke r10.<com.fsck.k9.mail.Part: void setBody(com.fsck.k9.mail.Body)>(r6);

        virtualinvoke r6.<com.fsck.k9.mail.internet.MimeMultipart: void setPreamble(byte[])>($r8);

        virtualinvoke r6.<com.fsck.k9.mail.internet.MimeMultipart: void setEpilogue(byte[])>($r12);

        return;

     label2:
        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r13 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

        r10 = (com.fsck.k9.mail.Part) $r13;

        if r10 != null goto label3;

        $r14 = new java.lang.IllegalStateException;

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Parent part not found");

        throw $r14;

     label3:
        $r15 = interfaceinvoke r10.<com.fsck.k9.mail.Part: java.lang.String getMimeType()>();

        $z0 = staticinvoke <com.fsck.k9.mail.internet.MimeUtility: boolean isMultipart(java.lang.String)>($r15);

        if $z0 == 0 goto label5;

        r4 = new com.fsck.k9.mailstore.LocalBodyPart;

        $r15 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String getAccountUuid()>();

        specialinvoke r4.<com.fsck.k9.mailstore.LocalBodyPart: void <init>(java.lang.String,com.fsck.k9.mailstore.LocalMessage,long,long)>($r15, $r1, $l0, $l2);

        $r16 = interfaceinvoke r10.<com.fsck.k9.mail.Part: com.fsck.k9.mail.Body getBody()>();

        $r17 = (com.fsck.k9.mail.Multipart) $r16;

        virtualinvoke $r17.<com.fsck.k9.mail.Multipart: void addBodyPart(com.fsck.k9.mail.BodyPart)>(r4);

        r10 = r4;

     label4:
        specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void parseHeaderBytes(com.fsck.k9.mail.Part,byte[])>(r10, $r8);

        goto label1;

     label5:
        $z0 = staticinvoke <com.fsck.k9.mail.internet.MimeUtility: boolean isMessage(java.lang.String)>($r15);

        if $z0 == 0 goto label6;

        r5 = new com.fsck.k9.mailstore.LocalMimeMessage;

        $r15 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String getAccountUuid()>();

        specialinvoke r5.<com.fsck.k9.mailstore.LocalMimeMessage: void <init>(java.lang.String,com.fsck.k9.mailstore.LocalMessage,long)>($r15, $r1, $l0);

        interfaceinvoke r10.<com.fsck.k9.mail.Part: void setBody(com.fsck.k9.mail.Body)>(r5);

        r10 = r5;

        goto label4;

     label6:
        $r14 = new java.lang.IllegalStateException;

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Parent is neither a multipart nor a message");

        throw $r14;

     label7:
        if $i3 != 1 goto label8;

        $r7 = interfaceinvoke $r3.<android.database.Cursor: java.lang.String getString(int)>(7);

        $r8 = interfaceinvoke $r3.<android.database.Cursor: byte[] getBlob(int)>(10);

        r18 = new com.fsck.k9.mailstore.BinaryMemoryBody;

        specialinvoke r18.<com.fsck.k9.mailstore.BinaryMemoryBody: void <init>(byte[],java.lang.String)>($r8, $r7);

        interfaceinvoke r10.<com.fsck.k9.mail.Part: void setBody(com.fsck.k9.mail.Body)>(r18);

        return;

     label8:
        if $i3 != 2 goto label9;

        $r7 = interfaceinvoke $r3.<android.database.Cursor: java.lang.String getString(int)>(7);

        $r19 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

        $r9 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        $r20 = virtualinvoke $r19.<com.fsck.k9.mailstore.LocalStore: java.io.File getAttachmentFile(java.lang.String)>($r9);

        $z0 = virtualinvoke $r20.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label9;

        r21 = new com.fsck.k9.mailstore.FileBackedBody;

        specialinvoke r21.<com.fsck.k9.mailstore.FileBackedBody: void <init>(java.io.File,java.lang.String)>($r20, $r7);

        interfaceinvoke r10.<com.fsck.k9.mail.Part: void setBody(com.fsck.k9.mail.Body)>(r21);

     label9:
        return;
    }
    private void loadMessageParts(android.database.sqlite.SQLiteDatabase, com.fsck.k9.mailstore.LocalMessage) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        android.database.sqlite.SQLiteDatabase $r1;
        com.fsck.k9.mailstore.LocalMessage $r2;
        java.lang.String[] r3, $r5;
        java.util.HashMap r4;
        long $l0;
        java.lang.String $r6;
        android.database.Cursor $r7;
        boolean $z0;
        java.lang.Throwable $r8;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 := @parameter1: com.fsck.k9.mailstore.LocalMessage;

        r4 = new java.util.HashMap;

        specialinvoke r4.<java.util.HashMap: void <init>()>();

        r3 = newarray (java.lang.String)[16];

        r3[0] = "id";

        r3[1] = "type";

        r3[2] = "parent";

        r3[3] = "mime_type";

        r3[4] = "decoded_body_size";

        r3[5] = "display_name";

        r3[6] = "header";

        r3[7] = "encoding";

        r3[8] = "charset";

        r3[9] = "data_location";

        r3[10] = "data";

        r3[11] = "preamble";

        r3[12] = "epilogue";

        r3[13] = "boundary";

        r3[14] = "content_id";

        r3[15] = "server_extra";

        $r5 = newarray (java.lang.String)[1];

        $l0 = virtualinvoke $r2.<com.fsck.k9.mailstore.LocalMessage: long getMessagePartId()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        $r5[0] = $r6;

        $r7 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("message_parts", r3, "root = ?", $r5, null, null, "seq");

     label1:
        $z0 = interfaceinvoke $r7.<android.database.Cursor: boolean moveToNext()>();

     label2:
        if $z0 == 0 goto label6;

     label3:
        specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void loadMessagePart(com.fsck.k9.mailstore.LocalMessage,java.util.Map,android.database.Cursor)>($r2, r4, $r7);

     label4:
        goto label1;

     label5:
        $r8 := @caughtexception;

        interfaceinvoke $r7.<android.database.Cursor: void close()>();

        throw $r8;

     label6:
        interfaceinvoke $r7.<android.database.Cursor: void close()>();

        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
    private void messageMarkerToContentValues(android.content.ContentValues) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        android.content.ContentValues $r1;
        java.lang.Integer $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: android.content.ContentValues;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("data_location", $r2);

        return;
    }
    private void missingPartToContentValues(android.content.ContentValues, com.fsck.k9.mail.Part) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        android.content.ContentValues $r1;
        com.fsck.k9.mail.Part $r2;
        com.fsck.k9.message.extractors.AttachmentInfoExtractor $r3;
        com.fsck.k9.mailstore.AttachmentViewInfo $r4;
        java.lang.String $r5;
        java.lang.Integer $r6;
        long $l0;
        java.lang.Long $r7;
        boolean $z0;
        com.fsck.k9.mail.BoundaryGenerator $r8;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: android.content.ContentValues;

        $r2 := @parameter1: com.fsck.k9.mail.Part;

        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.message.extractors.AttachmentInfoExtractor attachmentInfoExtractor>;

        $r4 = virtualinvoke $r3.<com.fsck.k9.message.extractors.AttachmentInfoExtractor: com.fsck.k9.mailstore.AttachmentViewInfo extractAttachmentInfoForDatabase(com.fsck.k9.mail.Part)>($r2);

        $r5 = $r4.<com.fsck.k9.mailstore.AttachmentViewInfo: java.lang.String displayName>;

        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("display_name", $r5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("data_location", $r6);

        $l0 = $r4.<com.fsck.k9.mailstore.AttachmentViewInfo: long size>;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("decoded_body_size", $r7);

        $r5 = interfaceinvoke $r2.<com.fsck.k9.mail.Part: java.lang.String getMimeType()>();

        $z0 = staticinvoke <com.fsck.k9.mail.internet.MimeUtility: boolean isMultipart(java.lang.String)>($r5);

        if $z0 == 0 goto label1;

        $r8 = staticinvoke <com.fsck.k9.mail.BoundaryGenerator: com.fsck.k9.mail.BoundaryGenerator getInstance()>();

        $r5 = virtualinvoke $r8.<com.fsck.k9.mail.BoundaryGenerator: java.lang.String generateBoundary()>();

        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("boundary", $r5);

     label1:
        return;
    }
    private void moveTemporaryFile(java.io.File, java.lang.String) throws java.io.IOException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        java.io.File $r1, $r4;
        java.lang.String $r2;
        com.fsck.k9.mailstore.LocalStore $r3;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

        $r4 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalStore: java.io.File getAttachmentFile(java.lang.String)>($r2);

        staticinvoke <com.fsck.k9.helper.FileHelper: void renameOrMoveByCopying(java.io.File,java.io.File)>($r1, $r4);

        return;
    }
    private void multipartToContentValues(android.content.ContentValues, com.fsck.k9.mail.Multipart)
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        android.content.ContentValues $r1;
        com.fsck.k9.mail.Multipart $r2;
        java.lang.Integer $r3;
        byte[] $r4;
        java.lang.String $r5;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: android.content.ContentValues;

        $r2 := @parameter1: com.fsck.k9.mail.Multipart;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("data_location", $r3);

        $r4 = virtualinvoke $r2.<com.fsck.k9.mail.Multipart: byte[] getPreamble()>();

        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,byte[])>("preamble", $r4);

        $r4 = virtualinvoke $r2.<com.fsck.k9.mail.Multipart: byte[] getEpilogue()>();

        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,byte[])>("epilogue", $r4);

        $r5 = virtualinvoke $r2.<com.fsck.k9.mail.Multipart: java.lang.String getBoundary()>();

        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("boundary", $r5);

        return;
    }
    private void parseHeaderBytes(com.fsck.k9.mail.Part, byte[]) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mail.Part $r1;
        byte[] $r2;
        java.io.ByteArrayInputStream $r3;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: com.fsck.k9.mail.Part;

        $r2 := @parameter1: byte[];

        $r3 = new java.io.ByteArrayInputStream;

        specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2);

        staticinvoke <com.fsck.k9.mail.message.MessageHeaderParser: void parse(com.fsck.k9.mail.Part,java.io.InputStream)>($r1, $r3);

        return;
    }
    private void saveMessage(android.database.sqlite.SQLiteDatabase, com.fsck.k9.mail.Message, boolean, java.util.Map) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        android.database.sqlite.SQLiteDatabase $r1;
        com.fsck.k9.mail.Message $r2;
        boolean $z0, $z1;
        java.util.Map r3;
        android.content.ContentValues r4;
        java.lang.Exception r5;
        java.lang.Error $r6;
        long l0, l1, l2, $l5;
        java.lang.String $r7, r8;
        java.lang.StringBuilder $r9;
        java.util.UUID $r10;
        byte $b3;
        com.fsck.k9.mailstore.ThreadInfo $r11;
        com.fsck.k9.mailstore.LocalStore $r12;
        com.fsck.k9.message.extractors.MessagePreviewCreator $r13;
        com.fsck.k9.message.extractors.PreviewResult $r14;
        com.fsck.k9.message.extractors.PreviewResult$PreviewType $r15;
        com.fsck.k9.mailstore.DatabasePreviewType $r16;
        com.fsck.k9.message.extractors.MessageFulltextCreator $r17;
        com.fsck.k9.message.extractors.AttachmentCounter $r18;
        int $i4;
        java.lang.Long $r19;
        com.fsck.k9.mail.Address[] $r20;
        java.util.Date $r21;
        java.util.Set $r22;
        com.fsck.k9.mail.Flag $r23;
        java.lang.Integer $r24;
        com.fsck.k9.mail.Message$RecipientType $r25;
        com.fsck.k9.mailstore.LocalMessage $r26;
        com.fsck.k9.mail.MessagingException $r27;
        java.lang.String[] $r28;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 := @parameter1: com.fsck.k9.mail.Message;

        $z0 := @parameter2: boolean;

        r3 := @parameter3: java.util.Map;

        $z1 = $r2 instanceof com.fsck.k9.mail.internet.MimeMessage;

        if $z1 != 0 goto label01;

        $r6 = new java.lang.Error;

        specialinvoke $r6.<java.lang.Error: void <init>(java.lang.String)>("LocalStore can only store Messages that extend MimeMessage");

        throw $r6;

     label01:
        l0 = -1L;

        $r7 = virtualinvoke $r2.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

        r8 = $r7;

        if $r7 == null goto label02;

        if $z0 == 0 goto label57;

     label02:
        $z1 = 1;

     label03:
        if $z1 == 0 goto label59;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("K9LOCAL:");

        $r10 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        r8 = virtualinvoke $r10.<java.util.UUID: java.lang.String toString()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        if $z0 == 0 goto label58;

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, r8);

     label04:
        l1 = -1L;

        l2 = -1L;

        $b3 = l0 cmp -1L;

        if $b3 != 0 goto label05;

        $r11 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.ThreadInfo doMessageThreading(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message)>($r1, $r2);

        l0 = $r11.<com.fsck.k9.mailstore.ThreadInfo: long msgId>;

        l1 = $r11.<com.fsck.k9.mailstore.ThreadInfo: long rootId>;

        l2 = $r11.<com.fsck.k9.mailstore.ThreadInfo: long parentId>;

     label05:
        $r12 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

        $r13 = virtualinvoke $r12.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.message.extractors.MessagePreviewCreator getMessagePreviewCreator()>();

        $r14 = virtualinvoke $r13.<com.fsck.k9.message.extractors.MessagePreviewCreator: com.fsck.k9.message.extractors.PreviewResult createPreview(com.fsck.k9.mail.Message)>($r2);

        $r15 = virtualinvoke $r14.<com.fsck.k9.message.extractors.PreviewResult: com.fsck.k9.message.extractors.PreviewResult$PreviewType getPreviewType()>();

        $r16 = staticinvoke <com.fsck.k9.mailstore.DatabasePreviewType: com.fsck.k9.mailstore.DatabasePreviewType fromPreviewType(com.fsck.k9.message.extractors.PreviewResult$PreviewType)>($r15);

        $r12 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

        $r17 = virtualinvoke $r12.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.message.extractors.MessageFulltextCreator getMessageFulltextCreator()>();

        $r7 = virtualinvoke $r17.<com.fsck.k9.message.extractors.MessageFulltextCreator: java.lang.String createFulltext(com.fsck.k9.mail.Message)>($r2);

        $r12 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

        $r18 = virtualinvoke $r12.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.message.extractors.AttachmentCounter getAttachmentCounter()>();

        $i4 = virtualinvoke $r18.<com.fsck.k9.message.extractors.AttachmentCounter: int getAttachmentCount(com.fsck.k9.mail.Message)>($r2);

        $l5 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: long saveMessageParts(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message)>($r1, $r2);

     label06:
        r4 = new android.content.ContentValues;

     label07:
        specialinvoke r4.<android.content.ContentValues: void <init>()>();

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("message_part_id", $r19);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("uid", r8);

        r8 = virtualinvoke $r2.<com.fsck.k9.mail.Message: java.lang.String getSubject()>();

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("subject", r8);

        $r20 = virtualinvoke $r2.<com.fsck.k9.mail.Message: com.fsck.k9.mail.Address[] getFrom()>();

        r8 = staticinvoke <com.fsck.k9.mail.Address: java.lang.String pack(com.fsck.k9.mail.Address[])>($r20);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("sender_list", r8);

        $r21 = virtualinvoke $r2.<com.fsck.k9.mail.Message: java.util.Date getSentDate()>();

     label08:
        if $r21 != null goto label60;

     label09:
        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label10:
        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("date", $r19);

        $r22 = virtualinvoke $r2.<com.fsck.k9.mail.Message: java.util.Set getFlags()>();

        r8 = staticinvoke <com.fsck.k9.mailstore.LocalStore: java.lang.String serializeFlags(java.lang.Iterable)>($r22);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("flags", r8);

     label11:
        $r23 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag DELETED>;

     label12:
        $z0 = virtualinvoke $r2.<com.fsck.k9.mail.Message: boolean isSet(com.fsck.k9.mail.Flag)>($r23);

     label13:
        if $z0 == 0 goto label62;

        $b3 = 1;

     label14:
        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b3);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("deleted", $r24);

     label15:
        $r23 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag SEEN>;

     label16:
        $z0 = virtualinvoke $r2.<com.fsck.k9.mail.Message: boolean isSet(com.fsck.k9.mail.Flag)>($r23);

     label17:
        if $z0 == 0 goto label63;

        $b3 = 1;

     label18:
        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b3);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("read", $r24);

     label19:
        $r23 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag FLAGGED>;

     label20:
        $z0 = virtualinvoke $r2.<com.fsck.k9.mail.Message: boolean isSet(com.fsck.k9.mail.Flag)>($r23);

     label21:
        if $z0 == 0 goto label64;

        $b3 = 1;

     label22:
        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b3);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("flagged", $r24);

     label23:
        $r23 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag ANSWERED>;

     label24:
        $z0 = virtualinvoke $r2.<com.fsck.k9.mail.Message: boolean isSet(com.fsck.k9.mail.Flag)>($r23);

     label25:
        if $z0 == 0 goto label65;

        $b3 = 1;

     label26:
        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b3);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("answered", $r24);

     label27:
        $r23 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag FORWARDED>;

     label28:
        $z0 = virtualinvoke $r2.<com.fsck.k9.mail.Message: boolean isSet(com.fsck.k9.mail.Flag)>($r23);

     label29:
        if $z0 == 0 goto label66;

        $b3 = 1;

     label30:
        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b3);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("forwarded", $r24);

        $l5 = r0.<com.fsck.k9.mailstore.LocalFolder: long databaseId>;

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("folder_id", $r19);

     label31:
        $r25 = <com.fsck.k9.mail.Message$RecipientType: com.fsck.k9.mail.Message$RecipientType TO>;

     label32:
        $r20 = virtualinvoke $r2.<com.fsck.k9.mail.Message: com.fsck.k9.mail.Address[] getRecipients(com.fsck.k9.mail.Message$RecipientType)>($r25);

        r8 = staticinvoke <com.fsck.k9.mail.Address: java.lang.String pack(com.fsck.k9.mail.Address[])>($r20);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("to_list", r8);

     label33:
        $r25 = <com.fsck.k9.mail.Message$RecipientType: com.fsck.k9.mail.Message$RecipientType CC>;

     label34:
        $r20 = virtualinvoke $r2.<com.fsck.k9.mail.Message: com.fsck.k9.mail.Address[] getRecipients(com.fsck.k9.mail.Message$RecipientType)>($r25);

        r8 = staticinvoke <com.fsck.k9.mail.Address: java.lang.String pack(com.fsck.k9.mail.Address[])>($r20);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("cc_list", r8);

     label35:
        $r25 = <com.fsck.k9.mail.Message$RecipientType: com.fsck.k9.mail.Message$RecipientType BCC>;

     label36:
        $r20 = virtualinvoke $r2.<com.fsck.k9.mail.Message: com.fsck.k9.mail.Address[] getRecipients(com.fsck.k9.mail.Message$RecipientType)>($r25);

        r8 = staticinvoke <com.fsck.k9.mail.Address: java.lang.String pack(com.fsck.k9.mail.Address[])>($r20);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("bcc_list", r8);

        $r20 = virtualinvoke $r2.<com.fsck.k9.mail.Message: com.fsck.k9.mail.Address[] getReplyTo()>();

        r8 = staticinvoke <com.fsck.k9.mail.Address: java.lang.String pack(com.fsck.k9.mail.Address[])>($r20);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("reply_to_list", r8);

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("attachment_count", $r24);

        $r21 = virtualinvoke $r2.<com.fsck.k9.mail.Message: java.util.Date getInternalDate()>();

     label37:
        if $r21 != null goto label67;

     label38:
        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label39:
        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("internal_date", $r19);

        r8 = virtualinvoke $r2.<com.fsck.k9.mail.Message: java.lang.String getMimeType()>();

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("mime_type", r8);

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("empty", $r24);

        r8 = virtualinvoke $r16.<com.fsck.k9.mailstore.DatabasePreviewType: java.lang.String getDatabaseValue()>();

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("preview_type", r8);

        $z0 = virtualinvoke $r14.<com.fsck.k9.message.extractors.PreviewResult: boolean isPreviewTextAvailable()>();

     label40:
        if $z0 == 0 goto label69;

     label41:
        r8 = virtualinvoke $r14.<com.fsck.k9.message.extractors.PreviewResult: java.lang.String getPreviewText()>();

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("preview", r8);

     label42:
        r8 = virtualinvoke $r2.<com.fsck.k9.mail.Message: java.lang.String getMessageId()>();

     label43:
        if r8 == null goto label45;

     label44:
        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("message_id", r8);

     label45:
        $b3 = l0 cmp -1L;

        if $b3 != 0 goto label72;

     label46:
        l0 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("messages", "uid", r4);

     label47:
        $l5 = l0;

     label48:
        virtualinvoke r4.<android.content.ContentValues: void clear()>();

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("message_id", $r19);

     label49:
        $b3 = l1 cmp -1L;

        if $b3 == 0 goto label51;

     label50:
        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("root", $r19);

     label51:
        $b3 = l2 cmp -1L;

        if $b3 == 0 goto label53;

     label52:
        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("parent", $r19);

     label53:
        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("threads", null, r4);

     label54:
        if $r7 == null goto label75;

     label55:
        virtualinvoke r4.<android.content.ContentValues: void clear()>();

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("docid", $r19);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("fulltext", $r7);

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: long replace(java.lang.String,java.lang.String,android.content.ContentValues)>("messages_fulltext", null, r4);

     label56:
        return;

     label57:
        $z1 = 0;

        goto label03;

     label58:
        virtualinvoke $r2.<com.fsck.k9.mail.Message: void setUid(java.lang.String)>(r8);

        goto label04;

     label59:
        $r26 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalMessage getMessage(java.lang.String)>($r7);

        if $r26 == null goto label04;

        l0 = virtualinvoke $r26.<com.fsck.k9.mailstore.LocalMessage: long getDatabaseId()>();

        l1 = virtualinvoke $r26.<com.fsck.k9.mailstore.LocalMessage: long getMessagePartId()>();

        virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void deleteMessagePartsAndDataFromDisk(long)>(l1);

        goto label04;

     label60:
        $r21 = virtualinvoke $r2.<com.fsck.k9.mail.Message: java.util.Date getSentDate()>();

        $l5 = virtualinvoke $r21.<java.util.Date: long getTime()>();

     label61:
        goto label10;

     label62:
        $b3 = 0;

        goto label14;

     label63:
        $b3 = 0;

        goto label18;

     label64:
        $b3 = 0;

        goto label22;

     label65:
        $b3 = 0;

        goto label26;

     label66:
        $b3 = 0;

        goto label30;

     label67:
        $r21 = virtualinvoke $r2.<com.fsck.k9.mail.Message: java.util.Date getInternalDate()>();

        $l5 = virtualinvoke $r21.<java.util.Date: long getTime()>();

     label68:
        goto label39;

     label69:
        virtualinvoke r4.<android.content.ContentValues: void putNull(java.lang.String)>("preview");

     label70:
        goto label42;

     label71:
        r5 := @caughtexception;

        $r27 = new com.fsck.k9.mail.MessagingException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error appending message: ");

        $r7 = virtualinvoke $r2.<com.fsck.k9.mail.Message: java.lang.String getSubject()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String,java.lang.Throwable)>($r7, r5);

        throw $r27;

     label72:
        $l5 = l0;

     label73:
        $r28 = newarray (java.lang.String)[1];

        r8 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r28[0] = r8;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("messages", r4, "id = ?", $r28);

     label74:
        goto label54;

     label75:
        return;

        catch java.lang.Exception from label05 to label06 with label71;
        catch java.lang.Exception from label07 to label08 with label71;
        catch java.lang.Exception from label09 to label10 with label71;
        catch java.lang.Exception from label10 to label11 with label71;
        catch java.lang.Exception from label12 to label13 with label71;
        catch java.lang.Exception from label14 to label15 with label71;
        catch java.lang.Exception from label16 to label17 with label71;
        catch java.lang.Exception from label18 to label19 with label71;
        catch java.lang.Exception from label20 to label21 with label71;
        catch java.lang.Exception from label22 to label23 with label71;
        catch java.lang.Exception from label24 to label25 with label71;
        catch java.lang.Exception from label26 to label27 with label71;
        catch java.lang.Exception from label28 to label29 with label71;
        catch java.lang.Exception from label30 to label31 with label71;
        catch java.lang.Exception from label32 to label33 with label71;
        catch java.lang.Exception from label34 to label35 with label71;
        catch java.lang.Exception from label36 to label37 with label71;
        catch java.lang.Exception from label38 to label39 with label71;
        catch java.lang.Exception from label39 to label40 with label71;
        catch java.lang.Exception from label41 to label43 with label71;
        catch java.lang.Exception from label44 to label45 with label71;
        catch java.lang.Exception from label46 to label47 with label71;
        catch java.lang.Exception from label48 to label49 with label71;
        catch java.lang.Exception from label50 to label51 with label71;
        catch java.lang.Exception from label52 to label54 with label71;
        catch java.lang.Exception from label55 to label56 with label71;
        catch java.lang.Exception from label60 to label61 with label71;
        catch java.lang.Exception from label67 to label68 with label71;
        catch java.lang.Exception from label69 to label70 with label71;
        catch java.lang.Exception from label73 to label74 with label71;
    }
    private long saveMessagePart(android.database.sqlite.SQLiteDatabase, com.fsck.k9.mailstore.LocalFolder$PartContainer, long, int) throws java.io.IOException, com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        android.database.sqlite.SQLiteDatabase $r1;
        com.fsck.k9.mailstore.LocalFolder$PartContainer $r2;
        long $l0;
        int $i1;
        android.content.ContentValues r3;
        com.fsck.k9.mail.Part r4;
        byte $b2;
        java.lang.Long $r5;
        java.lang.Integer $r6;
        java.lang.String $r7;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 := @parameter1: com.fsck.k9.mailstore.LocalFolder$PartContainer;

        $l0 := @parameter2: long;

        $i1 := @parameter3: int;

        r4 = $r2.<com.fsck.k9.mailstore.LocalFolder$PartContainer: com.fsck.k9.mail.Part part>;

        r3 = new android.content.ContentValues;

        specialinvoke r3.<android.content.ContentValues: void <init>()>();

        $b2 = $l0 cmp -1L;

        if $b2 == 0 goto label1;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("root", $r5);

     label1:
        $l0 = $r2.<com.fsck.k9.mailstore.LocalFolder$PartContainer: long parent>;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("parent", $r5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("seq", $r6);

        $r7 = interfaceinvoke r4.<com.fsck.k9.mail.Part: java.lang.String getServerExtra()>();

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("server_extra", $r7);

        $l0 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: long updateOrInsertMessagePart(android.database.sqlite.SQLiteDatabase,android.content.ContentValues,com.fsck.k9.mail.Part,long)>($r1, r3, r4, -1L);

        return $l0;
    }
    private long saveMessageParts(android.database.sqlite.SQLiteDatabase, com.fsck.k9.mail.Message) throws java.io.IOException, com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        android.database.sqlite.SQLiteDatabase $r1;
        com.fsck.k9.mail.Message $r2;
        java.util.Stack r3;
        com.fsck.k9.mailstore.LocalFolder$PartContainer r4;
        long $l0, $l2;
        int i1;
        boolean $z0;
        java.lang.Object $r5;
        com.fsck.k9.mail.Part $r6;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 := @parameter1: com.fsck.k9.mail.Message;

        r4 = new com.fsck.k9.mailstore.LocalFolder$PartContainer;

        specialinvoke r4.<com.fsck.k9.mailstore.LocalFolder$PartContainer: void <init>(long,com.fsck.k9.mail.Part)>(-1L, $r2);

        $l0 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: long saveMessagePart(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.LocalFolder$PartContainer,long,int)>($r1, r4, -1L, 0);

        r3 = new java.util.Stack;

        specialinvoke r3.<java.util.Stack: void <init>()>();

        specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void addChildrenToStack(java.util.Stack,com.fsck.k9.mail.Part,long)>(r3, $r2, $l0);

        i1 = 1;

     label1:
        $z0 = virtualinvoke r3.<java.util.Stack: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r5 = virtualinvoke r3.<java.util.Stack: java.lang.Object pop()>();

        r4 = (com.fsck.k9.mailstore.LocalFolder$PartContainer) $r5;

        $l2 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: long saveMessagePart(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.LocalFolder$PartContainer,long,int)>($r1, r4, $l0, i1);

        i1 = i1 + 1;

        $r6 = r4.<com.fsck.k9.mailstore.LocalFolder$PartContainer: com.fsck.k9.mail.Part part>;

        specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void addChildrenToStack(java.util.Stack,com.fsck.k9.mail.Part,long)>(r3, $r6, $l2);

        goto label1;

     label2:
        return $l0;
    }
    private void updateFolderColumn(java.lang.String, java.lang.Object) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        com.fsck.k9.mailstore.LockableDatabase$WrappedException r3;
        com.fsck.k9.mailstore.LocalFolder$7 $r4;
        com.fsck.k9.mailstore.LocalStore $r5;
        com.fsck.k9.mailstore.LockableDatabase $r6;
        java.lang.Throwable $r7;
        com.fsck.k9.mail.MessagingException $r8;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r5 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

     label1:
        $r6 = virtualinvoke $r5.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LockableDatabase getDatabase()>();

     label2:
        $r4 = new com.fsck.k9.mailstore.LocalFolder$7;

     label3:
        specialinvoke $r4.<com.fsck.k9.mailstore.LocalFolder$7: void <init>(com.fsck.k9.mailstore.LocalFolder,java.lang.String,java.lang.Object)>(r0, $r1, $r2);

        virtualinvoke $r6.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(0, $r4);

     label4:
        return;

     label5:
        r3 := @caughtexception;

        $r7 = virtualinvoke r3.<com.fsck.k9.mailstore.LockableDatabase$WrappedException: java.lang.Throwable getCause()>();

        $r8 = (com.fsck.k9.mail.MessagingException) $r7;

        throw $r8;

        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label1 to label2 with label5;
        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label3 to label4 with label5;
    }
    private void updateMoreMessagesOnVisibleLimitChange(int, int) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        int $i0, $i1;
        com.fsck.k9.mailstore.LocalFolder$MoreMessages $r1, $r2;
        boolean z0, z1, z2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 <= $i1 goto label5;

        z0 = 1;

     label1:
        if $i0 >= $i1 goto label6;

        z1 = 1;

     label2:
        $r2 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalFolder$MoreMessages getMoreMessages()>();

        $r1 = <com.fsck.k9.mailstore.LocalFolder$MoreMessages: com.fsck.k9.mailstore.LocalFolder$MoreMessages TRUE>;

        if $r2 != $r1 goto label7;

        z2 = 1;

     label3:
        if z0 != 0 goto label4;

        if z1 == 0 goto label8;

        if z2 != 0 goto label8;

     label4:
        $r1 = <com.fsck.k9.mailstore.LocalFolder$MoreMessages: com.fsck.k9.mailstore.LocalFolder$MoreMessages UNKNOWN>;

        virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void setMoreMessages(com.fsck.k9.mailstore.LocalFolder$MoreMessages)>($r1);

        return;

     label5:
        z0 = 0;

        goto label1;

     label6:
        z1 = 0;

        goto label2;

     label7:
        z2 = 0;

        goto label3;

     label8:
        return;
    }
    private long updateOrInsertMessagePart(android.database.sqlite.SQLiteDatabase, android.content.ContentValues, com.fsck.k9.mail.Part, long) throws java.io.IOException, com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        android.database.sqlite.SQLiteDatabase $r1;
        android.content.ContentValues $r2;
        com.fsck.k9.mail.Part $r3;
        long $l0, l2;
        byte[] $r4;
        java.lang.String $r5;
        java.lang.Integer $r6;
        java.io.File r7;
        com.fsck.k9.mail.Body $r8;
        boolean $z0;
        com.fsck.k9.mail.Multipart r9;
        byte $b1;
        java.lang.String[] $r10;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 := @parameter1: android.content.ContentValues;

        $r3 := @parameter2: com.fsck.k9.mail.Part;

        $l0 := @parameter3: long;

        $r4 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: byte[] getHeaderBytes(com.fsck.k9.mail.Part)>($r3);

        $r5 = interfaceinvoke $r3.<com.fsck.k9.mail.Part: java.lang.String getMimeType()>();

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("mime_type", $r5);

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,byte[])>("header", $r4);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("type", $r6);

        r7 = null;

        $r8 = interfaceinvoke $r3.<com.fsck.k9.mail.Part: com.fsck.k9.mail.Body getBody()>();

        $z0 = $r8 instanceof com.fsck.k9.mail.Multipart;

        if $z0 == 0 goto label3;

        r9 = (com.fsck.k9.mail.Multipart) $r8;

        specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void multipartToContentValues(android.content.ContentValues,com.fsck.k9.mail.Multipart)>($r2, r9);

     label1:
        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label6;

        l2 = $l0;

        $r10 = newarray (java.lang.String)[1];

        $r5 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        $r10[0] = $r5;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("message_parts", $r2, "id = ?", $r10);

     label2:
        if r7 == null goto label7;

        $r5 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l2);

        specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void moveTemporaryFile(java.io.File,java.lang.String)>(r7, $r5);

        return l2;

     label3:
        if $r8 != null goto label4;

        specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void missingPartToContentValues(android.content.ContentValues,com.fsck.k9.mail.Part)>($r2, $r3);

        goto label1;

     label4:
        $z0 = $r8 instanceof com.fsck.k9.mail.Message;

        if $z0 == 0 goto label5;

        specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void messageMarkerToContentValues(android.content.ContentValues)>($r2);

        goto label1;

     label5:
        r7 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: java.io.File leafPartToContentValues(android.content.ContentValues,com.fsck.k9.mail.Part,com.fsck.k9.mail.Body)>($r2, $r3, $r8);

        goto label1;

     label6:
        l2 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>("message_parts", null, $r2);

        goto label2;

     label7:
        return l2;
    }
    private java.io.File writeBodyToDisk(com.fsck.k9.mail.Body) throws java.io.IOException, com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mail.Body $r1;
        java.io.FileOutputStream r2;
        java.io.File $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: com.fsck.k9.mail.Body;

        $r3 = staticinvoke <com.fsck.k9.mail.internet.BinaryTempFileBody: java.io.File getTempDirectory()>();

        $r3 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>("body", null, $r3);

        r2 = new java.io.FileOutputStream;

        specialinvoke r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r3);

     label1:
        interfaceinvoke $r1.<com.fsck.k9.mail.Body: void writeTo(java.io.OutputStream)>(r2);

     label2:
        virtualinvoke r2.<java.io.OutputStream: void close()>();

        return $r3;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r2.<java.io.OutputStream: void close()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    private java.io.File writeBodyToDiskIfNecessary(com.fsck.k9.mail.Part) throws com.fsck.k9.mail.MessagingException, java.io.IOException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mail.Part $r1;
        com.fsck.k9.mail.Body $r2;
        boolean $z0;
        com.fsck.k9.mail.internet.BinaryTempFileBody r3;
        java.io.File $r4;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: com.fsck.k9.mail.Part;

        $r2 = interfaceinvoke $r1.<com.fsck.k9.mail.Part: com.fsck.k9.mail.Body getBody()>();

        $z0 = $r2 instanceof com.fsck.k9.mail.internet.BinaryTempFileBody;

        if $z0 == 0 goto label1;

        r3 = (com.fsck.k9.mail.internet.BinaryTempFileBody) $r2;

        $r4 = virtualinvoke r3.<com.fsck.k9.mail.internet.BinaryTempFileBody: java.io.File getFile()>();

        return $r4;

     label1:
        $r4 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: java.io.File writeBodyToDisk(com.fsck.k9.mail.Body)>($r2);

        return $r4;
    }
    public void addPartToMessage(com.fsck.k9.mailstore.LocalMessage, com.fsck.k9.mail.Part) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mailstore.LocalMessage $r1;
        com.fsck.k9.mail.Part $r2;
        com.fsck.k9.mailstore.LocalFolder$18 $r3;
        com.fsck.k9.mailstore.LockableDatabase $r4;
        com.fsck.k9.mailstore.LocalStore $r5;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: com.fsck.k9.mailstore.LocalMessage;

        $r2 := @parameter1: com.fsck.k9.mail.Part;

        virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(0);

        $r5 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

        $r4 = virtualinvoke $r5.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LockableDatabase getDatabase()>();

        $r3 = new com.fsck.k9.mailstore.LocalFolder$18;

        specialinvoke $r3.<com.fsck.k9.mailstore.LocalFolder$18: void <init>(com.fsck.k9.mailstore.LocalFolder,com.fsck.k9.mailstore.LocalMessage,com.fsck.k9.mail.Part)>(r0, $r1, $r2);

        virtualinvoke $r4.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(0, $r3);

        $r5 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

        virtualinvoke $r5.<com.fsck.k9.mailstore.LocalStore: void notifyChange()>();

        return;
    }
    public java.util.Map appendMessages(java.util.List) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        java.util.List r1;
        java.util.Map $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        r1 := @parameter0: java.util.List;

        $r2 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: java.util.Map appendMessages(java.util.List,boolean)>(r1, 0);

        return $r2;
    }
    public boolean areMoreMessagesAvailable(int, java.util.Date) throws java.io.IOException, com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        int $i0;
        java.util.Date $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.util.Date;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not implemented");

        throw $r2;
    }
    public void changeUid(com.fsck.k9.mailstore.LocalMessage) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mailstore.LocalMessage $r1;
        android.content.ContentValues r2;
        java.lang.String $r3;
        com.fsck.k9.mailstore.LocalStore $r4;
        com.fsck.k9.mailstore.LockableDatabase $r5;
        com.fsck.k9.mailstore.LocalFolder$19 $r6;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: com.fsck.k9.mailstore.LocalMessage;

        virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(0);

        r2 = new android.content.ContentValues;

        specialinvoke r2.<android.content.ContentValues: void <init>()>();

        $r3 = virtualinvoke $r1.<com.fsck.k9.mailstore.LocalMessage: java.lang.String getUid()>();

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("uid", $r3);

        $r4 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

        $r5 = virtualinvoke $r4.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LockableDatabase getDatabase()>();

        $r6 = new com.fsck.k9.mailstore.LocalFolder$19;

        specialinvoke $r6.<com.fsck.k9.mailstore.LocalFolder$19: void <init>(com.fsck.k9.mailstore.LocalFolder,android.content.ContentValues,com.fsck.k9.mailstore.LocalMessage)>(r0, r2, $r1);

        virtualinvoke $r5.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(0, $r6);

        $r4 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

        virtualinvoke $r4.<com.fsck.k9.mailstore.LocalStore: void notifyChange()>();

        return;
    }
    public void clearAllMessages() throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mailstore.LockableDatabase$WrappedException r1;
        java.lang.String[] r2;
        long $l0;
        java.lang.String $r3;
        com.fsck.k9.mailstore.LocalStore $r4;
        com.fsck.k9.mailstore.LockableDatabase $r5;
        com.fsck.k9.mailstore.LocalFolder$21 $r6;
        com.fsck.k9.Account $r7;
        int $i1;
        java.lang.Throwable $r8;
        com.fsck.k9.mail.MessagingException $r9;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        r2 = newarray (java.lang.String)[1];

        $l0 = r0.<com.fsck.k9.mailstore.LocalFolder: long databaseId>;

        $r3 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        r2[0] = $r3;

        virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(1);

        $r4 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

     label1:
        $r5 = virtualinvoke $r4.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LockableDatabase getDatabase()>();

     label2:
        $r6 = new com.fsck.k9.mailstore.LocalFolder$21;

     label3:
        specialinvoke $r6.<com.fsck.k9.mailstore.LocalFolder$21: void <init>(com.fsck.k9.mailstore.LocalFolder,java.lang.String[])>(r0, r2);

        virtualinvoke $r5.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(0, $r6);

     label4:
        $r4 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

        virtualinvoke $r4.<com.fsck.k9.mailstore.LocalStore: void notifyChange()>();

        virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void setPushState(java.lang.String)>(null);

        virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void setLastPush(long)>(0L);

        virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void setLastChecked(long)>(0L);

        $r7 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.Account getAccount()>();

        $i1 = virtualinvoke $r7.<com.fsck.k9.Account: int getDisplayCount()>();

        virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void setVisibleLimit(int)>($i1);

        return;

     label5:
        r1 := @caughtexception;

        $r8 = virtualinvoke r1.<com.fsck.k9.mailstore.LockableDatabase$WrappedException: java.lang.Throwable getCause()>();

        $r9 = (com.fsck.k9.mail.MessagingException) $r8;

        throw $r9;

        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label1 to label2 with label5;
        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label3 to label4 with label5;
    }
    public void clearMessagesOlderThan(long) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        long $l0, $l1;
        com.fsck.k9.mailstore.LocalStore $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r5;
        java.lang.String[] $r4;
        java.util.List $r6;
        java.util.Iterator $r7;
        boolean $z0;
        java.lang.Object $r8;
        com.fsck.k9.mail.Message r9;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $l0 := @parameter0: long;

        virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(1);

        $r1 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT ");

        $r3 = <com.fsck.k9.mailstore.LocalStore: java.lang.String GET_MESSAGES_COLS>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FROM messages LEFT JOIN message_parts ON (message_parts.id = messages.message_part_id) LEFT JOIN threads ON (threads.message_id = messages.id) WHERE empty = 0 AND (folder_id = ? and date < ?)");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = newarray (java.lang.String)[2];

        $l1 = r0.<com.fsck.k9.mailstore.LocalFolder: long databaseId>;

        $r5 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        $r4[0] = $r5;

        $r5 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        $r4[1] = $r5;

        $r6 = virtualinvoke $r1.<com.fsck.k9.mailstore.LocalStore: java.util.List getMessages(com.fsck.k9.mail.MessageRetrievalListener,com.fsck.k9.mailstore.LocalFolder,java.lang.String,java.lang.String[])>(null, r0, $r3, $r4);

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (com.fsck.k9.mail.Message) $r8;

        virtualinvoke r9.<com.fsck.k9.mail.Message: void destroy()>();

        goto label1;

     label2:
        $r1 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

        virtualinvoke $r1.<com.fsck.k9.mailstore.LocalStore: void notifyChange()>();

        return;
    }
    public void close()
    {
        com.fsck.k9.mailstore.LocalFolder r0;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        r0.<com.fsck.k9.mailstore.LocalFolder: long databaseId> = -1L;

        return;
    }
    public java.util.Map copyMessages(java.util.List, com.fsck.k9.mail.Folder) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        java.util.List r1;
        java.util.Map $r2;
        com.fsck.k9.mail.Folder $r3;
        boolean $z0;
        com.fsck.k9.mail.MessagingException $r4;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        r1 := @parameter0: java.util.List;

        $r3 := @parameter1: com.fsck.k9.mail.Folder;

        $z0 = $r3 instanceof com.fsck.k9.mailstore.LocalFolder;

        if $z0 != 0 goto label1;

        $r4 = new com.fsck.k9.mail.MessagingException;

        specialinvoke $r4.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String)>("copyMessages called with incorrect Folder");

        throw $r4;

     label1:
        r0 = (com.fsck.k9.mailstore.LocalFolder) $r3;

        $r2 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: java.util.Map appendMessages(java.util.List,boolean)>(r1, 1);

        return $r2;
    }
    public boolean create(com.fsck.k9.mail.Folder$FolderType) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mail.Folder$FolderType $r1;
        com.fsck.k9.Account $r2;
        int $i0;
        boolean $z0;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: com.fsck.k9.mail.Folder$FolderType;

        $r2 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.Account getAccount()>();

        $i0 = virtualinvoke $r2.<com.fsck.k9.Account: int getDisplayCount()>();

        $z0 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: boolean create(com.fsck.k9.mail.Folder$FolderType,int)>($r1, $i0);

        return $z0;
    }
    public boolean create(com.fsck.k9.mail.Folder$FolderType, int) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mail.Folder$FolderType $r1;
        int $i0;
        java.util.ArrayList r2;
        boolean $z0;
        com.fsck.k9.mail.MessagingException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        com.fsck.k9.mailstore.LocalStore $r6;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: com.fsck.k9.mail.Folder$FolderType;

        $i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: boolean exists()>();

        if $z0 == 0 goto label1;

        $r3 = new com.fsck.k9.mail.MessagingException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Folder ");

        $r5 = r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String name>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already exists.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label1:
        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>(int)>(1);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r0);

        $r6 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

        virtualinvoke $r6.<com.fsck.k9.mailstore.LocalStore: void createFolders(java.util.List,int)>(r2, $i0);

        return 1;
    }
    public void delete() throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        java.lang.String $r1, $r6;
        com.fsck.k9.mailstore.LocalStore $r2;
        com.fsck.k9.preferences.Storage $r3;
        com.fsck.k9.preferences.StorageEditor $r4;
        java.lang.StringBuilder $r5;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String getPrefId()>();

        $r2 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

        $r3 = virtualinvoke $r2.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.preferences.Storage getStorage()>();

        $r4 = virtualinvoke $r3.<com.fsck.k9.preferences.Storage: com.fsck.k9.preferences.StorageEditor edit()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".displayMode");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor remove(java.lang.String)>($r6);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".syncMode");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor remove(java.lang.String)>($r6);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".pushMode");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor remove(java.lang.String)>($r6);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".inTopGroup");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor remove(java.lang.String)>($r6);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".integrate");

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor remove(java.lang.String)>($r1);

        virtualinvoke $r4.<com.fsck.k9.preferences.StorageEditor: boolean commit()>();

        return;
    }
    public void delete(boolean) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        boolean $z0;
        com.fsck.k9.mailstore.LockableDatabase$WrappedException r1;
        com.fsck.k9.mailstore.LocalFolder$22 $r2;
        com.fsck.k9.mailstore.LocalStore $r3;
        com.fsck.k9.mailstore.LockableDatabase $r4;
        java.lang.Throwable $r5;
        com.fsck.k9.mail.MessagingException $r6;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $z0 := @parameter0: boolean;

        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

     label1:
        $r4 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LockableDatabase getDatabase()>();

     label2:
        $r2 = new com.fsck.k9.mailstore.LocalFolder$22;

     label3:
        specialinvoke $r2.<com.fsck.k9.mailstore.LocalFolder$22: void <init>(com.fsck.k9.mailstore.LocalFolder)>(r0);

        virtualinvoke $r4.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(0, $r2);

     label4:
        return;

     label5:
        r1 := @caughtexception;

        $r5 = virtualinvoke r1.<com.fsck.k9.mailstore.LockableDatabase$WrappedException: java.lang.Throwable getCause()>();

        $r6 = (com.fsck.k9.mail.MessagingException) $r5;

        throw $r6;

        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label1 to label2 with label5;
        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label3 to label4 with label5;
    }
    void deleteFulltextIndexEntry(android.database.sqlite.SQLiteDatabase, long)
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        android.database.sqlite.SQLiteDatabase $r1;
        long $l0;
        java.lang.String[] r2;
        java.lang.String $r3;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $l0 := @parameter1: long;

        r2 = newarray (java.lang.String)[1];

        $r3 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        r2[0] = $r3;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("messages_fulltext", "docid = ?", r2);

        return;
    }
    void deleteMessagePartsAndDataFromDisk(long) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        long $l0;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $l0 := @parameter0: long;

        specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void deleteMessageDataFromDisk(long)>($l0);

        specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void deleteMessageParts(long)>($l0);

        return;
    }
    void destroyMessage(com.fsck.k9.mailstore.LocalMessage) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mailstore.LocalMessage $r1;
        long $l0, $l1;
        java.lang.String $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: com.fsck.k9.mailstore.LocalMessage;

        $l0 = virtualinvoke $r1.<com.fsck.k9.mailstore.LocalMessage: long getDatabaseId()>();

        $l1 = virtualinvoke $r1.<com.fsck.k9.mailstore.LocalMessage: long getMessagePartId()>();

        $r2 = virtualinvoke $r1.<com.fsck.k9.mailstore.LocalMessage: java.lang.String getMessageId()>();

        specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void destroyMessage(long,long,java.lang.String)>($l0, $l1, $r2);

        return;
    }
    public void destroyMessages(java.util.List)
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        java.util.List r1;
        com.fsck.k9.mail.MessagingException r2;
        com.fsck.k9.mailstore.LocalFolder$16 $r3;
        com.fsck.k9.mailstore.LockableDatabase $r4;
        com.fsck.k9.mailstore.LocalStore $r5;
        com.fsck.k9.mailstore.LockableDatabase$WrappedException $r6;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        r1 := @parameter0: java.util.List;

        $r5 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

     label1:
        $r4 = virtualinvoke $r5.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LockableDatabase getDatabase()>();

     label2:
        $r3 = new com.fsck.k9.mailstore.LocalFolder$16;

     label3:
        specialinvoke $r3.<com.fsck.k9.mailstore.LocalFolder$16: void <init>(com.fsck.k9.mailstore.LocalFolder,java.util.List)>(r0, r1);

        virtualinvoke $r4.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(1, $r3);

     label4:
        return;

     label5:
        r2 := @caughtexception;

        $r6 = new com.fsck.k9.mailstore.LockableDatabase$WrappedException;

        specialinvoke $r6.<com.fsck.k9.mailstore.LockableDatabase$WrappedException: void <init>(java.lang.Exception)>(r2);

        throw $r6;

        catch com.fsck.k9.mail.MessagingException from label1 to label2 with label5;
        catch com.fsck.k9.mail.MessagingException from label3 to label4 with label5;
    }
    public boolean equals(java.lang.Object)
    {
        com.fsck.k9.mailstore.LocalFolder r0, r3;
        java.lang.String $r1, $r4;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        r2 := @parameter0: java.lang.Object;

        $z0 = r2 instanceof com.fsck.k9.mailstore.LocalFolder;

        if $z0 == 0 goto label1;

        r3 = (com.fsck.k9.mailstore.LocalFolder) r2;

        $r4 = r3.<com.fsck.k9.mailstore.LocalFolder: java.lang.String name>;

        $r1 = r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String name>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        return $z0;

     label1:
        $z0 = specialinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        return $z0;
    }
    public boolean exists() throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mailstore.LocalFolder$2 $r1;
        com.fsck.k9.mailstore.LocalStore $r2;
        com.fsck.k9.mailstore.LockableDatabase $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r2 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

        $r3 = virtualinvoke $r2.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LockableDatabase getDatabase()>();

        $r1 = new com.fsck.k9.mailstore.LocalFolder$2;

        specialinvoke $r1.<com.fsck.k9.mailstore.LocalFolder$2: void <init>(com.fsck.k9.mailstore.LocalFolder)>(r0);

        $r4 = virtualinvoke $r3.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(0, $r1);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }
    public java.util.List extractNewMessages(java.util.List) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        java.util.List r1;
        com.fsck.k9.mailstore.LockableDatabase$WrappedException r2;
        com.fsck.k9.mailstore.LocalFolder$28 $r3;
        com.fsck.k9.mailstore.LocalStore $r4;
        com.fsck.k9.mailstore.LockableDatabase $r5;
        java.lang.Object $r6;
        java.lang.Throwable $r7;
        com.fsck.k9.mail.MessagingException $r8;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        r1 := @parameter0: java.util.List;

        $r4 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

     label1:
        $r5 = virtualinvoke $r4.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LockableDatabase getDatabase()>();

     label2:
        $r3 = new com.fsck.k9.mailstore.LocalFolder$28;

     label3:
        specialinvoke $r3.<com.fsck.k9.mailstore.LocalFolder$28: void <init>(com.fsck.k9.mailstore.LocalFolder,java.util.List)>(r0, r1);

        $r6 = virtualinvoke $r5.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(0, $r3);

     label4:
        r1 = (java.util.List) $r6;

        return r1;

     label5:
        r2 := @caughtexception;

        $r7 = virtualinvoke r2.<com.fsck.k9.mailstore.LockableDatabase$WrappedException: java.lang.Throwable getCause()>();

        $r8 = (com.fsck.k9.mail.MessagingException) $r7;

        throw $r8;

        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label1 to label2 with label5;
        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label3 to label4 with label5;
    }
    public void fetch(java.util.List, com.fsck.k9.mail.FetchProfile, com.fsck.k9.mail.MessageRetrievalListener) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        java.util.List r1;
        com.fsck.k9.mail.FetchProfile $r2;
        com.fsck.k9.mail.MessageRetrievalListener r3;
        com.fsck.k9.mailstore.LockableDatabase$WrappedException r4;
        com.fsck.k9.mailstore.LocalFolder$8 $r5;
        com.fsck.k9.mailstore.LocalStore $r6;
        com.fsck.k9.mailstore.LockableDatabase $r7;
        java.lang.Throwable $r8;
        com.fsck.k9.mail.MessagingException $r9;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        r1 := @parameter0: java.util.List;

        $r2 := @parameter1: com.fsck.k9.mail.FetchProfile;

        r3 := @parameter2: com.fsck.k9.mail.MessageRetrievalListener;

        $r6 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

     label1:
        $r7 = virtualinvoke $r6.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LockableDatabase getDatabase()>();

     label2:
        $r5 = new com.fsck.k9.mailstore.LocalFolder$8;

     label3:
        specialinvoke $r5.<com.fsck.k9.mailstore.LocalFolder$8: void <init>(com.fsck.k9.mailstore.LocalFolder,com.fsck.k9.mail.FetchProfile,java.util.List)>(r0, $r2, r1);

        virtualinvoke $r7.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(0, $r5);

     label4:
        return;

     label5:
        r4 := @caughtexception;

        $r8 = virtualinvoke r4.<com.fsck.k9.mailstore.LockableDatabase$WrappedException: java.lang.Throwable getCause()>();

        $r9 = (com.fsck.k9.mail.MessagingException) $r8;

        throw $r9;

        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label1 to label2 with label5;
        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label3 to label4 with label5;
    }
    public java.lang.String getAccountUuid()
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.Account getAccount()>();

        $r2 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getUuid()>();

        return $r2;
    }
    public java.util.List getAllMessageUids() throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mailstore.LockableDatabase$WrappedException r1;
        com.fsck.k9.mailstore.LocalFolder$13 $r2;
        com.fsck.k9.mailstore.LocalStore $r3;
        com.fsck.k9.mailstore.LockableDatabase $r4;
        java.lang.Object $r5;
        java.util.List $r6;
        java.lang.Throwable $r7;
        com.fsck.k9.mail.MessagingException $r8;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

     label1:
        $r4 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LockableDatabase getDatabase()>();

     label2:
        $r2 = new com.fsck.k9.mailstore.LocalFolder$13;

     label3:
        specialinvoke $r2.<com.fsck.k9.mailstore.LocalFolder$13: void <init>(com.fsck.k9.mailstore.LocalFolder)>(r0);

        $r5 = virtualinvoke $r4.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(0, $r2);

     label4:
        $r6 = (java.util.List) $r5;

        return $r6;

     label5:
        r1 := @caughtexception;

        $r7 = virtualinvoke r1.<com.fsck.k9.mailstore.LockableDatabase$WrappedException: java.lang.Throwable getCause()>();

        $r8 = (com.fsck.k9.mail.MessagingException) $r7;

        throw $r8;

        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label1 to label2 with label5;
        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label3 to label4 with label5;
    }
    public java.util.Map getAllMessagesAndEffectiveDates() throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mailstore.LockableDatabase$WrappedException r1;
        com.fsck.k9.mailstore.LocalFolder$11 $r2;
        com.fsck.k9.mailstore.LocalStore $r3;
        com.fsck.k9.mailstore.LockableDatabase $r4;
        java.lang.Object $r5;
        java.util.Map $r6;
        java.lang.Throwable $r7;
        com.fsck.k9.mail.MessagingException $r8;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

     label1:
        $r4 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LockableDatabase getDatabase()>();

     label2:
        $r2 = new com.fsck.k9.mailstore.LocalFolder$11;

     label3:
        specialinvoke $r2.<com.fsck.k9.mailstore.LocalFolder$11: void <init>(com.fsck.k9.mailstore.LocalFolder)>(r0);

        $r5 = virtualinvoke $r4.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(0, $r2);

     label4:
        $r6 = (java.util.Map) $r5;

        return $r6;

     label5:
        r1 := @caughtexception;

        $r7 = virtualinvoke r1.<com.fsck.k9.mailstore.LockableDatabase$WrappedException: java.lang.Throwable getCause()>();

        $r8 = (com.fsck.k9.mail.MessagingException) $r7;

        throw $r8;

        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label1 to label2 with label5;
        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label3 to label4 with label5;
    }
    public long getDatabaseId()
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        long l0;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        l0 = r0.<com.fsck.k9.mailstore.LocalFolder: long databaseId>;

        return l0;
    }
    public com.fsck.k9.mail.Folder$FolderClass getDisplayClass()
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mail.Folder$FolderClass r1;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        r1 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass displayClass>;

        return r1;
    }
    public int getFlaggedMessageCount() throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mailstore.LockableDatabase$WrappedException r1;
        com.fsck.k9.mailstore.LocalFolder$5 $r2;
        long $l0;
        byte $b1;
        com.fsck.k9.mailstore.LocalStore $r3;
        com.fsck.k9.mailstore.LockableDatabase $r4;
        java.lang.Object $r5;
        java.lang.Integer $r6;
        int $i2;
        java.lang.Throwable $r7;
        com.fsck.k9.mail.MessagingException $r8;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $l0 = r0.<com.fsck.k9.mailstore.LocalFolder: long databaseId>;

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label1;

        virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(0);

     label1:
        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

     label2:
        $r4 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LockableDatabase getDatabase()>();

     label3:
        $r2 = new com.fsck.k9.mailstore.LocalFolder$5;

     label4:
        specialinvoke $r2.<com.fsck.k9.mailstore.LocalFolder$5: void <init>(com.fsck.k9.mailstore.LocalFolder)>(r0);

        $r5 = virtualinvoke $r4.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(0, $r2);

     label5:
        $r6 = (java.lang.Integer) $r5;

     label6:
        $i2 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

     label7:
        return $i2;

     label8:
        r1 := @caughtexception;

        $r7 = virtualinvoke r1.<com.fsck.k9.mailstore.LockableDatabase$WrappedException: java.lang.Throwable getCause()>();

        $r8 = (com.fsck.k9.mail.MessagingException) $r7;

        throw $r8;

        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label2 to label3 with label8;
        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label4 to label5 with label8;
        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label6 to label7 with label8;
    }
    public java.lang.Integer getLastUid()
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        java.lang.Integer r1;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        r1 = r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.Integer lastUid>;

        return r1;
    }
    public volatile com.fsck.k9.mail.Message getMessage(java.lang.String) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        java.lang.String $r1;
        com.fsck.k9.mailstore.LocalMessage $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalMessage getMessage(java.lang.String)>($r1);

        return $r2;
    }
    public com.fsck.k9.mailstore.LocalMessage getMessage(java.lang.String) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        java.lang.String $r1;
        com.fsck.k9.mailstore.LockableDatabase$WrappedException r2;
        com.fsck.k9.mailstore.LocalFolder$10 $r3;
        com.fsck.k9.mailstore.LocalStore $r4;
        com.fsck.k9.mailstore.LockableDatabase $r5;
        java.lang.Object $r6;
        com.fsck.k9.mailstore.LocalMessage $r7;
        java.lang.Throwable $r8;
        com.fsck.k9.mail.MessagingException $r9;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

     label1:
        $r5 = virtualinvoke $r4.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LockableDatabase getDatabase()>();

     label2:
        $r3 = new com.fsck.k9.mailstore.LocalFolder$10;

     label3:
        specialinvoke $r3.<com.fsck.k9.mailstore.LocalFolder$10: void <init>(com.fsck.k9.mailstore.LocalFolder,java.lang.String)>(r0, $r1);

        $r6 = virtualinvoke $r5.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(0, $r3);

     label4:
        $r7 = (com.fsck.k9.mailstore.LocalMessage) $r6;

        return $r7;

     label5:
        r2 := @caughtexception;

        $r8 = virtualinvoke r2.<com.fsck.k9.mailstore.LockableDatabase$WrappedException: java.lang.Throwable getCause()>();

        $r9 = (com.fsck.k9.mail.MessagingException) $r8;

        throw $r9;

        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label1 to label2 with label5;
        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label3 to label4 with label5;
    }
    public int getMessageCount() throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mailstore.LockableDatabase$WrappedException r1;
        com.fsck.k9.mailstore.LocalFolder$3 $r2;
        com.fsck.k9.mailstore.LocalStore $r3;
        com.fsck.k9.mailstore.LockableDatabase $r4;
        java.lang.Object $r5;
        java.lang.Integer $r6;
        int $i0;
        java.lang.Throwable $r7;
        com.fsck.k9.mail.MessagingException $r8;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

     label1:
        $r4 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LockableDatabase getDatabase()>();

     label2:
        $r2 = new com.fsck.k9.mailstore.LocalFolder$3;

     label3:
        specialinvoke $r2.<com.fsck.k9.mailstore.LocalFolder$3: void <init>(com.fsck.k9.mailstore.LocalFolder)>(r0);

        $r5 = virtualinvoke $r4.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(0, $r2);

     label4:
        $r6 = (java.lang.Integer) $r5;

     label5:
        $i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

     label6:
        return $i0;

     label7:
        r1 := @caughtexception;

        $r7 = virtualinvoke r1.<com.fsck.k9.mailstore.LockableDatabase$WrappedException: java.lang.Throwable getCause()>();

        $r8 = (com.fsck.k9.mail.MessagingException) $r7;

        throw $r8;

        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label1 to label2 with label7;
        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label3 to label4 with label7;
        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label5 to label6 with label7;
    }
    public java.lang.String getMessageUidById(long) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        long $l0;
        com.fsck.k9.mailstore.LockableDatabase$WrappedException r1;
        com.fsck.k9.mailstore.LocalFolder$9 $r2;
        com.fsck.k9.mailstore.LocalStore $r3;
        com.fsck.k9.mailstore.LockableDatabase $r4;
        java.lang.Object $r5;
        java.lang.String $r6;
        java.lang.Throwable $r7;
        com.fsck.k9.mail.MessagingException $r8;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $l0 := @parameter0: long;

        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

     label1:
        $r4 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LockableDatabase getDatabase()>();

     label2:
        $r2 = new com.fsck.k9.mailstore.LocalFolder$9;

     label3:
        specialinvoke $r2.<com.fsck.k9.mailstore.LocalFolder$9: void <init>(com.fsck.k9.mailstore.LocalFolder,long)>(r0, $l0);

        $r5 = virtualinvoke $r4.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(0, $r2);

     label4:
        $r6 = (java.lang.String) $r5;

        return $r6;

     label5:
        r1 := @caughtexception;

        $r7 = virtualinvoke r1.<com.fsck.k9.mailstore.LockableDatabase$WrappedException: java.lang.Throwable getCause()>();

        $r8 = (com.fsck.k9.mail.MessagingException) $r7;

        throw $r8;

        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label1 to label2 with label5;
        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label3 to label4 with label5;
    }
    public java.util.List getMessages(int, int, java.util.Date, com.fsck.k9.mail.MessageRetrievalListener) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        int $i0, $i1;
        java.util.Date $r1;
        com.fsck.k9.mail.MessageRetrievalListener r2;
        com.fsck.k9.mail.MessagingException $r3;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.util.Date;

        r2 := @parameter3: com.fsck.k9.mail.MessageRetrievalListener;

        virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(0);

        $r3 = new com.fsck.k9.mail.MessagingException;

        specialinvoke $r3.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String)>("LocalStore.getMessages(int, int, MessageRetrievalListener) not yet implemented");

        throw $r3;
    }
    public java.util.List getMessages(com.fsck.k9.mail.MessageRetrievalListener) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mail.MessageRetrievalListener r1;
        java.util.List $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        r1 := @parameter0: com.fsck.k9.mail.MessageRetrievalListener;

        $r2 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: java.util.List getMessages(com.fsck.k9.mail.MessageRetrievalListener,boolean)>(r1, 1);

        return $r2;
    }
    public java.util.List getMessages(com.fsck.k9.mail.MessageRetrievalListener, boolean) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mail.MessageRetrievalListener r1;
        boolean $z0;
        com.fsck.k9.mailstore.LockableDatabase$WrappedException r2;
        com.fsck.k9.mailstore.LocalFolder$12 $r3;
        com.fsck.k9.mailstore.LocalStore $r4;
        com.fsck.k9.mailstore.LockableDatabase $r5;
        java.lang.Object $r6;
        java.util.List $r7;
        java.lang.Throwable $r8;
        com.fsck.k9.mail.MessagingException $r9;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        r1 := @parameter0: com.fsck.k9.mail.MessageRetrievalListener;

        $z0 := @parameter1: boolean;

        $r4 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

     label1:
        $r5 = virtualinvoke $r4.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LockableDatabase getDatabase()>();

     label2:
        $r3 = new com.fsck.k9.mailstore.LocalFolder$12;

     label3:
        specialinvoke $r3.<com.fsck.k9.mailstore.LocalFolder$12: void <init>(com.fsck.k9.mailstore.LocalFolder,com.fsck.k9.mail.MessageRetrievalListener,boolean)>(r0, r1, $z0);

        $r6 = virtualinvoke $r5.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(0, $r3);

     label4:
        $r7 = (java.util.List) $r6;

        return $r7;

     label5:
        r2 := @caughtexception;

        $r8 = virtualinvoke r2.<com.fsck.k9.mailstore.LockableDatabase$WrappedException: java.lang.Throwable getCause()>();

        $r9 = (com.fsck.k9.mail.MessagingException) $r8;

        throw $r9;

        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label1 to label2 with label5;
        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label3 to label4 with label5;
    }
    public java.util.List getMessagesByReference(java.util.List) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        java.util.List r1;
        java.util.ArrayList r2;
        java.lang.String $r3, $r4, $r8;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        com.fsck.k9.activity.MessageReference r7;
        java.lang.IllegalArgumentException $r9;
        com.fsck.k9.mailstore.LocalMessage $r10;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        r1 := @parameter0: java.util.List;

        virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(0);

        $r3 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String getAccountUuid()>();

        $r4 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String getName()>();

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r5 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.fsck.k9.activity.MessageReference) $r6;

        $r8 = virtualinvoke r7.<com.fsck.k9.activity.MessageReference: java.lang.String getAccountUuid()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label2;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("all message references must belong to this Account!");

        throw $r9;

     label2:
        $r8 = virtualinvoke r7.<com.fsck.k9.activity.MessageReference: java.lang.String getFolderName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label3;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("all message references must belong to this LocalFolder!");

        throw $r9;

     label3:
        $r8 = virtualinvoke r7.<com.fsck.k9.activity.MessageReference: java.lang.String getUid()>();

        $r10 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalMessage getMessage(java.lang.String)>($r8);

        if $r10 == null goto label1;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label1;

     label4:
        return r2;
    }
    public java.util.List getMessagesByUids(java.util.List) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        java.util.List r1;
        java.util.ArrayList r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.String r5;
        com.fsck.k9.mailstore.LocalMessage $r6;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        r1 := @parameter0: java.util.List;

        virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(0);

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $r6 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalMessage getMessage(java.lang.String)>(r5);

        if $r6 == null goto label1;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        return r2;
    }
    public int getMode()
    {
        com.fsck.k9.mailstore.LocalFolder r0;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        return 0;
    }
    public com.fsck.k9.mailstore.LocalFolder$MoreMessages getMoreMessages()
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mailstore.LocalFolder$MoreMessages r1;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        r1 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalFolder$MoreMessages moreMessages>;

        return r1;
    }
    public java.lang.String getName()
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        java.lang.String r1;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        r1 = r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String name>;

        return r1;
    }
    public com.fsck.k9.mail.Folder$FolderClass getNotifyClass()
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mail.Folder$FolderClass $r1, $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r2 = <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass INHERITED>;

        $r1 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass notifyClass>;

        if $r2 != $r1 goto label1;

        $r1 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass getPushClass()>();

        return $r1;

     label1:
        $r1 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass notifyClass>;

        return $r1;
    }
    public java.lang.Long getOldestMessageDate() throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mailstore.LocalFolder$27 $r1;
        com.fsck.k9.mailstore.LocalStore $r2;
        com.fsck.k9.mailstore.LockableDatabase $r3;
        java.lang.Object $r4;
        java.lang.Long $r5;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r2 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

        $r3 = virtualinvoke $r2.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LockableDatabase getDatabase()>();

        $r1 = new com.fsck.k9.mailstore.LocalFolder$27;

        specialinvoke $r1.<com.fsck.k9.mailstore.LocalFolder$27: void <init>(com.fsck.k9.mailstore.LocalFolder)>(r0);

        $r4 = virtualinvoke $r3.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(0, $r1);

        $r5 = (java.lang.Long) $r4;

        return $r5;
    }
    public com.fsck.k9.mail.Folder$FolderClass getPushClass()
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mail.Folder$FolderClass $r1, $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r2 = <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass INHERITED>;

        $r1 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass pushClass>;

        if $r2 != $r1 goto label1;

        $r1 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass getSyncClass()>();

        return $r1;

     label1:
        $r1 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass pushClass>;

        return $r1;
    }
    public java.lang.String getPushState()
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        java.lang.String r1;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        r1 = r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String pushState>;

        return r1;
    }
    public com.fsck.k9.mail.Folder$FolderClass getRawNotifyClass()
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mail.Folder$FolderClass r1;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        r1 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass notifyClass>;

        return r1;
    }
    public com.fsck.k9.mail.Folder$FolderClass getRawPushClass()
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mail.Folder$FolderClass r1;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        r1 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass pushClass>;

        return r1;
    }
    public com.fsck.k9.mail.Folder$FolderClass getRawSyncClass()
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mail.Folder$FolderClass r1;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        r1 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass syncClass>;

        return r1;
    }
    public boolean getSignatureUse()
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.Account $r1;
        boolean $z0;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.Account getAccount()>();

        $z0 = virtualinvoke $r1.<com.fsck.k9.Account: boolean getSignatureUse()>();

        return $z0;
    }
    public com.fsck.k9.mail.Folder$FolderClass getSyncClass()
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mail.Folder$FolderClass $r1, $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r2 = <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass INHERITED>;

        $r1 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass syncClass>;

        if $r2 != $r1 goto label1;

        $r1 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass getDisplayClass()>();

        return $r1;

     label1:
        $r1 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass syncClass>;

        return $r1;
    }
    public java.lang.String getUidFromMessageId(com.fsck.k9.mail.Message) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mail.Message $r1;
        com.fsck.k9.mail.MessagingException $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: com.fsck.k9.mail.Message;

        $r2 = new com.fsck.k9.mail.MessagingException;

        specialinvoke $r2.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String)>("Cannot call getUidFromMessageId on LocalFolder");

        throw $r2;
    }
    public int getUnreadMessageCount() throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mailstore.LockableDatabase$WrappedException r1;
        com.fsck.k9.mailstore.LocalFolder$4 $r2;
        long $l0;
        byte $b1;
        com.fsck.k9.mailstore.LocalStore $r3;
        com.fsck.k9.mailstore.LockableDatabase $r4;
        java.lang.Object $r5;
        java.lang.Integer $r6;
        int $i2;
        java.lang.Throwable $r7;
        com.fsck.k9.mail.MessagingException $r8;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $l0 = r0.<com.fsck.k9.mailstore.LocalFolder: long databaseId>;

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label1;

        virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(0);

     label1:
        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

     label2:
        $r4 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LockableDatabase getDatabase()>();

     label3:
        $r2 = new com.fsck.k9.mailstore.LocalFolder$4;

     label4:
        specialinvoke $r2.<com.fsck.k9.mailstore.LocalFolder$4: void <init>(com.fsck.k9.mailstore.LocalFolder)>(r0);

        $r5 = virtualinvoke $r4.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(0, $r2);

     label5:
        $r6 = (java.lang.Integer) $r5;

     label6:
        $i2 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

     label7:
        return $i2;

     label8:
        r1 := @caughtexception;

        $r7 = virtualinvoke r1.<com.fsck.k9.mailstore.LockableDatabase$WrappedException: java.lang.Throwable getCause()>();

        $r8 = (com.fsck.k9.mail.MessagingException) $r7;

        throw $r8;

        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label2 to label3 with label8;
        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label4 to label5 with label8;
        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label6 to label7 with label8;
    }
    public int getVisibleLimit() throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        int i0;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(0);

        i0 = r0.<com.fsck.k9.mailstore.LocalFolder: int visibleLimit>;

        return i0;
    }
    public boolean hasMoreMessages()
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mailstore.LocalFolder$MoreMessages $r1, $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r2 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalFolder$MoreMessages moreMessages>;

        $r1 = <com.fsck.k9.mailstore.LocalFolder$MoreMessages: com.fsck.k9.mailstore.LocalFolder$MoreMessages FALSE>;

        if $r2 == $r1 goto label1;

        return 1;

     label1:
        return 0;
    }
    public int hashCode()
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 = r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String name>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }
    public boolean isInTopGroup()
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        boolean z0;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        z0 = r0.<com.fsck.k9.mailstore.LocalFolder: boolean isInTopGroup>;

        return z0;
    }
    public boolean isIntegrate()
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        boolean z0;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        z0 = r0.<com.fsck.k9.mailstore.LocalFolder: boolean isIntegrate>;

        return z0;
    }
    public boolean isOpen()
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        long $l0;
        byte $b1;
        java.lang.String $r1;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $l0 = r0.<com.fsck.k9.mailstore.LocalFolder: long databaseId>;

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label1;

        $r1 = r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String name>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public java.util.Map moveMessages(java.util.List, com.fsck.k9.mail.Folder) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0, r7;
        java.util.List r1;
        com.fsck.k9.mail.Folder $r2;
        com.fsck.k9.mailstore.LockableDatabase$WrappedException r3;
        java.util.HashMap r4;
        com.fsck.k9.mailstore.LocalFolder$14 $r5;
        boolean $z0;
        com.fsck.k9.mail.MessagingException $r6;
        com.fsck.k9.mailstore.LocalStore $r8;
        com.fsck.k9.mailstore.LockableDatabase $r9;
        java.lang.Throwable $r10;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        r1 := @parameter0: java.util.List;

        $r2 := @parameter1: com.fsck.k9.mail.Folder;

        $z0 = $r2 instanceof com.fsck.k9.mailstore.LocalFolder;

        if $z0 != 0 goto label1;

        $r6 = new com.fsck.k9.mail.MessagingException;

        specialinvoke $r6.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String)>("moveMessages called with non-LocalFolder");

        throw $r6;

     label1:
        r7 = (com.fsck.k9.mailstore.LocalFolder) $r2;

        r4 = new java.util.HashMap;

        specialinvoke r4.<java.util.HashMap: void <init>()>();

        $r8 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

     label2:
        $r9 = virtualinvoke $r8.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LockableDatabase getDatabase()>();

     label3:
        $r5 = new com.fsck.k9.mailstore.LocalFolder$14;

     label4:
        specialinvoke $r5.<com.fsck.k9.mailstore.LocalFolder$14: void <init>(com.fsck.k9.mailstore.LocalFolder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.Map)>(r0, r7, r1, r4);

        virtualinvoke $r9.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(0, $r5);

     label5:
        $r8 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

     label6:
        virtualinvoke $r8.<com.fsck.k9.mailstore.LocalStore: void notifyChange()>();

     label7:
        return r4;

     label8:
        r3 := @caughtexception;

        $r10 = virtualinvoke r3.<com.fsck.k9.mailstore.LockableDatabase$WrappedException: java.lang.Throwable getCause()>();

        $r6 = (com.fsck.k9.mail.MessagingException) $r10;

        throw $r6;

        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label2 to label3 with label8;
        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label4 to label5 with label8;
        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label6 to label7 with label8;
    }
    public void open(int) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        int $i0, $i1;
        com.fsck.k9.mailstore.LockableDatabase$WrappedException r1;
        com.fsck.k9.mailstore.LocalFolder$1 $r2;
        boolean $z0;
        com.fsck.k9.mailstore.LocalStore $r3;
        com.fsck.k9.mailstore.LockableDatabase $r4;
        java.lang.Throwable $r5;
        com.fsck.k9.mail.MessagingException $r6;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: boolean isOpen()>();

        if $z0 == 0 goto label1;

        $i1 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: int getMode()>();

        if $i1 == $i0 goto label8;

        if $i0 != 1 goto label1;

        return;

     label1:
        $z0 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: boolean isOpen()>();

        if $z0 == 0 goto label2;

        virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void close()>();

     label2:
        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

     label3:
        $r4 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LockableDatabase getDatabase()>();

     label4:
        $r2 = new com.fsck.k9.mailstore.LocalFolder$1;

     label5:
        specialinvoke $r2.<com.fsck.k9.mailstore.LocalFolder$1: void <init>(com.fsck.k9.mailstore.LocalFolder,int)>(r0, $i0);

        virtualinvoke $r4.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(0, $r2);

     label6:
        return;

     label7:
        r1 := @caughtexception;

        $r5 = virtualinvoke r1.<com.fsck.k9.mailstore.LockableDatabase$WrappedException: java.lang.Throwable getCause()>();

        $r6 = (com.fsck.k9.mail.MessagingException) $r5;

        throw $r6;

     label8:
        return;

        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label3 to label4 with label7;
        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label5 to label6 with label7;
    }
    void open(android.database.Cursor) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        android.database.Cursor $r1;
        boolean $z0, $z1;
        int $i0;
        long $l1;
        java.lang.String $r2, $r4, $r5, r6;
        com.fsck.k9.mail.Folder$FolderClass $r3;
        com.fsck.k9.mailstore.LocalFolder$MoreMessages $r7;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: android.database.Cursor;

        $z0 = 1;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getInt(int)>(0);

        $l1 = (long) $i0;

        r0.<com.fsck.k9.mailstore.LocalFolder: long databaseId> = $l1;

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>(1);

        r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String name> = $r2;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getInt(int)>(2);

        r0.<com.fsck.k9.mailstore.LocalFolder: int visibleLimit> = $i0;

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>(5);

        r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String pushState> = $r2;

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>(4);

        specialinvoke r0.<com.fsck.k9.mail.Folder: void setStatus(java.lang.String)>($r2);

        $l1 = interfaceinvoke $r1.<android.database.Cursor: long getLong(int)>(3);

        specialinvoke r0.<com.fsck.k9.mail.Folder: void setLastChecked(long)>($l1);

        $l1 = interfaceinvoke $r1.<android.database.Cursor: long getLong(int)>(6);

        specialinvoke r0.<com.fsck.k9.mail.Folder: void setLastPush(long)>($l1);

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getInt(int)>(8);

        if $i0 != 1 goto label7;

        $z1 = 1;

     label1:
        r0.<com.fsck.k9.mailstore.LocalFolder: boolean isInTopGroup> = $z1;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getInt(int)>(7);

        if $i0 != 1 goto label8;

     label2:
        r0.<com.fsck.k9.mailstore.LocalFolder: boolean isIntegrate> = $z0;

        $r3 = <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass NO_CLASS>;

        $r4 = virtualinvoke $r3.<com.fsck.k9.mail.Folder$FolderClass: java.lang.String toString()>();

        $r2 = $r4;

        $r5 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>(11);

        r6 = $r5;

        if $r5 != null goto label3;

        r6 = $r4;

     label3:
        $r3 = staticinvoke <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass valueOf(java.lang.String)>(r6);

        r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass displayClass> = $r3;

        $r5 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>(12);

        r6 = $r5;

        if $r5 != null goto label4;

        r6 = $r4;

     label4:
        $r3 = staticinvoke <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass valueOf(java.lang.String)>(r6);

        r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass notifyClass> = $r3;

        $r5 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>(10);

        r6 = $r5;

        if $r5 != null goto label5;

        r6 = $r4;

     label5:
        $r3 = staticinvoke <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass valueOf(java.lang.String)>(r6);

        r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass pushClass> = $r3;

        $r4 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>(9);

        if $r4 != null goto label9;

     label6:
        $r3 = staticinvoke <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass valueOf(java.lang.String)>($r2);

        r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass syncClass> = $r3;

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>(13);

        $r7 = staticinvoke <com.fsck.k9.mailstore.LocalFolder$MoreMessages: com.fsck.k9.mailstore.LocalFolder$MoreMessages fromDatabaseName(java.lang.String)>($r2);

        r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalFolder$MoreMessages moreMessages> = $r7;

        return;

     label7:
        $z1 = 0;

        goto label1;

     label8:
        $z0 = 0;

        goto label2;

     label9:
        $r2 = $r4;

        goto label6;
    }
    public void purgeToVisibleLimit(com.fsck.k9.mailstore.MessageRemovalListener) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mailstore.MessageRemovalListener $r1;
        com.fsck.k9.mailstore.LocalFolder$6 $r2;
        boolean $z0;
        int $i0;
        com.fsck.k9.mailstore.LocalStore $r3;
        com.fsck.k9.mailstore.LockableDatabase $r4;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: com.fsck.k9.mailstore.MessageRemovalListener;

        $z0 = staticinvoke <com.fsck.k9.activity.Search: boolean isActive()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $i0 = r0.<com.fsck.k9.mailstore.LocalFolder: int visibleLimit>;

        if $i0 == 0 goto label2;

        virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(0);

        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

        $r4 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LockableDatabase getDatabase()>();

        $r2 = new com.fsck.k9.mailstore.LocalFolder$6;

        specialinvoke $r2.<com.fsck.k9.mailstore.LocalFolder$6: void <init>(com.fsck.k9.mailstore.LocalFolder,com.fsck.k9.mailstore.MessageRemovalListener)>(r0, $r1);

        virtualinvoke $r4.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(0, $r2);

     label2:
        return;
    }
    public void refresh(java.lang.String, com.fsck.k9.mailstore.LocalFolder$PreferencesHolder)
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        java.lang.String $r1, $r6, $r8;
        com.fsck.k9.mailstore.LocalFolder$PreferencesHolder $r2;
        com.fsck.k9.mailstore.LocalStore $r3;
        com.fsck.k9.preferences.Storage $r4;
        java.lang.StringBuilder $r5;
        com.fsck.k9.mail.Folder$FolderClass $r7, $r9;
        boolean $z0;
        java.lang.Exception r10, r12, r13, r14;
        java.lang.Object[] $r11;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.fsck.k9.mailstore.LocalFolder$PreferencesHolder;

        $r1 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String getPrefId(java.lang.String)>($r1);

        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

        $r4 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.preferences.Storage getStorage()>();

        $r5 = new java.lang.StringBuilder;

     label01:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".displayMode");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = $r2.<com.fsck.k9.mailstore.LocalFolder$PreferencesHolder: com.fsck.k9.mail.Folder$FolderClass displayClass>;

        $r8 = virtualinvoke $r7.<com.fsck.k9.mail.Folder$FolderClass: java.lang.String name()>();

        $r6 = virtualinvoke $r4.<com.fsck.k9.preferences.Storage: java.lang.String getString(java.lang.String,java.lang.String)>($r6, $r8);

        $r7 = staticinvoke <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass valueOf(java.lang.String)>($r6);

        $r2.<com.fsck.k9.mailstore.LocalFolder$PreferencesHolder: com.fsck.k9.mail.Folder$FolderClass displayClass> = $r7;

     label02:
        $r7 = $r2.<com.fsck.k9.mailstore.LocalFolder$PreferencesHolder: com.fsck.k9.mail.Folder$FolderClass displayClass>;

        $r9 = <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass NONE>;

        if $r7 != $r9 goto label03;

        $r7 = <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass NO_CLASS>;

        $r2.<com.fsck.k9.mailstore.LocalFolder$PreferencesHolder: com.fsck.k9.mail.Folder$FolderClass displayClass> = $r7;

     label03:
        $r5 = new java.lang.StringBuilder;

     label04:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".syncMode");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = $r2.<com.fsck.k9.mailstore.LocalFolder$PreferencesHolder: com.fsck.k9.mail.Folder$FolderClass syncClass>;

        $r8 = virtualinvoke $r7.<com.fsck.k9.mail.Folder$FolderClass: java.lang.String name()>();

        $r6 = virtualinvoke $r4.<com.fsck.k9.preferences.Storage: java.lang.String getString(java.lang.String,java.lang.String)>($r6, $r8);

        $r7 = staticinvoke <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass valueOf(java.lang.String)>($r6);

        $r2.<com.fsck.k9.mailstore.LocalFolder$PreferencesHolder: com.fsck.k9.mail.Folder$FolderClass syncClass> = $r7;

     label05:
        $r7 = $r2.<com.fsck.k9.mailstore.LocalFolder$PreferencesHolder: com.fsck.k9.mail.Folder$FolderClass syncClass>;

        $r9 = <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass NONE>;

        if $r7 != $r9 goto label06;

        $r7 = <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass INHERITED>;

        $r2.<com.fsck.k9.mailstore.LocalFolder$PreferencesHolder: com.fsck.k9.mail.Folder$FolderClass syncClass> = $r7;

     label06:
        $r5 = new java.lang.StringBuilder;

     label07:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".notifyMode");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = $r2.<com.fsck.k9.mailstore.LocalFolder$PreferencesHolder: com.fsck.k9.mail.Folder$FolderClass notifyClass>;

        $r8 = virtualinvoke $r7.<com.fsck.k9.mail.Folder$FolderClass: java.lang.String name()>();

        $r6 = virtualinvoke $r4.<com.fsck.k9.preferences.Storage: java.lang.String getString(java.lang.String,java.lang.String)>($r6, $r8);

        $r7 = staticinvoke <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass valueOf(java.lang.String)>($r6);

        $r2.<com.fsck.k9.mailstore.LocalFolder$PreferencesHolder: com.fsck.k9.mail.Folder$FolderClass notifyClass> = $r7;

     label08:
        $r7 = $r2.<com.fsck.k9.mailstore.LocalFolder$PreferencesHolder: com.fsck.k9.mail.Folder$FolderClass notifyClass>;

        $r9 = <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass NONE>;

        if $r7 != $r9 goto label09;

        $r7 = <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass INHERITED>;

        $r2.<com.fsck.k9.mailstore.LocalFolder$PreferencesHolder: com.fsck.k9.mail.Folder$FolderClass notifyClass> = $r7;

     label09:
        $r5 = new java.lang.StringBuilder;

     label10:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".pushMode");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = $r2.<com.fsck.k9.mailstore.LocalFolder$PreferencesHolder: com.fsck.k9.mail.Folder$FolderClass pushClass>;

        $r8 = virtualinvoke $r7.<com.fsck.k9.mail.Folder$FolderClass: java.lang.String name()>();

        $r6 = virtualinvoke $r4.<com.fsck.k9.preferences.Storage: java.lang.String getString(java.lang.String,java.lang.String)>($r6, $r8);

        $r7 = staticinvoke <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass valueOf(java.lang.String)>($r6);

        $r2.<com.fsck.k9.mailstore.LocalFolder$PreferencesHolder: com.fsck.k9.mail.Folder$FolderClass pushClass> = $r7;

     label11:
        $r7 = $r2.<com.fsck.k9.mailstore.LocalFolder$PreferencesHolder: com.fsck.k9.mail.Folder$FolderClass pushClass>;

        $r9 = <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass NONE>;

        if $r7 != $r9 goto label12;

        $r7 = <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass INHERITED>;

        $r2.<com.fsck.k9.mailstore.LocalFolder$PreferencesHolder: com.fsck.k9.mail.Folder$FolderClass pushClass> = $r7;

     label12:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".inTopGroup");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = $r2.<com.fsck.k9.mailstore.LocalFolder$PreferencesHolder: boolean inTopGroup>;

        $z0 = virtualinvoke $r4.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>($r6, $z0);

        $r2.<com.fsck.k9.mailstore.LocalFolder$PreferencesHolder: boolean inTopGroup> = $z0;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".integrate");

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = $r2.<com.fsck.k9.mailstore.LocalFolder$PreferencesHolder: boolean integrate>;

        $z0 = virtualinvoke $r4.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>($r1, $z0);

        $r2.<com.fsck.k9.mailstore.LocalFolder$PreferencesHolder: boolean integrate> = $z0;

        return;

     label13:
        r10 := @caughtexception;

        $r11 = newarray (java.lang.Object)[1];

        $r6 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String getName()>();

        $r11[0] = $r6;

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r10, "Unable to load displayMode for %s", $r11);

        goto label02;

     label14:
        r12 := @caughtexception;

        $r11 = newarray (java.lang.Object)[1];

        $r6 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String getName()>();

        $r11[0] = $r6;

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r12, "Unable to load syncMode for %s", $r11);

        goto label05;

     label15:
        r13 := @caughtexception;

        $r11 = newarray (java.lang.Object)[1];

        $r6 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String getName()>();

        $r11[0] = $r6;

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r13, "Unable to load notifyMode for %s", $r11);

        goto label08;

     label16:
        r14 := @caughtexception;

        $r11 = newarray (java.lang.Object)[1];

        $r6 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String getName()>();

        $r11[0] = $r6;

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r14, "Unable to load pushMode for %s", $r11);

        goto label11;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label04 to label05 with label14;
        catch java.lang.Exception from label07 to label08 with label15;
        catch java.lang.Exception from label10 to label11 with label16;
    }
    public void save() throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mailstore.LocalStore $r1;
        com.fsck.k9.preferences.Storage $r2;
        com.fsck.k9.preferences.StorageEditor $r3;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

        $r2 = virtualinvoke $r1.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.preferences.Storage getStorage()>();

        $r3 = virtualinvoke $r2.<com.fsck.k9.preferences.Storage: com.fsck.k9.preferences.StorageEditor edit()>();

        virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void save(com.fsck.k9.preferences.StorageEditor)>($r3);

        virtualinvoke $r3.<com.fsck.k9.preferences.StorageEditor: boolean commit()>();

        return;
    }
    public void save(com.fsck.k9.preferences.StorageEditor) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.preferences.StorageEditor $r1;
        java.lang.String $r2, $r6, $r7;
        com.fsck.k9.mail.Folder$FolderClass $r3, $r4;
        com.fsck.k9.Account $r5;
        boolean $z0;
        java.lang.StringBuilder $r8;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: com.fsck.k9.preferences.StorageEditor;

        $r2 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String getPrefId()>();

        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass displayClass>;

        $r4 = <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass NO_CLASS>;

        if $r3 != $r4 goto label5;

        $r5 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.Account getAccount()>();

        $r6 = virtualinvoke $r5.<com.fsck.k9.Account: java.lang.String getInboxFolderName()>();

        $r7 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label5;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".displayMode");

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor remove(java.lang.String)>($r6);

     label1:
        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass syncClass>;

        $r4 = <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass INHERITED>;

        if $r3 != $r4 goto label6;

        $r5 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.Account getAccount()>();

        $r6 = virtualinvoke $r5.<com.fsck.k9.Account: java.lang.String getInboxFolderName()>();

        $r7 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label6;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".syncMode");

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor remove(java.lang.String)>($r6);

     label2:
        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass notifyClass>;

        $r4 = <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass INHERITED>;

        if $r3 != $r4 goto label7;

        $r5 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.Account getAccount()>();

        $r6 = virtualinvoke $r5.<com.fsck.k9.Account: java.lang.String getInboxFolderName()>();

        $r7 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".notifyMode");

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor remove(java.lang.String)>($r6);

     label3:
        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass pushClass>;

        $r4 = <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass SECOND_CLASS>;

        if $r3 != $r4 goto label8;

        $r5 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.Account getAccount()>();

        $r6 = virtualinvoke $r5.<com.fsck.k9.Account: java.lang.String getInboxFolderName()>();

        $r7 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label8;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".pushMode");

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor remove(java.lang.String)>($r6);

     label4:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".inTopGroup");

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = r0.<com.fsck.k9.mailstore.LocalFolder: boolean isInTopGroup>;

        virtualinvoke $r1.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>($r6, $z0);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".integrate");

        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = r0.<com.fsck.k9.mailstore.LocalFolder: boolean isIntegrate>;

        virtualinvoke $r1.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>($r2, $z0);

        return;

     label5:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".displayMode");

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass displayClass>;

        $r7 = virtualinvoke $r3.<com.fsck.k9.mail.Folder$FolderClass: java.lang.String name()>();

        virtualinvoke $r1.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putString(java.lang.String,java.lang.String)>($r6, $r7);

        goto label1;

     label6:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".syncMode");

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass syncClass>;

        $r7 = virtualinvoke $r3.<com.fsck.k9.mail.Folder$FolderClass: java.lang.String name()>();

        virtualinvoke $r1.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putString(java.lang.String,java.lang.String)>($r6, $r7);

        goto label2;

     label7:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".notifyMode");

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass notifyClass>;

        $r7 = virtualinvoke $r3.<com.fsck.k9.mail.Folder$FolderClass: java.lang.String name()>();

        virtualinvoke $r1.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putString(java.lang.String,java.lang.String)>($r6, $r7);

        goto label3;

     label8:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".pushMode");

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass pushClass>;

        $r7 = virtualinvoke $r3.<com.fsck.k9.mail.Folder$FolderClass: java.lang.String name()>();

        virtualinvoke $r1.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putString(java.lang.String,java.lang.String)>($r6, $r7);

        goto label4;
    }
    public void setDisplayClass(com.fsck.k9.mail.Folder$FolderClass) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mail.Folder$FolderClass $r1;
        java.lang.String $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: com.fsck.k9.mail.Folder$FolderClass;

        r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass displayClass> = $r1;

        $r1 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass displayClass>;

        $r2 = virtualinvoke $r1.<com.fsck.k9.mail.Folder$FolderClass: java.lang.String name()>();

        specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void updateFolderColumn(java.lang.String,java.lang.Object)>("display_class", $r2);

        return;
    }
    public void setFlags(java.util.List, java.util.Set, boolean) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        java.util.List r1;
        java.util.Set r2;
        boolean $z0;
        com.fsck.k9.mailstore.LockableDatabase$WrappedException r3;
        com.fsck.k9.mailstore.LocalFolder$20 $r4;
        com.fsck.k9.mailstore.LocalStore $r5;
        com.fsck.k9.mailstore.LockableDatabase $r6;
        java.lang.Throwable $r7;
        com.fsck.k9.mail.MessagingException $r8;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.Set;

        $z0 := @parameter2: boolean;

        virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(0);

        $r5 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

     label1:
        $r6 = virtualinvoke $r5.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LockableDatabase getDatabase()>();

     label2:
        $r4 = new com.fsck.k9.mailstore.LocalFolder$20;

     label3:
        specialinvoke $r4.<com.fsck.k9.mailstore.LocalFolder$20: void <init>(com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.Set,boolean)>(r0, r1, r2, $z0);

        virtualinvoke $r6.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(1, $r4);

     label4:
        return;

     label5:
        r3 := @caughtexception;

        $r7 = virtualinvoke r3.<com.fsck.k9.mailstore.LockableDatabase$WrappedException: java.lang.Throwable getCause()>();

        $r8 = (com.fsck.k9.mail.MessagingException) $r7;

        throw $r8;

        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label1 to label2 with label5;
        catch com.fsck.k9.mailstore.LockableDatabase$WrappedException from label3 to label4 with label5;
    }
    public void setFlags(java.util.Set, boolean) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        java.util.Set r1;
        boolean $z0, $z1;
        java.util.List $r2;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        com.fsck.k9.mail.Message r5;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        r1 := @parameter0: java.util.Set;

        $z0 := @parameter1: boolean;

        virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(0);

        $r2 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: java.util.List getMessages(com.fsck.k9.mail.MessageRetrievalListener)>(null);

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.fsck.k9.mail.Message) $r4;

        virtualinvoke r5.<com.fsck.k9.mail.Message: void setFlags(java.util.Set,boolean)>(r1, $z0);

        goto label1;

     label2:
        return;
    }
    public void setInTopGroup(boolean) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        boolean $z0;
        java.lang.Integer $r1;
        byte $b0;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $z0 := @parameter0: boolean;

        r0.<com.fsck.k9.mailstore.LocalFolder: boolean isInTopGroup> = $z0;

        $z0 = r0.<com.fsck.k9.mailstore.LocalFolder: boolean isInTopGroup>;

        if $z0 == 0 goto label2;

        $b0 = 1;

     label1:
        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b0);

        specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void updateFolderColumn(java.lang.String,java.lang.Object)>("top_group", $r1);

        return;

     label2:
        $b0 = 0;

        goto label1;
    }
    public void setIntegrate(boolean) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        boolean $z0;
        java.lang.Integer $r1;
        byte $b0;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $z0 := @parameter0: boolean;

        r0.<com.fsck.k9.mailstore.LocalFolder: boolean isIntegrate> = $z0;

        $z0 = r0.<com.fsck.k9.mailstore.LocalFolder: boolean isIntegrate>;

        if $z0 == 0 goto label2;

        $b0 = 1;

     label1:
        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b0);

        specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void updateFolderColumn(java.lang.String,java.lang.Object)>("integrate", $r1);

        return;

     label2:
        $b0 = 0;

        goto label1;
    }
    public void setLastChecked(long) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        long $l0;
        com.fsck.k9.mail.MessagingException r1;
        java.lang.Long $r2;
        com.fsck.k9.mailstore.LockableDatabase$WrappedException $r3;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $l0 := @parameter0: long;

     label1:
        virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(0);

        staticinvoke <com.fsck.k9.mailstore.LocalFolder: void access$801(com.fsck.k9.mailstore.LocalFolder,long)>(r0, $l0);

     label2:
        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void updateFolderColumn(java.lang.String,java.lang.Object)>("last_updated", $r2);

        return;

     label3:
        r1 := @caughtexception;

        $r3 = new com.fsck.k9.mailstore.LockableDatabase$WrappedException;

        specialinvoke $r3.<com.fsck.k9.mailstore.LockableDatabase$WrappedException: void <init>(java.lang.Exception)>(r1);

        throw $r3;

        catch com.fsck.k9.mail.MessagingException from label1 to label2 with label3;
    }
    public void setLastPush(long) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        long $l0;
        com.fsck.k9.mail.MessagingException r1;
        java.lang.Long $r2;
        com.fsck.k9.mailstore.LockableDatabase$WrappedException $r3;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $l0 := @parameter0: long;

     label1:
        virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(0);

        staticinvoke <com.fsck.k9.mailstore.LocalFolder: void access$901(com.fsck.k9.mailstore.LocalFolder,long)>(r0, $l0);

     label2:
        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void updateFolderColumn(java.lang.String,java.lang.Object)>("last_pushed", $r2);

        return;

     label3:
        r1 := @caughtexception;

        $r3 = new com.fsck.k9.mailstore.LockableDatabase$WrappedException;

        specialinvoke $r3.<com.fsck.k9.mailstore.LockableDatabase$WrappedException: void <init>(java.lang.Exception)>(r1);

        throw $r3;

        catch com.fsck.k9.mail.MessagingException from label1 to label2 with label3;
    }
    public void setLastSelectedFolderName(java.lang.String)
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        java.lang.String $r1;
        com.fsck.k9.Account $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.Account getAccount()>();

        virtualinvoke $r2.<com.fsck.k9.Account: void setLastSelectedFolderName(java.lang.String)>($r1);

        return;
    }
    public void setMoreMessages(com.fsck.k9.mailstore.LocalFolder$MoreMessages) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mailstore.LocalFolder$MoreMessages $r1;
        java.lang.String $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: com.fsck.k9.mailstore.LocalFolder$MoreMessages;

        r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalFolder$MoreMessages moreMessages> = $r1;

        $r2 = virtualinvoke $r1.<com.fsck.k9.mailstore.LocalFolder$MoreMessages: java.lang.String getDatabaseName()>();

        specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void updateFolderColumn(java.lang.String,java.lang.Object)>("more_messages", $r2);

        return;
    }
    public void setNotifyClass(com.fsck.k9.mail.Folder$FolderClass) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mail.Folder$FolderClass $r1;
        java.lang.String $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: com.fsck.k9.mail.Folder$FolderClass;

        r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass notifyClass> = $r1;

        $r1 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass notifyClass>;

        $r2 = virtualinvoke $r1.<com.fsck.k9.mail.Folder$FolderClass: java.lang.String name()>();

        specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void updateFolderColumn(java.lang.String,java.lang.Object)>("notify_class", $r2);

        return;
    }
    public void setPushClass(com.fsck.k9.mail.Folder$FolderClass) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mail.Folder$FolderClass $r1;
        java.lang.String $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: com.fsck.k9.mail.Folder$FolderClass;

        r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass pushClass> = $r1;

        $r1 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass pushClass>;

        $r2 = virtualinvoke $r1.<com.fsck.k9.mail.Folder$FolderClass: java.lang.String name()>();

        specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void updateFolderColumn(java.lang.String,java.lang.Object)>("push_class", $r2);

        return;
    }
    public void setPushState(java.lang.String) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        java.lang.String $r1;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: java.lang.String;

        r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String pushState> = $r1;

        specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void updateFolderColumn(java.lang.String,java.lang.Object)>("push_state", $r1);

        return;
    }
    public void setStatus(java.lang.String) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        java.lang.String $r1;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void updateFolderColumn(java.lang.String,java.lang.Object)>("status", $r1);

        return;
    }
    public void setSyncClass(com.fsck.k9.mail.Folder$FolderClass) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mail.Folder$FolderClass $r1;
        java.lang.String $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: com.fsck.k9.mail.Folder$FolderClass;

        r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass syncClass> = $r1;

        $r1 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass syncClass>;

        $r2 = virtualinvoke $r1.<com.fsck.k9.mail.Folder$FolderClass: java.lang.String name()>();

        specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void updateFolderColumn(java.lang.String,java.lang.Object)>("poll_class", $r2);

        return;
    }
    public void setVisibleLimit(int) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        int $i0, $i1;
        java.lang.Integer $r1;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $i0 := @parameter0: int;

        $i1 = r0.<com.fsck.k9.mailstore.LocalFolder: int visibleLimit>;

        specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void updateMoreMessagesOnVisibleLimitChange(int,int)>($i0, $i1);

        r0.<com.fsck.k9.mailstore.LocalFolder: int visibleLimit> = $i0;

        $i0 = r0.<com.fsck.k9.mailstore.LocalFolder: int visibleLimit>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: void updateFolderColumn(java.lang.String,java.lang.Object)>("visible_limit", $r1);

        return;
    }
    public com.fsck.k9.mailstore.LocalMessage storeSmallMessage(com.fsck.k9.mail.Message, java.lang.Runnable) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mail.Message $r1;
        java.lang.Runnable $r2;
        com.fsck.k9.mailstore.LocalFolder$15 $r3;
        com.fsck.k9.mailstore.LocalStore $r4;
        com.fsck.k9.mailstore.LockableDatabase $r5;
        java.lang.Object $r6;
        com.fsck.k9.mailstore.LocalMessage $r7;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 := @parameter0: com.fsck.k9.mail.Message;

        $r2 := @parameter1: java.lang.Runnable;

        $r4 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

        $r5 = virtualinvoke $r4.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LockableDatabase getDatabase()>();

        $r3 = new com.fsck.k9.mailstore.LocalFolder$15;

        specialinvoke $r3.<com.fsck.k9.mailstore.LocalFolder$15: void <init>(com.fsck.k9.mailstore.LocalFolder,com.fsck.k9.mail.Message,java.lang.Runnable)>(r0, $r1, $r2);

        $r6 = virtualinvoke $r5.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(1, $r3);

        $r7 = (com.fsck.k9.mailstore.LocalMessage) $r6;

        return $r7;
    }
    public boolean syncRemoteDeletions()
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.Account $r1;
        boolean $z0;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 = specialinvoke r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.Account getAccount()>();

        $z0 = virtualinvoke $r1.<com.fsck.k9.Account: boolean syncRemoteDeletions()>();

        return $z0;
    }
    public void updateLastUid() throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder r0;
        com.fsck.k9.mailstore.LocalStore $r1;
        com.fsck.k9.mailstore.LockableDatabase $r2;
        com.fsck.k9.mailstore.LocalFolder$26 $r3;
        java.lang.Object $r4;
        java.lang.Integer r5;
        java.lang.Object[] $r6;
        java.lang.String $r7;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder;

        $r1 = r0.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore localStore>;

        $r2 = virtualinvoke $r1.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LockableDatabase getDatabase()>();

        $r3 = new com.fsck.k9.mailstore.LocalFolder$26;

        specialinvoke $r3.<com.fsck.k9.mailstore.LocalFolder$26: void <init>(com.fsck.k9.mailstore.LocalFolder)>(r0);

        $r4 = virtualinvoke $r2.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(0, $r3);

        r5 = (java.lang.Integer) $r4;

        $r6 = newarray (java.lang.Object)[2];

        $r7 = r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.String name>;

        $r6[0] = $r7;

        $r6[1] = r5;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Updated last UID for folder %s to %s", $r6);

        r0.<com.fsck.k9.mailstore.LocalFolder: java.lang.Integer lastUid> = r5;

        return;
    }
