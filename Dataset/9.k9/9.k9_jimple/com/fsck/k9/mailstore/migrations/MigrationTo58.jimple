com.fsck.k9.mailstore.migrations.MigrationTo58 extends java.lang.Object
    void <init>()
    {
        com.fsck.k9.mailstore.migrations.MigrationTo58 r0;

        r0 := @this: com.fsck.k9.mailstore.migrations.MigrationTo58;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private static void cleanUpFtsTable(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase $r0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        staticinvoke <com.fsck.k9.mailstore.migrations.MigrationTo56: void cleanUpFtsTable(android.database.sqlite.SQLiteDatabase)>($r0);

        return;
    }
    private static void cleanUpMessagePartsTable(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase $r0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DELETE FROM message_parts WHERE root NOT IN (SELECT message_part_id FROM messages WHERE deleted = 0 AND message_part_id IS NOT NULL)");

        return;
    }
    static void cleanUpOrphanedData(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase $r0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        staticinvoke <com.fsck.k9.mailstore.migrations.MigrationTo58: void cleanUpFtsTable(android.database.sqlite.SQLiteDatabase)>($r0);

        staticinvoke <com.fsck.k9.mailstore.migrations.MigrationTo58: void cleanUpMessagePartsTable(android.database.sqlite.SQLiteDatabase)>($r0);

        return;
    }
    static void createDeleteMessageTrigger(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase $r0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TRIGGER IF EXISTS delete_message");

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TRIGGER delete_message BEFORE DELETE ON messages BEGIN DELETE FROM message_parts WHERE root = OLD.message_part_id; DELETE FROM messages_fulltext WHERE docid = OLD.id; END");

        return;
    }
