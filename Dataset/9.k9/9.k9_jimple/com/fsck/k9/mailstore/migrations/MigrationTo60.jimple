com.fsck.k9.mailstore.migrations.MigrationTo60 extends java.lang.Object
private static final java.lang.String PENDING_COMMAND_APPEND
private static final java.lang.String PENDING_COMMAND_EMPTY_TRASH
private static final java.lang.String PENDING_COMMAND_EXPUNGE
private static final java.lang.String PENDING_COMMAND_MARK_ALL_AS_READ
private static final java.lang.String PENDING_COMMAND_MOVE_OR_COPY
private static final java.lang.String PENDING_COMMAND_MOVE_OR_COPY_BULK
private static final java.lang.String PENDING_COMMAND_MOVE_OR_COPY_BULK_NEW
private static final java.lang.String PENDING_COMMAND_SET_FLAG
private static final java.lang.String PENDING_COMMAND_SET_FLAG_BULK
    void <init>()
    {
        com.fsck.k9.mailstore.migrations.MigrationTo60 r0;

        r0 := @this: com.fsck.k9.mailstore.migrations.MigrationTo60;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private static boolean columnExists(android.database.sqlite.SQLiteDatabase, java.lang.String, java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase $r0;
        java.lang.String $r1, $r2;
        java.lang.StringBuilder $r3;
        android.database.Cursor $r4;
        boolean z0, $z1;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PRAGMA table_info(");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r1, null);

        z0 = 0;

     label1:
        $z1 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label2;

        $r1 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>(1);

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label1;

        z0 = 1;

     label2:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        return z0;
    }
    private static java.lang.String fastUrlDecode(java.lang.String)
    {
        java.lang.String $r0;
        byte b0;
        int i1, i2, i3, $i4, $i5;
        java.nio.charset.Charset $r1;
        byte[] $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r1);

        i2 = 0;

        i3 = 0;

        i1 = lengthof $r2;

     label1:
        if i3 >= i1 goto label7;

        b0 = $r2[i3];

        if b0 != 37 goto label5;

        $i4 = i3 + 1;

        b0 = $r2[$i4];

        $i4 = b0 + -48;

        $i5 = i3 + 2;

        b0 = $r2[$i5];

        $i5 = b0 + -48;

        if $i4 <= 9 goto label2;

        $i4 = $i4 + -7;

     label2:
        if $i5 <= 9 goto label3;

        $i5 = $i5 + -7;

     label3:
        $i4 = $i4 << 4;

        $i4 = $i4 | $i5;

        b0 = (byte) $i4;

        $r2[i2] = b0;

        i3 = i3 + 2;

     label4:
        i2 = i2 + 1;

        i3 = i3 + 1;

        goto label1;

     label5:
        if b0 != 43 goto label6;

        $r2[i2] = 32;

        goto label4;

     label6:
        b0 = $r2[i3];

        $r2[i2] = b0;

        goto label4;

     label7:
        $r0 = new java.lang.String;

        $r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");

        specialinvoke $r0.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>($r2, 0, i2, $r1);

        return $r0;
    }
    private static java.util.List getPendingCommands(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase $r0;
        java.lang.String[] $r1, $r7;
        com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand r2;
        java.util.ArrayList r3;
        android.database.Cursor r4, $r5;
        boolean $z0;
        java.lang.String $r6;
        int i0, $i1;
        java.lang.Throwable $r8;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r4 = null;

     label01:
        $r1 = newarray (java.lang.String)[3];

        $r1[0] = "id";

        $r1[1] = "command";

        $r1[2] = "arguments";

        $r5 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("pending_commands", $r1, null, null, null, null, "id ASC");

     label02:
        r4 = $r5;

     label03:
        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

     label04:
        $z0 = interfaceinvoke $r5.<android.database.Cursor: boolean moveToNext()>();

     label05:
        if $z0 == 0 goto label15;

     label06:
        r2 = new com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand;

        specialinvoke r2.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: void <init>()>();

        $r6 = interfaceinvoke $r5.<android.database.Cursor: java.lang.String getString(int)>(1);

        r2.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String command> = $r6;

        $r6 = interfaceinvoke $r5.<android.database.Cursor: java.lang.String getString(int)>(2);

        $r1 = virtualinvoke $r6.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        r2.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments> = $r1;

     label07:
        i0 = 0;

     label08:
        $r1 = r2.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        $i1 = lengthof $r1;

     label09:
        if i0 >= $i1 goto label12;

     label10:
        $r1 = r2.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        $r7 = r2.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        $r6 = $r7[i0];

        $r6 = staticinvoke <com.fsck.k9.mailstore.migrations.MigrationTo60: java.lang.String fastUrlDecode(java.lang.String)>($r6);

        $r1[i0] = $r6;

     label11:
        i0 = i0 + 1;

        goto label08;

     label12:
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r2);

     label13:
        goto label04;

     label14:
        $r8 := @caughtexception;

        staticinvoke <com.fsck.k9.helper.Utility: void closeQuietly(android.database.Cursor)>(r4);

        throw $r8;

     label15:
        staticinvoke <com.fsck.k9.helper.Utility: void closeQuietly(android.database.Cursor)>($r5);

        return r3;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label05 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }
    private static com.fsck.k9.controller.MessagingControllerCommands$PendingCommand migrateCommandAppend(com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand)
    {
        com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand $r0;
        java.lang.String r1, r2;
        com.fsck.k9.controller.MessagingControllerCommands$PendingAppend $r3;
        java.lang.String[] $r4;

        $r0 := @parameter0: com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand;

        $r4 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        r1 = $r4[0];

        $r4 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        r2 = $r4[1];

        $r3 = staticinvoke <com.fsck.k9.controller.MessagingControllerCommands$PendingAppend: com.fsck.k9.controller.MessagingControllerCommands$PendingAppend create(java.lang.String,java.lang.String)>(r1, r2);

        return $r3;
    }
    private static com.fsck.k9.controller.MessagingControllerCommands$PendingCommand migrateCommandEmptyTrash()
    {
        com.fsck.k9.controller.MessagingControllerCommands$PendingEmptyTrash $r0;

        $r0 = staticinvoke <com.fsck.k9.controller.MessagingControllerCommands$PendingEmptyTrash: com.fsck.k9.controller.MessagingControllerCommands$PendingEmptyTrash create()>();

        return $r0;
    }
    private static com.fsck.k9.controller.MessagingControllerCommands$PendingCommand migrateCommandExpunge(com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand)
    {
        com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand $r0;
        java.lang.String r1;
        com.fsck.k9.controller.MessagingControllerCommands$PendingExpunge $r2;
        java.lang.String[] $r3;

        $r0 := @parameter0: com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand;

        $r3 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        r1 = $r3[0];

        $r2 = staticinvoke <com.fsck.k9.controller.MessagingControllerCommands$PendingExpunge: com.fsck.k9.controller.MessagingControllerCommands$PendingExpunge create(java.lang.String)>(r1);

        return $r2;
    }
    private static com.fsck.k9.controller.MessagingControllerCommands$PendingCommand migrateCommandMarkAllAsRead(com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand)
    {
        com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand $r0;
        com.fsck.k9.controller.MessagingControllerCommands$PendingMarkAllAsRead $r1;
        java.lang.String[] $r2;
        java.lang.String $r3;

        $r0 := @parameter0: com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand;

        $r2 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        $r3 = $r2[0];

        $r1 = staticinvoke <com.fsck.k9.controller.MessagingControllerCommands$PendingMarkAllAsRead: com.fsck.k9.controller.MessagingControllerCommands$PendingMarkAllAsRead create(java.lang.String)>($r3);

        return $r1;
    }
    private static com.fsck.k9.controller.MessagingControllerCommands$PendingCommand migrateCommandMoveOrCopy(com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand)
    {
        com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand $r0;
        java.lang.String r1, r2, r3, $r5;
        java.lang.String[] $r4;
        boolean $z0;
        java.util.List $r6;
        com.fsck.k9.controller.MessagingControllerCommands$PendingMoveOrCopy $r7;

        $r0 := @parameter0: com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand;

        $r4 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        r2 = $r4[0];

        $r4 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        r3 = $r4[1];

        $r4 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        r1 = $r4[2];

        $r4 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        $r5 = $r4[3];

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r5);

        $r6 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r3);

        $r7 = staticinvoke <com.fsck.k9.controller.MessagingControllerCommands$PendingMoveOrCopy: com.fsck.k9.controller.MessagingControllerCommands$PendingMoveOrCopy create(java.lang.String,java.lang.String,boolean,java.util.List)>(r2, r1, $z0, $r6);

        return $r7;
    }
    private static com.fsck.k9.controller.MessagingControllerCommands$PendingCommand migrateCommandMoveOrCopyBulk(com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand)
    {
        com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand $r0, r1;
        int i0, $i1;
        java.lang.String[] $r2, $r3;
        java.lang.String $r4;
        com.fsck.k9.controller.MessagingControllerCommands$PendingCommand $r5;

        $r0 := @parameter0: com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand;

        $r2 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        i0 = lengthof $r2;

        r1 = new com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand;

        specialinvoke r1.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: void <init>()>();

        r1.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String command> = "com.fsck.k9.MessagingController.moveOrCopyBulkNew";

        $i1 = i0 + 1;

        $r2 = newarray (java.lang.String)[$i1];

        r1.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments> = $r2;

        $r2 = r1.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        $r3 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        $r4 = $r3[0];

        $r2[0] = $r4;

        $r2 = r1.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        $r3 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        $r4 = $r3[1];

        $r2[1] = $r4;

        $r2 = r1.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        $r3 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        $r4 = $r3[2];

        $r2[2] = $r4;

        $r2 = r1.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>(0);

        $r2[3] = $r4;

        $r2 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        $r3 = r1.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        i0 = i0 + -3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 3, $r3, 4, i0);

        $r5 = staticinvoke <com.fsck.k9.mailstore.migrations.MigrationTo60: com.fsck.k9.controller.MessagingControllerCommands$PendingCommand migratePendingCommand(com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand)>(r1);

        return $r5;
    }
    private static com.fsck.k9.controller.MessagingControllerCommands$PendingCommand migrateCommandMoveOrCopyBulkNew(com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand)
    {
        com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand $r0;
        java.lang.String r1, r2, $r6, $r7;
        int i0, i1, $i2;
        java.util.HashMap r3;
        java.util.ArrayList r4;
        java.lang.String[] $r5;
        boolean $z0, $z1;
        com.fsck.k9.controller.MessagingControllerCommands$PendingMoveOrCopy $r8;
        java.util.List $r9;

        $r0 := @parameter0: com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand;

        $r5 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        r2 = $r5[0];

        $r5 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        r1 = $r5[1];

        $r5 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        $r6 = $r5[2];

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r6);

        $r5 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        $r6 = $r5[3];

        $z1 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r6);

        if $z1 == 0 goto label3;

        r3 = new java.util.HashMap;

        specialinvoke r3.<java.util.HashMap: void <init>()>();

        $r5 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        i0 = lengthof $r5;

        i0 = i0 + -4;

        i0 = i0 / 2;

        i1 = 4;

     label1:
        $i2 = i0 + 4;

        if i1 >= $i2 goto label2;

        $r5 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        $r6 = $r5[i1];

        $r5 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        $i2 = i1 + i0;

        $r7 = $r5[$i2];

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r8 = staticinvoke <com.fsck.k9.controller.MessagingControllerCommands$PendingMoveOrCopy: com.fsck.k9.controller.MessagingControllerCommands$PendingMoveOrCopy create(java.lang.String,java.lang.String,boolean,java.util.Map)>(r2, r1, $z0, r3);

        return $r8;

     label3:
        r4 = new java.util.ArrayList;

        $r5 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        i0 = lengthof $r5;

        i0 = i0 + -4;

        specialinvoke r4.<java.util.ArrayList: void <init>(int)>(i0);

        $r5 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        $r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);

        $r5 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        i0 = lengthof $r5;

        $r9 = interfaceinvoke $r9.<java.util.List: java.util.List subList(int,int)>(4, i0);

        interfaceinvoke r4.<java.util.List: boolean addAll(java.util.Collection)>($r9);

        $r8 = staticinvoke <com.fsck.k9.controller.MessagingControllerCommands$PendingMoveOrCopy: com.fsck.k9.controller.MessagingControllerCommands$PendingMoveOrCopy create(java.lang.String,java.lang.String,boolean,java.util.List)>(r2, r1, $z0, r4);

        return $r8;
    }
    private static com.fsck.k9.controller.MessagingControllerCommands$PendingCommand migrateCommandSetFlag(com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand)
    {
        com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand $r0;
        java.lang.String r1, r2, $r4;
        java.lang.String[] $r3;
        boolean $z0;
        com.fsck.k9.mail.Flag $r5;
        java.util.List $r6;
        com.fsck.k9.controller.MessagingControllerCommands$PendingSetFlag $r7;

        $r0 := @parameter0: com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand;

        $r3 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        r1 = $r3[0];

        $r3 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        r2 = $r3[1];

        $r3 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        $r4 = $r3[2];

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r4);

        $r3 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        $r4 = $r3[3];

        $r5 = staticinvoke <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag valueOf(java.lang.String)>($r4);

        $r6 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r2);

        $r7 = staticinvoke <com.fsck.k9.controller.MessagingControllerCommands$PendingSetFlag: com.fsck.k9.controller.MessagingControllerCommands$PendingSetFlag create(java.lang.String,boolean,com.fsck.k9.mail.Flag,java.util.List)>(r1, $z0, $r5, $r6);

        return $r7;
    }
    private static com.fsck.k9.controller.MessagingControllerCommands$PendingCommand migrateCommandSetFlagBulk(com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand)
    {
        com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand $r0;
        java.lang.String r1, $r4;
        java.util.ArrayList r2;
        java.lang.String[] $r3;
        boolean $z0;
        com.fsck.k9.mail.Flag $r5;
        int $i0;
        java.util.List $r6;
        com.fsck.k9.controller.MessagingControllerCommands$PendingSetFlag $r7;

        $r0 := @parameter0: com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand;

        $r3 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        r1 = $r3[0];

        $r3 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        $r4 = $r3[1];

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r4);

        $r3 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        $r4 = $r3[2];

        $r5 = staticinvoke <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag valueOf(java.lang.String)>($r4);

        r2 = new java.util.ArrayList;

        $r3 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        $i0 = lengthof $r3;

        $i0 = $i0 + -3;

        specialinvoke r2.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        $r3 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String[] arguments>;

        $i0 = lengthof $r3;

        $r6 = interfaceinvoke $r6.<java.util.List: java.util.List subList(int,int)>(3, $i0);

        interfaceinvoke r2.<java.util.List: boolean addAll(java.util.Collection)>($r6);

        $r7 = staticinvoke <com.fsck.k9.controller.MessagingControllerCommands$PendingSetFlag: com.fsck.k9.controller.MessagingControllerCommands$PendingSetFlag create(java.lang.String,boolean,com.fsck.k9.mail.Flag,java.util.List)>(r1, $z0, $r5, r2);

        return $r7;
    }
    static com.fsck.k9.controller.MessagingControllerCommands$PendingCommand migratePendingCommand(com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand)
    {
        com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand $r0;
        java.lang.String $r1;
        byte $b0;
        int $i1;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;
        com.fsck.k9.controller.MessagingControllerCommands$PendingCommand $r3;

        $r0 := @parameter0: com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand;

        $r1 = $r0.<com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand: java.lang.String command>;

        $b0 = -1;

        $i1 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        lookupswitch($i1)
        {
            case -2086889475: goto label07;
            case -2007773122: goto label04;
            case -1666486004: goto label05;
            case -1251749572: goto label03;
            case -949191366: goto label06;
            case -872661917: goto label08;
            case -664973582: goto label11;
            case -355209141: goto label09;
            case 273671949: goto label10;
            default: goto label01;
        };

     label01:
        lookupswitch($b0)
        {
            case 0: goto label12;
            case 1: goto label13;
            case 2: goto label14;
            case 3: goto label15;
            case 4: goto label16;
            case 5: goto label17;
            case 6: goto label18;
            case 7: goto label19;
            case 8: goto label20;
            default: goto label02;
        };

     label02:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Tried to migrate unknown pending command!");

        throw $r2;

     label03:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("com.fsck.k9.MessagingController.append");

        if $z0 == 0 goto label01;

        $b0 = 0;

        goto label01;

     label04:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("com.fsck.k9.MessagingController.setFlagBulk");

        if $z0 == 0 goto label01;

        $b0 = 1;

        goto label01;

     label05:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("com.fsck.k9.MessagingController.setFlag");

        if $z0 == 0 goto label01;

        $b0 = 2;

        goto label01;

     label06:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("com.fsck.k9.MessagingController.markAllAsRead");

        if $z0 == 0 goto label01;

        $b0 = 3;

        goto label01;

     label07:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("com.fsck.k9.MessagingController.moveOrCopyBulk");

        if $z0 == 0 goto label01;

        $b0 = 4;

        goto label01;

     label08:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("com.fsck.k9.MessagingController.moveOrCopyBulkNew");

        if $z0 == 0 goto label01;

        $b0 = 5;

        goto label01;

     label09:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("com.fsck.k9.MessagingController.moveOrCopy");

        if $z0 == 0 goto label01;

        $b0 = 6;

        goto label01;

     label10:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("com.fsck.k9.MessagingController.emptyTrash");

        if $z0 == 0 goto label01;

        $b0 = 7;

        goto label01;

     label11:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("com.fsck.k9.MessagingController.expunge");

        if $z0 == 0 goto label01;

        $b0 = 8;

        goto label01;

     label12:
        $r3 = staticinvoke <com.fsck.k9.mailstore.migrations.MigrationTo60: com.fsck.k9.controller.MessagingControllerCommands$PendingCommand migrateCommandAppend(com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand)>($r0);

        return $r3;

     label13:
        $r3 = staticinvoke <com.fsck.k9.mailstore.migrations.MigrationTo60: com.fsck.k9.controller.MessagingControllerCommands$PendingCommand migrateCommandSetFlagBulk(com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand)>($r0);

        return $r3;

     label14:
        $r3 = staticinvoke <com.fsck.k9.mailstore.migrations.MigrationTo60: com.fsck.k9.controller.MessagingControllerCommands$PendingCommand migrateCommandSetFlag(com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand)>($r0);

        return $r3;

     label15:
        $r3 = staticinvoke <com.fsck.k9.mailstore.migrations.MigrationTo60: com.fsck.k9.controller.MessagingControllerCommands$PendingCommand migrateCommandMarkAllAsRead(com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand)>($r0);

        return $r3;

     label16:
        $r3 = staticinvoke <com.fsck.k9.mailstore.migrations.MigrationTo60: com.fsck.k9.controller.MessagingControllerCommands$PendingCommand migrateCommandMoveOrCopyBulk(com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand)>($r0);

        return $r3;

     label17:
        $r3 = staticinvoke <com.fsck.k9.mailstore.migrations.MigrationTo60: com.fsck.k9.controller.MessagingControllerCommands$PendingCommand migrateCommandMoveOrCopyBulkNew(com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand)>($r0);

        return $r3;

     label18:
        $r3 = staticinvoke <com.fsck.k9.mailstore.migrations.MigrationTo60: com.fsck.k9.controller.MessagingControllerCommands$PendingCommand migrateCommandMoveOrCopy(com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand)>($r0);

        return $r3;

     label19:
        $r3 = staticinvoke <com.fsck.k9.mailstore.migrations.MigrationTo60: com.fsck.k9.controller.MessagingControllerCommands$PendingCommand migrateCommandEmptyTrash()>();

        return $r3;

     label20:
        $r3 = staticinvoke <com.fsck.k9.mailstore.migrations.MigrationTo60: com.fsck.k9.controller.MessagingControllerCommands$PendingCommand migrateCommandExpunge(com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand)>($r0);

        return $r3;
    }
    public static void migratePendingCommands(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase $r0;
        android.content.ContentValues r1;
        java.util.ArrayList r2;
        boolean $z0;
        java.util.List $r3;
        java.util.Iterator $r4;
        java.lang.Object $r5;
        com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand r6;
        com.fsck.k9.controller.MessagingControllerCommands$PendingCommand $r7;
        com.fsck.k9.controller.PendingCommandSerializer $r8;
        java.lang.String $r9;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $z0 = staticinvoke <com.fsck.k9.mailstore.migrations.MigrationTo60: boolean columnExists(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String)>($r0, "pending_commands", "arguments");

        if $z0 == 0 goto label4;

        $r3 = staticinvoke <com.fsck.k9.mailstore.migrations.MigrationTo60: java.util.List getPendingCommands(android.database.sqlite.SQLiteDatabase)>($r0);

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand) $r5;

        $r7 = staticinvoke <com.fsck.k9.mailstore.migrations.MigrationTo60: com.fsck.k9.controller.MessagingControllerCommands$PendingCommand migratePendingCommand(com.fsck.k9.mailstore.migrations.MigrationTo60$OldPendingCommand)>(r6);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS pending_commands");

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE pending_commands (id INTEGER PRIMARY KEY, command TEXT, data TEXT)");

        $r8 = staticinvoke <com.fsck.k9.controller.PendingCommandSerializer: com.fsck.k9.controller.PendingCommandSerializer getInstance()>();

        $r4 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (com.fsck.k9.controller.MessagingControllerCommands$PendingCommand) $r5;

        r1 = new android.content.ContentValues;

        specialinvoke r1.<android.content.ContentValues: void <init>()>();

        $r9 = virtualinvoke $r7.<com.fsck.k9.controller.MessagingControllerCommands$PendingCommand: java.lang.String getCommandName()>();

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("command", $r9);

        $r9 = virtualinvoke $r8.<com.fsck.k9.controller.PendingCommandSerializer: java.lang.String serialize(com.fsck.k9.controller.MessagingControllerCommands$PendingCommand)>($r7);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("data", $r9);

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("pending_commands", "command", r1);

        goto label3;

     label4:
        return;
    }
