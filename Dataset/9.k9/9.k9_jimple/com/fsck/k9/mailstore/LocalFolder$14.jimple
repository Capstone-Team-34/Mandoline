com.fsck.k9.mailstore.LocalFolder$14 extends java.lang.Object implements com.fsck.k9.mailstore.LockableDatabase$DbCallback
final com.fsck.k9.mailstore.LocalFolder this$0
final com.fsck.k9.mailstore.LocalFolder val$lDestFolder
final java.util.List val$msgs
final java.util.Map val$uidMap
    void <init>(com.fsck.k9.mailstore.LocalFolder, com.fsck.k9.mailstore.LocalFolder, java.util.List, java.util.Map)
    {
        com.fsck.k9.mailstore.LocalFolder$14 r0;
        com.fsck.k9.mailstore.LocalFolder $r1, $r2;
        java.util.List $r3;
        java.util.Map $r4;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$14;

        $r1 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        $r2 := @parameter1: com.fsck.k9.mailstore.LocalFolder;

        $r3 := @parameter2: java.util.List;

        $r4 := @parameter3: java.util.Map;

        r0.<com.fsck.k9.mailstore.LocalFolder$14: com.fsck.k9.mailstore.LocalFolder this$0> = $r1;

        r0.<com.fsck.k9.mailstore.LocalFolder$14: com.fsck.k9.mailstore.LocalFolder val$lDestFolder> = $r2;

        r0.<com.fsck.k9.mailstore.LocalFolder$14: java.util.List val$msgs> = $r3;

        r0.<com.fsck.k9.mailstore.LocalFolder$14: java.util.Map val$uidMap> = $r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public volatile java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase) throws com.fsck.k9.mailstore.LockableDatabase$WrappedException, com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder$14 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.Void $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$14;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder$14: java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase)>($r1);

        return $r2;
    }
    public java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase) throws com.fsck.k9.mailstore.LockableDatabase$WrappedException, com.fsck.k9.mailstore.UnavailableStorageException
    {
        com.fsck.k9.mailstore.LocalFolder$14 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        android.content.ContentValues r2;
        com.fsck.k9.mail.MessagingException r3;
        java.lang.String[] r4;
        com.fsck.k9.mailstore.LocalFolder $r5;
        java.util.List $r6;
        java.util.Iterator $r7;
        boolean $z0;
        java.lang.Object $r8;
        com.fsck.k9.mail.Message r9;
        com.fsck.k9.mailstore.LocalMessage $r10;
        java.lang.String $r11, $r14, $r19;
        java.lang.Object[] $r12;
        long $l0, $l1;
        java.lang.Long $r13;
        java.lang.StringBuilder $r15;
        java.util.UUID $r16;
        java.util.Map $r17;
        com.fsck.k9.mailstore.ThreadInfo $r18;
        byte $b2;
        java.lang.Integer $r20;
        com.fsck.k9.mailstore.LockableDatabase$WrappedException $r21;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$14;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r5 = r0.<com.fsck.k9.mailstore.LocalFolder$14: com.fsck.k9.mailstore.LocalFolder val$lDestFolder>;

     label01:
        virtualinvoke $r5.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(0);

     label02:
        $r6 = r0.<com.fsck.k9.mailstore.LocalFolder$14: java.util.List val$msgs>;

     label03:
        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

     label05:
        if $z0 == 0 goto label60;

     label06:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

     label07:
        r9 = (com.fsck.k9.mail.Message) $r8;

        $r10 = (com.fsck.k9.mailstore.LocalMessage) r9;

     label08:
        $r11 = virtualinvoke r9.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

     label09:
        $r12 = newarray (java.lang.Object)[4];

        $r5 = r0.<com.fsck.k9.mailstore.LocalFolder$14: com.fsck.k9.mailstore.LocalFolder val$lDestFolder>;

     label10:
        $l0 = virtualinvoke $r5.<com.fsck.k9.mailstore.LocalFolder: long getDatabaseId()>();

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label11:
        $r12[0] = $r13;

     label12:
        $r14 = virtualinvoke r9.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

     label13:
        $r12[1] = $r14;

     label14:
        $l0 = virtualinvoke $r10.<com.fsck.k9.mailstore.LocalMessage: long getDatabaseId()>();

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label15:
        $r12[2] = $r13;

        $r5 = r0.<com.fsck.k9.mailstore.LocalFolder$14: com.fsck.k9.mailstore.LocalFolder this$0>;

     label16:
        $r14 = virtualinvoke $r5.<com.fsck.k9.mailstore.LocalFolder: java.lang.String getName()>();

     label17:
        $r12[3] = $r14;

     label18:
        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Updating folder_id to %s for message with UID %s, id %d currently in folder %s", $r12);

     label19:
        $r15 = new java.lang.StringBuilder;

     label20:
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("K9LOCAL:");

        $r16 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r14 = virtualinvoke $r16.<java.util.UUID: java.lang.String toString()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r9.<com.fsck.k9.mail.Message: void setUid(java.lang.String)>($r14);

     label21:
        $r17 = r0.<com.fsck.k9.mailstore.LocalFolder$14: java.util.Map val$uidMap>;

     label22:
        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r14);

     label23:
        $r5 = r0.<com.fsck.k9.mailstore.LocalFolder$14: com.fsck.k9.mailstore.LocalFolder val$lDestFolder>;

     label24:
        $r18 = staticinvoke <com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.ThreadInfo access$1300(com.fsck.k9.mailstore.LocalFolder,android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message)>($r5, $r1, r9);

        $l0 = virtualinvoke $r10.<com.fsck.k9.mailstore.LocalMessage: long getDatabaseId()>();

     label25:
        r4 = newarray (java.lang.String)[1];

     label26:
        $r19 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

     label27:
        r4[0] = $r19;

        r2 = new android.content.ContentValues;

     label28:
        specialinvoke r2.<android.content.ContentValues: void <init>()>();

     label29:
        $r5 = r0.<com.fsck.k9.mailstore.LocalFolder$14: com.fsck.k9.mailstore.LocalFolder val$lDestFolder>;

     label30:
        $l1 = virtualinvoke $r5.<com.fsck.k9.mailstore.LocalFolder: long getDatabaseId()>();

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("folder_id", $r13);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("uid", $r14);

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("messages", r2, "id = ?", r4);

        virtualinvoke r2.<android.content.ContentValues: void clear()>();

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("message_id", $r13);

     label31:
        $l0 = $r18.<com.fsck.k9.mailstore.ThreadInfo: long threadId>;

        $b2 = $l0 cmp -1L;

        if $b2 != 0 goto label53;

        $l0 = $r18.<com.fsck.k9.mailstore.ThreadInfo: long rootId>;

        $b2 = $l0 cmp -1L;

        if $b2 == 0 goto label33;

        $l0 = $r18.<com.fsck.k9.mailstore.ThreadInfo: long rootId>;

     label32:
        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("root", $r13);

     label33:
        $l0 = $r18.<com.fsck.k9.mailstore.ThreadInfo: long parentId>;

        $b2 = $l0 cmp -1L;

        if $b2 == 0 goto label35;

        $l0 = $r18.<com.fsck.k9.mailstore.ThreadInfo: long parentId>;

     label34:
        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("parent", $r13);

     label35:
        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("threads", null, r2);

     label36:
        $r5 = r0.<com.fsck.k9.mailstore.LocalFolder$14: com.fsck.k9.mailstore.LocalFolder this$0>;

     label37:
        virtualinvoke $r5.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(0);

        virtualinvoke r2.<android.content.ContentValues: void clear()>();

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("uid", $r11);

        virtualinvoke r2.<android.content.ContentValues: void putNull(java.lang.String)>("flags");

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("read", $r20);

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("deleted", $r20);

     label38:
        $r5 = r0.<com.fsck.k9.mailstore.LocalFolder$14: com.fsck.k9.mailstore.LocalFolder this$0>;

     label39:
        $l0 = staticinvoke <com.fsck.k9.mailstore.LocalFolder: long access$100(com.fsck.k9.mailstore.LocalFolder)>($r5);

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("folder_id", $r13);

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("empty", $r20);

        $r11 = virtualinvoke r9.<com.fsck.k9.mail.Message: java.lang.String getMessageId()>();

     label40:
        if $r11 == null goto label42;

     label41:
        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("message_id", $r11);

     label42:
        $l0 = $r18.<com.fsck.k9.mailstore.ThreadInfo: long msgId>;

        $b2 = $l0 cmp -1L;

        if $b2 == 0 goto label58;

        $l0 = $r18.<com.fsck.k9.mailstore.ThreadInfo: long msgId>;

        r4 = newarray (java.lang.String)[1];

     label43:
        $r11 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

     label44:
        r4[0] = $r11;

     label45:
        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("messages", r2, "id = ?", r4);

     label46:
        virtualinvoke r2.<android.content.ContentValues: void clear()>();

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("message_id", $r13);

     label47:
        r4 = newarray (java.lang.String)[1];

     label48:
        $l0 = virtualinvoke $r10.<com.fsck.k9.mailstore.LocalMessage: long getThreadId()>();

        $r11 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

     label49:
        r4[0] = $r11;

     label50:
        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("threads", r2, "id = ?", r4);

     label51:
        goto label04;

     label52:
        r3 := @caughtexception;

        $r21 = new com.fsck.k9.mailstore.LockableDatabase$WrappedException;

        specialinvoke $r21.<com.fsck.k9.mailstore.LockableDatabase$WrappedException: void <init>(java.lang.Exception)>(r3);

        throw $r21;

     label53:
        r4 = newarray (java.lang.String)[1];

        $l0 = $r18.<com.fsck.k9.mailstore.ThreadInfo: long threadId>;

     label54:
        $r14 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

     label55:
        r4[0] = $r14;

     label56:
        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("threads", r2, "id = ?", r4);

     label57:
        goto label36;

     label58:
        $l0 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("messages", null, r2);

     label59:
        goto label46;

     label60:
        return null;

        catch com.fsck.k9.mail.MessagingException from label01 to label02 with label52;
        catch com.fsck.k9.mail.MessagingException from label03 to label05 with label52;
        catch com.fsck.k9.mail.MessagingException from label06 to label07 with label52;
        catch com.fsck.k9.mail.MessagingException from label08 to label09 with label52;
        catch com.fsck.k9.mail.MessagingException from label10 to label11 with label52;
        catch com.fsck.k9.mail.MessagingException from label12 to label13 with label52;
        catch com.fsck.k9.mail.MessagingException from label14 to label15 with label52;
        catch com.fsck.k9.mail.MessagingException from label16 to label17 with label52;
        catch com.fsck.k9.mail.MessagingException from label18 to label19 with label52;
        catch com.fsck.k9.mail.MessagingException from label20 to label21 with label52;
        catch com.fsck.k9.mail.MessagingException from label22 to label23 with label52;
        catch com.fsck.k9.mail.MessagingException from label24 to label25 with label52;
        catch com.fsck.k9.mail.MessagingException from label26 to label27 with label52;
        catch com.fsck.k9.mail.MessagingException from label28 to label29 with label52;
        catch com.fsck.k9.mail.MessagingException from label30 to label31 with label52;
        catch com.fsck.k9.mail.MessagingException from label32 to label33 with label52;
        catch com.fsck.k9.mail.MessagingException from label34 to label36 with label52;
        catch com.fsck.k9.mail.MessagingException from label37 to label38 with label52;
        catch com.fsck.k9.mail.MessagingException from label39 to label40 with label52;
        catch com.fsck.k9.mail.MessagingException from label41 to label42 with label52;
        catch com.fsck.k9.mail.MessagingException from label43 to label44 with label52;
        catch com.fsck.k9.mail.MessagingException from label45 to label47 with label52;
        catch com.fsck.k9.mail.MessagingException from label48 to label49 with label52;
        catch com.fsck.k9.mail.MessagingException from label50 to label51 with label52;
        catch com.fsck.k9.mail.MessagingException from label54 to label55 with label52;
        catch com.fsck.k9.mail.MessagingException from label56 to label57 with label52;
        catch com.fsck.k9.mail.MessagingException from label58 to label59 with label52;
    }
