com.fsck.k9.mailstore.LocalFolder$27 extends java.lang.Object implements com.fsck.k9.mailstore.LockableDatabase$DbCallback
final com.fsck.k9.mailstore.LocalFolder this$0
    void <init>(com.fsck.k9.mailstore.LocalFolder)
    {
        com.fsck.k9.mailstore.LocalFolder$27 r0;
        com.fsck.k9.mailstore.LocalFolder $r1;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$27;

        $r1 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        r0.<com.fsck.k9.mailstore.LocalFolder$27: com.fsck.k9.mailstore.LocalFolder this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public java.lang.Long doDbWork(android.database.sqlite.SQLiteDatabase)
    {
        com.fsck.k9.mailstore.LocalFolder$27 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.Exception r2;
        android.database.Cursor r3, $r7;
        com.fsck.k9.mailstore.LocalFolder $r4;
        java.lang.String[] $r5;
        long $l0;
        java.lang.String $r6;
        int $i1;
        java.lang.Long $r8;
        java.lang.Object[] $r9;
        java.lang.Throwable $r10;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$27;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r3 = null;

     label01:
        $r4 = r0.<com.fsck.k9.mailstore.LocalFolder$27: com.fsck.k9.mailstore.LocalFolder this$0>;

        virtualinvoke $r4.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(1);

        $r5 = newarray (java.lang.String)[1];

        $r4 = r0.<com.fsck.k9.mailstore.LocalFolder$27: com.fsck.k9.mailstore.LocalFolder this$0>;

        $l0 = staticinvoke <com.fsck.k9.mailstore.LocalFolder: long access$100(com.fsck.k9.mailstore.LocalFolder)>($r4);

        $r6 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

     label02:
        $r5[0] = $r6;

     label03:
        $r7 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("SELECT MIN(date) FROM messages WHERE folder_id=?", $r5);

     label04:
        r3 = $r7;

     label05:
        $i1 = interfaceinvoke $r7.<android.database.Cursor: int getCount()>();

     label06:
        if $i1 <= 0 goto label09;

     label07:
        interfaceinvoke $r7.<android.database.Cursor: boolean moveToFirst()>();

        $l0 = interfaceinvoke $r7.<android.database.Cursor: long getLong(int)>(0);

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label08:
        staticinvoke <com.fsck.k9.helper.Utility: void closeQuietly(android.database.Cursor)>($r7);

        return $r8;

     label09:
        staticinvoke <com.fsck.k9.helper.Utility: void closeQuietly(android.database.Cursor)>($r7);

     label10:
        return null;

     label11:
        r2 := @caughtexception;

     label12:
        $r9 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r2, "Unable to fetch oldest message date: ", $r9);

     label13:
        staticinvoke <com.fsck.k9.helper.Utility: void closeQuietly(android.database.Cursor)>(r3);

        goto label10;

     label14:
        $r10 := @caughtexception;

        staticinvoke <com.fsck.k9.helper.Utility: void closeQuietly(android.database.Cursor)>(r3);

        throw $r10;

        catch java.lang.Exception from label01 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }
    public volatile java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase) throws com.fsck.k9.mailstore.LockableDatabase$WrappedException, com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder$27 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.Long $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$27;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder$27: java.lang.Long doDbWork(android.database.sqlite.SQLiteDatabase)>($r1);

        return $r2;
    }
