com.fsck.k9.mailstore.LocalFolder$15 extends java.lang.Object implements com.fsck.k9.mailstore.LockableDatabase$DbCallback
final com.fsck.k9.mailstore.LocalFolder this$0
final com.fsck.k9.mail.Message val$message
final java.lang.Runnable val$runnable
    void <init>(com.fsck.k9.mailstore.LocalFolder, com.fsck.k9.mail.Message, java.lang.Runnable)
    {
        com.fsck.k9.mailstore.LocalFolder$15 r0;
        com.fsck.k9.mailstore.LocalFolder $r1;
        com.fsck.k9.mail.Message $r2;
        java.lang.Runnable $r3;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$15;

        $r1 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        $r2 := @parameter1: com.fsck.k9.mail.Message;

        $r3 := @parameter2: java.lang.Runnable;

        r0.<com.fsck.k9.mailstore.LocalFolder$15: com.fsck.k9.mailstore.LocalFolder this$0> = $r1;

        r0.<com.fsck.k9.mailstore.LocalFolder$15: com.fsck.k9.mail.Message val$message> = $r2;

        r0.<com.fsck.k9.mailstore.LocalFolder$15: java.lang.Runnable val$runnable> = $r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public com.fsck.k9.mailstore.LocalMessage doDbWork(android.database.sqlite.SQLiteDatabase) throws com.fsck.k9.mailstore.LockableDatabase$WrappedException, com.fsck.k9.mailstore.UnavailableStorageException
    {
        com.fsck.k9.mailstore.LocalFolder$15 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        com.fsck.k9.mail.MessagingException r2;
        com.fsck.k9.mailstore.LocalFolder $r3;
        com.fsck.k9.mail.Message $r4;
        java.util.List $r5;
        java.lang.String $r6;
        com.fsck.k9.mailstore.LocalMessage $r7;
        java.lang.Runnable $r8;
        com.fsck.k9.mail.Flag $r9;
        com.fsck.k9.mailstore.LockableDatabase$WrappedException $r10;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$15;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder$15: com.fsck.k9.mailstore.LocalFolder this$0>;

        $r4 = r0.<com.fsck.k9.mailstore.LocalFolder$15: com.fsck.k9.mail.Message val$message>;

     label01:
        $r5 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r4);

        virtualinvoke $r3.<com.fsck.k9.mailstore.LocalFolder: java.util.Map appendMessages(java.util.List)>($r5);

     label02:
        $r4 = r0.<com.fsck.k9.mailstore.LocalFolder$15: com.fsck.k9.mail.Message val$message>;

     label03:
        $r6 = virtualinvoke $r4.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

     label04:
        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder$15: com.fsck.k9.mailstore.LocalFolder this$0>;

     label05:
        $r7 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalMessage getMessage(java.lang.String)>($r6);

     label06:
        $r8 = r0.<com.fsck.k9.mailstore.LocalFolder$15: java.lang.Runnable val$runnable>;

     label07:
        interfaceinvoke $r8.<java.lang.Runnable: void run()>();

     label08:
        $r9 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag X_DOWNLOADED_FULL>;

     label09:
        virtualinvoke $r7.<com.fsck.k9.mailstore.LocalMessage: void setFlag(com.fsck.k9.mail.Flag,boolean)>($r9, 1);

     label10:
        return $r7;

     label11:
        r2 := @caughtexception;

        $r10 = new com.fsck.k9.mailstore.LockableDatabase$WrappedException;

        specialinvoke $r10.<com.fsck.k9.mailstore.LockableDatabase$WrappedException: void <init>(java.lang.Exception)>(r2);

        throw $r10;

        catch com.fsck.k9.mail.MessagingException from label01 to label02 with label11;
        catch com.fsck.k9.mail.MessagingException from label03 to label04 with label11;
        catch com.fsck.k9.mail.MessagingException from label05 to label06 with label11;
        catch com.fsck.k9.mail.MessagingException from label07 to label08 with label11;
        catch com.fsck.k9.mail.MessagingException from label09 to label10 with label11;
    }
    public volatile java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase) throws com.fsck.k9.mailstore.LockableDatabase$WrappedException, com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder$15 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        com.fsck.k9.mailstore.LocalMessage $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$15;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder$15: com.fsck.k9.mailstore.LocalMessage doDbWork(android.database.sqlite.SQLiteDatabase)>($r1);

        return $r2;
    }
