com.fsck.k9.mailstore.LocalFolder$22 extends java.lang.Object implements com.fsck.k9.mailstore.LockableDatabase$DbCallback
final com.fsck.k9.mailstore.LocalFolder this$0
    void <init>(com.fsck.k9.mailstore.LocalFolder)
    {
        com.fsck.k9.mailstore.LocalFolder$22 r0;
        com.fsck.k9.mailstore.LocalFolder $r1;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$22;

        $r1 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        r0.<com.fsck.k9.mailstore.LocalFolder$22: com.fsck.k9.mailstore.LocalFolder this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public volatile java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase) throws com.fsck.k9.mailstore.LockableDatabase$WrappedException, com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder$22 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.Void $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$22;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder$22: java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase)>($r1);

        return $r2;
    }
    public java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase) throws com.fsck.k9.mailstore.LockableDatabase$WrappedException, com.fsck.k9.mailstore.UnavailableStorageException
    {
        com.fsck.k9.mailstore.LocalFolder$22 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        com.fsck.k9.mail.MessagingException r2;
        com.fsck.k9.mailstore.LocalFolder $r3;
        java.util.List $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        com.fsck.k9.mailstore.LocalMessage r7;
        long $l0;
        com.fsck.k9.mailstore.LockableDatabase$WrappedException $r8;
        java.lang.Object[] $r9;
        java.lang.String $r10;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$22;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder$22: com.fsck.k9.mailstore.LocalFolder this$0>;

     label01:
        virtualinvoke $r3.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(1);

     label02:
        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder$22: com.fsck.k9.mailstore.LocalFolder this$0>;

     label03:
        $r4 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalFolder: java.util.List getMessages(com.fsck.k9.mail.MessageRetrievalListener)>(null);

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

     label05:
        if $z0 == 0 goto label11;

     label06:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

     label07:
        r7 = (com.fsck.k9.mailstore.LocalMessage) $r6;

        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder$22: com.fsck.k9.mailstore.LocalFolder this$0>;

     label08:
        $l0 = virtualinvoke r7.<com.fsck.k9.mailstore.LocalMessage: long getMessagePartId()>();

        staticinvoke <com.fsck.k9.mailstore.LocalFolder: void access$1600(com.fsck.k9.mailstore.LocalFolder,long)>($r3, $l0);

     label09:
        goto label04;

     label10:
        r2 := @caughtexception;

        $r8 = new com.fsck.k9.mailstore.LockableDatabase$WrappedException;

        specialinvoke $r8.<com.fsck.k9.mailstore.LockableDatabase$WrappedException: void <init>(java.lang.Exception)>(r2);

        throw $r8;

     label11:
        $r9 = newarray (java.lang.Object)[1];

        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder$22: com.fsck.k9.mailstore.LocalFolder this$0>;

        $l0 = staticinvoke <com.fsck.k9.mailstore.LocalFolder: long access$100(com.fsck.k9.mailstore.LocalFolder)>($r3);

        $r10 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        $r9[0] = $r10;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>("DELETE FROM folders WHERE id = ?", $r9);

        return null;

        catch com.fsck.k9.mail.MessagingException from label01 to label02 with label10;
        catch com.fsck.k9.mail.MessagingException from label03 to label05 with label10;
        catch com.fsck.k9.mail.MessagingException from label06 to label07 with label10;
        catch com.fsck.k9.mail.MessagingException from label08 to label09 with label10;
    }
