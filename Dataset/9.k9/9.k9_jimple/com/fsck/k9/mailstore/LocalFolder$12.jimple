com.fsck.k9.mailstore.LocalFolder$12 extends java.lang.Object implements com.fsck.k9.mailstore.LockableDatabase$DbCallback
final com.fsck.k9.mailstore.LocalFolder this$0
final boolean val$includeDeleted
final com.fsck.k9.mail.MessageRetrievalListener val$listener
    void <init>(com.fsck.k9.mailstore.LocalFolder, com.fsck.k9.mail.MessageRetrievalListener, boolean)
    {
        com.fsck.k9.mailstore.LocalFolder$12 r0;
        com.fsck.k9.mailstore.LocalFolder $r1;
        com.fsck.k9.mail.MessageRetrievalListener $r2;
        boolean $z0;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$12;

        $r1 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        $r2 := @parameter1: com.fsck.k9.mail.MessageRetrievalListener;

        $z0 := @parameter2: boolean;

        r0.<com.fsck.k9.mailstore.LocalFolder$12: com.fsck.k9.mailstore.LocalFolder this$0> = $r1;

        r0.<com.fsck.k9.mailstore.LocalFolder$12: com.fsck.k9.mail.MessageRetrievalListener val$listener> = $r2;

        r0.<com.fsck.k9.mailstore.LocalFolder$12: boolean val$includeDeleted> = $z0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public volatile java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase) throws com.fsck.k9.mailstore.LockableDatabase$WrappedException, com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder$12 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.util.List $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$12;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder$12: java.util.List doDbWork(android.database.sqlite.SQLiteDatabase)>($r1);

        return $r2;
    }
    public java.util.List doDbWork(android.database.sqlite.SQLiteDatabase) throws com.fsck.k9.mailstore.LockableDatabase$WrappedException, com.fsck.k9.mailstore.UnavailableStorageException
    {
        com.fsck.k9.mailstore.LocalFolder$12 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        com.fsck.k9.mail.MessagingException r2;
        com.fsck.k9.mail.MessageRetrievalListener $r3;
        com.fsck.k9.mailstore.LocalFolder $r4, $r9;
        com.fsck.k9.mailstore.LocalStore $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7, $r10;
        boolean $z0;
        java.lang.String[] $r8;
        long $l0;
        java.util.List $r11;
        com.fsck.k9.mailstore.LockableDatabase$WrappedException $r12;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$12;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r4 = r0.<com.fsck.k9.mailstore.LocalFolder$12: com.fsck.k9.mailstore.LocalFolder this$0>;

     label01:
        virtualinvoke $r4.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(0);

     label02:
        $r4 = r0.<com.fsck.k9.mailstore.LocalFolder$12: com.fsck.k9.mailstore.LocalFolder this$0>;

     label03:
        $r5 = staticinvoke <com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore access$1200(com.fsck.k9.mailstore.LocalFolder)>($r4);

     label04:
        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder$12: com.fsck.k9.mail.MessageRetrievalListener val$listener>;

        $r4 = r0.<com.fsck.k9.mailstore.LocalFolder$12: com.fsck.k9.mailstore.LocalFolder this$0>;

        $r6 = new java.lang.StringBuilder;

     label05:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT ");

     label06:
        $r7 = <com.fsck.k9.mailstore.LocalStore: java.lang.String GET_MESSAGES_COLS>;

     label07:
        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FROM messages LEFT JOIN message_parts ON (message_parts.id = messages.message_part_id) LEFT JOIN threads ON (threads.message_id = messages.id) WHERE empty = 0 AND ");

     label08:
        $z0 = r0.<com.fsck.k9.mailstore.LocalFolder$12: boolean val$includeDeleted>;

        if $z0 == 0 goto label15;

        $r7 = "";

     label09:
        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("folder_id = ? ORDER BY date DESC");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label10:
        $r8 = newarray (java.lang.String)[1];

        $r9 = r0.<com.fsck.k9.mailstore.LocalFolder$12: com.fsck.k9.mailstore.LocalFolder this$0>;

     label11:
        $l0 = staticinvoke <com.fsck.k9.mailstore.LocalFolder: long access$100(com.fsck.k9.mailstore.LocalFolder)>($r9);

        $r10 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

     label12:
        $r8[0] = $r10;

     label13:
        $r11 = virtualinvoke $r5.<com.fsck.k9.mailstore.LocalStore: java.util.List getMessages(com.fsck.k9.mail.MessageRetrievalListener,com.fsck.k9.mailstore.LocalFolder,java.lang.String,java.lang.String[])>($r3, $r4, $r7, $r8);

     label14:
        return $r11;

     label15:
        $r7 = "deleted = 0 AND ";

        goto label09;

     label16:
        r2 := @caughtexception;

        $r12 = new com.fsck.k9.mailstore.LockableDatabase$WrappedException;

        specialinvoke $r12.<com.fsck.k9.mailstore.LockableDatabase$WrappedException: void <init>(java.lang.Exception)>(r2);

        throw $r12;

        catch com.fsck.k9.mail.MessagingException from label01 to label02 with label16;
        catch com.fsck.k9.mail.MessagingException from label03 to label04 with label16;
        catch com.fsck.k9.mail.MessagingException from label05 to label06 with label16;
        catch com.fsck.k9.mail.MessagingException from label07 to label08 with label16;
        catch com.fsck.k9.mail.MessagingException from label09 to label10 with label16;
        catch com.fsck.k9.mail.MessagingException from label11 to label12 with label16;
        catch com.fsck.k9.mail.MessagingException from label13 to label14 with label16;
    }
