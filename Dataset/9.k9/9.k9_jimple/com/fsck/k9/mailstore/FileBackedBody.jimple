com.fsck.k9.mailstore.FileBackedBody extends java.lang.Object implements com.fsck.k9.mail.Body com.fsck.k9.mail.internet.SizeAware com.fsck.k9.mail.internet.RawDataBody
private final java.lang.String encoding
private final java.io.File file
    public void <init>(java.io.File, java.lang.String)
    {
        com.fsck.k9.mailstore.FileBackedBody r0;
        java.io.File $r1;
        java.lang.String $r2;

        r0 := @this: com.fsck.k9.mailstore.FileBackedBody;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.fsck.k9.mailstore.FileBackedBody: java.io.File file> = $r1;

        r0.<com.fsck.k9.mailstore.FileBackedBody: java.lang.String encoding> = $r2;

        return;
    }
    public java.lang.String getEncoding()
    {
        com.fsck.k9.mailstore.FileBackedBody r0;
        java.lang.String r1;

        r0 := @this: com.fsck.k9.mailstore.FileBackedBody;

        r1 = r0.<com.fsck.k9.mailstore.FileBackedBody: java.lang.String encoding>;

        return r1;
    }
    public java.io.InputStream getInputStream() throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.FileBackedBody r0;
        java.io.FileNotFoundException r1;
        java.io.FileInputStream $r2;
        java.io.File $r3;
        com.fsck.k9.mail.MessagingException $r4;

        r0 := @this: com.fsck.k9.mailstore.FileBackedBody;

        $r2 = new java.io.FileInputStream;

        $r3 = r0.<com.fsck.k9.mailstore.FileBackedBody: java.io.File file>;

     label1:
        specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>($r3);

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $r4 = new com.fsck.k9.mail.MessagingException;

        specialinvoke $r4.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String,java.lang.Throwable)>("File not found", r1);

        throw $r4;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
    }
    public long getSize()
    {
        com.fsck.k9.mailstore.FileBackedBody r0;
        long $l0;
        java.io.File $r1;

        r0 := @this: com.fsck.k9.mailstore.FileBackedBody;

        $r1 = r0.<com.fsck.k9.mailstore.FileBackedBody: java.io.File file>;

        $l0 = virtualinvoke $r1.<java.io.File: long length()>();

        return $l0;
    }
    public void setEncoding(java.lang.String) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.FileBackedBody r0;
        java.lang.String $r1;
        java.lang.RuntimeException $r2;

        r0 := @this: com.fsck.k9.mailstore.FileBackedBody;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("not supported");

        throw $r2;
    }
    public void writeTo(java.io.OutputStream) throws java.io.IOException, com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.FileBackedBody r0;
        java.io.OutputStream $r1;
        java.lang.Throwable $r2;
        java.io.InputStream $r3;

        r0 := @this: com.fsck.k9.mailstore.FileBackedBody;

        $r1 := @parameter0: java.io.OutputStream;

        $r3 = virtualinvoke r0.<com.fsck.k9.mailstore.FileBackedBody: java.io.InputStream getInputStream()>();

     label1:
        staticinvoke <org.apache.commons.io.IOUtils: int copy(java.io.InputStream,java.io.OutputStream)>($r3, $r1);

     label2:
        virtualinvoke $r3.<java.io.InputStream: void close()>();

        return;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r3.<java.io.InputStream: void close()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
