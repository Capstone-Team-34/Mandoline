com.fsck.k9.mailstore.LocalFolder$18 extends java.lang.Object implements com.fsck.k9.mailstore.LockableDatabase$DbCallback
final com.fsck.k9.mailstore.LocalFolder this$0
final com.fsck.k9.mailstore.LocalMessage val$message
final com.fsck.k9.mail.Part val$part
    void <init>(com.fsck.k9.mailstore.LocalFolder, com.fsck.k9.mailstore.LocalMessage, com.fsck.k9.mail.Part)
    {
        com.fsck.k9.mailstore.LocalFolder$18 r0;
        com.fsck.k9.mailstore.LocalFolder $r1;
        com.fsck.k9.mailstore.LocalMessage $r2;
        com.fsck.k9.mail.Part $r3;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$18;

        $r1 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        $r2 := @parameter1: com.fsck.k9.mailstore.LocalMessage;

        $r3 := @parameter2: com.fsck.k9.mail.Part;

        r0.<com.fsck.k9.mailstore.LocalFolder$18: com.fsck.k9.mailstore.LocalFolder this$0> = $r1;

        r0.<com.fsck.k9.mailstore.LocalFolder$18: com.fsck.k9.mailstore.LocalMessage val$message> = $r2;

        r0.<com.fsck.k9.mailstore.LocalFolder$18: com.fsck.k9.mail.Part val$part> = $r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public volatile java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase) throws com.fsck.k9.mailstore.LockableDatabase$WrappedException, com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder$18 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.Void $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$18;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder$18: java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase)>($r1);

        return $r2;
    }
    public java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase) throws com.fsck.k9.mailstore.LockableDatabase$WrappedException, com.fsck.k9.mailstore.UnavailableStorageException
    {
        com.fsck.k9.mailstore.LocalFolder$18 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.Exception r2;
        java.lang.String[] $r3, r4;
        com.fsck.k9.mailstore.LocalMessage $r5;
        long $l0;
        java.lang.String $r6;
        com.fsck.k9.mail.Part $r7;
        android.database.Cursor $r8;
        boolean $z0;
        java.lang.IllegalStateException $r9;
        java.lang.Throwable $r10;
        com.fsck.k9.mailstore.LocalFolder $r11;
        android.content.ContentValues $r12;
        java.lang.Object[] $r13;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$18;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = "id";

        r4 = newarray (java.lang.String)[2];

        $r5 = r0.<com.fsck.k9.mailstore.LocalFolder$18: com.fsck.k9.mailstore.LocalMessage val$message>;

        $l0 = virtualinvoke $r5.<com.fsck.k9.mailstore.LocalMessage: long getMessagePartId()>();

        $r6 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        r4[0] = $r6;

        $r7 = r0.<com.fsck.k9.mailstore.LocalFolder$18: com.fsck.k9.mail.Part val$part>;

        $r6 = interfaceinvoke $r7.<com.fsck.k9.mail.Part: java.lang.String getServerExtra()>();

        r4[1] = $r6;

        $r8 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("message_parts", $r3, "root = ? AND server_extra = ?", r4, null, null, null);

     label01:
        $z0 = interfaceinvoke $r8.<android.database.Cursor: boolean moveToFirst()>();

     label02:
        if $z0 != 0 goto label05;

     label03:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Message part not found");

        throw $r9;

     label04:
        $r10 := @caughtexception;

        interfaceinvoke $r8.<android.database.Cursor: void close()>();

        throw $r10;

     label05:
        $l0 = interfaceinvoke $r8.<android.database.Cursor: long getLong(int)>(0);

     label06:
        interfaceinvoke $r8.<android.database.Cursor: void close()>();

     label07:
        $r11 = r0.<com.fsck.k9.mailstore.LocalFolder$18: com.fsck.k9.mailstore.LocalFolder this$0>;

     label08:
        $r12 = new android.content.ContentValues;

     label09:
        specialinvoke $r12.<android.content.ContentValues: void <init>()>();

        $r7 = r0.<com.fsck.k9.mailstore.LocalFolder$18: com.fsck.k9.mail.Part val$part>;

        staticinvoke <com.fsck.k9.mailstore.LocalFolder: long access$1500(com.fsck.k9.mailstore.LocalFolder,android.database.sqlite.SQLiteDatabase,android.content.ContentValues,com.fsck.k9.mail.Part,long)>($r11, $r1, $r12, $r7, $l0);

     label10:
        return null;

     label11:
        r2 := @caughtexception;

        $r13 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r2, "Error writing message part", $r13);

        goto label10;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label03 to label04 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }
