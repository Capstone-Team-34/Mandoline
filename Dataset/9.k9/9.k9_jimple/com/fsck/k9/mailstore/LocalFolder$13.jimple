com.fsck.k9.mailstore.LocalFolder$13 extends java.lang.Object implements com.fsck.k9.mailstore.LockableDatabase$DbCallback
final com.fsck.k9.mailstore.LocalFolder this$0
    void <init>(com.fsck.k9.mailstore.LocalFolder)
    {
        com.fsck.k9.mailstore.LocalFolder$13 r0;
        com.fsck.k9.mailstore.LocalFolder $r1;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$13;

        $r1 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        r0.<com.fsck.k9.mailstore.LocalFolder$13: com.fsck.k9.mailstore.LocalFolder this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public volatile java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase) throws com.fsck.k9.mailstore.LockableDatabase$WrappedException, com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder$13 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.util.List $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$13;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder$13: java.util.List doDbWork(android.database.sqlite.SQLiteDatabase)>($r1);

        return $r2;
    }
    public java.util.List doDbWork(android.database.sqlite.SQLiteDatabase) throws com.fsck.k9.mailstore.LockableDatabase$WrappedException, com.fsck.k9.mailstore.UnavailableStorageException
    {
        com.fsck.k9.mailstore.LocalFolder$13 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        com.fsck.k9.mail.MessagingException r2;
        java.util.ArrayList r3;
        android.database.Cursor r4, $r8;
        com.fsck.k9.mailstore.LocalFolder $r5;
        java.lang.String[] $r6;
        long $l0;
        java.lang.String $r7;
        boolean $z0;
        com.fsck.k9.mailstore.LockableDatabase$WrappedException $r9;
        java.lang.Throwable $r10;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$13;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r4 = null;

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

     label01:
        $r5 = r0.<com.fsck.k9.mailstore.LocalFolder$13: com.fsck.k9.mailstore.LocalFolder this$0>;

     label02:
        virtualinvoke $r5.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(1);

     label03:
        $r6 = newarray (java.lang.String)[1];

        $r5 = r0.<com.fsck.k9.mailstore.LocalFolder$13: com.fsck.k9.mailstore.LocalFolder this$0>;

     label04:
        $l0 = staticinvoke <com.fsck.k9.mailstore.LocalFolder: long access$100(com.fsck.k9.mailstore.LocalFolder)>($r5);

        $r7 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

     label05:
        $r6[0] = $r7;

     label06:
        $r8 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("SELECT uid FROM messages WHERE empty = 0 AND deleted = 0 AND folder_id = ? ORDER BY date DESC", $r6);

     label07:
        r4 = $r8;

     label08:
        $z0 = interfaceinvoke $r8.<android.database.Cursor: boolean moveToNext()>();

     label09:
        if $z0 == 0 goto label15;

     label10:
        $r7 = interfaceinvoke $r8.<android.database.Cursor: java.lang.String getString(int)>(0);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

     label11:
        goto label08;

     label12:
        r2 := @caughtexception;

     label13:
        $r9 = new com.fsck.k9.mailstore.LockableDatabase$WrappedException;

        specialinvoke $r9.<com.fsck.k9.mailstore.LockableDatabase$WrappedException: void <init>(java.lang.Exception)>(r2);

        throw $r9;

     label14:
        $r10 := @caughtexception;

        staticinvoke <com.fsck.k9.helper.Utility: void closeQuietly(android.database.Cursor)>(r4);

        throw $r10;

     label15:
        staticinvoke <com.fsck.k9.helper.Utility: void closeQuietly(android.database.Cursor)>($r8);

        return r3;

        catch com.fsck.k9.mail.MessagingException from label02 to label03 with label12;
        catch com.fsck.k9.mail.MessagingException from label04 to label05 with label12;
        catch com.fsck.k9.mail.MessagingException from label06 to label07 with label12;
        catch com.fsck.k9.mail.MessagingException from label08 to label09 with label12;
        catch com.fsck.k9.mail.MessagingException from label10 to label11 with label12;
        catch java.lang.Throwable from label01 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label13 to label14 with label14;
    }
