com.fsck.k9.mailstore.LocalMessage$2 extends java.lang.Object implements com.fsck.k9.mailstore.LockableDatabase$DbCallback
final com.fsck.k9.mailstore.LocalMessage this$0
    void <init>(com.fsck.k9.mailstore.LocalMessage)
    {
        com.fsck.k9.mailstore.LocalMessage$2 r0;
        com.fsck.k9.mailstore.LocalMessage $r1;

        r0 := @this: com.fsck.k9.mailstore.LocalMessage$2;

        $r1 := @parameter0: com.fsck.k9.mailstore.LocalMessage;

        r0.<com.fsck.k9.mailstore.LocalMessage$2: com.fsck.k9.mailstore.LocalMessage this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public volatile java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase) throws com.fsck.k9.mailstore.LockableDatabase$WrappedException, com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalMessage$2 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.Void $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalMessage$2;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalMessage$2: java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase)>($r1);

        return $r2;
    }
    public java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase) throws com.fsck.k9.mailstore.LockableDatabase$WrappedException, com.fsck.k9.mailstore.UnavailableStorageException
    {
        com.fsck.k9.mailstore.LocalMessage$2 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        android.content.ContentValues r2;
        com.fsck.k9.mail.MessagingException r3;
        java.lang.Integer $r4;
        java.lang.String[] $r5;
        com.fsck.k9.mailstore.LocalMessage $r6;
        long $l0;
        java.lang.String $r7;
        com.fsck.k9.mail.Folder $r8;
        com.fsck.k9.mailstore.LocalFolder $r9;
        com.fsck.k9.mailstore.LockableDatabase$WrappedException $r10;

        r0 := @this: com.fsck.k9.mailstore.LocalMessage$2;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r2 = new android.content.ContentValues;

        specialinvoke r2.<android.content.ContentValues: void <init>()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("deleted", $r4);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("empty", $r4);

        virtualinvoke r2.<android.content.ContentValues: void putNull(java.lang.String)>("subject");

        virtualinvoke r2.<android.content.ContentValues: void putNull(java.lang.String)>("sender_list");

        virtualinvoke r2.<android.content.ContentValues: void putNull(java.lang.String)>("date");

        virtualinvoke r2.<android.content.ContentValues: void putNull(java.lang.String)>("to_list");

        virtualinvoke r2.<android.content.ContentValues: void putNull(java.lang.String)>("cc_list");

        virtualinvoke r2.<android.content.ContentValues: void putNull(java.lang.String)>("bcc_list");

        virtualinvoke r2.<android.content.ContentValues: void putNull(java.lang.String)>("preview");

        virtualinvoke r2.<android.content.ContentValues: void putNull(java.lang.String)>("reply_to_list");

        virtualinvoke r2.<android.content.ContentValues: void putNull(java.lang.String)>("message_part_id");

        $r5 = newarray (java.lang.String)[1];

        $r6 = r0.<com.fsck.k9.mailstore.LocalMessage$2: com.fsck.k9.mailstore.LocalMessage this$0>;

        $l0 = staticinvoke <com.fsck.k9.mailstore.LocalMessage: long access$200(com.fsck.k9.mailstore.LocalMessage)>($r6);

        $r7 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        $r5[0] = $r7;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("messages", r2, "id = ?", $r5);

        $r6 = r0.<com.fsck.k9.mailstore.LocalMessage$2: com.fsck.k9.mailstore.LocalMessage this$0>;

     label1:
        $r8 = staticinvoke <com.fsck.k9.mailstore.LocalMessage: com.fsck.k9.mail.Folder access$400(com.fsck.k9.mailstore.LocalMessage)>($r6);

     label2:
        $r9 = (com.fsck.k9.mailstore.LocalFolder) $r8;

        $r6 = r0.<com.fsck.k9.mailstore.LocalMessage$2: com.fsck.k9.mailstore.LocalMessage this$0>;

     label3:
        $l0 = staticinvoke <com.fsck.k9.mailstore.LocalMessage: long access$300(com.fsck.k9.mailstore.LocalMessage)>($r6);

        virtualinvoke $r9.<com.fsck.k9.mailstore.LocalFolder: void deleteMessagePartsAndDataFromDisk(long)>($l0);

     label4:
        $r6 = r0.<com.fsck.k9.mailstore.LocalMessage$2: com.fsck.k9.mailstore.LocalMessage this$0>;

        $r9 = virtualinvoke $r6.<com.fsck.k9.mailstore.LocalMessage: com.fsck.k9.mailstore.LocalFolder getFolder()>();

        $r6 = r0.<com.fsck.k9.mailstore.LocalMessage$2: com.fsck.k9.mailstore.LocalMessage this$0>;

        $l0 = staticinvoke <com.fsck.k9.mailstore.LocalMessage: long access$200(com.fsck.k9.mailstore.LocalMessage)>($r6);

        virtualinvoke $r9.<com.fsck.k9.mailstore.LocalFolder: void deleteFulltextIndexEntry(android.database.sqlite.SQLiteDatabase,long)>($r1, $l0);

        return null;

     label5:
        r3 := @caughtexception;

        $r10 = new com.fsck.k9.mailstore.LockableDatabase$WrappedException;

        specialinvoke $r10.<com.fsck.k9.mailstore.LockableDatabase$WrappedException: void <init>(java.lang.Exception)>(r3);

        throw $r10;

        catch com.fsck.k9.mail.MessagingException from label1 to label2 with label5;
        catch com.fsck.k9.mail.MessagingException from label3 to label4 with label5;
    }
