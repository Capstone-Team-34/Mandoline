com.fsck.k9.mailstore.LocalFolder$23 extends java.lang.Object implements com.fsck.k9.mailstore.LockableDatabase$DbCallback
final com.fsck.k9.mailstore.LocalFolder this$0
final long val$messageId
final java.lang.String val$messageIdHeader
final long val$messagePartId
    void <init>(com.fsck.k9.mailstore.LocalFolder, long, long, java.lang.String)
    {
        com.fsck.k9.mailstore.LocalFolder$23 r0;
        com.fsck.k9.mailstore.LocalFolder $r1;
        long $l0, $l1;
        java.lang.String $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$23;

        $r1 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        $l0 := @parameter1: long;

        $l1 := @parameter2: long;

        $r2 := @parameter3: java.lang.String;

        r0.<com.fsck.k9.mailstore.LocalFolder$23: com.fsck.k9.mailstore.LocalFolder this$0> = $r1;

        r0.<com.fsck.k9.mailstore.LocalFolder$23: long val$messagePartId> = $l0;

        r0.<com.fsck.k9.mailstore.LocalFolder$23: long val$messageId> = $l1;

        r0.<com.fsck.k9.mailstore.LocalFolder$23: java.lang.String val$messageIdHeader> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public volatile java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase) throws com.fsck.k9.mailstore.LockableDatabase$WrappedException, com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder$23 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.Void $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$23;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder$23: java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase)>($r1);

        return $r2;
    }
    public java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase) throws com.fsck.k9.mailstore.LockableDatabase$WrappedException, com.fsck.k9.mailstore.UnavailableStorageException
    {
        com.fsck.k9.mailstore.LocalFolder$23 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        android.content.ContentValues r2;
        com.fsck.k9.mail.MessagingException r3;
        com.fsck.k9.mailstore.LocalFolder $r4;
        long $l0, $l1;
        boolean $z0;
        java.lang.Long $r5;
        java.lang.Integer $r6;
        java.lang.String $r7;
        byte $b2;
        com.fsck.k9.mailstore.LockableDatabase$WrappedException $r8;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$23;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r4 = r0.<com.fsck.k9.mailstore.LocalFolder$23: com.fsck.k9.mailstore.LocalFolder this$0>;

        $l0 = r0.<com.fsck.k9.mailstore.LocalFolder$23: long val$messagePartId>;

     label01:
        virtualinvoke $r4.<com.fsck.k9.mailstore.LocalFolder: void deleteMessagePartsAndDataFromDisk(long)>($l0);

     label02:
        $r4 = r0.<com.fsck.k9.mailstore.LocalFolder$23: com.fsck.k9.mailstore.LocalFolder this$0>;

        $l0 = r0.<com.fsck.k9.mailstore.LocalFolder$23: long val$messageId>;

     label03:
        virtualinvoke $r4.<com.fsck.k9.mailstore.LocalFolder: void deleteFulltextIndexEntry(android.database.sqlite.SQLiteDatabase,long)>($r1, $l0);

     label04:
        $r4 = r0.<com.fsck.k9.mailstore.LocalFolder$23: com.fsck.k9.mailstore.LocalFolder this$0>;

        $l0 = r0.<com.fsck.k9.mailstore.LocalFolder$23: long val$messageId>;

     label05:
        $z0 = staticinvoke <com.fsck.k9.mailstore.LocalFolder: boolean access$1700(com.fsck.k9.mailstore.LocalFolder,android.database.sqlite.SQLiteDatabase,long)>($r4, $r1, $l0);

     label06:
        if $z0 == 0 goto label15;

        r2 = new android.content.ContentValues;

     label07:
        specialinvoke r2.<android.content.ContentValues: void <init>()>();

     label08:
        $l0 = r0.<com.fsck.k9.mailstore.LocalFolder$23: long val$messageId>;

     label09:
        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("id", $r5);

     label10:
        $r4 = r0.<com.fsck.k9.mailstore.LocalFolder$23: com.fsck.k9.mailstore.LocalFolder this$0>;

     label11:
        $l0 = virtualinvoke $r4.<com.fsck.k9.mailstore.LocalFolder: long getDatabaseId()>();

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("folder_id", $r5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("deleted", $r6);

     label12:
        $r7 = r0.<com.fsck.k9.mailstore.LocalFolder$23: java.lang.String val$messageIdHeader>;

     label13:
        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("message_id", $r7);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("empty", $r6);

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: long replace(java.lang.String,java.lang.String,android.content.ContentValues)>("messages", null, r2);

     label14:
        return null;

     label15:
        $r4 = r0.<com.fsck.k9.mailstore.LocalFolder$23: com.fsck.k9.mailstore.LocalFolder this$0>;

        $l0 = r0.<com.fsck.k9.mailstore.LocalFolder$23: long val$messageId>;

     label16:
        $l0 = staticinvoke <com.fsck.k9.mailstore.LocalFolder: long access$1800(com.fsck.k9.mailstore.LocalFolder,android.database.sqlite.SQLiteDatabase,long)>($r4, $r1, $l0);

     label17:
        $r4 = r0.<com.fsck.k9.mailstore.LocalFolder$23: com.fsck.k9.mailstore.LocalFolder this$0>;

        $l1 = r0.<com.fsck.k9.mailstore.LocalFolder$23: long val$messageId>;

     label18:
        staticinvoke <com.fsck.k9.mailstore.LocalFolder: void access$1900(com.fsck.k9.mailstore.LocalFolder,android.database.sqlite.SQLiteDatabase,long)>($r4, $r1, $l1);

     label19:
        $b2 = $l0 cmp -1L;

        if $b2 == 0 goto label27;

        $r4 = r0.<com.fsck.k9.mailstore.LocalFolder$23: com.fsck.k9.mailstore.LocalFolder this$0>;

     label20:
        $z0 = staticinvoke <com.fsck.k9.mailstore.LocalFolder: boolean access$1700(com.fsck.k9.mailstore.LocalFolder,android.database.sqlite.SQLiteDatabase,long)>($r4, $r1, $l0);

     label21:
        if $z0 != 0 goto label27;

        $r4 = r0.<com.fsck.k9.mailstore.LocalFolder$23: com.fsck.k9.mailstore.LocalFolder this$0>;

     label22:
        $l1 = staticinvoke <com.fsck.k9.mailstore.LocalFolder: long access$1800(com.fsck.k9.mailstore.LocalFolder,android.database.sqlite.SQLiteDatabase,long)>($r4, $r1, $l0);

     label23:
        $r4 = r0.<com.fsck.k9.mailstore.LocalFolder$23: com.fsck.k9.mailstore.LocalFolder this$0>;

     label24:
        staticinvoke <com.fsck.k9.mailstore.LocalFolder: void access$1900(com.fsck.k9.mailstore.LocalFolder,android.database.sqlite.SQLiteDatabase,long)>($r4, $r1, $l0);

     label25:
        $l0 = $l1;

        goto label19;

     label26:
        r3 := @caughtexception;

        $r8 = new com.fsck.k9.mailstore.LockableDatabase$WrappedException;

        specialinvoke $r8.<com.fsck.k9.mailstore.LockableDatabase$WrappedException: void <init>(java.lang.Exception)>(r3);

        throw $r8;

     label27:
        return null;

        catch com.fsck.k9.mail.MessagingException from label01 to label02 with label26;
        catch com.fsck.k9.mail.MessagingException from label03 to label04 with label26;
        catch com.fsck.k9.mail.MessagingException from label05 to label06 with label26;
        catch com.fsck.k9.mail.MessagingException from label07 to label08 with label26;
        catch com.fsck.k9.mail.MessagingException from label09 to label10 with label26;
        catch com.fsck.k9.mail.MessagingException from label11 to label12 with label26;
        catch com.fsck.k9.mail.MessagingException from label13 to label14 with label26;
        catch com.fsck.k9.mail.MessagingException from label16 to label17 with label26;
        catch com.fsck.k9.mail.MessagingException from label18 to label19 with label26;
        catch com.fsck.k9.mail.MessagingException from label20 to label21 with label26;
        catch com.fsck.k9.mail.MessagingException from label22 to label23 with label26;
        catch com.fsck.k9.mail.MessagingException from label24 to label25 with label26;
    }
