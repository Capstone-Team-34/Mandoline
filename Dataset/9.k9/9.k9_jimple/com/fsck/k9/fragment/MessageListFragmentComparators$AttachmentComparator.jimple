com.fsck.k9.fragment.MessageListFragmentComparators$AttachmentComparator extends java.lang.Object implements java.util.Comparator
    public void <init>()
    {
        com.fsck.k9.fragment.MessageListFragmentComparators$AttachmentComparator r0;

        r0 := @this: com.fsck.k9.fragment.MessageListFragmentComparators$AttachmentComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public int compare(android.database.Cursor, android.database.Cursor)
    {
        com.fsck.k9.fragment.MessageListFragmentComparators$AttachmentComparator r0;
        android.database.Cursor $r1, $r2;
        int $i0;
        byte b1, b2;

        r0 := @this: com.fsck.k9.fragment.MessageListFragmentComparators$AttachmentComparator;

        $r1 := @parameter0: android.database.Cursor;

        $r2 := @parameter1: android.database.Cursor;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getInt(int)>(12);

        if $i0 <= 0 goto label3;

        b1 = 0;

     label1:
        $i0 = interfaceinvoke $r2.<android.database.Cursor: int getInt(int)>(12);

        if $i0 <= 0 goto label4;

        b2 = 0;

     label2:
        $i0 = b1 - b2;

        return $i0;

     label3:
        b1 = 1;

        goto label1;

     label4:
        b2 = 1;

        goto label2;
    }
    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        com.fsck.k9.fragment.MessageListFragmentComparators$AttachmentComparator r0;
        int $i0;
        java.lang.Object $r1, $r2;
        android.database.Cursor $r3, $r4;

        r0 := @this: com.fsck.k9.fragment.MessageListFragmentComparators$AttachmentComparator;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (android.database.Cursor) $r1;

        $r4 = (android.database.Cursor) $r2;

        $i0 = virtualinvoke r0.<com.fsck.k9.fragment.MessageListFragmentComparators$AttachmentComparator: int compare(android.database.Cursor,android.database.Cursor)>($r3, $r4);

        return $i0;
    }
