com.fsck.k9.fragment.MlfUtils extends java.lang.Object
    public void <init>()
    {
        com.fsck.k9.fragment.MlfUtils r0;

        r0 := @this: com.fsck.k9.fragment.MlfUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    static java.lang.String buildSubject(java.lang.String, java.lang.String, int)
    {
        java.lang.String $r0, r1;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 == 0 goto label1;

        return r1;

     label1:
        if $i0 <= 1 goto label2;

        $r0 = staticinvoke <com.fsck.k9.helper.Utility: java.lang.String stripSubject(java.lang.String)>($r0);

     label2:
        return $r0;
    }
    static com.fsck.k9.mailstore.LocalFolder getOpenFolder(java.lang.String, com.fsck.k9.Account) throws com.fsck.k9.mail.MessagingException
    {
        java.lang.String $r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mailstore.LocalStore $r2;
        com.fsck.k9.mailstore.LocalFolder $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: com.fsck.k9.Account;

        $r2 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

        $r3 = virtualinvoke $r2.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LocalFolder getFolder(java.lang.String)>($r0);

        virtualinvoke $r3.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(1);

        return $r3;
    }
    static java.lang.String getSenderAddressFromCursor(android.database.Cursor)
    {
        android.database.Cursor $r0;
        java.lang.String $r1;
        com.fsck.k9.mail.Address[] $r2;
        int $i0;
        com.fsck.k9.mail.Address $r3;

        $r0 := @parameter0: android.database.Cursor;

        $r1 = interfaceinvoke $r0.<android.database.Cursor: java.lang.String getString(int)>(5);

        $r2 = staticinvoke <com.fsck.k9.mail.Address: com.fsck.k9.mail.Address[] unpack(java.lang.String)>($r1);

        $i0 = lengthof $r2;

        if $i0 <= 0 goto label1;

        $r3 = $r2[0];

        $r1 = virtualinvoke $r3.<com.fsck.k9.mail.Address: java.lang.String getAddress()>();

        return $r1;

     label1:
        return null;
    }
    static void setLastSelectedFolderName(com.fsck.k9.Preferences, java.util.List, java.lang.String)
    {
        com.fsck.k9.Preferences $r0;
        java.util.List r1;
        java.lang.String $r2, $r6;
        com.fsck.k9.mail.MessagingException r3;
        java.lang.Object $r4;
        com.fsck.k9.activity.MessageReference r5;
        com.fsck.k9.Account $r7;
        com.fsck.k9.mailstore.LocalFolder $r8;
        java.lang.Object[] $r9;

        $r0 := @parameter0: com.fsck.k9.Preferences;

        r1 := @parameter1: java.util.List;

        $r2 := @parameter2: java.lang.String;

     label1:
        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

     label2:
        r5 = (com.fsck.k9.activity.MessageReference) $r4;

     label3:
        $r6 = virtualinvoke r5.<com.fsck.k9.activity.MessageReference: java.lang.String getAccountUuid()>();

        $r7 = virtualinvoke $r0.<com.fsck.k9.Preferences: com.fsck.k9.Account getAccount(java.lang.String)>($r6);

        $r6 = virtualinvoke r5.<com.fsck.k9.activity.MessageReference: java.lang.String getFolderName()>();

        $r8 = staticinvoke <com.fsck.k9.fragment.MlfUtils: com.fsck.k9.mailstore.LocalFolder getOpenFolder(java.lang.String,com.fsck.k9.Account)>($r6, $r7);

        virtualinvoke $r8.<com.fsck.k9.mailstore.LocalFolder: void setLastSelectedFolderName(java.lang.String)>($r2);

     label4:
        return;

     label5:
        r3 := @caughtexception;

        $r9 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r3, "Error getting folder for setLastSelectedFolderName()", $r9);

        return;

        catch com.fsck.k9.mail.MessagingException from label1 to label2 with label5;
        catch com.fsck.k9.mail.MessagingException from label3 to label4 with label5;
    }
