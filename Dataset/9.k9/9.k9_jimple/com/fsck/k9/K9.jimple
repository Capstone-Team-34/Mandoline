com.fsck.k9.K9 extends android.app.Application
public static final int BOOT_RECEIVER_WAKE_LOCK_TIMEOUT
private static final java.lang.String DATABASE_VERSION_CACHE
private static boolean DEBUG
public static boolean DEBUG_SENSITIVE
public static final int DEFAULT_VISIBLE_LIMIT
public static boolean DEVELOPER_MODE
public static final java.lang.String FOLDER_NONE
public static final java.lang.String IDENTITY_HEADER
private static final java.lang.String KEY_LAST_ACCOUNT_DATABASE_VERSION
public static final java.lang.String LOCAL_UID_PREFIX
public static final java.lang.String LOG_TAG
public static final int MAIL_SERVICE_WAKE_LOCK_TIMEOUT
public static final int MANUAL_WAKE_LOCK_TIMEOUT
public static final int MAX_ATTACHMENT_DOWNLOAD_SIZE
public static final int MAX_SEND_ATTEMPTS
public static final java.lang.String NO_OPENPGP_PROVIDER
public static final int PUSH_WAKE_LOCK_TIMEOUT
public static final java.lang.String REMOTE_UID_PREFIX
public static final int WAKE_LOCK_TIMEOUT
public static android.app.Application app
private static com.fsck.k9.K9$BACKGROUND_OPS backgroundOps
private static com.fsck.k9.K9$Theme composerTheme
private static final com.fsck.k9.FontSizes fontSizes
private static java.lang.String language
public static final java.lang.String logFile
private static boolean mAnimations
private static java.lang.String mAttachmentDefaultPath
private static boolean mAutofitWidth
private static boolean mChangeContactNameColor
private static boolean mConfirmDelete
private static boolean mConfirmDeleteFromNotification
private static boolean mConfirmDeleteStarred
private static boolean mConfirmDiscardMessage
private static boolean mConfirmMarkAllRead
private static boolean mConfirmSpam
private static int mContactNameColor
private static boolean mCountSearchMessages
private static boolean mGesturesEnabled
private static boolean mHideSpecialAccounts
private static boolean mHideTimeZone
private static boolean mHideUserAgent
private static boolean mMeasureAccounts
private static boolean mMessageListCheckboxes
private static int mMessageListPreviewLines
private static boolean mMessageListSenderAboveSubject
private static boolean mMessageListStars
private static boolean mMessageViewFixedWidthFont
private static boolean mMessageViewReturnToList
private static boolean mMessageViewShowNext
private static boolean mNotificationDuringQuietTimeEnabled
private static boolean mQuietTimeEnabled
private static java.lang.String mQuietTimeEnds
private static java.lang.String mQuietTimeStarts
private static boolean mShowContactName
private static boolean mShowCorrespondentNames
private static java.util.Map mSortAscending
private static com.fsck.k9.Account$SortType mSortType
private static boolean mStartIntegratedInbox
private static boolean mUseVolumeKeysForListNavigation
private static boolean mUseVolumeKeysForNavigation
private static boolean mWrapFolderNames
private static com.fsck.k9.K9$Theme messageViewTheme
private static final java.util.List observers
private static boolean sColorizeMissingContactPictures
private static android.content.SharedPreferences sDatabaseVersionCache
private static boolean sDatabasesUpToDate
private static boolean sInitialized
private static com.fsck.k9.K9$LockScreenNotificationVisibility sLockScreenNotificationVisibility
private static boolean sMessageViewArchiveActionVisible
private static boolean sMessageViewCopyActionVisible
private static boolean sMessageViewDeleteActionVisible
private static boolean sMessageViewMoveActionVisible
private static boolean sMessageViewSpamActionVisible
private static com.fsck.k9.K9$NotificationHideSubject sNotificationHideSubject
private static com.fsck.k9.K9$NotificationQuickDelete sNotificationQuickDelete
private static java.lang.String sOpenPgpProvider
private static boolean sOpenPgpSupportSignOnly
private static int sPgpInlineDialogCounter
private static int sPgpSignOnlyDialogCounter
private static boolean sShowContactPicture
private static com.fsck.k9.K9$SplitViewMode sSplitViewMode
private static boolean sThreadedViewEnabled
private static boolean sUseBackgroundAsUnreadIndicator
public static java.io.File tempDirectory
private static com.fsck.k9.K9$Theme theme
private static boolean useFixedMessageTheme
    static void <clinit>()
    {
        java.util.ArrayList $r0;
        com.fsck.k9.K9$Theme $r1;
        com.fsck.k9.FontSizes $r2;
        com.fsck.k9.K9$BACKGROUND_OPS $r3;
        com.fsck.k9.K9$NotificationHideSubject $r4;
        com.fsck.k9.K9$NotificationQuickDelete $r5;
        com.fsck.k9.K9$LockScreenNotificationVisibility $r6;
        java.util.HashMap $r7;
        com.fsck.k9.K9$SplitViewMode $r8;

        <com.fsck.k9.K9: android.app.Application app> = null;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        <com.fsck.k9.K9: java.util.List observers> = $r0;

        <com.fsck.k9.K9: boolean sInitialized> = 0;

        <com.fsck.k9.K9: java.lang.String language> = "";

        $r1 = <com.fsck.k9.K9$Theme: com.fsck.k9.K9$Theme LIGHT>;

        <com.fsck.k9.K9: com.fsck.k9.K9$Theme theme> = $r1;

        $r1 = <com.fsck.k9.K9$Theme: com.fsck.k9.K9$Theme USE_GLOBAL>;

        <com.fsck.k9.K9: com.fsck.k9.K9$Theme messageViewTheme> = $r1;

        $r1 = <com.fsck.k9.K9$Theme: com.fsck.k9.K9$Theme USE_GLOBAL>;

        <com.fsck.k9.K9: com.fsck.k9.K9$Theme composerTheme> = $r1;

        <com.fsck.k9.K9: boolean useFixedMessageTheme> = 1;

        $r2 = new com.fsck.k9.FontSizes;

        specialinvoke $r2.<com.fsck.k9.FontSizes: void <init>()>();

        <com.fsck.k9.K9: com.fsck.k9.FontSizes fontSizes> = $r2;

        $r3 = <com.fsck.k9.K9$BACKGROUND_OPS: com.fsck.k9.K9$BACKGROUND_OPS WHEN_CHECKED_AUTO_SYNC>;

        <com.fsck.k9.K9: com.fsck.k9.K9$BACKGROUND_OPS backgroundOps> = $r3;

        <com.fsck.k9.K9: java.lang.String logFile> = null;

        <com.fsck.k9.K9: boolean DEVELOPER_MODE> = 0;

        <com.fsck.k9.K9: boolean DEBUG> = 0;

        <com.fsck.k9.K9: boolean DEBUG_SENSITIVE> = 0;

        <com.fsck.k9.K9: boolean mAnimations> = 1;

        <com.fsck.k9.K9: boolean mConfirmDelete> = 0;

        <com.fsck.k9.K9: boolean mConfirmDiscardMessage> = 1;

        <com.fsck.k9.K9: boolean mConfirmDeleteStarred> = 0;

        <com.fsck.k9.K9: boolean mConfirmSpam> = 0;

        <com.fsck.k9.K9: boolean mConfirmDeleteFromNotification> = 1;

        <com.fsck.k9.K9: boolean mConfirmMarkAllRead> = 1;

        $r4 = <com.fsck.k9.K9$NotificationHideSubject: com.fsck.k9.K9$NotificationHideSubject NEVER>;

        <com.fsck.k9.K9: com.fsck.k9.K9$NotificationHideSubject sNotificationHideSubject> = $r4;

        $r5 = <com.fsck.k9.K9$NotificationQuickDelete: com.fsck.k9.K9$NotificationQuickDelete NEVER>;

        <com.fsck.k9.K9: com.fsck.k9.K9$NotificationQuickDelete sNotificationQuickDelete> = $r5;

        $r6 = <com.fsck.k9.K9$LockScreenNotificationVisibility: com.fsck.k9.K9$LockScreenNotificationVisibility MESSAGE_COUNT>;

        <com.fsck.k9.K9: com.fsck.k9.K9$LockScreenNotificationVisibility sLockScreenNotificationVisibility> = $r6;

        <com.fsck.k9.K9: boolean mMessageListCheckboxes> = 1;

        <com.fsck.k9.K9: boolean mMessageListStars> = 1;

        <com.fsck.k9.K9: int mMessageListPreviewLines> = 2;

        <com.fsck.k9.K9: boolean mShowCorrespondentNames> = 1;

        <com.fsck.k9.K9: boolean mMessageListSenderAboveSubject> = 0;

        <com.fsck.k9.K9: boolean mShowContactName> = 0;

        <com.fsck.k9.K9: boolean mChangeContactNameColor> = 0;

        <com.fsck.k9.K9: int mContactNameColor> = -16777073;

        <com.fsck.k9.K9: boolean sShowContactPicture> = 1;

        <com.fsck.k9.K9: boolean mMessageViewFixedWidthFont> = 0;

        <com.fsck.k9.K9: boolean mMessageViewReturnToList> = 0;

        <com.fsck.k9.K9: boolean mMessageViewShowNext> = 0;

        <com.fsck.k9.K9: boolean mGesturesEnabled> = 1;

        <com.fsck.k9.K9: boolean mUseVolumeKeysForNavigation> = 0;

        <com.fsck.k9.K9: boolean mUseVolumeKeysForListNavigation> = 0;

        <com.fsck.k9.K9: boolean mStartIntegratedInbox> = 0;

        <com.fsck.k9.K9: boolean mMeasureAccounts> = 1;

        <com.fsck.k9.K9: boolean mCountSearchMessages> = 1;

        <com.fsck.k9.K9: boolean mHideSpecialAccounts> = 0;

        <com.fsck.k9.K9: boolean mQuietTimeEnabled> = 0;

        <com.fsck.k9.K9: boolean mNotificationDuringQuietTimeEnabled> = 1;

        <com.fsck.k9.K9: java.lang.String mQuietTimeStarts> = null;

        <com.fsck.k9.K9: java.lang.String mQuietTimeEnds> = null;

        <com.fsck.k9.K9: java.lang.String mAttachmentDefaultPath> = "";

        <com.fsck.k9.K9: boolean mWrapFolderNames> = 0;

        <com.fsck.k9.K9: boolean mHideUserAgent> = 0;

        <com.fsck.k9.K9: boolean mHideTimeZone> = 0;

        <com.fsck.k9.K9: java.lang.String sOpenPgpProvider> = "";

        <com.fsck.k9.K9: boolean sOpenPgpSupportSignOnly> = 0;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        <com.fsck.k9.K9: java.util.Map mSortAscending> = $r7;

        <com.fsck.k9.K9: boolean sUseBackgroundAsUnreadIndicator> = 1;

        <com.fsck.k9.K9: boolean sThreadedViewEnabled> = 1;

        $r8 = <com.fsck.k9.K9$SplitViewMode: com.fsck.k9.K9$SplitViewMode NEVER>;

        <com.fsck.k9.K9: com.fsck.k9.K9$SplitViewMode sSplitViewMode> = $r8;

        <com.fsck.k9.K9: boolean sColorizeMissingContactPictures> = 1;

        <com.fsck.k9.K9: boolean sMessageViewArchiveActionVisible> = 0;

        <com.fsck.k9.K9: boolean sMessageViewDeleteActionVisible> = 1;

        <com.fsck.k9.K9: boolean sMessageViewMoveActionVisible> = 0;

        <com.fsck.k9.K9: boolean sMessageViewCopyActionVisible> = 0;

        <com.fsck.k9.K9: boolean sMessageViewSpamActionVisible> = 0;

        <com.fsck.k9.K9: boolean sDatabasesUpToDate> = 0;

        return;
    }
    public void <init>()
    {
        com.fsck.k9.K9 r0;

        r0 := @this: com.fsck.k9.K9;

        specialinvoke r0.<android.app.Application: void <init>()>();

        return;
    }
    static boolean access$000()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean DEBUG>;

        return z0;
    }
    public static boolean areDatabasesUpToDate()
    {
        java.lang.Throwable $r0;
        boolean z0;

        entermonitor class "Lcom/fsck/k9/K9;";

     label1:
        z0 = <com.fsck.k9.K9: boolean sDatabasesUpToDate>;

     label2:
        exitmonitor class "Lcom/fsck/k9/K9;";

        return z0;

     label3:
        $r0 := @caughtexception;

        exitmonitor class "Lcom/fsck/k9/K9;";

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public static boolean autofitWidth()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean mAutofitWidth>;

        return z0;
    }
    public static boolean changeContactNameColor()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean mChangeContactNameColor>;

        return z0;
    }
    public static boolean confirmDelete()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean mConfirmDelete>;

        return z0;
    }
    public static boolean confirmDeleteFromNotification()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean mConfirmDeleteFromNotification>;

        return z0;
    }
    public static boolean confirmDeleteStarred()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean mConfirmDeleteStarred>;

        return z0;
    }
    public static boolean confirmDiscardMessage()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean mConfirmDiscardMessage>;

        return z0;
    }
    public static boolean confirmMarkAllRead()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean mConfirmMarkAllRead>;

        return z0;
    }
    public static boolean confirmSpam()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean mConfirmSpam>;

        return z0;
    }
    public static boolean countSearchMessages()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean mCountSearchMessages>;

        return z0;
    }
    public static boolean gesturesEnabled()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean mGesturesEnabled>;

        return z0;
    }
    public static java.lang.String getAttachmentDefaultPath()
    {
        java.lang.String r0;

        r0 = <com.fsck.k9.K9: java.lang.String mAttachmentDefaultPath>;

        return r0;
    }
    public static com.fsck.k9.K9$BACKGROUND_OPS getBackgroundOps()
    {
        com.fsck.k9.K9$BACKGROUND_OPS r0;

        r0 = <com.fsck.k9.K9: com.fsck.k9.K9$BACKGROUND_OPS backgroundOps>;

        return r0;
    }
    public static int getContactNameColor()
    {
        int i0;

        i0 = <com.fsck.k9.K9: int mContactNameColor>;

        return i0;
    }
    public static com.fsck.k9.FontSizes getFontSizes()
    {
        com.fsck.k9.FontSizes r0;

        r0 = <com.fsck.k9.K9: com.fsck.k9.FontSizes fontSizes>;

        return r0;
    }
    public static com.fsck.k9.K9$Theme getK9ComposerTheme()
    {
        com.fsck.k9.K9$Theme $r0, $r1;

        $r1 = <com.fsck.k9.K9: com.fsck.k9.K9$Theme composerTheme>;

        $r0 = <com.fsck.k9.K9$Theme: com.fsck.k9.K9$Theme USE_GLOBAL>;

        if $r1 != $r0 goto label1;

        $r0 = <com.fsck.k9.K9: com.fsck.k9.K9$Theme theme>;

        return $r0;

     label1:
        $r0 = <com.fsck.k9.K9: com.fsck.k9.K9$Theme composerTheme>;

        return $r0;
    }
    public static com.fsck.k9.K9$Theme getK9ComposerThemeSetting()
    {
        com.fsck.k9.K9$Theme r0;

        r0 = <com.fsck.k9.K9: com.fsck.k9.K9$Theme composerTheme>;

        return r0;
    }
    public static java.lang.String getK9Language()
    {
        java.lang.String r0;

        r0 = <com.fsck.k9.K9: java.lang.String language>;

        return r0;
    }
    public static com.fsck.k9.K9$Theme getK9MessageViewTheme()
    {
        com.fsck.k9.K9$Theme $r0, $r1;

        $r1 = <com.fsck.k9.K9: com.fsck.k9.K9$Theme messageViewTheme>;

        $r0 = <com.fsck.k9.K9$Theme: com.fsck.k9.K9$Theme USE_GLOBAL>;

        if $r1 != $r0 goto label1;

        $r0 = <com.fsck.k9.K9: com.fsck.k9.K9$Theme theme>;

        return $r0;

     label1:
        $r0 = <com.fsck.k9.K9: com.fsck.k9.K9$Theme messageViewTheme>;

        return $r0;
    }
    public static com.fsck.k9.K9$Theme getK9MessageViewThemeSetting()
    {
        com.fsck.k9.K9$Theme r0;

        r0 = <com.fsck.k9.K9: com.fsck.k9.K9$Theme messageViewTheme>;

        return r0;
    }
    public static com.fsck.k9.K9$Theme getK9Theme()
    {
        com.fsck.k9.K9$Theme r0;

        r0 = <com.fsck.k9.K9: com.fsck.k9.K9$Theme theme>;

        return r0;
    }
    public static int getK9ThemeResourceId()
    {
        int $i0;
        com.fsck.k9.K9$Theme $r0;

        $r0 = <com.fsck.k9.K9: com.fsck.k9.K9$Theme theme>;

        $i0 = staticinvoke <com.fsck.k9.K9: int getK9ThemeResourceId(com.fsck.k9.K9$Theme)>($r0);

        return $i0;
    }
    public static int getK9ThemeResourceId(com.fsck.k9.K9$Theme)
    {
        com.fsck.k9.K9$Theme $r0, $r1;

        $r0 := @parameter0: com.fsck.k9.K9$Theme;

        $r1 = <com.fsck.k9.K9$Theme: com.fsck.k9.K9$Theme LIGHT>;

        if $r0 != $r1 goto label1;

        return 2131230726;

     label1:
        return 2131230725;
    }
    public static com.fsck.k9.K9$LockScreenNotificationVisibility getLockScreenNotificationVisibility()
    {
        com.fsck.k9.K9$LockScreenNotificationVisibility r0;

        r0 = <com.fsck.k9.K9: com.fsck.k9.K9$LockScreenNotificationVisibility sLockScreenNotificationVisibility>;

        return r0;
    }
    public static com.fsck.k9.K9$NotificationHideSubject getNotificationHideSubject()
    {
        com.fsck.k9.K9$NotificationHideSubject r0;

        r0 = <com.fsck.k9.K9: com.fsck.k9.K9$NotificationHideSubject sNotificationHideSubject>;

        return r0;
    }
    public static com.fsck.k9.K9$NotificationQuickDelete getNotificationQuickDeleteBehaviour()
    {
        com.fsck.k9.K9$NotificationQuickDelete r0;

        r0 = <com.fsck.k9.K9: com.fsck.k9.K9$NotificationQuickDelete sNotificationQuickDelete>;

        return r0;
    }
    public static java.lang.String getOpenPgpProvider()
    {
        java.lang.String r0;

        r0 = <com.fsck.k9.K9: java.lang.String sOpenPgpProvider>;

        return r0;
    }
    public static boolean getOpenPgpSupportSignOnly()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean sOpenPgpSupportSignOnly>;

        return z0;
    }
    public static int getPgpInlineDialogCounter()
    {
        int i0;

        i0 = <com.fsck.k9.K9: int sPgpInlineDialogCounter>;

        return i0;
    }
    public static int getPgpSignOnlyDialogCounter()
    {
        int i0;

        i0 = <com.fsck.k9.K9: int sPgpSignOnlyDialogCounter>;

        return i0;
    }
    public static boolean getQuietTimeEnabled()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean mQuietTimeEnabled>;

        return z0;
    }
    public static java.lang.String getQuietTimeEnds()
    {
        java.lang.String r0;

        r0 = <com.fsck.k9.K9: java.lang.String mQuietTimeEnds>;

        return r0;
    }
    public static java.lang.String getQuietTimeStarts()
    {
        java.lang.String r0;

        r0 = <com.fsck.k9.K9: java.lang.String mQuietTimeStarts>;

        return r0;
    }
    public static com.fsck.k9.Account$SortType getSortType()
    {
        java.lang.Throwable $r0;
        com.fsck.k9.Account$SortType r1;

        entermonitor class "Lcom/fsck/k9/K9;";

     label1:
        r1 = <com.fsck.k9.K9: com.fsck.k9.Account$SortType mSortType>;

     label2:
        exitmonitor class "Lcom/fsck/k9/K9;";

        return r1;

     label3:
        $r0 := @caughtexception;

        exitmonitor class "Lcom/fsck/k9/K9;";

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public static com.fsck.k9.K9$SplitViewMode getSplitViewMode()
    {
        java.lang.Throwable $r0;
        com.fsck.k9.K9$SplitViewMode r1;

        entermonitor class "Lcom/fsck/k9/K9;";

     label1:
        r1 = <com.fsck.k9.K9: com.fsck.k9.K9$SplitViewMode sSplitViewMode>;

     label2:
        exitmonitor class "Lcom/fsck/k9/K9;";

        return r1;

     label3:
        $r0 := @caughtexception;

        exitmonitor class "Lcom/fsck/k9/K9;";

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public static boolean hideTimeZone()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean mHideTimeZone>;

        return z0;
    }
    public static boolean hideUserAgent()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean mHideUserAgent>;

        return z0;
    }
    public static boolean isColorizeMissingContactPictures()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean sColorizeMissingContactPictures>;

        return z0;
    }
    public static boolean isDebug()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean DEBUG>;

        return z0;
    }
    public static boolean isHideSpecialAccounts()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean mHideSpecialAccounts>;

        return z0;
    }
    public static boolean isMessageViewArchiveActionVisible()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean sMessageViewArchiveActionVisible>;

        return z0;
    }
    public static boolean isMessageViewCopyActionVisible()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean sMessageViewCopyActionVisible>;

        return z0;
    }
    public static boolean isMessageViewDeleteActionVisible()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean sMessageViewDeleteActionVisible>;

        return z0;
    }
    public static boolean isMessageViewMoveActionVisible()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean sMessageViewMoveActionVisible>;

        return z0;
    }
    public static boolean isMessageViewSpamActionVisible()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean sMessageViewSpamActionVisible>;

        return z0;
    }
    public static boolean isNotificationDuringQuietTimeEnabled()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean mNotificationDuringQuietTimeEnabled>;

        return z0;
    }
    public static boolean isOpenPgpProviderConfigured()
    {
        java.lang.String $r0, $r1;
        boolean $z0;

        $r1 = "";

        $r0 = <com.fsck.k9.K9: java.lang.String sOpenPgpProvider>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public static boolean isQuietTime()
    {
        java.util.GregorianCalendar r0;
        boolean $z0;
        java.lang.String $r1;
        java.lang.String[] $r2;
        int $i0, $i1;
        java.lang.Integer $r3, $r4, $r5, $r6, $r7;

        $z0 = <com.fsck.k9.K9: boolean mQuietTimeEnabled>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r0 = new java.util.GregorianCalendar;

        specialinvoke r0.<java.util.GregorianCalendar: void <init>()>();

        $r1 = <com.fsck.k9.K9: java.lang.String mQuietTimeStarts>;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r1 = $r2[0];

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1 = <com.fsck.k9.K9: java.lang.String mQuietTimeStarts>;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r1 = $r2[1];

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1 = <com.fsck.k9.K9: java.lang.String mQuietTimeEnds>;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r1 = $r2[0];

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1 = <com.fsck.k9.K9: java.lang.String mQuietTimeEnds>;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r1 = $r2[1];

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i0 = virtualinvoke r0.<java.util.GregorianCalendar: int get(int)>(11);

        $i0 = $i0 * 60;

        $i1 = virtualinvoke r0.<java.util.GregorianCalendar: int get(int)>(12);

        $i0 = $i0 + $i1;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $i0 = $i0 * 60;

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $i0 = $i0 + $i1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        $i0 = $i0 * 60;

        $i1 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        $i0 = $i0 + $i1;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $z0 = virtualinvoke $r3.<java.lang.Integer: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label4;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $i1 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        if $i0 <= $i1 goto label3;

        $i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        $i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        if $i0 >= $i1 goto label2;

        $i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        $i1 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        if $i0 > $i1 goto label4;

     label2:
        return 1;

     label3:
        $i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        $i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        if $i0 < $i1 goto label4;

        $i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        $i1 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        if $i0 > $i1 goto label4;

        return 1;

     label4:
        return 0;
    }
    public static boolean isSortAscending(com.fsck.k9.Account$SortType)
    {
        com.fsck.k9.Account$SortType $r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        boolean $z0;
        java.lang.Boolean $r3;
        java.lang.Throwable $r4;

        $r0 := @parameter0: com.fsck.k9.Account$SortType;

        entermonitor class "Lcom/fsck/k9/K9;";

     label1:
        $r1 = <com.fsck.k9.K9: java.util.Map mSortAscending>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        if $r2 != null goto label2;

        $r1 = <com.fsck.k9.K9: java.util.Map mSortAscending>;

        $z0 = virtualinvoke $r0.<com.fsck.k9.Account$SortType: boolean isDefaultAscending()>();

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r3);

     label2:
        $r1 = <com.fsck.k9.K9: java.util.Map mSortAscending>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

     label3:
        exitmonitor class "Lcom/fsck/k9/K9;";

        return $z0;

     label4:
        $r4 := @caughtexception;

        exitmonitor class "Lcom/fsck/k9/K9;";

        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label4;
    }
    public static boolean isThreadedViewEnabled()
    {
        java.lang.Throwable $r0;
        boolean z0;

        entermonitor class "Lcom/fsck/k9/K9;";

     label1:
        z0 = <com.fsck.k9.K9: boolean sThreadedViewEnabled>;

     label2:
        exitmonitor class "Lcom/fsck/k9/K9;";

        return z0;

     label3:
        $r0 := @caughtexception;

        exitmonitor class "Lcom/fsck/k9/K9;";

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public static void loadPrefs(com.fsck.k9.Preferences)
    {
        com.fsck.k9.Preferences $r0;
        com.fsck.k9.preferences.Storage $r1;
        boolean $z0;
        int $i0, $i1;
        java.lang.String $r2;
        com.fsck.k9.Account$SortType $r3;
        java.util.Map $r4;
        java.lang.Boolean $r5;
        com.fsck.k9.K9$NotificationHideSubject $r6;
        com.fsck.k9.K9$NotificationQuickDelete $r7;
        com.fsck.k9.K9$LockScreenNotificationVisibility $r8;
        com.fsck.k9.K9$SplitViewMode $r9;
        java.io.File $r10;
        com.fsck.k9.FontSizes $r11;
        com.fsck.k9.K9$BACKGROUND_OPS $r12;
        com.fsck.k9.K9$Theme $r13;
        com.fsck.k9.K9$Theme[] $r14;
        java.lang.Exception r15, r16;

        $r0 := @parameter0: com.fsck.k9.Preferences;

        $r1 = virtualinvoke $r0.<com.fsck.k9.Preferences: com.fsck.k9.preferences.Storage getStorage()>();

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("enableDebugLogging", 0);

        staticinvoke <com.fsck.k9.K9: void setDebug(boolean)>($z0);

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("enableSensitiveLogging", 0);

        <com.fsck.k9.K9: boolean DEBUG_SENSITIVE> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("animations", 1);

        <com.fsck.k9.K9: boolean mAnimations> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("gesturesEnabled", 0);

        <com.fsck.k9.K9: boolean mGesturesEnabled> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("useVolumeKeysForNavigation", 0);

        <com.fsck.k9.K9: boolean mUseVolumeKeysForNavigation> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("useVolumeKeysForListNavigation", 0);

        <com.fsck.k9.K9: boolean mUseVolumeKeysForListNavigation> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("startIntegratedInbox", 0);

        <com.fsck.k9.K9: boolean mStartIntegratedInbox> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("measureAccounts", 1);

        <com.fsck.k9.K9: boolean mMeasureAccounts> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("countSearchMessages", 1);

        <com.fsck.k9.K9: boolean mCountSearchMessages> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("hideSpecialAccounts", 0);

        <com.fsck.k9.K9: boolean mHideSpecialAccounts> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("messageListSenderAboveSubject", 0);

        <com.fsck.k9.K9: boolean mMessageListSenderAboveSubject> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("messageListCheckboxes", 0);

        <com.fsck.k9.K9: boolean mMessageListCheckboxes> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("messageListStars", 1);

        <com.fsck.k9.K9: boolean mMessageListStars> = $z0;

        $i0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: int getInt(java.lang.String,int)>("messageListPreviewLines", 2);

        <com.fsck.k9.K9: int mMessageListPreviewLines> = $i0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("autofitWidth", 1);

        <com.fsck.k9.K9: boolean mAutofitWidth> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("quietTimeEnabled", 0);

        <com.fsck.k9.K9: boolean mQuietTimeEnabled> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("notificationDuringQuietTimeEnabled", 1);

        <com.fsck.k9.K9: boolean mNotificationDuringQuietTimeEnabled> = $z0;

        $r2 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: java.lang.String getString(java.lang.String,java.lang.String)>("quietTimeStarts", "21:00");

        <com.fsck.k9.K9: java.lang.String mQuietTimeStarts> = $r2;

        $r2 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: java.lang.String getString(java.lang.String,java.lang.String)>("quietTimeEnds", "7:00");

        <com.fsck.k9.K9: java.lang.String mQuietTimeEnds> = $r2;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("showCorrespondentNames", 1);

        <com.fsck.k9.K9: boolean mShowCorrespondentNames> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("showContactName", 0);

        <com.fsck.k9.K9: boolean mShowContactName> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("showContactPicture", 1);

        <com.fsck.k9.K9: boolean sShowContactPicture> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("changeRegisteredNameColor", 0);

        <com.fsck.k9.K9: boolean mChangeContactNameColor> = $z0;

        $i0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: int getInt(java.lang.String,int)>("registeredNameColor", -16777073);

        <com.fsck.k9.K9: int mContactNameColor> = $i0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("messageViewFixedWidthFont", 0);

        <com.fsck.k9.K9: boolean mMessageViewFixedWidthFont> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("messageViewReturnToList", 0);

        <com.fsck.k9.K9: boolean mMessageViewReturnToList> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("messageViewShowNext", 0);

        <com.fsck.k9.K9: boolean mMessageViewShowNext> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("wrapFolderNames", 0);

        <com.fsck.k9.K9: boolean mWrapFolderNames> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("hideUserAgent", 0);

        <com.fsck.k9.K9: boolean mHideUserAgent> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("hideTimeZone", 0);

        <com.fsck.k9.K9: boolean mHideTimeZone> = $z0;

        $r2 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: java.lang.String getString(java.lang.String,java.lang.String)>("openPgpProvider", "");

        <com.fsck.k9.K9: java.lang.String sOpenPgpProvider> = $r2;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("openPgpSupportSignOnly", 0);

        <com.fsck.k9.K9: boolean sOpenPgpSupportSignOnly> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("confirmDelete", 0);

        <com.fsck.k9.K9: boolean mConfirmDelete> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("confirmDiscardMessage", 1);

        <com.fsck.k9.K9: boolean mConfirmDiscardMessage> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("confirmDeleteStarred", 0);

        <com.fsck.k9.K9: boolean mConfirmDeleteStarred> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("confirmSpam", 0);

        <com.fsck.k9.K9: boolean mConfirmSpam> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("confirmDeleteFromNotification", 1);

        <com.fsck.k9.K9: boolean mConfirmDeleteFromNotification> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("confirmMarkAllRead", 1);

        <com.fsck.k9.K9: boolean mConfirmMarkAllRead> = $z0;

        $r3 = <com.fsck.k9.Account: com.fsck.k9.Account$SortType DEFAULT_SORT_TYPE>;

     label01:
        $r2 = virtualinvoke $r3.<com.fsck.k9.Account$SortType: java.lang.String name()>();

        $r2 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: java.lang.String getString(java.lang.String,java.lang.String)>("sortTypeEnum", $r2);

        $r3 = staticinvoke <com.fsck.k9.Account$SortType: com.fsck.k9.Account$SortType valueOf(java.lang.String)>($r2);

     label02:
        <com.fsck.k9.K9: com.fsck.k9.Account$SortType mSortType> = $r3;

     label03:
        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("sortAscending", 0);

        $r4 = <com.fsck.k9.K9: java.util.Map mSortAscending>;

        $r3 = <com.fsck.k9.K9: com.fsck.k9.Account$SortType mSortType>;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $r2 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: java.lang.String getString(java.lang.String,java.lang.String)>("notificationHideSubject", null);

        if $r2 != null goto label15;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("keyguardPrivacy", 0);

        if $z0 == 0 goto label14;

        $r6 = <com.fsck.k9.K9$NotificationHideSubject: com.fsck.k9.K9$NotificationHideSubject WHEN_LOCKED>;

     label04:
        <com.fsck.k9.K9: com.fsck.k9.K9$NotificationHideSubject sNotificationHideSubject> = $r6;

     label05:
        $r2 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: java.lang.String getString(java.lang.String,java.lang.String)>("notificationQuickDelete", null);

        if $r2 == null goto label06;

        $r7 = staticinvoke <com.fsck.k9.K9$NotificationQuickDelete: com.fsck.k9.K9$NotificationQuickDelete valueOf(java.lang.String)>($r2);

        <com.fsck.k9.K9: com.fsck.k9.K9$NotificationQuickDelete sNotificationQuickDelete> = $r7;

     label06:
        $r2 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: java.lang.String getString(java.lang.String,java.lang.String)>("lockScreenNotificationVisibility", null);

        if $r2 == null goto label07;

        $r8 = staticinvoke <com.fsck.k9.K9$LockScreenNotificationVisibility: com.fsck.k9.K9$LockScreenNotificationVisibility valueOf(java.lang.String)>($r2);

        <com.fsck.k9.K9: com.fsck.k9.K9$LockScreenNotificationVisibility sLockScreenNotificationVisibility> = $r8;

     label07:
        $r2 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: java.lang.String getString(java.lang.String,java.lang.String)>("splitViewMode", null);

        if $r2 == null goto label08;

        $r9 = staticinvoke <com.fsck.k9.K9$SplitViewMode: com.fsck.k9.K9$SplitViewMode valueOf(java.lang.String)>($r2);

        <com.fsck.k9.K9: com.fsck.k9.K9$SplitViewMode sSplitViewMode> = $r9;

     label08:
        $r2 = <android.os.Environment: java.lang.String DIRECTORY_DOWNLOADS>;

        $r10 = staticinvoke <android.os.Environment: java.io.File getExternalStoragePublicDirectory(java.lang.String)>($r2);

        $r2 = virtualinvoke $r10.<java.io.File: java.lang.String toString()>();

        $r2 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: java.lang.String getString(java.lang.String,java.lang.String)>("attachmentdefaultpath", $r2);

        <com.fsck.k9.K9: java.lang.String mAttachmentDefaultPath> = $r2;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("useBackgroundAsUnreadIndicator", 1);

        <com.fsck.k9.K9: boolean sUseBackgroundAsUnreadIndicator> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("threadedView", 1);

        <com.fsck.k9.K9: boolean sThreadedViewEnabled> = $z0;

        $r11 = <com.fsck.k9.K9: com.fsck.k9.FontSizes fontSizes>;

        virtualinvoke $r11.<com.fsck.k9.FontSizes: void load(com.fsck.k9.preferences.Storage)>($r1);

        $r12 = <com.fsck.k9.K9$BACKGROUND_OPS: com.fsck.k9.K9$BACKGROUND_OPS WHEN_CHECKED_AUTO_SYNC>;

     label09:
        $r2 = virtualinvoke $r12.<com.fsck.k9.K9$BACKGROUND_OPS: java.lang.String name()>();

        $r2 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: java.lang.String getString(java.lang.String,java.lang.String)>("backgroundOperations", $r2);

        $r12 = staticinvoke <com.fsck.k9.K9$BACKGROUND_OPS: com.fsck.k9.K9$BACKGROUND_OPS valueOf(java.lang.String)>($r2);

        staticinvoke <com.fsck.k9.K9: boolean setBackgroundOps(com.fsck.k9.K9$BACKGROUND_OPS)>($r12);

     label10:
        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("colorizeMissingContactPictures", 1);

        <com.fsck.k9.K9: boolean sColorizeMissingContactPictures> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("messageViewArchiveActionVisible", 0);

        <com.fsck.k9.K9: boolean sMessageViewArchiveActionVisible> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("messageViewDeleteActionVisible", 1);

        <com.fsck.k9.K9: boolean sMessageViewDeleteActionVisible> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("messageViewMoveActionVisible", 0);

        <com.fsck.k9.K9: boolean sMessageViewMoveActionVisible> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("messageViewCopyActionVisible", 0);

        <com.fsck.k9.K9: boolean sMessageViewCopyActionVisible> = $z0;

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("messageViewSpamActionVisible", 0);

        <com.fsck.k9.K9: boolean sMessageViewSpamActionVisible> = $z0;

        $i0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: int getInt(java.lang.String,int)>("pgpInlineDialogCounter", 0);

        <com.fsck.k9.K9: int sPgpInlineDialogCounter> = $i0;

        $i0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: int getInt(java.lang.String,int)>("pgpSignOnlyDialogCounter", 0);

        <com.fsck.k9.K9: int sPgpSignOnlyDialogCounter> = $i0;

        $r2 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: java.lang.String getString(java.lang.String,java.lang.String)>("language", "");

        staticinvoke <com.fsck.k9.K9: void setK9Language(java.lang.String)>($r2);

        $r13 = <com.fsck.k9.K9$Theme: com.fsck.k9.K9$Theme LIGHT>;

        $i0 = virtualinvoke $r13.<com.fsck.k9.K9$Theme: int ordinal()>();

        $i0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: int getInt(java.lang.String,int)>("theme", $i0);

        $r13 = <com.fsck.k9.K9$Theme: com.fsck.k9.K9$Theme DARK>;

        $i1 = virtualinvoke $r13.<com.fsck.k9.K9$Theme: int ordinal()>();

        if $i0 == $i1 goto label11;

        if $i0 != 16973829 goto label17;

     label11:
        $r13 = <com.fsck.k9.K9$Theme: com.fsck.k9.K9$Theme DARK>;

        staticinvoke <com.fsck.k9.K9: void setK9Theme(com.fsck.k9.K9$Theme)>($r13);

     label12:
        $r13 = <com.fsck.k9.K9$Theme: com.fsck.k9.K9$Theme USE_GLOBAL>;

        $i0 = virtualinvoke $r13.<com.fsck.k9.K9$Theme: int ordinal()>();

        $i0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: int getInt(java.lang.String,int)>("messageViewTheme", $i0);

        $r14 = staticinvoke <com.fsck.k9.K9$Theme: com.fsck.k9.K9$Theme[] values()>();

        $r13 = $r14[$i0];

        staticinvoke <com.fsck.k9.K9: void setK9MessageViewThemeSetting(com.fsck.k9.K9$Theme)>($r13);

        $r13 = <com.fsck.k9.K9$Theme: com.fsck.k9.K9$Theme USE_GLOBAL>;

        $i0 = virtualinvoke $r13.<com.fsck.k9.K9$Theme: int ordinal()>();

        $i0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: int getInt(java.lang.String,int)>("messageComposeTheme", $i0);

        $r14 = staticinvoke <com.fsck.k9.K9$Theme: com.fsck.k9.K9$Theme[] values()>();

        $r13 = $r14[$i0];

        staticinvoke <com.fsck.k9.K9: void setK9ComposerThemeSetting(com.fsck.k9.K9$Theme)>($r13);

        $z0 = virtualinvoke $r1.<com.fsck.k9.preferences.Storage: boolean getBoolean(java.lang.String,boolean)>("fixedMessageViewTheme", 1);

        staticinvoke <com.fsck.k9.K9: void setUseFixedMessageViewTheme(boolean)>($z0);

        return;

     label13:
        r15 := @caughtexception;

        $r3 = <com.fsck.k9.Account: com.fsck.k9.Account$SortType DEFAULT_SORT_TYPE>;

        <com.fsck.k9.K9: com.fsck.k9.Account$SortType mSortType> = $r3;

        goto label03;

     label14:
        $r6 = <com.fsck.k9.K9$NotificationHideSubject: com.fsck.k9.K9$NotificationHideSubject NEVER>;

        goto label04;

     label15:
        $r6 = staticinvoke <com.fsck.k9.K9$NotificationHideSubject: com.fsck.k9.K9$NotificationHideSubject valueOf(java.lang.String)>($r2);

        <com.fsck.k9.K9: com.fsck.k9.K9$NotificationHideSubject sNotificationHideSubject> = $r6;

        goto label05;

     label16:
        r16 := @caughtexception;

        $r12 = <com.fsck.k9.K9$BACKGROUND_OPS: com.fsck.k9.K9$BACKGROUND_OPS WHEN_CHECKED_AUTO_SYNC>;

        staticinvoke <com.fsck.k9.K9: boolean setBackgroundOps(com.fsck.k9.K9$BACKGROUND_OPS)>($r12);

        goto label10;

     label17:
        $r13 = <com.fsck.k9.K9$Theme: com.fsck.k9.K9$Theme LIGHT>;

        staticinvoke <com.fsck.k9.K9: void setK9Theme(com.fsck.k9.K9$Theme)>($r13);

        goto label12;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label09 to label10 with label16;
    }
    public static boolean measureAccounts()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean mMeasureAccounts>;

        return z0;
    }
    public static boolean messageListCheckboxes()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean mMessageListCheckboxes>;

        return z0;
    }
    public static int messageListPreviewLines()
    {
        int i0;

        i0 = <com.fsck.k9.K9: int mMessageListPreviewLines>;

        return i0;
    }
    public static boolean messageListSenderAboveSubject()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean mMessageListSenderAboveSubject>;

        return z0;
    }
    public static boolean messageListStars()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean mMessageListStars>;

        return z0;
    }
    public static boolean messageViewFixedWidthFont()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean mMessageViewFixedWidthFont>;

        return z0;
    }
    public static boolean messageViewReturnToList()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean mMessageViewReturnToList>;

        return z0;
    }
    public static boolean messageViewShowNext()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean mMessageViewShowNext>;

        return z0;
    }
    public static void registerApplicationAware(com.fsck.k9.K9$ApplicationAware)
    {
        com.fsck.k9.K9$ApplicationAware $r0;
        java.util.List $r1, $r3;
        boolean $z0;
        android.app.Application $r2;
        java.lang.Throwable $r4;

        $r0 := @parameter0: com.fsck.k9.K9$ApplicationAware;

        $r1 = <com.fsck.k9.K9: java.util.List observers>;

        entermonitor $r1;

     label1:
        $z0 = <com.fsck.k9.K9: boolean sInitialized>;

        if $z0 == 0 goto label4;

        $r2 = <com.fsck.k9.K9: android.app.Application app>;

        interfaceinvoke $r0.<com.fsck.k9.K9$ApplicationAware: void initializeComponent(android.app.Application)>($r2);

     label2:
        exitmonitor $r1;

     label3:
        return;

     label4:
        $r3 = <com.fsck.k9.K9: java.util.List observers>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>($r0);

        if $z0 != 0 goto label2;

        $r3 = <com.fsck.k9.K9: java.util.List observers>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r0);

        goto label2;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label4 to label6 with label5;
    }
    public static void save(com.fsck.k9.preferences.StorageEditor)
    {
        com.fsck.k9.preferences.StorageEditor $r0;
        com.fsck.k9.Account$SortType $r1;
        boolean $z0;
        com.fsck.k9.K9$BACKGROUND_OPS $r2;
        java.lang.String $r3;
        int $i0;
        com.fsck.k9.K9$Theme $r4;
        java.util.Map $r5;
        java.lang.Object $r6;
        java.lang.Boolean $r7;
        com.fsck.k9.K9$NotificationHideSubject $r8;
        com.fsck.k9.K9$NotificationQuickDelete $r9;
        com.fsck.k9.K9$LockScreenNotificationVisibility $r10;
        com.fsck.k9.K9$SplitViewMode $r11;
        com.fsck.k9.FontSizes $r12;

        $r0 := @parameter0: com.fsck.k9.preferences.StorageEditor;

        $z0 = <com.fsck.k9.K9: boolean DEBUG>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("enableDebugLogging", $z0);

        $z0 = <com.fsck.k9.K9: boolean DEBUG_SENSITIVE>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("enableSensitiveLogging", $z0);

        $r2 = <com.fsck.k9.K9: com.fsck.k9.K9$BACKGROUND_OPS backgroundOps>;

        $r3 = virtualinvoke $r2.<com.fsck.k9.K9$BACKGROUND_OPS: java.lang.String name()>();

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putString(java.lang.String,java.lang.String)>("backgroundOperations", $r3);

        $z0 = <com.fsck.k9.K9: boolean mAnimations>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("animations", $z0);

        $z0 = <com.fsck.k9.K9: boolean mGesturesEnabled>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("gesturesEnabled", $z0);

        $z0 = <com.fsck.k9.K9: boolean mUseVolumeKeysForNavigation>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("useVolumeKeysForNavigation", $z0);

        $z0 = <com.fsck.k9.K9: boolean mUseVolumeKeysForListNavigation>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("useVolumeKeysForListNavigation", $z0);

        $z0 = <com.fsck.k9.K9: boolean mAutofitWidth>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("autofitWidth", $z0);

        $z0 = <com.fsck.k9.K9: boolean mQuietTimeEnabled>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("quietTimeEnabled", $z0);

        $z0 = <com.fsck.k9.K9: boolean mNotificationDuringQuietTimeEnabled>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("notificationDuringQuietTimeEnabled", $z0);

        $r3 = <com.fsck.k9.K9: java.lang.String mQuietTimeStarts>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putString(java.lang.String,java.lang.String)>("quietTimeStarts", $r3);

        $r3 = <com.fsck.k9.K9: java.lang.String mQuietTimeEnds>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putString(java.lang.String,java.lang.String)>("quietTimeEnds", $r3);

        $z0 = <com.fsck.k9.K9: boolean mStartIntegratedInbox>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("startIntegratedInbox", $z0);

        $z0 = <com.fsck.k9.K9: boolean mMeasureAccounts>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("measureAccounts", $z0);

        $z0 = <com.fsck.k9.K9: boolean mCountSearchMessages>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("countSearchMessages", $z0);

        $z0 = <com.fsck.k9.K9: boolean mMessageListSenderAboveSubject>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("messageListSenderAboveSubject", $z0);

        $z0 = <com.fsck.k9.K9: boolean mHideSpecialAccounts>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("hideSpecialAccounts", $z0);

        $z0 = <com.fsck.k9.K9: boolean mMessageListStars>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("messageListStars", $z0);

        $i0 = <com.fsck.k9.K9: int mMessageListPreviewLines>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putInt(java.lang.String,int)>("messageListPreviewLines", $i0);

        $z0 = <com.fsck.k9.K9: boolean mMessageListCheckboxes>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("messageListCheckboxes", $z0);

        $z0 = <com.fsck.k9.K9: boolean mShowCorrespondentNames>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("showCorrespondentNames", $z0);

        $z0 = <com.fsck.k9.K9: boolean mShowContactName>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("showContactName", $z0);

        $z0 = <com.fsck.k9.K9: boolean sShowContactPicture>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("showContactPicture", $z0);

        $z0 = <com.fsck.k9.K9: boolean mChangeContactNameColor>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("changeRegisteredNameColor", $z0);

        $i0 = <com.fsck.k9.K9: int mContactNameColor>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putInt(java.lang.String,int)>("registeredNameColor", $i0);

        $z0 = <com.fsck.k9.K9: boolean mMessageViewFixedWidthFont>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("messageViewFixedWidthFont", $z0);

        $z0 = <com.fsck.k9.K9: boolean mMessageViewReturnToList>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("messageViewReturnToList", $z0);

        $z0 = <com.fsck.k9.K9: boolean mMessageViewShowNext>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("messageViewShowNext", $z0);

        $z0 = <com.fsck.k9.K9: boolean mWrapFolderNames>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("wrapFolderNames", $z0);

        $z0 = <com.fsck.k9.K9: boolean mHideUserAgent>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("hideUserAgent", $z0);

        $z0 = <com.fsck.k9.K9: boolean mHideTimeZone>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("hideTimeZone", $z0);

        $r3 = <com.fsck.k9.K9: java.lang.String sOpenPgpProvider>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putString(java.lang.String,java.lang.String)>("openPgpProvider", $r3);

        $z0 = <com.fsck.k9.K9: boolean sOpenPgpSupportSignOnly>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("openPgpSupportSignOnly", $z0);

        $r3 = <com.fsck.k9.K9: java.lang.String language>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putString(java.lang.String,java.lang.String)>("language", $r3);

        $r4 = <com.fsck.k9.K9: com.fsck.k9.K9$Theme theme>;

        $i0 = virtualinvoke $r4.<com.fsck.k9.K9$Theme: int ordinal()>();

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putInt(java.lang.String,int)>("theme", $i0);

        $r4 = <com.fsck.k9.K9: com.fsck.k9.K9$Theme messageViewTheme>;

        $i0 = virtualinvoke $r4.<com.fsck.k9.K9$Theme: int ordinal()>();

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putInt(java.lang.String,int)>("messageViewTheme", $i0);

        $r4 = <com.fsck.k9.K9: com.fsck.k9.K9$Theme composerTheme>;

        $i0 = virtualinvoke $r4.<com.fsck.k9.K9$Theme: int ordinal()>();

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putInt(java.lang.String,int)>("messageComposeTheme", $i0);

        $z0 = <com.fsck.k9.K9: boolean useFixedMessageTheme>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("fixedMessageViewTheme", $z0);

        $z0 = <com.fsck.k9.K9: boolean mConfirmDelete>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("confirmDelete", $z0);

        $z0 = <com.fsck.k9.K9: boolean mConfirmDiscardMessage>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("confirmDiscardMessage", $z0);

        $z0 = <com.fsck.k9.K9: boolean mConfirmDeleteStarred>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("confirmDeleteStarred", $z0);

        $z0 = <com.fsck.k9.K9: boolean mConfirmSpam>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("confirmSpam", $z0);

        $z0 = <com.fsck.k9.K9: boolean mConfirmDeleteFromNotification>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("confirmDeleteFromNotification", $z0);

        $z0 = <com.fsck.k9.K9: boolean mConfirmMarkAllRead>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("confirmMarkAllRead", $z0);

        $r1 = <com.fsck.k9.K9: com.fsck.k9.Account$SortType mSortType>;

        $r3 = virtualinvoke $r1.<com.fsck.k9.Account$SortType: java.lang.String name()>();

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putString(java.lang.String,java.lang.String)>("sortTypeEnum", $r3);

        $r5 = <com.fsck.k9.K9: java.util.Map mSortAscending>;

        $r1 = <com.fsck.k9.K9: com.fsck.k9.Account$SortType mSortType>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r7 = (java.lang.Boolean) $r6;

        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("sortAscending", $z0);

        $r8 = <com.fsck.k9.K9: com.fsck.k9.K9$NotificationHideSubject sNotificationHideSubject>;

        $r3 = virtualinvoke $r8.<com.fsck.k9.K9$NotificationHideSubject: java.lang.String toString()>();

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putString(java.lang.String,java.lang.String)>("notificationHideSubject", $r3);

        $r9 = <com.fsck.k9.K9: com.fsck.k9.K9$NotificationQuickDelete sNotificationQuickDelete>;

        $r3 = virtualinvoke $r9.<com.fsck.k9.K9$NotificationQuickDelete: java.lang.String toString()>();

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putString(java.lang.String,java.lang.String)>("notificationQuickDelete", $r3);

        $r10 = <com.fsck.k9.K9: com.fsck.k9.K9$LockScreenNotificationVisibility sLockScreenNotificationVisibility>;

        $r3 = virtualinvoke $r10.<com.fsck.k9.K9$LockScreenNotificationVisibility: java.lang.String toString()>();

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putString(java.lang.String,java.lang.String)>("lockScreenNotificationVisibility", $r3);

        $r3 = <com.fsck.k9.K9: java.lang.String mAttachmentDefaultPath>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putString(java.lang.String,java.lang.String)>("attachmentdefaultpath", $r3);

        $z0 = <com.fsck.k9.K9: boolean sUseBackgroundAsUnreadIndicator>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("useBackgroundAsUnreadIndicator", $z0);

        $z0 = <com.fsck.k9.K9: boolean sThreadedViewEnabled>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("threadedView", $z0);

        $r11 = <com.fsck.k9.K9: com.fsck.k9.K9$SplitViewMode sSplitViewMode>;

        $r3 = virtualinvoke $r11.<com.fsck.k9.K9$SplitViewMode: java.lang.String name()>();

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putString(java.lang.String,java.lang.String)>("splitViewMode", $r3);

        $z0 = <com.fsck.k9.K9: boolean sColorizeMissingContactPictures>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("colorizeMissingContactPictures", $z0);

        $z0 = <com.fsck.k9.K9: boolean sMessageViewArchiveActionVisible>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("messageViewArchiveActionVisible", $z0);

        $z0 = <com.fsck.k9.K9: boolean sMessageViewDeleteActionVisible>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("messageViewDeleteActionVisible", $z0);

        $z0 = <com.fsck.k9.K9: boolean sMessageViewMoveActionVisible>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("messageViewMoveActionVisible", $z0);

        $z0 = <com.fsck.k9.K9: boolean sMessageViewCopyActionVisible>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("messageViewCopyActionVisible", $z0);

        $z0 = <com.fsck.k9.K9: boolean sMessageViewSpamActionVisible>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>("messageViewSpamActionVisible", $z0);

        $i0 = <com.fsck.k9.K9: int sPgpInlineDialogCounter>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putInt(java.lang.String,int)>("pgpInlineDialogCounter", $i0);

        $i0 = <com.fsck.k9.K9: int sPgpSignOnlyDialogCounter>;

        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putInt(java.lang.String,int)>("pgpSignOnlyDialogCounter", $i0);

        $r12 = <com.fsck.k9.K9: com.fsck.k9.FontSizes fontSizes>;

        virtualinvoke $r12.<com.fsck.k9.FontSizes: void save(com.fsck.k9.preferences.StorageEditor)>($r0);

        return;
    }
    public static void saveSettingsAsync()
    {
        com.fsck.k9.K9$4 $r0;
        java.lang.Void[] $r1;

        $r0 = new com.fsck.k9.K9$4;

        specialinvoke $r0.<com.fsck.k9.K9$4: void <init>()>();

        $r1 = newarray (java.lang.Void)[0];

        virtualinvoke $r0.<com.fsck.k9.K9$4: android.os.AsyncTask execute(java.lang.Object[])>($r1);

        return;
    }
    public static void setAnimations(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean mAnimations> = $z0;

        return;
    }
    public static void setAttachmentDefaultPath(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        <com.fsck.k9.K9: java.lang.String mAttachmentDefaultPath> = $r0;

        return;
    }
    public static void setAutofitWidth(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean mAutofitWidth> = $z0;

        return;
    }
    public static boolean setBackgroundOps(com.fsck.k9.K9$BACKGROUND_OPS)
    {
        com.fsck.k9.K9$BACKGROUND_OPS $r0, r1;

        $r0 := @parameter0: com.fsck.k9.K9$BACKGROUND_OPS;

        r1 = <com.fsck.k9.K9: com.fsck.k9.K9$BACKGROUND_OPS backgroundOps>;

        <com.fsck.k9.K9: com.fsck.k9.K9$BACKGROUND_OPS backgroundOps> = $r0;

        if $r0 == r1 goto label1;

        return 1;

     label1:
        return 0;
    }
    public static boolean setBackgroundOps(java.lang.String)
    {
        java.lang.String $r0;
        com.fsck.k9.K9$BACKGROUND_OPS $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.fsck.k9.K9$BACKGROUND_OPS: com.fsck.k9.K9$BACKGROUND_OPS valueOf(java.lang.String)>($r0);

        $z0 = staticinvoke <com.fsck.k9.K9: boolean setBackgroundOps(com.fsck.k9.K9$BACKGROUND_OPS)>($r1);

        return $z0;
    }
    public static void setChangeContactNameColor(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean mChangeContactNameColor> = $z0;

        return;
    }
    public static void setColorizeMissingContactPictures(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean sColorizeMissingContactPictures> = $z0;

        return;
    }
    public static void setConfirmDelete(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean mConfirmDelete> = $z0;

        return;
    }
    public static void setConfirmDeleteFromNotification(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean mConfirmDeleteFromNotification> = $z0;

        return;
    }
    public static void setConfirmDeleteStarred(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean mConfirmDeleteStarred> = $z0;

        return;
    }
    public static void setConfirmDiscardMessage(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean mConfirmDiscardMessage> = $z0;

        return;
    }
    public static void setConfirmMarkAllRead(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean mConfirmMarkAllRead> = $z0;

        return;
    }
    public static void setConfirmSpam(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean mConfirmSpam> = $z0;

        return;
    }
    public static void setContactNameColor(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        <com.fsck.k9.K9: int mContactNameColor> = $i0;

        return;
    }
    public static void setCountSearchMessages(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean mCountSearchMessages> = $z0;

        return;
    }
    public static void setDatabasesUpToDate(boolean)
    {
        boolean $z0;
        android.content.SharedPreferences$Editor $r0;
        android.content.SharedPreferences $r1;
        java.lang.Throwable $r2;

        $z0 := @parameter0: boolean;

        entermonitor class "Lcom/fsck/k9/K9;";

     label1:
        <com.fsck.k9.K9: boolean sDatabasesUpToDate> = 1;

        if $z0 == 0 goto label2;

        $r1 = <com.fsck.k9.K9: android.content.SharedPreferences sDatabaseVersionCache>;

        $r0 = interfaceinvoke $r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke $r0.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("last_account_database_version", 61);

        interfaceinvoke $r0.<android.content.SharedPreferences$Editor: void apply()>();

     label2:
        exitmonitor class "Lcom/fsck/k9/K9;";

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor class "Lcom/fsck/k9/K9;";

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public static void setDebug(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean DEBUG> = $z0;

        staticinvoke <com.fsck.k9.K9: void updateLoggingStatus()>();

        return;
    }
    public static void setGesturesEnabled(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean mGesturesEnabled> = $z0;

        return;
    }
    public static void setHideSpecialAccounts(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean mHideSpecialAccounts> = $z0;

        return;
    }
    public static void setHideTimeZone(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean mHideTimeZone> = $z0;

        return;
    }
    public static void setHideUserAgent(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean mHideUserAgent> = $z0;

        return;
    }
    public static void setK9ComposerThemeSetting(com.fsck.k9.K9$Theme)
    {
        com.fsck.k9.K9$Theme $r0;

        $r0 := @parameter0: com.fsck.k9.K9$Theme;

        <com.fsck.k9.K9: com.fsck.k9.K9$Theme composerTheme> = $r0;

        return;
    }
    public static void setK9Language(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        <com.fsck.k9.K9: java.lang.String language> = $r0;

        return;
    }
    public static void setK9MessageViewThemeSetting(com.fsck.k9.K9$Theme)
    {
        com.fsck.k9.K9$Theme $r0;

        $r0 := @parameter0: com.fsck.k9.K9$Theme;

        <com.fsck.k9.K9: com.fsck.k9.K9$Theme messageViewTheme> = $r0;

        return;
    }
    public static void setK9Theme(com.fsck.k9.K9$Theme)
    {
        com.fsck.k9.K9$Theme $r0, $r1;

        $r0 := @parameter0: com.fsck.k9.K9$Theme;

        $r1 = <com.fsck.k9.K9$Theme: com.fsck.k9.K9$Theme USE_GLOBAL>;

        if $r0 == $r1 goto label1;

        <com.fsck.k9.K9: com.fsck.k9.K9$Theme theme> = $r0;

     label1:
        return;
    }
    public static void setLockScreenNotificationVisibility(com.fsck.k9.K9$LockScreenNotificationVisibility)
    {
        com.fsck.k9.K9$LockScreenNotificationVisibility $r0;

        $r0 := @parameter0: com.fsck.k9.K9$LockScreenNotificationVisibility;

        <com.fsck.k9.K9: com.fsck.k9.K9$LockScreenNotificationVisibility sLockScreenNotificationVisibility> = $r0;

        return;
    }
    public static void setMeasureAccounts(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean mMeasureAccounts> = $z0;

        return;
    }
    public static void setMessageListCheckboxes(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean mMessageListCheckboxes> = $z0;

        return;
    }
    public static void setMessageListPreviewLines(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        <com.fsck.k9.K9: int mMessageListPreviewLines> = $i0;

        return;
    }
    public static void setMessageListSenderAboveSubject(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean mMessageListSenderAboveSubject> = $z0;

        return;
    }
    public static void setMessageListStars(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean mMessageListStars> = $z0;

        return;
    }
    public static void setMessageViewArchiveActionVisible(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean sMessageViewArchiveActionVisible> = $z0;

        return;
    }
    public static void setMessageViewCopyActionVisible(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean sMessageViewCopyActionVisible> = $z0;

        return;
    }
    public static void setMessageViewDeleteActionVisible(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean sMessageViewDeleteActionVisible> = $z0;

        return;
    }
    public static void setMessageViewFixedWidthFont(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean mMessageViewFixedWidthFont> = $z0;

        return;
    }
    public static void setMessageViewMoveActionVisible(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean sMessageViewMoveActionVisible> = $z0;

        return;
    }
    public static void setMessageViewReturnToList(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean mMessageViewReturnToList> = $z0;

        return;
    }
    public static void setMessageViewShowNext(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean mMessageViewShowNext> = $z0;

        return;
    }
    public static void setMessageViewSpamActionVisible(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean sMessageViewSpamActionVisible> = $z0;

        return;
    }
    public static void setNotificationDuringQuietTimeEnabled(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean mNotificationDuringQuietTimeEnabled> = $z0;

        return;
    }
    public static void setNotificationHideSubject(com.fsck.k9.K9$NotificationHideSubject)
    {
        com.fsck.k9.K9$NotificationHideSubject $r0;

        $r0 := @parameter0: com.fsck.k9.K9$NotificationHideSubject;

        <com.fsck.k9.K9: com.fsck.k9.K9$NotificationHideSubject sNotificationHideSubject> = $r0;

        return;
    }
    public static void setNotificationQuickDeleteBehaviour(com.fsck.k9.K9$NotificationQuickDelete)
    {
        com.fsck.k9.K9$NotificationQuickDelete $r0;

        $r0 := @parameter0: com.fsck.k9.K9$NotificationQuickDelete;

        <com.fsck.k9.K9: com.fsck.k9.K9$NotificationQuickDelete sNotificationQuickDelete> = $r0;

        return;
    }
    public static void setOpenPgpProvider(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        <com.fsck.k9.K9: java.lang.String sOpenPgpProvider> = $r0;

        return;
    }
    public static void setOpenPgpSupportSignOnly(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean sOpenPgpSupportSignOnly> = $z0;

        return;
    }
    public static void setPgpInlineDialogCounter(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        <com.fsck.k9.K9: int sPgpInlineDialogCounter> = $i0;

        return;
    }
    public static void setPgpSignOnlyDialogCounter(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        <com.fsck.k9.K9: int sPgpSignOnlyDialogCounter> = $i0;

        return;
    }
    public static void setQuietTimeEnabled(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean mQuietTimeEnabled> = $z0;

        return;
    }
    public static void setQuietTimeEnds(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        <com.fsck.k9.K9: java.lang.String mQuietTimeEnds> = $r0;

        return;
    }
    public static void setQuietTimeStarts(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        <com.fsck.k9.K9: java.lang.String mQuietTimeStarts> = $r0;

        return;
    }
    public static void setServicesEnabled(android.content.Context)
    {
        android.content.Context $r0;
        com.fsck.k9.Preferences $r1;
        java.util.Collection $r2;
        int $i0;
        boolean z0;

        $r0 := @parameter0: android.content.Context;

        $r0 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r1 = staticinvoke <com.fsck.k9.Preferences: com.fsck.k9.Preferences getPreferences(android.content.Context)>($r0);

        $r2 = virtualinvoke $r1.<com.fsck.k9.Preferences: java.util.Collection getAvailableAccounts()>();

        $i0 = interfaceinvoke $r2.<java.util.Collection: int size()>();

        if $i0 <= 0 goto label2;

        z0 = 1;

     label1:
        staticinvoke <com.fsck.k9.K9: void setServicesEnabled(android.content.Context,boolean,java.lang.Integer)>($r0, z0, null);

        staticinvoke <com.fsck.k9.K9: void updateDeviceIdleReceiver(android.content.Context,boolean)>($r0, z0);

        return;

     label2:
        z0 = 0;

        goto label1;
    }
    private static void setServicesEnabled(android.content.Context, boolean, java.lang.Integer)
    {
        android.content.Context $r0;
        boolean $z0, z1;
        java.lang.Integer $r1;
        java.lang.Class[] r2;
        java.lang.Class r3;
        int $i0, $i1, $i2;
        android.content.ComponentName $r4;
        android.content.pm.PackageManager $r5;
        byte $b3;

        $r0 := @parameter0: android.content.Context;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: java.lang.Integer;

        $r5 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        if $z0 != 0 goto label1;

        $r4 = new android.content.ComponentName;

        specialinvoke $r4.<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>($r0, class "Lcom/fsck/k9/service/MailService;");

        $i0 = virtualinvoke $r5.<android.content.pm.PackageManager: int getComponentEnabledSetting(android.content.ComponentName)>($r4);

        if $i0 != 1 goto label1;

        staticinvoke <com.fsck.k9.service.MailService: void actionReset(android.content.Context,java.lang.Integer)>($r0, $r1);

     label1:
        r2 = newarray (java.lang.Class)[3];

        r2[0] = class "Lcom/fsck/k9/activity/MessageCompose;";

        r2[1] = class "Lcom/fsck/k9/service/BootReceiver;";

        r2[2] = class "Lcom/fsck/k9/service/MailService;";

        $i0 = lengthof r2;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label8;

        r3 = r2[$i1];

        $r4 = new android.content.ComponentName;

        specialinvoke $r4.<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>($r0, r3);

        $i2 = virtualinvoke $r5.<android.content.pm.PackageManager: int getComponentEnabledSetting(android.content.ComponentName)>($r4);

        if $i2 != 1 goto label6;

        z1 = 1;

     label3:
        if $z0 == z1 goto label5;

        $r4 = new android.content.ComponentName;

        specialinvoke $r4.<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>($r0, r3);

        if $z0 == 0 goto label7;

        $b3 = 1;

     label4:
        virtualinvoke $r5.<android.content.pm.PackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int)>($r4, $b3, 1);

     label5:
        $i1 = $i1 + 1;

        goto label2;

     label6:
        z1 = 0;

        goto label3;

     label7:
        $b3 = 2;

        goto label4;

     label8:
        if $z0 == 0 goto label9;

        $r4 = new android.content.ComponentName;

        specialinvoke $r4.<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>($r0, class "Lcom/fsck/k9/service/MailService;");

        $i0 = virtualinvoke $r5.<android.content.pm.PackageManager: int getComponentEnabledSetting(android.content.ComponentName)>($r4);

        if $i0 != 1 goto label9;

        staticinvoke <com.fsck.k9.service.MailService: void actionReset(android.content.Context,java.lang.Integer)>($r0, $r1);

     label9:
        return;
    }
    public static void setShowContactName(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean mShowContactName> = $z0;

        return;
    }
    public static void setShowContactPicture(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean sShowContactPicture> = $z0;

        return;
    }
    public static void setShowCorrespondentNames(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean mShowCorrespondentNames> = $z0;

        return;
    }
    public static void setSortAscending(com.fsck.k9.Account$SortType, boolean)
    {
        com.fsck.k9.Account$SortType $r0;
        boolean $z0;
        java.lang.Boolean $r1;
        java.util.Map $r2;
        java.lang.Throwable $r3;

        $r0 := @parameter0: com.fsck.k9.Account$SortType;

        $z0 := @parameter1: boolean;

        entermonitor class "Lcom/fsck/k9/K9;";

     label1:
        $r2 = <com.fsck.k9.K9: java.util.Map mSortAscending>;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r1);

     label2:
        exitmonitor class "Lcom/fsck/k9/K9;";

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor class "Lcom/fsck/k9/K9;";

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public static void setSortType(com.fsck.k9.Account$SortType)
    {
        com.fsck.k9.Account$SortType $r0;
        java.lang.Throwable $r1;

        $r0 := @parameter0: com.fsck.k9.Account$SortType;

        entermonitor class "Lcom/fsck/k9/K9;";

     label1:
        <com.fsck.k9.K9: com.fsck.k9.Account$SortType mSortType> = $r0;

     label2:
        exitmonitor class "Lcom/fsck/k9/K9;";

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor class "Lcom/fsck/k9/K9;";

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public static void setSplitViewMode(com.fsck.k9.K9$SplitViewMode)
    {
        com.fsck.k9.K9$SplitViewMode $r0;
        java.lang.Throwable $r1;

        $r0 := @parameter0: com.fsck.k9.K9$SplitViewMode;

        entermonitor class "Lcom/fsck/k9/K9;";

     label1:
        <com.fsck.k9.K9: com.fsck.k9.K9$SplitViewMode sSplitViewMode> = $r0;

     label2:
        exitmonitor class "Lcom/fsck/k9/K9;";

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor class "Lcom/fsck/k9/K9;";

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public static void setStartIntegratedInbox(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean mStartIntegratedInbox> = $z0;

        return;
    }
    public static void setThreadedViewEnabled(boolean)
    {
        boolean $z0;
        java.lang.Throwable $r0;

        $z0 := @parameter0: boolean;

        entermonitor class "Lcom/fsck/k9/K9;";

     label1:
        <com.fsck.k9.K9: boolean sThreadedViewEnabled> = $z0;

     label2:
        exitmonitor class "Lcom/fsck/k9/K9;";

        return;

     label3:
        $r0 := @caughtexception;

        exitmonitor class "Lcom/fsck/k9/K9;";

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public static void setUseBackgroundAsUnreadIndicator(boolean)
    {
        boolean $z0;
        java.lang.Throwable $r0;

        $z0 := @parameter0: boolean;

        entermonitor class "Lcom/fsck/k9/K9;";

     label1:
        <com.fsck.k9.K9: boolean sUseBackgroundAsUnreadIndicator> = $z0;

     label2:
        exitmonitor class "Lcom/fsck/k9/K9;";

        return;

     label3:
        $r0 := @caughtexception;

        exitmonitor class "Lcom/fsck/k9/K9;";

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public static void setUseFixedMessageViewTheme(boolean)
    {
        boolean $z0;
        com.fsck.k9.K9$Theme $r0, $r1;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean useFixedMessageTheme> = $z0;

        $z0 = <com.fsck.k9.K9: boolean useFixedMessageTheme>;

        if $z0 != 0 goto label1;

        $r1 = <com.fsck.k9.K9: com.fsck.k9.K9$Theme messageViewTheme>;

        $r0 = <com.fsck.k9.K9$Theme: com.fsck.k9.K9$Theme USE_GLOBAL>;

        if $r1 != $r0 goto label1;

        $r0 = <com.fsck.k9.K9: com.fsck.k9.K9$Theme theme>;

        <com.fsck.k9.K9: com.fsck.k9.K9$Theme messageViewTheme> = $r0;

     label1:
        return;
    }
    public static void setUseVolumeKeysForListNavigation(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean mUseVolumeKeysForListNavigation> = $z0;

        return;
    }
    public static void setUseVolumeKeysForNavigation(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean mUseVolumeKeysForNavigation> = $z0;

        return;
    }
    public static void setWrapFolderNames(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.fsck.k9.K9: boolean mWrapFolderNames> = $z0;

        return;
    }
    public static boolean showAnimations()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean mAnimations>;

        return z0;
    }
    public static boolean showContactName()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean mShowContactName>;

        return z0;
    }
    public static boolean showContactPicture()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean sShowContactPicture>;

        return z0;
    }
    public static boolean showCorrespondentNames()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean mShowCorrespondentNames>;

        return z0;
    }
    public static boolean startIntegratedInbox()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean mStartIntegratedInbox>;

        return z0;
    }
    private static void updateDeviceIdleReceiver(android.content.Context, boolean)
    {
        android.content.Context $r0;
        boolean $z0;
        com.fsck.k9.power.DeviceIdleManager $r1;

        $r0 := @parameter0: android.content.Context;

        $z0 := @parameter1: boolean;

        $r1 = staticinvoke <com.fsck.k9.power.DeviceIdleManager: com.fsck.k9.power.DeviceIdleManager getInstance(android.content.Context)>($r0);

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<com.fsck.k9.power.DeviceIdleManager: void registerReceiver()>();

        return;

     label1:
        virtualinvoke $r1.<com.fsck.k9.power.DeviceIdleManager: void unregisterReceiver()>();

        return;
    }
    private static void updateLoggingStatus()
    {
        boolean z0;
        timber.log.Timber$DebugTree $r0;

        staticinvoke <timber.log.Timber: void uprootAll()>();

        z0 = <com.fsck.k9.K9: boolean DEBUG>;

        if z0 == 0 goto label1;

        $r0 = new timber.log.Timber$DebugTree;

        specialinvoke $r0.<timber.log.Timber$DebugTree: void <init>()>();

        staticinvoke <timber.log.Timber: void plant(timber.log.Timber$Tree)>($r0);

     label1:
        return;
    }
    public static boolean useBackgroundAsUnreadIndicator()
    {
        java.lang.Throwable $r0;
        boolean z0;

        entermonitor class "Lcom/fsck/k9/K9;";

     label1:
        z0 = <com.fsck.k9.K9: boolean sUseBackgroundAsUnreadIndicator>;

     label2:
        exitmonitor class "Lcom/fsck/k9/K9;";

        return z0;

     label3:
        $r0 := @caughtexception;

        exitmonitor class "Lcom/fsck/k9/K9;";

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public static boolean useFixedMessageViewTheme()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean useFixedMessageTheme>;

        return z0;
    }
    public static boolean useVolumeKeysForListNavigationEnabled()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean mUseVolumeKeysForListNavigation>;

        return z0;
    }
    public static boolean useVolumeKeysForNavigationEnabled()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean mUseVolumeKeysForNavigation>;

        return z0;
    }
    public static boolean wrapFolderNames()
    {
        boolean z0;

        z0 = <com.fsck.k9.K9: boolean mWrapFolderNames>;

        return z0;
    }
    public void checkCachedDatabaseVersion()
    {
        com.fsck.k9.K9 r0;
        android.content.SharedPreferences $r1;
        int $i0;

        r0 := @this: com.fsck.k9.K9;

        $r1 = virtualinvoke r0.<com.fsck.k9.K9: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("database_version_cache", 0);

        <com.fsck.k9.K9: android.content.SharedPreferences sDatabaseVersionCache> = $r1;

        $r1 = <com.fsck.k9.K9: android.content.SharedPreferences sDatabaseVersionCache>;

        $i0 = interfaceinvoke $r1.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("last_account_database_version", 0);

        if $i0 < 61 goto label1;

        staticinvoke <com.fsck.k9.K9: void setDatabasesUpToDate(boolean)>(0);

     label1:
        return;
    }
    protected void notifyObservers()
    {
        com.fsck.k9.K9 r0;
        java.lang.Exception r1;
        java.util.List $r2, $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        com.fsck.k9.K9$ApplicationAware r6;
        java.lang.Object[] $r7;
        java.lang.Throwable $r8;

        r0 := @this: com.fsck.k9.K9;

        $r2 = <com.fsck.k9.K9: java.util.List observers>;

        entermonitor $r2;

     label01:
        $r3 = <com.fsck.k9.K9: java.util.List observers>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.fsck.k9.K9$ApplicationAware) $r5;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r6;

        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("Initializing observer: %s", $r7);

     label03:
        interfaceinvoke r6.<com.fsck.k9.K9$ApplicationAware: void initializeComponent(android.app.Application)>(r0);

     label04:
        goto label02;

     label05:
        r1 := @caughtexception;

     label06:
        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r6;

        staticinvoke <timber.log.Timber: void w(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r1, "Failure when notifying %s", $r7);

        goto label02;

     label07:
        $r8 := @caughtexception;

        exitmonitor $r2;

     label08:
        throw $r8;

     label09:
        <com.fsck.k9.K9: boolean sInitialized> = 1;

        $r3 = <com.fsck.k9.K9: java.util.List observers>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        exitmonitor $r2;

     label10:
        return;

        catch java.lang.Throwable from label01 to label03 with label07;
        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label06 to label08 with label07;
        catch java.lang.Throwable from label09 to label10 with label07;
    }
    public void onCreate()
    {
        com.fsck.k9.K9 r0;
        boolean $z0;
        com.fsck.k9.K9$2 $r1;
        com.fsck.k9.Preferences $r2;
        java.io.File $r3;
        java.lang.String $r4;
        com.fsck.k9.controller.MessagingController $r5;
        com.fsck.k9.K9$3 $r6;

        r0 := @this: com.fsck.k9.K9;

        $z0 = <com.fsck.k9.K9: boolean DEVELOPER_MODE>;

        if $z0 == 0 goto label1;

        staticinvoke <android.os.StrictMode: void enableDefaults()>();

     label1:
        staticinvoke <com.fsck.k9.PRNGFixes: void apply()>();

        specialinvoke r0.<android.app.Application: void onCreate()>();

        <com.fsck.k9.K9: android.app.Application app> = r0;

        staticinvoke <com.fsck.k9.Globals: void setContext(android.content.Context)>(r0);

        $r1 = new com.fsck.k9.K9$2;

        specialinvoke $r1.<com.fsck.k9.K9$2: void <init>(com.fsck.k9.K9)>(r0);

        staticinvoke <com.fsck.k9.mail.K9MailLib: void setDebugStatus(com.fsck.k9.mail.K9MailLib$DebugStatus)>($r1);

        virtualinvoke r0.<com.fsck.k9.K9: void checkCachedDatabaseVersion()>();

        $r2 = staticinvoke <com.fsck.k9.Preferences: com.fsck.k9.Preferences getPreferences(android.content.Context)>(r0);

        staticinvoke <com.fsck.k9.K9: void loadPrefs(com.fsck.k9.Preferences)>($r2);

        $r3 = virtualinvoke r0.<com.fsck.k9.K9: java.io.File getCacheDir()>();

        staticinvoke <com.fsck.k9.mail.internet.BinaryTempFileBody: void setTempDirectory(java.io.File)>($r3);

        $r3 = virtualinvoke r0.<com.fsck.k9.K9: java.io.File getDir(java.lang.String,int)>("KeyStore", 0);

        $r4 = virtualinvoke $r3.<java.io.File: java.lang.String toString()>();

        staticinvoke <com.fsck.k9.mail.ssl.LocalKeyStore: void setKeyStoreLocation(java.lang.String)>($r4);

        staticinvoke <com.fsck.k9.K9: void setServicesEnabled(android.content.Context)>(r0);

        virtualinvoke r0.<com.fsck.k9.K9: void registerReceivers()>();

        $r5 = staticinvoke <com.fsck.k9.controller.MessagingController: com.fsck.k9.controller.MessagingController getInstance(android.content.Context)>(r0);

        $r6 = new com.fsck.k9.K9$3;

        specialinvoke $r6.<com.fsck.k9.K9$3: void <init>(com.fsck.k9.K9)>(r0);

        virtualinvoke $r5.<com.fsck.k9.controller.MessagingController: void addListener(com.fsck.k9.controller.MessagingListener)>($r6);

        virtualinvoke r0.<com.fsck.k9.K9: void notifyObservers()>();

        return;
    }
    protected void registerReceivers()
    {
        com.fsck.k9.K9 r0;
        java.lang.InterruptedException r1;
        android.content.IntentFilter r2;
        java.util.concurrent.SynchronousQueue r3;
        com.fsck.k9.service.StorageGoneReceiver r4;
        java.lang.Object $r5;
        java.lang.Thread $r6;
        com.fsck.k9.K9$1 $r7;
        android.os.Handler r8;
        java.lang.Object[] $r9;
        com.fsck.k9.service.ShutdownReceiver $r10;

        r0 := @this: com.fsck.k9.K9;

        r4 = new com.fsck.k9.service.StorageGoneReceiver;

        specialinvoke r4.<com.fsck.k9.service.StorageGoneReceiver: void <init>()>();

        r2 = new android.content.IntentFilter;

        specialinvoke r2.<android.content.IntentFilter: void <init>()>();

        virtualinvoke r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.MEDIA_EJECT");

        virtualinvoke r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.MEDIA_UNMOUNTED");

        virtualinvoke r2.<android.content.IntentFilter: void addDataScheme(java.lang.String)>("file");

        r3 = new java.util.concurrent.SynchronousQueue;

        specialinvoke r3.<java.util.concurrent.SynchronousQueue: void <init>()>();

        $r6 = new java.lang.Thread;

        $r7 = new com.fsck.k9.K9$1;

        specialinvoke $r7.<com.fsck.k9.K9$1: void <init>(com.fsck.k9.K9,java.util.concurrent.BlockingQueue)>(r0, r3);

        specialinvoke $r6.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r7, "Unmount-thread");

        virtualinvoke $r6.<java.lang.Thread: void start()>();

     label1:
        $r5 = interfaceinvoke r3.<java.util.concurrent.BlockingQueue: java.lang.Object take()>();

     label2:
        r8 = (android.os.Handler) $r5;

     label3:
        virtualinvoke r0.<com.fsck.k9.K9: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>(r4, r2, null, r8);

     label4:
        $r9 = newarray (java.lang.Object)[0];

     label5:
        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Registered: unmount receiver", $r9);

     label6:
        $r10 = new com.fsck.k9.service.ShutdownReceiver;

        specialinvoke $r10.<com.fsck.k9.service.ShutdownReceiver: void <init>()>();

        r2 = new android.content.IntentFilter;

        specialinvoke r2.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.ACTION_SHUTDOWN");

        virtualinvoke r0.<com.fsck.k9.K9: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r10, r2);

        $r9 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Registered: shutdown receiver", $r9);

        return;

     label7:
        r1 := @caughtexception;

        $r9 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r1, "Unable to register unmount receiver", $r9);

        goto label6;

        catch java.lang.InterruptedException from label1 to label2 with label7;
        catch java.lang.InterruptedException from label3 to label4 with label7;
        catch java.lang.InterruptedException from label5 to label6 with label7;
    }
