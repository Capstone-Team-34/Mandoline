com.fsck.k9.notification.AddNotificationResult extends java.lang.Object
private final boolean cancelNotificationBeforeReuse
private final com.fsck.k9.notification.NotificationHolder notificationHolder
    private void <init>(com.fsck.k9.notification.NotificationHolder, boolean)
    {
        com.fsck.k9.notification.AddNotificationResult r0;
        com.fsck.k9.notification.NotificationHolder $r1;
        boolean $z0;

        r0 := @this: com.fsck.k9.notification.AddNotificationResult;

        $r1 := @parameter0: com.fsck.k9.notification.NotificationHolder;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.fsck.k9.notification.AddNotificationResult: com.fsck.k9.notification.NotificationHolder notificationHolder> = $r1;

        r0.<com.fsck.k9.notification.AddNotificationResult: boolean cancelNotificationBeforeReuse> = $z0;

        return;
    }
    public static com.fsck.k9.notification.AddNotificationResult newNotification(com.fsck.k9.notification.NotificationHolder)
    {
        com.fsck.k9.notification.NotificationHolder $r0;
        com.fsck.k9.notification.AddNotificationResult $r1;

        $r0 := @parameter0: com.fsck.k9.notification.NotificationHolder;

        $r1 = new com.fsck.k9.notification.AddNotificationResult;

        specialinvoke $r1.<com.fsck.k9.notification.AddNotificationResult: void <init>(com.fsck.k9.notification.NotificationHolder,boolean)>($r0, 0);

        return $r1;
    }
    public static com.fsck.k9.notification.AddNotificationResult replaceNotification(com.fsck.k9.notification.NotificationHolder)
    {
        com.fsck.k9.notification.NotificationHolder $r0;
        com.fsck.k9.notification.AddNotificationResult $r1;

        $r0 := @parameter0: com.fsck.k9.notification.NotificationHolder;

        $r1 = new com.fsck.k9.notification.AddNotificationResult;

        specialinvoke $r1.<com.fsck.k9.notification.AddNotificationResult: void <init>(com.fsck.k9.notification.NotificationHolder,boolean)>($r0, 1);

        return $r1;
    }
    public com.fsck.k9.notification.NotificationHolder getNotificationHolder()
    {
        com.fsck.k9.notification.AddNotificationResult r0;
        com.fsck.k9.notification.NotificationHolder r1;

        r0 := @this: com.fsck.k9.notification.AddNotificationResult;

        r1 = r0.<com.fsck.k9.notification.AddNotificationResult: com.fsck.k9.notification.NotificationHolder notificationHolder>;

        return r1;
    }
    public int getNotificationId()
    {
        com.fsck.k9.notification.AddNotificationResult r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        com.fsck.k9.notification.NotificationHolder $r2;
        int i0;

        r0 := @this: com.fsck.k9.notification.AddNotificationResult;

        $z0 = virtualinvoke r0.<com.fsck.k9.notification.AddNotificationResult: boolean shouldCancelNotification()>();

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getNotificationId() can only be called when shouldCancelNotification() returns true");

        throw $r1;

     label1:
        $r2 = r0.<com.fsck.k9.notification.AddNotificationResult: com.fsck.k9.notification.NotificationHolder notificationHolder>;

        i0 = $r2.<com.fsck.k9.notification.NotificationHolder: int notificationId>;

        return i0;
    }
    public boolean shouldCancelNotification()
    {
        com.fsck.k9.notification.AddNotificationResult r0;
        boolean z0;

        r0 := @this: com.fsck.k9.notification.AddNotificationResult;

        z0 = r0.<com.fsck.k9.notification.AddNotificationResult: boolean cancelNotificationBeforeReuse>;

        return z0;
    }
