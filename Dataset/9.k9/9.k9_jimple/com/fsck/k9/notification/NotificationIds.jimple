com.fsck.k9.notification.NotificationIds extends java.lang.Object
private static final int NUMBER_OF_DEVICE_NOTIFICATIONS
private static final int NUMBER_OF_NOTIFICATIONS_PER_ACCOUNT
private static final int NUMBER_OF_STACKED_NOTIFICATIONS
private static final int OFFSET_AUTHENTICATION_ERROR_INCOMING
private static final int OFFSET_AUTHENTICATION_ERROR_OUTGOING
private static final int OFFSET_CERTIFICATE_ERROR_INCOMING
private static final int OFFSET_CERTIFICATE_ERROR_OUTGOING
private static final int OFFSET_FETCHING_MAIL
private static final int OFFSET_NEW_MAIL_STACKED
private static final int OFFSET_NEW_MAIL_SUMMARY
private static final int OFFSET_SEND_FAILED_NOTIFICATION
    void <init>()
    {
        com.fsck.k9.notification.NotificationIds r0;

        r0 := @this: com.fsck.k9.notification.NotificationIds;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static int getAuthenticationErrorNotificationId(com.fsck.k9.Account, boolean)
    {
        com.fsck.k9.Account $r0;
        boolean $z0;
        int $i0;
        byte b1;

        $r0 := @parameter0: com.fsck.k9.Account;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label2;

        b1 = 3;

     label1:
        $i0 = staticinvoke <com.fsck.k9.notification.NotificationIds: int getBaseNotificationId(com.fsck.k9.Account)>($r0);

        $i0 = $i0 + b1;

        return $i0;

     label2:
        b1 = 4;

        goto label1;
    }
    private static int getBaseNotificationId(com.fsck.k9.Account)
    {
        com.fsck.k9.Account $r0;
        int $i0;

        $r0 := @parameter0: com.fsck.k9.Account;

        $i0 = virtualinvoke $r0.<com.fsck.k9.Account: int getAccountNumber()>();

        $i0 = $i0 * 15;

        return $i0;
    }
    public static int getCertificateErrorNotificationId(com.fsck.k9.Account, boolean)
    {
        com.fsck.k9.Account $r0;
        boolean $z0;
        int $i0;
        byte b1;

        $r0 := @parameter0: com.fsck.k9.Account;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label2;

        b1 = 1;

     label1:
        $i0 = staticinvoke <com.fsck.k9.notification.NotificationIds: int getBaseNotificationId(com.fsck.k9.Account)>($r0);

        $i0 = $i0 + b1;

        return $i0;

     label2:
        b1 = 2;

        goto label1;
    }
    public static int getFetchingMailNotificationId(com.fsck.k9.Account)
    {
        com.fsck.k9.Account $r0;
        int $i0;

        $r0 := @parameter0: com.fsck.k9.Account;

        $i0 = staticinvoke <com.fsck.k9.notification.NotificationIds: int getBaseNotificationId(com.fsck.k9.Account)>($r0);

        $i0 = $i0 + 5;

        return $i0;
    }
    public static int getNewMailStackedNotificationId(com.fsck.k9.Account, int)
    {
        com.fsck.k9.Account $r0;
        int $i0, $i1;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        $r0 := @parameter0: com.fsck.k9.Account;

        $i0 := @parameter1: int;

        if $i0 < 0 goto label1;

        if $i0 < 8 goto label2;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid value: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label2:
        $i1 = staticinvoke <com.fsck.k9.notification.NotificationIds: int getBaseNotificationId(com.fsck.k9.Account)>($r0);

        $i1 = $i1 + 7;

        $i0 = $i1 + $i0;

        return $i0;
    }
    public static int getNewMailSummaryNotificationId(com.fsck.k9.Account)
    {
        com.fsck.k9.Account $r0;
        int $i0;

        $r0 := @parameter0: com.fsck.k9.Account;

        $i0 = staticinvoke <com.fsck.k9.notification.NotificationIds: int getBaseNotificationId(com.fsck.k9.Account)>($r0);

        $i0 = $i0 + 6;

        return $i0;
    }
    public static int getSendFailedNotificationId(com.fsck.k9.Account)
    {
        com.fsck.k9.Account $r0;
        int $i0;

        $r0 := @parameter0: com.fsck.k9.Account;

        $i0 = staticinvoke <com.fsck.k9.notification.NotificationIds: int getBaseNotificationId(com.fsck.k9.Account)>($r0);

        return $i0;
    }
