com.fsck.k9.notification.RemoveNotificationResult extends java.lang.Object
private final com.fsck.k9.notification.NotificationHolder notificationHolder
private final int notificationId
private final boolean unknownNotification
    private void <init>(com.fsck.k9.notification.NotificationHolder, int, boolean)
    {
        com.fsck.k9.notification.RemoveNotificationResult r0;
        com.fsck.k9.notification.NotificationHolder $r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.fsck.k9.notification.RemoveNotificationResult;

        $r1 := @parameter0: com.fsck.k9.notification.NotificationHolder;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.fsck.k9.notification.RemoveNotificationResult: com.fsck.k9.notification.NotificationHolder notificationHolder> = $r1;

        r0.<com.fsck.k9.notification.RemoveNotificationResult: int notificationId> = $i0;

        r0.<com.fsck.k9.notification.RemoveNotificationResult: boolean unknownNotification> = $z0;

        return;
    }
    public static com.fsck.k9.notification.RemoveNotificationResult cancelNotification(int)
    {
        int $i0;
        com.fsck.k9.notification.RemoveNotificationResult $r0;

        $i0 := @parameter0: int;

        $r0 = new com.fsck.k9.notification.RemoveNotificationResult;

        specialinvoke $r0.<com.fsck.k9.notification.RemoveNotificationResult: void <init>(com.fsck.k9.notification.NotificationHolder,int,boolean)>(null, $i0, 0);

        return $r0;
    }
    public static com.fsck.k9.notification.RemoveNotificationResult createNotification(com.fsck.k9.notification.NotificationHolder)
    {
        com.fsck.k9.notification.NotificationHolder $r0;
        com.fsck.k9.notification.RemoveNotificationResult $r1;
        int $i0;

        $r0 := @parameter0: com.fsck.k9.notification.NotificationHolder;

        $r1 = new com.fsck.k9.notification.RemoveNotificationResult;

        $i0 = $r0.<com.fsck.k9.notification.NotificationHolder: int notificationId>;

        specialinvoke $r1.<com.fsck.k9.notification.RemoveNotificationResult: void <init>(com.fsck.k9.notification.NotificationHolder,int,boolean)>($r0, $i0, 0);

        return $r1;
    }
    public static com.fsck.k9.notification.RemoveNotificationResult unknownNotification()
    {
        com.fsck.k9.notification.RemoveNotificationResult $r0;

        $r0 = new com.fsck.k9.notification.RemoveNotificationResult;

        specialinvoke $r0.<com.fsck.k9.notification.RemoveNotificationResult: void <init>(com.fsck.k9.notification.NotificationHolder,int,boolean)>(null, 0, 1);

        return $r0;
    }
    public com.fsck.k9.notification.NotificationHolder getNotificationHolder()
    {
        com.fsck.k9.notification.RemoveNotificationResult r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        com.fsck.k9.notification.NotificationHolder r2;

        r0 := @this: com.fsck.k9.notification.RemoveNotificationResult;

        $z0 = virtualinvoke r0.<com.fsck.k9.notification.RemoveNotificationResult: boolean shouldCreateNotification()>();

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getNotificationHolder() can only be called when shouldCreateNotification() returns true");

        throw $r1;

     label1:
        r2 = r0.<com.fsck.k9.notification.RemoveNotificationResult: com.fsck.k9.notification.NotificationHolder notificationHolder>;

        return r2;
    }
    public int getNotificationId()
    {
        com.fsck.k9.notification.RemoveNotificationResult r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        int i0;

        r0 := @this: com.fsck.k9.notification.RemoveNotificationResult;

        $z0 = virtualinvoke r0.<com.fsck.k9.notification.RemoveNotificationResult: boolean isUnknownNotification()>();

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getNotificationId() can only be called when isUnknownNotification() returns false");

        throw $r1;

     label1:
        i0 = r0.<com.fsck.k9.notification.RemoveNotificationResult: int notificationId>;

        return i0;
    }
    public boolean isUnknownNotification()
    {
        com.fsck.k9.notification.RemoveNotificationResult r0;
        boolean z0;

        r0 := @this: com.fsck.k9.notification.RemoveNotificationResult;

        z0 = r0.<com.fsck.k9.notification.RemoveNotificationResult: boolean unknownNotification>;

        return z0;
    }
    public boolean shouldCreateNotification()
    {
        com.fsck.k9.notification.RemoveNotificationResult r0;
        com.fsck.k9.notification.NotificationHolder $r1;

        r0 := @this: com.fsck.k9.notification.RemoveNotificationResult;

        $r1 = r0.<com.fsck.k9.notification.RemoveNotificationResult: com.fsck.k9.notification.NotificationHolder notificationHolder>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
