com.fsck.k9.controller.ProgressBodyFactory extends com.fsck.k9.mail.DefaultBodyFactory
private final com.fsck.k9.controller.ProgressBodyFactory$ProgressListener progressListener
    void <init>(com.fsck.k9.controller.ProgressBodyFactory$ProgressListener)
    {
        com.fsck.k9.controller.ProgressBodyFactory r0;
        com.fsck.k9.controller.ProgressBodyFactory$ProgressListener $r1;

        r0 := @this: com.fsck.k9.controller.ProgressBodyFactory;

        $r1 := @parameter0: com.fsck.k9.controller.ProgressBodyFactory$ProgressListener;

        specialinvoke r0.<com.fsck.k9.mail.DefaultBodyFactory: void <init>()>();

        r0.<com.fsck.k9.controller.ProgressBodyFactory: com.fsck.k9.controller.ProgressBodyFactory$ProgressListener progressListener> = $r1;

        return;
    }
    static com.fsck.k9.controller.ProgressBodyFactory$ProgressListener access$000(com.fsck.k9.controller.ProgressBodyFactory)
    {
        com.fsck.k9.controller.ProgressBodyFactory $r0;
        com.fsck.k9.controller.ProgressBodyFactory$ProgressListener r1;

        $r0 := @parameter0: com.fsck.k9.controller.ProgressBodyFactory;

        r1 = $r0.<com.fsck.k9.controller.ProgressBodyFactory: com.fsck.k9.controller.ProgressBodyFactory$ProgressListener progressListener>;

        return r1;
    }
    protected void copyData(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        com.fsck.k9.controller.ProgressBodyFactory r0;
        java.io.InputStream $r1;
        java.io.OutputStream $r2;
        java.util.Timer r3;
        org.apache.commons.io.output.CountingOutputStream r4;
        com.fsck.k9.controller.ProgressBodyFactory$1 $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.fsck.k9.controller.ProgressBodyFactory;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.io.OutputStream;

        r4 = new org.apache.commons.io.output.CountingOutputStream;

        specialinvoke r4.<org.apache.commons.io.output.CountingOutputStream: void <init>(java.io.OutputStream)>($r2);

        r3 = new java.util.Timer;

        specialinvoke r3.<java.util.Timer: void <init>()>();

     label1:
        $r5 = new com.fsck.k9.controller.ProgressBodyFactory$1;

        specialinvoke $r5.<com.fsck.k9.controller.ProgressBodyFactory$1: void <init>(com.fsck.k9.controller.ProgressBodyFactory,org.apache.commons.io.output.CountingOutputStream)>(r0, r4);

        virtualinvoke r3.<java.util.Timer: void scheduleAtFixedRate(java.util.TimerTask,long,long)>($r5, 0L, 50L);

        specialinvoke r0.<com.fsck.k9.mail.DefaultBodyFactory: void copyData(java.io.InputStream,java.io.OutputStream)>($r1, r4);

     label2:
        virtualinvoke r3.<java.util.Timer: void cancel()>();

        return;

     label3:
        $r6 := @caughtexception;

        virtualinvoke r3.<java.util.Timer: void cancel()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
