com.fsck.k9.controller.MessagingController extends java.lang.Object
public static final long INVALID_MESSAGE_ID
private static final java.util.Set SYNC_FLAGS
private static com.fsck.k9.controller.MessagingController inst
private static java.util.concurrent.atomic.AtomicInteger sequencing
private com.fsck.k9.controller.MessagingListener checkMailListener
private final com.fsck.k9.helper.Contacts contacts
private final android.content.Context context
private final java.lang.Thread controllerThread
private final java.util.Set listeners
private final com.fsck.k9.controller.MemorizingMessagingListener memorizingMessagingListener
private final com.fsck.k9.notification.NotificationController notificationController
private final java.util.concurrent.ConcurrentHashMap pushers
private final java.util.concurrent.BlockingQueue queuedCommands
private final java.util.concurrent.ConcurrentHashMap sendCount
private volatile boolean stopped
private final java.util.concurrent.ExecutorService threadPool
private final com.fsck.k9.mail.TransportProvider transportProvider
    static void <clinit>()
    {
        com.fsck.k9.mail.Flag $r0, $r1, $r3, $r4;
        java.util.EnumSet $r2;
        java.util.concurrent.atomic.AtomicInteger $r5;

        $r3 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag SEEN>;

        $r4 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag FLAGGED>;

        $r0 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag ANSWERED>;

        $r1 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag FORWARDED>;

        $r2 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum,java.lang.Enum,java.lang.Enum)>($r3, $r4, $r0, $r1);

        <com.fsck.k9.controller.MessagingController: java.util.Set SYNC_FLAGS> = $r2;

        <com.fsck.k9.controller.MessagingController: com.fsck.k9.controller.MessagingController inst> = null;

        $r5 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        <com.fsck.k9.controller.MessagingController: java.util.concurrent.atomic.AtomicInteger sequencing> = $r5;

        return;
    }
    void <init>(android.content.Context, com.fsck.k9.notification.NotificationController, com.fsck.k9.helper.Contacts, com.fsck.k9.mail.TransportProvider)
    {
        com.fsck.k9.controller.MessagingController r0;
        android.content.Context $r1;
        com.fsck.k9.notification.NotificationController $r2;
        com.fsck.k9.helper.Contacts $r3;
        com.fsck.k9.mail.TransportProvider $r4;
        java.util.concurrent.ExecutorService $r5;
        java.util.concurrent.PriorityBlockingQueue $r6;
        java.util.concurrent.CopyOnWriteArraySet $r7;
        java.util.concurrent.ConcurrentHashMap $r8;
        com.fsck.k9.controller.MemorizingMessagingListener $r9;
        java.lang.Thread $r10;
        com.fsck.k9.controller.MessagingController$1 $r11;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.fsck.k9.notification.NotificationController;

        $r3 := @parameter2: com.fsck.k9.helper.Contacts;

        $r4 := @parameter3: com.fsck.k9.mail.TransportProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = new java.util.concurrent.PriorityBlockingQueue;

        specialinvoke $r6.<java.util.concurrent.PriorityBlockingQueue: void <init>()>();

        r0.<com.fsck.k9.controller.MessagingController: java.util.concurrent.BlockingQueue queuedCommands> = $r6;

        $r7 = new java.util.concurrent.CopyOnWriteArraySet;

        specialinvoke $r7.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>();

        r0.<com.fsck.k9.controller.MessagingController: java.util.Set listeners> = $r7;

        $r8 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r8.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<com.fsck.k9.controller.MessagingController: java.util.concurrent.ConcurrentHashMap sendCount> = $r8;

        $r8 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r8.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<com.fsck.k9.controller.MessagingController: java.util.concurrent.ConcurrentHashMap pushers> = $r8;

        $r5 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool()>();

        r0.<com.fsck.k9.controller.MessagingController: java.util.concurrent.ExecutorService threadPool> = $r5;

        $r9 = new com.fsck.k9.controller.MemorizingMessagingListener;

        specialinvoke $r9.<com.fsck.k9.controller.MemorizingMessagingListener: void <init>()>();

        r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.controller.MemorizingMessagingListener memorizingMessagingListener> = $r9;

        r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.controller.MessagingListener checkMailListener> = null;

        r0.<com.fsck.k9.controller.MessagingController: boolean stopped> = 0;

        r0.<com.fsck.k9.controller.MessagingController: android.content.Context context> = $r1;

        r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.notification.NotificationController notificationController> = $r2;

        r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.helper.Contacts contacts> = $r3;

        r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.mail.TransportProvider transportProvider> = $r4;

        $r10 = new java.lang.Thread;

        $r11 = new com.fsck.k9.controller.MessagingController$1;

        specialinvoke $r11.<com.fsck.k9.controller.MessagingController$1: void <init>(com.fsck.k9.controller.MessagingController)>(r0);

        specialinvoke $r10.<java.lang.Thread: void <init>(java.lang.Runnable)>($r11);

        r0.<com.fsck.k9.controller.MessagingController: java.lang.Thread controllerThread> = $r10;

        $r10 = r0.<com.fsck.k9.controller.MessagingController: java.lang.Thread controllerThread>;

        virtualinvoke $r10.<java.lang.Thread: void setName(java.lang.String)>("MessagingController");

        $r10 = r0.<com.fsck.k9.controller.MessagingController: java.lang.Thread controllerThread>;

        virtualinvoke $r10.<java.lang.Thread: void start()>();

        $r9 = r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.controller.MemorizingMessagingListener memorizingMessagingListener>;

        virtualinvoke r0.<com.fsck.k9.controller.MessagingController: void addListener(com.fsck.k9.controller.MessagingListener)>($r9);

        return;
    }
    static void access$000(com.fsck.k9.controller.MessagingController)
    {
        com.fsck.k9.controller.MessagingController $r0;

        $r0 := @parameter0: com.fsck.k9.controller.MessagingController;

        specialinvoke $r0.<com.fsck.k9.controller.MessagingController: void runInBackground()>();

        return;
    }
    static java.util.concurrent.BlockingQueue access$100(com.fsck.k9.controller.MessagingController)
    {
        com.fsck.k9.controller.MessagingController $r0;
        java.util.concurrent.BlockingQueue r1;

        $r0 := @parameter0: com.fsck.k9.controller.MessagingController;

        r1 = $r0.<com.fsck.k9.controller.MessagingController: java.util.concurrent.BlockingQueue queuedCommands>;

        return r1;
    }
    static void access$1000(com.fsck.k9.controller.MessagingController, com.fsck.k9.Account)
    {
        com.fsck.k9.controller.MessagingController $r0;
        com.fsck.k9.Account $r1;

        $r0 := @parameter0: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter1: com.fsck.k9.Account;

        specialinvoke $r0.<com.fsck.k9.controller.MessagingController: void processPendingCommands(com.fsck.k9.Account)>($r1);

        return;
    }
    static void access$1100(com.fsck.k9.controller.MessagingController, com.fsck.k9.Account, java.util.List, com.fsck.k9.mail.Flag, boolean, boolean)
    {
        com.fsck.k9.controller.MessagingController $r0;
        com.fsck.k9.Account $r1;
        java.util.List $r2;
        com.fsck.k9.mail.Flag $r3;
        boolean $z0, $z1;

        $r0 := @parameter0: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter1: com.fsck.k9.Account;

        $r2 := @parameter2: java.util.List;

        $r3 := @parameter3: com.fsck.k9.mail.Flag;

        $z0 := @parameter4: boolean;

        $z1 := @parameter5: boolean;

        specialinvoke $r0.<com.fsck.k9.controller.MessagingController: void setFlagSynchronous(com.fsck.k9.Account,java.util.List,com.fsck.k9.mail.Flag,boolean,boolean)>($r1, $r2, $r3, $z0, $z1);

        return;
    }
    static boolean access$1200(com.fsck.k9.controller.MessagingController, com.fsck.k9.Account, java.lang.String, java.lang.String, com.fsck.k9.controller.MessagingListener, boolean)
    {
        com.fsck.k9.controller.MessagingController $r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2, $r3;
        com.fsck.k9.controller.MessagingListener $r4;
        boolean $z0;

        $r0 := @parameter0: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter1: com.fsck.k9.Account;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: com.fsck.k9.controller.MessagingListener;

        $z0 := @parameter5: boolean;

        $z0 = specialinvoke $r0.<com.fsck.k9.controller.MessagingController: boolean loadMessageRemoteSynchronous(com.fsck.k9.Account,java.lang.String,java.lang.String,com.fsck.k9.controller.MessagingListener,boolean)>($r1, $r2, $r3, $r4, $z0);

        return $z0;
    }
    static void access$1300(com.fsck.k9.mail.Folder)
    {
        com.fsck.k9.mail.Folder $r0;

        $r0 := @parameter0: com.fsck.k9.mail.Folder;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r0);

        return;
    }
    static android.content.Context access$1400(com.fsck.k9.controller.MessagingController)
    {
        com.fsck.k9.controller.MessagingController $r0;
        android.content.Context r1;

        $r0 := @parameter0: com.fsck.k9.controller.MessagingController;

        r1 = $r0.<com.fsck.k9.controller.MessagingController: android.content.Context context>;

        return r1;
    }
    static boolean access$1500(com.fsck.k9.controller.MessagingController, com.fsck.k9.Account)
    {
        com.fsck.k9.controller.MessagingController $r0;
        com.fsck.k9.Account $r1;
        boolean $z0;

        $r0 := @parameter0: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter1: com.fsck.k9.Account;

        $z0 = specialinvoke $r0.<com.fsck.k9.controller.MessagingController: boolean messagesPendingSend(com.fsck.k9.Account)>($r1);

        return $z0;
    }
    static void access$1600(com.fsck.k9.controller.MessagingController, com.fsck.k9.Account)
    {
        com.fsck.k9.controller.MessagingController $r0;
        com.fsck.k9.Account $r1;

        $r0 := @parameter0: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter1: com.fsck.k9.Account;

        specialinvoke $r0.<com.fsck.k9.controller.MessagingController: void showSendingNotificationIfNecessary(com.fsck.k9.Account)>($r1);

        return;
    }
    static void access$1700(com.fsck.k9.controller.MessagingController, com.fsck.k9.Account)
    {
        com.fsck.k9.controller.MessagingController $r0;
        com.fsck.k9.Account $r1;

        $r0 := @parameter0: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter1: com.fsck.k9.Account;

        specialinvoke $r0.<com.fsck.k9.controller.MessagingController: void clearSendingNotificationIfNecessary(com.fsck.k9.Account)>($r1);

        return;
    }
    static void access$1800(com.fsck.k9.controller.MessagingController, com.fsck.k9.Account, java.util.List)
    {
        com.fsck.k9.controller.MessagingController $r0;
        com.fsck.k9.Account $r1;
        java.util.List $r2;

        $r0 := @parameter0: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter1: com.fsck.k9.Account;

        $r2 := @parameter2: java.util.List;

        specialinvoke $r0.<com.fsck.k9.controller.MessagingController: void suppressMessages(com.fsck.k9.Account,java.util.List)>($r1, $r2);

        return;
    }
    static void access$1900(com.fsck.k9.controller.MessagingController, com.fsck.k9.Account, java.lang.String, java.util.List, java.lang.String, boolean)
    {
        com.fsck.k9.controller.MessagingController $r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2, $r4;
        java.util.List $r3;
        boolean $z0;

        $r0 := @parameter0: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter1: com.fsck.k9.Account;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.util.List;

        $r4 := @parameter4: java.lang.String;

        $z0 := @parameter5: boolean;

        specialinvoke $r0.<com.fsck.k9.controller.MessagingController: void moveOrCopyMessageSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,java.lang.String,boolean)>($r1, $r2, $r3, $r4, $z0);

        return;
    }
    static void access$2000(com.fsck.k9.controller.MessagingController, java.lang.String, com.fsck.k9.controller.MessagingListener, java.lang.Runnable)
    {
        com.fsck.k9.controller.MessagingController $r0;
        java.lang.String $r1;
        com.fsck.k9.controller.MessagingListener $r2;
        java.lang.Runnable $r3;

        $r0 := @parameter0: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: com.fsck.k9.controller.MessagingListener;

        $r3 := @parameter3: java.lang.Runnable;

        specialinvoke $r0.<com.fsck.k9.controller.MessagingController: void putBackground(java.lang.String,com.fsck.k9.controller.MessagingListener,java.lang.Runnable)>($r1, $r2, $r3);

        return;
    }
    static java.util.List access$2100(com.fsck.k9.Account, java.util.List) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.Account $r0;
        java.util.List $r1;

        $r0 := @parameter0: com.fsck.k9.Account;

        $r1 := @parameter1: java.util.List;

        $r1 = staticinvoke <com.fsck.k9.controller.MessagingController: java.util.List collectMessagesInThreads(com.fsck.k9.Account,java.util.List)>($r0, $r1);

        return $r1;
    }
    static void access$2200(com.fsck.k9.controller.MessagingController, com.fsck.k9.Account, java.lang.String)
    {
        com.fsck.k9.controller.MessagingController $r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2;

        $r0 := @parameter0: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter1: com.fsck.k9.Account;

        $r2 := @parameter2: java.lang.String;

        specialinvoke $r0.<com.fsck.k9.controller.MessagingController: void queueExpunge(com.fsck.k9.Account,java.lang.String)>($r1, $r2);

        return;
    }
    static void access$2300(com.fsck.k9.controller.MessagingController, com.fsck.k9.Account, java.lang.String, java.util.List)
    {
        com.fsck.k9.controller.MessagingController $r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2;
        java.util.List $r3;

        $r0 := @parameter0: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter1: com.fsck.k9.Account;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.util.List;

        specialinvoke $r0.<com.fsck.k9.controller.MessagingController: void deleteThreadsSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List)>($r1, $r2, $r3);

        return;
    }
    static void access$2400(com.fsck.k9.controller.MessagingController, com.fsck.k9.Account, java.lang.String, java.util.List, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController $r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2;
        java.util.List $r3;
        com.fsck.k9.controller.MessagingListener $r4;

        $r0 := @parameter0: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter1: com.fsck.k9.Account;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.util.List;

        $r4 := @parameter4: com.fsck.k9.controller.MessagingListener;

        specialinvoke $r0.<com.fsck.k9.controller.MessagingController: void deleteMessagesSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,com.fsck.k9.controller.MessagingListener)>($r1, $r2, $r3, $r4);

        return;
    }
    static boolean access$2500(com.fsck.k9.controller.MessagingController, com.fsck.k9.Account) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.controller.MessagingController $r0;
        com.fsck.k9.Account $r1;
        boolean $z0;

        $r0 := @parameter0: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter1: com.fsck.k9.Account;

        $z0 = specialinvoke $r0.<com.fsck.k9.controller.MessagingController: boolean isTrashLocalOnly(com.fsck.k9.Account)>($r1);

        return $z0;
    }
    static void access$2600(com.fsck.k9.controller.MessagingController, android.content.Context, com.fsck.k9.Account, boolean, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController $r0;
        android.content.Context $r1;
        com.fsck.k9.Account $r2;
        boolean $z0;
        com.fsck.k9.controller.MessagingListener $r3;

        $r0 := @parameter0: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter1: android.content.Context;

        $r2 := @parameter2: com.fsck.k9.Account;

        $z0 := @parameter3: boolean;

        $r3 := @parameter4: com.fsck.k9.controller.MessagingListener;

        specialinvoke $r0.<com.fsck.k9.controller.MessagingController: void checkMailForAccount(android.content.Context,com.fsck.k9.Account,boolean,com.fsck.k9.controller.MessagingListener)>($r1, $r2, $z0, $r3);

        return;
    }
    static void access$2700(com.fsck.k9.controller.MessagingController, com.fsck.k9.Account, com.fsck.k9.mail.Folder)
    {
        com.fsck.k9.controller.MessagingController $r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mail.Folder $r2;

        $r0 := @parameter0: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter1: com.fsck.k9.Account;

        $r2 := @parameter2: com.fsck.k9.mail.Folder;

        specialinvoke $r0.<com.fsck.k9.controller.MessagingController: void showFetchingMailNotificationIfNecessary(com.fsck.k9.Account,com.fsck.k9.mail.Folder)>($r1, $r2);

        return;
    }
    static void access$2800(com.fsck.k9.controller.MessagingController, com.fsck.k9.Account)
    {
        com.fsck.k9.controller.MessagingController $r0;
        com.fsck.k9.Account $r1;

        $r0 := @parameter0: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter1: com.fsck.k9.Account;

        specialinvoke $r0.<com.fsck.k9.controller.MessagingController: void clearFetchingMailNotificationIfNecessary(com.fsck.k9.Account)>($r1);

        return;
    }
    static java.util.concurrent.atomic.AtomicInteger access$2900()
    {
        java.util.concurrent.atomic.AtomicInteger r0;

        r0 = <com.fsck.k9.controller.MessagingController: java.util.concurrent.atomic.AtomicInteger sequencing>;

        return r0;
    }
    static boolean access$300(com.fsck.k9.controller.MessagingController, com.fsck.k9.mailstore.LocalMessage)
    {
        com.fsck.k9.controller.MessagingController $r0;
        com.fsck.k9.mailstore.LocalMessage $r1;
        boolean $z0;

        $r0 := @parameter0: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter1: com.fsck.k9.mailstore.LocalMessage;

        $z0 = specialinvoke $r0.<com.fsck.k9.controller.MessagingController: boolean isMessageSuppressed(com.fsck.k9.mailstore.LocalMessage)>($r1);

        return $z0;
    }
    static int access$3000(com.fsck.k9.controller.MessagingController, com.fsck.k9.Account, com.fsck.k9.mail.Folder, com.fsck.k9.mailstore.LocalFolder, java.util.List, boolean, boolean) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.controller.MessagingController $r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mail.Folder $r2;
        com.fsck.k9.mailstore.LocalFolder $r3;
        java.util.List $r4;
        boolean $z0, $z1;
        int $i0;

        $r0 := @parameter0: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter1: com.fsck.k9.Account;

        $r2 := @parameter2: com.fsck.k9.mail.Folder;

        $r3 := @parameter3: com.fsck.k9.mailstore.LocalFolder;

        $r4 := @parameter4: java.util.List;

        $z0 := @parameter5: boolean;

        $z1 := @parameter6: boolean;

        $i0 = specialinvoke $r0.<com.fsck.k9.controller.MessagingController: int downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)>($r1, $r2, $r3, $r4, $z0, $z1);

        return $i0;
    }
    static java.lang.String access$3100(com.fsck.k9.controller.MessagingController, java.lang.Throwable)
    {
        com.fsck.k9.controller.MessagingController $r0;
        java.lang.Throwable $r1;
        java.lang.String $r2;

        $r0 := @parameter0: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter1: java.lang.Throwable;

        $r2 = specialinvoke $r0.<com.fsck.k9.controller.MessagingController: java.lang.String getRootCauseMessage(java.lang.Throwable)>($r1);

        return $r2;
    }
    static void access$400(com.fsck.k9.controller.MessagingController, java.util.List, com.fsck.k9.mailstore.LocalFolder, com.fsck.k9.mail.Folder, com.fsck.k9.controller.MessagingListener) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.controller.MessagingController $r0;
        java.util.List $r1;
        com.fsck.k9.mailstore.LocalFolder $r2;
        com.fsck.k9.mail.Folder $r3;
        com.fsck.k9.controller.MessagingListener $r4;

        $r0 := @parameter0: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter1: java.util.List;

        $r2 := @parameter2: com.fsck.k9.mailstore.LocalFolder;

        $r3 := @parameter3: com.fsck.k9.mail.Folder;

        $r4 := @parameter4: com.fsck.k9.controller.MessagingListener;

        specialinvoke $r0.<com.fsck.k9.controller.MessagingController: void loadSearchResultsSynchronous(java.util.List,com.fsck.k9.mailstore.LocalFolder,com.fsck.k9.mail.Folder,com.fsck.k9.controller.MessagingListener)>($r1, $r2, $r3, $r4);

        return;
    }
    static boolean access$500(com.fsck.k9.controller.MessagingController, com.fsck.k9.Account, com.fsck.k9.mail.Message, java.util.Date)
    {
        com.fsck.k9.controller.MessagingController $r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mail.Message $r2;
        java.util.Date $r3;
        boolean $z0;

        $r0 := @parameter0: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter1: com.fsck.k9.Account;

        $r2 := @parameter2: com.fsck.k9.mail.Message;

        $r3 := @parameter3: java.util.Date;

        $z0 = specialinvoke $r0.<com.fsck.k9.controller.MessagingController: boolean shouldImportMessage(com.fsck.k9.Account,com.fsck.k9.mail.Message,java.util.Date)>($r1, $r2, $r3);

        return $z0;
    }
    static boolean access$600(com.fsck.k9.controller.MessagingController, com.fsck.k9.Account, com.fsck.k9.mailstore.LocalFolder, com.fsck.k9.mail.Message)
    {
        com.fsck.k9.controller.MessagingController $r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mailstore.LocalFolder $r2;
        com.fsck.k9.mail.Message $r3;
        boolean $z0;

        $r0 := @parameter0: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter1: com.fsck.k9.Account;

        $r2 := @parameter2: com.fsck.k9.mailstore.LocalFolder;

        $r3 := @parameter3: com.fsck.k9.mail.Message;

        $z0 = specialinvoke $r0.<com.fsck.k9.controller.MessagingController: boolean shouldNotifyForMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.LocalFolder,com.fsck.k9.mail.Message)>($r1, $r2, $r3);

        return $z0;
    }
    static com.fsck.k9.notification.NotificationController access$700(com.fsck.k9.controller.MessagingController)
    {
        com.fsck.k9.controller.MessagingController $r0;
        com.fsck.k9.notification.NotificationController r1;

        $r0 := @parameter0: com.fsck.k9.controller.MessagingController;

        r1 = $r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.notification.NotificationController notificationController>;

        return r1;
    }
    static void access$800(com.fsck.k9.controller.MessagingController, com.fsck.k9.Account) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.controller.MessagingController $r0;
        com.fsck.k9.Account $r1;

        $r0 := @parameter0: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter1: com.fsck.k9.Account;

        specialinvoke $r0.<com.fsck.k9.controller.MessagingController: void processPendingCommandsSynchronous(com.fsck.k9.Account)>($r1);

        return;
    }
    static void access$900(com.fsck.k9.controller.MessagingController, com.fsck.k9.Account, com.fsck.k9.controller.MessagingControllerCommands$PendingCommand)
    {
        com.fsck.k9.controller.MessagingController $r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.controller.MessagingControllerCommands$PendingCommand $r2;

        $r0 := @parameter0: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter1: com.fsck.k9.Account;

        $r2 := @parameter2: com.fsck.k9.controller.MessagingControllerCommands$PendingCommand;

        specialinvoke $r0.<com.fsck.k9.controller.MessagingController: void queuePendingCommand(com.fsck.k9.Account,com.fsck.k9.controller.MessagingControllerCommands$PendingCommand)>($r1, $r2);

        return;
    }
    private void actOnMessageGroup(com.fsck.k9.Account, java.lang.String, java.util.List, com.fsck.k9.controller.MessagingController$MessageActor)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2;
        java.util.List r3;
        com.fsck.k9.controller.MessagingController$MessageActor $r4;
        com.fsck.k9.mail.MessagingException r5;
        com.fsck.k9.mailstore.LocalStore $r6;
        com.fsck.k9.mailstore.LocalFolder $r7;
        java.lang.Object[] $r8;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.List;

        $r4 := @parameter3: com.fsck.k9.controller.MessagingController$MessageActor;

     label1:
        $r6 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

        $r7 = virtualinvoke $r6.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LocalFolder getFolder(java.lang.String)>($r2);

        r3 = virtualinvoke $r7.<com.fsck.k9.mailstore.LocalFolder: java.util.List getMessagesByReference(java.util.List)>(r3);

        interfaceinvoke $r4.<com.fsck.k9.controller.MessagingController$MessageActor: void act(com.fsck.k9.Account,com.fsck.k9.mailstore.LocalFolder,java.util.List)>($r1, $r7, r3);

     label2:
        return;

     label3:
        r5 := @caughtexception;

        $r8 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r5, "Error loading account?!", $r8);

        return;

        catch com.fsck.k9.mail.MessagingException from label1 to label2 with label3;
    }
    private void actOnMessagesGroupedByAccountAndFolder(java.util.List, com.fsck.k9.controller.MessagingController$MessageActor)
    {
        com.fsck.k9.controller.MessagingController r0;
        java.util.List r1;
        com.fsck.k9.controller.MessagingController$MessageActor $r2;
        java.util.Map $r3;
        java.util.Set $r4;
        java.util.Iterator $r5, $r12;
        boolean $z0;
        java.lang.Object $r6;
        java.util.Map$Entry r7;
        java.lang.String r8;
        android.content.Context $r9;
        com.fsck.k9.Preferences $r10;
        com.fsck.k9.Account $r11;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        r1 := @parameter0: java.util.List;

        $r2 := @parameter1: com.fsck.k9.controller.MessagingController$MessageActor;

        $r3 = specialinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Map groupMessagesByAccountAndFolder(java.util.List)>(r1);

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        r8 = (java.lang.String) $r6;

        $r9 = r0.<com.fsck.k9.controller.MessagingController: android.content.Context context>;

        $r10 = staticinvoke <com.fsck.k9.Preferences: com.fsck.k9.Preferences getPreferences(android.content.Context)>($r9);

        $r11 = virtualinvoke $r10.<com.fsck.k9.Preferences: com.fsck.k9.Account getAccount(java.lang.String)>(r8);

        $r6 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r3 = (java.util.Map) $r6;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r12 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r6 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        r8 = (java.lang.String) $r6;

        $r6 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        r1 = (java.util.List) $r6;

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void actOnMessageGroup(com.fsck.k9.Account,java.lang.String,java.util.List,com.fsck.k9.controller.MessagingController$MessageActor)>($r11, r8, r1, $r2);

        goto label2;

     label3:
        return;
    }
    private void checkMailForAccount(android.content.Context, com.fsck.k9.Account, boolean, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        android.content.Context $r1;
        com.fsck.k9.Account $r2;
        boolean $z0, $z1;
        com.fsck.k9.controller.MessagingListener $r3;
        long l0;
        com.fsck.k9.mail.MessagingException r4;
        java.lang.Object[] $r5;
        java.lang.String $r6;
        int $i1;
        byte $b2;
        com.fsck.k9.Account$FolderMode $r7, $r8;
        com.fsck.k9.mailstore.LocalStore $r9;
        java.util.List $r10;
        java.util.Iterator $r11;
        java.lang.Object $r12;
        com.fsck.k9.mail.Folder r13;
        com.fsck.k9.mail.Folder$FolderClass $r14, $r15;
        java.lang.StringBuilder $r16;
        com.fsck.k9.controller.MessagingController$36 $r17;
        java.lang.Throwable $r18;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.fsck.k9.Account;

        $z0 := @parameter2: boolean;

        $r3 := @parameter3: com.fsck.k9.controller.MessagingListener;

        $z1 = virtualinvoke $r2.<com.fsck.k9.Account: boolean isAvailable(android.content.Context)>($r1);

        if $z1 != 0 goto label01;

        $r5 = newarray (java.lang.Object)[1];

        $r6 = virtualinvoke $r2.<com.fsck.k9.Account: java.lang.String getDescription()>();

        $r5[0] = $r6;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Skipping synchronizing unavailable account %s", $r5);

        return;

     label01:
        $i1 = virtualinvoke $r2.<com.fsck.k9.Account: int getAutomaticCheckIntervalMinutes()>();

        $i1 = $i1 * 60;

        $i1 = $i1 * 1000;

        l0 = (long) $i1;

        if $z0 != 0 goto label02;

        $b2 = l0 cmp 0L;

        if $b2 > 0 goto label02;

        $r5 = newarray (java.lang.Object)[1];

        $r6 = virtualinvoke $r2.<com.fsck.k9.Account: java.lang.String getDescription()>();

        $r5[0] = $r6;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Skipping synchronizing account %s", $r5);

        return;

     label02:
        $r5 = newarray (java.lang.Object)[1];

        $r6 = virtualinvoke $r2.<com.fsck.k9.Account: java.lang.String getDescription()>();

        $r5[0] = $r6;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Synchronizing account %s", $r5);

        virtualinvoke $r2.<com.fsck.k9.Account: void setRingNotified(boolean)>(0);

        virtualinvoke r0.<com.fsck.k9.controller.MessagingController: void sendPendingMessages(com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener)>($r2, $r3);

     label03:
        $r7 = virtualinvoke $r2.<com.fsck.k9.Account: com.fsck.k9.Account$FolderMode getFolderDisplayMode()>();

        $r8 = virtualinvoke $r2.<com.fsck.k9.Account: com.fsck.k9.Account$FolderMode getFolderSyncMode()>();

        $r9 = virtualinvoke $r2.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

        $r10 = virtualinvoke $r9.<com.fsck.k9.mail.Store: java.util.List getPersonalNamespaces(boolean)>(0);

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

     label05:
        if $z1 == 0 goto label17;

     label06:
        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

     label07:
        r13 = (com.fsck.k9.mail.Folder) $r12;

     label08:
        virtualinvoke r13.<com.fsck.k9.mail.Folder: void open(int)>(0);

        $r14 = virtualinvoke r13.<com.fsck.k9.mail.Folder: com.fsck.k9.mail.Folder$FolderClass getDisplayClass()>();

        $r15 = virtualinvoke r13.<com.fsck.k9.mail.Folder: com.fsck.k9.mail.Folder$FolderClass getSyncClass()>();

        $z1 = specialinvoke r0.<com.fsck.k9.controller.MessagingController: boolean modeMismatch(com.fsck.k9.Account$FolderMode,com.fsck.k9.mail.Folder$FolderClass)>($r7, $r14);

     label09:
        if $z1 != 0 goto label04;

     label10:
        $z1 = specialinvoke r0.<com.fsck.k9.controller.MessagingController: boolean modeMismatch(com.fsck.k9.Account$FolderMode,com.fsck.k9.mail.Folder$FolderClass)>($r8, $r15);

     label11:
        if $z1 != 0 goto label04;

     label12:
        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void synchronizeFolder(com.fsck.k9.Account,com.fsck.k9.mail.Folder,boolean,long,com.fsck.k9.controller.MessagingListener)>($r2, r13, $z0, l0, $r3);

     label13:
        goto label04;

     label14:
        r4 := @caughtexception;

     label15:
        $r5 = newarray (java.lang.Object)[1];

        $r6 = virtualinvoke $r2.<com.fsck.k9.Account: java.lang.String getName()>();

        $r5[0] = $r6;

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r4, "Unable to synchronize account %s", $r5);

     label16:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("clear notification flag for ");

        $r6 = virtualinvoke $r2.<com.fsck.k9.Account: java.lang.String getDescription()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = new com.fsck.k9.controller.MessagingController$36;

        specialinvoke $r17.<com.fsck.k9.controller.MessagingController$36: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,android.content.Context)>(r0, $r2, $r1);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void putBackground(java.lang.String,com.fsck.k9.controller.MessagingListener,java.lang.Runnable)>($r6, null, $r17);

        return;

     label17:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("clear notification flag for ");

        $r6 = virtualinvoke $r2.<com.fsck.k9.Account: java.lang.String getDescription()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = new com.fsck.k9.controller.MessagingController$36;

        specialinvoke $r17.<com.fsck.k9.controller.MessagingController$36: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,android.content.Context)>(r0, $r2, $r1);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void putBackground(java.lang.String,com.fsck.k9.controller.MessagingListener,java.lang.Runnable)>($r6, null, $r17);

        return;

     label18:
        $r18 := @caughtexception;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("clear notification flag for ");

        $r6 = virtualinvoke $r2.<com.fsck.k9.Account: java.lang.String getDescription()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = new com.fsck.k9.controller.MessagingController$36;

        specialinvoke $r17.<com.fsck.k9.controller.MessagingController$36: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,android.content.Context)>(r0, $r2, $r1);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void putBackground(java.lang.String,com.fsck.k9.controller.MessagingListener,java.lang.Runnable)>($r6, null, $r17);

        throw $r18;

        catch com.fsck.k9.mail.MessagingException from label03 to label05 with label14;
        catch com.fsck.k9.mail.MessagingException from label06 to label07 with label14;
        catch com.fsck.k9.mail.MessagingException from label08 to label09 with label14;
        catch com.fsck.k9.mail.MessagingException from label10 to label11 with label14;
        catch com.fsck.k9.mail.MessagingException from label12 to label13 with label14;
        catch java.lang.Throwable from label03 to label05 with label18;
        catch java.lang.Throwable from label06 to label09 with label18;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label15 to label16 with label18;
    }
    private void clearFetchingMailNotificationIfNecessary(com.fsck.k9.Account)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        boolean $z0;
        com.fsck.k9.notification.NotificationController $r2;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $z0 = virtualinvoke $r1.<com.fsck.k9.Account: boolean isShowOngoing()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.notification.NotificationController notificationController>;

        virtualinvoke $r2.<com.fsck.k9.notification.NotificationController: void clearFetchingMailNotification(com.fsck.k9.Account)>($r1);

     label1:
        return;
    }
    private void clearSendingNotificationIfNecessary(com.fsck.k9.Account)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        boolean $z0;
        com.fsck.k9.notification.NotificationController $r2;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $z0 = virtualinvoke $r1.<com.fsck.k9.Account: boolean isShowOngoing()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.notification.NotificationController notificationController>;

        virtualinvoke $r2.<com.fsck.k9.notification.NotificationController: void clearSendingNotification(com.fsck.k9.Account)>($r1);

     label1:
        return;
    }
    private static void closeFolder(com.fsck.k9.mail.Folder)
    {
        com.fsck.k9.mail.Folder $r0;

        $r0 := @parameter0: com.fsck.k9.mail.Folder;

        if $r0 == null goto label1;

        virtualinvoke $r0.<com.fsck.k9.mail.Folder: void close()>();

     label1:
        return;
    }
    private static java.util.List collectMessagesInThreads(com.fsck.k9.Account, java.util.List) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.Account $r0;
        java.util.List r1;
        java.util.ArrayList r2;
        com.fsck.k9.mailstore.LocalStore $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        com.fsck.k9.mail.Message r6;
        com.fsck.k9.mailstore.LocalMessage r7;
        long $l0;
        byte $b1;

        $r0 := @parameter0: com.fsck.k9.Account;

        r1 := @parameter1: java.util.List;

        $r3 = virtualinvoke $r0.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.fsck.k9.mail.Message) $r5;

        r7 = (com.fsck.k9.mailstore.LocalMessage) r6;

        $l0 = virtualinvoke r7.<com.fsck.k9.mailstore.LocalMessage: long getRootId()>();

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label3;

        $l0 = virtualinvoke r7.<com.fsck.k9.mailstore.LocalMessage: long getThreadId()>();

     label2:
        r1 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalStore: java.util.List getMessagesInThread(long)>($l0);

        interfaceinvoke r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        goto label1;

     label3:
        goto label2;

     label4:
        return r2;
    }
    private void deleteMessagesSynchronous(com.fsck.k9.Account, java.lang.String, java.util.List, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2, $r22;
        java.util.List r3, $r9;
        com.fsck.k9.controller.MessagingListener $r4, r15;
        com.fsck.k9.mailstore.UnavailableStorageException r5;
        com.fsck.k9.mail.MessagingException r6;
        com.fsck.k9.mail.Folder r7, r8, $r20, $r25;
        java.util.Iterator $r10, $r14;
        boolean $z0;
        java.lang.Object $r11;
        com.fsck.k9.mail.Message r12;
        java.util.Set $r13;
        java.lang.Object[] $r16;
        com.fsck.k9.controller.UnavailableAccountException $r17;
        java.lang.Throwable $r18;
        com.fsck.k9.mailstore.LocalStore $r19;
        java.util.Map r21;
        com.fsck.k9.mail.Flag $r23;
        int $i0;
        java.lang.RuntimeException $r24;
        com.fsck.k9.mail.Folder$FolderType $r26;
        com.fsck.k9.Account$DeletePolicy $r27, $r29;
        com.fsck.k9.controller.MessagingControllerCommands$PendingAppend $r28;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.List;

        $r4 := @parameter3: com.fsck.k9.controller.MessagingListener;

        r7 = null;

        r8 = null;

        $r9 = staticinvoke <com.fsck.k9.controller.MessagingController: java.util.List getUidsFromMessages(java.util.List)>(r3);

     label01:
        $r10 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

     label03:
        if $z0 == 0 goto label16;

     label04:
        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

     label05:
        r12 = (com.fsck.k9.mail.Message) $r11;

     label06:
        $r13 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners(com.fsck.k9.controller.MessagingListener)>($r4);

        $r14 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

     label08:
        if $z0 == 0 goto label02;

     label09:
        $r11 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

     label10:
        r15 = (com.fsck.k9.controller.MessagingListener) $r11;

     label11:
        interfaceinvoke r15.<com.fsck.k9.controller.MessagingListener: void messageDeleted(com.fsck.k9.Account,java.lang.String,com.fsck.k9.mail.Message)>($r1, $r2, r12);

     label12:
        goto label07;

     label13:
        r5 := @caughtexception;

     label14:
        $r16 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Failed to delete message because storage is not available - trying again later.", $r16);

        $r17 = new com.fsck.k9.controller.UnavailableAccountException;

        specialinvoke $r17.<com.fsck.k9.controller.UnavailableAccountException: void <init>(java.lang.Throwable)>(r5);

        throw $r17;

     label15:
        $r18 := @caughtexception;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r7);

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r8);

        throw $r18;

     label16:
        $r19 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

        $r20 = virtualinvoke $r19.<com.fsck.k9.mail.Store: com.fsck.k9.mail.Folder getFolder(java.lang.String)>($r2);

     label17:
        r7 = $r20;

        r21 = null;

     label18:
        $r22 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getTrashFolderName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r22);

     label19:
        if $z0 != 0 goto label22;

     label20:
        $z0 = virtualinvoke $r1.<com.fsck.k9.Account: boolean hasTrashFolder()>();

     label21:
        if $z0 != 0 goto label37;

     label22:
        $r16 = newarray (java.lang.Object)[0];

     label23:
        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Deleting messages in trash folder or trash set to -None-, not copying", $r16);

     label24:
        $r23 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag DELETED>;

     label25:
        $r13 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r23);

        virtualinvoke $r20.<com.fsck.k9.mail.Folder: void setFlags(java.util.List,java.util.Set,boolean)>(r3, $r13, 1);

     label26:
        $r13 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r10 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label27:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

     label28:
        if $z0 == 0 goto label48;

     label29:
        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

     label30:
        $r4 = (com.fsck.k9.controller.MessagingListener) $r11;

     label31:
        $i0 = virtualinvoke $r20.<com.fsck.k9.mail.Folder: int getUnreadMessageCount()>();

        interfaceinvoke $r4.<com.fsck.k9.controller.MessagingListener: void folderStatusChanged(com.fsck.k9.Account,java.lang.String,int)>($r1, $r2, $i0);

     label32:
        if r8 == null goto label27;

     label33:
        $r22 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getTrashFolderName()>();

        $i0 = virtualinvoke r8.<com.fsck.k9.mail.Folder: int getUnreadMessageCount()>();

        interfaceinvoke $r4.<com.fsck.k9.controller.MessagingListener: void folderStatusChanged(com.fsck.k9.Account,java.lang.String,int)>($r1, $r22, $i0);

     label34:
        goto label27;

     label35:
        r6 := @caughtexception;

     label36:
        $r24 = new java.lang.RuntimeException;

        specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error deleting message from local store.", r6);

        throw $r24;

     label37:
        $r22 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getTrashFolderName()>();

        $r25 = virtualinvoke $r19.<com.fsck.k9.mail.Store: com.fsck.k9.mail.Folder getFolder(java.lang.String)>($r22);

     label38:
        r8 = $r25;

     label39:
        $z0 = virtualinvoke $r25.<com.fsck.k9.mail.Folder: boolean exists()>();

     label40:
        if $z0 != 0 goto label43;

     label41:
        $r26 = <com.fsck.k9.mail.Folder$FolderType: com.fsck.k9.mail.Folder$FolderType HOLDS_MESSAGES>;

     label42:
        virtualinvoke $r25.<com.fsck.k9.mail.Folder: boolean create(com.fsck.k9.mail.Folder$FolderType)>($r26);

     label43:
        $z0 = virtualinvoke $r25.<com.fsck.k9.mail.Folder: boolean exists()>();

     label44:
        if $z0 == 0 goto label26;

     label45:
        $r16 = newarray (java.lang.Object)[0];

     label46:
        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Deleting messages in normal folder, moving", $r16);

        r21 = virtualinvoke $r20.<com.fsck.k9.mail.Folder: java.util.Map moveMessages(java.util.List,com.fsck.k9.mail.Folder)>(r3, $r25);

     label47:
        goto label26;

     label48:
        $r16 = newarray (java.lang.Object)[2];

     label49:
        $r22 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getDescription()>();

     label50:
        $r16[0] = $r22;

     label51:
        $r27 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.Account$DeletePolicy getDeletePolicy()>();

     label52:
        $r16[1] = $r27;

     label53:
        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Delete policy for account %s is %s", $r16);

        $r22 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getOutboxFolderName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r22);

     label54:
        if $z0 == 0 goto label65;

     label55:
        $r10 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label56:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

     label57:
        if $z0 == 0 goto label62;

     label58:
        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

     label59:
        r12 = (com.fsck.k9.mail.Message) $r11;

     label60:
        $r2 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getTrashFolderName()>();

        $r22 = virtualinvoke r12.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

        $r28 = staticinvoke <com.fsck.k9.controller.MessagingControllerCommands$PendingAppend: com.fsck.k9.controller.MessagingControllerCommands$PendingAppend create(java.lang.String,java.lang.String)>($r2, $r22);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void queuePendingCommand(com.fsck.k9.Account,com.fsck.k9.controller.MessagingControllerCommands$PendingCommand)>($r1, $r28);

     label61:
        goto label56;

     label62:
        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void processPendingCommands(com.fsck.k9.Account)>($r1);

     label63:
        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void unsuppressMessages(com.fsck.k9.Account,java.util.List)>($r1, r3);

     label64:
        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r20);

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r8);

        return;

     label65:
        $r27 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.Account$DeletePolicy getDeletePolicy()>();

     label66:
        $r29 = <com.fsck.k9.Account$DeletePolicy: com.fsck.k9.Account$DeletePolicy ON_DELETE>;

     label67:
        if $r27 != $r29 goto label76;

     label68:
        $r22 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getTrashFolderName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r22);

     label69:
        if $z0 == 0 goto label74;

     label70:
        $r23 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag DELETED>;

     label71:
        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void queueSetFlag(com.fsck.k9.Account,java.lang.String,boolean,com.fsck.k9.mail.Flag,java.util.List)>($r1, $r2, 1, $r23, $r9);

     label72:
        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void processPendingCommands(com.fsck.k9.Account)>($r1);

     label73:
        goto label63;

     label74:
        $r22 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getTrashFolderName()>();

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void queueMoveOrCopy(com.fsck.k9.Account,java.lang.String,java.lang.String,boolean,java.util.List,java.util.Map)>($r1, $r2, $r22, 0, $r9, r21);

     label75:
        goto label72;

     label76:
        $r27 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.Account$DeletePolicy getDeletePolicy()>();

     label77:
        $r29 = <com.fsck.k9.Account$DeletePolicy: com.fsck.k9.Account$DeletePolicy MARK_AS_READ>;

     label78:
        if $r27 != $r29 goto label82;

     label79:
        $r23 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag SEEN>;

     label80:
        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void queueSetFlag(com.fsck.k9.Account,java.lang.String,boolean,com.fsck.k9.mail.Flag,java.util.List)>($r1, $r2, 1, $r23, $r9);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void processPendingCommands(com.fsck.k9.Account)>($r1);

     label81:
        goto label63;

     label82:
        $r16 = newarray (java.lang.Object)[1];

     label83:
        $r27 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.Account$DeletePolicy getDeletePolicy()>();

     label84:
        $r16[0] = $r27;

     label85:
        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Delete policy %s prevents delete from server", $r16);

     label86:
        goto label63;

        catch com.fsck.k9.mailstore.UnavailableStorageException from label01 to label03 with label13;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label04 to label05 with label13;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label06 to label08 with label13;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label09 to label10 with label13;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label11 to label12 with label13;
        catch com.fsck.k9.mail.MessagingException from label01 to label03 with label35;
        catch com.fsck.k9.mail.MessagingException from label04 to label05 with label35;
        catch com.fsck.k9.mail.MessagingException from label06 to label08 with label35;
        catch com.fsck.k9.mail.MessagingException from label09 to label10 with label35;
        catch com.fsck.k9.mail.MessagingException from label11 to label12 with label35;
        catch java.lang.Throwable from label01 to label03 with label15;
        catch java.lang.Throwable from label04 to label08 with label15;
        catch java.lang.Throwable from label09 to label12 with label15;
        catch java.lang.Throwable from label14 to label15 with label15;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label16 to label17 with label13;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label18 to label19 with label13;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label20 to label21 with label13;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label23 to label24 with label13;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label25 to label28 with label13;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label29 to label30 with label13;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label31 to label32 with label13;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label33 to label34 with label13;
        catch com.fsck.k9.mail.MessagingException from label16 to label17 with label35;
        catch com.fsck.k9.mail.MessagingException from label18 to label19 with label35;
        catch com.fsck.k9.mail.MessagingException from label20 to label21 with label35;
        catch com.fsck.k9.mail.MessagingException from label23 to label24 with label35;
        catch com.fsck.k9.mail.MessagingException from label25 to label28 with label35;
        catch com.fsck.k9.mail.MessagingException from label29 to label30 with label35;
        catch com.fsck.k9.mail.MessagingException from label31 to label32 with label35;
        catch com.fsck.k9.mail.MessagingException from label33 to label34 with label35;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch java.lang.Throwable from label18 to label19 with label15;
        catch java.lang.Throwable from label20 to label21 with label15;
        catch java.lang.Throwable from label22 to label28 with label15;
        catch java.lang.Throwable from label29 to label32 with label15;
        catch java.lang.Throwable from label33 to label34 with label15;
        catch java.lang.Throwable from label36 to label37 with label15;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label37 to label38 with label13;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label39 to label40 with label13;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label42 to label44 with label13;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label46 to label47 with label13;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label49 to label50 with label13;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label51 to label52 with label13;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label53 to label54 with label13;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label55 to label57 with label13;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label58 to label59 with label13;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label60 to label61 with label13;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label62 to label64 with label13;
        catch com.fsck.k9.mail.MessagingException from label37 to label38 with label35;
        catch com.fsck.k9.mail.MessagingException from label39 to label40 with label35;
        catch com.fsck.k9.mail.MessagingException from label42 to label44 with label35;
        catch com.fsck.k9.mail.MessagingException from label46 to label47 with label35;
        catch com.fsck.k9.mail.MessagingException from label49 to label50 with label35;
        catch com.fsck.k9.mail.MessagingException from label51 to label52 with label35;
        catch com.fsck.k9.mail.MessagingException from label53 to label54 with label35;
        catch com.fsck.k9.mail.MessagingException from label55 to label57 with label35;
        catch com.fsck.k9.mail.MessagingException from label58 to label59 with label35;
        catch com.fsck.k9.mail.MessagingException from label60 to label61 with label35;
        catch com.fsck.k9.mail.MessagingException from label62 to label64 with label35;
        catch java.lang.Throwable from label37 to label38 with label15;
        catch java.lang.Throwable from label39 to label40 with label15;
        catch java.lang.Throwable from label41 to label44 with label15;
        catch java.lang.Throwable from label45 to label47 with label15;
        catch java.lang.Throwable from label48 to label54 with label15;
        catch java.lang.Throwable from label55 to label57 with label15;
        catch java.lang.Throwable from label58 to label61 with label15;
        catch java.lang.Throwable from label62 to label64 with label15;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label65 to label66 with label13;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label68 to label69 with label13;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label71 to label73 with label13;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label74 to label75 with label13;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label76 to label77 with label13;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label80 to label81 with label13;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label83 to label84 with label13;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label85 to label86 with label13;
        catch com.fsck.k9.mail.MessagingException from label65 to label66 with label35;
        catch com.fsck.k9.mail.MessagingException from label68 to label69 with label35;
        catch com.fsck.k9.mail.MessagingException from label71 to label73 with label35;
        catch com.fsck.k9.mail.MessagingException from label74 to label75 with label35;
        catch com.fsck.k9.mail.MessagingException from label76 to label77 with label35;
        catch com.fsck.k9.mail.MessagingException from label80 to label81 with label35;
        catch com.fsck.k9.mail.MessagingException from label83 to label84 with label35;
        catch com.fsck.k9.mail.MessagingException from label85 to label86 with label35;
        catch java.lang.Throwable from label65 to label67 with label15;
        catch java.lang.Throwable from label68 to label69 with label15;
        catch java.lang.Throwable from label70 to label73 with label15;
        catch java.lang.Throwable from label74 to label75 with label15;
        catch java.lang.Throwable from label76 to label78 with label15;
        catch java.lang.Throwable from label79 to label81 with label15;
        catch java.lang.Throwable from label82 to label86 with label15;
    }
    private void deleteThreadsSynchronous(com.fsck.k9.Account, java.lang.String, java.util.List)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2;
        java.util.List r3;
        com.fsck.k9.mail.MessagingException r4;
        java.lang.Object[] $r5;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.List;

     label1:
        r3 = staticinvoke <com.fsck.k9.controller.MessagingController: java.util.List collectMessagesInThreads(com.fsck.k9.Account,java.util.List)>($r1, r3);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void deleteMessagesSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,com.fsck.k9.controller.MessagingListener)>($r1, $r2, r3, null);

     label2:
        return;

     label3:
        r4 := @caughtexception;

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r4, "Something went wrong while deleting threads", $r5);

        return;

        catch com.fsck.k9.mail.MessagingException from label1 to label2 with label3;
    }
    private void doRefreshRemote(com.fsck.k9.Account, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.controller.MessagingListener $r2;
        com.fsck.k9.controller.MessagingController$4 $r3;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: com.fsck.k9.controller.MessagingListener;

        $r3 = new com.fsck.k9.controller.MessagingController$4;

        specialinvoke $r3.<com.fsck.k9.controller.MessagingController$4: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener)>(r0, $r1, $r2);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void put(java.lang.String,com.fsck.k9.controller.MessagingListener,java.lang.Runnable)>("doRefreshRemote", $r2, $r3);

        return;
    }
    private void downloadLargeMessages(com.fsck.k9.Account, com.fsck.k9.mail.Folder, com.fsck.k9.mailstore.LocalFolder, java.util.List, java.util.concurrent.atomic.AtomicInteger, int, java.util.concurrent.atomic.AtomicInteger, int, com.fsck.k9.mail.FetchProfile) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mail.Folder r2;
        com.fsck.k9.mailstore.LocalFolder $r3;
        java.util.List r4;
        java.util.concurrent.atomic.AtomicInteger $r5, $r6;
        int $i0, $i1, $i2;
        com.fsck.k9.mail.FetchProfile $r7;
        java.lang.String $r8, $r15;
        java.util.Date $r9;
        java.lang.Object[] $r10;
        java.util.Iterator $r11, $r19;
        boolean $z0;
        java.lang.Object $r12;
        com.fsck.k9.mail.Message r13;
        com.fsck.k9.mail.Body $r14;
        com.fsck.k9.mailstore.LocalMessage $r16;
        com.fsck.k9.mail.Flag $r17;
        java.util.Set $r18;
        com.fsck.k9.controller.MessagingListener r20;
        com.fsck.k9.notification.NotificationController $r21;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        r2 := @parameter1: com.fsck.k9.mail.Folder;

        $r3 := @parameter2: com.fsck.k9.mailstore.LocalFolder;

        r4 := @parameter3: java.util.List;

        $r5 := @parameter4: java.util.concurrent.atomic.AtomicInteger;

        $i0 := @parameter5: int;

        $r6 := @parameter6: java.util.concurrent.atomic.AtomicInteger;

        $i1 := @parameter7: int;

        $r7 := @parameter8: com.fsck.k9.mail.FetchProfile;

        $r8 = virtualinvoke r2.<com.fsck.k9.mail.Folder: java.lang.String getName()>();

        $r9 = virtualinvoke $r1.<com.fsck.k9.Account: java.util.Date getEarliestPollDate()>();

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = $r8;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("SYNC: Fetching large messages for folder %s", $r10);

        virtualinvoke r2.<com.fsck.k9.mail.Folder: void fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)>(r4, $r7, null);

        $r11 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (com.fsck.k9.mail.Message) $r12;

        $z0 = specialinvoke r0.<com.fsck.k9.controller.MessagingController: boolean shouldImportMessage(com.fsck.k9.Account,com.fsck.k9.mail.Message,java.util.Date)>($r1, r13, $r9);

        if $z0 != 0 goto label2;

        virtualinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        goto label1;

     label2:
        $r14 = virtualinvoke r13.<com.fsck.k9.mail.Message: com.fsck.k9.mail.Body getBody()>();

        if $r14 != null goto label6;

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void downloadSaneBody(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,com.fsck.k9.mail.Message)>($r1, r2, $r3, r13);

     label3:
        $r10 = newarray (java.lang.Object)[3];

        $r10[0] = $r1;

        $r10[1] = $r8;

        $r15 = virtualinvoke r13.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

        $r10[2] = $r15;

        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("About to notify listeners that we got a new large message %s:%s:%s", $r10);

        virtualinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        $r15 = virtualinvoke r13.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

        $r16 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalMessage getMessage(java.lang.String)>($r15);

        $r17 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag SEEN>;

        $z0 = virtualinvoke $r16.<com.fsck.k9.mailstore.LocalMessage: boolean isSet(com.fsck.k9.mail.Flag)>($r17);

        if $z0 != 0 goto label4;

        virtualinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

     label4:
        $r18 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r19 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r12 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (com.fsck.k9.controller.MessagingListener) $r12;

        $i2 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        interfaceinvoke r20.<com.fsck.k9.controller.MessagingListener: void synchronizeMailboxProgress(com.fsck.k9.Account,java.lang.String,int,int)>($r1, $r8, $i2, $i1);

        $r17 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag SEEN>;

        $z0 = virtualinvoke $r16.<com.fsck.k9.mailstore.LocalMessage: boolean isSet(com.fsck.k9.mail.Flag)>($r17);

        if $z0 != 0 goto label5;

        interfaceinvoke r20.<com.fsck.k9.controller.MessagingListener: void synchronizeMailboxNewMessage(com.fsck.k9.Account,java.lang.String,com.fsck.k9.mail.Message)>($r1, $r8, $r16);

        goto label5;

     label6:
        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void downloadPartial(com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,com.fsck.k9.mail.Message)>(r2, $r3, r13);

        goto label3;

     label7:
        $z0 = specialinvoke r0.<com.fsck.k9.controller.MessagingController: boolean shouldNotifyForMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.LocalFolder,com.fsck.k9.mail.Message)>($r1, $r3, r13);

        if $z0 == 0 goto label1;

        $r21 = r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.notification.NotificationController notificationController>;

        virtualinvoke $r21.<com.fsck.k9.notification.NotificationController: void addNewMailNotification(com.fsck.k9.Account,com.fsck.k9.mailstore.LocalMessage,int)>($r1, $r16, $i0);

        goto label1;

     label8:
        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = $r8;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("SYNC: Done fetching large messages for folder %s", $r10);

        return;
    }
    private int downloadMessages(com.fsck.k9.Account, com.fsck.k9.mail.Folder, com.fsck.k9.mailstore.LocalFolder, java.util.List, boolean, boolean) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mail.Folder $r2;
        com.fsck.k9.mailstore.LocalFolder $r3;
        java.util.List r4, r17;
        boolean $z0, $z1, $z2;
        java.util.ArrayList r5, r6, r7, $r32;
        java.util.concurrent.atomic.AtomicInteger r8, r9, $r31;
        int i0, i1, $i2, $i3;
        java.util.Date r10, r12, $r30;
        com.fsck.k9.mail.MessagingException r11;
        java.lang.Object[] $r13;
        java.lang.String $r14, $r26, $r27;
        android.content.Context $r15;
        com.fsck.k9.AccountStats $r16;
        java.util.Iterator $r18;
        java.lang.Object $r19;
        com.fsck.k9.mail.Message r20;
        java.util.Set $r21;
        com.fsck.k9.controller.MessagingListener r22;
        java.lang.Integer $r23;
        com.fsck.k9.mail.FetchProfile r24, $r34;
        com.fsck.k9.mail.FetchProfile$Item $r25;
        java.lang.Long $r28;
        long $l4;
        com.fsck.k9.Preferences $r29;
        com.fsck.k9.controller.UidReverseComparator $r33;
        com.fsck.k9.controller.MessagingController$10 $r35;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: com.fsck.k9.mail.Folder;

        $r3 := @parameter2: com.fsck.k9.mailstore.LocalFolder;

        r4 := @parameter3: java.util.List;

        $z0 := @parameter4: boolean;

        $z1 := @parameter5: boolean;

        r12 = virtualinvoke $r1.<com.fsck.k9.Account: java.util.Date getEarliestPollDate()>();

        $r30 = new java.util.Date;

        r10 = $r30;

        specialinvoke $r30.<java.util.Date: void <init>()>();

        if r12 == null goto label01;

        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = r12;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Only syncing messages after %s", $r13);

     label01:
        $r14 = virtualinvoke $r2.<com.fsck.k9.mail.Folder: java.lang.String getName()>();

        i1 = 0;

        $r15 = r0.<com.fsck.k9.controller.MessagingController: android.content.Context context>;

     label02:
        $r16 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.AccountStats getStats(android.content.Context)>($r15);

     label03:
        i1 = $r16.<com.fsck.k9.AccountStats: int unreadMessageCount>;

     label04:
        r7 = new java.util.ArrayList;

        r5 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        r7 = new java.util.ArrayList;

        r17 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        r8 = new java.util.concurrent.atomic.AtomicInteger;

        r9 = r8;

        specialinvoke r8.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        r6 = new java.util.ArrayList;

        r7 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r4);

        $r18 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z2 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label07;

        $r19 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r20 = (com.fsck.k9.mail.Message) $r19;

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void evaluateMessageForDownload(com.fsck.k9.mail.Message,java.lang.String,com.fsck.k9.mailstore.LocalFolder,com.fsck.k9.mail.Folder,com.fsck.k9.Account,java.util.List,java.util.List,boolean)>(r20, $r14, $r3, $r2, $r1, r17, r5, $z0);

        goto label05;

     label06:
        r11 := @caughtexception;

        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = $r1;

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r11, "Unable to getUnreadMessageCount for account: %s", $r13);

        goto label04;

     label07:
        $r31 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r31.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        i0 = interfaceinvoke r17.<java.util.List: int size()>();

        $i2 = interfaceinvoke r5.<java.util.List: int size()>();

        i0 = i0 + $i2;

        $r21 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r18 = interfaceinvoke $r21.<java.util.Set: java.util.Iterator iterator()>();

     label08:
        $z0 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r19 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r22 = (com.fsck.k9.controller.MessagingListener) $r19;

        $i2 = virtualinvoke $r31.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        interfaceinvoke r22.<com.fsck.k9.controller.MessagingListener: void synchronizeMailboxProgress(com.fsck.k9.Account,java.lang.String,int,int)>($r1, $r14, $i2, i0);

        goto label08;

     label09:
        $r13 = newarray (java.lang.Object)[1];

        $i2 = interfaceinvoke r17.<java.util.List: int size()>();

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r13[0] = $r23;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("SYNC: Have %d unsynced messages", $r13);

        interfaceinvoke r7.<java.util.List: void clear()>();

        r6 = new java.util.ArrayList;

        r7 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $r32 = new java.util.ArrayList;

        specialinvoke $r32.<java.util.ArrayList: void <init>()>();

        $z0 = interfaceinvoke r17.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label14;

        $r33 = new com.fsck.k9.controller.UidReverseComparator;

        specialinvoke $r33.<com.fsck.k9.controller.UidReverseComparator: void <init>()>();

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r17, $r33);

        $i2 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalFolder: int getVisibleLimit()>();

        $i3 = interfaceinvoke r17.<java.util.List: int size()>();

        if $i2 <= 0 goto label10;

        if $i3 <= $i2 goto label10;

        r17 = interfaceinvoke r17.<java.util.List: java.util.List subList(int,int)>(0, $i2);

     label10:
        $r34 = new com.fsck.k9.mail.FetchProfile;

        r24 = $r34;

        specialinvoke $r34.<com.fsck.k9.mail.FetchProfile: void <init>()>();

        $z0 = virtualinvoke $r2.<com.fsck.k9.mail.Folder: boolean supportsFetchingFlags()>();

        if $z0 == 0 goto label11;

        $r25 = <com.fsck.k9.mail.FetchProfile$Item: com.fsck.k9.mail.FetchProfile$Item FLAGS>;

        virtualinvoke $r34.<com.fsck.k9.mail.FetchProfile: boolean add(java.lang.Object)>($r25);

     label11:
        $r25 = <com.fsck.k9.mail.FetchProfile$Item: com.fsck.k9.mail.FetchProfile$Item ENVELOPE>;

        virtualinvoke r24.<com.fsck.k9.mail.FetchProfile: boolean add(java.lang.Object)>($r25);

        $r13 = newarray (java.lang.Object)[2];

        $i2 = interfaceinvoke r17.<java.util.List: int size()>();

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r13[0] = $r23;

        $r13[1] = $r14;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("SYNC: About to fetch %d unsynced messages for folder %s", $r13);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void fetchUnsyncedMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,java.util.List,java.util.List,java.util.List,java.util.concurrent.atomic.AtomicInteger,int,com.fsck.k9.mail.FetchProfile)>($r1, $r2, r17, $r32, r7, $r31, i0, r24);

        $r26 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalFolder: java.lang.String getPushState()>();

        $r18 = interfaceinvoke r17.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z0 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r19 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r20 = (com.fsck.k9.mail.Message) $r19;

        $r27 = virtualinvoke $r2.<com.fsck.k9.mail.Folder: java.lang.String getNewPushState(java.lang.String,com.fsck.k9.mail.Message)>($r26, r20);

        if $r27 == null goto label12;

        $r26 = $r27;

        goto label12;

     label13:
        virtualinvoke $r3.<com.fsck.k9.mailstore.LocalFolder: void setPushState(java.lang.String)>($r26);

        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = $r14;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("SYNC: Synced unsynced messages for folder %s", $r13);

     label14:
        $r13 = newarray (java.lang.Object)[3];

        $i2 = interfaceinvoke r7.<java.util.List: int size()>();

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r13[0] = $r23;

        $i2 = interfaceinvoke $r32.<java.util.List: int size()>();

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r13[1] = $r23;

        $i2 = interfaceinvoke r17.<java.util.List: int size()>();

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r13[2] = $r23;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("SYNC: Have %d large messages and %d small messages out of %d unsynced messages", $r13);

        interfaceinvoke r17.<java.util.List: void clear()>();

        $r34 = new com.fsck.k9.mail.FetchProfile;

        specialinvoke $r34.<com.fsck.k9.mail.FetchProfile: void <init>()>();

        $r25 = <com.fsck.k9.mail.FetchProfile$Item: com.fsck.k9.mail.FetchProfile$Item BODY>;

        virtualinvoke $r34.<com.fsck.k9.mail.FetchProfile: boolean add(java.lang.Object)>($r25);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void downloadSmallMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.concurrent.atomic.AtomicInteger,int,java.util.concurrent.atomic.AtomicInteger,int,com.fsck.k9.mail.FetchProfile)>($r1, $r2, $r3, $r32, $r31, i1, r9, i0, $r34);

        interfaceinvoke $r32.<java.util.List: void clear()>();

        $r34 = new com.fsck.k9.mail.FetchProfile;

        specialinvoke $r34.<com.fsck.k9.mail.FetchProfile: void <init>()>();

        $r25 = <com.fsck.k9.mail.FetchProfile$Item: com.fsck.k9.mail.FetchProfile$Item STRUCTURE>;

        virtualinvoke $r34.<com.fsck.k9.mail.FetchProfile: boolean add(java.lang.Object)>($r25);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void downloadLargeMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.concurrent.atomic.AtomicInteger,int,java.util.concurrent.atomic.AtomicInteger,int,com.fsck.k9.mail.FetchProfile)>($r1, $r2, $r3, r7, $r31, i1, r9, i0, $r34);

        interfaceinvoke r7.<java.util.List: void clear()>();

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void refreshLocalMessageFlags(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.concurrent.atomic.AtomicInteger,int)>($r1, $r2, $r3, r5, $r31, i0);

        $r13 = newarray (java.lang.Object)[2];

        $r13[0] = $r14;

        i1 = virtualinvoke r9.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r13[1] = $r23;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("SYNC: Synced remote messages for folder %s, %d new messages", $r13);

        if $z1 == 0 goto label15;

        $r35 = new com.fsck.k9.controller.MessagingController$10;

        specialinvoke $r35.<com.fsck.k9.controller.MessagingController$10: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,java.lang.String)>(r0, $r1, $r14);

        virtualinvoke $r3.<com.fsck.k9.mailstore.LocalFolder: void purgeToVisibleLimit(com.fsck.k9.mailstore.MessageRemovalListener)>($r35);

     label15:
        $r28 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalFolder: java.lang.Long getOldestMessageDate()>();

        if $r28 == null goto label16;

        $r30 = new java.util.Date;

        r12 = $r30;

        $l4 = virtualinvoke $r28.<java.lang.Long: long longValue()>();

        specialinvoke $r30.<java.util.Date: void <init>(long)>($l4);

        $z0 = virtualinvoke $r30.<java.util.Date: boolean before(java.util.Date)>(r10);

        if $z0 == 0 goto label16;

        $r30 = new java.util.Date;

        $l4 = virtualinvoke $r1.<com.fsck.k9.Account: long getLatestOldMessageSeenTime()>();

        specialinvoke $r30.<java.util.Date: void <init>(long)>($l4);

        $z0 = virtualinvoke r12.<java.util.Date: boolean after(java.util.Date)>($r30);

        if $z0 == 0 goto label16;

        $l4 = virtualinvoke r12.<java.util.Date: long getTime()>();

        virtualinvoke $r1.<com.fsck.k9.Account: void setLatestOldMessageSeenTime(long)>($l4);

        $r15 = r0.<com.fsck.k9.controller.MessagingController: android.content.Context context>;

        $r29 = staticinvoke <com.fsck.k9.Preferences: com.fsck.k9.Preferences getPreferences(android.content.Context)>($r15);

        virtualinvoke $r1.<com.fsck.k9.Account: void save(com.fsck.k9.Preferences)>($r29);

     label16:
        i1 = virtualinvoke r9.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        return i1;

        catch com.fsck.k9.mail.MessagingException from label02 to label03 with label06;
    }
    private void downloadPartial(com.fsck.k9.mail.Folder, com.fsck.k9.mailstore.LocalFolder, com.fsck.k9.mail.Message) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.mail.Folder $r1;
        com.fsck.k9.mailstore.LocalFolder $r2;
        com.fsck.k9.mail.Message $r3;
        com.fsck.k9.mail.DefaultBodyFactory r4;
        java.util.Set $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;
        com.fsck.k9.mail.Part r8;
        java.util.List $r9;
        java.lang.String $r10;
        com.fsck.k9.mailstore.LocalMessage $r11;
        com.fsck.k9.mail.Flag $r12;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.mail.Folder;

        $r2 := @parameter1: com.fsck.k9.mailstore.LocalFolder;

        $r3 := @parameter2: com.fsck.k9.mail.Message;

        $r5 = staticinvoke <com.fsck.k9.mail.internet.MessageExtractor: java.util.Set collectTextParts(com.fsck.k9.mail.Message)>($r3);

        r4 = new com.fsck.k9.mail.DefaultBodyFactory;

        specialinvoke r4.<com.fsck.k9.mail.DefaultBodyFactory: void <init>()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.fsck.k9.mail.Part) $r7;

        virtualinvoke $r1.<com.fsck.k9.mail.Folder: void fetchPart(com.fsck.k9.mail.Message,com.fsck.k9.mail.Part,com.fsck.k9.mail.MessageRetrievalListener,com.fsck.k9.mail.BodyFactory)>($r3, r8, null, r4);

        goto label1;

     label2:
        $r9 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r3);

        virtualinvoke $r2.<com.fsck.k9.mailstore.LocalFolder: java.util.Map appendMessages(java.util.List)>($r9);

        $r10 = virtualinvoke $r3.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

        $r11 = virtualinvoke $r2.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalMessage getMessage(java.lang.String)>($r10);

        $r12 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag X_DOWNLOADED_PARTIAL>;

        virtualinvoke $r11.<com.fsck.k9.mail.Message: void setFlag(com.fsck.k9.mail.Flag,boolean)>($r12, 1);

        return;
    }
    private void downloadSaneBody(com.fsck.k9.Account, com.fsck.k9.mail.Folder, com.fsck.k9.mailstore.LocalFolder, com.fsck.k9.mail.Message) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mail.Folder $r2;
        com.fsck.k9.mailstore.LocalFolder $r3;
        com.fsck.k9.mail.Message $r4;
        com.fsck.k9.mail.FetchProfile r5;
        com.fsck.k9.mail.FetchProfile$Item $r6;
        java.util.List $r7;
        java.lang.String $r8;
        com.fsck.k9.mailstore.LocalMessage $r9;
        com.fsck.k9.mail.Flag $r10;
        boolean $z0;
        int $i0;
        long $l1, $l2;
        byte $b3;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: com.fsck.k9.mail.Folder;

        $r3 := @parameter2: com.fsck.k9.mailstore.LocalFolder;

        $r4 := @parameter3: com.fsck.k9.mail.Message;

        r5 = new com.fsck.k9.mail.FetchProfile;

        specialinvoke r5.<com.fsck.k9.mail.FetchProfile: void <init>()>();

        $r6 = <com.fsck.k9.mail.FetchProfile$Item: com.fsck.k9.mail.FetchProfile$Item BODY_SANE>;

        virtualinvoke r5.<com.fsck.k9.mail.FetchProfile: boolean add(java.lang.Object)>($r6);

        $r7 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r4);

        virtualinvoke $r2.<com.fsck.k9.mail.Folder: void fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)>($r7, r5, null);

        $r7 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r4);

        virtualinvoke $r3.<com.fsck.k9.mailstore.LocalFolder: java.util.Map appendMessages(java.util.List)>($r7);

        $r8 = virtualinvoke $r4.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

        $r9 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalMessage getMessage(java.lang.String)>($r8);

        $r10 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag X_DOWNLOADED_FULL>;

        $z0 = virtualinvoke $r4.<com.fsck.k9.mail.Message: boolean isSet(com.fsck.k9.mail.Flag)>($r10);

        if $z0 != 0 goto label3;

        $i0 = virtualinvoke $r1.<com.fsck.k9.Account: int getMaximumAutoDownloadMessageSize()>();

        if $i0 == 0 goto label1;

        $l1 = virtualinvoke $r4.<com.fsck.k9.mail.Message: long getSize()>();

        $i0 = virtualinvoke $r1.<com.fsck.k9.Account: int getMaximumAutoDownloadMessageSize()>();

        $l2 = (long) $i0;

        $b3 = $l1 cmp $l2;

        if $b3 >= 0 goto label2;

     label1:
        $r10 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag X_DOWNLOADED_FULL>;

        virtualinvoke $r9.<com.fsck.k9.mail.Message: void setFlag(com.fsck.k9.mail.Flag,boolean)>($r10, 1);

        return;

     label2:
        $r10 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag X_DOWNLOADED_PARTIAL>;

        virtualinvoke $r9.<com.fsck.k9.mail.Message: void setFlag(com.fsck.k9.mail.Flag,boolean)>($r10, 1);

     label3:
        return;
    }
    private void downloadSmallMessages(com.fsck.k9.Account, com.fsck.k9.mail.Folder, com.fsck.k9.mailstore.LocalFolder, java.util.List, java.util.concurrent.atomic.AtomicInteger, int, java.util.concurrent.atomic.AtomicInteger, int, com.fsck.k9.mail.FetchProfile) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mail.Folder r2;
        com.fsck.k9.mailstore.LocalFolder $r3;
        java.util.List r4;
        java.util.concurrent.atomic.AtomicInteger $r5, $r6;
        int $i0, $i1, $i2;
        com.fsck.k9.mail.FetchProfile $r7;
        java.lang.String $r8;
        java.util.Date $r9;
        java.lang.Object[] $r10;
        java.lang.Integer $r11;
        com.fsck.k9.controller.MessagingController$12 $r12;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        r2 := @parameter1: com.fsck.k9.mail.Folder;

        $r3 := @parameter2: com.fsck.k9.mailstore.LocalFolder;

        r4 := @parameter3: java.util.List;

        $r5 := @parameter4: java.util.concurrent.atomic.AtomicInteger;

        $i0 := @parameter5: int;

        $r6 := @parameter6: java.util.concurrent.atomic.AtomicInteger;

        $i1 := @parameter7: int;

        $r7 := @parameter8: com.fsck.k9.mail.FetchProfile;

        $r8 = virtualinvoke r2.<com.fsck.k9.mail.Folder: java.lang.String getName()>();

        $r9 = virtualinvoke $r1.<com.fsck.k9.Account: java.util.Date getEarliestPollDate()>();

        $r10 = newarray (java.lang.Object)[2];

        $i2 = interfaceinvoke r4.<java.util.List: int size()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r10[0] = $r11;

        $r10[1] = $r8;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("SYNC: Fetching %d small messages for folder %s", $r10);

        $r12 = new com.fsck.k9.controller.MessagingController$12;

        specialinvoke $r12.<com.fsck.k9.controller.MessagingController$12: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,java.util.Date,java.util.concurrent.atomic.AtomicInteger,com.fsck.k9.mailstore.LocalFolder,java.util.concurrent.atomic.AtomicInteger,java.lang.String,int,int)>(r0, $r1, $r9, $r5, $r3, $r6, $r8, $i1, $i0);

        virtualinvoke r2.<com.fsck.k9.mail.Folder: void fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)>(r4, $r7, $r12);

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = $r8;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("SYNC: Done fetching small messages for folder %s", $r10);

        return;
    }
    private void evaluateMessageForDownload(com.fsck.k9.mail.Message, java.lang.String, com.fsck.k9.mailstore.LocalFolder, com.fsck.k9.mail.Folder, com.fsck.k9.Account, java.util.List, java.util.List, boolean) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.mail.Message $r1;
        java.lang.String $r2, $r10;
        com.fsck.k9.mailstore.LocalFolder $r3;
        com.fsck.k9.mail.Folder $r4;
        com.fsck.k9.Account $r5;
        java.util.List r6, r7;
        boolean $z0, $z1;
        com.fsck.k9.mail.Flag $r8, $r12;
        java.lang.Object[] $r9;
        com.fsck.k9.mailstore.LocalMessage $r11;
        java.util.Set $r13;
        java.util.Iterator $r14;
        java.lang.Object $r15;
        com.fsck.k9.controller.MessagingListener r16;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.mail.Message;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.fsck.k9.mailstore.LocalFolder;

        $r4 := @parameter3: com.fsck.k9.mail.Folder;

        $r5 := @parameter4: com.fsck.k9.Account;

        r6 := @parameter5: java.util.List;

        r7 := @parameter6: java.util.List;

        $z0 := @parameter7: boolean;

        $r8 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag DELETED>;

        $z1 = virtualinvoke $r1.<com.fsck.k9.mail.Message: boolean isSet(com.fsck.k9.mail.Flag)>($r8);

        if $z1 == 0 goto label1;

        $r9 = newarray (java.lang.Object)[1];

        $r2 = virtualinvoke $r1.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

        $r9[0] = $r2;

        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("Message with uid %s is marked as deleted", $r9);

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;

     label1:
        $r10 = virtualinvoke $r1.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

        $r11 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalMessage getMessage(java.lang.String)>($r10);

        if $r11 != null goto label4;

        if $z0 != 0 goto label8;

        $r8 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag X_DOWNLOADED_FULL>;

        $z0 = virtualinvoke $r1.<com.fsck.k9.mail.Message: boolean isSet(com.fsck.k9.mail.Flag)>($r8);

        if $z0 != 0 goto label2;

        $r8 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag X_DOWNLOADED_PARTIAL>;

        $z0 = virtualinvoke $r1.<com.fsck.k9.mail.Message: boolean isSet(com.fsck.k9.mail.Flag)>($r8);

        if $z0 != 0 goto label2;

        $r9 = newarray (java.lang.Object)[1];

        $r2 = virtualinvoke $r1.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

        $r9[0] = $r2;

        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("Message with uid %s has not yet been downloaded", $r9);

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;

     label2:
        $r9 = newarray (java.lang.Object)[1];

        $r10 = virtualinvoke $r1.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

        $r9[0] = $r10;

        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("Message with uid %s is partially or fully downloaded", $r9);

        r6 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r1);

        virtualinvoke $r3.<com.fsck.k9.mailstore.LocalFolder: java.util.Map appendMessages(java.util.List)>(r6);

        $r10 = virtualinvoke $r1.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

        $r11 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalMessage getMessage(java.lang.String)>($r10);

        $r8 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag X_DOWNLOADED_FULL>;

        $r12 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag X_DOWNLOADED_FULL>;

        $z0 = virtualinvoke $r1.<com.fsck.k9.mail.Message: boolean isSet(com.fsck.k9.mail.Flag)>($r12);

        virtualinvoke $r11.<com.fsck.k9.mail.Message: void setFlag(com.fsck.k9.mail.Flag,boolean)>($r8, $z0);

        $r8 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag X_DOWNLOADED_PARTIAL>;

        $r12 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag X_DOWNLOADED_PARTIAL>;

        $z0 = virtualinvoke $r1.<com.fsck.k9.mail.Message: boolean isSet(com.fsck.k9.mail.Flag)>($r12);

        virtualinvoke $r11.<com.fsck.k9.mail.Message: void setFlag(com.fsck.k9.mail.Flag,boolean)>($r8, $z0);

        $r13 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r14 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r16 = (com.fsck.k9.controller.MessagingListener) $r15;

        $r8 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag SEEN>;

        $z0 = virtualinvoke $r11.<com.fsck.k9.mail.Message: boolean isSet(com.fsck.k9.mail.Flag)>($r8);

        if $z0 != 0 goto label3;

        interfaceinvoke r16.<com.fsck.k9.controller.MessagingListener: void synchronizeMailboxNewMessage(com.fsck.k9.Account,java.lang.String,com.fsck.k9.mail.Message)>($r5, $r2, $r11);

        goto label3;

     label4:
        $r8 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag DELETED>;

        $z0 = virtualinvoke $r11.<com.fsck.k9.mail.Message: boolean isSet(com.fsck.k9.mail.Flag)>($r8);

        if $z0 != 0 goto label7;

        $r9 = newarray (java.lang.Object)[1];

        $r2 = virtualinvoke $r1.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

        $r9[0] = $r2;

        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("Message with uid %s is present in the local store", $r9);

        $r8 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag X_DOWNLOADED_FULL>;

        $z0 = virtualinvoke $r11.<com.fsck.k9.mail.Message: boolean isSet(com.fsck.k9.mail.Flag)>($r8);

        if $z0 != 0 goto label5;

        $r8 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag X_DOWNLOADED_PARTIAL>;

        $z0 = virtualinvoke $r11.<com.fsck.k9.mail.Message: boolean isSet(com.fsck.k9.mail.Flag)>($r8);

        if $z0 != 0 goto label5;

        $r9 = newarray (java.lang.Object)[1];

        $r2 = virtualinvoke $r1.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

        $r9[0] = $r2;

        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("Message with uid %s is not downloaded, even partially; trying again", $r9);

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;

     label5:
        $r2 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalFolder: java.lang.String getPushState()>();

        $r2 = virtualinvoke $r4.<com.fsck.k9.mail.Folder: java.lang.String getNewPushState(java.lang.String,com.fsck.k9.mail.Message)>($r2, $r1);

        if $r2 == null goto label6;

        virtualinvoke $r3.<com.fsck.k9.mailstore.LocalFolder: void setPushState(java.lang.String)>($r2);

     label6:
        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;

     label7:
        $r9 = newarray (java.lang.Object)[1];

        $r2 = virtualinvoke $r1.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

        $r9[0] = $r2;

        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("Local copy of message with uid %s is marked as deleted", $r9);

     label8:
        return;
    }
    private void fetchUnsyncedMessages(com.fsck.k9.Account, com.fsck.k9.mail.Folder, java.util.List, java.util.List, java.util.List, java.util.concurrent.atomic.AtomicInteger, int, com.fsck.k9.mail.FetchProfile) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mail.Folder r2;
        java.util.List r3, r4, r5;
        java.util.concurrent.atomic.AtomicInteger $r6;
        int $i0;
        com.fsck.k9.mail.FetchProfile $r7;
        com.fsck.k9.controller.MessagingController$11 $r8;
        java.lang.String $r9;
        java.util.Date $r10;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        r2 := @parameter1: com.fsck.k9.mail.Folder;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: java.util.List;

        r5 := @parameter4: java.util.List;

        $r6 := @parameter5: java.util.concurrent.atomic.AtomicInteger;

        $i0 := @parameter6: int;

        $r7 := @parameter7: com.fsck.k9.mail.FetchProfile;

        $r9 = virtualinvoke r2.<com.fsck.k9.mail.Folder: java.lang.String getName()>();

        $r10 = virtualinvoke $r1.<com.fsck.k9.Account: java.util.Date getEarliestPollDate()>();

        $r8 = new com.fsck.k9.controller.MessagingController$11;

        specialinvoke $r8.<com.fsck.k9.controller.MessagingController$11: void <init>(com.fsck.k9.controller.MessagingController,java.util.Date,com.fsck.k9.Account,java.lang.String,java.util.concurrent.atomic.AtomicInteger,int,java.util.List,java.util.List)>(r0, $r10, $r1, $r9, $r6, $i0, r5, r4);

        virtualinvoke r2.<com.fsck.k9.mail.Folder: void fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)>(r3, $r7, $r8);

        return;
    }
    public static com.fsck.k9.controller.MessagingController getInstance(android.content.Context)
    {
        android.content.Context $r0, $r2;
        com.fsck.k9.controller.MessagingController $r1;
        com.fsck.k9.notification.NotificationController $r3;
        com.fsck.k9.helper.Contacts $r4;
        com.fsck.k9.mail.TransportProvider $r5;
        java.lang.Throwable $r6;

        $r0 := @parameter0: android.content.Context;

        entermonitor class "Lcom/fsck/k9/controller/MessagingController;";

     label1:
        $r1 = <com.fsck.k9.controller.MessagingController: com.fsck.k9.controller.MessagingController inst>;

        if $r1 != null goto label2;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r3 = staticinvoke <com.fsck.k9.notification.NotificationController: com.fsck.k9.notification.NotificationController newInstance(android.content.Context)>($r2);

        $r4 = staticinvoke <com.fsck.k9.helper.Contacts: com.fsck.k9.helper.Contacts getInstance(android.content.Context)>($r0);

        $r5 = staticinvoke <com.fsck.k9.mail.TransportProvider: com.fsck.k9.mail.TransportProvider getInstance()>();

        $r1 = new com.fsck.k9.controller.MessagingController;

        specialinvoke $r1.<com.fsck.k9.controller.MessagingController: void <init>(android.content.Context,com.fsck.k9.notification.NotificationController,com.fsck.k9.helper.Contacts,com.fsck.k9.mail.TransportProvider)>($r2, $r3, $r4, $r5);

        <com.fsck.k9.controller.MessagingController: com.fsck.k9.controller.MessagingController inst> = $r1;

     label2:
        $r1 = <com.fsck.k9.controller.MessagingController: com.fsck.k9.controller.MessagingController inst>;

     label3:
        exitmonitor class "Lcom/fsck/k9/controller/MessagingController;";

        return $r1;

     label4:
        $r6 := @caughtexception;

        exitmonitor class "Lcom/fsck/k9/controller/MessagingController;";

        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
    }
    private java.lang.String getRootCauseMessage(java.lang.Throwable)
    {
        com.fsck.k9.controller.MessagingController r0;
        java.lang.Throwable $r1, $r2;
        boolean $z0;
        java.lang.String $r3;
        java.lang.StringBuilder $r4;
        java.lang.Class $r5;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: java.lang.Throwable;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r2 == null goto label2;

        $r1 = $r2;

     label2:
        if $r2 != null goto label1;

        $z0 = $r1 instanceof com.fsck.k9.mail.MessagingException;

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke $r1.<java.lang.Throwable: java.lang.String getMessage()>();

        return $r3;

     label3:
        $r3 = virtualinvoke $r1.<java.lang.Throwable: java.lang.String getLocalizedMessage()>();

        if $r3 == null goto label4;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r5.<java.lang.Class: java.lang.String getSimpleName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r3 = virtualinvoke $r1.<java.lang.Throwable: java.lang.String getLocalizedMessage()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label4:
        $r5 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r5.<java.lang.Class: java.lang.String getSimpleName()>();

        return $r3;
    }
    private static java.util.List getUidsFromMessages(java.util.List)
    {
        java.util.List r0;
        java.util.ArrayList r1;
        int $i0, $i1;
        java.lang.Object $r2;
        com.fsck.k9.mail.Message $r3;
        java.lang.String $r4;

        r0 := @parameter0: java.util.List;

        r1 = new java.util.ArrayList;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        specialinvoke r1.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 >= $i1 goto label2;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (com.fsck.k9.mail.Message) $r2;

        $r4 = virtualinvoke $r3.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r1;
    }
    private java.util.Map groupMessagesByAccountAndFolder(java.util.List)
    {
        com.fsck.k9.controller.MessagingController r0;
        java.util.List r1;
        java.util.HashMap r2, $r9;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.fsck.k9.activity.MessageReference r5;
        java.lang.String $r6, $r7;
        java.util.Map r8;
        java.util.LinkedList $r10;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        r1 := @parameter0: java.util.List;

        $r9 = new java.util.HashMap;

        r2 = $r9;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        $r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.fsck.k9.activity.MessageReference) $r4;

        if r5 == null goto label1;

        $r6 = virtualinvoke r5.<com.fsck.k9.activity.MessageReference: java.lang.String getAccountUuid()>();

        $r7 = virtualinvoke r5.<com.fsck.k9.activity.MessageReference: java.lang.String getFolderName()>();

        $r4 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        r8 = (java.util.Map) $r4;

        if r8 != null goto label2;

        $r9 = new java.util.HashMap;

        r8 = $r9;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r9);

     label2:
        $r4 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        r1 = (java.util.List) $r4;

        if r1 != null goto label3;

        $r10 = new java.util.LinkedList;

        r1 = $r10;

        specialinvoke $r10.<java.util.LinkedList: void <init>()>();

        interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r10);

     label3:
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r5);

        goto label1;

     label4:
        return r2;
    }
    private void handleSendFailure(com.fsck.k9.Account, com.fsck.k9.mail.Store, com.fsck.k9.mail.Folder, com.fsck.k9.mail.Message, java.lang.Exception, boolean) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mail.Store $r2;
        com.fsck.k9.mail.Folder $r3;
        com.fsck.k9.mail.Message $r4;
        java.lang.Exception $r5;
        boolean $z0;
        java.lang.Object[] $r6;
        com.fsck.k9.mail.Flag $r7;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: com.fsck.k9.mail.Store;

        $r3 := @parameter2: com.fsck.k9.mail.Folder;

        $r4 := @parameter3: com.fsck.k9.mail.Message;

        $r5 := @parameter4: java.lang.Exception;

        $z0 := @parameter5: boolean;

        $r6 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>($r5, "Failed to send message", $r6);

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void moveMessageToDraftsFolder(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mail.Store,com.fsck.k9.mail.Message)>($r1, $r3, $r2, $r4);

     label1:
        $r7 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag X_SEND_FAILED>;

        virtualinvoke $r4.<com.fsck.k9.mail.Message: void setFlag(com.fsck.k9.mail.Flag,boolean)>($r7, 1);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void notifySynchronizeMailboxFailed(com.fsck.k9.Account,com.fsck.k9.mail.Folder,java.lang.Exception)>($r1, $r3, $r5);

        return;
    }
    private boolean isMessageSuppressed(com.fsck.k9.mailstore.LocalMessage)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.mailstore.LocalMessage $r1;
        android.content.Context $r2;
        long $l0, $l1;
        com.fsck.k9.mailstore.LocalFolder $r3;
        java.lang.String $r4;
        com.fsck.k9.cache.EmailProviderCache $r5;
        java.lang.Long $r6;
        boolean $z0;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.mailstore.LocalMessage;

        $l0 = virtualinvoke $r1.<com.fsck.k9.mailstore.LocalMessage: long getDatabaseId()>();

        $r3 = virtualinvoke $r1.<com.fsck.k9.mailstore.LocalMessage: com.fsck.k9.mailstore.LocalFolder getFolder()>();

        $l1 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalFolder: long getDatabaseId()>();

        $r3 = virtualinvoke $r1.<com.fsck.k9.mailstore.LocalMessage: com.fsck.k9.mailstore.LocalFolder getFolder()>();

        $r4 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalFolder: java.lang.String getAccountUuid()>();

        $r2 = r0.<com.fsck.k9.controller.MessagingController: android.content.Context context>;

        $r5 = staticinvoke <com.fsck.k9.cache.EmailProviderCache: com.fsck.k9.cache.EmailProviderCache getCache(java.lang.String,android.content.Context)>($r4, $r2);

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $z0 = virtualinvoke $r5.<com.fsck.k9.cache.EmailProviderCache: boolean isMessageHidden(java.lang.Long,long)>($r6, $l1);

        return $z0;
    }
    private boolean isTrashLocalOnly(com.fsck.k9.Account) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mail.Store $r2;
        boolean $z0;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mail.Store getRemoteStore()>();

        $z0 = $r2 instanceof com.fsck.k9.mail.store.pop3.Pop3Store;

        return $z0;
    }
    private boolean loadMessageRemoteSynchronous(com.fsck.k9.Account, java.lang.String, java.lang.String, com.fsck.k9.controller.MessagingListener, boolean)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2, $r3;
        com.fsck.k9.controller.MessagingListener $r4, r19;
        boolean $z0, $z1;
        java.lang.Exception r5;
        com.fsck.k9.mail.FetchProfile r6;
        com.fsck.k9.mail.Folder r7, $r22;
        com.fsck.k9.mailstore.LocalFolder r8, $r10;
        com.fsck.k9.mailstore.LocalStore $r9;
        com.fsck.k9.mailstore.LocalMessage $r11;
        java.lang.Object[] $r12;
        android.content.Context $r13;
        android.widget.Toast $r14;
        com.fsck.k9.mail.Flag $r15;
        java.util.Set $r16;
        java.util.Iterator $r17;
        java.lang.Object $r18;
        java.lang.Throwable $r20;
        com.fsck.k9.mail.Store $r21;
        com.fsck.k9.mail.Message $r23;
        java.util.List $r24;
        com.fsck.k9.mail.FetchProfile$Item $r25;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: com.fsck.k9.controller.MessagingListener;

        $z0 := @parameter4: boolean;

        r7 = null;

        r8 = null;

     label01:
        $r9 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

        $r10 = virtualinvoke $r9.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LocalFolder getFolder(java.lang.String)>($r2);

     label02:
        r8 = $r10;

     label03:
        virtualinvoke $r10.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(0);

        $r11 = virtualinvoke $r10.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalMessage getMessage(java.lang.String)>($r3);

        $z1 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("K9LOCAL:");

     label04:
        if $z1 == 0 goto label22;

     label05:
        $r12 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Message has local UID so cannot download fully.", $r12);

        $r13 = r0.<com.fsck.k9.controller.MessagingController: android.content.Context context>;

        $r14 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r13, "Message has local UID so cannot download fully", 1);

        virtualinvoke $r14.<android.widget.Toast: void show()>();

     label06:
        $r15 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag X_DOWNLOADED_FULL>;

     label07:
        virtualinvoke $r11.<com.fsck.k9.mailstore.LocalMessage: void setFlag(com.fsck.k9.mail.Flag,boolean)>($r15, 1);

     label08:
        $r15 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag X_DOWNLOADED_PARTIAL>;

     label09:
        virtualinvoke $r11.<com.fsck.k9.mailstore.LocalMessage: void setFlag(com.fsck.k9.mail.Flag,boolean)>($r15, 0);

     label10:
        $r16 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners(com.fsck.k9.controller.MessagingListener)>($r4);

        $r17 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();

     label11:
        $z0 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

     label12:
        if $z0 == 0 goto label39;

     label13:
        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r19 = (com.fsck.k9.controller.MessagingListener) $r18;

        interfaceinvoke r19.<com.fsck.k9.controller.MessagingListener: void loadMessageRemoteFinished(com.fsck.k9.Account,java.lang.String,java.lang.String)>($r1, $r2, $r3);

     label14:
        goto label11;

     label15:
        r5 := @caughtexception;

     label16:
        $r16 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners(com.fsck.k9.controller.MessagingListener)>($r4);

        $r17 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();

     label17:
        $z0 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

     label18:
        if $z0 == 0 goto label40;

     label19:
        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.fsck.k9.controller.MessagingListener) $r18;

        interfaceinvoke $r4.<com.fsck.k9.controller.MessagingListener: void loadMessageRemoteFailed(com.fsck.k9.Account,java.lang.String,java.lang.String,java.lang.Throwable)>($r1, $r2, $r3, r5);

     label20:
        goto label17;

     label21:
        $r20 := @caughtexception;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r7);

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r8);

        throw $r20;

     label22:
        $r21 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mail.Store getRemoteStore()>();

        $r22 = virtualinvoke $r21.<com.fsck.k9.mail.Store: com.fsck.k9.mail.Folder getFolder(java.lang.String)>($r2);

     label23:
        r7 = $r22;

     label24:
        virtualinvoke $r22.<com.fsck.k9.mail.Folder: void open(int)>(0);

        $r23 = virtualinvoke $r22.<com.fsck.k9.mail.Folder: com.fsck.k9.mail.Message getMessage(java.lang.String)>($r3);

     label25:
        if $z0 == 0 goto label32;

     label26:
        $r24 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r23);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: int downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)>($r1, $r22, $r10, $r24, 0, 0);

     label27:
        $r11 = virtualinvoke $r10.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalMessage getMessage(java.lang.String)>($r3);

     label28:
        if $z0 != 0 goto label10;

     label29:
        $r15 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag X_DOWNLOADED_FULL>;

     label30:
        virtualinvoke $r11.<com.fsck.k9.mailstore.LocalMessage: void setFlag(com.fsck.k9.mail.Flag,boolean)>($r15, 1);

     label31:
        goto label10;

     label32:
        r6 = new com.fsck.k9.mail.FetchProfile;

     label33:
        specialinvoke r6.<com.fsck.k9.mail.FetchProfile: void <init>()>();

     label34:
        $r25 = <com.fsck.k9.mail.FetchProfile$Item: com.fsck.k9.mail.FetchProfile$Item BODY>;

     label35:
        virtualinvoke r6.<com.fsck.k9.mail.FetchProfile: boolean add(java.lang.Object)>($r25);

     label36:
        $r25 = <com.fsck.k9.mail.FetchProfile$Item: com.fsck.k9.mail.FetchProfile$Item FLAGS>;

     label37:
        virtualinvoke r6.<com.fsck.k9.mail.FetchProfile: boolean add(java.lang.Object)>($r25);

        $r24 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r23);

        virtualinvoke $r22.<com.fsck.k9.mail.Folder: void fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)>($r24, r6, null);

        $r24 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r23);

        virtualinvoke $r10.<com.fsck.k9.mailstore.LocalFolder: java.util.Map appendMessages(java.util.List)>($r24);

     label38:
        goto label27;

     label39:
        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r7);

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r10);

        return 1;

     label40:
        virtualinvoke r0.<com.fsck.k9.controller.MessagingController: void notifyUserIfCertificateProblem(com.fsck.k9.Account,java.lang.Exception,boolean)>($r1, r5, 1);

        $r12 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r5, "Error while loading remote message", $r12);

     label41:
        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r7);

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r8);

        return 0;

        catch java.lang.Exception from label01 to label02 with label15;
        catch java.lang.Exception from label03 to label04 with label15;
        catch java.lang.Exception from label05 to label06 with label15;
        catch java.lang.Exception from label07 to label08 with label15;
        catch java.lang.Exception from label09 to label12 with label15;
        catch java.lang.Exception from label13 to label14 with label15;
        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Throwable from label03 to label04 with label21;
        catch java.lang.Throwable from label05 to label12 with label21;
        catch java.lang.Throwable from label13 to label14 with label21;
        catch java.lang.Throwable from label16 to label18 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Exception from label22 to label23 with label15;
        catch java.lang.Exception from label24 to label25 with label15;
        catch java.lang.Exception from label26 to label28 with label15;
        catch java.lang.Exception from label30 to label31 with label15;
        catch java.lang.Exception from label33 to label34 with label15;
        catch java.lang.Exception from label35 to label36 with label15;
        catch java.lang.Exception from label37 to label38 with label15;
        catch java.lang.Throwable from label22 to label23 with label21;
        catch java.lang.Throwable from label24 to label25 with label21;
        catch java.lang.Throwable from label26 to label28 with label21;
        catch java.lang.Throwable from label29 to label31 with label21;
        catch java.lang.Throwable from label32 to label38 with label21;
        catch java.lang.Throwable from label40 to label41 with label21;
    }
    private void loadSearchResultsSynchronous(java.util.List, com.fsck.k9.mailstore.LocalFolder, com.fsck.k9.mail.Folder, com.fsck.k9.controller.MessagingListener) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.controller.MessagingController r0;
        java.util.List r1;
        com.fsck.k9.mailstore.LocalFolder $r2;
        com.fsck.k9.mail.Folder $r3;
        com.fsck.k9.controller.MessagingListener $r4;
        com.fsck.k9.mail.FetchProfile r5, r6;
        com.fsck.k9.mail.FetchProfile$Item $r7;
        java.util.Iterator $r8;
        boolean $z0;
        java.lang.Object $r9;
        com.fsck.k9.mail.Message r10;
        java.lang.String $r11;
        com.fsck.k9.mailstore.LocalMessage $r12;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        r1 := @parameter0: java.util.List;

        $r2 := @parameter1: com.fsck.k9.mailstore.LocalFolder;

        $r3 := @parameter2: com.fsck.k9.mail.Folder;

        $r4 := @parameter3: com.fsck.k9.controller.MessagingListener;

        r5 = new com.fsck.k9.mail.FetchProfile;

        specialinvoke r5.<com.fsck.k9.mail.FetchProfile: void <init>()>();

        $r7 = <com.fsck.k9.mail.FetchProfile$Item: com.fsck.k9.mail.FetchProfile$Item FLAGS>;

        virtualinvoke r5.<com.fsck.k9.mail.FetchProfile: boolean add(java.lang.Object)>($r7);

        $r7 = <com.fsck.k9.mail.FetchProfile$Item: com.fsck.k9.mail.FetchProfile$Item ENVELOPE>;

        virtualinvoke r5.<com.fsck.k9.mail.FetchProfile: boolean add(java.lang.Object)>($r7);

        r6 = new com.fsck.k9.mail.FetchProfile;

        specialinvoke r6.<com.fsck.k9.mail.FetchProfile: void <init>()>();

        $r7 = <com.fsck.k9.mail.FetchProfile$Item: com.fsck.k9.mail.FetchProfile$Item STRUCTURE>;

        virtualinvoke r6.<com.fsck.k9.mail.FetchProfile: boolean add(java.lang.Object)>($r7);

        $r8 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.fsck.k9.mail.Message) $r9;

        $r11 = virtualinvoke r10.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

        $r12 = virtualinvoke $r2.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalMessage getMessage(java.lang.String)>($r11);

        if $r12 != null goto label1;

        r1 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r10);

        virtualinvoke $r3.<com.fsck.k9.mail.Folder: void fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)>(r1, r5, null);

        r1 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r10);

        virtualinvoke $r3.<com.fsck.k9.mail.Folder: void fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)>(r1, r6, null);

        r1 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r10);

        virtualinvoke $r2.<com.fsck.k9.mailstore.LocalFolder: java.util.Map appendMessages(java.util.List)>(r1);

        $r11 = virtualinvoke r10.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

        virtualinvoke $r2.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalMessage getMessage(java.lang.String)>($r11);

        goto label1;

     label2:
        return;
    }
    private void markMessageAsReadOnView(com.fsck.k9.Account, com.fsck.k9.mailstore.LocalMessage) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mailstore.LocalMessage $r2;
        boolean $z0;
        com.fsck.k9.mail.Flag $r3;
        long $l0;
        java.lang.Long $r4;
        java.util.List $r5;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: com.fsck.k9.mailstore.LocalMessage;

        $z0 = virtualinvoke $r1.<com.fsck.k9.Account: boolean isMarkMessageAsReadOnView()>();

        if $z0 == 0 goto label1;

        $r3 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag SEEN>;

        $z0 = virtualinvoke $r2.<com.fsck.k9.mailstore.LocalMessage: boolean isSet(com.fsck.k9.mail.Flag)>($r3);

        if $z0 != 0 goto label1;

        $l0 = virtualinvoke $r2.<com.fsck.k9.mailstore.LocalMessage: long getDatabaseId()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r5 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r4);

        $r3 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag SEEN>;

        virtualinvoke r0.<com.fsck.k9.controller.MessagingController: void setFlag(com.fsck.k9.Account,java.util.List,com.fsck.k9.mail.Flag,boolean)>($r1, $r5, $r3, 1);

        $r3 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag SEEN>;

        virtualinvoke $r2.<com.fsck.k9.mailstore.LocalMessage: void setFlagInternal(com.fsck.k9.mail.Flag,boolean)>($r3, 1);

     label1:
        return;
    }
    private boolean messagesPendingSend(com.fsck.k9.Account)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.Exception r2;
        com.fsck.k9.mailstore.LocalFolder r3, $r6;
        com.fsck.k9.mailstore.LocalStore $r4;
        java.lang.String $r5;
        boolean $z0;
        int $i0;
        java.lang.Object[] $r7;
        java.lang.Throwable $r8;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        r3 = null;

     label01:
        $r4 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

        $r5 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getOutboxFolderName()>();

        $r6 = virtualinvoke $r4.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LocalFolder getFolder(java.lang.String)>($r5);

     label02:
        r3 = $r6;

     label03:
        $z0 = virtualinvoke $r6.<com.fsck.k9.mail.Folder: boolean exists()>();

     label04:
        if $z0 != 0 goto label05;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r6);

        return 0;

     label05:
        virtualinvoke $r6.<com.fsck.k9.mail.Folder: void open(int)>(0);

        $i0 = virtualinvoke $r6.<com.fsck.k9.mail.Folder: int getMessageCount()>();

     label06:
        if $i0 <= 0 goto label07;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r6);

        return 1;

     label07:
        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r6);

        return 0;

     label08:
        r2 := @caughtexception;

     label09:
        $r7 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r2, "Exception while checking for unsent messages", $r7);

     label10:
        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r3);

        return 0;

     label11:
        $r8 := @caughtexception;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r3);

        throw $r8;

        catch java.lang.Exception from label01 to label02 with label08;
        catch java.lang.Exception from label03 to label04 with label08;
        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label08;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }
    private boolean modeMismatch(com.fsck.k9.Account$FolderMode, com.fsck.k9.mail.Folder$FolderClass)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account$FolderMode $r1, $r3;
        com.fsck.k9.mail.Folder$FolderClass $r2, $r4;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account$FolderMode;

        $r2 := @parameter1: com.fsck.k9.mail.Folder$FolderClass;

        $r3 = <com.fsck.k9.Account$FolderMode: com.fsck.k9.Account$FolderMode NONE>;

        if $r1 == $r3 goto label3;

        $r3 = <com.fsck.k9.Account$FolderMode: com.fsck.k9.Account$FolderMode FIRST_CLASS>;

        if $r1 != $r3 goto label1;

        $r4 = <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass FIRST_CLASS>;

        if $r2 != $r4 goto label3;

     label1:
        $r3 = <com.fsck.k9.Account$FolderMode: com.fsck.k9.Account$FolderMode FIRST_AND_SECOND_CLASS>;

        if $r1 != $r3 goto label2;

        $r4 = <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass FIRST_CLASS>;

        if $r2 == $r4 goto label2;

        $r4 = <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass SECOND_CLASS>;

        if $r2 != $r4 goto label3;

     label2:
        $r3 = <com.fsck.k9.Account$FolderMode: com.fsck.k9.Account$FolderMode NOT_SECOND_CLASS>;

        if $r1 != $r3 goto label4;

        $r4 = <com.fsck.k9.mail.Folder$FolderClass: com.fsck.k9.mail.Folder$FolderClass SECOND_CLASS>;

        if $r2 != $r4 goto label4;

     label3:
        return 1;

     label4:
        return 0;
    }
    private void moveMessageToDraftsFolder(com.fsck.k9.Account, com.fsck.k9.mail.Folder, com.fsck.k9.mail.Store, com.fsck.k9.mail.Message) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mail.Folder $r2, $r6;
        com.fsck.k9.mail.Store $r3;
        com.fsck.k9.mail.Message $r4;
        java.lang.String $r5;
        com.fsck.k9.mailstore.LocalFolder r7;
        java.util.List $r8;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: com.fsck.k9.mail.Folder;

        $r3 := @parameter2: com.fsck.k9.mail.Store;

        $r4 := @parameter3: com.fsck.k9.mail.Message;

        $r5 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getDraftsFolderName()>();

        $r6 = virtualinvoke $r3.<com.fsck.k9.mail.Store: com.fsck.k9.mail.Folder getFolder(java.lang.String)>($r5);

        r7 = (com.fsck.k9.mailstore.LocalFolder) $r6;

        $r8 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r4);

        virtualinvoke $r2.<com.fsck.k9.mail.Folder: java.util.Map moveMessages(java.util.List,com.fsck.k9.mail.Folder)>($r8, r7);

        return;
    }
    private void moveOrCopyMessageSynchronous(com.fsck.k9.Account, java.lang.String, java.util.List, java.lang.String, boolean)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2, $r4, $r18, $r31;
        java.util.List r3;
        boolean $z0, $z1, $z2;
        java.util.ArrayList r5;
        com.fsck.k9.mailstore.UnavailableStorageException r6;
        com.fsck.k9.mail.FetchProfile r7;
        com.fsck.k9.mail.MessagingException r8;
        java.util.HashMap r9;
        java.util.LinkedList r10;
        com.fsck.k9.mailstore.LocalStore $r11;
        com.fsck.k9.mail.Store $r12;
        com.fsck.k9.mailstore.LocalFolder $r13, $r14;
        java.util.Iterator $r15, $r30;
        java.lang.Object $r16;
        com.fsck.k9.mail.Message r17;
        com.fsck.k9.mail.Flag $r19;
        int $i0, $i1;
        java.lang.Object[] $r20;
        com.fsck.k9.controller.UnavailableAccountException $r21;
        java.lang.Integer $r22;
        java.lang.Boolean $r23;
        com.fsck.k9.mail.FetchProfile$Item $r24;
        java.util.Map $r25;
        java.util.Set $r26;
        com.fsck.k9.controller.MessagingListener r27;
        java.lang.RuntimeException $r28;
        java.util.Map$Entry r29;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.List;

        $r4 := @parameter3: java.lang.String;

        $z0 := @parameter4: boolean;

     label01:
        $r11 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

        $r12 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mail.Store getRemoteStore()>();

     label02:
        if $z0 != 0 goto label07;

     label03:
        $z1 = virtualinvoke $r12.<com.fsck.k9.mail.Store: boolean isMoveCapable()>();

     label04:
        if $z1 == 0 goto label85;

     label05:
        $z1 = virtualinvoke $r11.<com.fsck.k9.mailstore.LocalStore: boolean isMoveCapable()>();

     label06:
        if $z1 != 0 goto label07;

        return;

     label07:
        if $z0 == 0 goto label12;

     label08:
        $z1 = virtualinvoke $r12.<com.fsck.k9.mail.Store: boolean isCopyCapable()>();

     label09:
        if $z1 == 0 goto label85;

     label10:
        $z1 = virtualinvoke $r11.<com.fsck.k9.mailstore.LocalStore: boolean isCopyCapable()>();

     label11:
        if $z1 == 0 goto label85;

     label12:
        $r13 = virtualinvoke $r11.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LocalFolder getFolder(java.lang.String)>($r2);

        $r14 = virtualinvoke $r11.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LocalFolder getFolder(java.lang.String)>($r4);

     label13:
        $z1 = 0;

        r10 = new java.util.LinkedList;

     label14:
        specialinvoke r10.<java.util.LinkedList: void <init>()>();

        $r15 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $z2 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

     label16:
        if $z2 == 0 goto label25;

     label17:
        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

     label18:
        r17 = (com.fsck.k9.mail.Message) $r16;

     label19:
        $r18 = virtualinvoke r17.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

        $z2 = virtualinvoke $r18.<java.lang.String: boolean startsWith(java.lang.String)>("K9LOCAL:");

     label20:
        if $z2 != 0 goto label22;

     label21:
        interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>($r18);

     label22:
        if $z1 != 0 goto label15;

        $r19 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag SEEN>;

     label23:
        $z2 = virtualinvoke r17.<com.fsck.k9.mail.Message: boolean isSet(com.fsck.k9.mail.Flag)>($r19);

     label24:
        if $z2 != 0 goto label15;

        $z1 = 1;

        goto label15;

     label25:
        r3 = virtualinvoke $r13.<com.fsck.k9.mailstore.LocalFolder: java.util.List getMessagesByUids(java.util.List)>(r10);

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

     label26:
        if $i0 <= 0 goto label84;

        r9 = new java.util.HashMap;

     label27:
        specialinvoke r9.<java.util.HashMap: void <init>()>();

        $r15 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label28:
        $z2 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

     label29:
        if $z2 == 0 goto label35;

     label30:
        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

     label31:
        r17 = (com.fsck.k9.mail.Message) $r16;

     label32:
        $r18 = virtualinvoke r17.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

        interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, r17);

     label33:
        goto label28;

     label34:
        r6 := @caughtexception;

        $r20 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Failed to move/copy message because storage is not available - trying again later.", $r20);

        $r21 = new com.fsck.k9.controller.UnavailableAccountException;

        specialinvoke $r21.<com.fsck.k9.controller.UnavailableAccountException: void <init>(java.lang.Throwable)>(r6);

        throw $r21;

     label35:
        $r20 = newarray (java.lang.Object)[4];

        $r20[0] = $r2;

     label36:
        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label37:
        $r20[1] = $r22;

        $r20[2] = $r4;

     label38:
        $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

     label39:
        $r20[3] = $r23;

     label40:
        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("moveOrCopyMessageSynchronous: source folder = %s, %d messages, destination folder = %s, isCopy = %s", $r20);

     label41:
        if $z0 == 0 goto label56;

        r7 = new com.fsck.k9.mail.FetchProfile;

     label42:
        specialinvoke r7.<com.fsck.k9.mail.FetchProfile: void <init>()>();

     label43:
        $r24 = <com.fsck.k9.mail.FetchProfile$Item: com.fsck.k9.mail.FetchProfile$Item ENVELOPE>;

     label44:
        virtualinvoke r7.<com.fsck.k9.mail.FetchProfile: boolean add(java.lang.Object)>($r24);

     label45:
        $r24 = <com.fsck.k9.mail.FetchProfile$Item: com.fsck.k9.mail.FetchProfile$Item BODY>;

     label46:
        virtualinvoke r7.<com.fsck.k9.mail.FetchProfile: boolean add(java.lang.Object)>($r24);

        virtualinvoke $r13.<com.fsck.k9.mailstore.LocalFolder: void fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)>(r3, r7, null);

        $r25 = virtualinvoke $r13.<com.fsck.k9.mailstore.LocalFolder: java.util.Map copyMessages(java.util.List,com.fsck.k9.mail.Folder)>(r3, $r14);

     label47:
        if $z1 == 0 goto label82;

     label48:
        $i0 = virtualinvoke $r14.<com.fsck.k9.mail.Folder: int getUnreadMessageCount()>();

        $r26 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r15 = interfaceinvoke $r26.<java.util.Set: java.util.Iterator iterator()>();

     label49:
        $z1 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

     label50:
        if $z1 == 0 goto label82;

     label51:
        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

     label52:
        r27 = (com.fsck.k9.controller.MessagingListener) $r16;

     label53:
        interfaceinvoke r27.<com.fsck.k9.controller.MessagingListener: void folderStatusChanged(com.fsck.k9.Account,java.lang.String,int)>($r1, $r4, $i0);

     label54:
        goto label49;

     label55:
        r8 := @caughtexception;

        $r28 = new java.lang.RuntimeException;

        specialinvoke $r28.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error moving message", r8);

        throw $r28;

     label56:
        $r25 = virtualinvoke $r13.<com.fsck.k9.mailstore.LocalFolder: java.util.Map moveMessages(java.util.List,com.fsck.k9.mail.Folder)>(r3, $r14);

     label57:
        $r26 = interfaceinvoke r9.<java.util.Map: java.util.Set entrySet()>();

        $r15 = interfaceinvoke $r26.<java.util.Set: java.util.Iterator iterator()>();

     label58:
        $z2 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

     label59:
        if $z2 == 0 goto label73;

     label60:
        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

     label61:
        r29 = (java.util.Map$Entry) $r16;

     label62:
        $r16 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getKey()>();

     label63:
        $r18 = (java.lang.String) $r16;

     label64:
        $r16 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getValue()>();

     label65:
        r17 = (com.fsck.k9.mail.Message) $r16;

     label66:
        $r26 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r30 = interfaceinvoke $r26.<java.util.Set: java.util.Iterator iterator()>();

     label67:
        $z2 = interfaceinvoke $r30.<java.util.Iterator: boolean hasNext()>();

     label68:
        if $z2 == 0 goto label58;

     label69:
        $r16 = interfaceinvoke $r30.<java.util.Iterator: java.lang.Object next()>();

     label70:
        r27 = (com.fsck.k9.controller.MessagingListener) $r16;

     label71:
        $r31 = virtualinvoke r17.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

        interfaceinvoke r27.<com.fsck.k9.controller.MessagingListener: void messageUidChanged(com.fsck.k9.Account,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r18, $r31);

     label72:
        goto label67;

     label73:
        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void unsuppressMessages(com.fsck.k9.Account,java.util.List)>($r1, r3);

     label74:
        if $z1 == 0 goto label82;

     label75:
        $i0 = virtualinvoke $r13.<com.fsck.k9.mailstore.LocalFolder: int getUnreadMessageCount()>();

        $i1 = virtualinvoke $r14.<com.fsck.k9.mail.Folder: int getUnreadMessageCount()>();

        $r26 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r15 = interfaceinvoke $r26.<java.util.Set: java.util.Iterator iterator()>();

     label76:
        $z1 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

     label77:
        if $z1 == 0 goto label82;

     label78:
        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

     label79:
        r27 = (com.fsck.k9.controller.MessagingListener) $r16;

     label80:
        interfaceinvoke r27.<com.fsck.k9.controller.MessagingListener: void folderStatusChanged(com.fsck.k9.Account,java.lang.String,int)>($r1, $r2, $i0);

        interfaceinvoke r27.<com.fsck.k9.controller.MessagingListener: void folderStatusChanged(com.fsck.k9.Account,java.lang.String,int)>($r1, $r4, $i1);

     label81:
        goto label76;

     label82:
        r5 = new java.util.ArrayList;

     label83:
        $r26 = interfaceinvoke r9.<java.util.Map: java.util.Set keySet()>();

        specialinvoke r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r26);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void queueMoveOrCopy(com.fsck.k9.Account,java.lang.String,java.lang.String,boolean,java.util.List,java.util.Map)>($r1, $r2, $r4, $z0, r5, $r25);

     label84:
        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void processPendingCommands(com.fsck.k9.Account)>($r1);

     label85:
        return;

        catch com.fsck.k9.mailstore.UnavailableStorageException from label01 to label02 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label03 to label04 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label05 to label06 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label08 to label09 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label10 to label11 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label12 to label13 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label14 to label16 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label17 to label18 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label19 to label20 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label21 to label22 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label23 to label24 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label25 to label26 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label27 to label29 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label30 to label31 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label32 to label33 with label34;
        catch com.fsck.k9.mail.MessagingException from label01 to label02 with label55;
        catch com.fsck.k9.mail.MessagingException from label03 to label04 with label55;
        catch com.fsck.k9.mail.MessagingException from label05 to label06 with label55;
        catch com.fsck.k9.mail.MessagingException from label08 to label09 with label55;
        catch com.fsck.k9.mail.MessagingException from label10 to label11 with label55;
        catch com.fsck.k9.mail.MessagingException from label12 to label13 with label55;
        catch com.fsck.k9.mail.MessagingException from label14 to label16 with label55;
        catch com.fsck.k9.mail.MessagingException from label17 to label18 with label55;
        catch com.fsck.k9.mail.MessagingException from label19 to label20 with label55;
        catch com.fsck.k9.mail.MessagingException from label21 to label22 with label55;
        catch com.fsck.k9.mail.MessagingException from label23 to label24 with label55;
        catch com.fsck.k9.mail.MessagingException from label25 to label26 with label55;
        catch com.fsck.k9.mail.MessagingException from label27 to label29 with label55;
        catch com.fsck.k9.mail.MessagingException from label30 to label31 with label55;
        catch com.fsck.k9.mail.MessagingException from label32 to label33 with label55;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label36 to label37 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label38 to label39 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label40 to label41 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label42 to label43 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label44 to label45 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label46 to label47 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label48 to label50 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label51 to label52 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label53 to label54 with label34;
        catch com.fsck.k9.mail.MessagingException from label36 to label37 with label55;
        catch com.fsck.k9.mail.MessagingException from label38 to label39 with label55;
        catch com.fsck.k9.mail.MessagingException from label40 to label41 with label55;
        catch com.fsck.k9.mail.MessagingException from label42 to label43 with label55;
        catch com.fsck.k9.mail.MessagingException from label44 to label45 with label55;
        catch com.fsck.k9.mail.MessagingException from label46 to label47 with label55;
        catch com.fsck.k9.mail.MessagingException from label48 to label50 with label55;
        catch com.fsck.k9.mail.MessagingException from label51 to label52 with label55;
        catch com.fsck.k9.mail.MessagingException from label53 to label54 with label55;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label56 to label57 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label57 to label59 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label60 to label61 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label62 to label63 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label64 to label65 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label66 to label68 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label69 to label70 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label71 to label72 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label73 to label74 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label75 to label77 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label78 to label79 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label80 to label81 with label34;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label83 to label85 with label34;
        catch com.fsck.k9.mail.MessagingException from label56 to label57 with label55;
        catch com.fsck.k9.mail.MessagingException from label57 to label59 with label55;
        catch com.fsck.k9.mail.MessagingException from label60 to label61 with label55;
        catch com.fsck.k9.mail.MessagingException from label62 to label63 with label55;
        catch com.fsck.k9.mail.MessagingException from label64 to label65 with label55;
        catch com.fsck.k9.mail.MessagingException from label66 to label68 with label55;
        catch com.fsck.k9.mail.MessagingException from label69 to label70 with label55;
        catch com.fsck.k9.mail.MessagingException from label71 to label72 with label55;
        catch com.fsck.k9.mail.MessagingException from label73 to label74 with label55;
        catch com.fsck.k9.mail.MessagingException from label75 to label77 with label55;
        catch com.fsck.k9.mail.MessagingException from label78 to label79 with label55;
        catch com.fsck.k9.mail.MessagingException from label80 to label81 with label55;
        catch com.fsck.k9.mail.MessagingException from label83 to label85 with label55;
    }
    private void moveOrDeleteSentMessage(com.fsck.k9.Account, com.fsck.k9.mailstore.LocalStore, com.fsck.k9.mailstore.LocalFolder, com.fsck.k9.mailstore.LocalMessage) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mailstore.LocalStore $r2;
        com.fsck.k9.mailstore.LocalFolder $r3, $r8;
        com.fsck.k9.mailstore.LocalMessage $r4;
        boolean $z0;
        java.lang.Object[] $r5;
        com.fsck.k9.mail.Flag $r6;
        java.lang.String $r7, $r11;
        long $l0;
        java.lang.Long $r9;
        java.util.List $r10;
        com.fsck.k9.controller.MessagingControllerCommands$PendingAppend $r12;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: com.fsck.k9.mailstore.LocalStore;

        $r3 := @parameter2: com.fsck.k9.mailstore.LocalFolder;

        $r4 := @parameter3: com.fsck.k9.mailstore.LocalMessage;

        $z0 = virtualinvoke $r1.<com.fsck.k9.Account: boolean hasSentFolder()>();

        if $z0 != 0 goto label1;

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Account does not have a sent mail folder; deleting sent message", $r5);

        $r6 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag DELETED>;

        virtualinvoke $r4.<com.fsck.k9.mailstore.LocalMessage: void setFlag(com.fsck.k9.mail.Flag,boolean)>($r6, 1);

        return;

     label1:
        $r7 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getSentFolderName()>();

        $r8 = virtualinvoke $r2.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LocalFolder getFolder(java.lang.String)>($r7);

        $r5 = newarray (java.lang.Object)[2];

        $r7 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getSentFolderName()>();

        $r5[0] = $r7;

        $l0 = virtualinvoke $r8.<com.fsck.k9.mailstore.LocalFolder: long getDatabaseId()>();

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r5[1] = $r9;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Moving sent message to folder \'%s\' (%d)", $r5);

        $r10 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r4);

        virtualinvoke $r3.<com.fsck.k9.mailstore.LocalFolder: java.util.Map moveMessages(java.util.List,com.fsck.k9.mail.Folder)>($r10, $r8);

        $r5 = newarray (java.lang.Object)[2];

        $r7 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getSentFolderName()>();

        $r5[0] = $r7;

        $l0 = virtualinvoke $r8.<com.fsck.k9.mailstore.LocalFolder: long getDatabaseId()>();

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r5[1] = $r9;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Moved sent message to folder \'%s\' (%d)", $r5);

        $r7 = virtualinvoke $r8.<com.fsck.k9.mailstore.LocalFolder: java.lang.String getName()>();

        $r11 = virtualinvoke $r4.<com.fsck.k9.mailstore.LocalMessage: java.lang.String getUid()>();

        $r12 = staticinvoke <com.fsck.k9.controller.MessagingControllerCommands$PendingAppend: com.fsck.k9.controller.MessagingControllerCommands$PendingAppend create(java.lang.String,java.lang.String)>($r7, $r11);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void queuePendingCommand(com.fsck.k9.Account,com.fsck.k9.controller.MessagingControllerCommands$PendingCommand)>($r1, $r12);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void processPendingCommands(com.fsck.k9.Account)>($r1);

        return;
    }
    private void notifySynchronizeMailboxFailed(com.fsck.k9.Account, com.fsck.k9.mail.Folder, java.lang.Exception)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mail.Folder $r2;
        java.lang.Exception $r3;
        java.lang.String $r4, $r5;
        java.util.Set $r6;
        java.util.Iterator $r7;
        boolean $z0;
        java.lang.Object $r8;
        com.fsck.k9.controller.MessagingListener r9;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: com.fsck.k9.mail.Folder;

        $r3 := @parameter2: java.lang.Exception;

        $r4 = virtualinvoke $r2.<com.fsck.k9.mail.Folder: java.lang.String getName()>();

        $r5 = specialinvoke r0.<com.fsck.k9.controller.MessagingController: java.lang.String getRootCauseMessage(java.lang.Throwable)>($r3);

        $r6 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (com.fsck.k9.controller.MessagingListener) $r8;

        interfaceinvoke r9.<com.fsck.k9.controller.MessagingListener: void synchronizeMailboxFailed(com.fsck.k9.Account,java.lang.String,java.lang.String)>($r1, $r4, $r5);

        goto label1;

     label2:
        return;
    }
    private void processPendingCommands(com.fsck.k9.Account)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.controller.MessagingController$13 $r2;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 = new com.fsck.k9.controller.MessagingController$13;

        specialinvoke $r2.<com.fsck.k9.controller.MessagingController$13: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account)>(r0, $r1);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void putBackground(java.lang.String,com.fsck.k9.controller.MessagingListener,java.lang.Runnable)>("processPendingCommands", null, $r2);

        return;
    }
    private void processPendingCommandsSynchronous(com.fsck.k9.Account) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mailstore.LocalStore $r2;
        java.util.List $r3;
        int i0, $i1;
        java.util.Set $r4;
        java.util.Iterator $r5, $r11;
        boolean $z0;
        java.lang.Object $r6;
        com.fsck.k9.controller.MessagingListener r7;
        com.fsck.k9.controller.MessagingControllerCommands$PendingCommand r8, r9;
        java.lang.Object[] $r10;
        java.lang.String $r12;
        com.fsck.k9.mail.MessagingException r13, r15;
        java.lang.Throwable $r14, $r16;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

        $r3 = virtualinvoke $r2.<com.fsck.k9.mailstore.LocalStore: java.util.List getPendingCommands()>();

        i0 = 0;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i1 != 0 goto label01;

        return;

     label01:
        $r4 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.fsck.k9.controller.MessagingListener) $r6;

        interfaceinvoke r7.<com.fsck.k9.controller.MessagingListener: void pendingCommandsProcessing(com.fsck.k9.Account)>($r1);

        interfaceinvoke r7.<com.fsck.k9.controller.MessagingListener: void synchronizeMailboxProgress(com.fsck.k9.Account,java.lang.String,int,int)>($r1, null, 0, $i1);

        goto label02;

     label03:
        r8 = null;

     label04:
        $r5 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

     label06:
        if $z0 == 0 goto label55;

     label07:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

     label08:
        r9 = (com.fsck.k9.controller.MessagingControllerCommands$PendingCommand) $r6;

     label09:
        r8 = r9;

     label10:
        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r9;

     label11:
        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Processing pending command \'%s\'", $r10);

        $r4 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r11 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label12:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

     label13:
        if $z0 == 0 goto label22;

     label14:
        $r6 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

     label15:
        r7 = (com.fsck.k9.controller.MessagingListener) $r6;

     label16:
        $r12 = virtualinvoke r9.<com.fsck.k9.controller.MessagingControllerCommands$PendingCommand: java.lang.String getCommandName()>();

        interfaceinvoke r7.<com.fsck.k9.controller.MessagingListener: void pendingCommandStarted(com.fsck.k9.Account,java.lang.String)>($r1, $r12);

     label17:
        goto label12;

     label18:
        r13 := @caughtexception;

     label19:
        virtualinvoke r0.<com.fsck.k9.controller.MessagingController: void notifyUserIfCertificateProblem(com.fsck.k9.Account,java.lang.Exception,boolean)>($r1, r13, 1);

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r8;

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r13, "Could not process command \'%s\'", $r10);

        throw r13;

     label20:
        $r14 := @caughtexception;

        $r4 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label21:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label57;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.fsck.k9.controller.MessagingListener) $r6;

        interfaceinvoke r7.<com.fsck.k9.controller.MessagingListener: void pendingCommandsFinished(com.fsck.k9.Account)>($r1);

        goto label21;

     label22:
        virtualinvoke r9.<com.fsck.k9.controller.MessagingControllerCommands$PendingCommand: void execute(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account)>(r0, $r1);

        virtualinvoke $r2.<com.fsck.k9.mailstore.LocalStore: void removePendingCommand(com.fsck.k9.controller.MessagingControllerCommands$PendingCommand)>(r9);

     label23:
        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r9;

     label24:
        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Done processing pending command \'%s\'", $r10);

     label25:
        i0 = i0 + 1;

     label26:
        $r4 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r11 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label27:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

     label28:
        if $z0 == 0 goto label05;

     label29:
        $r6 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

     label30:
        r7 = (com.fsck.k9.controller.MessagingListener) $r6;

     label31:
        interfaceinvoke r7.<com.fsck.k9.controller.MessagingListener: void synchronizeMailboxProgress(com.fsck.k9.Account,java.lang.String,int,int)>($r1, null, i0, $i1);

        $r12 = virtualinvoke r9.<com.fsck.k9.controller.MessagingControllerCommands$PendingCommand: java.lang.String getCommandName()>();

        interfaceinvoke r7.<com.fsck.k9.controller.MessagingListener: void pendingCommandCompleted(com.fsck.k9.Account,java.lang.String)>($r1, $r12);

     label32:
        goto label27;

     label33:
        r15 := @caughtexception;

     label34:
        $z0 = virtualinvoke r15.<com.fsck.k9.mail.MessagingException: boolean isPermanentFailure()>();

     label35:
        if $z0 == 0 goto label45;

     label36:
        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r9;

        staticinvoke <timber.log.Timber: void e(java.lang.String,java.lang.Object[])>("Failure of command \'%s\' was permanent, removing command from queue", $r10);

        virtualinvoke $r2.<com.fsck.k9.mailstore.LocalStore: void removePendingCommand(com.fsck.k9.controller.MessagingControllerCommands$PendingCommand)>(r9);

     label37:
        i0 = i0 + 1;

     label38:
        $r4 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r11 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label39:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

     label40:
        if $z0 == 0 goto label05;

     label41:
        $r6 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

     label42:
        r7 = (com.fsck.k9.controller.MessagingListener) $r6;

     label43:
        interfaceinvoke r7.<com.fsck.k9.controller.MessagingListener: void synchronizeMailboxProgress(com.fsck.k9.Account,java.lang.String,int,int)>($r1, null, i0, $i1);

        $r12 = virtualinvoke r9.<com.fsck.k9.controller.MessagingControllerCommands$PendingCommand: java.lang.String getCommandName()>();

        interfaceinvoke r7.<com.fsck.k9.controller.MessagingListener: void pendingCommandCompleted(com.fsck.k9.Account,java.lang.String)>($r1, $r12);

     label44:
        goto label39;

     label45:
        throw r15;

     label46:
        $r16 := @caughtexception;

        i0 = i0 + 1;

     label47:
        $r4 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label48:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

     label49:
        if $z0 == 0 goto label54;

     label50:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

     label51:
        r7 = (com.fsck.k9.controller.MessagingListener) $r6;

     label52:
        interfaceinvoke r7.<com.fsck.k9.controller.MessagingListener: void synchronizeMailboxProgress(com.fsck.k9.Account,java.lang.String,int,int)>($r1, null, i0, $i1);

        $r12 = virtualinvoke r9.<com.fsck.k9.controller.MessagingControllerCommands$PendingCommand: java.lang.String getCommandName()>();

        interfaceinvoke r7.<com.fsck.k9.controller.MessagingListener: void pendingCommandCompleted(com.fsck.k9.Account,java.lang.String)>($r1, $r12);

     label53:
        goto label48;

     label54:
        throw $r16;

     label55:
        $r4 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label56:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label58;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.fsck.k9.controller.MessagingListener) $r6;

        interfaceinvoke r7.<com.fsck.k9.controller.MessagingListener: void pendingCommandsFinished(com.fsck.k9.Account)>($r1);

        goto label56;

     label57:
        throw $r14;

     label58:
        return;

        catch com.fsck.k9.mail.MessagingException from label04 to label06 with label18;
        catch com.fsck.k9.mail.MessagingException from label07 to label08 with label18;
        catch com.fsck.k9.mail.MessagingException from label11 to label13 with label18;
        catch com.fsck.k9.mail.MessagingException from label14 to label15 with label18;
        catch com.fsck.k9.mail.MessagingException from label16 to label17 with label18;
        catch java.lang.Throwable from label04 to label06 with label20;
        catch java.lang.Throwable from label07 to label09 with label20;
        catch java.lang.Throwable from label10 to label13 with label20;
        catch java.lang.Throwable from label14 to label17 with label20;
        catch java.lang.Throwable from label19 to label20 with label20;
        catch com.fsck.k9.mail.MessagingException from label22 to label23 with label33;
        catch com.fsck.k9.mail.MessagingException from label24 to label25 with label33;
        catch java.lang.Throwable from label22 to label25 with label46;
        catch com.fsck.k9.mail.MessagingException from label26 to label28 with label18;
        catch com.fsck.k9.mail.MessagingException from label29 to label30 with label18;
        catch com.fsck.k9.mail.MessagingException from label31 to label32 with label18;
        catch java.lang.Throwable from label26 to label28 with label20;
        catch java.lang.Throwable from label29 to label32 with label20;
        catch java.lang.Throwable from label34 to label35 with label46;
        catch java.lang.Throwable from label36 to label37 with label46;
        catch com.fsck.k9.mail.MessagingException from label38 to label40 with label18;
        catch com.fsck.k9.mail.MessagingException from label41 to label42 with label18;
        catch com.fsck.k9.mail.MessagingException from label43 to label44 with label18;
        catch java.lang.Throwable from label38 to label40 with label20;
        catch java.lang.Throwable from label41 to label44 with label20;
        catch java.lang.Throwable from label45 to label46 with label46;
        catch com.fsck.k9.mail.MessagingException from label47 to label49 with label18;
        catch com.fsck.k9.mail.MessagingException from label50 to label51 with label18;
        catch com.fsck.k9.mail.MessagingException from label52 to label53 with label18;
        catch com.fsck.k9.mail.MessagingException from label54 to label55 with label18;
        catch java.lang.Throwable from label47 to label49 with label20;
        catch java.lang.Throwable from label50 to label53 with label20;
        catch java.lang.Throwable from label54 to label55 with label20;
    }
    private void put(java.lang.String, com.fsck.k9.controller.MessagingListener, java.lang.Runnable)
    {
        com.fsck.k9.controller.MessagingController r0;
        java.lang.String $r1;
        com.fsck.k9.controller.MessagingListener $r2;
        java.lang.Runnable $r3;
        java.util.concurrent.BlockingQueue $r4;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.fsck.k9.controller.MessagingListener;

        $r3 := @parameter2: java.lang.Runnable;

        $r4 = r0.<com.fsck.k9.controller.MessagingController: java.util.concurrent.BlockingQueue queuedCommands>;

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void putCommand(java.util.concurrent.BlockingQueue,java.lang.String,com.fsck.k9.controller.MessagingListener,java.lang.Runnable,boolean)>($r4, $r1, $r2, $r3, 1);

        return;
    }
    private void putBackground(java.lang.String, com.fsck.k9.controller.MessagingListener, java.lang.Runnable)
    {
        com.fsck.k9.controller.MessagingController r0;
        java.lang.String $r1;
        com.fsck.k9.controller.MessagingListener $r2;
        java.lang.Runnable $r3;
        java.util.concurrent.BlockingQueue $r4;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.fsck.k9.controller.MessagingListener;

        $r3 := @parameter2: java.lang.Runnable;

        $r4 = r0.<com.fsck.k9.controller.MessagingController: java.util.concurrent.BlockingQueue queuedCommands>;

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void putCommand(java.util.concurrent.BlockingQueue,java.lang.String,com.fsck.k9.controller.MessagingListener,java.lang.Runnable,boolean)>($r4, $r1, $r2, $r3, 0);

        return;
    }
    private void putCommand(java.util.concurrent.BlockingQueue, java.lang.String, com.fsck.k9.controller.MessagingListener, java.lang.Runnable, boolean)
    {
        com.fsck.k9.controller.MessagingController r0;
        java.util.concurrent.BlockingQueue r1;
        java.lang.String $r2;
        com.fsck.k9.controller.MessagingListener $r3;
        java.lang.Runnable $r4;
        boolean $z0;
        com.fsck.k9.controller.MessagingController$Command r5;
        java.lang.InterruptedException r6;
        int i0, i1;
        java.lang.Error $r7;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        r1 := @parameter0: java.util.concurrent.BlockingQueue;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.fsck.k9.controller.MessagingListener;

        $r4 := @parameter3: java.lang.Runnable;

        $z0 := @parameter4: boolean;

        r6 = null;

        i0 = 10;

     label1:
        i1 = i0 + -1;

        if i0 <= 0 goto label7;

        r5 = new com.fsck.k9.controller.MessagingController$Command;

     label2:
        specialinvoke r5.<com.fsck.k9.controller.MessagingController$Command: void <init>(com.fsck.k9.controller.MessagingController$1)>(null);

     label3:
        r5.<com.fsck.k9.controller.MessagingController$Command: com.fsck.k9.controller.MessagingListener listener> = $r3;

        r5.<com.fsck.k9.controller.MessagingController$Command: java.lang.Runnable runnable> = $r4;

        r5.<com.fsck.k9.controller.MessagingController$Command: java.lang.String description> = $r2;

        r5.<com.fsck.k9.controller.MessagingController$Command: boolean isForegroundPriority> = $z0;

     label4:
        interfaceinvoke r1.<java.util.concurrent.BlockingQueue: void put(java.lang.Object)>(r5);

     label5:
        return;

     label6:
        r6 := @caughtexception;

        staticinvoke <android.os.SystemClock: void sleep(long)>(200L);

        i0 = i1;

        goto label1;

     label7:
        $r7 = new java.lang.Error;

        specialinvoke $r7.<java.lang.Error: void <init>(java.lang.Throwable)>(r6);

        throw $r7;

        catch java.lang.InterruptedException from label2 to label3 with label6;
        catch java.lang.InterruptedException from label4 to label5 with label6;
    }
    private void queueExpunge(com.fsck.k9.Account, java.lang.String)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2, $r5;
        com.fsck.k9.controller.MessagingController$15 $r3;
        java.lang.StringBuilder $r4;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("queueExpunge ");

        $r5 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getDescription()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new com.fsck.k9.controller.MessagingController$15;

        specialinvoke $r3.<com.fsck.k9.controller.MessagingController$15: void <init>(com.fsck.k9.controller.MessagingController,java.lang.String,com.fsck.k9.Account)>(r0, $r2, $r1);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void putBackground(java.lang.String,com.fsck.k9.controller.MessagingListener,java.lang.Runnable)>($r5, null, $r3);

        return;
    }
    private void queueMoveOrCopy(com.fsck.k9.Account, java.lang.String, java.lang.String, boolean, java.util.List)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        java.util.List r4;
        com.fsck.k9.controller.MessagingControllerCommands$PendingMoveOrCopy $r5;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        r4 := @parameter4: java.util.List;

        $r5 = staticinvoke <com.fsck.k9.controller.MessagingControllerCommands$PendingMoveOrCopy: com.fsck.k9.controller.MessagingControllerCommands$PendingMoveOrCopy create(java.lang.String,java.lang.String,boolean,java.util.List)>($r2, $r3, $z0, r4);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void queuePendingCommand(com.fsck.k9.Account,com.fsck.k9.controller.MessagingControllerCommands$PendingCommand)>($r1, $r5);

        return;
    }
    private void queueMoveOrCopy(com.fsck.k9.Account, java.lang.String, java.lang.String, boolean, java.util.List, java.util.Map)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2, $r3;
        boolean $z0, $z1;
        java.util.List r4;
        java.util.Map r5;
        com.fsck.k9.controller.MessagingControllerCommands$PendingMoveOrCopy $r6;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        r4 := @parameter4: java.util.List;

        r5 := @parameter5: java.util.Map;

        if r5 == null goto label1;

        $z1 = interfaceinvoke r5.<java.util.Map: boolean isEmpty()>();

        if $z1 == 0 goto label2;

     label1:
        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void queueMoveOrCopy(com.fsck.k9.Account,java.lang.String,java.lang.String,boolean,java.util.List)>($r1, $r2, $r3, $z0, r4);

        return;

     label2:
        $r6 = staticinvoke <com.fsck.k9.controller.MessagingControllerCommands$PendingMoveOrCopy: com.fsck.k9.controller.MessagingControllerCommands$PendingMoveOrCopy create(java.lang.String,java.lang.String,boolean,java.util.Map)>($r2, $r3, $z0, r5);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void queuePendingCommand(com.fsck.k9.Account,com.fsck.k9.controller.MessagingControllerCommands$PendingCommand)>($r1, $r6);

        return;
    }
    private void queuePendingCommand(com.fsck.k9.Account, com.fsck.k9.controller.MessagingControllerCommands$PendingCommand)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.controller.MessagingControllerCommands$PendingCommand $r2;
        java.lang.Exception r3;
        java.lang.RuntimeException $r4;
        com.fsck.k9.mailstore.LocalStore $r5;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: com.fsck.k9.controller.MessagingControllerCommands$PendingCommand;

     label1:
        $r5 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

        virtualinvoke $r5.<com.fsck.k9.mailstore.LocalStore: void addPendingCommand(com.fsck.k9.controller.MessagingControllerCommands$PendingCommand)>($r2);

     label2:
        return;

     label3:
        r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to enqueue pending command", r3);

        throw $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    private void queueSetFlag(com.fsck.k9.Account, java.lang.String, boolean, com.fsck.k9.mail.Flag, java.util.List)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2, $r6;
        boolean $z0;
        com.fsck.k9.mail.Flag $r3;
        java.util.List r4;
        java.lang.StringBuilder $r5;
        com.fsck.k9.controller.MessagingController$14 $r7;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r3 := @parameter3: com.fsck.k9.mail.Flag;

        r4 := @parameter4: java.util.List;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("queueSetFlag ");

        $r6 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getDescription()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = new com.fsck.k9.controller.MessagingController$14;

        specialinvoke $r7.<com.fsck.k9.controller.MessagingController$14: void <init>(com.fsck.k9.controller.MessagingController,java.lang.String,boolean,com.fsck.k9.mail.Flag,java.util.List,com.fsck.k9.Account)>(r0, $r2, $z0, $r3, r4, $r1);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void putBackground(java.lang.String,com.fsck.k9.controller.MessagingListener,java.lang.Runnable)>($r6, null, $r7);

        return;
    }
    private void refreshLocalMessageFlags(com.fsck.k9.Account, com.fsck.k9.mail.Folder, com.fsck.k9.mailstore.LocalFolder, java.util.List, java.util.concurrent.atomic.AtomicInteger, int) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mail.Folder $r2;
        com.fsck.k9.mailstore.LocalFolder $r3;
        java.util.List r4;
        java.util.concurrent.atomic.AtomicInteger $r5;
        int $i0, $i1;
        com.fsck.k9.mail.FetchProfile r6;
        java.util.LinkedList r7;
        java.lang.String $r8, $r16;
        boolean $z0, $z1;
        java.lang.Object[] $r9;
        java.lang.Integer $r10;
        com.fsck.k9.mail.FetchProfile$Item $r11;
        java.util.Iterator $r12, $r19;
        java.lang.Object $r13;
        com.fsck.k9.mail.Message r14;
        com.fsck.k9.mail.Flag $r15;
        com.fsck.k9.mailstore.LocalMessage $r17;
        java.util.Set $r18;
        com.fsck.k9.controller.MessagingListener r20;
        com.fsck.k9.activity.MessageReference $r21;
        com.fsck.k9.notification.NotificationController $r22;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: com.fsck.k9.mail.Folder;

        $r3 := @parameter2: com.fsck.k9.mailstore.LocalFolder;

        r4 := @parameter3: java.util.List;

        $r5 := @parameter4: java.util.concurrent.atomic.AtomicInteger;

        $i0 := @parameter5: int;

        $r8 = virtualinvoke $r2.<com.fsck.k9.mail.Folder: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<com.fsck.k9.mail.Folder: boolean supportsFetchingFlags()>();

        if $z0 == 0 goto label10;

        $r9 = newarray (java.lang.Object)[2];

        $i1 = interfaceinvoke r4.<java.util.List: int size()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r9[0] = $r10;

        $r9[1] = $r8;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("SYNC: About to sync flags for %d remote messages for folder %s", $r9);

        r6 = new com.fsck.k9.mail.FetchProfile;

        specialinvoke r6.<com.fsck.k9.mail.FetchProfile: void <init>()>();

        $r11 = <com.fsck.k9.mail.FetchProfile$Item: com.fsck.k9.mail.FetchProfile$Item FLAGS>;

        virtualinvoke r6.<com.fsck.k9.mail.FetchProfile: boolean add(java.lang.Object)>($r11);

        r7 = new java.util.LinkedList;

        specialinvoke r7.<java.util.LinkedList: void <init>()>();

        $r12 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (com.fsck.k9.mail.Message) $r13;

        $r15 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag DELETED>;

        $z0 = virtualinvoke r14.<com.fsck.k9.mail.Message: boolean isSet(com.fsck.k9.mail.Flag)>($r15);

        if $z0 != 0 goto label01;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r14);

        goto label01;

     label02:
        virtualinvoke $r2.<com.fsck.k9.mail.Folder: void fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)>(r7, r6, null);

        $r12 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (com.fsck.k9.mail.Message) $r13;

        $r16 = virtualinvoke r14.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

        $r17 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalMessage getMessage(java.lang.String)>($r16);

        $z0 = specialinvoke r0.<com.fsck.k9.controller.MessagingController: boolean syncFlags(com.fsck.k9.mailstore.LocalMessage,com.fsck.k9.mail.Message)>($r17, r14);

        if $z0 == 0 goto label08;

        $z0 = 0;

        $r15 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag DELETED>;

        $z1 = virtualinvoke $r17.<com.fsck.k9.mailstore.LocalMessage: boolean isSet(com.fsck.k9.mail.Flag)>($r15);

        if $z1 != 0 goto label04;

        $z1 = specialinvoke r0.<com.fsck.k9.controller.MessagingController: boolean isMessageSuppressed(com.fsck.k9.mailstore.LocalMessage)>($r17);

        if $z1 == 0 goto label06;

     label04:
        $r18 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r19 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r13 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (com.fsck.k9.controller.MessagingListener) $r13;

        interfaceinvoke r20.<com.fsck.k9.controller.MessagingListener: void synchronizeMailboxRemovedMessage(com.fsck.k9.Account,java.lang.String,com.fsck.k9.mail.Message)>($r1, $r8, $r17);

        goto label05;

     label06:
        $z1 = specialinvoke r0.<com.fsck.k9.controller.MessagingController: boolean shouldNotifyForMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.LocalFolder,com.fsck.k9.mail.Message)>($r1, $r3, $r17);

        if $z1 == 0 goto label07;

        $z0 = 1;

     label07:
        if $z0 != 0 goto label08;

        $r21 = virtualinvoke $r17.<com.fsck.k9.mailstore.LocalMessage: com.fsck.k9.activity.MessageReference makeMessageReference()>();

        $r22 = r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.notification.NotificationController notificationController>;

        virtualinvoke $r22.<com.fsck.k9.notification.NotificationController: void removeNewMailNotification(com.fsck.k9.Account,com.fsck.k9.activity.MessageReference)>($r1, $r21);

     label08:
        virtualinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        $r18 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r19 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r13 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (com.fsck.k9.controller.MessagingListener) $r13;

        $i1 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        interfaceinvoke r20.<com.fsck.k9.controller.MessagingListener: void synchronizeMailboxProgress(com.fsck.k9.Account,java.lang.String,int,int)>($r1, $r8, $i1, $i0);

        goto label09;

     label10:
        return;
    }
    private void removeFlagForThreadsFromCache(com.fsck.k9.Account, java.util.List, com.fsck.k9.mail.Flag)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.util.List r2;
        com.fsck.k9.mail.Flag $r3;
        android.content.Context $r4;
        java.lang.String $r5;
        com.fsck.k9.cache.EmailProviderCache $r6;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        r2 := @parameter1: java.util.List;

        $r3 := @parameter2: com.fsck.k9.mail.Flag;

        $r5 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getUuid()>();

        $r4 = r0.<com.fsck.k9.controller.MessagingController: android.content.Context context>;

        $r6 = staticinvoke <com.fsck.k9.cache.EmailProviderCache: com.fsck.k9.cache.EmailProviderCache getCache(java.lang.String,android.content.Context)>($r5, $r4);

        $r5 = staticinvoke <com.fsck.k9.mailstore.LocalStore: java.lang.String getColumnNameForFlag(com.fsck.k9.mail.Flag)>($r3);

        virtualinvoke $r6.<com.fsck.k9.cache.EmailProviderCache: void removeValueForThreads(java.util.List,java.lang.String)>(r2, $r5);

        return;
    }
    private void removeFlagFromCache(com.fsck.k9.Account, java.util.List, com.fsck.k9.mail.Flag)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.util.List r2;
        com.fsck.k9.mail.Flag $r3;
        android.content.Context $r4;
        java.lang.String $r5;
        com.fsck.k9.cache.EmailProviderCache $r6;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        r2 := @parameter1: java.util.List;

        $r3 := @parameter2: com.fsck.k9.mail.Flag;

        $r5 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getUuid()>();

        $r4 = r0.<com.fsck.k9.controller.MessagingController: android.content.Context context>;

        $r6 = staticinvoke <com.fsck.k9.cache.EmailProviderCache: com.fsck.k9.cache.EmailProviderCache getCache(java.lang.String,android.content.Context)>($r5, $r4);

        $r5 = staticinvoke <com.fsck.k9.mailstore.LocalStore: java.lang.String getColumnNameForFlag(com.fsck.k9.mail.Flag)>($r3);

        virtualinvoke $r6.<com.fsck.k9.cache.EmailProviderCache: void removeValueForMessages(java.util.List,java.lang.String)>(r2, $r5);

        return;
    }
    private void runInBackground()
    {
        com.fsck.k9.controller.MessagingController r0;
        boolean $z0;
        java.lang.String r1, $r6;
        java.util.concurrent.BlockingQueue $r2;
        java.lang.Object $r3;
        com.fsck.k9.controller.MessagingController$Command r4;
        java.lang.Object[] $r5;
        int $i0;
        java.lang.Integer $r7;
        java.lang.Runnable $r8;
        java.lang.Exception r9;
        com.fsck.k9.controller.UnavailableAccountException r10;
        com.fsck.k9.controller.MessagingController$2 $r11;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        staticinvoke <android.os.Process: void setThreadPriority(int)>(10);

     label01:
        $z0 = r0.<com.fsck.k9.controller.MessagingController: boolean stopped>;

        if $z0 != 0 goto label16;

        r1 = null;

     label02:
        $r2 = r0.<com.fsck.k9.controller.MessagingController: java.util.concurrent.BlockingQueue queuedCommands>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.BlockingQueue: java.lang.Object take()>();

        r4 = (com.fsck.k9.controller.MessagingController$Command) $r3;

     label03:
        if r4 == null goto label01;

     label04:
        r1 = r4.<com.fsck.k9.controller.MessagingController$Command: java.lang.String description>;

        $r5 = newarray (java.lang.Object)[3];

        $r6 = r4.<com.fsck.k9.controller.MessagingController$Command: java.lang.String description>;

        $r5[0] = $r6;

        $i0 = r4.<com.fsck.k9.controller.MessagingController$Command: int sequence>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[1] = $r7;

        $z0 = r4.<com.fsck.k9.controller.MessagingController$Command: boolean isForegroundPriority>;

     label05:
        if $z0 == 0 goto label12;

        $r6 = "foreground";

     label06:
        $r5[2] = $r6;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Running command \'%s\', seq = %s (%s priority)", $r5);

     label07:
        $r8 = r4.<com.fsck.k9.controller.MessagingController$Command: java.lang.Runnable runnable>;

     label08:
        interfaceinvoke $r8.<java.lang.Runnable: void run()>();

     label09:
        $r5 = newarray (java.lang.Object)[1];

        $r6 = r4.<com.fsck.k9.controller.MessagingController$Command: java.lang.String description>;

        $r5[0] = $r6;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>(" Command \'%s\' completed", $r5);

     label10:
        goto label01;

     label11:
        r9 := @caughtexception;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r1;

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r9, "Error running command \'%s\'", $r5);

        goto label01;

     label12:
        $r6 = "background";

        goto label06;

     label13:
        r10 := @caughtexception;

        $r11 = new com.fsck.k9.controller.MessagingController$2;

     label14:
        specialinvoke $r11.<com.fsck.k9.controller.MessagingController$2: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.controller.MessagingController$Command)>(r0, r4);

        virtualinvoke $r11.<com.fsck.k9.controller.MessagingController$2: void start()>();

     label15:
        goto label09;

     label16:
        return;

        catch java.lang.Exception from label02 to label03 with label11;
        catch java.lang.Exception from label04 to label05 with label11;
        catch java.lang.Exception from label06 to label07 with label11;
        catch com.fsck.k9.controller.UnavailableAccountException from label08 to label09 with label13;
        catch java.lang.Exception from label07 to label09 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Exception from label14 to label15 with label11;
    }
    private void setFlagForThreadsInCache(com.fsck.k9.Account, java.util.List, com.fsck.k9.mail.Flag, boolean)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.util.List r2;
        com.fsck.k9.mail.Flag $r3;
        boolean $z0;
        android.content.Context $r4;
        java.lang.String $r5, $r7;
        com.fsck.k9.cache.EmailProviderCache $r6;
        byte $b0;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        r2 := @parameter1: java.util.List;

        $r3 := @parameter2: com.fsck.k9.mail.Flag;

        $z0 := @parameter3: boolean;

        $r5 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getUuid()>();

        $r4 = r0.<com.fsck.k9.controller.MessagingController: android.content.Context context>;

        $r6 = staticinvoke <com.fsck.k9.cache.EmailProviderCache: com.fsck.k9.cache.EmailProviderCache getCache(java.lang.String,android.content.Context)>($r5, $r4);

        $r5 = staticinvoke <com.fsck.k9.mailstore.LocalStore: java.lang.String getColumnNameForFlag(com.fsck.k9.mail.Flag)>($r3);

        if $z0 == 0 goto label2;

        $b0 = 1;

     label1:
        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($b0);

        virtualinvoke $r6.<com.fsck.k9.cache.EmailProviderCache: void setValueForThreads(java.util.List,java.lang.String,java.lang.String)>(r2, $r5, $r7);

        return;

     label2:
        $b0 = 0;

        goto label1;
    }
    private void setFlagInCache(com.fsck.k9.Account, java.util.List, com.fsck.k9.mail.Flag, boolean)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.util.List r2;
        com.fsck.k9.mail.Flag $r3;
        boolean $z0;
        android.content.Context $r4;
        java.lang.String $r5, $r7;
        com.fsck.k9.cache.EmailProviderCache $r6;
        byte $b0;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        r2 := @parameter1: java.util.List;

        $r3 := @parameter2: com.fsck.k9.mail.Flag;

        $z0 := @parameter3: boolean;

        $r5 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getUuid()>();

        $r4 = r0.<com.fsck.k9.controller.MessagingController: android.content.Context context>;

        $r6 = staticinvoke <com.fsck.k9.cache.EmailProviderCache: com.fsck.k9.cache.EmailProviderCache getCache(java.lang.String,android.content.Context)>($r5, $r4);

        $r5 = staticinvoke <com.fsck.k9.mailstore.LocalStore: java.lang.String getColumnNameForFlag(com.fsck.k9.mail.Flag)>($r3);

        if $z0 == 0 goto label2;

        $b0 = 1;

     label1:
        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($b0);

        virtualinvoke $r6.<com.fsck.k9.cache.EmailProviderCache: void setValueForMessages(java.util.List,java.lang.String,java.lang.String)>(r2, $r5, $r7);

        return;

     label2:
        $b0 = 0;

        goto label1;
    }
    private void setFlagSynchronous(com.fsck.k9.Account, java.util.List, com.fsck.k9.mail.Flag, boolean, boolean)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.util.List r2;
        com.fsck.k9.mail.Flag $r3;
        boolean $z0, $z1;
        com.fsck.k9.mailstore.LocalStore $r4;
        java.util.Map $r5;
        java.util.Set $r6;
        java.util.Iterator $r7, $r12;
        java.lang.Object $r8;
        java.util.Map$Entry r9;
        java.lang.String r10;
        com.fsck.k9.mailstore.LocalFolder $r11;
        int $i0;
        com.fsck.k9.controller.MessagingListener r13;
        com.fsck.k9.mail.MessagingException r14, r16, r17, r18;
        java.lang.Object[] $r15;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        r2 := @parameter1: java.util.List;

        $r3 := @parameter2: com.fsck.k9.mail.Flag;

        $z0 := @parameter3: boolean;

        $z1 := @parameter4: boolean;

     label01:
        $r4 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

     label02:
        if $z1 == 0 goto label17;

     label03:
        virtualinvoke $r4.<com.fsck.k9.mailstore.LocalStore: void setFlagForThreads(java.util.List,com.fsck.k9.mail.Flag,boolean)>(r2, $r3, $z0);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void removeFlagForThreadsFromCache(com.fsck.k9.Account,java.util.List,com.fsck.k9.mail.Flag)>($r1, r2, $r3);

     label04:
        $r5 = virtualinvoke $r4.<com.fsck.k9.mailstore.LocalStore: java.util.Map getFoldersAndUids(java.util.List,boolean)>(r2, $z1);

     label05:
        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label21;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.util.Map$Entry) $r8;

        $r8 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        r10 = (java.lang.String) $r8;

        $r11 = virtualinvoke $r4.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LocalFolder getFolder(java.lang.String)>(r10);

     label07:
        $i0 = virtualinvoke $r11.<com.fsck.k9.mailstore.LocalFolder: int getUnreadMessageCount()>();

        $r6 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r12 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

     label09:
        if $z1 == 0 goto label15;

     label10:
        $r8 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

     label11:
        r13 = (com.fsck.k9.controller.MessagingListener) $r8;

     label12:
        interfaceinvoke r13.<com.fsck.k9.controller.MessagingListener: void folderStatusChanged(com.fsck.k9.Account,java.lang.String,int)>($r1, r10, $i0);

     label13:
        goto label08;

     label14:
        r14 := @caughtexception;

        $r15 = newarray (java.lang.Object)[1];

        $r15[0] = r10;

        staticinvoke <timber.log.Timber: void w(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r14, "Couldn\'t get unread count for folder: %s", $r15);

     label15:
        $r8 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        r2 = (java.util.List) $r8;

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void queueSetFlag(com.fsck.k9.Account,java.lang.String,boolean,com.fsck.k9.mail.Flag,java.util.List)>($r1, r10, $z0, $r3, r2);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void processPendingCommands(com.fsck.k9.Account)>($r1);

        goto label06;

     label16:
        r16 := @caughtexception;

        $r15 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r16, "Couldn\'t get LocalStore instance", $r15);

        return;

     label17:
        virtualinvoke $r4.<com.fsck.k9.mailstore.LocalStore: void setFlag(java.util.List,com.fsck.k9.mail.Flag,boolean)>(r2, $r3, $z0);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void removeFlagFromCache(com.fsck.k9.Account,java.util.List,com.fsck.k9.mail.Flag)>($r1, r2, $r3);

     label18:
        goto label04;

     label19:
        r17 := @caughtexception;

        $r15 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r17, "Couldn\'t set flags in local database", $r15);

        goto label04;

     label20:
        r18 := @caughtexception;

        $r15 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r18, "Couldn\'t get folder name and UID of messages", $r15);

     label21:
        return;

        catch com.fsck.k9.mail.MessagingException from label01 to label02 with label16;
        catch com.fsck.k9.mail.MessagingException from label03 to label04 with label19;
        catch com.fsck.k9.mail.MessagingException from label04 to label05 with label20;
        catch com.fsck.k9.mail.MessagingException from label07 to label09 with label14;
        catch com.fsck.k9.mail.MessagingException from label10 to label11 with label14;
        catch com.fsck.k9.mail.MessagingException from label12 to label13 with label14;
        catch com.fsck.k9.mail.MessagingException from label17 to label18 with label19;
    }
    private boolean shouldImportMessage(com.fsck.k9.Account, com.fsck.k9.mail.Message, java.util.Date)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mail.Message $r2;
        java.util.Date $r3;
        boolean $z0;
        java.lang.Object[] $r4;
        java.lang.String $r5;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: com.fsck.k9.mail.Message;

        $r3 := @parameter2: java.util.Date;

        $z0 = virtualinvoke $r1.<com.fsck.k9.Account: boolean isSearchByDateCapable()>();

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r2.<com.fsck.k9.mail.Message: boolean olderThan(java.util.Date)>($r3);

        if $z0 == 0 goto label1;

        $r4 = newarray (java.lang.Object)[2];

        $r5 = virtualinvoke $r2.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

        $r4[0] = $r5;

        $r4[1] = $r3;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Message %s is older than %s, hence not saving", $r4);

        return 0;

     label1:
        return 1;
    }
    private boolean shouldNotifyForMessage(com.fsck.k9.Account, com.fsck.k9.mailstore.LocalFolder, com.fsck.k9.mail.Message)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mailstore.LocalFolder $r2;
        com.fsck.k9.mail.Message $r3;
        java.lang.String $r4, $r12;
        boolean $z0;
        com.fsck.k9.mail.Flag $r5;
        com.fsck.k9.Account$FolderMode $r6, $r7;
        com.fsck.k9.mail.Folder$FolderClass $r8, $r9;
        java.util.Date $r10;
        long $l0;
        com.fsck.k9.mail.Folder $r11;
        java.lang.Integer $r13, $r14;
        int $i1, $i2;
        java.lang.Object[] $r15;
        java.lang.NumberFormatException $r16;
        com.fsck.k9.mail.Address[] $r17;
        com.fsck.k9.helper.Contacts $r18;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: com.fsck.k9.mailstore.LocalFolder;

        $r3 := @parameter2: com.fsck.k9.mail.Message;

        $r4 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getName()>();

        if $r4 != null goto label01;

        return 0;

     label01:
        $z0 = virtualinvoke $r1.<com.fsck.k9.Account: boolean isNotifyNewMail()>();

        if $z0 == 0 goto label02;

        $r5 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag SEEN>;

        $z0 = virtualinvoke $r3.<com.fsck.k9.mail.Message: boolean isSet(com.fsck.k9.mail.Flag)>($r5);

        if $z0 == 0 goto label03;

     label02:
        return 0;

     label03:
        $r6 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.Account$FolderMode getFolderDisplayMode()>();

        $r7 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.Account$FolderMode getFolderNotifyNewMailMode()>();

        $r8 = virtualinvoke $r2.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass getDisplayClass()>();

        $r9 = virtualinvoke $r2.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mail.Folder$FolderClass getNotifyClass()>();

        $z0 = specialinvoke r0.<com.fsck.k9.controller.MessagingController: boolean modeMismatch(com.fsck.k9.Account$FolderMode,com.fsck.k9.mail.Folder$FolderClass)>($r6, $r8);

        if $z0 == 0 goto label04;

        return 0;

     label04:
        $z0 = specialinvoke r0.<com.fsck.k9.controller.MessagingController: boolean modeMismatch(com.fsck.k9.Account$FolderMode,com.fsck.k9.mail.Folder$FolderClass)>($r7, $r9);

        if $z0 == 0 goto label05;

        return 0;

     label05:
        $r4 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getStoreUri()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("pop3");

        if $z0 == 0 goto label06;

        $r10 = new java.util.Date;

        $l0 = virtualinvoke $r1.<com.fsck.k9.Account: long getLatestOldMessageSeenTime()>();

        specialinvoke $r10.<java.util.Date: void <init>(long)>($l0);

        $z0 = virtualinvoke $r3.<com.fsck.k9.mail.Message: boolean olderThan(java.util.Date)>($r10);

        if $z0 == 0 goto label06;

        return 0;

     label06:
        $r11 = virtualinvoke $r3.<com.fsck.k9.mail.Message: com.fsck.k9.mail.Folder getFolder()>();

        if $r11 == null goto label08;

        $r4 = virtualinvoke $r11.<com.fsck.k9.mail.Folder: java.lang.String getName()>();

        $r12 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getInboxFolderName()>();

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label08;

        $r12 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getTrashFolderName()>();

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label07;

        $r12 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getDraftsFolderName()>();

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label07;

        $r12 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getSpamFolderName()>();

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label07;

        $r12 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getSentFolderName()>();

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label08;

     label07:
        return 0;

     label08:
        $r4 = virtualinvoke $r3.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

        if $r4 == null goto label16;

        $r13 = virtualinvoke $r2.<com.fsck.k9.mailstore.LocalFolder: java.lang.Integer getLastUid()>();

        if $r13 == null goto label16;

     label09:
        $r4 = virtualinvoke $r3.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $i1 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $r14 = virtualinvoke $r2.<com.fsck.k9.mailstore.LocalFolder: java.lang.Integer getLastUid()>();

        $i2 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

     label10:
        if $i1 > $i2 goto label16;

        $r15 = newarray (java.lang.Object)[2];

        $r15[0] = $r13;

     label11:
        $r13 = virtualinvoke $r2.<com.fsck.k9.mailstore.LocalFolder: java.lang.Integer getLastUid()>();

     label12:
        $r15[1] = $r13;

     label13:
        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Message uid is %s, max message uid is %s. Skipping notification.", $r15);

     label14:
        return 0;

     label15:
        $r16 := @caughtexception;

     label16:
        $r17 = virtualinvoke $r3.<com.fsck.k9.mail.Message: com.fsck.k9.mail.Address[] getFrom()>();

        $z0 = virtualinvoke $r1.<com.fsck.k9.Account: boolean isAnIdentity(com.fsck.k9.mail.Address[])>($r17);

        if $z0 == 0 goto label17;

        $z0 = virtualinvoke $r1.<com.fsck.k9.Account: boolean isNotifySelfNewMail()>();

        if $z0 != 0 goto label17;

        return 0;

     label17:
        $z0 = virtualinvoke $r1.<com.fsck.k9.Account: boolean isNotifyContactsMailOnly()>();

        if $z0 == 0 goto label18;

        $r18 = r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.helper.Contacts contacts>;

        $r17 = virtualinvoke $r3.<com.fsck.k9.mail.Message: com.fsck.k9.mail.Address[] getFrom()>();

        $z0 = virtualinvoke $r18.<com.fsck.k9.helper.Contacts: boolean isAnyInContacts(com.fsck.k9.mail.Address[])>($r17);

        if $z0 != 0 goto label18;

        return 0;

     label18:
        return 1;

        catch java.lang.NumberFormatException from label09 to label10 with label15;
        catch java.lang.NumberFormatException from label11 to label12 with label15;
        catch java.lang.NumberFormatException from label13 to label14 with label15;
    }
    private void showFetchingMailNotificationIfNecessary(com.fsck.k9.Account, com.fsck.k9.mail.Folder)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mail.Folder $r2;
        boolean $z0;
        com.fsck.k9.notification.NotificationController $r3;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: com.fsck.k9.mail.Folder;

        $z0 = virtualinvoke $r1.<com.fsck.k9.Account: boolean isShowOngoing()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.notification.NotificationController notificationController>;

        virtualinvoke $r3.<com.fsck.k9.notification.NotificationController: void showFetchingMailNotification(com.fsck.k9.Account,com.fsck.k9.mail.Folder)>($r1, $r2);

     label1:
        return;
    }
    private void showSendingNotificationIfNecessary(com.fsck.k9.Account)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        boolean $z0;
        com.fsck.k9.notification.NotificationController $r2;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $z0 = virtualinvoke $r1.<com.fsck.k9.Account: boolean isShowOngoing()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.notification.NotificationController notificationController>;

        virtualinvoke $r2.<com.fsck.k9.notification.NotificationController: void showSendingNotification(com.fsck.k9.Account)>($r1);

     label1:
        return;
    }
    private void suppressMessages(com.fsck.k9.Account, java.util.List)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.util.List r2;
        android.content.Context $r3;
        java.lang.String $r4;
        com.fsck.k9.cache.EmailProviderCache $r5;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        r2 := @parameter1: java.util.List;

        $r4 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getUuid()>();

        $r3 = r0.<com.fsck.k9.controller.MessagingController: android.content.Context context>;

        $r5 = staticinvoke <com.fsck.k9.cache.EmailProviderCache: com.fsck.k9.cache.EmailProviderCache getCache(java.lang.String,android.content.Context)>($r4, $r3);

        virtualinvoke $r5.<com.fsck.k9.cache.EmailProviderCache: void hideMessages(java.util.List)>(r2);

        return;
    }
    private boolean syncFlags(com.fsck.k9.mailstore.LocalMessage, com.fsck.k9.mail.Message) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.mailstore.LocalMessage $r1;
        com.fsck.k9.mail.Message $r2;
        boolean z0, $z1, $z2;
        com.fsck.k9.mail.Flag $r3;
        com.fsck.k9.mailstore.LocalFolder $r4;
        java.util.Set $r5;
        java.util.Iterator $r6;
        java.lang.Object $r7;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.mailstore.LocalMessage;

        $r2 := @parameter1: com.fsck.k9.mail.Message;

        z0 = 0;

        if $r1 == null goto label1;

        $r3 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag DELETED>;

        $z1 = virtualinvoke $r1.<com.fsck.k9.mailstore.LocalMessage: boolean isSet(com.fsck.k9.mail.Flag)>($r3);

        if $z1 == 0 goto label2;

     label1:
        return 0;

     label2:
        $r3 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag DELETED>;

        $z1 = virtualinvoke $r2.<com.fsck.k9.mail.Message: boolean isSet(com.fsck.k9.mail.Flag)>($r3);

        if $z1 == 0 goto label4;

        $r4 = virtualinvoke $r1.<com.fsck.k9.mailstore.LocalMessage: com.fsck.k9.mailstore.LocalFolder getFolder()>();

        $z1 = virtualinvoke $r4.<com.fsck.k9.mailstore.LocalFolder: boolean syncRemoteDeletions()>();

        if $z1 == 0 goto label3;

        $r3 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag DELETED>;

        virtualinvoke $r1.<com.fsck.k9.mailstore.LocalMessage: void setFlag(com.fsck.k9.mail.Flag,boolean)>($r3, 1);

        z0 = 1;

     label3:
        return z0;

     label4:
        $r5 = <com.fsck.k9.controller.MessagingController: java.util.Set SYNC_FLAGS>;

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (com.fsck.k9.mail.Flag) $r7;

        $z1 = virtualinvoke $r2.<com.fsck.k9.mail.Message: boolean isSet(com.fsck.k9.mail.Flag)>($r3);

        $z2 = virtualinvoke $r1.<com.fsck.k9.mailstore.LocalMessage: boolean isSet(com.fsck.k9.mail.Flag)>($r3);

        if $z1 == $z2 goto label5;

        z0 = virtualinvoke $r2.<com.fsck.k9.mail.Message: boolean isSet(com.fsck.k9.mail.Flag)>($r3);

        virtualinvoke $r1.<com.fsck.k9.mailstore.LocalMessage: void setFlag(com.fsck.k9.mail.Flag,boolean)>($r3, z0);

        z0 = 1;

        goto label5;
    }
    private void synchronizeFolder(com.fsck.k9.Account, com.fsck.k9.mail.Folder, boolean, long, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mail.Folder $r2;
        boolean $z0;
        long $l0, $l1, $l2;
        com.fsck.k9.controller.MessagingListener $r3;
        java.lang.Object[] $r4;
        java.lang.String $r5;
        java.lang.Long $r6;
        byte $b3;
        java.lang.StringBuilder $r7;
        com.fsck.k9.controller.MessagingController$37 $r8;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: com.fsck.k9.mail.Folder;

        $z0 := @parameter2: boolean;

        $l0 := @parameter3: long;

        $r3 := @parameter4: com.fsck.k9.controller.MessagingListener;

        $r4 = newarray (java.lang.Object)[2];

        $r5 = virtualinvoke $r2.<com.fsck.k9.mail.Folder: java.lang.String getName()>();

        $r4[0] = $r5;

        $l1 = virtualinvoke $r2.<com.fsck.k9.mail.Folder: long getLastChecked()>();

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r4[1] = $r6;

        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("Folder %s was last synced @ %tc", $r4);

        if $z0 != 0 goto label1;

        $l1 = virtualinvoke $r2.<com.fsck.k9.mail.Folder: long getLastChecked()>();

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = $l2 - $l0;

        $b3 = $l1 cmp $l2;

        if $b3 <= 0 goto label1;

        $r4 = newarray (java.lang.Object)[2];

        $r5 = virtualinvoke $r2.<com.fsck.k9.mail.Folder: java.lang.String getName()>();

        $r4[0] = $r5;

        $l0 = virtualinvoke $r2.<com.fsck.k9.mail.Folder: long getLastChecked()>();

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r4[1] = $r6;

        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("Not syncing folder %s, previously synced @ %tc which would be too recent for the account period", $r4);

        return;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sync");

        $r5 = virtualinvoke $r2.<com.fsck.k9.mail.Folder: java.lang.String getName()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new com.fsck.k9.controller.MessagingController$37;

        specialinvoke $r8.<com.fsck.k9.controller.MessagingController$37: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,com.fsck.k9.mail.Folder,boolean,long,com.fsck.k9.controller.MessagingListener)>(r0, $r1, $r2, $z0, $l0, $r3);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void putBackground(java.lang.String,com.fsck.k9.controller.MessagingListener,java.lang.Runnable)>($r5, null, $r8);

        return;
    }
    private void unsuppressMessages(com.fsck.k9.Account, java.util.List)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.util.List r2;
        android.content.Context $r3;
        java.lang.String $r4;
        com.fsck.k9.cache.EmailProviderCache $r5;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        r2 := @parameter1: java.util.List;

        $r4 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getUuid()>();

        $r3 = r0.<com.fsck.k9.controller.MessagingController: android.content.Context context>;

        $r5 = staticinvoke <com.fsck.k9.cache.EmailProviderCache: com.fsck.k9.cache.EmailProviderCache getCache(java.lang.String,android.content.Context)>($r4, $r3);

        virtualinvoke $r5.<com.fsck.k9.cache.EmailProviderCache: void unhideMessages(java.util.List)>(r2);

        return;
    }
    private void updateMoreMessages(com.fsck.k9.mail.Folder, com.fsck.k9.mailstore.LocalFolder, java.util.Date, int) throws com.fsck.k9.mail.MessagingException, java.io.IOException
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.mail.Folder $r1;
        com.fsck.k9.mailstore.LocalFolder $r2;
        java.util.Date $r3;
        int $i0;
        boolean $z0;
        com.fsck.k9.mailstore.LocalFolder$MoreMessages $r4;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.mail.Folder;

        $r2 := @parameter1: com.fsck.k9.mailstore.LocalFolder;

        $r3 := @parameter2: java.util.Date;

        $i0 := @parameter3: int;

        if $i0 != 1 goto label1;

        $r4 = <com.fsck.k9.mailstore.LocalFolder$MoreMessages: com.fsck.k9.mailstore.LocalFolder$MoreMessages FALSE>;

        virtualinvoke $r2.<com.fsck.k9.mailstore.LocalFolder: void setMoreMessages(com.fsck.k9.mailstore.LocalFolder$MoreMessages)>($r4);

        return;

     label1:
        $z0 = virtualinvoke $r1.<com.fsck.k9.mail.Folder: boolean areMoreMessagesAvailable(int,java.util.Date)>($i0, $r3);

        if $z0 == 0 goto label3;

        $r4 = <com.fsck.k9.mailstore.LocalFolder$MoreMessages: com.fsck.k9.mailstore.LocalFolder$MoreMessages TRUE>;

     label2:
        virtualinvoke $r2.<com.fsck.k9.mailstore.LocalFolder: void setMoreMessages(com.fsck.k9.mailstore.LocalFolder$MoreMessages)>($r4);

        return;

     label3:
        $r4 = <com.fsck.k9.mailstore.LocalFolder$MoreMessages: com.fsck.k9.mailstore.LocalFolder$MoreMessages FALSE>;

        goto label2;
    }
    private boolean verifyOrCreateRemoteSpecialFolder(com.fsck.k9.Account, java.lang.String, com.fsck.k9.mail.Folder, com.fsck.k9.controller.MessagingListener) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2, $r5;
        com.fsck.k9.mail.Folder $r3;
        com.fsck.k9.controller.MessagingListener $r4;
        boolean $z0;
        com.fsck.k9.mail.Folder$FolderType $r6;
        java.util.Set $r7;
        java.util.Iterator $r8;
        java.lang.Object $r9;
        java.lang.Object[] $r10;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.fsck.k9.mail.Folder;

        $r4 := @parameter3: com.fsck.k9.controller.MessagingListener;

        $r5 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getTrashFolderName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $r5 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getSentFolderName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $r5 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getDraftsFolderName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label4;

     label1:
        $z0 = virtualinvoke $r3.<com.fsck.k9.mail.Folder: boolean exists()>();

        if $z0 != 0 goto label4;

        $r6 = <com.fsck.k9.mail.Folder$FolderType: com.fsck.k9.mail.Folder$FolderType HOLDS_MESSAGES>;

        $z0 = virtualinvoke $r3.<com.fsck.k9.mail.Folder: boolean create(com.fsck.k9.mail.Folder$FolderType)>($r6);

        if $z0 != 0 goto label4;

        $r7 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners(com.fsck.k9.controller.MessagingListener)>($r4);

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.fsck.k9.controller.MessagingListener) $r9;

        interfaceinvoke $r4.<com.fsck.k9.controller.MessagingListener: void synchronizeMailboxFinished(com.fsck.k9.Account,java.lang.String,int,int)>($r1, $r2, 0, 0);

        goto label2;

     label3:
        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = $r2;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Done synchronizing folder %s", $r10);

        return 0;

     label4:
        return 1;
    }
    public void addListener(com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.controller.MessagingListener $r1;
        java.util.Set $r2;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.controller.MessagingListener;

        $r2 = r0.<com.fsck.k9.controller.MessagingController: java.util.Set listeners>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r1);

        virtualinvoke r0.<com.fsck.k9.controller.MessagingController: void refreshListener(com.fsck.k9.controller.MessagingListener)>($r1);

        return;
    }
    public void cancelNotificationForMessage(com.fsck.k9.Account, com.fsck.k9.activity.MessageReference)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.activity.MessageReference $r2;
        com.fsck.k9.notification.NotificationController $r3;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: com.fsck.k9.activity.MessageReference;

        $r3 = r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.notification.NotificationController notificationController>;

        virtualinvoke $r3.<com.fsck.k9.notification.NotificationController: void removeNewMailNotification(com.fsck.k9.Account,com.fsck.k9.activity.MessageReference)>($r1, $r2);

        return;
    }
    public void cancelNotificationsForAccount(com.fsck.k9.Account)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.notification.NotificationController $r2;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 = r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.notification.NotificationController notificationController>;

        virtualinvoke $r2.<com.fsck.k9.notification.NotificationController: void clearNewMailNotifications(com.fsck.k9.Account)>($r1);

        return;
    }
    public void checkMail(android.content.Context, com.fsck.k9.Account, boolean, boolean, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        android.content.Context $r1;
        com.fsck.k9.Account $r2;
        boolean $z0, $z1;
        com.fsck.k9.controller.MessagingListener $r3, r10;
        com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock r4, $r6;
        com.fsck.k9.mail.power.TracingPowerManager $r5;
        java.util.Set $r7;
        java.util.Iterator $r8;
        java.lang.Object $r9;
        com.fsck.k9.controller.MessagingController$35 $r11;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.fsck.k9.Account;

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        $r3 := @parameter4: com.fsck.k9.controller.MessagingListener;

        r4 = null;

        if $z1 == 0 goto label1;

        $r5 = staticinvoke <com.fsck.k9.mail.power.TracingPowerManager: com.fsck.k9.mail.power.TracingPowerManager getPowerManager(android.content.Context)>($r1);

        $r6 = virtualinvoke $r5.<com.fsck.k9.mail.power.TracingPowerManager: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock newWakeLock(int,java.lang.String)>(1, "K9 MessagingController.checkMail");

        r4 = $r6;

        virtualinvoke $r6.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock: void setReferenceCounted(boolean)>(0);

        virtualinvoke $r6.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock: void acquire(long)>(120000L);

     label1:
        $r7 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.fsck.k9.controller.MessagingListener) $r9;

        interfaceinvoke r10.<com.fsck.k9.controller.MessagingListener: void checkMailStarted(android.content.Context,com.fsck.k9.Account)>($r1, $r2);

        goto label2;

     label3:
        $r11 = new com.fsck.k9.controller.MessagingController$35;

        specialinvoke $r11.<com.fsck.k9.controller.MessagingController$35: void <init>(com.fsck.k9.controller.MessagingController,android.content.Context,com.fsck.k9.Account,boolean,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock)>(r0, $r1, $r2, $z0, $r3, r4);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void putBackground(java.lang.String,com.fsck.k9.controller.MessagingListener,java.lang.Runnable)>("checkMail", $r3, $r11);

        return;
    }
    public void clear(com.fsck.k9.Account, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.controller.MessagingListener $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        com.fsck.k9.controller.MessagingController$39 $r5;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: com.fsck.k9.controller.MessagingListener;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("clear:");

        $r4 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getDescription()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new com.fsck.k9.controller.MessagingController$39;

        specialinvoke $r5.<com.fsck.k9.controller.MessagingController$39: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener)>(r0, $r1, $r2);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void putBackground(java.lang.String,com.fsck.k9.controller.MessagingListener,java.lang.Runnable)>($r4, $r2, $r5);

        return;
    }
    public void clearAllPending(com.fsck.k9.Account)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mail.MessagingException r2;
        com.fsck.k9.mailstore.LocalStore $r3;
        java.lang.Object[] $r4;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r4 = newarray (java.lang.Object)[0];

     label1:
        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Clearing pending commands!", $r4);

        $r3 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

        virtualinvoke $r3.<com.fsck.k9.mailstore.LocalStore: void removePendingCommands()>();

     label2:
        return;

     label3:
        r2 := @caughtexception;

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r2, "Unable to clear pending command", $r4);

        return;

        catch com.fsck.k9.mail.MessagingException from label1 to label2 with label3;
    }
    public void clearCertificateErrorNotifications(com.fsck.k9.Account, com.fsck.k9.activity.setup.AccountSetupCheckSettings$CheckDirection)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.activity.setup.AccountSetupCheckSettings$CheckDirection $r2, $r3;
        boolean z0;
        com.fsck.k9.notification.NotificationController $r4;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: com.fsck.k9.activity.setup.AccountSetupCheckSettings$CheckDirection;

        $r3 = <com.fsck.k9.activity.setup.AccountSetupCheckSettings$CheckDirection: com.fsck.k9.activity.setup.AccountSetupCheckSettings$CheckDirection INCOMING>;

        if $r2 != $r3 goto label2;

        z0 = 1;

     label1:
        $r4 = r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.notification.NotificationController notificationController>;

        virtualinvoke $r4.<com.fsck.k9.notification.NotificationController: void clearCertificateErrorNotifications(com.fsck.k9.Account,boolean)>($r1, z0);

        return;

     label2:
        z0 = 0;

        goto label1;
    }
    public void clearFolder(com.fsck.k9.Account, java.lang.String, com.fsck.k9.activity.ActivityListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2;
        com.fsck.k9.activity.ActivityListener $r3;
        com.fsck.k9.controller.MessagingController$34 $r4;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.fsck.k9.activity.ActivityListener;

        $r4 = new com.fsck.k9.controller.MessagingController$34;

        specialinvoke $r4.<com.fsck.k9.controller.MessagingController$34: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,java.lang.String,com.fsck.k9.activity.ActivityListener)>(r0, $r1, $r2, $r3);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void putBackground(java.lang.String,com.fsck.k9.controller.MessagingListener,java.lang.Runnable)>("clearFolder", $r3, $r4);

        return;
    }
    protected void clearFolderSynchronous(com.fsck.k9.Account, java.lang.String, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2;
        com.fsck.k9.controller.MessagingListener $r3;
        com.fsck.k9.mailstore.LocalFolder r4, $r6;
        com.fsck.k9.mailstore.LocalStore $r5;
        com.fsck.k9.mailstore.UnavailableStorageException r7;
        java.lang.Object[] $r8;
        com.fsck.k9.controller.UnavailableAccountException $r9;
        java.lang.Throwable $r10;
        java.lang.Exception r11;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.fsck.k9.controller.MessagingListener;

        r4 = null;

     label01:
        $r5 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

        $r6 = virtualinvoke $r5.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LocalFolder getFolder(java.lang.String)>($r2);

     label02:
        r4 = $r6;

     label03:
        virtualinvoke $r6.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(0);

        virtualinvoke $r6.<com.fsck.k9.mailstore.LocalFolder: void clearAllMessages()>();

     label04:
        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r6);

     label05:
        virtualinvoke r0.<com.fsck.k9.controller.MessagingController: void listFoldersSynchronous(com.fsck.k9.Account,boolean,com.fsck.k9.controller.MessagingListener)>($r1, 0, $r3);

        return;

     label06:
        r7 := @caughtexception;

     label07:
        $r8 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Failed to clear folder because storage is not available - trying again later.", $r8);

        $r9 = new com.fsck.k9.controller.UnavailableAccountException;

        specialinvoke $r9.<com.fsck.k9.controller.UnavailableAccountException: void <init>(java.lang.Throwable)>(r7);

        throw $r9;

     label08:
        $r10 := @caughtexception;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r4);

        throw $r10;

     label09:
        r11 := @caughtexception;

     label10:
        $r8 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r11, "clearFolder failed", $r8);

     label11:
        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r4);

        goto label05;

        catch com.fsck.k9.mailstore.UnavailableStorageException from label01 to label02 with label06;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label03 to label04 with label06;
        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label10 to label11 with label08;
    }
    public void compact(com.fsck.k9.Account, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.controller.MessagingListener $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        com.fsck.k9.controller.MessagingController$38 $r5;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: com.fsck.k9.controller.MessagingListener;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("compact:");

        $r4 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getDescription()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new com.fsck.k9.controller.MessagingController$38;

        specialinvoke $r5.<com.fsck.k9.controller.MessagingController$38: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener)>(r0, $r1, $r2);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void putBackground(java.lang.String,com.fsck.k9.controller.MessagingListener,java.lang.Runnable)>($r4, $r2, $r5);

        return;
    }
    public void copyMessage(com.fsck.k9.Account, java.lang.String, com.fsck.k9.activity.MessageReference, java.lang.String)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2, $r4;
        com.fsck.k9.activity.MessageReference $r3;
        java.util.List $r5;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.fsck.k9.activity.MessageReference;

        $r4 := @parameter3: java.lang.String;

        $r5 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r3);

        virtualinvoke r0.<com.fsck.k9.controller.MessagingController: void copyMessages(com.fsck.k9.Account,java.lang.String,java.util.List,java.lang.String)>($r1, $r2, $r5, $r4);

        return;
    }
    public void copyMessages(com.fsck.k9.Account, java.lang.String, java.util.List, java.lang.String)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2, $r4;
        java.util.List r3;
        com.fsck.k9.controller.MessagingController$27 $r5;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.List;

        $r4 := @parameter3: java.lang.String;

        $r5 = new com.fsck.k9.controller.MessagingController$27;

        specialinvoke $r5.<com.fsck.k9.controller.MessagingController$27: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,java.lang.String,java.lang.String)>(r0, $r1, $r2, $r4);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void actOnMessageGroup(com.fsck.k9.Account,java.lang.String,java.util.List,com.fsck.k9.controller.MessagingController$MessageActor)>($r1, $r2, r3, $r5);

        return;
    }
    public void copyMessagesInThread(com.fsck.k9.Account, java.lang.String, java.util.List, java.lang.String)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2, $r4;
        java.util.List r3;
        com.fsck.k9.controller.MessagingController$28 $r5;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.List;

        $r4 := @parameter3: java.lang.String;

        $r5 = new com.fsck.k9.controller.MessagingController$28;

        specialinvoke $r5.<com.fsck.k9.controller.MessagingController$28: void <init>(com.fsck.k9.controller.MessagingController,java.lang.String,java.lang.String)>(r0, $r2, $r4);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void actOnMessageGroup(com.fsck.k9.Account,java.lang.String,java.util.List,com.fsck.k9.controller.MessagingController$MessageActor)>($r1, $r2, r3, $r5);

        return;
    }
    public void debugClearMessagesLocally(java.util.List)
    {
        com.fsck.k9.controller.MessagingController r0;
        java.util.List r1;
        java.lang.AssertionError $r2;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        r1 := @parameter0: java.util.List;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>(java.lang.Object)>("method must only be used in debug build!");

        throw $r2;
    }
    public void deleteAccount(com.fsck.k9.Account)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.notification.NotificationController $r2;
        com.fsck.k9.controller.MemorizingMessagingListener $r3;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 = r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.notification.NotificationController notificationController>;

        virtualinvoke $r2.<com.fsck.k9.notification.NotificationController: void clearNewMailNotifications(com.fsck.k9.Account)>($r1);

        $r3 = r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.controller.MemorizingMessagingListener memorizingMessagingListener>;

        virtualinvoke $r3.<com.fsck.k9.controller.MemorizingMessagingListener: void removeAccount(com.fsck.k9.Account)>($r1);

        return;
    }
    public void deleteDraft(com.fsck.k9.Account, long)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        long $l0;
        com.fsck.k9.mail.MessagingException r2;
        com.fsck.k9.activity.MessageReference r3;
        com.fsck.k9.mailstore.LocalFolder r4, $r7;
        com.fsck.k9.mailstore.LocalStore $r5;
        java.lang.String $r6, $r8, $r9;
        java.lang.Object[] $r10;
        java.lang.Throwable $r11;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $l0 := @parameter1: long;

        r4 = null;

     label01:
        $r5 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

        $r6 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getDraftsFolderName()>();

        $r7 = virtualinvoke $r5.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LocalFolder getFolder(java.lang.String)>($r6);

     label02:
        r4 = $r7;

     label03:
        virtualinvoke $r7.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(0);

        $r6 = virtualinvoke $r7.<com.fsck.k9.mailstore.LocalFolder: java.lang.String getMessageUidById(long)>($l0);

     label04:
        if $r6 == null goto label07;

     label05:
        r3 = new com.fsck.k9.activity.MessageReference;

     label06:
        $r8 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getUuid()>();

        $r9 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getDraftsFolderName()>();

        specialinvoke r3.<com.fsck.k9.activity.MessageReference: void <init>(java.lang.String,java.lang.String,java.lang.String,com.fsck.k9.mail.Flag)>($r8, $r9, $r6, null);

        virtualinvoke r0.<com.fsck.k9.controller.MessagingController: void deleteMessage(com.fsck.k9.activity.MessageReference,com.fsck.k9.controller.MessagingListener)>(r3, null);

     label07:
        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r7);

        return;

     label08:
        r2 := @caughtexception;

     label09:
        $r10 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r2, "Error deleting draft", $r10);

     label10:
        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r4);

        return;

     label11:
        $r11 := @caughtexception;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r4);

        throw $r11;

        catch com.fsck.k9.mail.MessagingException from label01 to label02 with label08;
        catch com.fsck.k9.mail.MessagingException from label03 to label04 with label08;
        catch com.fsck.k9.mail.MessagingException from label06 to label07 with label08;
        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }
    public void deleteMessage(com.fsck.k9.activity.MessageReference, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.activity.MessageReference $r1;
        com.fsck.k9.controller.MessagingListener $r2;
        java.util.List $r3;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.activity.MessageReference;

        $r2 := @parameter1: com.fsck.k9.controller.MessagingListener;

        $r3 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r1);

        virtualinvoke r0.<com.fsck.k9.controller.MessagingController: void deleteMessages(java.util.List,com.fsck.k9.controller.MessagingListener)>($r3, $r2);

        return;
    }
    public void deleteMessages(java.util.List, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        java.util.List r1;
        com.fsck.k9.controller.MessagingListener $r2;
        com.fsck.k9.controller.MessagingController$31 $r3;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        r1 := @parameter0: java.util.List;

        $r2 := @parameter1: com.fsck.k9.controller.MessagingListener;

        $r3 = new com.fsck.k9.controller.MessagingController$31;

        specialinvoke $r3.<com.fsck.k9.controller.MessagingController$31: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.controller.MessagingListener)>(r0, $r2);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void actOnMessagesGroupedByAccountAndFolder(java.util.List,com.fsck.k9.controller.MessagingController$MessageActor)>(r1, $r3);

        return;
    }
    public void deleteThreads(java.util.List)
    {
        com.fsck.k9.controller.MessagingController r0;
        java.util.List r1;
        com.fsck.k9.controller.MessagingController$30 $r2;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        r1 := @parameter0: java.util.List;

        $r2 = new com.fsck.k9.controller.MessagingController$30;

        specialinvoke $r2.<com.fsck.k9.controller.MessagingController$30: void <init>(com.fsck.k9.controller.MessagingController)>(r0);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void actOnMessagesGroupedByAccountAndFolder(java.util.List,com.fsck.k9.controller.MessagingController$MessageActor)>(r1, $r2);

        return;
    }
    public void emptyTrash(com.fsck.k9.Account, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.controller.MessagingListener $r2;
        com.fsck.k9.controller.MessagingController$33 $r3;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: com.fsck.k9.controller.MessagingListener;

        $r3 = new com.fsck.k9.controller.MessagingController$33;

        specialinvoke $r3.<com.fsck.k9.controller.MessagingController$33: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account)>(r0, $r1);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void putBackground(java.lang.String,com.fsck.k9.controller.MessagingListener,java.lang.Runnable)>("emptyTrash", $r2, $r3);

        return;
    }
    public void expunge(com.fsck.k9.Account, java.lang.String)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2;
        com.fsck.k9.controller.MessagingController$29 $r3;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        $r3 = new com.fsck.k9.controller.MessagingController$29;

        specialinvoke $r3.<com.fsck.k9.controller.MessagingController$29: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,java.lang.String)>(r0, $r1, $r2);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void putBackground(java.lang.String,com.fsck.k9.controller.MessagingListener,java.lang.Runnable)>("expunge", null, $r3);

        return;
    }
    public void getAccountStats(android.content.Context, com.fsck.k9.Account, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        android.content.Context $r1;
        com.fsck.k9.Account $r2;
        com.fsck.k9.controller.MessagingListener $r3;
        java.util.concurrent.ExecutorService $r4;
        com.fsck.k9.controller.MessagingController$22 $r5;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.fsck.k9.Account;

        $r3 := @parameter2: com.fsck.k9.controller.MessagingListener;

        $r4 = r0.<com.fsck.k9.controller.MessagingController: java.util.concurrent.ExecutorService threadPool>;

        $r5 = new com.fsck.k9.controller.MessagingController$22;

        specialinvoke $r5.<com.fsck.k9.controller.MessagingController$22: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,android.content.Context,com.fsck.k9.controller.MessagingListener)>(r0, $r2, $r1, $r3);

        interfaceinvoke $r4.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r5);

        return;
    }
    public com.fsck.k9.controller.MessagingListener getCheckMailListener()
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.controller.MessagingListener r1;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        r1 = r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.controller.MessagingListener checkMailListener>;

        return r1;
    }
    public void getFolderUnreadMessageCount(com.fsck.k9.Account, java.lang.String, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2, $r6;
        com.fsck.k9.controller.MessagingListener $r3;
        com.fsck.k9.controller.MessagingController$24 r4;
        java.lang.StringBuilder $r5;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.fsck.k9.controller.MessagingListener;

        r4 = new com.fsck.k9.controller.MessagingController$24;

        specialinvoke r4.<com.fsck.k9.controller.MessagingController$24: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener)>(r0, $r1, $r2, $r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getFolderUnread:");

        $r6 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getDescription()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void put(java.lang.String,com.fsck.k9.controller.MessagingListener,java.lang.Runnable)>($r2, $r3, r4);

        return;
    }
    public long getId(com.fsck.k9.mail.Message)
    {
        com.fsck.k9.controller.MessagingController r0;
        long $l0;
        com.fsck.k9.mail.Message r1;
        boolean $z0;
        com.fsck.k9.mailstore.LocalMessage r2;
        java.lang.Object[] $r3;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        r1 := @parameter0: com.fsck.k9.mail.Message;

        $z0 = r1 instanceof com.fsck.k9.mailstore.LocalMessage;

        if $z0 == 0 goto label1;

        r2 = (com.fsck.k9.mailstore.LocalMessage) r1;

        $l0 = virtualinvoke r2.<com.fsck.k9.mailstore.LocalMessage: long getDatabaseId()>();

        return $l0;

     label1:
        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("MessagingController.getId() called without a LocalMessage", $r3);

        return -1L;
    }
    public java.util.Set getListeners()
    {
        com.fsck.k9.controller.MessagingController r0;
        java.util.Set r1;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        r1 = r0.<com.fsck.k9.controller.MessagingController: java.util.Set listeners>;

        return r1;
    }
    public java.util.Set getListeners(com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.controller.MessagingListener $r1;
        java.util.Set $r2;
        java.util.HashSet r3;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.controller.MessagingListener;

        if $r1 != null goto label1;

        $r2 = r0.<com.fsck.k9.controller.MessagingController: java.util.Set listeners>;

        return $r2;

     label1:
        r3 = new java.util.HashSet;

        $r2 = r0.<com.fsck.k9.controller.MessagingController: java.util.Set listeners>;

        specialinvoke r3.<java.util.HashSet: void <init>(java.util.Collection)>($r2);

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return r3;
    }
    public java.util.Collection getPushers()
    {
        com.fsck.k9.controller.MessagingController r0;
        java.util.Collection $r1;
        java.util.concurrent.ConcurrentHashMap $r2;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r2 = r0.<com.fsck.k9.controller.MessagingController: java.util.concurrent.ConcurrentHashMap pushers>;

        $r1 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>();

        return $r1;
    }
    public void getSearchAccountStats(com.fsck.k9.search.SearchAccount, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.search.SearchAccount $r1;
        com.fsck.k9.controller.MessagingListener $r2;
        java.util.concurrent.ExecutorService $r3;
        com.fsck.k9.controller.MessagingController$23 $r4;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.search.SearchAccount;

        $r2 := @parameter1: com.fsck.k9.controller.MessagingListener;

        $r3 = r0.<com.fsck.k9.controller.MessagingController: java.util.concurrent.ExecutorService threadPool>;

        $r4 = new com.fsck.k9.controller.MessagingController$23;

        specialinvoke $r4.<com.fsck.k9.controller.MessagingController$23: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.search.SearchAccount,com.fsck.k9.controller.MessagingListener)>(r0, $r1, $r2);

        interfaceinvoke $r3.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r4);

        return;
    }
    public com.fsck.k9.AccountStats getSearchAccountStatsSynchronous(com.fsck.k9.search.SearchAccount, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.search.SearchAccount $r1;
        com.fsck.k9.controller.MessagingListener $r2;
        java.lang.String[] r3, $r17;
        java.lang.String r4, $r20;
        java.lang.StringBuilder r5, $r23;
        java.util.ArrayList r6, $r24;
        android.content.Context $r8;
        com.fsck.k9.Preferences $r9;
        com.fsck.k9.search.LocalSearch $r10;
        boolean $z0;
        java.util.List $r11;
        android.content.ContentResolver $r12;
        int i0, i1, $i2;
        java.util.Iterator $r13;
        java.lang.Object $r14;
        com.fsck.k9.Account r15;
        com.fsck.k9.search.ConditionsTreeNode $r16;
        java.lang.Object[] $r18;
        android.net.Uri $r19;
        android.database.Cursor $r21;
        java.lang.Throwable $r22;
        com.fsck.k9.AccountStats $r25;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.search.SearchAccount;

        $r2 := @parameter1: com.fsck.k9.controller.MessagingListener;

        $r8 = r0.<com.fsck.k9.controller.MessagingController: android.content.Context context>;

        $r9 = staticinvoke <com.fsck.k9.Preferences: com.fsck.k9.Preferences getPreferences(android.content.Context)>($r8);

        $r10 = virtualinvoke $r1.<com.fsck.k9.search.SearchAccount: com.fsck.k9.search.LocalSearch getRelatedSearch()>();

        r3 = virtualinvoke $r10.<com.fsck.k9.search.LocalSearch: java.lang.String[] getAccountUuids()>();

        $z0 = virtualinvoke $r10.<com.fsck.k9.search.LocalSearch: boolean searchAllAccounts()>();

        if $z0 == 0 goto label10;

        $r11 = virtualinvoke $r9.<com.fsck.k9.Preferences: java.util.List getAccounts()>();

     label01:
        $r8 = r0.<com.fsck.k9.controller.MessagingController: android.content.Context context>;

        $r12 = virtualinvoke $r8.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i0 = 0;

        i1 = 0;

        r3 = newarray (java.lang.String)[2];

        r3[0] = "unread_count";

        r3[1] = "flagged_count";

        $r13 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label14;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r15 = (com.fsck.k9.Account) $r14;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = new java.util.ArrayList;

        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

        $r16 = virtualinvoke $r10.<com.fsck.k9.search.LocalSearch: com.fsck.k9.search.ConditionsTreeNode getConditions()>();

        staticinvoke <com.fsck.k9.search.SqlQueryBuilder: void buildWhereClause(com.fsck.k9.Account,com.fsck.k9.search.ConditionsTreeNode,java.lang.StringBuilder,java.util.List)>(r15, $r16, $r23, $r24);

        r4 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = interfaceinvoke $r24.<java.util.List: int size()>();

        $r17 = newarray (java.lang.String)[$i2];

        $r18 = interfaceinvoke $r24.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r17);

        $r17 = (java.lang.String[]) $r18;

        $r19 = <com.fsck.k9.provider.EmailProvider: android.net.Uri CONTENT_URI>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        r5 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("account/");

        $r20 = virtualinvoke r15.<com.fsck.k9.Account: java.lang.String getUuid()>();

        r5 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        r5 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/stats");

        $r20 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r19, $r20);

        $r21 = virtualinvoke $r12.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r19, r3, r4, $r17, null);

        if $r21 == null goto label09;

     label03:
        $z0 = interfaceinvoke $r21.<android.database.Cursor: boolean moveToFirst()>();

     label04:
        if $z0 == 0 goto label09;

     label05:
        $i2 = interfaceinvoke $r21.<android.database.Cursor: int getInt(int)>(0);

     label06:
        i0 = i0 + $i2;

     label07:
        $i2 = interfaceinvoke $r21.<android.database.Cursor: int getInt(int)>(1);

     label08:
        i1 = i1 + $i2;

     label09:
        if $r21 == null goto label02;

        interfaceinvoke $r21.<android.database.Cursor: void close()>();

        goto label02;

     label10:
        r6 = new java.util.ArrayList;

        $r11 = r6;

        i0 = lengthof r3;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>(i0);

        i0 = 0;

        i1 = lengthof r3;

     label11:
        if i0 >= i1 goto label01;

        r4 = r3[i0];

        r15 = virtualinvoke $r9.<com.fsck.k9.Preferences: com.fsck.k9.Account getAccount(java.lang.String)>(r4);

        interfaceinvoke $r11.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r15);

        i0 = i0 + 1;

        goto label11;

     label12:
        $r22 := @caughtexception;

        if $r21 == null goto label13;

        interfaceinvoke $r21.<android.database.Cursor: void close()>();

     label13:
        throw $r22;

     label14:
        $r25 = new com.fsck.k9.AccountStats;

        specialinvoke $r25.<com.fsck.k9.AccountStats: void <init>()>();

        $r25.<com.fsck.k9.AccountStats: int unreadMessageCount> = i0;

        $r25.<com.fsck.k9.AccountStats: int flaggedMessageCount> = i1;

        if $r2 == null goto label15;

        interfaceinvoke $r2.<com.fsck.k9.controller.MessagingListener: void accountStatusChanged(com.fsck.k9.BaseAccount,com.fsck.k9.AccountStats)>($r1, $r25);

     label15:
        return $r25;

        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
    }
    void handleAuthenticationFailure(com.fsck.k9.Account, boolean)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        boolean $z0;
        com.fsck.k9.notification.NotificationController $r2;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $z0 := @parameter1: boolean;

        $r2 = r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.notification.NotificationController notificationController>;

        virtualinvoke $r2.<com.fsck.k9.notification.NotificationController: void showAuthenticationErrorNotification(com.fsck.k9.Account,boolean)>($r1, $z0);

        return;
    }
    public boolean isCopyCapable(com.fsck.k9.Account)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mail.MessagingException r2;
        java.lang.Object[] $r3;
        com.fsck.k9.mailstore.LocalStore $r4;
        com.fsck.k9.mail.Store $r5;
        boolean $z0;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

     label1:
        $r4 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

        $r5 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mail.Store getRemoteStore()>();

        $z0 = virtualinvoke $r4.<com.fsck.k9.mail.Store: boolean isCopyCapable()>();

     label2:
        if $z0 == 0 goto label6;

     label3:
        $z0 = virtualinvoke $r5.<com.fsck.k9.mail.Store: boolean isCopyCapable()>();

     label4:
        if $z0 == 0 goto label6;

        return 1;

     label5:
        r2 := @caughtexception;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r2, "Exception while ascertaining copy capability", $r3);

     label6:
        return 0;

        catch com.fsck.k9.mail.MessagingException from label1 to label2 with label5;
        catch com.fsck.k9.mail.MessagingException from label3 to label4 with label5;
    }
    public boolean isCopyCapable(com.fsck.k9.activity.MessageReference)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.activity.MessageReference $r1;
        boolean $z0;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.activity.MessageReference;

        $z0 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: boolean isMoveCapable(com.fsck.k9.activity.MessageReference)>($r1);

        return $z0;
    }
    public boolean isMoveCapable(com.fsck.k9.Account)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mail.MessagingException r2;
        java.lang.Object[] $r3;
        com.fsck.k9.mailstore.LocalStore $r4;
        com.fsck.k9.mail.Store $r5;
        boolean $z0;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

     label1:
        $r4 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

        $r5 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mail.Store getRemoteStore()>();

        $z0 = virtualinvoke $r4.<com.fsck.k9.mail.Store: boolean isMoveCapable()>();

     label2:
        if $z0 == 0 goto label6;

     label3:
        $z0 = virtualinvoke $r5.<com.fsck.k9.mail.Store: boolean isMoveCapable()>();

     label4:
        if $z0 == 0 goto label6;

        return 1;

     label5:
        r2 := @caughtexception;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r2, "Exception while ascertaining move capability", $r3);

     label6:
        return 0;

        catch com.fsck.k9.mail.MessagingException from label1 to label2 with label5;
        catch com.fsck.k9.mail.MessagingException from label3 to label4 with label5;
    }
    public boolean isMoveCapable(com.fsck.k9.activity.MessageReference)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.activity.MessageReference $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.activity.MessageReference;

        $r2 = virtualinvoke $r1.<com.fsck.k9.activity.MessageReference: java.lang.String getUid()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("K9LOCAL:");

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public void listFolders(com.fsck.k9.Account, boolean, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        boolean $z0;
        com.fsck.k9.controller.MessagingListener $r2;
        java.util.concurrent.ExecutorService $r3;
        com.fsck.k9.controller.MessagingController$3 $r4;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: com.fsck.k9.controller.MessagingListener;

        $r3 = r0.<com.fsck.k9.controller.MessagingController: java.util.concurrent.ExecutorService threadPool>;

        $r4 = new com.fsck.k9.controller.MessagingController$3;

        specialinvoke $r4.<com.fsck.k9.controller.MessagingController$3: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,boolean,com.fsck.k9.controller.MessagingListener)>(r0, $r1, $z0, $r2);

        interfaceinvoke $r3.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r4);

        return;
    }
    public void listFoldersSynchronous(com.fsck.k9.Account, boolean, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        boolean $z0, $z1;
        com.fsck.k9.controller.MessagingListener $r2, r7;
        java.lang.Exception r3;
        java.util.Set $r4;
        java.util.Iterator $r5;
        java.lang.Object $r6;
        java.util.List r8, $r12;
        android.content.Context $r9;
        java.lang.Object[] $r10;
        com.fsck.k9.mailstore.LocalStore $r11;
        com.fsck.k9.mail.Folder r13;
        java.lang.String $r14;
        java.lang.Throwable $r15;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: com.fsck.k9.controller.MessagingListener;

        $r4 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners(com.fsck.k9.controller.MessagingListener)>($r2);

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label02;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.fsck.k9.controller.MessagingListener) $r6;

        interfaceinvoke r7.<com.fsck.k9.controller.MessagingListener: void listFoldersStarted(com.fsck.k9.Account)>($r1);

        goto label01;

     label02:
        r8 = null;

        $r9 = r0.<com.fsck.k9.controller.MessagingController: android.content.Context context>;

        $z1 = virtualinvoke $r1.<com.fsck.k9.Account: boolean isAvailable(android.content.Context)>($r9);

        if $z1 != 0 goto label05;

        $r10 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("not listing folders of unavailable account", $r10);

     label03:
        $r4 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners(com.fsck.k9.controller.MessagingListener)>($r2);

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label31;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (com.fsck.k9.controller.MessagingListener) $r6;

        interfaceinvoke $r2.<com.fsck.k9.controller.MessagingListener: void listFoldersFinished(com.fsck.k9.Account)>($r1);

        goto label04;

     label05:
        $r11 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

        $r12 = virtualinvoke $r11.<com.fsck.k9.mailstore.LocalStore: java.util.List getPersonalNamespaces(boolean)>(0);

     label06:
        r8 = $r12;

        if $z0 != 0 goto label09;

     label07:
        $z0 = interfaceinvoke $r12.<java.util.List: boolean isEmpty()>();

     label08:
        if $z0 == 0 goto label12;

     label09:
        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void doRefreshRemote(com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener)>($r1, $r2);

     label10:
        if $r12 == null goto label31;

        $r5 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label31;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r13 = (com.fsck.k9.mail.Folder) $r6;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r13);

        goto label11;

     label12:
        $r4 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners(com.fsck.k9.controller.MessagingListener)>($r2);

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label13:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

     label14:
        if $z0 == 0 goto label25;

     label15:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.fsck.k9.controller.MessagingListener) $r6;

        interfaceinvoke r7.<com.fsck.k9.controller.MessagingListener: void listFolders(com.fsck.k9.Account,java.util.List)>($r1, $r12);

     label16:
        goto label13;

     label17:
        r3 := @caughtexception;

     label18:
        $r4 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners(com.fsck.k9.controller.MessagingListener)>($r2);

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label19:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

     label20:
        if $z0 == 0 goto label27;

     label21:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (com.fsck.k9.controller.MessagingListener) $r6;

        $r14 = virtualinvoke r3.<java.lang.Exception: java.lang.String getMessage()>();

        interfaceinvoke $r2.<com.fsck.k9.controller.MessagingListener: void listFoldersFailed(com.fsck.k9.Account,java.lang.String)>($r1, $r14);

     label22:
        goto label19;

     label23:
        $r15 := @caughtexception;

        if r8 == null goto label30;

        $r5 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>();

     label24:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label30;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r13 = (com.fsck.k9.mail.Folder) $r6;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r13);

        goto label24;

     label25:
        if $r12 == null goto label03;

        $r5 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label26:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r13 = (com.fsck.k9.mail.Folder) $r6;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r13);

        goto label26;

     label27:
        staticinvoke <timber.log.Timber: void e(java.lang.Throwable)>(r3);

     label28:
        if r8 == null goto label31;

        $r5 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>();

     label29:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label31;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r13 = (com.fsck.k9.mail.Folder) $r6;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r13);

        goto label29;

     label30:
        throw $r15;

     label31:
        return;

        catch java.lang.Exception from label05 to label06 with label17;
        catch java.lang.Exception from label07 to label08 with label17;
        catch java.lang.Exception from label09 to label10 with label17;
        catch java.lang.Throwable from label05 to label06 with label23;
        catch java.lang.Throwable from label07 to label08 with label23;
        catch java.lang.Throwable from label09 to label10 with label23;
        catch java.lang.Exception from label12 to label14 with label17;
        catch java.lang.Exception from label15 to label16 with label17;
        catch java.lang.Throwable from label12 to label14 with label23;
        catch java.lang.Throwable from label15 to label16 with label23;
        catch java.lang.Throwable from label18 to label20 with label23;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.Throwable from label27 to label28 with label23;
    }
    public void loadAttachment(com.fsck.k9.Account, com.fsck.k9.mailstore.LocalMessage, com.fsck.k9.mail.Part, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mailstore.LocalMessage $r2;
        com.fsck.k9.mail.Part $r3;
        com.fsck.k9.controller.MessagingListener $r4;
        com.fsck.k9.controller.MessagingController$20 $r5;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: com.fsck.k9.mailstore.LocalMessage;

        $r3 := @parameter2: com.fsck.k9.mail.Part;

        $r4 := @parameter3: com.fsck.k9.controller.MessagingListener;

        $r5 = new com.fsck.k9.controller.MessagingController$20;

        specialinvoke $r5.<com.fsck.k9.controller.MessagingController$20: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.mailstore.LocalMessage,com.fsck.k9.Account,com.fsck.k9.mail.Part,com.fsck.k9.controller.MessagingListener)>(r0, $r2, $r1, $r3, $r4);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void put(java.lang.String,com.fsck.k9.controller.MessagingListener,java.lang.Runnable)>("loadAttachment", $r4, $r5);

        return;
    }
    public com.fsck.k9.mailstore.LocalMessage loadMessage(com.fsck.k9.Account, java.lang.String, java.lang.String) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2, $r3;
        com.fsck.k9.mail.FetchProfile r4;
        com.fsck.k9.mailstore.LocalStore $r5;
        com.fsck.k9.mailstore.LocalFolder $r6;
        com.fsck.k9.mailstore.LocalMessage $r7;
        long $l0;
        byte $b1;
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuilder $r9;
        com.fsck.k9.mail.FetchProfile$Item $r10;
        java.util.List $r11;
        com.fsck.k9.notification.NotificationController $r12;
        com.fsck.k9.activity.MessageReference $r13;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r5 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

        $r6 = virtualinvoke $r5.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LocalFolder getFolder(java.lang.String)>($r2);

        virtualinvoke $r6.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(0);

        $r7 = virtualinvoke $r6.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalMessage getMessage(java.lang.String)>($r3);

        if $r7 == null goto label1;

        $l0 = virtualinvoke $r7.<com.fsck.k9.mailstore.LocalMessage: long getDatabaseId()>();

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label2;

     label1:
        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Message not found: folder=");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r8;

     label2:
        r4 = new com.fsck.k9.mail.FetchProfile;

        specialinvoke r4.<com.fsck.k9.mail.FetchProfile: void <init>()>();

        $r10 = <com.fsck.k9.mail.FetchProfile$Item: com.fsck.k9.mail.FetchProfile$Item BODY>;

        virtualinvoke r4.<com.fsck.k9.mail.FetchProfile: boolean add(java.lang.Object)>($r10);

        $r11 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r7);

        virtualinvoke $r6.<com.fsck.k9.mailstore.LocalFolder: void fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)>($r11, r4, null);

        virtualinvoke $r6.<com.fsck.k9.mailstore.LocalFolder: void close()>();

        $r12 = r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.notification.NotificationController notificationController>;

        $r13 = virtualinvoke $r7.<com.fsck.k9.mailstore.LocalMessage: com.fsck.k9.activity.MessageReference makeMessageReference()>();

        virtualinvoke $r12.<com.fsck.k9.notification.NotificationController: void removeNewMailNotification(com.fsck.k9.Account,com.fsck.k9.activity.MessageReference)>($r1, $r13);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void markMessageAsReadOnView(com.fsck.k9.Account,com.fsck.k9.mailstore.LocalMessage)>($r1, $r7);

        return $r7;
    }
    public void loadMessageRemote(com.fsck.k9.Account, java.lang.String, java.lang.String, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2, $r3;
        com.fsck.k9.controller.MessagingListener $r4;
        com.fsck.k9.controller.MessagingController$19 $r5;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: com.fsck.k9.controller.MessagingListener;

        $r5 = new com.fsck.k9.controller.MessagingController$19;

        specialinvoke $r5.<com.fsck.k9.controller.MessagingController$19: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,java.lang.String,java.lang.String,com.fsck.k9.controller.MessagingListener)>(r0, $r1, $r2, $r3, $r4);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void put(java.lang.String,com.fsck.k9.controller.MessagingListener,java.lang.Runnable)>("loadMessageRemote", $r4, $r5);

        return;
    }
    public void loadMessageRemotePartial(com.fsck.k9.Account, java.lang.String, java.lang.String, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2, $r3;
        com.fsck.k9.controller.MessagingListener $r4;
        com.fsck.k9.controller.MessagingController$18 $r5;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: com.fsck.k9.controller.MessagingListener;

        $r5 = new com.fsck.k9.controller.MessagingController$18;

        specialinvoke $r5.<com.fsck.k9.controller.MessagingController$18: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,java.lang.String,java.lang.String,com.fsck.k9.controller.MessagingListener)>(r0, $r1, $r2, $r3, $r4);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void put(java.lang.String,com.fsck.k9.controller.MessagingListener,java.lang.Runnable)>("loadMessageRemotePartial", $r4, $r5);

        return;
    }
    public void loadMoreMessages(com.fsck.k9.Account, java.lang.String, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2;
        com.fsck.k9.controller.MessagingListener $r3;
        com.fsck.k9.mail.MessagingException r4;
        com.fsck.k9.mailstore.LocalStore $r5;
        com.fsck.k9.mailstore.LocalFolder $r6;
        int $i0, $i1;
        java.lang.RuntimeException $r7;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.fsck.k9.controller.MessagingListener;

     label1:
        $r5 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

        $r6 = virtualinvoke $r5.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LocalFolder getFolder(java.lang.String)>($r2);

        $i0 = virtualinvoke $r6.<com.fsck.k9.mailstore.LocalFolder: int getVisibleLimit()>();

     label2:
        if $i0 <= 0 goto label6;

     label3:
        $i0 = virtualinvoke $r6.<com.fsck.k9.mailstore.LocalFolder: int getVisibleLimit()>();

        $i1 = virtualinvoke $r1.<com.fsck.k9.Account: int getDisplayCount()>();

     label4:
        $i0 = $i0 + $i1;

     label5:
        virtualinvoke $r6.<com.fsck.k9.mailstore.LocalFolder: void setVisibleLimit(int)>($i0);

     label6:
        virtualinvoke r0.<com.fsck.k9.controller.MessagingController: void synchronizeMailbox(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder)>($r1, $r2, $r3, null);

     label7:
        return;

     label8:
        r4 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to set visible limit on folder", r4);

        throw $r7;

        catch com.fsck.k9.mail.MessagingException from label1 to label2 with label8;
        catch com.fsck.k9.mail.MessagingException from label3 to label4 with label8;
        catch com.fsck.k9.mail.MessagingException from label5 to label7 with label8;
    }
    public void loadSearchResults(com.fsck.k9.Account, java.lang.String, java.util.List, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2;
        java.util.List r3;
        com.fsck.k9.controller.MessagingListener $r4;
        com.fsck.k9.controller.MessagingController$8 $r5;
        java.util.concurrent.ExecutorService $r6;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.List;

        $r4 := @parameter3: com.fsck.k9.controller.MessagingListener;

        $r6 = r0.<com.fsck.k9.controller.MessagingController: java.util.concurrent.ExecutorService threadPool>;

        $r5 = new com.fsck.k9.controller.MessagingController$8;

        specialinvoke $r5.<com.fsck.k9.controller.MessagingController$8: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.controller.MessagingListener,com.fsck.k9.Account,java.lang.String,java.util.List)>(r0, $r4, $r1, $r2, r3);

        interfaceinvoke $r6.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r5);

        return;
    }
    public void markAllMessagesRead(com.fsck.k9.Account, java.lang.String)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2, $r4;
        java.lang.Object[] $r3;
        com.fsck.k9.controller.MessagingControllerCommands$PendingMarkAllAsRead $r5;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        $r3 = newarray (java.lang.Object)[2];

        $r4 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getDescription()>();

        $r3[0] = $r4;

        $r3[1] = $r2;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Marking all messages in %s:%s as read", $r3);

        $r5 = staticinvoke <com.fsck.k9.controller.MessagingControllerCommands$PendingMarkAllAsRead: com.fsck.k9.controller.MessagingControllerCommands$PendingMarkAllAsRead create(java.lang.String)>($r2);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void queuePendingCommand(com.fsck.k9.Account,com.fsck.k9.controller.MessagingControllerCommands$PendingCommand)>($r1, $r5);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void processPendingCommands(com.fsck.k9.Account)>($r1);

        return;
    }
    public void messagesArrived(com.fsck.k9.Account, com.fsck.k9.mail.Folder, java.util.List, boolean)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mail.Folder $r2;
        java.util.List r3;
        boolean $z0;
        java.util.concurrent.CountDownLatch r4;
        java.lang.Exception r5;
        java.lang.Object[] $r6;
        java.lang.String $r7;
        java.lang.StringBuilder $r8;
        com.fsck.k9.controller.MessagingController$41 $r9;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: com.fsck.k9.mail.Folder;

        r3 := @parameter2: java.util.List;

        $z0 := @parameter3: boolean;

        $r6 = newarray (java.lang.Object)[2];

        $r7 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getDescription()>();

        $r6[0] = $r7;

        $r7 = virtualinvoke $r2.<com.fsck.k9.mail.Folder: java.lang.String getName()>();

        $r6[1] = $r7;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Got new pushed email messages for account %s, folder %s", $r6);

        r4 = new java.util.concurrent.CountDownLatch;

        specialinvoke r4.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Push messageArrived of account ");

        $r7 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getDescription()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", folder ");

        $r7 = virtualinvoke $r2.<com.fsck.k9.mail.Folder: java.lang.String getName()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = new com.fsck.k9.controller.MessagingController$41;

        specialinvoke $r9.<com.fsck.k9.controller.MessagingController$41: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,com.fsck.k9.mail.Folder,java.util.List,boolean,java.util.concurrent.CountDownLatch)>(r0, $r1, $r2, r3, $z0, r4);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void putBackground(java.lang.String,com.fsck.k9.controller.MessagingListener,java.lang.Runnable)>($r7, null, $r9);

     label1:
        virtualinvoke r4.<java.util.concurrent.CountDownLatch: void await()>();

     label2:
        $r6 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("MessagingController.messagesArrivedLatch released", $r6);

        return;

     label3:
        r5 := @caughtexception;

        $r6 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r5, "Interrupted while awaiting latch release", $r6);

        goto label2;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public void moveMessage(com.fsck.k9.Account, java.lang.String, com.fsck.k9.activity.MessageReference, java.lang.String)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2, $r4;
        com.fsck.k9.activity.MessageReference $r3;
        java.util.List $r5;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.fsck.k9.activity.MessageReference;

        $r4 := @parameter3: java.lang.String;

        $r5 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r3);

        virtualinvoke r0.<com.fsck.k9.controller.MessagingController: void moveMessages(com.fsck.k9.Account,java.lang.String,java.util.List,java.lang.String)>($r1, $r2, $r5, $r4);

        return;
    }
    public void moveMessages(com.fsck.k9.Account, java.lang.String, java.util.List, java.lang.String)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2, $r4;
        java.util.List r3;
        com.fsck.k9.controller.MessagingController$25 $r5;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.List;

        $r4 := @parameter3: java.lang.String;

        $r5 = new com.fsck.k9.controller.MessagingController$25;

        specialinvoke $r5.<com.fsck.k9.controller.MessagingController$25: void <init>(com.fsck.k9.controller.MessagingController,java.lang.String,java.lang.String)>(r0, $r2, $r4);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void actOnMessageGroup(com.fsck.k9.Account,java.lang.String,java.util.List,com.fsck.k9.controller.MessagingController$MessageActor)>($r1, $r2, r3, $r5);

        return;
    }
    public void moveMessagesInThread(com.fsck.k9.Account, java.lang.String, java.util.List, java.lang.String)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2, $r4;
        java.util.List r3;
        com.fsck.k9.controller.MessagingController$26 $r5;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.List;

        $r4 := @parameter3: java.lang.String;

        $r5 = new com.fsck.k9.controller.MessagingController$26;

        specialinvoke $r5.<com.fsck.k9.controller.MessagingController$26: void <init>(com.fsck.k9.controller.MessagingController,java.lang.String,java.lang.String)>(r0, $r2, $r4);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void actOnMessageGroup(com.fsck.k9.Account,java.lang.String,java.util.List,com.fsck.k9.controller.MessagingController$MessageActor)>($r1, $r2, r3, $r5);

        return;
    }
    public void notifyUserIfCertificateProblem(com.fsck.k9.Account, java.lang.Exception, boolean)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.Exception $r2;
        boolean $z0, $z1;
        com.fsck.k9.mail.CertificateValidationException r3;
        com.fsck.k9.notification.NotificationController $r4;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.Exception;

        $z0 := @parameter2: boolean;

        $z1 = $r2 instanceof com.fsck.k9.mail.CertificateValidationException;

        if $z1 != 0 goto label1;

        return;

     label1:
        r3 = (com.fsck.k9.mail.CertificateValidationException) $r2;

        $z1 = virtualinvoke r3.<com.fsck.k9.mail.CertificateValidationException: boolean needsUserAttention()>();

        if $z1 == 0 goto label2;

        $r4 = r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.notification.NotificationController notificationController>;

        virtualinvoke $r4.<com.fsck.k9.notification.NotificationController: void showCertificateErrorNotification(com.fsck.k9.Account,boolean)>($r1, $z0);

     label2:
        return;
    }
    void processPendingAppend(com.fsck.k9.controller.MessagingControllerCommands$PendingAppend, com.fsck.k9.Account) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.controller.MessagingControllerCommands$PendingAppend $r1;
        com.fsck.k9.Account $r2;
        java.lang.String r3, r4, $r16;
        com.fsck.k9.mail.Folder r5, $r11;
        com.fsck.k9.mailstore.LocalFolder r6, $r8;
        com.fsck.k9.mailstore.LocalStore $r7;
        com.fsck.k9.mailstore.LocalMessage $r9;
        com.fsck.k9.mail.Store $r10;
        boolean $z0;
        com.fsck.k9.mail.Folder$FolderType $r12;
        int $i0;
        com.fsck.k9.mail.Message r13;
        com.fsck.k9.mail.Flag $r14;
        java.lang.Object[] $r15;
        java.util.Set $r17;
        java.util.Iterator $r18;
        java.lang.Object $r19;
        com.fsck.k9.controller.MessagingListener r20;
        java.lang.Throwable $r21;
        com.fsck.k9.mail.FetchProfile r22;
        com.fsck.k9.mail.FetchProfile$Item $r23;
        java.util.List $r24;
        java.util.Date $r25, $r26;
        com.fsck.k9.Account$Expunge $r27, $r28;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.controller.MessagingControllerCommands$PendingAppend;

        $r2 := @parameter1: com.fsck.k9.Account;

        r5 = null;

        r6 = null;

     label01:
        r3 = $r1.<com.fsck.k9.controller.MessagingControllerCommands$PendingAppend: java.lang.String folder>;

        r4 = $r1.<com.fsck.k9.controller.MessagingControllerCommands$PendingAppend: java.lang.String uid>;

        $r7 = virtualinvoke $r2.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

        $r8 = virtualinvoke $r7.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LocalFolder getFolder(java.lang.String)>(r3);

     label02:
        r6 = $r8;

     label03:
        $r9 = virtualinvoke $r8.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalMessage getMessage(java.lang.String)>(r4);

     label04:
        if $r9 != null goto label05;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(null);

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r8);

        return;

     label05:
        $r10 = virtualinvoke $r2.<com.fsck.k9.Account: com.fsck.k9.mail.Store getRemoteStore()>();

        $r11 = virtualinvoke $r10.<com.fsck.k9.mail.Store: com.fsck.k9.mail.Folder getFolder(java.lang.String)>(r3);

     label06:
        r5 = $r11;

     label07:
        $z0 = virtualinvoke $r11.<com.fsck.k9.mail.Folder: boolean exists()>();

     label08:
        if $z0 != 0 goto label11;

     label09:
        $r12 = <com.fsck.k9.mail.Folder$FolderType: com.fsck.k9.mail.Folder$FolderType HOLDS_MESSAGES>;

        $z0 = virtualinvoke $r11.<com.fsck.k9.mail.Folder: boolean create(com.fsck.k9.mail.Folder$FolderType)>($r12);

     label10:
        if $z0 != 0 goto label11;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r11);

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r8);

        return;

     label11:
        virtualinvoke $r11.<com.fsck.k9.mail.Folder: void open(int)>(0);

        $i0 = virtualinvoke $r11.<com.fsck.k9.mail.Folder: int getMode()>();

     label12:
        if $i0 == 0 goto label13;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r11);

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r8);

        return;

     label13:
        r13 = null;

     label14:
        r4 = virtualinvoke $r9.<com.fsck.k9.mailstore.LocalMessage: java.lang.String getUid()>();

        $z0 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("K9LOCAL:");

     label15:
        if $z0 != 0 goto label17;

     label16:
        r4 = virtualinvoke $r9.<com.fsck.k9.mailstore.LocalMessage: java.lang.String getUid()>();

        r13 = virtualinvoke $r11.<com.fsck.k9.mail.Folder: com.fsck.k9.mail.Message getMessage(java.lang.String)>(r4);

     label17:
        if r13 != null goto label35;

     label18:
        $r14 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag X_REMOTE_COPY_STARTED>;

        $z0 = virtualinvoke $r9.<com.fsck.k9.mailstore.LocalMessage: boolean isSet(com.fsck.k9.mail.Flag)>($r14);

     label19:
        if $z0 == 0 goto label30;

     label20:
        $r15 = newarray (java.lang.Object)[2];

        r4 = virtualinvoke $r9.<com.fsck.k9.mailstore.LocalMessage: java.lang.String getUid()>();

        $r15[0] = r4;

        $r14 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag X_REMOTE_COPY_STARTED>;

        $r15[1] = $r14;

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Local message with uid %s has flag %s  already set, checking for remote message with same message id", $r15);

        $r16 = virtualinvoke $r11.<com.fsck.k9.mail.Folder: java.lang.String getUidFromMessageId(com.fsck.k9.mail.Message)>($r9);

     label21:
        if $r16 == null goto label29;

     label22:
        $r15 = newarray (java.lang.Object)[2];

        $r14 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag X_REMOTE_COPY_STARTED>;

        $r15[0] = $r14;

        $r15[1] = $r16;

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Local message has flag %s already set, and there is a remote message with uid %s, assuming message was already copied and aborting this copy", $r15);

        r4 = virtualinvoke $r9.<com.fsck.k9.mailstore.LocalMessage: java.lang.String getUid()>();

        virtualinvoke $r9.<com.fsck.k9.mailstore.LocalMessage: void setUid(java.lang.String)>($r16);

        virtualinvoke $r8.<com.fsck.k9.mailstore.LocalFolder: void changeUid(com.fsck.k9.mailstore.LocalMessage)>($r9);

        $r17 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r18 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>();

     label23:
        $z0 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

     label24:
        if $z0 == 0 goto label28;

     label25:
        $r19 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r20 = (com.fsck.k9.controller.MessagingListener) $r19;

        $r16 = virtualinvoke $r9.<com.fsck.k9.mailstore.LocalMessage: java.lang.String getUid()>();

        interfaceinvoke r20.<com.fsck.k9.controller.MessagingListener: void messageUidChanged(com.fsck.k9.Account,java.lang.String,java.lang.String,java.lang.String)>($r2, r3, r4, $r16);

     label26:
        goto label23;

     label27:
        $r21 := @caughtexception;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r5);

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r6);

        throw $r21;

     label28:
        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r11);

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r8);

        return;

     label29:
        $r15 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("No remote message with message-id found, proceeding with append", $r15);

     label30:
        r22 = new com.fsck.k9.mail.FetchProfile;

        specialinvoke r22.<com.fsck.k9.mail.FetchProfile: void <init>()>();

        $r23 = <com.fsck.k9.mail.FetchProfile$Item: com.fsck.k9.mail.FetchProfile$Item BODY>;

        virtualinvoke r22.<com.fsck.k9.mail.FetchProfile: boolean add(java.lang.Object)>($r23);

        $r24 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r9);

        virtualinvoke $r8.<com.fsck.k9.mailstore.LocalFolder: void fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)>($r24, r22, null);

        r4 = virtualinvoke $r9.<com.fsck.k9.mailstore.LocalMessage: java.lang.String getUid()>();

        $r14 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag X_REMOTE_COPY_STARTED>;

        virtualinvoke $r9.<com.fsck.k9.mailstore.LocalMessage: void setFlag(com.fsck.k9.mail.Flag,boolean)>($r14, 1);

        $r24 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r9);

        virtualinvoke $r11.<com.fsck.k9.mail.Folder: java.util.Map appendMessages(java.util.List)>($r24);

        virtualinvoke $r8.<com.fsck.k9.mailstore.LocalFolder: void changeUid(com.fsck.k9.mailstore.LocalMessage)>($r9);

        $r17 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r18 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>();

     label31:
        $z0 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

     label32:
        if $z0 == 0 goto label40;

     label33:
        $r19 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r20 = (com.fsck.k9.controller.MessagingListener) $r19;

        $r16 = virtualinvoke $r9.<com.fsck.k9.mailstore.LocalMessage: java.lang.String getUid()>();

        interfaceinvoke r20.<com.fsck.k9.controller.MessagingListener: void messageUidChanged(com.fsck.k9.Account,java.lang.String,java.lang.String,java.lang.String)>($r2, r3, r4, $r16);

     label34:
        goto label31;

     label35:
        r22 = new com.fsck.k9.mail.FetchProfile;

        specialinvoke r22.<com.fsck.k9.mail.FetchProfile: void <init>()>();

        $r23 = <com.fsck.k9.mail.FetchProfile$Item: com.fsck.k9.mail.FetchProfile$Item ENVELOPE>;

        virtualinvoke r22.<com.fsck.k9.mail.FetchProfile: boolean add(java.lang.Object)>($r23);

        $r24 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r13);

        virtualinvoke $r11.<com.fsck.k9.mail.Folder: void fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)>($r24, r22, null);

        $r25 = virtualinvoke $r9.<com.fsck.k9.mailstore.LocalMessage: java.util.Date getInternalDate()>();

        $r26 = virtualinvoke r13.<com.fsck.k9.mail.Message: java.util.Date getInternalDate()>();

     label36:
        if $r26 == null goto label41;

     label37:
        $i0 = virtualinvoke $r26.<java.util.Date: int compareTo(java.util.Date)>($r25);

     label38:
        if $i0 <= 0 goto label41;

     label39:
        virtualinvoke $r9.<com.fsck.k9.mailstore.LocalMessage: void destroy()>();

     label40:
        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r11);

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r8);

        return;

     label41:
        r22 = new com.fsck.k9.mail.FetchProfile;

        specialinvoke r22.<com.fsck.k9.mail.FetchProfile: void <init>()>();

        $r23 = <com.fsck.k9.mail.FetchProfile$Item: com.fsck.k9.mail.FetchProfile$Item BODY>;

        virtualinvoke r22.<com.fsck.k9.mail.FetchProfile: boolean add(java.lang.Object)>($r23);

        $r24 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r9);

        virtualinvoke $r8.<com.fsck.k9.mailstore.LocalFolder: void fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)>($r24, r22, null);

        r4 = virtualinvoke $r9.<com.fsck.k9.mailstore.LocalMessage: java.lang.String getUid()>();

        $r14 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag X_REMOTE_COPY_STARTED>;

        virtualinvoke $r9.<com.fsck.k9.mailstore.LocalMessage: void setFlag(com.fsck.k9.mail.Flag,boolean)>($r14, 1);

        $r24 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r9);

        virtualinvoke $r11.<com.fsck.k9.mail.Folder: java.util.Map appendMessages(java.util.List)>($r24);

        virtualinvoke $r8.<com.fsck.k9.mailstore.LocalFolder: void changeUid(com.fsck.k9.mailstore.LocalMessage)>($r9);

        $r17 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r18 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>();

     label42:
        $z0 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

     label43:
        if $z0 == 0 goto label46;

     label44:
        $r19 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r20 = (com.fsck.k9.controller.MessagingListener) $r19;

        $r16 = virtualinvoke $r9.<com.fsck.k9.mailstore.LocalMessage: java.lang.String getUid()>();

        interfaceinvoke r20.<com.fsck.k9.controller.MessagingListener: void messageUidChanged(com.fsck.k9.Account,java.lang.String,java.lang.String,java.lang.String)>($r2, r3, r4, $r16);

     label45:
        goto label42;

     label46:
        if $r26 == null goto label40;

     label47:
        $r14 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag DELETED>;

        virtualinvoke r13.<com.fsck.k9.mail.Message: void setFlag(com.fsck.k9.mail.Flag,boolean)>($r14, 1);

        $r27 = <com.fsck.k9.Account$Expunge: com.fsck.k9.Account$Expunge EXPUNGE_IMMEDIATELY>;

        $r28 = virtualinvoke $r2.<com.fsck.k9.Account: com.fsck.k9.Account$Expunge getExpungePolicy()>();

     label48:
        if $r27 != $r28 goto label40;

     label49:
        virtualinvoke $r11.<com.fsck.k9.mail.Folder: void expunge()>();

     label50:
        goto label40;

        catch java.lang.Throwable from label01 to label02 with label27;
        catch java.lang.Throwable from label03 to label04 with label27;
        catch java.lang.Throwable from label05 to label06 with label27;
        catch java.lang.Throwable from label07 to label08 with label27;
        catch java.lang.Throwable from label09 to label10 with label27;
        catch java.lang.Throwable from label11 to label12 with label27;
        catch java.lang.Throwable from label14 to label15 with label27;
        catch java.lang.Throwable from label16 to label17 with label27;
        catch java.lang.Throwable from label18 to label19 with label27;
        catch java.lang.Throwable from label20 to label21 with label27;
        catch java.lang.Throwable from label22 to label24 with label27;
        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label29 to label32 with label27;
        catch java.lang.Throwable from label33 to label34 with label27;
        catch java.lang.Throwable from label35 to label36 with label27;
        catch java.lang.Throwable from label37 to label38 with label27;
        catch java.lang.Throwable from label39 to label40 with label27;
        catch java.lang.Throwable from label41 to label43 with label27;
        catch java.lang.Throwable from label44 to label45 with label27;
        catch java.lang.Throwable from label47 to label48 with label27;
        catch java.lang.Throwable from label49 to label50 with label27;
    }
    void processPendingEmptyTrash(com.fsck.k9.Account) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mail.Store $r2;
        java.lang.String $r3;
        com.fsck.k9.mail.Folder $r4;
        boolean $z0;
        com.fsck.k9.mail.Flag $r5;
        java.util.Set $r6;
        com.fsck.k9.Account$Expunge $r7, $r8;
        java.lang.Throwable $r9;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mail.Store getRemoteStore()>();

        $r3 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getTrashFolderName()>();

        $r4 = virtualinvoke $r2.<com.fsck.k9.mail.Store: com.fsck.k9.mail.Folder getFolder(java.lang.String)>($r3);

     label1:
        $z0 = virtualinvoke $r4.<com.fsck.k9.mail.Folder: boolean exists()>();

     label2:
        if $z0 == 0 goto label7;

     label3:
        virtualinvoke $r4.<com.fsck.k9.mail.Folder: void open(int)>(0);

        $r5 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag DELETED>;

        $r6 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r5);

        virtualinvoke $r4.<com.fsck.k9.mail.Folder: void setFlags(java.util.Set,boolean)>($r6, 1);

        $r7 = <com.fsck.k9.Account$Expunge: com.fsck.k9.Account$Expunge EXPUNGE_IMMEDIATELY>;

        $r8 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.Account$Expunge getExpungePolicy()>();

     label4:
        if $r7 != $r8 goto label6;

     label5:
        virtualinvoke $r4.<com.fsck.k9.mail.Folder: void expunge()>();

     label6:
        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void synchronizeFolder(com.fsck.k9.Account,com.fsck.k9.mail.Folder,boolean,long,com.fsck.k9.controller.MessagingListener)>($r1, $r4, 1, 0L, null);

        virtualinvoke r0.<com.fsck.k9.controller.MessagingController: void compact(com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener)>($r1, null);

     label7:
        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r4);

        return;

     label8:
        $r9 := @caughtexception;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r4);

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label7 with label8;
    }
    void processPendingExpunge(com.fsck.k9.controller.MessagingControllerCommands$PendingExpunge, com.fsck.k9.Account) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.controller.MessagingControllerCommands$PendingExpunge $r1;
        com.fsck.k9.Account $r2;
        java.lang.String r3;
        java.lang.Object[] $r4;
        com.fsck.k9.mail.Store $r5;
        com.fsck.k9.mail.Folder $r6;
        boolean $z0;
        int $i0;
        java.lang.Throwable $r7;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.controller.MessagingControllerCommands$PendingExpunge;

        $r2 := @parameter1: com.fsck.k9.Account;

        r3 = $r1.<com.fsck.k9.controller.MessagingControllerCommands$PendingExpunge: java.lang.String folder>;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r3;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("processPendingExpunge: folder = %s", $r4);

        $r5 = virtualinvoke $r2.<com.fsck.k9.Account: com.fsck.k9.mail.Store getRemoteStore()>();

        $r6 = virtualinvoke $r5.<com.fsck.k9.mail.Store: com.fsck.k9.mail.Folder getFolder(java.lang.String)>(r3);

     label1:
        $z0 = virtualinvoke $r6.<com.fsck.k9.mail.Folder: boolean exists()>();

     label2:
        if $z0 != 0 goto label3;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r6);

        return;

     label3:
        virtualinvoke $r6.<com.fsck.k9.mail.Folder: void open(int)>(0);

        $i0 = virtualinvoke $r6.<com.fsck.k9.mail.Folder: int getMode()>();

     label4:
        if $i0 == 0 goto label5;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r6);

        return;

     label5:
        virtualinvoke $r6.<com.fsck.k9.mail.Folder: void expunge()>();

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r3;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("processPendingExpunge: complete for folder = %s", $r4);

     label6:
        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r6);

        return;

     label7:
        $r7 := @caughtexception;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r6);

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }
    void processPendingMarkAllAsRead(com.fsck.k9.controller.MessagingControllerCommands$PendingMarkAllAsRead, com.fsck.k9.Account) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.controller.MessagingControllerCommands$PendingMarkAllAsRead $r1;
        com.fsck.k9.Account $r2;
        java.lang.String r3;
        java.lang.UnsupportedOperationException r4;
        com.fsck.k9.mail.Folder r5, $r8;
        com.fsck.k9.mailstore.LocalFolder r6, $r9;
        com.fsck.k9.mailstore.LocalStore $r7;
        java.util.List $r10;
        java.util.Iterator $r11;
        boolean $z0;
        java.lang.Object $r12;
        com.fsck.k9.mail.Message r13;
        com.fsck.k9.mail.Flag $r14;
        java.lang.Object[] $r15;
        java.util.Set $r16;
        com.fsck.k9.controller.MessagingListener r17;
        java.lang.Throwable $r18;
        com.fsck.k9.mail.Store $r19;
        int $i0;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.controller.MessagingControllerCommands$PendingMarkAllAsRead;

        $r2 := @parameter1: com.fsck.k9.Account;

        r3 = $r1.<com.fsck.k9.controller.MessagingControllerCommands$PendingMarkAllAsRead: java.lang.String folder>;

        r5 = null;

        r6 = null;

     label01:
        $r7 = virtualinvoke $r2.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

        $r8 = virtualinvoke $r7.<com.fsck.k9.mail.Store: com.fsck.k9.mail.Folder getFolder(java.lang.String)>(r3);

     label02:
        $r9 = (com.fsck.k9.mailstore.LocalFolder) $r8;

     label03:
        r6 = $r9;

     label04:
        virtualinvoke $r9.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(0);

        $r10 = virtualinvoke $r9.<com.fsck.k9.mailstore.LocalFolder: java.util.List getMessages(com.fsck.k9.mail.MessageRetrievalListener,boolean)>(null, 0);

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

     label06:
        if $z0 == 0 goto label17;

     label07:
        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

     label08:
        r13 = (com.fsck.k9.mail.Message) $r12;

        $r14 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag SEEN>;

     label09:
        $z0 = virtualinvoke r13.<com.fsck.k9.mail.Message: boolean isSet(com.fsck.k9.mail.Flag)>($r14);

     label10:
        if $z0 != 0 goto label05;

     label11:
        $r14 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag SEEN>;

     label12:
        virtualinvoke r13.<com.fsck.k9.mail.Message: void setFlag(com.fsck.k9.mail.Flag,boolean)>($r14, 1);

     label13:
        goto label05;

     label14:
        r4 := @caughtexception;

     label15:
        $r15 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void w(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r4, "Could not mark all server-side as read because store doesn\'t support operation", $r15);

     label16:
        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r6);

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r5);

        return;

     label17:
        $r16 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r11 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();

     label18:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

     label19:
        if $z0 == 0 goto label25;

     label20:
        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

     label21:
        r17 = (com.fsck.k9.controller.MessagingListener) $r12;

     label22:
        interfaceinvoke r17.<com.fsck.k9.controller.MessagingListener: void folderStatusChanged(com.fsck.k9.Account,java.lang.String,int)>($r2, r3, 0);

     label23:
        goto label18;

     label24:
        $r18 := @caughtexception;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r6);

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r5);

        throw $r18;

     label25:
        $r19 = virtualinvoke $r2.<com.fsck.k9.Account: com.fsck.k9.mail.Store getRemoteStore()>();

        $r8 = virtualinvoke $r19.<com.fsck.k9.mail.Store: com.fsck.k9.mail.Folder getFolder(java.lang.String)>(r3);

     label26:
        r5 = $r8;

     label27:
        $z0 = virtualinvoke $r8.<com.fsck.k9.mail.Folder: boolean exists()>();

     label28:
        if $z0 == 0 goto label32;

     label29:
        $r14 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag SEEN>;

     label30:
        $z0 = virtualinvoke $r8.<com.fsck.k9.mail.Folder: boolean isFlagSupported(com.fsck.k9.mail.Flag)>($r14);

     label31:
        if $z0 != 0 goto label33;

     label32:
        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r9);

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r8);

        return;

     label33:
        virtualinvoke $r8.<com.fsck.k9.mail.Folder: void open(int)>(0);

        $i0 = virtualinvoke $r8.<com.fsck.k9.mail.Folder: int getMode()>();

     label34:
        if $i0 == 0 goto label35;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r9);

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r8);

        return;

     label35:
        $r14 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag SEEN>;

     label36:
        $r16 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r14);

        virtualinvoke $r8.<com.fsck.k9.mail.Folder: void setFlags(java.util.Set,boolean)>($r16, 1);

        virtualinvoke $r8.<com.fsck.k9.mail.Folder: void close()>();

     label37:
        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r9);

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r8);

        return;

        catch java.lang.UnsupportedOperationException from label01 to label02 with label14;
        catch java.lang.UnsupportedOperationException from label04 to label06 with label14;
        catch java.lang.UnsupportedOperationException from label07 to label08 with label14;
        catch java.lang.UnsupportedOperationException from label09 to label10 with label14;
        catch java.lang.UnsupportedOperationException from label12 to label13 with label14;
        catch java.lang.Throwable from label01 to label03 with label24;
        catch java.lang.Throwable from label04 to label06 with label24;
        catch java.lang.Throwable from label07 to label10 with label24;
        catch java.lang.Throwable from label11 to label13 with label24;
        catch java.lang.Throwable from label15 to label16 with label24;
        catch java.lang.UnsupportedOperationException from label17 to label19 with label14;
        catch java.lang.UnsupportedOperationException from label20 to label21 with label14;
        catch java.lang.UnsupportedOperationException from label22 to label23 with label14;
        catch java.lang.Throwable from label17 to label19 with label24;
        catch java.lang.Throwable from label20 to label23 with label24;
        catch java.lang.UnsupportedOperationException from label25 to label26 with label14;
        catch java.lang.UnsupportedOperationException from label27 to label28 with label14;
        catch java.lang.UnsupportedOperationException from label30 to label31 with label14;
        catch java.lang.Throwable from label25 to label26 with label24;
        catch java.lang.Throwable from label27 to label28 with label24;
        catch java.lang.Throwable from label29 to label31 with label24;
        catch java.lang.UnsupportedOperationException from label33 to label34 with label14;
        catch java.lang.Throwable from label33 to label34 with label24;
        catch java.lang.UnsupportedOperationException from label36 to label37 with label14;
        catch java.lang.Throwable from label35 to label37 with label24;
    }
    void processPendingMoveOrCopy(com.fsck.k9.controller.MessagingControllerCommands$PendingMoveOrCopy, com.fsck.k9.Account) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.controller.MessagingControllerCommands$PendingMoveOrCopy $r1;
        com.fsck.k9.Account $r2;
        java.lang.String r3, $r7, r18, $r27;
        boolean z0, $z1;
        java.util.ArrayList r4;
        com.fsck.k9.mail.Folder r5, r6, $r9, $r11;
        com.fsck.k9.mail.Store $r8;
        com.fsck.k9.mailstore.LocalStore $r10;
        com.fsck.k9.mailstore.LocalFolder r12;
        java.util.Map $r13, $r30;
        java.util.Set $r14;
        java.util.Collection r15;
        java.util.Iterator $r16, $r33;
        java.lang.Object $r17;
        com.fsck.k9.mail.Message $r19;
        java.lang.Throwable $r20;
        java.util.List $r21;
        com.fsck.k9.mail.MessagingException $r22;
        java.lang.StringBuilder $r23;
        int $i0;
        java.lang.Object[] $r24;
        java.lang.Integer $r25;
        java.lang.Boolean $r26;
        com.fsck.k9.Account$Expunge $r28, $r29;
        java.util.Map$Entry r31;
        com.fsck.k9.mailstore.LocalMessage $r32;
        com.fsck.k9.controller.MessagingListener r34;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.controller.MessagingControllerCommands$PendingMoveOrCopy;

        $r2 := @parameter1: com.fsck.k9.Account;

        r5 = null;

        r6 = null;

     label01:
        $r7 = $r1.<com.fsck.k9.controller.MessagingControllerCommands$PendingMoveOrCopy: java.lang.String srcFolder>;

        r3 = $r1.<com.fsck.k9.controller.MessagingControllerCommands$PendingMoveOrCopy: java.lang.String destFolder>;

        z0 = $r1.<com.fsck.k9.controller.MessagingControllerCommands$PendingMoveOrCopy: boolean isCopy>;

        $r8 = virtualinvoke $r2.<com.fsck.k9.Account: com.fsck.k9.mail.Store getRemoteStore()>();

        $r9 = virtualinvoke $r8.<com.fsck.k9.mail.Store: com.fsck.k9.mail.Folder getFolder(java.lang.String)>($r7);

     label02:
        r5 = $r9;

     label03:
        $r10 = virtualinvoke $r2.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

        $r11 = virtualinvoke $r10.<com.fsck.k9.mail.Store: com.fsck.k9.mail.Folder getFolder(java.lang.String)>(r3);

        r12 = (com.fsck.k9.mailstore.LocalFolder) $r11;

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

        $r13 = $r1.<com.fsck.k9.controller.MessagingControllerCommands$PendingMoveOrCopy: java.util.Map newUidMap>;

     label04:
        if $r13 == null goto label15;

     label05:
        $r13 = $r1.<com.fsck.k9.controller.MessagingControllerCommands$PendingMoveOrCopy: java.util.Map newUidMap>;

        $r14 = interfaceinvoke $r13.<java.util.Map: java.util.Set keySet()>();

     label06:
        r15 = $r14;

     label07:
        $r16 = interfaceinvoke r15.<java.util.Collection: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

     label09:
        if $z1 == 0 goto label17;

     label10:
        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r18 = (java.lang.String) $r17;

        $z1 = virtualinvoke r18.<java.lang.String: boolean startsWith(java.lang.String)>("K9LOCAL:");

     label11:
        if $z1 != 0 goto label08;

     label12:
        $r19 = virtualinvoke $r9.<com.fsck.k9.mail.Folder: com.fsck.k9.mail.Message getMessage(java.lang.String)>(r18);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r19);

     label13:
        goto label08;

     label14:
        $r20 := @caughtexception;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r5);

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r6);

        throw $r20;

     label15:
        $r21 = $r1.<com.fsck.k9.controller.MessagingControllerCommands$PendingMoveOrCopy: java.util.List uids>;

     label16:
        r15 = $r21;

        goto label07;

     label17:
        $z1 = virtualinvoke $r9.<com.fsck.k9.mail.Folder: boolean exists()>();

     label18:
        if $z1 != 0 goto label20;

     label19:
        $r22 = new com.fsck.k9.mail.MessagingException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processingPendingMoveOrCopy: remoteFolder ");

        $r23 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r23 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist");

        r3 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String,boolean)>(r3, 1);

        throw $r22;

     label20:
        virtualinvoke $r9.<com.fsck.k9.mail.Folder: void open(int)>(0);

        $i0 = virtualinvoke $r9.<com.fsck.k9.mail.Folder: int getMode()>();

     label21:
        if $i0 == 0 goto label23;

     label22:
        $r22 = new com.fsck.k9.mail.MessagingException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processingPendingMoveOrCopy: could not open remoteSrcFolder ");

        $r23 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r23 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" read/write");

        r3 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String,boolean)>(r3, 1);

        throw $r22;

     label23:
        $r24 = newarray (java.lang.Object)[4];

        $r24[0] = $r7;

        $i0 = interfaceinvoke r4.<java.util.List: int size()>();

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r24[1] = $r25;

        $r24[2] = r3;

        $r26 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r24[3] = $r26;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("processingPendingMoveOrCopy: source folder = %s, %d messages, destination folder = %s, isCopy = %s", $r24);

     label24:
        $r13 = null;

        if z0 != 0 goto label52;

     label25:
        r18 = virtualinvoke $r2.<com.fsck.k9.Account: java.lang.String getTrashFolderName()>();

        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(r18);

     label26:
        if $z1 == 0 goto label52;

     label27:
        $r24 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("processingPendingMoveOrCopy doing special case for deleting message", $r24);

     label28:
        r18 = r3;

        $r27 = "-NONE-";

     label29:
        $z1 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>(r3);

     label30:
        if $z1 == 0 goto label31;

        r18 = null;

     label31:
        virtualinvoke $r9.<com.fsck.k9.mail.Folder: void delete(java.util.List,java.lang.String)>(r4, r18);

     label32:
        if z0 != 0 goto label36;

     label33:
        $r28 = <com.fsck.k9.Account$Expunge: com.fsck.k9.Account$Expunge EXPUNGE_IMMEDIATELY>;

        $r29 = virtualinvoke $r2.<com.fsck.k9.Account: com.fsck.k9.Account$Expunge getExpungePolicy()>();

     label34:
        if $r28 != $r29 goto label36;

     label35:
        $r24 = newarray (java.lang.Object)[2];

        r18 = virtualinvoke $r2.<com.fsck.k9.Account: java.lang.String getDescription()>();

        $r24[0] = r18;

        $r24[1] = $r7;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("processingPendingMoveOrCopy expunging folder %s:%s", $r24);

        virtualinvoke $r9.<com.fsck.k9.mail.Folder: void expunge()>();

     label36:
        $r30 = $r1.<com.fsck.k9.controller.MessagingControllerCommands$PendingMoveOrCopy: java.util.Map newUidMap>;

     label37:
        if $r30 == null goto label58;

        if $r13 == null goto label58;

     label38:
        z0 = interfaceinvoke $r13.<java.util.Map: boolean isEmpty()>();

     label39:
        if z0 != 0 goto label58;

     label40:
        $r14 = interfaceinvoke $r13.<java.util.Map: java.util.Set entrySet()>();

        $r16 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label41:
        z0 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

     label42:
        if z0 == 0 goto label58;

     label43:
        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r31 = (java.util.Map$Entry) $r17;

        $r17 = interfaceinvoke r31.<java.util.Map$Entry: java.lang.Object getKey()>();

        r18 = (java.lang.String) $r17;

        $r17 = interfaceinvoke r31.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (java.lang.String) $r17;

        $r13 = $r1.<com.fsck.k9.controller.MessagingControllerCommands$PendingMoveOrCopy: java.util.Map newUidMap>;

        $r17 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r18);

        r18 = (java.lang.String) $r17;

     label44:
        if r18 == null goto label41;

     label45:
        $r32 = virtualinvoke r12.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalMessage getMessage(java.lang.String)>(r18);

     label46:
        if $r32 == null goto label41;

     label47:
        virtualinvoke $r32.<com.fsck.k9.mail.Message: void setUid(java.lang.String)>($r7);

        virtualinvoke r12.<com.fsck.k9.mailstore.LocalFolder: void changeUid(com.fsck.k9.mailstore.LocalMessage)>($r32);

        $r14 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r33 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label48:
        z0 = interfaceinvoke $r33.<java.util.Iterator: boolean hasNext()>();

     label49:
        if z0 == 0 goto label41;

     label50:
        $r17 = interfaceinvoke $r33.<java.util.Iterator: java.lang.Object next()>();

        r34 = (com.fsck.k9.controller.MessagingListener) $r17;

        interfaceinvoke r34.<com.fsck.k9.controller.MessagingListener: void messageUidChanged(com.fsck.k9.Account,java.lang.String,java.lang.String,java.lang.String)>($r2, r3, r18, $r7);

     label51:
        goto label48;

     label52:
        $r11 = virtualinvoke $r8.<com.fsck.k9.mail.Store: com.fsck.k9.mail.Folder getFolder(java.lang.String)>(r3);

     label53:
        r6 = $r11;

        if z0 == 0 goto label56;

     label54:
        $r13 = virtualinvoke $r9.<com.fsck.k9.mail.Folder: java.util.Map copyMessages(java.util.List,com.fsck.k9.mail.Folder)>(r4, $r11);

     label55:
        goto label32;

     label56:
        $r13 = virtualinvoke $r9.<com.fsck.k9.mail.Folder: java.util.Map moveMessages(java.util.List,com.fsck.k9.mail.Folder)>(r4, $r11);

     label57:
        goto label32;

     label58:
        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r9);

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r6);

        return;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.Throwable from label17 to label18 with label14;
        catch java.lang.Throwable from label19 to label21 with label14;
        catch java.lang.Throwable from label22 to label24 with label14;
        catch java.lang.Throwable from label25 to label26 with label14;
        catch java.lang.Throwable from label27 to label28 with label14;
        catch java.lang.Throwable from label29 to label30 with label14;
        catch java.lang.Throwable from label31 to label32 with label14;
        catch java.lang.Throwable from label33 to label34 with label14;
        catch java.lang.Throwable from label35 to label37 with label14;
        catch java.lang.Throwable from label38 to label39 with label14;
        catch java.lang.Throwable from label40 to label42 with label14;
        catch java.lang.Throwable from label43 to label44 with label14;
        catch java.lang.Throwable from label45 to label46 with label14;
        catch java.lang.Throwable from label47 to label49 with label14;
        catch java.lang.Throwable from label50 to label51 with label14;
        catch java.lang.Throwable from label52 to label53 with label14;
        catch java.lang.Throwable from label54 to label55 with label14;
        catch java.lang.Throwable from label56 to label57 with label14;
    }
    void processPendingSetFlag(com.fsck.k9.controller.MessagingControllerCommands$PendingSetFlag, com.fsck.k9.Account) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.controller.MessagingControllerCommands$PendingSetFlag $r1;
        com.fsck.k9.Account $r2;
        com.fsck.k9.mail.Flag r3;
        java.lang.String r4;
        java.util.ArrayList r5;
        boolean z0, $z1;
        com.fsck.k9.mail.Store $r6;
        com.fsck.k9.mail.Folder $r7;
        int $i0;
        java.util.List $r8;
        java.util.Iterator $r9;
        java.lang.Object $r10;
        com.fsck.k9.mail.Message $r11;
        java.lang.Throwable $r12;
        java.util.Set $r13;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.controller.MessagingControllerCommands$PendingSetFlag;

        $r2 := @parameter1: com.fsck.k9.Account;

        r4 = $r1.<com.fsck.k9.controller.MessagingControllerCommands$PendingSetFlag: java.lang.String folder>;

        z0 = $r1.<com.fsck.k9.controller.MessagingControllerCommands$PendingSetFlag: boolean newState>;

        r3 = $r1.<com.fsck.k9.controller.MessagingControllerCommands$PendingSetFlag: com.fsck.k9.mail.Flag flag>;

        $r6 = virtualinvoke $r2.<com.fsck.k9.Account: com.fsck.k9.mail.Store getRemoteStore()>();

        $r7 = virtualinvoke $r6.<com.fsck.k9.mail.Store: com.fsck.k9.mail.Folder getFolder(java.lang.String)>(r4);

        $z1 = virtualinvoke $r7.<com.fsck.k9.mail.Folder: boolean exists()>();

        if $z1 == 0 goto label15;

        $z1 = virtualinvoke $r7.<com.fsck.k9.mail.Folder: boolean isFlagSupported(com.fsck.k9.mail.Flag)>(r3);

        if $z1 != 0 goto label01;

        return;

     label01:
        virtualinvoke $r7.<com.fsck.k9.mail.Folder: void open(int)>(0);

        $i0 = virtualinvoke $r7.<com.fsck.k9.mail.Folder: int getMode()>();

     label02:
        if $i0 == 0 goto label03;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r7);

        return;

     label03:
        r5 = new java.util.ArrayList;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

        $r8 = $r1.<com.fsck.k9.controller.MessagingControllerCommands$PendingSetFlag: java.util.List uids>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

     label05:
        if $z1 == 0 goto label11;

     label06:
        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r10;

        $z1 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("K9LOCAL:");

     label07:
        if $z1 != 0 goto label04;

     label08:
        $r11 = virtualinvoke $r7.<com.fsck.k9.mail.Folder: com.fsck.k9.mail.Message getMessage(java.lang.String)>(r4);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r11);

     label09:
        goto label04;

     label10:
        $r12 := @caughtexception;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r7);

        throw $r12;

     label11:
        $z1 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>();

     label12:
        if $z1 == 0 goto label13;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r7);

        return;

     label13:
        $r13 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r3);

        virtualinvoke $r7.<com.fsck.k9.mail.Folder: void setFlags(java.util.List,java.util.Set,boolean)>(r5, $r13, z0);

     label14:
        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r7);

     label15:
        return;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label13 to label14 with label10;
    }
    public void recreate(com.fsck.k9.Account, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.controller.MessagingListener $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        com.fsck.k9.controller.MessagingController$40 $r5;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: com.fsck.k9.controller.MessagingListener;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("recreate:");

        $r4 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getDescription()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new com.fsck.k9.controller.MessagingController$40;

        specialinvoke $r5.<com.fsck.k9.controller.MessagingController$40: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener)>(r0, $r1, $r2);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void putBackground(java.lang.String,com.fsck.k9.controller.MessagingListener,java.lang.Runnable)>($r4, $r2, $r5);

        return;
    }
    public void refreshListener(com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.controller.MessagingListener $r1;
        com.fsck.k9.controller.MemorizingMessagingListener $r2;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.controller.MessagingListener;

        if $r1 == null goto label1;

        $r2 = r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.controller.MemorizingMessagingListener memorizingMessagingListener>;

        virtualinvoke $r2.<com.fsck.k9.controller.MemorizingMessagingListener: void refreshOther(com.fsck.k9.controller.MessagingListener)>($r1);

     label1:
        return;
    }
    void refreshRemoteSynchronous(com.fsck.k9.Account, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.controller.MessagingListener $r2, r20;
        java.lang.Exception r3;
        java.util.LinkedList r4;
        java.util.HashSet r5, r6;
        java.util.List r7, $r9, $r11;
        com.fsck.k9.mail.Store $r8;
        com.fsck.k9.mailstore.LocalStore $r10;
        java.util.Iterator $r12;
        boolean $z0;
        java.lang.Object $r13;
        com.fsck.k9.mail.Folder r14;
        java.lang.String $r15, $r19;
        java.util.Set $r16;
        java.lang.Throwable $r17;
        com.fsck.k9.mailstore.LocalFolder $r18;
        int $i0;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: com.fsck.k9.controller.MessagingListener;

        r7 = null;

     label01:
        $r8 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mail.Store getRemoteStore()>();

        $r9 = virtualinvoke $r8.<com.fsck.k9.mail.Store: java.util.List getPersonalNamespaces(boolean)>(0);

        $r10 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

     label02:
        r6 = new java.util.HashSet;

     label03:
        specialinvoke r6.<java.util.HashSet: void <init>()>();

     label04:
        r4 = new java.util.LinkedList;

     label05:
        specialinvoke r4.<java.util.LinkedList: void <init>()>();

        $r11 = virtualinvoke $r10.<com.fsck.k9.mailstore.LocalStore: java.util.List getPersonalNamespaces(boolean)>(0);

     label06:
        r7 = $r11;

     label07:
        r5 = new java.util.HashSet;

     label08:
        specialinvoke r5.<java.util.HashSet: void <init>()>();

        $r12 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

     label10:
        if $z0 == 0 goto label21;

     label11:
        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (com.fsck.k9.mail.Folder) $r13;

        $r15 = virtualinvoke r14.<com.fsck.k9.mail.Folder: java.lang.String getName()>();

        interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>($r15);

     label12:
        goto label09;

     label13:
        r3 := @caughtexception;

     label14:
        $r16 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners(com.fsck.k9.controller.MessagingListener)>($r2);

        $r12 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();

     label15:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

     label16:
        if $z0 == 0 goto label59;

     label17:
        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (com.fsck.k9.controller.MessagingListener) $r13;

        interfaceinvoke $r2.<com.fsck.k9.controller.MessagingListener: void listFoldersFailed(com.fsck.k9.Account,java.lang.String)>($r1, "");

     label18:
        goto label15;

     label19:
        $r17 := @caughtexception;

        if r7 == null goto label62;

        $r12 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>();

     label20:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label62;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (com.fsck.k9.mail.Folder) $r13;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r14);

        goto label20;

     label21:
        $r12 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label22:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

     label23:
        if $z0 == 0 goto label29;

     label24:
        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (com.fsck.k9.mail.Folder) $r13;

        $r15 = virtualinvoke r14.<com.fsck.k9.mail.Folder: java.lang.String getName()>();

        $z0 = interfaceinvoke r5.<java.util.Set: boolean contains(java.lang.Object)>($r15);

     label25:
        if $z0 != 0 goto label27;

     label26:
        $r15 = virtualinvoke r14.<com.fsck.k9.mail.Folder: java.lang.String getName()>();

        $r18 = virtualinvoke $r10.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LocalFolder getFolder(java.lang.String)>($r15);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r18);

     label27:
        $r15 = virtualinvoke r14.<com.fsck.k9.mail.Folder: java.lang.String getName()>();

        interfaceinvoke r6.<java.util.Set: boolean add(java.lang.Object)>($r15);

     label28:
        goto label22;

     label29:
        $i0 = virtualinvoke $r1.<com.fsck.k9.Account: int getDisplayCount()>();

        virtualinvoke $r10.<com.fsck.k9.mailstore.LocalStore: void createFolders(java.util.List,int)>(r4, $i0);

        $r9 = virtualinvoke $r10.<com.fsck.k9.mailstore.LocalStore: java.util.List getPersonalNamespaces(boolean)>(0);

     label30:
        r7 = $r9;

     label31:
        $r12 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label32:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

     label33:
        if $z0 == 0 goto label45;

     label34:
        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (com.fsck.k9.mail.Folder) $r13;

        $r15 = virtualinvoke r14.<com.fsck.k9.mail.Folder: java.lang.String getName()>();

     label35:
        $r19 = "-NONE-";

     label36:
        $z0 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r15);

     label37:
        if $z0 == 0 goto label39;

     label38:
        virtualinvoke r14.<com.fsck.k9.mail.Folder: void delete(boolean)>(0);

     label39:
        $z0 = virtualinvoke $r1.<com.fsck.k9.Account: boolean isSpecialFolder(java.lang.String)>($r15);

     label40:
        if $z0 != 0 goto label32;

     label41:
        $z0 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>($r15);

     label42:
        if $z0 != 0 goto label32;

     label43:
        virtualinvoke r14.<com.fsck.k9.mail.Folder: void delete(boolean)>(0);

     label44:
        goto label32;

     label45:
        $r9 = virtualinvoke $r10.<com.fsck.k9.mailstore.LocalStore: java.util.List getPersonalNamespaces(boolean)>(0);

     label46:
        r7 = $r9;

     label47:
        $r16 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners(com.fsck.k9.controller.MessagingListener)>($r2);

        $r12 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();

     label48:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

     label49:
        if $z0 == 0 goto label52;

     label50:
        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r20 = (com.fsck.k9.controller.MessagingListener) $r13;

        interfaceinvoke r20.<com.fsck.k9.controller.MessagingListener: void listFolders(com.fsck.k9.Account,java.util.List)>($r1, $r9);

     label51:
        goto label48;

     label52:
        $r16 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners(com.fsck.k9.controller.MessagingListener)>($r2);

        $r12 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();

     label53:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

     label54:
        if $z0 == 0 goto label57;

     label55:
        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r20 = (com.fsck.k9.controller.MessagingListener) $r13;

        interfaceinvoke r20.<com.fsck.k9.controller.MessagingListener: void listFoldersFinished(com.fsck.k9.Account)>($r1);

     label56:
        goto label53;

     label57:
        if $r9 == null goto label63;

        $r12 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label58:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label63;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (com.fsck.k9.mail.Folder) $r13;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r14);

        goto label58;

     label59:
        staticinvoke <timber.log.Timber: void e(java.lang.Throwable)>(r3);

     label60:
        if r7 == null goto label63;

        $r12 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>();

     label61:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label63;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (com.fsck.k9.mail.Folder) $r13;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r14);

        goto label61;

     label62:
        throw $r17;

     label63:
        return;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label04 with label13;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.lang.Exception from label08 to label10 with label13;
        catch java.lang.Exception from label11 to label12 with label13;
        catch java.lang.Throwable from label01 to label06 with label19;
        catch java.lang.Throwable from label07 to label10 with label19;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label14 to label16 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Exception from label21 to label23 with label13;
        catch java.lang.Exception from label24 to label25 with label13;
        catch java.lang.Exception from label26 to label28 with label13;
        catch java.lang.Exception from label29 to label30 with label13;
        catch java.lang.Exception from label31 to label33 with label13;
        catch java.lang.Exception from label34 to label35 with label13;
        catch java.lang.Exception from label36 to label37 with label13;
        catch java.lang.Exception from label38 to label40 with label13;
        catch java.lang.Exception from label41 to label42 with label13;
        catch java.lang.Exception from label43 to label44 with label13;
        catch java.lang.Exception from label45 to label46 with label13;
        catch java.lang.Exception from label47 to label49 with label13;
        catch java.lang.Exception from label50 to label51 with label13;
        catch java.lang.Exception from label52 to label54 with label13;
        catch java.lang.Exception from label55 to label56 with label13;
        catch java.lang.Throwable from label21 to label23 with label19;
        catch java.lang.Throwable from label24 to label25 with label19;
        catch java.lang.Throwable from label26 to label28 with label19;
        catch java.lang.Throwable from label29 to label30 with label19;
        catch java.lang.Throwable from label31 to label33 with label19;
        catch java.lang.Throwable from label34 to label35 with label19;
        catch java.lang.Throwable from label36 to label37 with label19;
        catch java.lang.Throwable from label38 to label40 with label19;
        catch java.lang.Throwable from label41 to label42 with label19;
        catch java.lang.Throwable from label43 to label44 with label19;
        catch java.lang.Throwable from label45 to label46 with label19;
        catch java.lang.Throwable from label47 to label49 with label19;
        catch java.lang.Throwable from label50 to label51 with label19;
        catch java.lang.Throwable from label52 to label54 with label19;
        catch java.lang.Throwable from label55 to label56 with label19;
        catch java.lang.Throwable from label59 to label60 with label19;
    }
    public void removeListener(com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.controller.MessagingListener $r1;
        java.util.Set $r2;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.controller.MessagingListener;

        $r2 = r0.<com.fsck.k9.controller.MessagingController: java.util.Set listeners>;

        interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>($r1);

        return;
    }
    public com.fsck.k9.mail.Message saveDraft(com.fsck.k9.Account, com.fsck.k9.mail.Message, long, boolean)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mail.Message $r2;
        long $l0;
        boolean $z0;
        com.fsck.k9.mail.MessagingException r3;
        com.fsck.k9.mailstore.LocalMessage r4, $r9;
        com.fsck.k9.mailstore.LocalStore $r5;
        java.lang.String $r6, $r11;
        com.fsck.k9.mailstore.LocalFolder $r7;
        byte $b1;
        java.util.List $r8;
        com.fsck.k9.mail.Flag $r10;
        com.fsck.k9.controller.MessagingControllerCommands$PendingAppend $r12;
        java.lang.Object[] $r13;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: com.fsck.k9.mail.Message;

        $l0 := @parameter2: long;

        $z0 := @parameter3: boolean;

        r4 = null;

     label01:
        $r5 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

        $r6 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getDraftsFolderName()>();

        $r7 = virtualinvoke $r5.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LocalFolder getFolder(java.lang.String)>($r6);

        virtualinvoke $r7.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(0);

     label02:
        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label04;

     label03:
        $r6 = virtualinvoke $r7.<com.fsck.k9.mailstore.LocalFolder: java.lang.String getMessageUidById(long)>($l0);

        virtualinvoke $r2.<com.fsck.k9.mail.Message: void setUid(java.lang.String)>($r6);

     label04:
        $r8 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r2);

        virtualinvoke $r7.<com.fsck.k9.mailstore.LocalFolder: java.util.Map appendMessages(java.util.List)>($r8);

        $r6 = virtualinvoke $r2.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

        $r9 = virtualinvoke $r7.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalMessage getMessage(java.lang.String)>($r6);

     label05:
        r4 = $r9;

        $r10 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag X_DOWNLOADED_FULL>;

     label06:
        virtualinvoke $r9.<com.fsck.k9.mail.Message: void setFlag(com.fsck.k9.mail.Flag,boolean)>($r10, 1);

     label07:
        if $z0 == 0 goto label11;

     label08:
        $r6 = virtualinvoke $r7.<com.fsck.k9.mailstore.LocalFolder: java.lang.String getName()>();

        $r11 = virtualinvoke $r9.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

        $r12 = staticinvoke <com.fsck.k9.controller.MessagingControllerCommands$PendingAppend: com.fsck.k9.controller.MessagingControllerCommands$PendingAppend create(java.lang.String,java.lang.String)>($r6, $r11);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void queuePendingCommand(com.fsck.k9.Account,com.fsck.k9.controller.MessagingControllerCommands$PendingCommand)>($r1, $r12);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void processPendingCommands(com.fsck.k9.Account)>($r1);

     label09:
        return $r9;

     label10:
        r3 := @caughtexception;

        $r13 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r3, "Unable to save message as draft.", $r13);

        return r4;

     label11:
        return $r9;

        catch com.fsck.k9.mail.MessagingException from label01 to label02 with label10;
        catch com.fsck.k9.mail.MessagingException from label03 to label05 with label10;
        catch com.fsck.k9.mail.MessagingException from label06 to label07 with label10;
        catch com.fsck.k9.mail.MessagingException from label08 to label09 with label10;
    }
    public void searchLocalMessages(com.fsck.k9.search.LocalSearch, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.search.LocalSearch $r1;
        com.fsck.k9.controller.MessagingListener $r2;
        java.util.concurrent.ExecutorService $r3;
        com.fsck.k9.controller.MessagingController$5 $r4;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.search.LocalSearch;

        $r2 := @parameter1: com.fsck.k9.controller.MessagingListener;

        $r3 = r0.<com.fsck.k9.controller.MessagingController: java.util.concurrent.ExecutorService threadPool>;

        $r4 = new com.fsck.k9.controller.MessagingController$5;

        specialinvoke $r4.<com.fsck.k9.controller.MessagingController$5: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.search.LocalSearch,com.fsck.k9.controller.MessagingListener)>(r0, $r1, $r2);

        interfaceinvoke $r3.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r4);

        return;
    }
    void searchLocalMessagesSynchronous(com.fsck.k9.search.LocalSearch, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.search.LocalSearch $r1;
        com.fsck.k9.controller.MessagingListener $r2;
        java.lang.Exception r3;
        com.fsck.k9.controller.MessagingController$6 r4;
        com.fsck.k9.AccountStats r5;
        java.util.HashSet r6;
        java.lang.String[] $r7;
        java.util.List $r8;
        android.content.Context $r9;
        com.fsck.k9.Preferences $r10;
        boolean $z0, $z1;
        java.util.Iterator $r11;
        java.lang.Object $r12;
        com.fsck.k9.Account r13;
        java.lang.String $r14;
        com.fsck.k9.mailstore.LocalStore $r15;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.search.LocalSearch;

        $r2 := @parameter1: com.fsck.k9.controller.MessagingListener;

        r5 = new com.fsck.k9.AccountStats;

        specialinvoke r5.<com.fsck.k9.AccountStats: void <init>()>();

        r6 = new java.util.HashSet;

        $r7 = virtualinvoke $r1.<com.fsck.k9.search.LocalSearch: java.lang.String[] getAccountUuids()>();

        $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7);

        specialinvoke r6.<java.util.HashSet: void <init>(java.util.Collection)>($r8);

        $r9 = r0.<com.fsck.k9.controller.MessagingController: android.content.Context context>;

        $r10 = staticinvoke <com.fsck.k9.Preferences: com.fsck.k9.Preferences getPreferences(android.content.Context)>($r9);

        $r8 = virtualinvoke $r10.<com.fsck.k9.Preferences: java.util.List getAccounts()>();

        $z0 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("allAccounts");

        $r11 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (com.fsck.k9.Account) $r12;

        if $z0 != 0 goto label2;

        $r14 = virtualinvoke r13.<com.fsck.k9.Account: java.lang.String getUuid()>();

        $z1 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>($r14);

        if $z1 == 0 goto label1;

     label2:
        r4 = new com.fsck.k9.controller.MessagingController$6;

        specialinvoke r4.<com.fsck.k9.controller.MessagingController$6: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.AccountStats,com.fsck.k9.controller.MessagingListener,com.fsck.k9.Account)>(r0, r5, $r2, r13);

     label3:
        $r15 = virtualinvoke r13.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

        virtualinvoke $r15.<com.fsck.k9.mailstore.LocalStore: java.util.List searchForMessages(com.fsck.k9.mail.MessageRetrievalListener,com.fsck.k9.search.LocalSearch)>(r4, $r1);

     label4:
        goto label1;

     label5:
        r3 := @caughtexception;

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable)>(r3);

        goto label1;

     label6:
        if $r2 == null goto label7;

        interfaceinvoke $r2.<com.fsck.k9.controller.MessagingListener: void searchStats(com.fsck.k9.AccountStats)>(r5);

     label7:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }
    public java.util.concurrent.Future searchRemoteMessages(java.lang.String, java.lang.String, java.lang.String, java.util.Set, java.util.Set, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        java.lang.String $r1, $r2, $r3;
        java.util.Set r4, r5;
        com.fsck.k9.controller.MessagingListener $r6;
        java.util.concurrent.ExecutorService $r7;
        java.util.concurrent.Future $r8;
        java.lang.Object[] $r9;
        com.fsck.k9.controller.MessagingController$7 $r10;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.util.Set;

        r5 := @parameter4: java.util.Set;

        $r6 := @parameter5: com.fsck.k9.controller.MessagingListener;

        $r9 = newarray (java.lang.Object)[3];

        $r9[0] = $r1;

        $r9[1] = $r2;

        $r9[2] = $r3;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("searchRemoteMessages (acct = %s, folderName = %s, query = %s)", $r9);

        $r7 = r0.<com.fsck.k9.controller.MessagingController: java.util.concurrent.ExecutorService threadPool>;

        $r10 = new com.fsck.k9.controller.MessagingController$7;

        specialinvoke $r10.<com.fsck.k9.controller.MessagingController$7: void <init>(com.fsck.k9.controller.MessagingController,java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Set,com.fsck.k9.controller.MessagingListener)>(r0, $r1, $r2, $r3, r4, r5, $r6);

        $r8 = interfaceinvoke $r7.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r10);

        return $r8;
    }
    void searchRemoteMessagesSynchronous(java.lang.String, java.lang.String, java.lang.String, java.util.Set, java.util.Set, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        java.lang.String $r1, $r2, $r3;
        java.util.Set r4, r5;
        com.fsck.k9.controller.MessagingListener $r6;
        java.lang.Exception r7;
        android.content.Context $r8;
        com.fsck.k9.Preferences $r9;
        com.fsck.k9.Account $r10;
        java.util.List r11, $r20, $r22, r23;
        com.fsck.k9.mail.Store $r12;
        com.fsck.k9.mailstore.LocalStore $r13;
        java.lang.Thread $r15;
        boolean $z0;
        java.lang.Object[] $r16;
        int $i0, $i1;
        com.fsck.k9.mail.Folder $r17;
        com.fsck.k9.mailstore.LocalFolder $r18;
        java.lang.Throwable $r19;
        java.lang.Integer $r21;
        java.util.ArrayList $r25;
        com.fsck.k9.mail.MessagingException $r26;
        com.fsck.k9.controller.UidReverseComparator $r27;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.util.Set;

        r5 := @parameter4: java.util.Set;

        $r6 := @parameter5: com.fsck.k9.controller.MessagingListener;

        $r8 = r0.<com.fsck.k9.controller.MessagingController: android.content.Context context>;

        $r9 = staticinvoke <com.fsck.k9.Preferences: com.fsck.k9.Preferences getPreferences(android.content.Context)>($r8);

        $r10 = virtualinvoke $r9.<com.fsck.k9.Preferences: com.fsck.k9.Account getAccount(java.lang.String)>($r1);

        if $r6 == null goto label01;

        interfaceinvoke $r6.<com.fsck.k9.controller.MessagingListener: void remoteSearchStarted(java.lang.String)>($r2);

     label01:
        $r25 = new java.util.ArrayList;

        r11 = $r25;

        specialinvoke $r25.<java.util.ArrayList: void <init>()>();

     label02:
        $r12 = virtualinvoke $r10.<com.fsck.k9.Account: com.fsck.k9.mail.Store getRemoteStore()>();

        $r13 = virtualinvoke $r10.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

     label03:
        if $r12 == null goto label04;

        if $r13 != null goto label11;

     label04:
        $r26 = new com.fsck.k9.mail.MessagingException;

     label05:
        specialinvoke $r26.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String)>("Could not get store");

        throw $r26;

     label06:
        r7 := @caughtexception;

     label07:
        $r15 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $z0 = virtualinvoke $r15.<java.lang.Thread: boolean isInterrupted()>();

     label08:
        if $z0 == 0 goto label35;

     label09:
        $r16 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r7, "Caught exception on aborted remote search; safe to ignore.", $r16);

     label10:
        if $r6 == null goto label40;

        $i0 = virtualinvoke $r10.<com.fsck.k9.Account: int getRemoteSearchNumResults()>();

        interfaceinvoke $r6.<com.fsck.k9.controller.MessagingListener: void remoteSearchFinished(java.lang.String,int,int,java.util.List)>($r2, 0, $i0, r11);

        return;

     label11:
        $r17 = virtualinvoke $r12.<com.fsck.k9.mail.Store: com.fsck.k9.mail.Folder getFolder(java.lang.String)>($r2);

        $r18 = virtualinvoke $r13.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LocalFolder getFolder(java.lang.String)>($r2);

     label12:
        if $r17 == null goto label13;

        if $r18 != null goto label17;

     label13:
        $r26 = new com.fsck.k9.mail.MessagingException;

     label14:
        specialinvoke $r26.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String)>("Folder not found");

        throw $r26;

     label15:
        $r19 := @caughtexception;

        if $r6 == null goto label16;

        $i0 = virtualinvoke $r10.<com.fsck.k9.Account: int getRemoteSearchNumResults()>();

        interfaceinvoke $r6.<com.fsck.k9.controller.MessagingListener: void remoteSearchFinished(java.lang.String,int,int,java.util.List)>($r2, 0, $i0, r11);

     label16:
        throw $r19;

     label17:
        $r20 = virtualinvoke $r17.<com.fsck.k9.mail.Folder: java.util.List search(java.lang.String,java.util.Set,java.util.Set)>($r3, r4, r5);

        $r16 = newarray (java.lang.Object)[1];

        $i0 = interfaceinvoke $r20.<java.util.List: int size()>();

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label18:
        $r16[0] = $r21;

     label19:
        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Remote search got %d results", $r16);

        $r22 = virtualinvoke $r18.<com.fsck.k9.mailstore.LocalFolder: java.util.List extractNewMessages(java.util.List)>($r20);

     label20:
        r23 = $r22;

     label21:
        interfaceinvoke $r20.<java.util.List: void clear()>();

     label22:
        if $r6 == null goto label24;

     label23:
        $i0 = interfaceinvoke $r22.<java.util.List: int size()>();

        $i1 = virtualinvoke $r10.<com.fsck.k9.Account: int getRemoteSearchNumResults()>();

        interfaceinvoke $r6.<com.fsck.k9.controller.MessagingListener: void remoteSearchServerQueryComplete(java.lang.String,int,int)>($r2, $i0, $i1);

     label24:
        $r27 = new com.fsck.k9.controller.UidReverseComparator;

     label25:
        specialinvoke $r27.<com.fsck.k9.controller.UidReverseComparator: void <init>()>();

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r22, $r27);

        $i0 = virtualinvoke $r10.<com.fsck.k9.Account: int getRemoteSearchNumResults()>();

     label26:
        if $i0 <= 0 goto label33;

     label27:
        $i1 = interfaceinvoke $r22.<java.util.List: int size()>();

     label28:
        if $i1 <= $i0 goto label33;

     label29:
        $i1 = interfaceinvoke $r22.<java.util.List: int size()>();

        $r20 = interfaceinvoke $r22.<java.util.List: java.util.List subList(int,int)>($i0, $i1);

     label30:
        r11 = $r20;

     label31:
        $r22 = interfaceinvoke $r22.<java.util.List: java.util.List subList(int,int)>(0, $i0);

     label32:
        r23 = $r22;

     label33:
        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void loadSearchResultsSynchronous(java.util.List,com.fsck.k9.mailstore.LocalFolder,com.fsck.k9.mail.Folder,com.fsck.k9.controller.MessagingListener)>(r23, $r18, $r17, $r6);

     label34:
        if $r6 == null goto label40;

        $i0 = virtualinvoke $r10.<com.fsck.k9.Account: int getRemoteSearchNumResults()>();

        interfaceinvoke $r6.<com.fsck.k9.controller.MessagingListener: void remoteSearchFinished(java.lang.String,int,int,java.util.List)>($r2, 0, $i0, r11);

        return;

     label35:
        $r16 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r7, "Could not complete remote search", $r16);

     label36:
        if $r6 == null goto label38;

     label37:
        $r1 = virtualinvoke r7.<java.lang.Exception: java.lang.String getMessage()>();

        interfaceinvoke $r6.<com.fsck.k9.controller.MessagingListener: void remoteSearchFailed(java.lang.String,java.lang.String)>(null, $r1);

     label38:
        staticinvoke <timber.log.Timber: void e(java.lang.Throwable)>(r7);

     label39:
        goto label10;

     label40:
        return;

        catch java.lang.Exception from label02 to label03 with label06;
        catch java.lang.Exception from label05 to label06 with label06;
        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Exception from label11 to label12 with label06;
        catch java.lang.Exception from label14 to label15 with label06;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label14 to label15 with label15;
        catch java.lang.Exception from label17 to label20 with label06;
        catch java.lang.Exception from label21 to label22 with label06;
        catch java.lang.Exception from label23 to label24 with label06;
        catch java.lang.Exception from label25 to label26 with label06;
        catch java.lang.Exception from label27 to label28 with label06;
        catch java.lang.Exception from label29 to label30 with label06;
        catch java.lang.Exception from label31 to label32 with label06;
        catch java.lang.Exception from label33 to label34 with label06;
        catch java.lang.Throwable from label17 to label18 with label15;
        catch java.lang.Throwable from label19 to label20 with label15;
        catch java.lang.Throwable from label21 to label22 with label15;
        catch java.lang.Throwable from label23 to label25 with label15;
        catch java.lang.Throwable from label25 to label26 with label15;
        catch java.lang.Throwable from label27 to label28 with label15;
        catch java.lang.Throwable from label29 to label30 with label15;
        catch java.lang.Throwable from label31 to label32 with label15;
        catch java.lang.Throwable from label33 to label34 with label15;
        catch java.lang.Throwable from label35 to label36 with label15;
        catch java.lang.Throwable from label37 to label39 with label15;
    }
    public void sendAlternate(android.content.Context, com.fsck.k9.Account, com.fsck.k9.mailstore.LocalMessage)
    {
        com.fsck.k9.controller.MessagingController r0;
        android.content.Context $r1;
        com.fsck.k9.Account $r2;
        com.fsck.k9.mailstore.LocalMessage $r3;
        android.content.Intent r4;
        java.lang.String[] r5;
        java.lang.Object[] $r6;
        java.lang.String $r7;
        com.fsck.k9.mailstore.LocalFolder $r8;
        com.fsck.k9.mail.Part $r9, r10;
        com.fsck.k9.mail.Address[] $r11;
        int $i0, $i1;
        com.fsck.k9.mail.Address $r12;
        com.fsck.k9.mail.Message$RecipientType $r13;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.fsck.k9.Account;

        $r3 := @parameter2: com.fsck.k9.mailstore.LocalMessage;

        $r6 = newarray (java.lang.Object)[3];

        $r7 = virtualinvoke $r2.<com.fsck.k9.Account: java.lang.String getDescription()>();

        $r6[0] = $r7;

        $r8 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalMessage: com.fsck.k9.mailstore.LocalFolder getFolder()>();

        $r6[1] = $r8;

        $r7 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalMessage: java.lang.String getUid()>();

        $r6[2] = $r7;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Got message %s:%s:%s for sendAlternate", $r6);

        r4 = new android.content.Intent;

        specialinvoke r4.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.SEND");

        $r7 = null;

        $r9 = staticinvoke <com.fsck.k9.mail.internet.MimeUtility: com.fsck.k9.mail.Part findFirstPartByMimeType(com.fsck.k9.mail.Part,java.lang.String)>($r3, "text/plain");

        r10 = $r9;

        if $r9 != null goto label1;

        r10 = staticinvoke <com.fsck.k9.mail.internet.MimeUtility: com.fsck.k9.mail.Part findFirstPartByMimeType(com.fsck.k9.mail.Part,java.lang.String)>($r3, "text/html");

     label1:
        if r10 == null goto label2;

        $r7 = staticinvoke <com.fsck.k9.mail.internet.MessageExtractor: java.lang.String getTextFromPart(com.fsck.k9.mail.Part)>(r10);

     label2:
        if $r7 == null goto label3;

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.intent.extra.TEXT", $r7);

     label3:
        $r7 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalMessage: java.lang.String getSubject()>();

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.intent.extra.SUBJECT", $r7);

        $r11 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalMessage: com.fsck.k9.mail.Address[] getFrom()>();

        $i0 = lengthof $r11;

        r5 = newarray (java.lang.String)[$i0];

        $i0 = 0;

     label4:
        $i1 = lengthof $r11;

        if $i0 >= $i1 goto label5;

        $r12 = $r11[$i0];

        $r7 = virtualinvoke $r12.<com.fsck.k9.mail.Address: java.lang.String toString()>();

        r5[$i0] = $r7;

        $i0 = $i0 + 1;

        goto label4;

     label5:
        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>("com.fsck.k9.intent.extra.SENDER", r5);

        $r13 = <com.fsck.k9.mail.Message$RecipientType: com.fsck.k9.mail.Message$RecipientType TO>;

        $r11 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalMessage: com.fsck.k9.mail.Address[] getRecipients(com.fsck.k9.mail.Message$RecipientType)>($r13);

        $i0 = lengthof $r11;

        r5 = newarray (java.lang.String)[$i0];

        $i0 = 0;

     label6:
        $i1 = lengthof $r11;

        if $i0 >= $i1 goto label7;

        $r12 = $r11[$i0];

        $r7 = virtualinvoke $r12.<com.fsck.k9.mail.Address: java.lang.String toString()>();

        r5[$i0] = $r7;

        $i0 = $i0 + 1;

        goto label6;

     label7:
        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>("android.intent.extra.EMAIL", r5);

        $r13 = <com.fsck.k9.mail.Message$RecipientType: com.fsck.k9.mail.Message$RecipientType CC>;

        $r11 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalMessage: com.fsck.k9.mail.Address[] getRecipients(com.fsck.k9.mail.Message$RecipientType)>($r13);

        $i0 = lengthof $r11;

        r5 = newarray (java.lang.String)[$i0];

        $i0 = 0;

     label8:
        $i1 = lengthof $r11;

        if $i0 >= $i1 goto label9;

        $r12 = $r11[$i0];

        $r7 = virtualinvoke $r12.<com.fsck.k9.mail.Address: java.lang.String toString()>();

        r5[$i0] = $r7;

        $i0 = $i0 + 1;

        goto label8;

     label9:
        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>("android.intent.extra.CC", r5);

        virtualinvoke r4.<android.content.Intent: android.content.Intent setType(java.lang.String)>("text/plain");

        $r7 = virtualinvoke $r1.<android.content.Context: java.lang.String getString(int)>(2131166017);

        r4 = staticinvoke <android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence)>(r4, $r7);

        virtualinvoke $r1.<android.content.Context: void startActivity(android.content.Intent)>(r4);

        return;
    }
    public void sendMessage(com.fsck.k9.Account, com.fsck.k9.mail.Message, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mail.Message $r2;
        com.fsck.k9.controller.MessagingListener $r3;
        java.lang.Exception r4;
        com.fsck.k9.mailstore.LocalStore $r5;
        java.lang.String $r6;
        com.fsck.k9.mailstore.LocalFolder $r7;
        java.util.List $r8;
        com.fsck.k9.mailstore.LocalMessage $r9;
        com.fsck.k9.mail.Flag $r10;
        java.lang.Object[] $r11;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: com.fsck.k9.mail.Message;

        $r3 := @parameter2: com.fsck.k9.controller.MessagingListener;

     label1:
        $r5 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

        $r6 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getOutboxFolderName()>();

        $r7 = virtualinvoke $r5.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LocalFolder getFolder(java.lang.String)>($r6);

        virtualinvoke $r7.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(0);

        $r8 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r2);

        virtualinvoke $r7.<com.fsck.k9.mailstore.LocalFolder: java.util.Map appendMessages(java.util.List)>($r8);

        $r6 = virtualinvoke $r2.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

        $r9 = virtualinvoke $r7.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalMessage getMessage(java.lang.String)>($r6);

     label2:
        $r10 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag X_DOWNLOADED_FULL>;

     label3:
        virtualinvoke $r9.<com.fsck.k9.mail.Message: void setFlag(com.fsck.k9.mail.Flag,boolean)>($r10, 1);

        virtualinvoke $r7.<com.fsck.k9.mailstore.LocalFolder: void close()>();

        virtualinvoke r0.<com.fsck.k9.controller.MessagingController: void sendPendingMessages(com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener)>($r1, $r3);

     label4:
        return;

     label5:
        r4 := @caughtexception;

        $r11 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r4, "Error sending message", $r11);

        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
    public void sendPendingMessages(com.fsck.k9.Account, com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.controller.MessagingListener $r2;
        com.fsck.k9.controller.MessagingController$21 $r3;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: com.fsck.k9.controller.MessagingListener;

        $r3 = new com.fsck.k9.controller.MessagingController$21;

        specialinvoke $r3.<com.fsck.k9.controller.MessagingController$21: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account)>(r0, $r1);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void putBackground(java.lang.String,com.fsck.k9.controller.MessagingListener,java.lang.Runnable)>("sendPendingMessages", $r2, $r3);

        return;
    }
    public void sendPendingMessages(com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.controller.MessagingListener $r1;
        android.content.Context $r2;
        com.fsck.k9.Preferences $r3;
        java.util.Collection $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        com.fsck.k9.Account r7;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.controller.MessagingListener;

        $r2 = r0.<com.fsck.k9.controller.MessagingController: android.content.Context context>;

        $r3 = staticinvoke <com.fsck.k9.Preferences: com.fsck.k9.Preferences getPreferences(android.content.Context)>($r2);

        $r4 = virtualinvoke $r3.<com.fsck.k9.Preferences: java.util.Collection getAvailableAccounts()>();

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.fsck.k9.Account) $r6;

        virtualinvoke r0.<com.fsck.k9.controller.MessagingController: void sendPendingMessages(com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener)>(r7, $r1);

        goto label1;

     label2:
        return;
    }
    protected void sendPendingMessagesSynchronous(com.fsck.k9.Account)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mail.FetchProfile r2;
        com.fsck.k9.mailstore.LocalFolder r3, $r7;
        java.lang.Exception r4, r18, r31, r36;
        boolean z0, $z1;
        com.fsck.k9.mailstore.LocalStore $r5;
        java.lang.String $r6;
        java.lang.Object[] $r8;
        com.fsck.k9.notification.NotificationController $r9;
        java.util.Set $r10;
        java.util.Iterator $r11, $r34;
        java.lang.Object $r12;
        com.fsck.k9.controller.MessagingListener r13;
        com.fsck.k9.mailstore.UnavailableStorageException r14;
        com.fsck.k9.controller.UnavailableAccountException $r15;
        java.lang.Throwable $r16;
        java.util.List $r17;
        int i0, $i1, $i3;
        com.fsck.k9.mail.FetchProfile$Item $r19;
        long $l2;
        java.lang.Long $r20;
        com.fsck.k9.mail.TransportProvider $r21;
        android.app.Application $r22;
        com.fsck.k9.mail.Transport $r23;
        com.fsck.k9.mailstore.LocalMessage r24;
        com.fsck.k9.mail.Flag $r25;
        java.util.concurrent.atomic.AtomicInteger r26, r28;
        java.util.concurrent.ConcurrentHashMap $r27;
        java.lang.Integer $r29;
        com.fsck.k9.mail.MessagingException $r30;
        java.lang.String[] $r32;
        com.fsck.k9.mail.AuthenticationFailedException r33;
        com.fsck.k9.mail.CertificateValidationException r35;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        r3 = null;

        r4 = null;

        z0 = 0;

     label001:
        $r5 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

        $r6 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getOutboxFolderName()>();

        $r7 = virtualinvoke $r5.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LocalFolder getFolder(java.lang.String)>($r6);

     label002:
        r3 = $r7;

     label003:
        $z1 = virtualinvoke $r7.<com.fsck.k9.mailstore.LocalFolder: boolean exists()>();

     label004:
        if $z1 != 0 goto label008;

     label005:
        $r8 = newarray (java.lang.Object)[0];

     label006:
        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("Outbox does not exist", $r8);

     label007:
        $r9 = r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.notification.NotificationController notificationController>;

        virtualinvoke $r9.<com.fsck.k9.notification.NotificationController: void clearSendFailedNotification(com.fsck.k9.Account)>($r1);

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r7);

        return;

     label008:
        $r10 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label009:
        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

     label010:
        if $z1 == 0 goto label019;

     label011:
        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

     label012:
        r13 = (com.fsck.k9.controller.MessagingListener) $r12;

     label013:
        interfaceinvoke r13.<com.fsck.k9.controller.MessagingListener: void sendPendingMessagesStarted(com.fsck.k9.Account)>($r1);

     label014:
        goto label009;

     label015:
        r14 := @caughtexception;

     label016:
        $r8 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Failed to send pending messages because storage is not available - trying again later.", $r8);

        $r15 = new com.fsck.k9.controller.UnavailableAccountException;

        specialinvoke $r15.<com.fsck.k9.controller.UnavailableAccountException: void <init>(java.lang.Throwable)>(r14);

        throw $r15;

     label017:
        $r16 := @caughtexception;

        if r4 != null goto label018;

        $r9 = r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.notification.NotificationController notificationController>;

        virtualinvoke $r9.<com.fsck.k9.notification.NotificationController: void clearSendFailedNotification(com.fsck.k9.Account)>($r1);

     label018:
        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r3);

        throw $r16;

     label019:
        virtualinvoke $r7.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(0);

        $r17 = virtualinvoke $r7.<com.fsck.k9.mailstore.LocalFolder: java.util.List getMessages(com.fsck.k9.mail.MessageRetrievalListener)>(null);

     label020:
        i0 = 0;

     label021:
        $i1 = interfaceinvoke $r17.<java.util.List: int size()>();

        $r10 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label022:
        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

     label023:
        if $z1 == 0 goto label034;

     label024:
        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

     label025:
        r13 = (com.fsck.k9.controller.MessagingListener) $r12;

     label026:
        $r6 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getSentFolderName()>();

        interfaceinvoke r13.<com.fsck.k9.controller.MessagingListener: void synchronizeMailboxProgress(com.fsck.k9.Account,java.lang.String,int,int)>($r1, $r6, 0, $i1);

     label027:
        goto label022;

     label028:
        r18 := @caughtexception;

     label029:
        $r8 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void v(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r18, "Failed to send pending messages", $r8);

        $r10 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label030:
        z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

     label031:
        if z0 == 0 goto label135;

     label032:
        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (com.fsck.k9.controller.MessagingListener) $r12;

        interfaceinvoke r13.<com.fsck.k9.controller.MessagingListener: void sendPendingMessagesFailed(com.fsck.k9.Account)>($r1);

     label033:
        goto label030;

     label034:
        r2 = new com.fsck.k9.mail.FetchProfile;

     label035:
        specialinvoke r2.<com.fsck.k9.mail.FetchProfile: void <init>()>();

     label036:
        $r19 = <com.fsck.k9.mail.FetchProfile$Item: com.fsck.k9.mail.FetchProfile$Item ENVELOPE>;

     label037:
        virtualinvoke r2.<com.fsck.k9.mail.FetchProfile: boolean add(java.lang.Object)>($r19);

     label038:
        $r19 = <com.fsck.k9.mail.FetchProfile$Item: com.fsck.k9.mail.FetchProfile$Item BODY>;

     label039:
        virtualinvoke r2.<com.fsck.k9.mail.FetchProfile: boolean add(java.lang.Object)>($r19);

     label040:
        $r8 = newarray (java.lang.Object)[2];

     label041:
        $r6 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getOutboxFolderName()>();

     label042:
        $r8[0] = $r6;

     label043:
        $l2 = virtualinvoke $r7.<com.fsck.k9.mailstore.LocalFolder: long getDatabaseId()>();

        $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

     label044:
        $r8[1] = $r20;

     label045:
        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Scanning folder \'%s\' (%d) for messages to send", $r8);

     label046:
        $r21 = r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.mail.TransportProvider transportProvider>;

     label047:
        $r22 = <com.fsck.k9.K9: android.app.Application app>;

     label048:
        $r23 = virtualinvoke $r21.<com.fsck.k9.mail.TransportProvider: com.fsck.k9.mail.Transport getTransport(android.content.Context,com.fsck.k9.mail.store.StoreConfig)>($r22, $r1);

        $r11 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>();

     label049:
        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

     label050:
        if $z1 == 0 goto label120;

     label051:
        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

     label052:
        r24 = (com.fsck.k9.mailstore.LocalMessage) $r12;

     label053:
        $r25 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag DELETED>;

     label054:
        $z1 = virtualinvoke r24.<com.fsck.k9.mailstore.LocalMessage: boolean isSet(com.fsck.k9.mail.Flag)>($r25);

     label055:
        if $z1 == 0 goto label058;

     label056:
        virtualinvoke r24.<com.fsck.k9.mailstore.LocalMessage: void destroy()>();

     label057:
        goto label049;

     label058:
        r26 = new java.util.concurrent.atomic.AtomicInteger;

     label059:
        specialinvoke r26.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        $r27 = r0.<com.fsck.k9.controller.MessagingController: java.util.concurrent.ConcurrentHashMap sendCount>;

        $r6 = virtualinvoke r24.<com.fsck.k9.mailstore.LocalMessage: java.lang.String getUid()>();

        $r12 = virtualinvoke $r27.<java.util.concurrent.ConcurrentHashMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($r6, r26);

        r28 = (java.util.concurrent.atomic.AtomicInteger) $r12;

     label060:
        if r28 == null goto label061;

        r26 = r28;

     label061:
        $r8 = newarray (java.lang.Object)[2];

        $r6 = virtualinvoke r24.<com.fsck.k9.mailstore.LocalMessage: java.lang.String getUid()>();

     label062:
        $r8[0] = $r6;

     label063:
        $i3 = virtualinvoke r26.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

     label064:
        $r8[1] = $r29;

     label065:
        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Send count for message %s is %d", $r8);

        $i3 = virtualinvoke r26.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

     label066:
        if $i3 <= 5 goto label079;

     label067:
        $r8 = newarray (java.lang.Object)[2];

        $r6 = virtualinvoke r24.<com.fsck.k9.mailstore.LocalMessage: java.lang.String getUid()>();

     label068:
        $r8[0] = $r6;

     label069:
        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

     label070:
        $r8[1] = $r29;

     label071:
        staticinvoke <timber.log.Timber: void e(java.lang.String,java.lang.Object[])>("Send count for message %s can\'t be delivered after %d attempts. Giving up until the user restarts the device", $r8);

        $r9 = r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.notification.NotificationController notificationController>;

     label072:
        $r30 = new com.fsck.k9.mail.MessagingException;

     label073:
        $r6 = virtualinvoke r24.<com.fsck.k9.mailstore.LocalMessage: java.lang.String getSubject()>();

        specialinvoke $r30.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String)>($r6);

        virtualinvoke $r9.<com.fsck.k9.notification.NotificationController: void showSendFailedNotification(com.fsck.k9.Account,java.lang.Exception)>($r1, $r30);

     label074:
        goto label049;

     label075:
        r31 := @caughtexception;

        r4 = r31;

        z0 = 0;

     label076:
        $r8 = newarray (java.lang.Object)[0];

     label077:
        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r31, "Failed to fetch message for sending", $r8);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void notifySynchronizeMailboxFailed(com.fsck.k9.Account,com.fsck.k9.mail.Folder,java.lang.Exception)>($r1, $r7, r31);

     label078:
        goto label049;

     label079:
        $r17 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r24);

        virtualinvoke $r7.<com.fsck.k9.mailstore.LocalFolder: void fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)>($r17, r2, null);

     label080:
        $r32 = virtualinvoke r24.<com.fsck.k9.mailstore.LocalMessage: java.lang.String[] getHeader(java.lang.String)>("X-K9mail-Identity");

     label081:
        $i3 = lengthof $r32;

     label082:
        if $i3 <= 0 goto label089;

     label083:
        $r8 = newarray (java.lang.Object)[0];

     label084:
        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("The user has set the Outbox and Drafts folder to the same thing. This message appears to be a draft, so K-9 will not send it", $r8);

     label085:
        goto label049;

     label086:
        r33 := @caughtexception;

        r4 = r33;

        z0 = 0;

     label087:
        virtualinvoke r0.<com.fsck.k9.controller.MessagingController: void handleAuthenticationFailure(com.fsck.k9.Account,boolean)>($r1, 0);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void handleSendFailure(com.fsck.k9.Account,com.fsck.k9.mail.Store,com.fsck.k9.mail.Folder,com.fsck.k9.mail.Message,java.lang.Exception,boolean)>($r1, $r5, $r7, r24, r33, 0);

     label088:
        goto label049;

     label089:
        $r25 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag X_SEND_IN_PROGRESS>;

     label090:
        virtualinvoke r24.<com.fsck.k9.mailstore.LocalMessage: void setFlag(com.fsck.k9.mail.Flag,boolean)>($r25, 1);

     label091:
        $r8 = newarray (java.lang.Object)[1];

     label092:
        $r6 = virtualinvoke r24.<com.fsck.k9.mailstore.LocalMessage: java.lang.String getUid()>();

     label093:
        $r8[0] = $r6;

     label094:
        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Sending message with UID %s", $r8);

        virtualinvoke $r23.<com.fsck.k9.mail.Transport: void sendMessage(com.fsck.k9.mail.Message)>(r24);

     label095:
        $r25 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag X_SEND_IN_PROGRESS>;

     label096:
        virtualinvoke r24.<com.fsck.k9.mailstore.LocalMessage: void setFlag(com.fsck.k9.mail.Flag,boolean)>($r25, 0);

     label097:
        $r25 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag SEEN>;

     label098:
        virtualinvoke r24.<com.fsck.k9.mailstore.LocalMessage: void setFlag(com.fsck.k9.mail.Flag,boolean)>($r25, 1);

     label099:
        i0 = i0 + 1;

     label100:
        $r10 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r34 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label101:
        $z1 = interfaceinvoke $r34.<java.util.Iterator: boolean hasNext()>();

     label102:
        if $z1 == 0 goto label110;

     label103:
        $r12 = interfaceinvoke $r34.<java.util.Iterator: java.lang.Object next()>();

     label104:
        r13 = (com.fsck.k9.controller.MessagingListener) $r12;

     label105:
        $r6 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getSentFolderName()>();

        interfaceinvoke r13.<com.fsck.k9.controller.MessagingListener: void synchronizeMailboxProgress(com.fsck.k9.Account,java.lang.String,int,int)>($r1, $r6, i0, $i1);

     label106:
        goto label101;

     label107:
        r35 := @caughtexception;

        r4 = r35;

        z0 = 0;

     label108:
        virtualinvoke r0.<com.fsck.k9.controller.MessagingController: void notifyUserIfCertificateProblem(com.fsck.k9.Account,java.lang.Exception,boolean)>($r1, r35, 0);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void handleSendFailure(com.fsck.k9.Account,com.fsck.k9.mail.Store,com.fsck.k9.mail.Folder,com.fsck.k9.mail.Message,java.lang.Exception,boolean)>($r1, $r5, $r7, r24, r35, 0);

     label109:
        goto label049;

     label110:
        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void moveOrDeleteSentMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.LocalStore,com.fsck.k9.mailstore.LocalFolder,com.fsck.k9.mailstore.LocalMessage)>($r1, $r5, $r7, r24);

     label111:
        goto label049;

     label112:
        $r30 := @caughtexception;

        r4 = $r30;

     label113:
        $z1 = virtualinvoke $r30.<com.fsck.k9.mail.MessagingException: boolean isPermanentFailure()>();

     label114:
        z0 = $z1;

     label115:
        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void handleSendFailure(com.fsck.k9.Account,com.fsck.k9.mail.Store,com.fsck.k9.mail.Folder,com.fsck.k9.mail.Message,java.lang.Exception,boolean)>($r1, $r5, $r7, r24, $r30, $z1);

     label116:
        goto label049;

     label117:
        r36 := @caughtexception;

        r4 = r36;

        z0 = 1;

     label118:
        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void handleSendFailure(com.fsck.k9.Account,com.fsck.k9.mail.Store,com.fsck.k9.mail.Folder,com.fsck.k9.mail.Message,java.lang.Exception,boolean)>($r1, $r5, $r7, r24, r36, 1);

     label119:
        goto label049;

     label120:
        $r10 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label121:
        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

     label122:
        if $z1 == 0 goto label127;

     label123:
        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

     label124:
        r13 = (com.fsck.k9.controller.MessagingListener) $r12;

     label125:
        interfaceinvoke r13.<com.fsck.k9.controller.MessagingListener: void sendPendingMessagesCompleted(com.fsck.k9.Account)>($r1);

     label126:
        goto label121;

     label127:
        if r4 == null goto label130;

        if z0 == 0 goto label132;

     label128:
        $r9 = r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.notification.NotificationController notificationController>;

     label129:
        virtualinvoke $r9.<com.fsck.k9.notification.NotificationController: void showSendFailedNotification(com.fsck.k9.Account,java.lang.Exception)>($r1, r4);

     label130:
        if r4 != null goto label131;

        $r9 = r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.notification.NotificationController notificationController>;

        virtualinvoke $r9.<com.fsck.k9.notification.NotificationController: void clearSendFailedNotification(com.fsck.k9.Account)>($r1);

     label131:
        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r7);

        return;

     label132:
        $r9 = r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.notification.NotificationController notificationController>;

     label133:
        virtualinvoke $r9.<com.fsck.k9.notification.NotificationController: void showSendFailedNotification(com.fsck.k9.Account,java.lang.Exception)>($r1, r4);

     label134:
        goto label130;

     label135:
        if r4 != null goto label136;

        $r9 = r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.notification.NotificationController notificationController>;

        virtualinvoke $r9.<com.fsck.k9.notification.NotificationController: void clearSendFailedNotification(com.fsck.k9.Account)>($r1);

     label136:
        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r3);

        return;

        catch com.fsck.k9.mailstore.UnavailableStorageException from label001 to label002 with label015;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label003 to label004 with label015;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label006 to label007 with label015;
        catch java.lang.Exception from label001 to label002 with label028;
        catch java.lang.Exception from label003 to label004 with label028;
        catch java.lang.Exception from label005 to label007 with label028;
        catch java.lang.Throwable from label001 to label002 with label017;
        catch java.lang.Throwable from label003 to label004 with label017;
        catch java.lang.Throwable from label005 to label007 with label017;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label008 to label010 with label015;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label011 to label012 with label015;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label013 to label014 with label015;
        catch java.lang.Exception from label008 to label010 with label028;
        catch java.lang.Exception from label011 to label014 with label028;
        catch java.lang.Throwable from label008 to label010 with label017;
        catch java.lang.Throwable from label011 to label014 with label017;
        catch java.lang.Throwable from label016 to label017 with label017;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label019 to label020 with label015;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label021 to label023 with label015;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label024 to label025 with label015;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label026 to label027 with label015;
        catch java.lang.Exception from label019 to label020 with label028;
        catch java.lang.Exception from label021 to label023 with label028;
        catch java.lang.Exception from label024 to label027 with label028;
        catch java.lang.Throwable from label019 to label020 with label017;
        catch java.lang.Throwable from label021 to label023 with label017;
        catch java.lang.Throwable from label024 to label027 with label017;
        catch java.lang.Throwable from label029 to label031 with label017;
        catch java.lang.Throwable from label032 to label033 with label017;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label035 to label036 with label015;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label037 to label038 with label015;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label039 to label040 with label015;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label041 to label042 with label015;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label043 to label044 with label015;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label045 to label046 with label015;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label048 to label050 with label015;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label051 to label052 with label015;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label054 to label055 with label015;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label056 to label057 with label015;
        catch java.lang.Exception from label035 to label036 with label028;
        catch java.lang.Exception from label037 to label038 with label028;
        catch java.lang.Exception from label039 to label047 with label028;
        catch java.lang.Exception from label048 to label050 with label028;
        catch java.lang.Exception from label051 to label053 with label028;
        catch java.lang.Exception from label054 to label055 with label028;
        catch java.lang.Exception from label056 to label057 with label028;
        catch java.lang.Throwable from label034 to label042 with label017;
        catch java.lang.Throwable from label043 to label044 with label017;
        catch java.lang.Throwable from label045 to label050 with label017;
        catch java.lang.Throwable from label051 to label055 with label017;
        catch java.lang.Throwable from label056 to label057 with label017;
        catch java.lang.Exception from label059 to label060 with label075;
        catch java.lang.Exception from label061 to label066 with label075;
        catch java.lang.Exception from label067 to label072 with label075;
        catch java.lang.Exception from label073 to label074 with label075;
        catch java.lang.Throwable from label058 to label060 with label017;
        catch java.lang.Throwable from label061 to label062 with label017;
        catch java.lang.Throwable from label063 to label064 with label017;
        catch java.lang.Throwable from label065 to label066 with label017;
        catch java.lang.Throwable from label067 to label068 with label017;
        catch java.lang.Throwable from label069 to label070 with label017;
        catch java.lang.Throwable from label071 to label074 with label017;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label077 to label078 with label015;
        catch java.lang.Exception from label076 to label078 with label028;
        catch java.lang.Throwable from label076 to label078 with label017;
        catch java.lang.Exception from label079 to label080 with label075;
        catch java.lang.Throwable from label079 to label080 with label017;
        catch com.fsck.k9.mail.AuthenticationFailedException from label080 to label081 with label086;
        catch com.fsck.k9.mail.AuthenticationFailedException from label084 to label085 with label086;
        catch com.fsck.k9.mail.CertificateValidationException from label080 to label081 with label107;
        catch com.fsck.k9.mail.CertificateValidationException from label084 to label085 with label107;
        catch com.fsck.k9.mail.MessagingException from label080 to label081 with label112;
        catch com.fsck.k9.mail.MessagingException from label084 to label085 with label112;
        catch java.lang.Exception from label080 to label082 with label117;
        catch java.lang.Exception from label083 to label085 with label117;
        catch java.lang.Throwable from label080 to label081 with label017;
        catch java.lang.Throwable from label083 to label085 with label017;
        catch java.lang.Exception from label087 to label088 with label075;
        catch java.lang.Throwable from label087 to label088 with label017;
        catch com.fsck.k9.mail.AuthenticationFailedException from label090 to label091 with label086;
        catch com.fsck.k9.mail.AuthenticationFailedException from label092 to label093 with label086;
        catch com.fsck.k9.mail.AuthenticationFailedException from label094 to label095 with label086;
        catch com.fsck.k9.mail.AuthenticationFailedException from label096 to label097 with label086;
        catch com.fsck.k9.mail.AuthenticationFailedException from label098 to label099 with label086;
        catch com.fsck.k9.mail.AuthenticationFailedException from label100 to label102 with label086;
        catch com.fsck.k9.mail.AuthenticationFailedException from label103 to label104 with label086;
        catch com.fsck.k9.mail.AuthenticationFailedException from label105 to label106 with label086;
        catch com.fsck.k9.mail.CertificateValidationException from label090 to label091 with label107;
        catch com.fsck.k9.mail.CertificateValidationException from label092 to label093 with label107;
        catch com.fsck.k9.mail.CertificateValidationException from label094 to label095 with label107;
        catch com.fsck.k9.mail.CertificateValidationException from label096 to label097 with label107;
        catch com.fsck.k9.mail.CertificateValidationException from label098 to label099 with label107;
        catch com.fsck.k9.mail.CertificateValidationException from label100 to label102 with label107;
        catch com.fsck.k9.mail.CertificateValidationException from label103 to label104 with label107;
        catch com.fsck.k9.mail.CertificateValidationException from label105 to label106 with label107;
        catch com.fsck.k9.mail.MessagingException from label090 to label091 with label112;
        catch com.fsck.k9.mail.MessagingException from label092 to label093 with label112;
        catch com.fsck.k9.mail.MessagingException from label094 to label095 with label112;
        catch com.fsck.k9.mail.MessagingException from label096 to label097 with label112;
        catch com.fsck.k9.mail.MessagingException from label098 to label099 with label112;
        catch com.fsck.k9.mail.MessagingException from label100 to label102 with label112;
        catch com.fsck.k9.mail.MessagingException from label103 to label104 with label112;
        catch com.fsck.k9.mail.MessagingException from label105 to label106 with label112;
        catch java.lang.Exception from label090 to label095 with label117;
        catch java.lang.Exception from label096 to label097 with label117;
        catch java.lang.Exception from label098 to label099 with label117;
        catch java.lang.Exception from label100 to label102 with label117;
        catch java.lang.Exception from label103 to label106 with label117;
        catch java.lang.Throwable from label089 to label093 with label017;
        catch java.lang.Throwable from label094 to label099 with label017;
        catch java.lang.Throwable from label100 to label102 with label017;
        catch java.lang.Throwable from label103 to label106 with label017;
        catch java.lang.Exception from label108 to label109 with label075;
        catch java.lang.Throwable from label108 to label109 with label017;
        catch com.fsck.k9.mail.AuthenticationFailedException from label110 to label111 with label086;
        catch com.fsck.k9.mail.CertificateValidationException from label110 to label111 with label107;
        catch com.fsck.k9.mail.MessagingException from label110 to label111 with label112;
        catch java.lang.Exception from label110 to label111 with label117;
        catch java.lang.Throwable from label110 to label111 with label017;
        catch java.lang.Exception from label113 to label114 with label075;
        catch java.lang.Exception from label115 to label116 with label075;
        catch java.lang.Exception from label118 to label119 with label075;
        catch java.lang.Throwable from label113 to label114 with label017;
        catch java.lang.Throwable from label115 to label116 with label017;
        catch java.lang.Throwable from label118 to label119 with label017;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label120 to label122 with label015;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label123 to label124 with label015;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label125 to label126 with label015;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label129 to label130 with label015;
        catch java.lang.Exception from label120 to label122 with label028;
        catch java.lang.Exception from label123 to label126 with label028;
        catch java.lang.Exception from label128 to label130 with label028;
        catch java.lang.Throwable from label120 to label122 with label017;
        catch java.lang.Throwable from label123 to label126 with label017;
        catch java.lang.Throwable from label128 to label130 with label017;
        catch com.fsck.k9.mailstore.UnavailableStorageException from label133 to label134 with label015;
        catch java.lang.Exception from label132 to label134 with label028;
        catch java.lang.Throwable from label132 to label134 with label017;
    }
    public void setCheckMailListener(com.fsck.k9.controller.MessagingListener)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.controller.MessagingListener $r1, $r2;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.controller.MessagingListener;

        $r2 = r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.controller.MessagingListener checkMailListener>;

        if $r2 == null goto label1;

        $r2 = r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.controller.MessagingListener checkMailListener>;

        virtualinvoke r0.<com.fsck.k9.controller.MessagingController: void removeListener(com.fsck.k9.controller.MessagingListener)>($r2);

     label1:
        r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.controller.MessagingListener checkMailListener> = $r1;

        $r1 = r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.controller.MessagingListener checkMailListener>;

        if $r1 == null goto label2;

        $r1 = r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.controller.MessagingListener checkMailListener>;

        virtualinvoke r0.<com.fsck.k9.controller.MessagingController: void addListener(com.fsck.k9.controller.MessagingListener)>($r1);

     label2:
        return;
    }
    public void setFlag(com.fsck.k9.Account, java.lang.String, java.lang.String, com.fsck.k9.mail.Flag, boolean)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2, $r3;
        com.fsck.k9.mail.Flag $r4;
        boolean $z0;
        com.fsck.k9.mail.MessagingException r5;
        com.fsck.k9.mailstore.LocalFolder r6, $r8;
        com.fsck.k9.mailstore.LocalStore $r7;
        com.fsck.k9.mail.Message $r9;
        java.util.List $r10;
        java.lang.RuntimeException $r11;
        java.lang.Throwable $r12;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: com.fsck.k9.mail.Flag;

        $z0 := @parameter4: boolean;

        r6 = null;

     label1:
        $r7 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

        $r8 = virtualinvoke $r7.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LocalFolder getFolder(java.lang.String)>($r2);

     label2:
        r6 = $r8;

     label3:
        virtualinvoke $r8.<com.fsck.k9.mail.Folder: void open(int)>(0);

        $r9 = virtualinvoke $r8.<com.fsck.k9.mail.Folder: com.fsck.k9.mail.Message getMessage(java.lang.String)>($r3);

     label4:
        if $r9 == null goto label6;

     label5:
        $r10 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r9);

        virtualinvoke r0.<com.fsck.k9.controller.MessagingController: void setFlag(com.fsck.k9.Account,java.lang.String,java.util.List,com.fsck.k9.mail.Flag,boolean)>($r1, $r2, $r10, $r4, $z0);

     label6:
        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r8);

        return;

     label7:
        r5 := @caughtexception;

     label8:
        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r5);

        throw $r11;

     label9:
        $r12 := @caughtexception;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r6);

        throw $r12;

        catch com.fsck.k9.mail.MessagingException from label1 to label2 with label7;
        catch com.fsck.k9.mail.MessagingException from label3 to label4 with label7;
        catch com.fsck.k9.mail.MessagingException from label5 to label6 with label7;
        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label8 to label9 with label9;
    }
    public void setFlag(com.fsck.k9.Account, java.lang.String, java.util.List, com.fsck.k9.mail.Flag, boolean)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2, $r10;
        java.util.List r3;
        com.fsck.k9.mail.Flag $r4, $r9;
        boolean $z0, $z1;
        com.fsck.k9.mail.MessagingException r5;
        com.fsck.k9.mail.Folder r6, $r8;
        com.fsck.k9.mailstore.LocalStore $r7;
        java.util.Iterator $r11;
        java.lang.Object $r12;
        com.fsck.k9.mail.Message r13;
        java.util.concurrent.ConcurrentHashMap $r14;
        java.lang.RuntimeException $r15;
        java.lang.Throwable $r16;
        java.util.Set $r17;
        int $i0;
        com.fsck.k9.controller.MessagingListener r18;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.List;

        $r4 := @parameter3: com.fsck.k9.mail.Flag;

        $z0 := @parameter4: boolean;

        r6 = null;

     label01:
        $r7 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

        $r8 = virtualinvoke $r7.<com.fsck.k9.mail.Store: com.fsck.k9.mail.Folder getFolder(java.lang.String)>($r2);

     label02:
        r6 = $r8;

     label03:
        virtualinvoke $r8.<com.fsck.k9.mail.Folder: void open(int)>(0);

     label04:
        $r9 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag FLAGGED>;

     label05:
        if $r4 != $r9 goto label21;

        if $z0 != 0 goto label21;

     label06:
        $r10 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getOutboxFolderName()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r2);

     label07:
        if $z1 == 0 goto label21;

     label08:
        $r11 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

     label10:
        if $z1 == 0 goto label21;

     label11:
        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

     label12:
        r13 = (com.fsck.k9.mail.Message) $r12;

     label13:
        $r10 = virtualinvoke r13.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

     label14:
        if $r10 == null goto label09;

     label15:
        $r14 = r0.<com.fsck.k9.controller.MessagingController: java.util.concurrent.ConcurrentHashMap sendCount>;

     label16:
        virtualinvoke $r14.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>($r10);

     label17:
        goto label09;

     label18:
        r5 := @caughtexception;

     label19:
        $r15 = new java.lang.RuntimeException;

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r5);

        throw $r15;

     label20:
        $r16 := @caughtexception;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r6);

        throw $r16;

     label21:
        $r17 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r4);

        virtualinvoke $r8.<com.fsck.k9.mail.Folder: void setFlags(java.util.List,java.util.Set,boolean)>(r3, $r17, $z0);

        $i0 = virtualinvoke $r8.<com.fsck.k9.mail.Folder: int getUnreadMessageCount()>();

        $r17 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r11 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>();

     label22:
        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

     label23:
        if $z1 == 0 goto label28;

     label24:
        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

     label25:
        r18 = (com.fsck.k9.controller.MessagingListener) $r12;

     label26:
        interfaceinvoke r18.<com.fsck.k9.controller.MessagingListener: void folderStatusChanged(com.fsck.k9.Account,java.lang.String,int)>($r1, $r2, $i0);

     label27:
        goto label22;

     label28:
        r3 = staticinvoke <com.fsck.k9.controller.MessagingController: java.util.List getUidsFromMessages(java.util.List)>(r3);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void queueSetFlag(com.fsck.k9.Account,java.lang.String,boolean,com.fsck.k9.mail.Flag,java.util.List)>($r1, $r2, $z0, $r4, r3);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void processPendingCommands(com.fsck.k9.Account)>($r1);

     label29:
        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r8);

        return;

        catch com.fsck.k9.mail.MessagingException from label01 to label02 with label18;
        catch com.fsck.k9.mail.MessagingException from label03 to label04 with label18;
        catch com.fsck.k9.mail.MessagingException from label06 to label07 with label18;
        catch com.fsck.k9.mail.MessagingException from label08 to label10 with label18;
        catch com.fsck.k9.mail.MessagingException from label11 to label12 with label18;
        catch com.fsck.k9.mail.MessagingException from label13 to label14 with label18;
        catch com.fsck.k9.mail.MessagingException from label16 to label17 with label18;
        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label03 to label05 with label20;
        catch java.lang.Throwable from label06 to label07 with label20;
        catch java.lang.Throwable from label08 to label10 with label20;
        catch java.lang.Throwable from label11 to label14 with label20;
        catch java.lang.Throwable from label15 to label17 with label20;
        catch java.lang.Throwable from label19 to label20 with label20;
        catch com.fsck.k9.mail.MessagingException from label21 to label23 with label18;
        catch com.fsck.k9.mail.MessagingException from label24 to label25 with label18;
        catch com.fsck.k9.mail.MessagingException from label26 to label27 with label18;
        catch com.fsck.k9.mail.MessagingException from label28 to label29 with label18;
        catch java.lang.Throwable from label21 to label23 with label20;
        catch java.lang.Throwable from label24 to label27 with label20;
        catch java.lang.Throwable from label28 to label29 with label20;
    }
    public void setFlag(com.fsck.k9.Account, java.util.List, com.fsck.k9.mail.Flag, boolean)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.util.List r2;
        com.fsck.k9.mail.Flag $r3;
        boolean $z0;
        com.fsck.k9.controller.MessagingController$16 $r4;
        java.util.concurrent.ExecutorService $r5;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        r2 := @parameter1: java.util.List;

        $r3 := @parameter2: com.fsck.k9.mail.Flag;

        $z0 := @parameter3: boolean;

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void setFlagInCache(com.fsck.k9.Account,java.util.List,com.fsck.k9.mail.Flag,boolean)>($r1, r2, $r3, $z0);

        $r5 = r0.<com.fsck.k9.controller.MessagingController: java.util.concurrent.ExecutorService threadPool>;

        $r4 = new com.fsck.k9.controller.MessagingController$16;

        specialinvoke $r4.<com.fsck.k9.controller.MessagingController$16: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,java.util.List,com.fsck.k9.mail.Flag,boolean)>(r0, $r1, r2, $r3, $z0);

        interfaceinvoke $r5.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r4);

        return;
    }
    public void setFlagForThreads(com.fsck.k9.Account, java.util.List, com.fsck.k9.mail.Flag, boolean)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.util.List r2;
        com.fsck.k9.mail.Flag $r3;
        boolean $z0;
        com.fsck.k9.controller.MessagingController$17 $r4;
        java.util.concurrent.ExecutorService $r5;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        r2 := @parameter1: java.util.List;

        $r3 := @parameter2: com.fsck.k9.mail.Flag;

        $z0 := @parameter3: boolean;

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void setFlagForThreadsInCache(com.fsck.k9.Account,java.util.List,com.fsck.k9.mail.Flag,boolean)>($r1, r2, $r3, $z0);

        $r5 = r0.<com.fsck.k9.controller.MessagingController: java.util.concurrent.ExecutorService threadPool>;

        $r4 = new com.fsck.k9.controller.MessagingController$17;

        specialinvoke $r4.<com.fsck.k9.controller.MessagingController$17: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,java.util.List,com.fsck.k9.mail.Flag,boolean)>(r0, $r1, r2, $r3, $z0);

        interfaceinvoke $r5.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r4);

        return;
    }
    public boolean setupPushing(com.fsck.k9.Account)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.util.concurrent.ConcurrentHashMap $r3;
        java.lang.Object $r4;
        com.fsck.k9.mail.Pusher r5, r22;
        com.fsck.k9.Account$FolderMode $r6, $r7;
        java.util.List r8, $r10;
        com.fsck.k9.mailstore.LocalStore $r9;
        java.util.Iterator $r11;
        boolean $z0;
        com.fsck.k9.mail.Folder r12;
        java.lang.String $r13, $r14;
        com.fsck.k9.mail.Folder$FolderClass $r15, $r16;
        java.lang.Object[] $r17;
        java.lang.Exception r18, r23;
        android.content.Context $r19;
        int $i0, $i1;
        java.lang.Integer $r20;
        com.fsck.k9.mail.Store $r21;
        java.util.ArrayList $r24;
        com.fsck.k9.controller.MessagingControllerPushReceiver $r25;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

     label01:
        $r3 = r0.<com.fsck.k9.controller.MessagingController: java.util.concurrent.ConcurrentHashMap pushers>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>($r1);

        r5 = (com.fsck.k9.mail.Pusher) $r4;

     label02:
        if r5 == null goto label04;

     label03:
        interfaceinvoke r5.<com.fsck.k9.mail.Pusher: void stop()>();

     label04:
        $r6 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.Account$FolderMode getFolderDisplayMode()>();

        $r7 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.Account$FolderMode getFolderPushMode()>();

     label05:
        $r24 = new java.util.ArrayList;

        r8 = $r24;

     label06:
        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

        $r9 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

        $r10 = virtualinvoke $r9.<com.fsck.k9.mail.Store: java.util.List getPersonalNamespaces(boolean)>(0);

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

     label08:
        if $z0 == 0 goto label18;

     label09:
        $r4 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r12 = (com.fsck.k9.mail.Folder) $r4;

        $r13 = virtualinvoke r12.<com.fsck.k9.mail.Folder: java.lang.String getName()>();

        $r14 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getOutboxFolderName()>();

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

     label10:
        if $z0 != 0 goto label07;

     label11:
        virtualinvoke r12.<com.fsck.k9.mail.Folder: void open(int)>(0);

        $r15 = virtualinvoke r12.<com.fsck.k9.mail.Folder: com.fsck.k9.mail.Folder$FolderClass getDisplayClass()>();

        $r16 = virtualinvoke r12.<com.fsck.k9.mail.Folder: com.fsck.k9.mail.Folder$FolderClass getPushClass()>();

        $z0 = specialinvoke r0.<com.fsck.k9.controller.MessagingController: boolean modeMismatch(com.fsck.k9.Account$FolderMode,com.fsck.k9.mail.Folder$FolderClass)>($r6, $r15);

     label12:
        if $z0 != 0 goto label07;

     label13:
        $z0 = specialinvoke r0.<com.fsck.k9.controller.MessagingController: boolean modeMismatch(com.fsck.k9.Account$FolderMode,com.fsck.k9.mail.Folder$FolderClass)>($r7, $r16);

     label14:
        if $z0 != 0 goto label07;

     label15:
        $r17 = newarray (java.lang.Object)[2];

        $r13 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getDescription()>();

        $r17[0] = $r13;

        $r13 = virtualinvoke r12.<com.fsck.k9.mail.Folder: java.lang.String getName()>();

        $r17[1] = $r13;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Starting pusher for %s:%s", $r17);

        $r13 = virtualinvoke r12.<com.fsck.k9.mail.Folder: java.lang.String getName()>();

        interfaceinvoke $r24.<java.util.List: boolean add(java.lang.Object)>($r13);

     label16:
        goto label07;

     label17:
        r18 := @caughtexception;

        $r17 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r18, "Got exception while setting up pushing", $r17);

        return 0;

     label18:
        $z0 = interfaceinvoke $r24.<java.util.List: boolean isEmpty()>();

     label19:
        if $z0 != 0 goto label36;

        $r25 = new com.fsck.k9.controller.MessagingControllerPushReceiver;

     label20:
        $r19 = r0.<com.fsck.k9.controller.MessagingController: android.content.Context context>;

        specialinvoke $r25.<com.fsck.k9.controller.MessagingControllerPushReceiver: void <init>(android.content.Context,com.fsck.k9.Account,com.fsck.k9.controller.MessagingController)>($r19, $r1, r0);

        $i0 = virtualinvoke $r1.<com.fsck.k9.Account: int getMaxPushFolders()>();

        $i1 = interfaceinvoke $r24.<java.util.List: int size()>();

     label21:
        if $i1 <= $i0 goto label23;

     label22:
        $r17 = newarray (java.lang.Object)[3];

        $r13 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getDescription()>();

        $r17[0] = $r13;

        $i1 = interfaceinvoke $r24.<java.util.List: int size()>();

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r17[1] = $r20;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r17[2] = $r20;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Count of folders to push for account %s is %d, greater than limit of %d, truncating", $r17);

        r8 = interfaceinvoke $r24.<java.util.List: java.util.List subList(int,int)>(0, $i0);

     label23:
        $r21 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mail.Store getRemoteStore()>();

        $z0 = virtualinvoke $r21.<com.fsck.k9.mail.Store: boolean isPushCapable()>();

     label24:
        if $z0 != 0 goto label27;

     label25:
        $r17 = newarray (java.lang.Object)[1];

        $r13 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getDescription()>();

        $r17[0] = $r13;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Account %s is not push capable, skipping", $r17);

     label26:
        return 0;

     label27:
        r5 = virtualinvoke $r21.<com.fsck.k9.mail.Store: com.fsck.k9.mail.Pusher getPusher(com.fsck.k9.mail.PushReceiver)>($r25);

     label28:
        if r5 == null goto label32;

     label29:
        $r3 = r0.<com.fsck.k9.controller.MessagingController: java.util.concurrent.ConcurrentHashMap pushers>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($r1, r5);

        r22 = (com.fsck.k9.mail.Pusher) $r4;

     label30:
        if r22 != null goto label32;

     label31:
        interfaceinvoke r5.<com.fsck.k9.mail.Pusher: void start(java.util.List)>(r8);

     label32:
        return 1;

     label33:
        r23 := @caughtexception;

     label34:
        $r17 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r23, "Could not get remote store", $r17);

     label35:
        return 0;

     label36:
        $r17 = newarray (java.lang.Object)[1];

        $r13 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getDescription()>();

        $r17[0] = $r13;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("No folders are configured for pushing in account %s", $r17);

     label37:
        return 0;

        catch java.lang.Exception from label01 to label02 with label17;
        catch java.lang.Exception from label03 to label05 with label17;
        catch java.lang.Exception from label06 to label08 with label17;
        catch java.lang.Exception from label09 to label10 with label17;
        catch java.lang.Exception from label11 to label12 with label17;
        catch java.lang.Exception from label13 to label14 with label17;
        catch java.lang.Exception from label15 to label16 with label17;
        catch java.lang.Exception from label18 to label19 with label17;
        catch java.lang.Exception from label20 to label21 with label17;
        catch java.lang.Exception from label22 to label23 with label17;
        catch java.lang.Exception from label23 to label24 with label33;
        catch java.lang.Exception from label25 to label26 with label33;
        catch java.lang.Exception from label27 to label28 with label33;
        catch java.lang.Exception from label29 to label30 with label33;
        catch java.lang.Exception from label31 to label32 with label33;
        catch java.lang.Exception from label34 to label35 with label17;
        catch java.lang.Exception from label36 to label37 with label17;
    }
    void stop() throws java.lang.InterruptedException
    {
        com.fsck.k9.controller.MessagingController r0;
        java.lang.Thread $r1;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        r0.<com.fsck.k9.controller.MessagingController: boolean stopped> = 1;

        $r1 = r0.<com.fsck.k9.controller.MessagingController: java.lang.Thread controllerThread>;

        virtualinvoke $r1.<java.lang.Thread: void interrupt()>();

        $r1 = r0.<com.fsck.k9.controller.MessagingController: java.lang.Thread controllerThread>;

        virtualinvoke $r1.<java.lang.Thread: void join(long)>(1000L);

        return;
    }
    public void stopAllPushing()
    {
        com.fsck.k9.controller.MessagingController r0;
        java.lang.Object[] $r1;
        java.util.concurrent.ConcurrentHashMap $r2;
        java.util.Collection $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        com.fsck.k9.mail.Pusher r6;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Stopping all pushers", $r1);

        $r2 = r0.<com.fsck.k9.controller.MessagingController: java.util.concurrent.ConcurrentHashMap pushers>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.fsck.k9.mail.Pusher) $r5;

        interfaceinvoke $r4.<java.util.Iterator: void remove()>();

        interfaceinvoke r6.<com.fsck.k9.mail.Pusher: void stop()>();

        goto label1;

     label2:
        return;
    }
    public void synchronizeMailbox(com.fsck.k9.Account, java.lang.String, com.fsck.k9.controller.MessagingListener, com.fsck.k9.mail.Folder)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2;
        com.fsck.k9.controller.MessagingListener $r3;
        com.fsck.k9.mail.Folder $r4;
        com.fsck.k9.controller.MessagingController$9 $r5;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.fsck.k9.controller.MessagingListener;

        $r4 := @parameter3: com.fsck.k9.mail.Folder;

        $r5 = new com.fsck.k9.controller.MessagingController$9;

        specialinvoke $r5.<com.fsck.k9.controller.MessagingController$9: void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder)>(r0, $r1, $r2, $r3, $r4);

        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void putBackground(java.lang.String,com.fsck.k9.controller.MessagingListener,java.lang.Runnable)>("synchronizeMailbox", $r3, $r5);

        return;
    }
    void synchronizeMailboxSynchronous(com.fsck.k9.Account, java.lang.String, com.fsck.k9.controller.MessagingListener, com.fsck.k9.mail.Folder)
    {
        com.fsck.k9.controller.MessagingController r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2, $r13, $r39;
        com.fsck.k9.controller.MessagingListener $r3, r17;
        com.fsck.k9.mail.Folder $r4, r10, $r28;
        java.util.ArrayList r5, r6;
        java.util.concurrent.atomic.AtomicInteger r7;
        com.fsck.k9.mail.MessagingException r8;
        java.util.HashMap r9;
        com.fsck.k9.mailstore.LocalFolder r11, $r20;
        java.lang.Object[] $r12;
        java.util.Set $r14;
        java.util.Iterator $r15, $r34;
        boolean $z0;
        java.lang.Object $r16;
        java.lang.Exception r18, r31;
        com.fsck.k9.mailstore.LocalStore $r19;
        java.util.Map $r21;
        com.fsck.k9.notification.NotificationController $r22;
        int $i0, $i1, i2, $i4;
        java.lang.Integer $r23;
        java.util.Date $r24;
        long $l3, $l5;
        com.fsck.k9.mail.AuthenticationFailedException r25;
        java.lang.Throwable $r26;
        com.fsck.k9.mail.Store $r27;
        com.fsck.k9.Account$Expunge $r29, $r30;
        java.util.List $r32;
        com.fsck.k9.mail.Message r33;
        java.lang.Long r35;
        byte $b6;
        java.lang.StringBuilder $r36;
        com.fsck.k9.mailstore.LocalFolder$MoreMessages $r37, $r38;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.fsck.k9.controller.MessagingListener;

        $r4 := @parameter3: com.fsck.k9.mail.Folder;

        r10 = null;

        r11 = null;

        $r12 = newarray (java.lang.Object)[2];

        $r13 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getDescription()>();

        $r12[0] = $r13;

        $r12[1] = $r2;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Synchronizing folder %s:%s", $r12);

        $r14 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners(com.fsck.k9.controller.MessagingListener)>($r3);

        $r15 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label001:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label002;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r17 = (com.fsck.k9.controller.MessagingListener) $r16;

        interfaceinvoke r17.<com.fsck.k9.controller.MessagingListener: void synchronizeMailboxStarted(com.fsck.k9.Account,java.lang.String)>($r1, $r2);

        goto label001;

     label002:
        $r13 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getOutboxFolderName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z0 == 0 goto label004;

        $r14 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners(com.fsck.k9.controller.MessagingListener)>($r3);

        $r15 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label003:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label207;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (com.fsck.k9.controller.MessagingListener) $r16;

        interfaceinvoke $r3.<com.fsck.k9.controller.MessagingListener: void synchronizeMailboxFinished(com.fsck.k9.Account,java.lang.String,int,int)>($r1, $r2, 0, 0);

        goto label003;

     label004:
        r18 = null;

     label005:
        $r12 = newarray (java.lang.Object)[1];

     label006:
        $r13 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getDescription()>();

     label007:
        $r12[0] = $r13;

     label008:
        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("SYNC: About to process pending commands for account %s", $r12);

     label009:
        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void processPendingCommandsSynchronous(com.fsck.k9.Account)>($r1);

     label010:
        $r12 = newarray (java.lang.Object)[1];

     label011:
        $r12[0] = $r2;

     label012:
        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("SYNC: About to get local folder %s", $r12);

        $r19 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

        $r20 = virtualinvoke $r19.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LocalFolder getFolder(java.lang.String)>($r2);

     label013:
        r11 = $r20;

     label014:
        virtualinvoke $r20.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(0);

        virtualinvoke $r20.<com.fsck.k9.mailstore.LocalFolder: void updateLastUid()>();

        $r21 = virtualinvoke $r20.<com.fsck.k9.mailstore.LocalFolder: java.util.Map getAllMessagesAndEffectiveDates()>();

     label015:
        if $r4 == null goto label063;

     label016:
        $r12 = newarray (java.lang.Object)[1];

     label017:
        $r12[0] = $r2;

     label018:
        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("SYNC: using providedRemoteFolder %s", $r12);

     label019:
        r10 = $r4;

     label020:
        $r22 = r0.<com.fsck.k9.controller.MessagingController: com.fsck.k9.notification.NotificationController notificationController>;

     label021:
        virtualinvoke $r22.<com.fsck.k9.notification.NotificationController: void clearAuthenticationErrorNotification(com.fsck.k9.Account,boolean)>($r1, 1);

        $i0 = virtualinvoke r10.<com.fsck.k9.mail.Folder: int getMessageCount()>();

        $i1 = virtualinvoke $r20.<com.fsck.k9.mailstore.LocalFolder: int getVisibleLimit()>();

     label022:
        i2 = $i1;

        if $i1 >= 0 goto label023;

        i2 = 25;

     label023:
        r5 = new java.util.ArrayList;

     label024:
        specialinvoke r5.<java.util.ArrayList: void <init>()>();

     label025:
        r9 = new java.util.HashMap;

     label026:
        specialinvoke r9.<java.util.HashMap: void <init>()>();

     label027:
        $r12 = newarray (java.lang.Object)[2];

     label028:
        $r12[0] = $r2;

     label029:
        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label030:
        $r12[1] = $r23;

     label031:
        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("SYNC: Remote message count for folder %s is %d", $r12);

        $r24 = virtualinvoke $r1.<com.fsck.k9.Account: java.util.Date getEarliestPollDate()>();

     label032:
        if $r24 == null goto label092;

     label033:
        $l3 = virtualinvoke $r24.<java.util.Date: long getTime()>();

     label034:
        $i1 = 1;

        if $i0 <= 0 goto label123;

        if i2 <= 0 goto label093;

        $i1 = $i0 - i2;

     label035:
        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

     label036:
        $i1 = $i1 + 1;

     label037:
        $r12 = newarray (java.lang.Object)[3];

     label038:
        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

     label039:
        $r12[0] = $r23;

     label040:
        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label041:
        $r12[1] = $r23;

        $r12[2] = $r2;

     label042:
        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("SYNC: About to get messages %d through %d for folder %s", $r12);

     label043:
        r7 = new java.util.concurrent.atomic.AtomicInteger;

     label044:
        specialinvoke r7.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        $r14 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners(com.fsck.k9.controller.MessagingListener)>($r3);

        $r15 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label045:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

     label046:
        if $z0 == 0 goto label094;

     label047:
        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

     label048:
        r17 = (com.fsck.k9.controller.MessagingListener) $r16;

     label049:
        interfaceinvoke r17.<com.fsck.k9.controller.MessagingListener: void synchronizeMailboxHeadersStarted(com.fsck.k9.Account,java.lang.String)>($r1, $r2);

     label050:
        goto label045;

     label051:
        r25 := @caughtexception;

     label052:
        virtualinvoke r0.<com.fsck.k9.controller.MessagingController: void handleAuthenticationFailure(com.fsck.k9.Account,boolean)>($r1, 1);

        $r14 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners(com.fsck.k9.controller.MessagingListener)>($r3);

        $r15 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label053:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

     label054:
        if $z0 == 0 goto label199;

     label055:
        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (com.fsck.k9.controller.MessagingListener) $r16;

        interfaceinvoke $r3.<com.fsck.k9.controller.MessagingListener: void synchronizeMailboxFailed(com.fsck.k9.Account,java.lang.String,java.lang.String)>($r1, $r2, "Authentication failure");

     label056:
        goto label053;

     label057:
        $r26 := @caughtexception;

        if $r4 != null goto label058;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r10);

     label058:
        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r11);

        throw $r26;

     label059:
        r18 := @caughtexception;

     label060:
        $r12 = newarray (java.lang.Object)[0];

     label061:
        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r18, "Failure processing command, but allow message sync attempt", $r12);

     label062:
        goto label010;

     label063:
        $r27 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mail.Store getRemoteStore()>();

     label064:
        $r12 = newarray (java.lang.Object)[1];

     label065:
        $r12[0] = $r2;

     label066:
        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("SYNC: About to get remote folder %s", $r12);

        $r28 = virtualinvoke $r27.<com.fsck.k9.mail.Store: com.fsck.k9.mail.Folder getFolder(java.lang.String)>($r2);

     label067:
        r10 = $r28;

     label068:
        $z0 = specialinvoke r0.<com.fsck.k9.controller.MessagingController: boolean verifyOrCreateRemoteSpecialFolder(com.fsck.k9.Account,java.lang.String,com.fsck.k9.mail.Folder,com.fsck.k9.controller.MessagingListener)>($r1, $r2, $r28, $r3);

     label069:
        if $z0 != 0 goto label071;

        if $r4 != null goto label070;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r28);

     label070:
        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r20);

        return;

     label071:
        $r12 = newarray (java.lang.Object)[1];

     label072:
        $r12[0] = $r2;

     label073:
        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("SYNC: About to open remote folder %s", $r12);

     label074:
        $r29 = <com.fsck.k9.Account$Expunge: com.fsck.k9.Account$Expunge EXPUNGE_ON_POLL>;

     label075:
        $r30 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.Account$Expunge getExpungePolicy()>();

     label076:
        if $r29 != $r30 goto label081;

     label077:
        $r12 = newarray (java.lang.Object)[2];

     label078:
        $r13 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getDescription()>();

     label079:
        $r12[0] = $r13;

        $r12[1] = $r2;

     label080:
        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("SYNC: Expunging folder %s:%s", $r12);

        virtualinvoke $r28.<com.fsck.k9.mail.Folder: void expunge()>();

     label081:
        virtualinvoke $r28.<com.fsck.k9.mail.Folder: void open(int)>(1);

     label082:
        goto label020;

     label083:
        r31 := @caughtexception;

     label084:
        $r12 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r31, "synchronizeMailbox", $r12);

        $r13 = specialinvoke r0.<com.fsck.k9.controller.MessagingController: java.lang.String getRootCauseMessage(java.lang.Throwable)>(r31);

     label085:
        if r11 == null goto label087;

     label086:
        virtualinvoke r11.<com.fsck.k9.mailstore.LocalFolder: void setStatus(java.lang.String)>($r13);

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke r11.<com.fsck.k9.mailstore.LocalFolder: void setLastChecked(long)>($l3);

     label087:
        $r14 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners(com.fsck.k9.controller.MessagingListener)>($r3);

        $r15 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label088:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

     label089:
        if $z0 == 0 goto label204;

     label090:
        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (com.fsck.k9.controller.MessagingListener) $r16;

        interfaceinvoke $r3.<com.fsck.k9.controller.MessagingListener: void synchronizeMailboxFailed(com.fsck.k9.Account,java.lang.String,java.lang.String)>($r1, $r2, $r13);

     label091:
        goto label088;

     label092:
        $l3 = 0L;

        goto label034;

     label093:
        $i1 = 1;

        goto label037;

     label094:
        $r32 = virtualinvoke r10.<com.fsck.k9.mail.Folder: java.util.List getMessages(int,int,java.util.Date,com.fsck.k9.mail.MessageRetrievalListener)>($i1, $i0, $r24, null);

        i2 = interfaceinvoke $r32.<java.util.List: int size()>();

        $r15 = interfaceinvoke $r32.<java.util.List: java.util.Iterator iterator()>();

     label095:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

     label096:
        if $z0 == 0 goto label113;

     label097:
        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

     label098:
        r33 = (com.fsck.k9.mail.Message) $r16;

     label099:
        virtualinvoke r7.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        $r14 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners(com.fsck.k9.controller.MessagingListener)>($r3);

        $r34 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label100:
        $z0 = interfaceinvoke $r34.<java.util.Iterator: boolean hasNext()>();

     label101:
        if $z0 == 0 goto label106;

     label102:
        $r16 = interfaceinvoke $r34.<java.util.Iterator: java.lang.Object next()>();

     label103:
        r17 = (com.fsck.k9.controller.MessagingListener) $r16;

     label104:
        $i4 = virtualinvoke r7.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        interfaceinvoke r17.<com.fsck.k9.controller.MessagingListener: void synchronizeMailboxHeadersProgress(com.fsck.k9.Account,java.lang.String,int,int)>($r1, $r2, $i4, i2);

     label105:
        goto label100;

     label106:
        $r13 = virtualinvoke r33.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

        $r16 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13);

     label107:
        r35 = (java.lang.Long) $r16;

     label108:
        if r35 == null goto label111;

     label109:
        $l5 = virtualinvoke r35.<java.lang.Long: long longValue()>();

     label110:
        $b6 = $l5 cmp $l3;

        if $b6 < 0 goto label095;

     label111:
        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r33);

        $r13 = virtualinvoke r33.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

        interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, r33);

     label112:
        goto label095;

     label113:
        $r12 = newarray (java.lang.Object)[2];

     label114:
        i2 = interfaceinvoke r9.<java.util.Map: int size()>();

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

     label115:
        $r12[0] = $r23;

        $r12[1] = $r2;

     label116:
        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("SYNC: Got %d messages for folder %s", $r12);

        $r14 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners(com.fsck.k9.controller.MessagingListener)>($r3);

        $r15 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label117:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

     label118:
        if $z0 == 0 goto label126;

     label119:
        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

     label120:
        r17 = (com.fsck.k9.controller.MessagingListener) $r16;

     label121:
        i2 = virtualinvoke r7.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $i4 = interfaceinvoke r9.<java.util.Map: int size()>();

        interfaceinvoke r17.<com.fsck.k9.controller.MessagingListener: void synchronizeMailboxHeadersFinished(com.fsck.k9.Account,java.lang.String,int,int)>($r1, $r2, i2, $i4);

     label122:
        goto label117;

     label123:
        if $i0 >= 0 goto label126;

     label124:
        r18 = new java.lang.Exception;

        $r36 = new java.lang.StringBuilder;

     label125:
        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Message count ");

        $r36 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r36 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for folder ");

        $r36 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r13 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r18.<java.lang.Exception: void <init>(java.lang.String)>($r13);

        throw r18;

     label126:
        $r37 = virtualinvoke $r20.<com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalFolder$MoreMessages getMoreMessages()>();

     label127:
        $z0 = virtualinvoke $r1.<com.fsck.k9.Account: boolean syncRemoteDeletions()>();

     label128:
        if $z0 == 0 goto label154;

     label129:
        r6 = new java.util.ArrayList;

     label130:
        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $r14 = interfaceinvoke $r21.<java.util.Map: java.util.Set keySet()>();

        $r15 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label131:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

     label132:
        if $z0 == 0 goto label139;

     label133:
        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

     label134:
        $r13 = (java.lang.String) $r16;

     label135:
        $r16 = interfaceinvoke r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13);

     label136:
        if $r16 != null goto label131;

     label137:
        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r13);

     label138:
        goto label131;

     label139:
        $r32 = virtualinvoke $r20.<com.fsck.k9.mailstore.LocalFolder: java.util.List getMessagesByUids(java.util.List)>(r6);

        $z0 = interfaceinvoke r6.<java.util.List: boolean isEmpty()>();

     label140:
        if $z0 != 0 goto label154;

     label141:
        $r37 = <com.fsck.k9.mailstore.LocalFolder$MoreMessages: com.fsck.k9.mailstore.LocalFolder$MoreMessages UNKNOWN>;

     label142:
        virtualinvoke $r20.<com.fsck.k9.mailstore.LocalFolder: void destroyMessages(java.util.List)>($r32);

        $r15 = interfaceinvoke $r32.<java.util.List: java.util.Iterator iterator()>();

     label143:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

     label144:
        if $z0 == 0 goto label154;

     label145:
        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

     label146:
        r33 = (com.fsck.k9.mail.Message) $r16;

     label147:
        $r14 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners(com.fsck.k9.controller.MessagingListener)>($r3);

        $r34 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label148:
        $z0 = interfaceinvoke $r34.<java.util.Iterator: boolean hasNext()>();

     label149:
        if $z0 == 0 goto label143;

     label150:
        $r16 = interfaceinvoke $r34.<java.util.Iterator: java.lang.Object next()>();

     label151:
        r17 = (com.fsck.k9.controller.MessagingListener) $r16;

     label152:
        interfaceinvoke r17.<com.fsck.k9.controller.MessagingListener: void synchronizeMailboxRemovedMessage(com.fsck.k9.Account,java.lang.String,com.fsck.k9.mail.Message)>($r1, $r2, r33);

     label153:
        goto label148;

     label154:
        $r38 = <com.fsck.k9.mailstore.LocalFolder$MoreMessages: com.fsck.k9.mailstore.LocalFolder$MoreMessages UNKNOWN>;

     label155:
        if $r37 != $r38 goto label157;

     label156:
        specialinvoke r0.<com.fsck.k9.controller.MessagingController: void updateMoreMessages(com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.Date,int)>(r10, $r20, $r24, $i1);

     label157:
        $i1 = specialinvoke r0.<com.fsck.k9.controller.MessagingController: int downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)>($r1, r10, $r20, r5, 0, 1);

        i2 = virtualinvoke $r20.<com.fsck.k9.mailstore.LocalFolder: int getUnreadMessageCount()>();

        $r14 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r15 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label158:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

     label159:
        if $z0 == 0 goto label164;

     label160:
        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

     label161:
        r17 = (com.fsck.k9.controller.MessagingListener) $r16;

     label162:
        interfaceinvoke r17.<com.fsck.k9.controller.MessagingListener: void folderStatusChanged(com.fsck.k9.Account,java.lang.String,int)>($r1, $r2, i2);

     label163:
        goto label158;

     label164:
        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r20.<com.fsck.k9.mailstore.LocalFolder: void setLastChecked(long)>($l3);

        virtualinvoke $r20.<com.fsck.k9.mailstore.LocalFolder: void setStatus(java.lang.String)>(null);

     label165:
        $r12 = newarray (java.lang.Object)[4];

     label166:
        $r13 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getDescription()>();

     label167:
        $r12[0] = $r13;

        $r12[1] = $r2;

     label168:
        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r35 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

     label169:
        $r12[2] = r35;

     label170:
        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

     label171:
        $r12[3] = $r23;

     label172:
        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Done synchronizing folder %s:%s @ %tc with %d new messages", $r12);

        $r14 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners(com.fsck.k9.controller.MessagingListener)>($r3);

        $r15 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label173:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

     label174:
        if $z0 == 0 goto label179;

     label175:
        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

     label176:
        r17 = (com.fsck.k9.controller.MessagingListener) $r16;

     label177:
        interfaceinvoke r17.<com.fsck.k9.controller.MessagingListener: void synchronizeMailboxFinished(com.fsck.k9.Account,java.lang.String,int,int)>($r1, $r2, $i0, $i1);

     label178:
        goto label173;

     label179:
        if r18 == null goto label193;

     label180:
        $r13 = specialinvoke r0.<com.fsck.k9.controller.MessagingController: java.lang.String getRootCauseMessage(java.lang.Throwable)>(r18);

     label181:
        $r12 = newarray (java.lang.Object)[3];

     label182:
        $r39 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getDescription()>();

     label183:
        $r12[0] = $r39;

     label184:
        $r39 = virtualinvoke $r20.<com.fsck.k9.mailstore.LocalFolder: java.lang.String getName()>();

     label185:
        $r12[1] = $r39;

        $r12[2] = $r13;

     label186:
        staticinvoke <timber.log.Timber: void e(java.lang.String,java.lang.Object[])>("Root cause failure in %s:%s was \'%s\'", $r12);

        virtualinvoke $r20.<com.fsck.k9.mailstore.LocalFolder: void setStatus(java.lang.String)>($r13);

        $r14 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners(com.fsck.k9.controller.MessagingListener)>($r3);

        $r15 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label187:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

     label188:
        if $z0 == 0 goto label193;

     label189:
        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

     label190:
        r17 = (com.fsck.k9.controller.MessagingListener) $r16;

     label191:
        interfaceinvoke r17.<com.fsck.k9.controller.MessagingListener: void synchronizeMailboxFailed(com.fsck.k9.Account,java.lang.String,java.lang.String)>($r1, $r2, $r13);

     label192:
        goto label187;

     label193:
        $r12 = newarray (java.lang.Object)[2];

     label194:
        $r13 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getDescription()>();

     label195:
        $r12[0] = $r13;

        $r12[1] = $r2;

     label196:
        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Done synchronizing folder %s:%s", $r12);

     label197:
        if $r4 != null goto label198;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r10);

     label198:
        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>($r20);

        return;

     label199:
        if $r4 != null goto label200;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r10);

     label200:
        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r11);

        return;

     label201:
        r8 := @caughtexception;

     label202:
        $r12 = newarray (java.lang.Object)[2];

        $r39 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getDescription()>();

        $r12[0] = $r39;

        $r39 = virtualinvoke r11.<com.fsck.k9.mailstore.LocalFolder: java.lang.String getName()>();

        $r12[1] = $r39;

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r31, "Could not set last checked on folder %s:%s", $r12);

     label203:
        goto label087;

     label204:
        virtualinvoke r0.<com.fsck.k9.controller.MessagingController: void notifyUserIfCertificateProblem(com.fsck.k9.Account,java.lang.Exception,boolean)>($r1, r31, 1);

        $r12 = newarray (java.lang.Object)[3];

        $r13 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getDescription()>();

        $r12[0] = $r13;

        $r12[1] = $r2;

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r35 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r12[2] = r35;

        staticinvoke <timber.log.Timber: void e(java.lang.String,java.lang.Object[])>("Failed synchronizing folder %s:%s @ %tc", $r12);

     label205:
        if $r4 != null goto label206;

        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r10);

     label206:
        staticinvoke <com.fsck.k9.controller.MessagingController: void closeFolder(com.fsck.k9.mail.Folder)>(r11);

     label207:
        return;

        catch com.fsck.k9.mail.AuthenticationFailedException from label006 to label007 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label008 to label009 with label051;
        catch java.lang.Exception from label005 to label009 with label083;
        catch java.lang.Throwable from label005 to label007 with label057;
        catch java.lang.Throwable from label008 to label009 with label057;
        catch java.lang.Exception from label009 to label010 with label059;
        catch java.lang.Throwable from label009 to label010 with label057;
        catch com.fsck.k9.mail.AuthenticationFailedException from label012 to label013 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label014 to label015 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label018 to label019 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label021 to label022 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label024 to label025 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label026 to label027 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label029 to label030 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label031 to label032 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label033 to label034 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label035 to label036 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label038 to label039 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label040 to label041 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label042 to label043 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label044 to label046 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label047 to label048 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label049 to label050 with label051;
        catch java.lang.Exception from label010 to label013 with label083;
        catch java.lang.Exception from label014 to label015 with label083;
        catch java.lang.Exception from label016 to label019 with label083;
        catch java.lang.Exception from label020 to label022 with label083;
        catch java.lang.Exception from label024 to label025 with label083;
        catch java.lang.Exception from label026 to label032 with label083;
        catch java.lang.Exception from label033 to label034 with label083;
        catch java.lang.Exception from label035 to label036 with label083;
        catch java.lang.Exception from label037 to label043 with label083;
        catch java.lang.Exception from label044 to label046 with label083;
        catch java.lang.Exception from label047 to label050 with label083;
        catch java.lang.Throwable from label010 to label011 with label057;
        catch java.lang.Throwable from label012 to label013 with label057;
        catch java.lang.Throwable from label014 to label015 with label057;
        catch java.lang.Throwable from label016 to label017 with label057;
        catch java.lang.Throwable from label018 to label019 with label057;
        catch java.lang.Throwable from label020 to label022 with label057;
        catch java.lang.Throwable from label023 to label028 with label057;
        catch java.lang.Throwable from label029 to label030 with label057;
        catch java.lang.Throwable from label031 to label032 with label057;
        catch java.lang.Throwable from label033 to label034 with label057;
        catch java.lang.Throwable from label035 to label036 with label057;
        catch java.lang.Throwable from label037 to label039 with label057;
        catch java.lang.Throwable from label040 to label041 with label057;
        catch java.lang.Throwable from label042 to label046 with label057;
        catch java.lang.Throwable from label047 to label050 with label057;
        catch java.lang.Throwable from label052 to label054 with label057;
        catch java.lang.Throwable from label055 to label056 with label057;
        catch com.fsck.k9.mail.AuthenticationFailedException from label061 to label062 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label063 to label064 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label066 to label067 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label068 to label069 with label051;
        catch java.lang.Exception from label060 to label062 with label083;
        catch java.lang.Exception from label063 to label067 with label083;
        catch java.lang.Exception from label068 to label069 with label083;
        catch java.lang.Throwable from label060 to label062 with label057;
        catch java.lang.Throwable from label063 to label065 with label057;
        catch java.lang.Throwable from label066 to label067 with label057;
        catch java.lang.Throwable from label068 to label069 with label057;
        catch com.fsck.k9.mail.AuthenticationFailedException from label073 to label074 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label075 to label076 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label078 to label079 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label080 to label082 with label051;
        catch java.lang.Exception from label071 to label074 with label083;
        catch java.lang.Exception from label075 to label076 with label083;
        catch java.lang.Exception from label077 to label082 with label083;
        catch java.lang.Throwable from label071 to label072 with label057;
        catch java.lang.Throwable from label073 to label076 with label057;
        catch java.lang.Throwable from label077 to label079 with label057;
        catch java.lang.Throwable from label080 to label082 with label057;
        catch java.lang.Throwable from label084 to label085 with label057;
        catch com.fsck.k9.mail.MessagingException from label086 to label087 with label201;
        catch java.lang.Throwable from label086 to label087 with label057;
        catch java.lang.Throwable from label087 to label089 with label057;
        catch java.lang.Throwable from label090 to label091 with label057;
        catch com.fsck.k9.mail.AuthenticationFailedException from label094 to label096 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label097 to label098 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label099 to label101 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label102 to label103 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label104 to label105 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label106 to label107 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label109 to label110 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label111 to label112 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label114 to label115 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label116 to label118 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label119 to label120 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label121 to label122 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label125 to label127 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label127 to label128 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label130 to label132 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label133 to label134 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label135 to label136 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label137 to label138 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label139 to label140 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label142 to label144 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label145 to label146 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label147 to label149 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label150 to label151 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label152 to label153 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label156 to label159 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label160 to label161 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label162 to label163 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label164 to label165 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label166 to label167 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label168 to label169 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label170 to label171 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label172 to label174 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label175 to label176 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label177 to label178 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label180 to label181 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label182 to label183 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label184 to label185 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label186 to label188 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label189 to label190 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label191 to label192 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label194 to label195 with label051;
        catch com.fsck.k9.mail.AuthenticationFailedException from label196 to label197 with label051;
        catch java.lang.Exception from label094 to label096 with label083;
        catch java.lang.Exception from label097 to label101 with label083;
        catch java.lang.Exception from label102 to label105 with label083;
        catch java.lang.Exception from label106 to label108 with label083;
        catch java.lang.Exception from label109 to label110 with label083;
        catch java.lang.Exception from label111 to label112 with label083;
        catch java.lang.Exception from label113 to label118 with label083;
        catch java.lang.Exception from label119 to label122 with label083;
        catch java.lang.Exception from label125 to label127 with label083;
        catch java.lang.Exception from label127 to label128 with label083;
        catch java.lang.Exception from label130 to label132 with label083;
        catch java.lang.Exception from label133 to label136 with label083;
        catch java.lang.Exception from label137 to label138 with label083;
        catch java.lang.Exception from label139 to label140 with label083;
        catch java.lang.Exception from label142 to label144 with label083;
        catch java.lang.Exception from label145 to label149 with label083;
        catch java.lang.Exception from label150 to label153 with label083;
        catch java.lang.Exception from label156 to label159 with label083;
        catch java.lang.Exception from label160 to label163 with label083;
        catch java.lang.Exception from label164 to label174 with label083;
        catch java.lang.Exception from label175 to label178 with label083;
        catch java.lang.Exception from label180 to label188 with label083;
        catch java.lang.Exception from label189 to label192 with label083;
        catch java.lang.Exception from label193 to label197 with label083;
        catch java.lang.Throwable from label094 to label096 with label057;
        catch java.lang.Throwable from label097 to label101 with label057;
        catch java.lang.Throwable from label102 to label105 with label057;
        catch java.lang.Throwable from label106 to label108 with label057;
        catch java.lang.Throwable from label109 to label110 with label057;
        catch java.lang.Throwable from label111 to label112 with label057;
        catch java.lang.Throwable from label113 to label115 with label057;
        catch java.lang.Throwable from label116 to label118 with label057;
        catch java.lang.Throwable from label119 to label122 with label057;
        catch java.lang.Throwable from label124 to label127 with label057;
        catch java.lang.Throwable from label127 to label128 with label057;
        catch java.lang.Throwable from label129 to label132 with label057;
        catch java.lang.Throwable from label133 to label136 with label057;
        catch java.lang.Throwable from label137 to label138 with label057;
        catch java.lang.Throwable from label139 to label140 with label057;
        catch java.lang.Throwable from label141 to label144 with label057;
        catch java.lang.Throwable from label145 to label149 with label057;
        catch java.lang.Throwable from label150 to label153 with label057;
        catch java.lang.Throwable from label154 to label155 with label057;
        catch java.lang.Throwable from label156 to label159 with label057;
        catch java.lang.Throwable from label160 to label163 with label057;
        catch java.lang.Throwable from label164 to label167 with label057;
        catch java.lang.Throwable from label168 to label169 with label057;
        catch java.lang.Throwable from label170 to label171 with label057;
        catch java.lang.Throwable from label172 to label174 with label057;
        catch java.lang.Throwable from label175 to label178 with label057;
        catch java.lang.Throwable from label180 to label183 with label057;
        catch java.lang.Throwable from label184 to label185 with label057;
        catch java.lang.Throwable from label186 to label188 with label057;
        catch java.lang.Throwable from label189 to label192 with label057;
        catch java.lang.Throwable from label193 to label195 with label057;
        catch java.lang.Throwable from label196 to label197 with label057;
        catch java.lang.Throwable from label202 to label203 with label057;
        catch java.lang.Throwable from label204 to label205 with label057;
    }
    public void systemStatusChanged()
    {
        com.fsck.k9.controller.MessagingController r0;
        java.util.Set $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.fsck.k9.controller.MessagingListener r4;

        r0 := @this: com.fsck.k9.controller.MessagingController;

        $r1 = virtualinvoke r0.<com.fsck.k9.controller.MessagingController: java.util.Set getListeners()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.fsck.k9.controller.MessagingListener) $r3;

        interfaceinvoke r4.<com.fsck.k9.controller.MessagingListener: void systemStatusChanged()>();

        goto label1;

     label2:
        return;
    }
