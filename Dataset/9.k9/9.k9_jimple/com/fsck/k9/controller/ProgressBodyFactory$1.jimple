com.fsck.k9.controller.ProgressBodyFactory$1 extends java.util.TimerTask
final com.fsck.k9.controller.ProgressBodyFactory this$0
final org.apache.commons.io.output.CountingOutputStream val$countingOutputStream
    void <init>(com.fsck.k9.controller.ProgressBodyFactory, org.apache.commons.io.output.CountingOutputStream)
    {
        com.fsck.k9.controller.ProgressBodyFactory$1 r0;
        com.fsck.k9.controller.ProgressBodyFactory $r1;
        org.apache.commons.io.output.CountingOutputStream $r2;

        r0 := @this: com.fsck.k9.controller.ProgressBodyFactory$1;

        $r1 := @parameter0: com.fsck.k9.controller.ProgressBodyFactory;

        $r2 := @parameter1: org.apache.commons.io.output.CountingOutputStream;

        r0.<com.fsck.k9.controller.ProgressBodyFactory$1: com.fsck.k9.controller.ProgressBodyFactory this$0> = $r1;

        r0.<com.fsck.k9.controller.ProgressBodyFactory$1: org.apache.commons.io.output.CountingOutputStream val$countingOutputStream> = $r2;

        specialinvoke r0.<java.util.TimerTask: void <init>()>();

        return;
    }
    public void run()
    {
        com.fsck.k9.controller.ProgressBodyFactory$1 r0;
        com.fsck.k9.controller.ProgressBodyFactory $r1;
        com.fsck.k9.controller.ProgressBodyFactory$ProgressListener $r2;
        org.apache.commons.io.output.CountingOutputStream $r3;
        int $i0;

        r0 := @this: com.fsck.k9.controller.ProgressBodyFactory$1;

        $r1 = r0.<com.fsck.k9.controller.ProgressBodyFactory$1: com.fsck.k9.controller.ProgressBodyFactory this$0>;

        $r2 = staticinvoke <com.fsck.k9.controller.ProgressBodyFactory: com.fsck.k9.controller.ProgressBodyFactory$ProgressListener access$000(com.fsck.k9.controller.ProgressBodyFactory)>($r1);

        $r3 = r0.<com.fsck.k9.controller.ProgressBodyFactory$1: org.apache.commons.io.output.CountingOutputStream val$countingOutputStream>;

        $i0 = virtualinvoke $r3.<org.apache.commons.io.output.CountingOutputStream: int getCount()>();

        interfaceinvoke $r2.<com.fsck.k9.controller.ProgressBodyFactory$ProgressListener: void updateProgress(int)>($i0);

        return;
    }
