com.fsck.k9.NotificationSetting extends java.lang.Object
private int ledColor
private boolean ledEnabled
private boolean ringEnabled
private java.lang.String ringtoneUri
private boolean vibrateEnabled
private int vibratePattern
private int vibrateTimes
    public void <init>()
    {
        com.fsck.k9.NotificationSetting r0;

        r0 := @this: com.fsck.k9.NotificationSetting;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static long[] getVibration(int, int)
    {
        int $i0, $i1, $i2, $i3;
        long[] r0, r1, r2, r3, r4, r5;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        r0 = newarray (long)[2];

        r0[0] = 300L;

        r0[1] = 200L;

        r1 = newarray (long)[2];

        r1[0] = 100L;

        r1[1] = 200L;

        r2 = newarray (long)[2];

        r2[0] = 100L;

        r2[1] = 500L;

        r3 = newarray (long)[2];

        r3[0] = 200L;

        r3[1] = 200L;

        r4 = newarray (long)[2];

        r4[0] = 200L;

        r4[1] = 500L;

        r5 = newarray (long)[2];

        r5[0] = 500L;

        r5[1] = 500L;

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label7;
            default: goto label1;
        };

     label1:
        $i0 = lengthof r0;

        $i0 = $i0 * $i1;

        r1 = newarray (long)[$i0];

        $i0 = 0;

     label2:
        if $i0 >= $i1 goto label8;

        $i2 = lengthof r0;

        $i2 = $i2 * $i0;

        $i3 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, $i2, $i3);

        $i0 = $i0 + 1;

        goto label2;

     label3:
        r0 = r1;

        goto label1;

     label4:
        r0 = r2;

        goto label1;

     label5:
        r0 = r3;

        goto label1;

     label6:
        r0 = r4;

        goto label1;

     label7:
        r0 = r5;

        goto label1;

     label8:
        r1[0] = 0L;

        return r1;
    }
    public int getLedColor()
    {
        com.fsck.k9.NotificationSetting r0;
        java.lang.Throwable $r1;
        int i0;

        r0 := @this: com.fsck.k9.NotificationSetting;

        entermonitor r0;

     label1:
        i0 = r0.<com.fsck.k9.NotificationSetting: int ledColor>;

     label2:
        exitmonitor r0;

        return i0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public java.lang.String getRingtone()
    {
        com.fsck.k9.NotificationSetting r0;
        java.lang.Throwable $r1;
        java.lang.String r2;

        r0 := @this: com.fsck.k9.NotificationSetting;

        entermonitor r0;

     label1:
        r2 = r0.<com.fsck.k9.NotificationSetting: java.lang.String ringtoneUri>;

     label2:
        exitmonitor r0;

        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public int getVibratePattern()
    {
        com.fsck.k9.NotificationSetting r0;
        java.lang.Throwable $r1;
        int i0;

        r0 := @this: com.fsck.k9.NotificationSetting;

        entermonitor r0;

     label1:
        i0 = r0.<com.fsck.k9.NotificationSetting: int vibratePattern>;

     label2:
        exitmonitor r0;

        return i0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public int getVibrateTimes()
    {
        com.fsck.k9.NotificationSetting r0;
        java.lang.Throwable $r1;
        int i0;

        r0 := @this: com.fsck.k9.NotificationSetting;

        entermonitor r0;

     label1:
        i0 = r0.<com.fsck.k9.NotificationSetting: int vibrateTimes>;

     label2:
        exitmonitor r0;

        return i0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public long[] getVibration()
    {
        com.fsck.k9.NotificationSetting r0;
        int $i0, $i1;
        long[] $r1;

        r0 := @this: com.fsck.k9.NotificationSetting;

        $i1 = r0.<com.fsck.k9.NotificationSetting: int vibratePattern>;

        $i0 = r0.<com.fsck.k9.NotificationSetting: int vibrateTimes>;

        $r1 = staticinvoke <com.fsck.k9.NotificationSetting: long[] getVibration(int,int)>($i1, $i0);

        return $r1;
    }
    public boolean isLedEnabled()
    {
        com.fsck.k9.NotificationSetting r0;
        java.lang.Throwable $r1;
        boolean z0;

        r0 := @this: com.fsck.k9.NotificationSetting;

        entermonitor r0;

     label1:
        z0 = r0.<com.fsck.k9.NotificationSetting: boolean ledEnabled>;

     label2:
        exitmonitor r0;

        return z0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public boolean isRingEnabled()
    {
        com.fsck.k9.NotificationSetting r0;
        java.lang.Throwable $r1;
        boolean z0;

        r0 := @this: com.fsck.k9.NotificationSetting;

        entermonitor r0;

     label1:
        z0 = r0.<com.fsck.k9.NotificationSetting: boolean ringEnabled>;

     label2:
        exitmonitor r0;

        return z0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public boolean isVibrateEnabled()
    {
        com.fsck.k9.NotificationSetting r0;
        java.lang.Throwable $r1;
        boolean z0;

        r0 := @this: com.fsck.k9.NotificationSetting;

        entermonitor r0;

     label1:
        z0 = r0.<com.fsck.k9.NotificationSetting: boolean vibrateEnabled>;

     label2:
        exitmonitor r0;

        return z0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void setLed(boolean)
    {
        com.fsck.k9.NotificationSetting r0;
        boolean $z0;
        java.lang.Throwable $r1;

        r0 := @this: com.fsck.k9.NotificationSetting;

        $z0 := @parameter0: boolean;

        entermonitor r0;

     label1:
        r0.<com.fsck.k9.NotificationSetting: boolean ledEnabled> = $z0;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void setLedColor(int)
    {
        com.fsck.k9.NotificationSetting r0;
        int $i0;
        java.lang.Throwable $r1;

        r0 := @this: com.fsck.k9.NotificationSetting;

        $i0 := @parameter0: int;

        entermonitor r0;

     label1:
        r0.<com.fsck.k9.NotificationSetting: int ledColor> = $i0;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void setRingEnabled(boolean)
    {
        com.fsck.k9.NotificationSetting r0;
        boolean $z0;
        java.lang.Throwable $r1;

        r0 := @this: com.fsck.k9.NotificationSetting;

        $z0 := @parameter0: boolean;

        entermonitor r0;

     label1:
        r0.<com.fsck.k9.NotificationSetting: boolean ringEnabled> = $z0;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void setRingtone(java.lang.String)
    {
        com.fsck.k9.NotificationSetting r0;
        java.lang.String $r1;
        java.lang.Throwable $r2;

        r0 := @this: com.fsck.k9.NotificationSetting;

        $r1 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        r0.<com.fsck.k9.NotificationSetting: java.lang.String ringtoneUri> = $r1;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void setVibrate(boolean)
    {
        com.fsck.k9.NotificationSetting r0;
        boolean $z0;
        java.lang.Throwable $r1;

        r0 := @this: com.fsck.k9.NotificationSetting;

        $z0 := @parameter0: boolean;

        entermonitor r0;

     label1:
        r0.<com.fsck.k9.NotificationSetting: boolean vibrateEnabled> = $z0;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void setVibratePattern(int)
    {
        com.fsck.k9.NotificationSetting r0;
        int $i0;
        java.lang.Throwable $r1;

        r0 := @this: com.fsck.k9.NotificationSetting;

        $i0 := @parameter0: int;

        entermonitor r0;

     label1:
        r0.<com.fsck.k9.NotificationSetting: int vibratePattern> = $i0;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void setVibrateTimes(int)
    {
        com.fsck.k9.NotificationSetting r0;
        int $i0;
        java.lang.Throwable $r1;

        r0 := @this: com.fsck.k9.NotificationSetting;

        $i0 := @parameter0: int;

        entermonitor r0;

     label1:
        r0.<com.fsck.k9.NotificationSetting: int vibrateTimes> = $i0;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
