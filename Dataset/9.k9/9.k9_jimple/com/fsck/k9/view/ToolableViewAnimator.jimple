com.fsck.k9.view.ToolableViewAnimator extends android.widget.ViewAnimator
private int mInitChild
    public void <init>(android.content.Context)
    {
        com.fsck.k9.view.ToolableViewAnimator r0;
        android.content.Context $r1;

        r0 := @this: com.fsck.k9.view.ToolableViewAnimator;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.ViewAnimator: void <init>(android.content.Context)>($r1);

        r0.<com.fsck.k9.view.ToolableViewAnimator: int mInitChild> = -1;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.fsck.k9.view.ToolableViewAnimator r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        boolean $z0;
        int[] $r3;
        android.content.res.TypedArray $r4;
        int $i0;

        r0 := @this: com.fsck.k9.view.ToolableViewAnimator;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.ViewAnimator: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        r0.<com.fsck.k9.view.ToolableViewAnimator: int mInitChild> = -1;

        $z0 = virtualinvoke r0.<com.fsck.k9.view.ToolableViewAnimator: boolean isInEditMode()>();

        if $z0 == 0 goto label1;

        $r3 = <com.fsck.k9.R$styleable: int[] ToolableViewAnimator>;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>($r2, $r3);

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>(0, -1);

        r0.<com.fsck.k9.view.ToolableViewAnimator: int mInitChild> = $i0;

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

     label1:
        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.fsck.k9.view.ToolableViewAnimator r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        boolean $z0;
        int[] $r3;
        android.content.res.TypedArray $r4;

        r0 := @this: com.fsck.k9.view.ToolableViewAnimator;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.widget.ViewAnimator: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        r0.<com.fsck.k9.view.ToolableViewAnimator: int mInitChild> = -1;

        $z0 = virtualinvoke r0.<com.fsck.k9.view.ToolableViewAnimator: boolean isInEditMode()>();

        if $z0 == 0 goto label1;

        $r3 = <com.fsck.k9.R$styleable: int[] ToolableViewAnimator>;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r3, $i0, 0);

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>(0, -1);

        r0.<com.fsck.k9.view.ToolableViewAnimator: int mInitChild> = $i0;

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

     label1:
        return;
    }
    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        com.fsck.k9.view.ToolableViewAnimator r0;
        android.view.View $r1;
        int $i0, $i1, $i2;
        android.view.ViewGroup$LayoutParams $r2;
        boolean $z0;

        r0 := @this: com.fsck.k9.view.ToolableViewAnimator;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        $z0 = virtualinvoke r0.<com.fsck.k9.view.ToolableViewAnimator: boolean isInEditMode()>();

        if $z0 == 0 goto label1;

        $i2 = r0.<com.fsck.k9.view.ToolableViewAnimator: int mInitChild>;

        $i1 = $i2 + -1;

        r0.<com.fsck.k9.view.ToolableViewAnimator: int mInitChild> = $i1;

        if $i2 <= 0 goto label1;

        return;

     label1:
        specialinvoke r0.<android.widget.ViewAnimator: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>($r1, $i0, $r2);

        return;
    }
    public int getDisplayedChildId()
    {
        com.fsck.k9.view.ToolableViewAnimator r0;
        int $i0;
        android.view.View $r1;

        r0 := @this: com.fsck.k9.view.ToolableViewAnimator;

        $i0 = virtualinvoke r0.<com.fsck.k9.view.ToolableViewAnimator: int getDisplayedChild()>();

        $r1 = virtualinvoke r0.<com.fsck.k9.view.ToolableViewAnimator: android.view.View getChildAt(int)>($i0);

        $i0 = virtualinvoke $r1.<android.view.View: int getId()>();

        return $i0;
    }
    public void setDisplayedChild(int)
    {
        com.fsck.k9.view.ToolableViewAnimator r0;
        int $i0, $i1;

        r0 := @this: com.fsck.k9.view.ToolableViewAnimator;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.fsck.k9.view.ToolableViewAnimator: int getDisplayedChild()>();

        if $i0 == $i1 goto label1;

        specialinvoke r0.<android.widget.ViewAnimator: void setDisplayedChild(int)>($i0);

     label1:
        return;
    }
    public void setDisplayedChild(int, boolean)
    {
        com.fsck.k9.view.ToolableViewAnimator r0;
        int $i0;
        boolean $z0;
        android.view.animation.Animation $r1, $r2;

        r0 := @this: com.fsck.k9.view.ToolableViewAnimator;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.fsck.k9.view.ToolableViewAnimator: void setDisplayedChild(int)>($i0);

        return;

     label1:
        $r1 = virtualinvoke r0.<com.fsck.k9.view.ToolableViewAnimator: android.view.animation.Animation getInAnimation()>();

        $r2 = virtualinvoke r0.<com.fsck.k9.view.ToolableViewAnimator: android.view.animation.Animation getOutAnimation()>();

        virtualinvoke r0.<com.fsck.k9.view.ToolableViewAnimator: void setInAnimation(android.view.animation.Animation)>(null);

        virtualinvoke r0.<com.fsck.k9.view.ToolableViewAnimator: void setOutAnimation(android.view.animation.Animation)>(null);

        virtualinvoke r0.<com.fsck.k9.view.ToolableViewAnimator: void setDisplayedChild(int)>($i0);

        virtualinvoke r0.<com.fsck.k9.view.ToolableViewAnimator: void setInAnimation(android.view.animation.Animation)>($r1);

        virtualinvoke r0.<com.fsck.k9.view.ToolableViewAnimator: void setOutAnimation(android.view.animation.Animation)>($r2);

        return;
    }
    public void setDisplayedChildId(int)
    {
        com.fsck.k9.view.ToolableViewAnimator r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;
        android.content.res.Resources $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5;

        r0 := @this: com.fsck.k9.view.ToolableViewAnimator;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.fsck.k9.view.ToolableViewAnimator: int getDisplayedChildId()>();

        if $i1 != $i0 goto label1;

        return;

     label1:
        $i1 = 0;

        $i2 = virtualinvoke r0.<com.fsck.k9.view.ToolableViewAnimator: int getChildCount()>();

     label2:
        if $i1 >= $i2 goto label4;

        $r1 = virtualinvoke r0.<com.fsck.k9.view.ToolableViewAnimator: android.view.View getChildAt(int)>($i1);

        $i3 = virtualinvoke $r1.<android.view.View: int getId()>();

        if $i3 != $i0 goto label3;

        virtualinvoke r0.<com.fsck.k9.view.ToolableViewAnimator: void setDisplayedChild(int)>($i1);

        return;

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        $r2 = virtualinvoke r0.<com.fsck.k9.view.ToolableViewAnimator: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getResourceEntryName(int)>($i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No view with ID ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r4;
    }
