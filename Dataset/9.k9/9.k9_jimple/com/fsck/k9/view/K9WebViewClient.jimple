com.fsck.k9.view.K9WebViewClient extends android.webkit.WebViewClient
private static final java.lang.String CID_SCHEME
private static final android.webkit.WebResourceResponse RESULT_DO_NOT_INTERCEPT
private static final android.webkit.WebResourceResponse RESULT_DUMMY_RESPONSE
private final com.fsck.k9.mailstore.AttachmentResolver attachmentResolver
private com.fsck.k9.view.MessageWebView$OnPageFinishedListener onPageFinishedListener
    static void <clinit>()
    {
        android.webkit.WebResourceResponse $r0;

        <com.fsck.k9.view.K9WebViewClient: android.webkit.WebResourceResponse RESULT_DO_NOT_INTERCEPT> = null;

        $r0 = new android.webkit.WebResourceResponse;

        specialinvoke $r0.<android.webkit.WebResourceResponse: void <init>(java.lang.String,java.lang.String,java.io.InputStream)>(null, null, null);

        <com.fsck.k9.view.K9WebViewClient: android.webkit.WebResourceResponse RESULT_DUMMY_RESPONSE> = $r0;

        return;
    }
    private void <init>(com.fsck.k9.mailstore.AttachmentResolver)
    {
        com.fsck.k9.view.K9WebViewClient r0;
        com.fsck.k9.mailstore.AttachmentResolver $r1;

        r0 := @this: com.fsck.k9.view.K9WebViewClient;

        $r1 := @parameter0: com.fsck.k9.mailstore.AttachmentResolver;

        specialinvoke r0.<android.webkit.WebViewClient: void <init>()>();

        r0.<com.fsck.k9.view.K9WebViewClient: com.fsck.k9.mailstore.AttachmentResolver attachmentResolver> = $r1;

        return;
    }
    void <init>(com.fsck.k9.mailstore.AttachmentResolver, com.fsck.k9.view.K9WebViewClient$1)
    {
        com.fsck.k9.view.K9WebViewClient r0;
        com.fsck.k9.mailstore.AttachmentResolver $r1;
        com.fsck.k9.view.K9WebViewClient$1 $r2;

        r0 := @this: com.fsck.k9.view.K9WebViewClient;

        $r1 := @parameter0: com.fsck.k9.mailstore.AttachmentResolver;

        $r2 := @parameter1: com.fsck.k9.view.K9WebViewClient$1;

        specialinvoke r0.<com.fsck.k9.view.K9WebViewClient: void <init>(com.fsck.k9.mailstore.AttachmentResolver)>($r1);

        return;
    }
    private android.content.Intent createBrowserViewIntent(android.net.Uri, android.content.Context)
    {
        com.fsck.k9.view.K9WebViewClient r0;
        android.net.Uri $r1;
        android.content.Context $r2;
        android.content.Intent r3;
        java.lang.String $r4;

        r0 := @this: com.fsck.k9.view.K9WebViewClient;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: android.content.Context;

        r3 = new android.content.Intent;

        specialinvoke r3.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r1);

        virtualinvoke r3.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.BROWSABLE");

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("com.android.browser.application_id", $r4);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("create_new_tab", 1);

        return r3;
    }
    public static com.fsck.k9.view.K9WebViewClient newInstance(com.fsck.k9.mailstore.AttachmentResolver)
    {
        com.fsck.k9.mailstore.AttachmentResolver $r0;
        int $i0;
        com.fsck.k9.view.K9WebViewClient$PreLollipopWebViewClient $r1;
        com.fsck.k9.view.K9WebViewClient$LollipopWebViewClient $r2;

        $r0 := @parameter0: com.fsck.k9.mailstore.AttachmentResolver;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 21 goto label1;

        $r1 = new com.fsck.k9.view.K9WebViewClient$PreLollipopWebViewClient;

        specialinvoke $r1.<com.fsck.k9.view.K9WebViewClient$PreLollipopWebViewClient: void <init>(com.fsck.k9.mailstore.AttachmentResolver)>($r0);

        return $r1;

     label1:
        $r2 = new com.fsck.k9.view.K9WebViewClient$LollipopWebViewClient;

        specialinvoke $r2.<com.fsck.k9.view.K9WebViewClient$LollipopWebViewClient: void <init>(com.fsck.k9.mailstore.AttachmentResolver)>($r0);

        return $r2;
    }
protected abstract void addActivityFlags(android.content.Intent) { 
// no body
} 
protected abstract void addCacheControlHeader(android.webkit.WebResourceResponse) { 
// no body
} 
    public void onPageFinished(android.webkit.WebView, java.lang.String)
    {
        com.fsck.k9.view.K9WebViewClient r0;
        android.webkit.WebView $r1;
        java.lang.String $r2;
        com.fsck.k9.view.MessageWebView$OnPageFinishedListener $r3;

        r0 := @this: com.fsck.k9.view.K9WebViewClient;

        $r1 := @parameter0: android.webkit.WebView;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>($r1, $r2);

        $r3 = r0.<com.fsck.k9.view.K9WebViewClient: com.fsck.k9.view.MessageWebView$OnPageFinishedListener onPageFinishedListener>;

        if $r3 == null goto label1;

        $r3 = r0.<com.fsck.k9.view.K9WebViewClient: com.fsck.k9.view.MessageWebView$OnPageFinishedListener onPageFinishedListener>;

        interfaceinvoke $r3.<com.fsck.k9.view.MessageWebView$OnPageFinishedListener: void onPageFinished()>();

     label1:
        return;
    }
    public void setOnPageFinishedListener(com.fsck.k9.view.MessageWebView$OnPageFinishedListener)
    {
        com.fsck.k9.view.K9WebViewClient r0;
        com.fsck.k9.view.MessageWebView$OnPageFinishedListener $r1;

        r0 := @this: com.fsck.k9.view.K9WebViewClient;

        $r1 := @parameter0: com.fsck.k9.view.MessageWebView$OnPageFinishedListener;

        r0.<com.fsck.k9.view.K9WebViewClient: com.fsck.k9.view.MessageWebView$OnPageFinishedListener onPageFinishedListener> = $r1;

        return;
    }
    protected android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView, android.net.Uri)
    {
        com.fsck.k9.view.K9WebViewClient r0;
        android.webkit.WebView $r1;
        android.net.Uri $r2, $r7;
        java.lang.Exception r3;
        java.lang.String $r4, $r5;
        boolean $z0;
        com.fsck.k9.mailstore.AttachmentResolver $r6;
        android.content.Context $r8;
        android.content.ContentResolver $r9;
        java.io.InputStream $r10;
        android.webkit.WebResourceResponse r11;
        java.lang.Object[] $r12;

        r0 := @this: com.fsck.k9.view.K9WebViewClient;

        $r1 := @parameter0: android.webkit.WebView;

        $r2 := @parameter1: android.net.Uri;

        $r4 = "cid";

        $r5 = virtualinvoke $r2.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        r11 = <com.fsck.k9.view.K9WebViewClient: android.webkit.WebResourceResponse RESULT_DO_NOT_INTERCEPT>;

        return r11;

     label1:
        $r6 = r0.<com.fsck.k9.view.K9WebViewClient: com.fsck.k9.mailstore.AttachmentResolver attachmentResolver>;

        if $r6 != null goto label2;

        r11 = <com.fsck.k9.view.K9WebViewClient: android.webkit.WebResourceResponse RESULT_DUMMY_RESPONSE>;

        return r11;

     label2:
        $r4 = virtualinvoke $r2.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z0 == 0 goto label3;

        r11 = <com.fsck.k9.view.K9WebViewClient: android.webkit.WebResourceResponse RESULT_DUMMY_RESPONSE>;

        return r11;

     label3:
        $r6 = r0.<com.fsck.k9.view.K9WebViewClient: com.fsck.k9.mailstore.AttachmentResolver attachmentResolver>;

        $r7 = virtualinvoke $r6.<com.fsck.k9.mailstore.AttachmentResolver: android.net.Uri getAttachmentUriForContentId(java.lang.String)>($r4);

        if $r7 != null goto label4;

        r11 = <com.fsck.k9.view.K9WebViewClient: android.webkit.WebResourceResponse RESULT_DUMMY_RESPONSE>;

        return r11;

     label4:
        $r8 = virtualinvoke $r1.<android.webkit.WebView: android.content.Context getContext()>();

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.ContentResolver getContentResolver()>();

     label5:
        $r4 = virtualinvoke $r9.<android.content.ContentResolver: java.lang.String getType(android.net.Uri)>($r7);

        $r10 = virtualinvoke $r9.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>($r7);

     label6:
        r11 = new android.webkit.WebResourceResponse;

     label7:
        specialinvoke r11.<android.webkit.WebResourceResponse: void <init>(java.lang.String,java.lang.String,java.io.InputStream)>($r4, null, $r10);

        virtualinvoke r0.<com.fsck.k9.view.K9WebViewClient: void addCacheControlHeader(android.webkit.WebResourceResponse)>(r11);

     label8:
        return r11;

     label9:
        r3 := @caughtexception;

        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = $r2;

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r3, "Error while intercepting URI: %s", $r12);

        r11 = <com.fsck.k9.view.K9WebViewClient: android.webkit.WebResourceResponse RESULT_DUMMY_RESPONSE>;

        return r11;

        catch java.lang.Exception from label5 to label6 with label9;
        catch java.lang.Exception from label7 to label8 with label9;
    }
    public boolean shouldOverrideUrlLoading(android.webkit.WebView, java.lang.String)
    {
        com.fsck.k9.view.K9WebViewClient r0;
        android.webkit.WebView $r1;
        java.lang.String $r2, $r4;
        android.net.Uri $r3;
        boolean $z0;
        android.content.Context $r5;
        android.content.Intent $r6;
        android.content.ActivityNotFoundException $r7;

        r0 := @this: com.fsck.k9.view.K9WebViewClient;

        $r1 := @parameter0: android.webkit.WebView;

        $r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r2);

        $r2 = "cid";

        $r4 = virtualinvoke $r3.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r5 = virtualinvoke $r1.<android.webkit.WebView: android.content.Context getContext()>();

        $r6 = specialinvoke r0.<com.fsck.k9.view.K9WebViewClient: android.content.Intent createBrowserViewIntent(android.net.Uri,android.content.Context)>($r3, $r5);

        virtualinvoke r0.<com.fsck.k9.view.K9WebViewClient: void addActivityFlags(android.content.Intent)>($r6);

     label2:
        virtualinvoke $r5.<android.content.Context: void startActivity(android.content.Intent)>($r6);

     label3:
        return 1;

     label4:
        $r7 := @caughtexception;

        return 0;

        catch android.content.ActivityNotFoundException from label2 to label3 with label4;
    }
