com.fsck.k9.view.FoldableLinearLayout extends android.widget.LinearLayout
private android.widget.LinearLayout mFoldableContainer
private android.widget.ImageView mFoldableIcon
private android.view.View mFoldableLayout
private android.widget.TextView mFoldableTextView
private java.lang.String mFoldedLabel
private boolean mHasMigrated
private int mIconActionCollapseId
private int mIconActionExpandId
private boolean mIsFolded
private java.lang.Integer mShortAnimationDuration
private java.lang.String mUnFoldedLabel
    public void <init>(android.content.Context)
    {
        com.fsck.k9.view.FoldableLinearLayout r0;
        android.content.Context $r1;

        r0 := @this: com.fsck.k9.view.FoldableLinearLayout;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context)>($r1);

        r0.<com.fsck.k9.view.FoldableLinearLayout: boolean mIsFolded> = 1;

        r0.<com.fsck.k9.view.FoldableLinearLayout: boolean mHasMigrated> = 0;

        r0.<com.fsck.k9.view.FoldableLinearLayout: java.lang.Integer mShortAnimationDuration> = null;

        r0.<com.fsck.k9.view.FoldableLinearLayout: android.widget.TextView mFoldableTextView> = null;

        r0.<com.fsck.k9.view.FoldableLinearLayout: android.widget.LinearLayout mFoldableContainer> = null;

        r0.<com.fsck.k9.view.FoldableLinearLayout: android.view.View mFoldableLayout> = null;

        specialinvoke r0.<com.fsck.k9.view.FoldableLinearLayout: void processAttributes(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.fsck.k9.view.FoldableLinearLayout r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        r0 := @this: com.fsck.k9.view.FoldableLinearLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        r0.<com.fsck.k9.view.FoldableLinearLayout: boolean mIsFolded> = 1;

        r0.<com.fsck.k9.view.FoldableLinearLayout: boolean mHasMigrated> = 0;

        r0.<com.fsck.k9.view.FoldableLinearLayout: java.lang.Integer mShortAnimationDuration> = null;

        r0.<com.fsck.k9.view.FoldableLinearLayout: android.widget.TextView mFoldableTextView> = null;

        r0.<com.fsck.k9.view.FoldableLinearLayout: android.widget.LinearLayout mFoldableContainer> = null;

        r0.<com.fsck.k9.view.FoldableLinearLayout: android.view.View mFoldableLayout> = null;

        specialinvoke r0.<com.fsck.k9.view.FoldableLinearLayout: void processAttributes(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.fsck.k9.view.FoldableLinearLayout r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;

        r0 := @this: com.fsck.k9.view.FoldableLinearLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        r0.<com.fsck.k9.view.FoldableLinearLayout: boolean mIsFolded> = 1;

        r0.<com.fsck.k9.view.FoldableLinearLayout: boolean mHasMigrated> = 0;

        r0.<com.fsck.k9.view.FoldableLinearLayout: java.lang.Integer mShortAnimationDuration> = null;

        r0.<com.fsck.k9.view.FoldableLinearLayout: android.widget.TextView mFoldableTextView> = null;

        r0.<com.fsck.k9.view.FoldableLinearLayout: android.widget.LinearLayout mFoldableContainer> = null;

        r0.<com.fsck.k9.view.FoldableLinearLayout: android.view.View mFoldableLayout> = null;

        specialinvoke r0.<com.fsck.k9.view.FoldableLinearLayout: void processAttributes(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        return;
    }
    static boolean access$300(com.fsck.k9.view.FoldableLinearLayout)
    {
        com.fsck.k9.view.FoldableLinearLayout $r0;
        boolean z0;

        $r0 := @parameter0: com.fsck.k9.view.FoldableLinearLayout;

        z0 = $r0.<com.fsck.k9.view.FoldableLinearLayout: boolean mIsFolded>;

        return z0;
    }
    static boolean access$302(com.fsck.k9.view.FoldableLinearLayout, boolean)
    {
        com.fsck.k9.view.FoldableLinearLayout $r0;
        boolean $z0;

        $r0 := @parameter0: com.fsck.k9.view.FoldableLinearLayout;

        $z0 := @parameter1: boolean;

        $r0.<com.fsck.k9.view.FoldableLinearLayout: boolean mIsFolded> = $z0;

        return $z0;
    }
    static android.widget.LinearLayout access$400(com.fsck.k9.view.FoldableLinearLayout)
    {
        com.fsck.k9.view.FoldableLinearLayout $r0;
        android.widget.LinearLayout r1;

        $r0 := @parameter0: com.fsck.k9.view.FoldableLinearLayout;

        r1 = $r0.<com.fsck.k9.view.FoldableLinearLayout: android.widget.LinearLayout mFoldableContainer>;

        return r1;
    }
    private void initialiseInnerViews()
    {
        com.fsck.k9.view.FoldableLinearLayout r0;
        android.view.View $r1;
        android.widget.ImageView $r2;
        android.widget.TextView $r3;
        java.lang.String $r4;
        android.content.res.Resources $r5;
        int $i0;
        java.lang.Integer $r6;
        android.widget.LinearLayout r7;
        com.fsck.k9.view.FoldableLinearLayout$1 $r8;

        r0 := @this: com.fsck.k9.view.FoldableLinearLayout;

        $r1 = r0.<com.fsck.k9.view.FoldableLinearLayout: android.view.View mFoldableLayout>;

        $r1 = virtualinvoke $r1.<android.view.View: android.view.View findViewById(int)>(2131492973);

        $r2 = (android.widget.ImageView) $r1;

        r0.<com.fsck.k9.view.FoldableLinearLayout: android.widget.ImageView mFoldableIcon> = $r2;

        $r1 = r0.<com.fsck.k9.view.FoldableLinearLayout: android.view.View mFoldableLayout>;

        $r1 = virtualinvoke $r1.<android.view.View: android.view.View findViewById(int)>(2131492974);

        $r3 = (android.widget.TextView) $r1;

        r0.<com.fsck.k9.view.FoldableLinearLayout: android.widget.TextView mFoldableTextView> = $r3;

        $r3 = r0.<com.fsck.k9.view.FoldableLinearLayout: android.widget.TextView mFoldableTextView>;

        $r4 = r0.<com.fsck.k9.view.FoldableLinearLayout: java.lang.String mFoldedLabel>;

        virtualinvoke $r3.<android.widget.TextView: void setText(java.lang.CharSequence)>($r4);

        $r5 = virtualinvoke r0.<com.fsck.k9.view.FoldableLinearLayout: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r5.<android.content.res.Resources: int getInteger(int)>(17694720);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        r0.<com.fsck.k9.view.FoldableLinearLayout: java.lang.Integer mShortAnimationDuration> = $r6;

        $r1 = r0.<com.fsck.k9.view.FoldableLinearLayout: android.view.View mFoldableLayout>;

        $r1 = virtualinvoke $r1.<android.view.View: android.view.View findViewById(int)>(2131492972);

        r7 = (android.widget.LinearLayout) $r1;

        $r8 = new com.fsck.k9.view.FoldableLinearLayout$1;

        specialinvoke $r8.<com.fsck.k9.view.FoldableLinearLayout$1: void <init>(com.fsck.k9.view.FoldableLinearLayout)>(r0);

        virtualinvoke r7.<android.widget.LinearLayout: void setOnClickListener(android.view.View$OnClickListener)>($r8);

        return;
    }
    private void migrateChildrenToContainer()
    {
        com.fsck.k9.view.FoldableLinearLayout r0;
        android.view.View[] r1;
        int $i0, i1;
        android.view.View $r2;
        android.content.Context $r3;
        java.lang.Object $r4;
        android.view.LayoutInflater r5;
        android.widget.LinearLayout $r6;

        r0 := @this: com.fsck.k9.view.FoldableLinearLayout;

        $i0 = virtualinvoke r0.<com.fsck.k9.view.FoldableLinearLayout: int getChildCount()>();

        r1 = newarray (android.view.View)[$i0];

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r2 = virtualinvoke r0.<com.fsck.k9.view.FoldableLinearLayout: android.view.View getChildAt(int)>(i1);

        r1[i1] = $r2;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = r1[0];

        i1 = virtualinvoke $r2.<android.view.View: int getId()>();

        if i1 != 2131492972 goto label3;

     label3:
        virtualinvoke r0.<com.fsck.k9.view.FoldableLinearLayout: void detachAllViewsFromParent()>();

        $r3 = virtualinvoke r0.<com.fsck.k9.view.FoldableLinearLayout: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        r5 = (android.view.LayoutInflater) $r4;

        $r2 = virtualinvoke r5.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(2130903065, r0, 1);

        r0.<com.fsck.k9.view.FoldableLinearLayout: android.view.View mFoldableLayout> = $r2;

        $r2 = r0.<com.fsck.k9.view.FoldableLinearLayout: android.view.View mFoldableLayout>;

        $r2 = virtualinvoke $r2.<android.view.View: android.view.View findViewById(int)>(2131492975);

        $r6 = (android.widget.LinearLayout) $r2;

        r0.<com.fsck.k9.view.FoldableLinearLayout: android.widget.LinearLayout mFoldableContainer> = $r6;

        i1 = 0;

     label4:
        if i1 >= $i0 goto label5;

        $r2 = r1[i1];

        virtualinvoke r0.<com.fsck.k9.view.FoldableLinearLayout: void addView(android.view.View)>($r2);

        i1 = i1 + 1;

        goto label4;

     label5:
        return;
    }
    private void processAttributes(android.content.Context, android.util.AttributeSet)
    {
        com.fsck.k9.view.FoldableLinearLayout r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        android.util.TypedValue r3;
        android.content.res.Resources$Theme $r4;
        boolean $z0;
        int $i0;
        int[] $r5;
        android.content.res.TypedArray $r6;
        java.lang.String $r7;

        r0 := @this: com.fsck.k9.view.FoldableLinearLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        r3 = new android.util.TypedValue;

        specialinvoke r3.<android.util.TypedValue: void <init>()>();

        $z0 = virtualinvoke $r4.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(2130772008, r3, 1);

        if $z0 == 0 goto label1;

        $i0 = r3.<android.util.TypedValue: int resourceId>;

        r0.<com.fsck.k9.view.FoldableLinearLayout: int mIconActionCollapseId> = $i0;

     label1:
        $z0 = virtualinvoke $r4.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(2130772007, r3, 1);

        if $z0 == 0 goto label2;

        $i0 = r3.<android.util.TypedValue: int resourceId>;

        r0.<com.fsck.k9.view.FoldableLinearLayout: int mIconActionExpandId> = $i0;

     label2:
        if $r2 == null goto label3;

        $r5 = <com.fsck.k9.R$styleable: int[] FoldableLinearLayout>;

        $r6 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r5, 0, 0);

        $r7 = virtualinvoke $r6.<android.content.res.TypedArray: java.lang.String getString(int)>(0);

        r0.<com.fsck.k9.view.FoldableLinearLayout: java.lang.String mFoldedLabel> = $r7;

        $r7 = virtualinvoke $r6.<android.content.res.TypedArray: java.lang.String getString(int)>(1);

        r0.<com.fsck.k9.view.FoldableLinearLayout: java.lang.String mUnFoldedLabel> = $r7;

        virtualinvoke $r6.<android.content.res.TypedArray: void recycle()>();

     label3:
        $r7 = r0.<com.fsck.k9.view.FoldableLinearLayout: java.lang.String mFoldedLabel>;

        if $r7 != null goto label6;

        $r7 = "No text!";

     label4:
        r0.<com.fsck.k9.view.FoldableLinearLayout: java.lang.String mFoldedLabel> = $r7;

        $r7 = r0.<com.fsck.k9.view.FoldableLinearLayout: java.lang.String mUnFoldedLabel>;

        if $r7 != null goto label7;

        $r7 = "No text!";

     label5:
        r0.<com.fsck.k9.view.FoldableLinearLayout: java.lang.String mUnFoldedLabel> = $r7;

        return;

     label6:
        $r7 = r0.<com.fsck.k9.view.FoldableLinearLayout: java.lang.String mFoldedLabel>;

        goto label4;

     label7:
        $r7 = r0.<com.fsck.k9.view.FoldableLinearLayout: java.lang.String mUnFoldedLabel>;

        goto label5;
    }
    public void addView(android.view.View)
    {
        com.fsck.k9.view.FoldableLinearLayout r0;
        android.view.View $r1;
        android.widget.LinearLayout $r2;

        r0 := @this: com.fsck.k9.view.FoldableLinearLayout;

        $r1 := @parameter0: android.view.View;

        $r2 = r0.<com.fsck.k9.view.FoldableLinearLayout: android.widget.LinearLayout mFoldableContainer>;

        if $r2 == null goto label1;

        $r2 = r0.<com.fsck.k9.view.FoldableLinearLayout: android.widget.LinearLayout mFoldableContainer>;

        virtualinvoke $r2.<android.widget.LinearLayout: void addView(android.view.View)>($r1);

     label1:
        return;
    }
    protected void onFinishInflate()
    {
        com.fsck.k9.view.FoldableLinearLayout r0;
        boolean $z0;

        r0 := @this: com.fsck.k9.view.FoldableLinearLayout;

        $z0 = r0.<com.fsck.k9.view.FoldableLinearLayout: boolean mHasMigrated>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.fsck.k9.view.FoldableLinearLayout: void migrateChildrenToContainer()>();

        r0.<com.fsck.k9.view.FoldableLinearLayout: boolean mHasMigrated> = 1;

     label1:
        specialinvoke r0.<com.fsck.k9.view.FoldableLinearLayout: void initialiseInnerViews()>();

        specialinvoke r0.<android.widget.LinearLayout: void onFinishInflate()>();

        return;
    }
    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        com.fsck.k9.view.FoldableLinearLayout r0;
        android.os.Parcelable $r1;
        boolean $z0;
        com.fsck.k9.view.FoldableLinearLayout$SavedState r2;

        r0 := @this: com.fsck.k9.view.FoldableLinearLayout;

        $r1 := @parameter0: android.os.Parcelable;

        $z0 = $r1 instanceof com.fsck.k9.view.FoldableLinearLayout$SavedState;

        if $z0 == 0 goto label1;

        r2 = (com.fsck.k9.view.FoldableLinearLayout$SavedState) $r1;

        $r1 = virtualinvoke r2.<com.fsck.k9.view.FoldableLinearLayout$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.widget.LinearLayout: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        $z0 = staticinvoke <com.fsck.k9.view.FoldableLinearLayout$SavedState: boolean access$100(com.fsck.k9.view.FoldableLinearLayout$SavedState)>(r2);

        r0.<com.fsck.k9.view.FoldableLinearLayout: boolean mIsFolded> = $z0;

        $z0 = r0.<com.fsck.k9.view.FoldableLinearLayout: boolean mIsFolded>;

        virtualinvoke r0.<com.fsck.k9.view.FoldableLinearLayout: void updateFoldedState(boolean,boolean)>($z0, 0);

        return;

     label1:
        specialinvoke r0.<android.widget.LinearLayout: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        return;
    }
    protected android.os.Parcelable onSaveInstanceState()
    {
        com.fsck.k9.view.FoldableLinearLayout r0;
        com.fsck.k9.view.FoldableLinearLayout$SavedState r1;
        android.os.Parcelable $r2;
        boolean $z0;

        r0 := @this: com.fsck.k9.view.FoldableLinearLayout;

        $r2 = specialinvoke r0.<android.widget.LinearLayout: android.os.Parcelable onSaveInstanceState()>();

        r1 = new com.fsck.k9.view.FoldableLinearLayout$SavedState;

        specialinvoke r1.<com.fsck.k9.view.FoldableLinearLayout$SavedState: void <init>(android.os.Parcelable,com.fsck.k9.view.FoldableLinearLayout$1)>($r2, null);

        $z0 = r0.<com.fsck.k9.view.FoldableLinearLayout: boolean mIsFolded>;

        staticinvoke <com.fsck.k9.view.FoldableLinearLayout$SavedState: boolean access$102(com.fsck.k9.view.FoldableLinearLayout$SavedState,boolean)>(r1, $z0);

        return r1;
    }
    protected void updateFoldedState(boolean, boolean)
    {
        com.fsck.k9.view.FoldableLinearLayout r0;
        boolean $z0, $z1;
        android.widget.ImageView $r1;
        int $i0;
        android.view.animation.AlphaAnimation r2;
        java.lang.Integer $r3;
        long $l1;
        com.fsck.k9.view.FoldableLinearLayout$2 $r4;
        android.widget.LinearLayout $r5;
        android.widget.TextView $r6;
        java.lang.String $r7;

        r0 := @this: com.fsck.k9.view.FoldableLinearLayout;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        if $z0 == 0 goto label3;

        $r1 = r0.<com.fsck.k9.view.FoldableLinearLayout: android.widget.ImageView mFoldableIcon>;

        $i0 = r0.<com.fsck.k9.view.FoldableLinearLayout: int mIconActionExpandId>;

        virtualinvoke $r1.<android.widget.ImageView: void setImageResource(int)>($i0);

        if $z1 == 0 goto label2;

        r2 = new android.view.animation.AlphaAnimation;

        specialinvoke r2.<android.view.animation.AlphaAnimation: void <init>(float,float)>(1.0F, 0.0F);

        $r3 = r0.<com.fsck.k9.view.FoldableLinearLayout: java.lang.Integer mShortAnimationDuration>;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $l1 = (long) $i0;

        virtualinvoke r2.<android.view.animation.AlphaAnimation: void setDuration(long)>($l1);

        $r4 = new com.fsck.k9.view.FoldableLinearLayout$2;

        specialinvoke $r4.<com.fsck.k9.view.FoldableLinearLayout$2: void <init>(com.fsck.k9.view.FoldableLinearLayout)>(r0);

        virtualinvoke r2.<android.view.animation.AlphaAnimation: void setAnimationListener(android.view.animation.Animation$AnimationListener)>($r4);

        $r5 = r0.<com.fsck.k9.view.FoldableLinearLayout: android.widget.LinearLayout mFoldableContainer>;

        virtualinvoke $r5.<android.widget.LinearLayout: void startAnimation(android.view.animation.Animation)>(r2);

     label1:
        $r6 = r0.<com.fsck.k9.view.FoldableLinearLayout: android.widget.TextView mFoldableTextView>;

        $r7 = r0.<com.fsck.k9.view.FoldableLinearLayout: java.lang.String mFoldedLabel>;

        virtualinvoke $r6.<android.widget.TextView: void setText(java.lang.CharSequence)>($r7);

        return;

     label2:
        $r5 = r0.<com.fsck.k9.view.FoldableLinearLayout: android.widget.LinearLayout mFoldableContainer>;

        virtualinvoke $r5.<android.widget.LinearLayout: void setVisibility(int)>(4);

        goto label1;

     label3:
        $r1 = r0.<com.fsck.k9.view.FoldableLinearLayout: android.widget.ImageView mFoldableIcon>;

        $i0 = r0.<com.fsck.k9.view.FoldableLinearLayout: int mIconActionCollapseId>;

        virtualinvoke $r1.<android.widget.ImageView: void setImageResource(int)>($i0);

        $r5 = r0.<com.fsck.k9.view.FoldableLinearLayout: android.widget.LinearLayout mFoldableContainer>;

        virtualinvoke $r5.<android.widget.LinearLayout: void setVisibility(int)>(0);

        if $z1 == 0 goto label4;

        r2 = new android.view.animation.AlphaAnimation;

        specialinvoke r2.<android.view.animation.AlphaAnimation: void <init>(float,float)>(0.0F, 1.0F);

        $r3 = r0.<com.fsck.k9.view.FoldableLinearLayout: java.lang.Integer mShortAnimationDuration>;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $l1 = (long) $i0;

        virtualinvoke r2.<android.view.animation.AlphaAnimation: void setDuration(long)>($l1);

        $r5 = r0.<com.fsck.k9.view.FoldableLinearLayout: android.widget.LinearLayout mFoldableContainer>;

        virtualinvoke $r5.<android.widget.LinearLayout: void startAnimation(android.view.animation.Animation)>(r2);

     label4:
        $r6 = r0.<com.fsck.k9.view.FoldableLinearLayout: android.widget.TextView mFoldableTextView>;

        $r7 = r0.<com.fsck.k9.view.FoldableLinearLayout: java.lang.String mUnFoldedLabel>;

        virtualinvoke $r6.<android.widget.TextView: void setText(java.lang.CharSequence)>($r7);

        return;
    }
