com.fsck.k9.helper.MergeCursorWithUniqueId extends com.fsck.k9.helper.MergeCursor
private static final long MAX_CURSORS
private static final long MAX_ID
private static final int SHIFT
private int mColumnCount
private int mIdColumnIndex
    public void <init>(android.database.Cursor[], java.util.Comparator)
    {
        com.fsck.k9.helper.MergeCursorWithUniqueId r0;
        android.database.Cursor[] $r1;
        java.util.Comparator r2;
        int $i0;
        long $l1;
        byte $b2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: com.fsck.k9.helper.MergeCursorWithUniqueId;

        $r1 := @parameter0: android.database.Cursor[];

        r2 := @parameter1: java.util.Comparator;

        specialinvoke r0.<com.fsck.k9.helper.MergeCursor: void <init>(android.database.Cursor[],java.util.Comparator)>($r1, r2);

        r0.<com.fsck.k9.helper.MergeCursorWithUniqueId: int mColumnCount> = -1;

        r0.<com.fsck.k9.helper.MergeCursorWithUniqueId: int mIdColumnIndex> = -1;

        $i0 = lengthof $r1;

        $l1 = (long) $i0;

        $b2 = $l1 cmp 32768L;

        if $b2 <= 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("This class only supports up to 32768 cursors");

        throw $r3;

     label1:
        return;
    }
    public int getColumnCount()
    {
        com.fsck.k9.helper.MergeCursorWithUniqueId r0;
        int $i0;

        r0 := @this: com.fsck.k9.helper.MergeCursorWithUniqueId;

        $i0 = r0.<com.fsck.k9.helper.MergeCursorWithUniqueId: int mColumnCount>;

        if $i0 != -1 goto label1;

        $i0 = specialinvoke r0.<com.fsck.k9.helper.MergeCursor: int getColumnCount()>();

        r0.<com.fsck.k9.helper.MergeCursorWithUniqueId: int mColumnCount> = $i0;

     label1:
        $i0 = r0.<com.fsck.k9.helper.MergeCursorWithUniqueId: int mColumnCount>;

        $i0 = $i0 + 1;

        return $i0;
    }
    public int getColumnIndex(java.lang.String)
    {
        com.fsck.k9.helper.MergeCursorWithUniqueId r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        int $i0;

        r0 := @this: com.fsck.k9.helper.MergeCursorWithUniqueId;

        $r1 := @parameter0: java.lang.String;

        $r2 = "_id";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<com.fsck.k9.helper.MergeCursorWithUniqueId: int getUniqueIdColumnIndex()>();

        return $i0;

     label1:
        $i0 = specialinvoke r0.<com.fsck.k9.helper.MergeCursor: int getColumnIndexOrThrow(java.lang.String)>($r1);

        return $i0;
    }
    public int getColumnIndexOrThrow(java.lang.String) throws java.lang.IllegalArgumentException
    {
        com.fsck.k9.helper.MergeCursorWithUniqueId r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        int $i0;

        r0 := @this: com.fsck.k9.helper.MergeCursorWithUniqueId;

        $r1 := @parameter0: java.lang.String;

        $r2 = "_id";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<com.fsck.k9.helper.MergeCursorWithUniqueId: int getUniqueIdColumnIndex()>();

        return $i0;

     label1:
        $i0 = specialinvoke r0.<com.fsck.k9.helper.MergeCursor: int getColumnIndexOrThrow(java.lang.String)>($r1);

        return $i0;
    }
    public long getLong(int)
    {
        com.fsck.k9.helper.MergeCursorWithUniqueId r0;
        int $i0, $i1;
        long $l2, $l4;
        byte $b3;
        java.lang.RuntimeException $r1;
        java.lang.StringBuilder $r2;
        java.lang.Class $r3;
        java.lang.String $r4;

        r0 := @this: com.fsck.k9.helper.MergeCursorWithUniqueId;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.fsck.k9.helper.MergeCursorWithUniqueId: int getUniqueIdColumnIndex()>();

        if $i0 != $i1 goto label2;

        $l2 = virtualinvoke r0.<com.fsck.k9.helper.MergeCursorWithUniqueId: long getPerCursorId()>();

        $b3 = $l2 cmp 281474976710655L;

        if $b3 <= 0 goto label1;

        $r1 = new java.lang.RuntimeException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sorry, ");

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can only handle \'_id\' values up to ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(48);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bits.");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        throw $r1;

     label1:
        $i0 = r0.<com.fsck.k9.helper.MergeCursorWithUniqueId: int mActiveCursorIndex>;

        $l4 = (long) $i0;

        $l4 = $l4 << 48;

        $l2 = $l4 + $l2;

        return $l2;

     label2:
        $l2 = specialinvoke r0.<com.fsck.k9.helper.MergeCursor: long getLong(int)>($i0);

        return $l2;
    }
    protected long getPerCursorId()
    {
        com.fsck.k9.helper.MergeCursorWithUniqueId r0;
        int $i0;
        long $l1;

        r0 := @this: com.fsck.k9.helper.MergeCursorWithUniqueId;

        $i0 = r0.<com.fsck.k9.helper.MergeCursorWithUniqueId: int mIdColumnIndex>;

        if $i0 != -1 goto label1;

        $i0 = specialinvoke r0.<com.fsck.k9.helper.MergeCursor: int getColumnIndexOrThrow(java.lang.String)>("_id");

        r0.<com.fsck.k9.helper.MergeCursorWithUniqueId: int mIdColumnIndex> = $i0;

     label1:
        $i0 = r0.<com.fsck.k9.helper.MergeCursorWithUniqueId: int mIdColumnIndex>;

        $l1 = specialinvoke r0.<com.fsck.k9.helper.MergeCursor: long getLong(int)>($i0);

        return $l1;
    }
    protected int getUniqueIdColumnIndex()
    {
        com.fsck.k9.helper.MergeCursorWithUniqueId r0;
        int $i0;

        r0 := @this: com.fsck.k9.helper.MergeCursorWithUniqueId;

        $i0 = r0.<com.fsck.k9.helper.MergeCursorWithUniqueId: int mColumnCount>;

        if $i0 != -1 goto label1;

        $i0 = specialinvoke r0.<com.fsck.k9.helper.MergeCursor: int getColumnCount()>();

        r0.<com.fsck.k9.helper.MergeCursorWithUniqueId: int mColumnCount> = $i0;

     label1:
        $i0 = r0.<com.fsck.k9.helper.MergeCursorWithUniqueId: int mColumnCount>;

        return $i0;
    }
