com.fsck.k9.helper.ParcelableUtil extends java.lang.Object
    public void <init>()
    {
        com.fsck.k9.helper.ParcelableUtil r0;

        r0 := @this: com.fsck.k9.helper.ParcelableUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static byte[] marshall(android.os.Parcelable)
    {
        android.os.Parcelable $r0;
        android.os.Parcel $r1;
        byte[] $r2;

        $r0 := @parameter0: android.os.Parcelable;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        interfaceinvoke $r0.<android.os.Parcelable: void writeToParcel(android.os.Parcel,int)>($r1, 0);

        $r2 = virtualinvoke $r1.<android.os.Parcel: byte[] marshall()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return $r2;
    }
    private static android.os.Parcel unmarshall(byte[])
    {
        byte[] $r0;
        int $i0;
        android.os.Parcel $r1;

        $r0 := @parameter0: byte[];

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $i0 = lengthof $r0;

        virtualinvoke $r1.<android.os.Parcel: void unmarshall(byte[],int,int)>($r0, 0, $i0);

        virtualinvoke $r1.<android.os.Parcel: void setDataPosition(int)>(0);

        return $r1;
    }
    public static java.lang.Object unmarshall(byte[], android.os.Parcelable$Creator)
    {
        byte[] $r0;
        android.os.Parcelable$Creator r1;
        android.os.Parcel $r2;
        java.lang.Object $r3;

        $r0 := @parameter0: byte[];

        r1 := @parameter1: android.os.Parcelable$Creator;

        $r2 = staticinvoke <com.fsck.k9.helper.ParcelableUtil: android.os.Parcel unmarshall(byte[])>($r0);

        $r3 = interfaceinvoke r1.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>($r2);

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return $r3;
    }
