com.fsck.k9.helper.MergeCursor extends java.lang.Object implements android.database.Cursor
protected android.database.Cursor mActiveCursor
protected int mActiveCursorIndex
private final java.util.Comparator mComparator
private int mCount
protected final android.database.Cursor[] mCursors
protected int mPosition
    public void <init>(android.database.Cursor[], java.util.Comparator)
    {
        com.fsck.k9.helper.MergeCursor r0;
        android.database.Cursor[] $r1;
        java.util.Comparator r2;
        java.lang.Object $r3;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $r1 := @parameter0: android.database.Cursor[];

        r2 := @parameter1: java.util.Comparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.fsck.k9.helper.MergeCursor: int mCount> = -1;

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (android.database.Cursor[]) $r3;

        r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor[] mCursors> = $r1;

        r0.<com.fsck.k9.helper.MergeCursor: java.util.Comparator mComparator> = r2;

        specialinvoke r0.<com.fsck.k9.helper.MergeCursor: void resetCursors()>();

        return;
    }
    private void resetCursors()
    {
        com.fsck.k9.helper.MergeCursor r0;
        android.database.Cursor r1;
        int i0, $i1, i2;
        android.database.Cursor[] $r2;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        r0.<com.fsck.k9.helper.MergeCursor: int mActiveCursorIndex> = -1;

        r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor mActiveCursor> = null;

        r0.<com.fsck.k9.helper.MergeCursor: int mPosition> = -1;

        i2 = 0;

        $r2 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor[] mCursors>;

        i0 = lengthof $r2;

     label1:
        if i2 >= i0 goto label3;

        $r2 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor[] mCursors>;

        r1 = $r2[i2];

        if r1 == null goto label2;

        interfaceinvoke r1.<android.database.Cursor: boolean moveToPosition(int)>(-1);

        r1 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor mActiveCursor>;

        if r1 != null goto label2;

        r0.<com.fsck.k9.helper.MergeCursor: int mActiveCursorIndex> = i2;

        $r2 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor[] mCursors>;

        $i1 = r0.<com.fsck.k9.helper.MergeCursor: int mActiveCursorIndex>;

        r1 = $r2[$i1];

        r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor mActiveCursor> = r1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }
    public void close()
    {
        com.fsck.k9.helper.MergeCursor r0;
        android.database.Cursor r1;
        android.database.Cursor[] $r2;
        int $i0, $i1;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $r2 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor[] mCursors>;

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        r1 = $r2[$i1];

        if r1 == null goto label2;

        interfaceinvoke r1.<android.database.Cursor: void close()>();

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return;
    }
    public void copyStringToBuffer(int, android.database.CharArrayBuffer)
    {
        com.fsck.k9.helper.MergeCursor r0;
        int $i0;
        android.database.CharArrayBuffer $r1;
        android.database.Cursor $r2;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.database.CharArrayBuffer;

        $r2 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor mActiveCursor>;

        interfaceinvoke $r2.<android.database.Cursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)>($i0, $r1);

        return;
    }
    public void deactivate()
    {
        com.fsck.k9.helper.MergeCursor r0;
        android.database.Cursor r1;
        android.database.Cursor[] $r2;
        int $i0, $i1;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $r2 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor[] mCursors>;

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        r1 = $r2[$i1];

        if r1 == null goto label2;

        interfaceinvoke r1.<android.database.Cursor: void deactivate()>();

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return;
    }
    public byte[] getBlob(int)
    {
        com.fsck.k9.helper.MergeCursor r0;
        int $i0;
        byte[] $r1;
        android.database.Cursor $r2;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $i0 := @parameter0: int;

        $r2 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor mActiveCursor>;

        $r1 = interfaceinvoke $r2.<android.database.Cursor: byte[] getBlob(int)>($i0);

        return $r1;
    }
    public int getColumnCount()
    {
        com.fsck.k9.helper.MergeCursor r0;
        int $i0;
        android.database.Cursor $r1;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $r1 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor mActiveCursor>;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnCount()>();

        return $i0;
    }
    public int getColumnIndex(java.lang.String)
    {
        com.fsck.k9.helper.MergeCursor r0;
        java.lang.String $r1;
        int $i0;
        android.database.Cursor $r2;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor mActiveCursor>;

        $i0 = interfaceinvoke $r2.<android.database.Cursor: int getColumnIndex(java.lang.String)>($r1);

        return $i0;
    }
    public int getColumnIndexOrThrow(java.lang.String) throws java.lang.IllegalArgumentException
    {
        com.fsck.k9.helper.MergeCursor r0;
        java.lang.String $r1;
        int $i0;
        android.database.Cursor $r2;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor mActiveCursor>;

        $i0 = interfaceinvoke $r2.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>($r1);

        return $i0;
    }
    public java.lang.String getColumnName(int)
    {
        com.fsck.k9.helper.MergeCursor r0;
        int $i0;
        java.lang.String $r1;
        android.database.Cursor $r2;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $i0 := @parameter0: int;

        $r2 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor mActiveCursor>;

        $r1 = interfaceinvoke $r2.<android.database.Cursor: java.lang.String getColumnName(int)>($i0);

        return $r1;
    }
    public java.lang.String[] getColumnNames()
    {
        com.fsck.k9.helper.MergeCursor r0;
        java.lang.String[] $r1;
        android.database.Cursor $r2;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $r2 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor mActiveCursor>;

        $r1 = interfaceinvoke $r2.<android.database.Cursor: java.lang.String[] getColumnNames()>();

        return $r1;
    }
    public int getCount()
    {
        com.fsck.k9.helper.MergeCursor r0;
        android.database.Cursor r1;
        int $i0, $i1, i2, $i3;
        android.database.Cursor[] $r2;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $i0 = r0.<com.fsck.k9.helper.MergeCursor: int mCount>;

        if $i0 != -1 goto label4;

        i2 = 0;

        $r2 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor[] mCursors>;

        $i0 = lengthof $r2;

        $i3 = 0;

     label1:
        if $i3 >= $i0 goto label3;

        r1 = $r2[$i3];

        if r1 == null goto label2;

        $i1 = interfaceinvoke r1.<android.database.Cursor: int getCount()>();

        i2 = i2 + $i1;

     label2:
        $i3 = $i3 + 1;

        goto label1;

     label3:
        r0.<com.fsck.k9.helper.MergeCursor: int mCount> = i2;

     label4:
        $i0 = r0.<com.fsck.k9.helper.MergeCursor: int mCount>;

        return $i0;
    }
    public double getDouble(int)
    {
        com.fsck.k9.helper.MergeCursor r0;
        int $i0;
        double $d0;
        android.database.Cursor $r1;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $i0 := @parameter0: int;

        $r1 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor mActiveCursor>;

        $d0 = interfaceinvoke $r1.<android.database.Cursor: double getDouble(int)>($i0);

        return $d0;
    }
    public android.os.Bundle getExtras()
    {
        com.fsck.k9.helper.MergeCursor r0;
        java.lang.RuntimeException $r1;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented");

        throw $r1;
    }
    public float getFloat(int)
    {
        com.fsck.k9.helper.MergeCursor r0;
        int $i0;
        float $f0;
        android.database.Cursor $r1;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $i0 := @parameter0: int;

        $r1 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor mActiveCursor>;

        $f0 = interfaceinvoke $r1.<android.database.Cursor: float getFloat(int)>($i0);

        return $f0;
    }
    public int getInt(int)
    {
        com.fsck.k9.helper.MergeCursor r0;
        int $i0;
        android.database.Cursor $r1;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $i0 := @parameter0: int;

        $r1 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor mActiveCursor>;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getInt(int)>($i0);

        return $i0;
    }
    public long getLong(int)
    {
        com.fsck.k9.helper.MergeCursor r0;
        int $i0;
        long $l1;
        android.database.Cursor $r1;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $i0 := @parameter0: int;

        $r1 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor mActiveCursor>;

        $l1 = interfaceinvoke $r1.<android.database.Cursor: long getLong(int)>($i0);

        return $l1;
    }
    public android.net.Uri getNotificationUri()
    {
        com.fsck.k9.helper.MergeCursor r0;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        return null;
    }
    public int getPosition()
    {
        com.fsck.k9.helper.MergeCursor r0;
        int i0;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        i0 = r0.<com.fsck.k9.helper.MergeCursor: int mPosition>;

        return i0;
    }
    public short getShort(int)
    {
        com.fsck.k9.helper.MergeCursor r0;
        int $i0;
        short $s1;
        android.database.Cursor $r1;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $i0 := @parameter0: int;

        $r1 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor mActiveCursor>;

        $s1 = interfaceinvoke $r1.<android.database.Cursor: short getShort(int)>($i0);

        return $s1;
    }
    public java.lang.String getString(int)
    {
        com.fsck.k9.helper.MergeCursor r0;
        int $i0;
        java.lang.String $r1;
        android.database.Cursor $r2;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $i0 := @parameter0: int;

        $r2 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor mActiveCursor>;

        $r1 = interfaceinvoke $r2.<android.database.Cursor: java.lang.String getString(int)>($i0);

        return $r1;
    }
    public int getType(int)
    {
        com.fsck.k9.helper.MergeCursor r0;
        int $i0;
        android.database.Cursor $r1;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $i0 := @parameter0: int;

        $r1 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor mActiveCursor>;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getType(int)>($i0);

        return $i0;
    }
    public boolean getWantsAllOnMoveCalls()
    {
        com.fsck.k9.helper.MergeCursor r0;
        boolean $z0;
        android.database.Cursor $r1;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $r1 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor mActiveCursor>;

        $z0 = interfaceinvoke $r1.<android.database.Cursor: boolean getWantsAllOnMoveCalls()>();

        return $z0;
    }
    public boolean isAfterLast()
    {
        com.fsck.k9.helper.MergeCursor r0;
        int $i0, $i1;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $i1 = virtualinvoke r0.<com.fsck.k9.helper.MergeCursor: int getCount()>();

        if $i1 != 0 goto label1;

        return 1;

     label1:
        $i0 = r0.<com.fsck.k9.helper.MergeCursor: int mPosition>;

        if $i0 == $i1 goto label2;

        return 0;

     label2:
        return 1;
    }
    public boolean isBeforeFirst()
    {
        com.fsck.k9.helper.MergeCursor r0;
        int $i0;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $i0 = virtualinvoke r0.<com.fsck.k9.helper.MergeCursor: int getCount()>();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        $i0 = r0.<com.fsck.k9.helper.MergeCursor: int mPosition>;

        if $i0 == -1 goto label2;

        return 0;

     label2:
        return 1;
    }
    public boolean isClosed()
    {
        com.fsck.k9.helper.MergeCursor r0;
        boolean $z0;
        android.database.Cursor $r1;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $r1 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor mActiveCursor>;

        $z0 = interfaceinvoke $r1.<android.database.Cursor: boolean isClosed()>();

        return $z0;
    }
    public boolean isFirst()
    {
        com.fsck.k9.helper.MergeCursor r0;
        int $i0;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $i0 = virtualinvoke r0.<com.fsck.k9.helper.MergeCursor: int getCount()>();

        if $i0 != 0 goto label1;

        return 0;

     label1:
        $i0 = r0.<com.fsck.k9.helper.MergeCursor: int mPosition>;

        if $i0 != 0 goto label2;

        return 1;

     label2:
        return 0;
    }
    public boolean isLast()
    {
        com.fsck.k9.helper.MergeCursor r0;
        int $i0, $i1;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $i1 = virtualinvoke r0.<com.fsck.k9.helper.MergeCursor: int getCount()>();

        if $i1 != 0 goto label1;

        return 0;

     label1:
        $i0 = r0.<com.fsck.k9.helper.MergeCursor: int mPosition>;

        $i1 = $i1 + -1;

        if $i0 != $i1 goto label2;

        return 1;

     label2:
        return 0;
    }
    public boolean isNull(int)
    {
        com.fsck.k9.helper.MergeCursor r0;
        int $i0;
        boolean $z0;
        android.database.Cursor $r1;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $i0 := @parameter0: int;

        $r1 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor mActiveCursor>;

        $z0 = interfaceinvoke $r1.<android.database.Cursor: boolean isNull(int)>($i0);

        return $z0;
    }
    public boolean move(int)
    {
        com.fsck.k9.helper.MergeCursor r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $i0 := @parameter0: int;

        $i1 = r0.<com.fsck.k9.helper.MergeCursor: int mPosition>;

        $i0 = $i1 + $i0;

        $z0 = virtualinvoke r0.<com.fsck.k9.helper.MergeCursor: boolean moveToPosition(int)>($i0);

        return $z0;
    }
    public boolean moveToFirst()
    {
        com.fsck.k9.helper.MergeCursor r0;
        boolean $z0;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $z0 = virtualinvoke r0.<com.fsck.k9.helper.MergeCursor: boolean moveToPosition(int)>(0);

        return $z0;
    }
    public boolean moveToLast()
    {
        com.fsck.k9.helper.MergeCursor r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $i0 = virtualinvoke r0.<com.fsck.k9.helper.MergeCursor: int getCount()>();

        $i0 = $i0 + -1;

        $z0 = virtualinvoke r0.<com.fsck.k9.helper.MergeCursor: boolean moveToPosition(int)>($i0);

        return $z0;
    }
    public boolean moveToNext()
    {
        com.fsck.k9.helper.MergeCursor r0;
        android.database.Cursor r1, r2;
        int i0, $i1, i2, $i3;
        android.database.Cursor[] $r3;
        boolean $z0;
        java.util.Comparator $r4;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $i1 = virtualinvoke r0.<com.fsck.k9.helper.MergeCursor: int getCount()>();

        i0 = r0.<com.fsck.k9.helper.MergeCursor: int mPosition>;

        if i0 != $i1 goto label1;

        return 0;

     label1:
        i0 = r0.<com.fsck.k9.helper.MergeCursor: int mPosition>;

        $i1 = $i1 + -1;

        if i0 != $i1 goto label2;

        r1 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor mActiveCursor>;

        interfaceinvoke r1.<android.database.Cursor: boolean moveToNext()>();

        $i1 = r0.<com.fsck.k9.helper.MergeCursor: int mPosition>;

        $i1 = $i1 + 1;

        r0.<com.fsck.k9.helper.MergeCursor: int mPosition> = $i1;

        return 0;

     label2:
        $i1 = -1;

        i2 = 0;

        $r3 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor[] mCursors>;

        i0 = lengthof $r3;

     label3:
        if i2 >= i0 goto label8;

        $r3 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor[] mCursors>;

        r1 = $r3[i2];

        if r1 == null goto label4;

        $r3 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor[] mCursors>;

        r1 = $r3[i2];

        $i3 = interfaceinvoke r1.<android.database.Cursor: int getCount()>();

        if $i3 == 0 goto label4;

        $r3 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor[] mCursors>;

        r1 = $r3[i2];

        $z0 = interfaceinvoke r1.<android.database.Cursor: boolean isLast()>();

        if $z0 == 0 goto label5;

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        if $i1 != -1 goto label6;

        $i1 = i2;

        $r3 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor[] mCursors>;

        r1 = $r3[i2];

        interfaceinvoke r1.<android.database.Cursor: boolean moveToNext()>();

        goto label4;

     label6:
        $r3 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor[] mCursors>;

        r1 = $r3[$i1];

        $r3 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor[] mCursors>;

        r2 = $r3[i2];

        interfaceinvoke r2.<android.database.Cursor: boolean moveToNext()>();

        $r4 = r0.<com.fsck.k9.helper.MergeCursor: java.util.Comparator mComparator>;

        $i3 = interfaceinvoke $r4.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r1, r2);

        if $i3 <= 0 goto label7;

        $i1 = i2;

        interfaceinvoke r1.<android.database.Cursor: boolean moveToPrevious()>();

        goto label4;

     label7:
        interfaceinvoke r2.<android.database.Cursor: boolean moveToPrevious()>();

        goto label4;

     label8:
        i0 = r0.<com.fsck.k9.helper.MergeCursor: int mPosition>;

        i0 = i0 + 1;

        r0.<com.fsck.k9.helper.MergeCursor: int mPosition> = i0;

        if $i1 == -1 goto label9;

        r0.<com.fsck.k9.helper.MergeCursor: int mActiveCursorIndex> = $i1;

        $r3 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor[] mCursors>;

        $i1 = r0.<com.fsck.k9.helper.MergeCursor: int mActiveCursorIndex>;

        r1 = $r3[$i1];

        r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor mActiveCursor> = r1;

     label9:
        return 1;
    }
    public boolean moveToPosition(int)
    {
        com.fsck.k9.helper.MergeCursor r0;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.fsck.k9.helper.MergeCursor: int getCount()>();

        if $i0 < $i1 goto label1;

        r0.<com.fsck.k9.helper.MergeCursor: int mPosition> = $i1;

        return 0;

     label1:
        if $i0 >= 0 goto label2;

        r0.<com.fsck.k9.helper.MergeCursor: int mPosition> = -1;

        return 0;

     label2:
        $i1 = r0.<com.fsck.k9.helper.MergeCursor: int mPosition>;

        if $i0 != $i1 goto label3;

        return 1;

     label3:
        $i1 = r0.<com.fsck.k9.helper.MergeCursor: int mPosition>;

        if $i0 <= $i1 goto label5;

        $i1 = 0;

        $i2 = r0.<com.fsck.k9.helper.MergeCursor: int mPosition>;

        $i0 = $i0 - $i2;

     label4:
        if $i1 >= $i0 goto label7;

        $z0 = virtualinvoke r0.<com.fsck.k9.helper.MergeCursor: boolean moveToNext()>();

        if $z0 == 0 goto label8;

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $i1 = 0;

        $i2 = r0.<com.fsck.k9.helper.MergeCursor: int mPosition>;

        $i0 = $i2 - $i0;

     label6:
        if $i1 >= $i0 goto label7;

        $z0 = virtualinvoke r0.<com.fsck.k9.helper.MergeCursor: boolean moveToPrevious()>();

        if $z0 == 0 goto label8;

        $i1 = $i1 + 1;

        goto label6;

     label7:
        return 1;

     label8:
        return 0;
    }
    public boolean moveToPrevious()
    {
        com.fsck.k9.helper.MergeCursor r0;
        android.database.Cursor r1, r2;
        int i0, $i1, i2, $i3;
        android.database.Cursor[] $r3;
        boolean $z0;
        java.util.Comparator $r4;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $i1 = r0.<com.fsck.k9.helper.MergeCursor: int mPosition>;

        if $i1 >= 0 goto label1;

        return 0;

     label1:
        r1 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor mActiveCursor>;

        interfaceinvoke r1.<android.database.Cursor: boolean moveToPrevious()>();

        $i1 = r0.<com.fsck.k9.helper.MergeCursor: int mPosition>;

        if $i1 != 0 goto label2;

        r0.<com.fsck.k9.helper.MergeCursor: int mPosition> = -1;

        return 0;

     label2:
        $i1 = -1;

        i2 = 0;

        $r3 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor[] mCursors>;

        i0 = lengthof $r3;

     label3:
        if i2 >= i0 goto label7;

        $r3 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor[] mCursors>;

        r1 = $r3[i2];

        if r1 == null goto label4;

        $r3 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor[] mCursors>;

        r1 = $r3[i2];

        $z0 = interfaceinvoke r1.<android.database.Cursor: boolean isBeforeFirst()>();

        if $z0 == 0 goto label5;

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        if $i1 != -1 goto label6;

        $i1 = i2;

        goto label4;

     label6:
        $r3 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor[] mCursors>;

        r1 = $r3[$i1];

        $r3 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor[] mCursors>;

        r2 = $r3[i2];

        $r4 = r0.<com.fsck.k9.helper.MergeCursor: java.util.Comparator mComparator>;

        $i3 = interfaceinvoke $r4.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r1, r2);

        if $i3 > 0 goto label4;

        $i1 = i2;

        goto label4;

     label7:
        i0 = r0.<com.fsck.k9.helper.MergeCursor: int mPosition>;

        i0 = i0 + -1;

        r0.<com.fsck.k9.helper.MergeCursor: int mPosition> = i0;

        if $i1 == -1 goto label8;

        r0.<com.fsck.k9.helper.MergeCursor: int mActiveCursorIndex> = $i1;

        $r3 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor[] mCursors>;

        $i1 = r0.<com.fsck.k9.helper.MergeCursor: int mActiveCursorIndex>;

        r1 = $r3[$i1];

        r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor mActiveCursor> = r1;

     label8:
        return 1;
    }
    public void registerContentObserver(android.database.ContentObserver)
    {
        com.fsck.k9.helper.MergeCursor r0;
        android.database.ContentObserver $r1;
        android.database.Cursor r2;
        android.database.Cursor[] $r3;
        int $i0, $i1;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $r1 := @parameter0: android.database.ContentObserver;

        $r3 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor[] mCursors>;

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        r2 = $r3[$i1];

        interfaceinvoke r2.<android.database.Cursor: void registerContentObserver(android.database.ContentObserver)>($r1);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }
    public void registerDataSetObserver(android.database.DataSetObserver)
    {
        com.fsck.k9.helper.MergeCursor r0;
        android.database.DataSetObserver $r1;
        android.database.Cursor r2;
        android.database.Cursor[] $r3;
        int $i0, $i1;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $r1 := @parameter0: android.database.DataSetObserver;

        $r3 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor[] mCursors>;

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        r2 = $r3[$i1];

        interfaceinvoke r2.<android.database.Cursor: void registerDataSetObserver(android.database.DataSetObserver)>($r1);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }
    public boolean requery()
    {
        com.fsck.k9.helper.MergeCursor r0;
        android.database.Cursor r1;
        android.database.Cursor[] $r2;
        int $i0, $i1;
        boolean $z0, z1;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        z1 = 1;

        $r2 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor[] mCursors>;

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        r1 = $r2[$i1];

        $z0 = interfaceinvoke r1.<android.database.Cursor: boolean requery()>();

        z1 = z1 & $z0;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return z1;
    }
    public android.os.Bundle respond(android.os.Bundle)
    {
        com.fsck.k9.helper.MergeCursor r0;
        android.os.Bundle $r1;
        java.lang.RuntimeException $r2;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $r1 := @parameter0: android.os.Bundle;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented");

        throw $r2;
    }
    public void setExtras(android.os.Bundle)
    {
        com.fsck.k9.helper.MergeCursor r0;
        android.os.Bundle $r1;
        android.database.Cursor $r2;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $r1 := @parameter0: android.os.Bundle;

        $r2 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor mActiveCursor>;

        interfaceinvoke $r2.<android.database.Cursor: void setExtras(android.os.Bundle)>($r1);

        return;
    }
    public void setNotificationUri(android.content.ContentResolver, android.net.Uri)
    {
        com.fsck.k9.helper.MergeCursor r0;
        android.content.ContentResolver $r1;
        android.net.Uri $r2;
        android.database.Cursor r3;
        android.database.Cursor[] $r4;
        int $i0, $i1;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $r1 := @parameter0: android.content.ContentResolver;

        $r2 := @parameter1: android.net.Uri;

        $r4 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor[] mCursors>;

        $i0 = lengthof $r4;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        r3 = $r4[$i1];

        interfaceinvoke r3.<android.database.Cursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>($r1, $r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }
    public void unregisterContentObserver(android.database.ContentObserver)
    {
        com.fsck.k9.helper.MergeCursor r0;
        android.database.ContentObserver $r1;
        android.database.Cursor r2;
        android.database.Cursor[] $r3;
        int $i0, $i1;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $r1 := @parameter0: android.database.ContentObserver;

        $r3 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor[] mCursors>;

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        r2 = $r3[$i1];

        interfaceinvoke r2.<android.database.Cursor: void unregisterContentObserver(android.database.ContentObserver)>($r1);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }
    public void unregisterDataSetObserver(android.database.DataSetObserver)
    {
        com.fsck.k9.helper.MergeCursor r0;
        android.database.DataSetObserver $r1;
        android.database.Cursor r2;
        android.database.Cursor[] $r3;
        int $i0, $i1;

        r0 := @this: com.fsck.k9.helper.MergeCursor;

        $r1 := @parameter0: android.database.DataSetObserver;

        $r3 = r0.<com.fsck.k9.helper.MergeCursor: android.database.Cursor[] mCursors>;

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        r2 = $r3[$i1];

        interfaceinvoke r2.<android.database.Cursor: void unregisterDataSetObserver(android.database.DataSetObserver)>($r1);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }
