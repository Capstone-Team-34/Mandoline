com.fsck.k9.helper.Utility extends java.lang.Object
private static final java.util.regex.Pattern IMG_PATTERN
private static final java.lang.String IMG_SRC_REGEX
private static final java.util.regex.Pattern MESSAGE_ID
private static final java.lang.String NEWLINE_REGEX
private static final java.util.regex.Pattern RESPONSE_PATTERN
private static final java.util.regex.Pattern TAG_PATTERN
private static android.os.Handler sMainThreadHandler
    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("((Re|Fw|Fwd|Aw|R\\u00E9f\\.)(\\[\\d+\\])?[\\u00A0 ]?: *)+", 2);

        <com.fsck.k9.helper.Utility: java.util.regex.Pattern RESPONSE_PATTERN> = $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("\\[[-_a-z0-9]+\\] ", 2);

        <com.fsck.k9.helper.Utility: java.util.regex.Pattern TAG_PATTERN> = $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(?is:<img[^>]+src\\s*=\\s*[\'\"]?([a-z]+)\\:)");

        <com.fsck.k9.helper.Utility: java.util.regex.Pattern IMG_PATTERN> = $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("<(?:[a-zA-Z0-9!#$%&\'*+\\-/=?^_`{|}~]+(?:\\.[a-zA-Z0-9!#$%&\'*+\\-/=?^_`{|}~]+)*|\"(?:[^\\\\\"]|\\\\.)*\")@(?:[a-zA-Z0-9!#$%&\'*+\\-/=?^_`{|}~]+(?:\\.[a-zA-Z0-9!#$%&\'*+\\-/=?^_`{|}~]+)*|\\[(?:[^\\\\\\]]|\\\\.)*\\])>");

        <com.fsck.k9.helper.Utility: java.util.regex.Pattern MESSAGE_ID> = $r0;

        return;
    }
    public void <init>()
    {
        com.fsck.k9.helper.Utility r0;

        r0 := @this: com.fsck.k9.helper.Utility;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static boolean arrayContains(java.lang.Object[], java.lang.Object)
    {
        java.lang.Object[] $r0;
        java.lang.Object $r1, r2;
        int $i0, $i1;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.lang.Object;

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        r2 = $r0[$i1];

        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 0;
    }
    public static transient boolean arrayContainsAny(java.lang.Object[], java.lang.Object[])
    {
        java.lang.Object[] $r0, $r1;
        java.lang.Object r2;
        int $i0, $i1;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.lang.Object[];

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        r2 = $r0[$i1];

        $z0 = staticinvoke <com.fsck.k9.helper.Utility: boolean arrayContains(java.lang.Object[],java.lang.Object)>($r1, r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 0;
    }
    public static void closeQuietly(android.database.Cursor)
    {
        android.database.Cursor $r0;

        $r0 := @parameter0: android.database.Cursor;

        if $r0 == null goto label1;

        interfaceinvoke $r0.<android.database.Cursor: void close()>();

     label1:
        return;
    }
    public static java.lang.String combine(java.lang.Iterable, char)
    {
        java.lang.Iterable r0;
        char $c0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.Iterable;

        $c0 := @parameter1: char;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c0);

        $r1 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>($r1, r0);

        return $r1;
    }
    public static java.lang.String combine(java.lang.Object[], char)
    {
        java.lang.Object[] $r0;
        char $c0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.Object[];

        $c0 := @parameter1: char;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c0);

        $r1 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Object[])>($r1, $r0);

        return $r1;
    }
    public static boolean domainFieldValid(android.widget.EditText)
    {
        android.widget.EditText $r0;
        android.text.Editable $r1;
        java.lang.String $r2;
        boolean $z0;
        int $i0;

        $r0 := @parameter0: android.widget.EditText;

        $r1 = virtualinvoke $r0.<android.widget.EditText: android.text.Editable getText()>();

        if $r1 == null goto label2;

        $r1 = virtualinvoke $r0.<android.widget.EditText: android.text.Editable getText()>();

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean matches(java.lang.String)>("^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)*[a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?$");

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 > 253 goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean matches(java.lang.String)>("^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$");

        if $z0 != 0 goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }
    public static java.lang.String extractMessageId(java.lang.String)
    {
        java.lang.String $r0;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;
        boolean $z0;
        int $i0, $i1;

        $r0 := @parameter0: java.lang.String;

        $r1 = <com.fsck.k9.helper.Utility: java.util.regex.Pattern MESSAGE_ID>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r2.<java.util.regex.Matcher: int start()>();

        $i1 = virtualinvoke $r2.<java.util.regex.Matcher: int end()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        return $r0;

     label1:
        return null;
    }
    public static java.util.List extractMessageIds(java.lang.String)
    {
        java.lang.String $r0, $r4;
        java.util.ArrayList r1;
        java.util.regex.Pattern $r2;
        java.util.regex.Matcher $r3;
        int i0, $i1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r2 = <com.fsck.k9.helper.Utility: java.util.regex.Pattern MESSAGE_ID>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        i0 = 0;

     label1:
        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean find(int)>(i0);

        if $z0 == 0 goto label2;

        i0 = virtualinvoke $r3.<java.util.regex.Matcher: int start()>();

        $i1 = virtualinvoke $r3.<java.util.regex.Matcher: int end()>();

        $r4 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(i0, $i1);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        i0 = virtualinvoke $r3.<java.util.regex.Matcher: int end()>();

        goto label1;

     label2:
        return r1;
    }
    public static android.os.Handler getMainThreadHandler()
    {
        android.os.Looper $r0;
        android.os.Handler $r1;

        $r1 = <com.fsck.k9.helper.Utility: android.os.Handler sMainThreadHandler>;

        if $r1 != null goto label1;

        $r1 = new android.os.Handler;

        $r0 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r1.<android.os.Handler: void <init>(android.os.Looper)>($r0);

        <com.fsck.k9.helper.Utility: android.os.Handler sMainThreadHandler> = $r1;

     label1:
        $r1 = <com.fsck.k9.helper.Utility: android.os.Handler sMainThreadHandler>;

        return $r1;
    }
    public static boolean hasConnectivity(android.content.Context)
    {
        android.content.Context $r0;
        android.net.NetworkInfo$State $r1, $r5;
        java.lang.Object $r2;
        android.net.ConnectivityManager r3;
        android.net.NetworkInfo $r4;

        $r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        r3 = (android.net.ConnectivityManager) $r2;

        if r3 != null goto label1;

        return 0;

     label1:
        $r4 = virtualinvoke r3.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r4 == null goto label2;

        $r5 = virtualinvoke $r4.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        $r1 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTED>;

        if $r5 != $r1 goto label2;

        return 1;

     label2:
        return 0;
    }
    public static boolean hasExternalImages(java.lang.String)
    {
        java.lang.String $r0;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;
        boolean $z0;
        java.lang.Object[] $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 = <com.fsck.k9.helper.Utility: java.util.regex.Pattern IMG_PATTERN>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

     label1:
        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label3;

        $r0 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("http");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("https");

        if $z0 == 0 goto label1;

     label2:
        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("External images found", $r3);

        return 1;

     label3:
        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("No external images.", $r3);

        return 0;
    }
    public static transient boolean isAnyMimeType(java.lang.String, java.lang.String[])
    {
        java.lang.String $r0, r2;
        java.lang.String[] $r1;
        int $i0, $i1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String[];

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        r2 = $r1[$i1];

        $z0 = staticinvoke <org.apache.james.mime4j.util.MimeUtil: boolean isSameMimeType(java.lang.String,java.lang.String)>(r2, $r0);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 0;
    }
    public static boolean requiredFieldValid(android.text.Editable)
    {
        android.text.Editable $r0;
        int $i0;

        $r0 := @parameter0: android.text.Editable;

        if $r0 == null goto label1;

        $i0 = interfaceinvoke $r0.<android.text.Editable: int length()>();

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public static boolean requiredFieldValid(android.widget.TextView)
    {
        android.widget.TextView $r0;
        java.lang.CharSequence $r1;
        int $i0;

        $r0 := @parameter0: android.widget.TextView;

        $r1 = virtualinvoke $r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        if $r1 == null goto label1;

        $r1 = virtualinvoke $r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public static void setCompoundDrawablesAlpha(android.widget.TextView, int)
    {
        android.widget.TextView $r0;
        int $i0;

        $r0 := @parameter0: android.widget.TextView;

        $i0 := @parameter1: int;

        return;
    }
    public static void setContactForBadge(com.fsck.k9.ui.ContactBadge, com.fsck.k9.mail.Address)
    {
        com.fsck.k9.ui.ContactBadge $r0;
        com.fsck.k9.mail.Address $r1;
        android.os.Bundle r2;
        int $i0;
        java.lang.String $r3;

        $r0 := @parameter0: com.fsck.k9.ui.ContactBadge;

        $r1 := @parameter1: com.fsck.k9.mail.Address;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 18 goto label1;

        r2 = new android.os.Bundle;

        specialinvoke r2.<android.os.Bundle: void <init>()>();

        $r3 = virtualinvoke $r1.<com.fsck.k9.mail.Address: java.lang.String getPersonal()>();

        virtualinvoke r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("name", $r3);

        $r3 = virtualinvoke $r1.<com.fsck.k9.mail.Address: java.lang.String getAddress()>();

        virtualinvoke $r0.<com.fsck.k9.ui.ContactBadge: void assignContactFromEmail(java.lang.String,boolean,android.os.Bundle)>($r3, 1, r2);

        return;

     label1:
        $r3 = virtualinvoke $r1.<com.fsck.k9.mail.Address: java.lang.String getAddress()>();

        virtualinvoke $r0.<com.fsck.k9.ui.ContactBadge: void assignContactFromEmail(java.lang.String,boolean)>($r3, 1);

        return;
    }
    public static java.lang.String stripNewLines(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[\\r\\n]", "");

        return $r0;
    }
    public static java.lang.String stripSubject(java.lang.String)
    {
        java.lang.String $r0, r3, $r5;
        int i0, $i1, $i2;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2, $r4;
        boolean z0, z1, $z2;

        $r0 := @parameter0: java.lang.String;

        i0 = 0;

        $r1 = <com.fsck.k9.helper.Utility: java.util.regex.Pattern TAG_PATTERN>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        r3 = null;

        z0 = 0;

        z1 = 0;

        $z2 = virtualinvoke $r2.<java.util.regex.Matcher: boolean find(int)>(0);

        if $z2 == 0 goto label1;

        z0 = 1;

        $i1 = virtualinvoke $r2.<java.util.regex.Matcher: int start()>();

        if $i1 != 0 goto label1;

        r3 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String group()>();

        i0 = virtualinvoke $r2.<java.util.regex.Matcher: int end()>();

        z1 = 1;

     label1:
        $r1 = <com.fsck.k9.helper.Utility: java.util.regex.Pattern RESPONSE_PATTERN>;

        $r4 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

     label2:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = $i1 + -1;

        if i0 >= $i1 goto label5;

        $z2 = virtualinvoke $r4.<java.util.regex.Matcher: boolean find(int)>(i0);

        if $z2 == 0 goto label5;

        $i1 = virtualinvoke $r4.<java.util.regex.Matcher: int start()>();

        if $i1 != i0 goto label5;

        if z0 == 0 goto label3;

        if r3 == null goto label3;

        $i1 = virtualinvoke $r4.<java.util.regex.Matcher: int end()>();

        $i2 = virtualinvoke r3.<java.lang.String: int length()>();

        $z2 = virtualinvoke $r0.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>($i1, r3, 0, $i2);

        if $z2 == 0 goto label5;

     label3:
        $i1 = virtualinvoke $r4.<java.util.regex.Matcher: int end()>();

        i0 = $i1;

        if z0 == 0 goto label2;

        z1 = 0;

        if r3 != null goto label4;

        $i2 = virtualinvoke $r2.<java.util.regex.Matcher: int start()>();

        if $i2 != $i1 goto label2;

        $r5 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String group()>();

        r3 = $r5;

        i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        i0 = $i1 + i0;

        z1 = 1;

        goto label2;

     label4:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i2 = $i2 + -1;

        if $i1 >= $i2 goto label2;

        $z2 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String,int)>(r3, $i1);

        if $z2 == 0 goto label2;

        i0 = virtualinvoke r3.<java.lang.String: int length()>();

        i0 = $i1 + i0;

        z1 = 1;

        goto label2;

     label5:
        if z1 == 0 goto label6;

        if r3 == null goto label6;

        $i1 = virtualinvoke r3.<java.lang.String: int length()>();

        i0 = i0 - $i1;

     label6:
        if i0 <= -1 goto label7;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = $i1 + -1;

        if i0 >= $i1 goto label7;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(i0);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        return $r0;

     label7:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        return $r0;
    }
    public static java.lang.String wrap(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0, $i1, $i2;
        java.lang.StringBuilder r1;
        java.lang.String[] $r2;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("(?:\\r?\\n)");

        $i1 = lengthof $r2;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r0 = $r2[$i2];

        $r0 = staticinvoke <com.fsck.k9.helper.Utility: java.lang.String wrap(java.lang.String,int,java.lang.String,boolean)>($r0, $i0, null, 0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $r0 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }
    public static java.lang.String wrap(java.lang.String, int, java.lang.String, boolean)
    {
        java.lang.String $r0, $r2, $r3;
        boolean $z0;
        java.lang.StringBuilder r1;
        int $i0, $i1, i2, $i3;
        char $c4;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        if $r0 != null goto label1;

        return null;

     label1:
        if $r2 != null goto label2;

        $r2 = "\r\n";

     label2:
        if $i0 >= 1 goto label3;

        $i0 = 1;

     label3:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        i2 = 0;

        r1 = new java.lang.StringBuilder;

        $i3 = $i1 + 32;

        specialinvoke r1.<java.lang.StringBuilder: void <init>(int)>($i3);

     label4:
        $i3 = $i1 - i2;

        if $i3 <= $i0 goto label9;

        $c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i2);

        if $c4 != 32 goto label5;

        i2 = i2 + 1;

        goto label4;

     label5:
        $i3 = $i0 + i2;

        $i3 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(int,int)>(32, $i3);

        if $i3 < i2 goto label6;

        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(i2, $i3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        i2 = $i3 + 1;

        goto label4;

     label6:
        if $z0 == 0 goto label7;

        $i3 = $i0 + i2;

        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(i2, $i3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        i2 = i2 + $i0;

        goto label4;

     label7:
        $i3 = $i0 + i2;

        $i3 = virtualinvoke $r0.<java.lang.String: int indexOf(int,int)>(32, $i3);

        if $i3 < 0 goto label8;

        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(i2, $i3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        i2 = $i3 + 1;

        goto label4;

     label8:
        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(i2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        i2 = $i1;

        goto label4;

     label9:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(i2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }
