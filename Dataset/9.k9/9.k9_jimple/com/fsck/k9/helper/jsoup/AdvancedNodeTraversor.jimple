com.fsck.k9.helper.jsoup.AdvancedNodeTraversor extends java.lang.Object
private com.fsck.k9.helper.jsoup.NodeFilter filter
    public void <init>(com.fsck.k9.helper.jsoup.NodeFilter)
    {
        com.fsck.k9.helper.jsoup.AdvancedNodeTraversor r0;
        com.fsck.k9.helper.jsoup.NodeFilter $r1;

        r0 := @this: com.fsck.k9.helper.jsoup.AdvancedNodeTraversor;

        $r1 := @parameter0: com.fsck.k9.helper.jsoup.NodeFilter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.fsck.k9.helper.jsoup.AdvancedNodeTraversor: com.fsck.k9.helper.jsoup.NodeFilter filter> = $r1;

        return;
    }
    public com.fsck.k9.helper.jsoup.AdvancedNodeTraversor$FilterResult filter(org.jsoup.nodes.Node)
    {
        com.fsck.k9.helper.jsoup.AdvancedNodeTraversor r0;
        org.jsoup.nodes.Node $r1, r2, $r8;
        int i0, $i1;
        com.fsck.k9.helper.jsoup.NodeFilter $r3;
        com.fsck.k9.helper.jsoup.NodeFilter$HeadFilterDecision $r4, r5, $r6;
        com.fsck.k9.helper.jsoup.NodeFilter$TailFilterDecision r7, $r9, $r10;
        com.fsck.k9.helper.jsoup.AdvancedNodeTraversor$FilterResult r11;

        r0 := @this: com.fsck.k9.helper.jsoup.AdvancedNodeTraversor;

        $r1 := @parameter0: org.jsoup.nodes.Node;

        r2 = $r1;

        i0 = 0;

     label01:
        if r2 == null goto label14;

        $r3 = r0.<com.fsck.k9.helper.jsoup.AdvancedNodeTraversor: com.fsck.k9.helper.jsoup.NodeFilter filter>;

        $r4 = interfaceinvoke $r3.<com.fsck.k9.helper.jsoup.NodeFilter: com.fsck.k9.helper.jsoup.NodeFilter$HeadFilterDecision head(org.jsoup.nodes.Node,int)>(r2, i0);

        r5 = $r4;

        $r6 = <com.fsck.k9.helper.jsoup.NodeFilter$HeadFilterDecision: com.fsck.k9.helper.jsoup.NodeFilter$HeadFilterDecision STOP>;

        if $r4 != $r6 goto label02;

        r11 = <com.fsck.k9.helper.jsoup.AdvancedNodeTraversor$FilterResult: com.fsck.k9.helper.jsoup.AdvancedNodeTraversor$FilterResult STOPPED>;

        return r11;

     label02:
        $r6 = <com.fsck.k9.helper.jsoup.NodeFilter$HeadFilterDecision: com.fsck.k9.helper.jsoup.NodeFilter$HeadFilterDecision CONTINUE>;

        if $r4 != $r6 goto label03;

        $i1 = virtualinvoke r2.<org.jsoup.nodes.Node: int childNodeSize()>();

        if $i1 <= 0 goto label03;

        r2 = virtualinvoke r2.<org.jsoup.nodes.Node: org.jsoup.nodes.Node childNode(int)>(0);

        i0 = i0 + 1;

        goto label01;

     label03:
        r7 = <com.fsck.k9.helper.jsoup.NodeFilter$TailFilterDecision: com.fsck.k9.helper.jsoup.NodeFilter$TailFilterDecision CONTINUE>;

     label04:
        $r8 = virtualinvoke r2.<org.jsoup.nodes.Node: org.jsoup.nodes.Node nextSibling()>();

        if $r8 != null goto label09;

        if i0 <= 0 goto label09;

        $r4 = <com.fsck.k9.helper.jsoup.NodeFilter$HeadFilterDecision: com.fsck.k9.helper.jsoup.NodeFilter$HeadFilterDecision CONTINUE>;

        if r5 == $r4 goto label05;

        $r4 = <com.fsck.k9.helper.jsoup.NodeFilter$HeadFilterDecision: com.fsck.k9.helper.jsoup.NodeFilter$HeadFilterDecision SKIP_CHILDREN>;

        if r5 != $r4 goto label06;

     label05:
        $r3 = r0.<com.fsck.k9.helper.jsoup.AdvancedNodeTraversor: com.fsck.k9.helper.jsoup.NodeFilter filter>;

        $r9 = interfaceinvoke $r3.<com.fsck.k9.helper.jsoup.NodeFilter: com.fsck.k9.helper.jsoup.NodeFilter$TailFilterDecision tail(org.jsoup.nodes.Node,int)>(r2, i0);

        r7 = $r9;

        $r10 = <com.fsck.k9.helper.jsoup.NodeFilter$TailFilterDecision: com.fsck.k9.helper.jsoup.NodeFilter$TailFilterDecision STOP>;

        if $r9 != $r10 goto label06;

        r11 = <com.fsck.k9.helper.jsoup.AdvancedNodeTraversor$FilterResult: com.fsck.k9.helper.jsoup.AdvancedNodeTraversor$FilterResult STOPPED>;

        return r11;

     label06:
        $r8 = r2;

        r2 = virtualinvoke r2.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode()>();

        i0 = i0 + -1;

        $r4 = <com.fsck.k9.helper.jsoup.NodeFilter$HeadFilterDecision: com.fsck.k9.helper.jsoup.NodeFilter$HeadFilterDecision REMOVE>;

        if r5 == $r4 goto label07;

        $r9 = <com.fsck.k9.helper.jsoup.NodeFilter$TailFilterDecision: com.fsck.k9.helper.jsoup.NodeFilter$TailFilterDecision REMOVE>;

        if r7 != $r9 goto label08;

     label07:
        virtualinvoke $r8.<org.jsoup.nodes.Node: void remove()>();

     label08:
        r5 = <com.fsck.k9.helper.jsoup.NodeFilter$HeadFilterDecision: com.fsck.k9.helper.jsoup.NodeFilter$HeadFilterDecision CONTINUE>;

        goto label04;

     label09:
        $r4 = <com.fsck.k9.helper.jsoup.NodeFilter$HeadFilterDecision: com.fsck.k9.helper.jsoup.NodeFilter$HeadFilterDecision CONTINUE>;

        if r5 == $r4 goto label10;

        $r4 = <com.fsck.k9.helper.jsoup.NodeFilter$HeadFilterDecision: com.fsck.k9.helper.jsoup.NodeFilter$HeadFilterDecision SKIP_CHILDREN>;

        if r5 != $r4 goto label11;

     label10:
        $r3 = r0.<com.fsck.k9.helper.jsoup.AdvancedNodeTraversor: com.fsck.k9.helper.jsoup.NodeFilter filter>;

        r7 = interfaceinvoke $r3.<com.fsck.k9.helper.jsoup.NodeFilter: com.fsck.k9.helper.jsoup.NodeFilter$TailFilterDecision tail(org.jsoup.nodes.Node,int)>(r2, i0);

        $r9 = <com.fsck.k9.helper.jsoup.NodeFilter$TailFilterDecision: com.fsck.k9.helper.jsoup.NodeFilter$TailFilterDecision STOP>;

        if r7 != $r9 goto label11;

        r11 = <com.fsck.k9.helper.jsoup.AdvancedNodeTraversor$FilterResult: com.fsck.k9.helper.jsoup.AdvancedNodeTraversor$FilterResult STOPPED>;

        return r11;

     label11:
        $r8 = r2;

        r2 = virtualinvoke r2.<org.jsoup.nodes.Node: org.jsoup.nodes.Node nextSibling()>();

        $r4 = <com.fsck.k9.helper.jsoup.NodeFilter$HeadFilterDecision: com.fsck.k9.helper.jsoup.NodeFilter$HeadFilterDecision REMOVE>;

        if r5 != $r4 goto label12;

        virtualinvoke $r8.<org.jsoup.nodes.Node: void remove()>();

     label12:
        if $r8 != $r1 goto label01;

        $r4 = <com.fsck.k9.helper.jsoup.NodeFilter$HeadFilterDecision: com.fsck.k9.helper.jsoup.NodeFilter$HeadFilterDecision REMOVE>;

        if r5 != $r4 goto label13;

        r11 = <com.fsck.k9.helper.jsoup.AdvancedNodeTraversor$FilterResult: com.fsck.k9.helper.jsoup.AdvancedNodeTraversor$FilterResult ROOT_REMOVED>;

        return r11;

     label13:
        r11 = <com.fsck.k9.helper.jsoup.AdvancedNodeTraversor$FilterResult: com.fsck.k9.helper.jsoup.AdvancedNodeTraversor$FilterResult ENDED>;

        return r11;

     label14:
        r11 = <com.fsck.k9.helper.jsoup.AdvancedNodeTraversor$FilterResult: com.fsck.k9.helper.jsoup.AdvancedNodeTraversor$FilterResult ENDED>;

        return r11;
    }
