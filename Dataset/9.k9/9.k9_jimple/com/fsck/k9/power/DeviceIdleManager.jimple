com.fsck.k9.power.DeviceIdleManager extends java.lang.Object
private static com.fsck.k9.power.DeviceIdleManager instance
    private void <init>()
    {
        com.fsck.k9.power.DeviceIdleManager r0;

        r0 := @this: com.fsck.k9.power.DeviceIdleManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    void <init>(com.fsck.k9.power.DeviceIdleManager$1)
    {
        com.fsck.k9.power.DeviceIdleManager r0;
        com.fsck.k9.power.DeviceIdleManager$1 $r1;

        r0 := @this: com.fsck.k9.power.DeviceIdleManager;

        $r1 := @parameter0: com.fsck.k9.power.DeviceIdleManager$1;

        specialinvoke r0.<com.fsck.k9.power.DeviceIdleManager: void <init>()>();

        return;
    }
    public static com.fsck.k9.power.DeviceIdleManager getInstance(android.content.Context)
    {
        android.content.Context $r0;
        com.fsck.k9.power.DozeChecker r1;
        com.fsck.k9.power.DeviceIdleManager $r2;
        boolean $z0;
        com.fsck.k9.power.DeviceIdleManager$RealDeviceIdleManager $r3;
        com.fsck.k9.power.DeviceIdleManager$NoOpDeviceIdleManager $r4;
        java.lang.Throwable $r5;

        $r0 := @parameter0: android.content.Context;

        entermonitor class "Lcom/fsck/k9/power/DeviceIdleManager;";

     label1:
        $r2 = <com.fsck.k9.power.DeviceIdleManager: com.fsck.k9.power.DeviceIdleManager instance>;

        if $r2 != null goto label2;

        r1 = new com.fsck.k9.power.DozeChecker;

        specialinvoke r1.<com.fsck.k9.power.DozeChecker: void <init>(android.content.Context)>($r0);

        $z0 = virtualinvoke r1.<com.fsck.k9.power.DozeChecker: boolean isDeviceIdleModeSupported()>();

        if $z0 == 0 goto label4;

        $z0 = virtualinvoke r1.<com.fsck.k9.power.DozeChecker: boolean isAppWhitelisted()>();

        if $z0 != 0 goto label4;

        $r3 = staticinvoke <com.fsck.k9.power.DeviceIdleManager$RealDeviceIdleManager: com.fsck.k9.power.DeviceIdleManager$RealDeviceIdleManager newInstance(android.content.Context)>($r0);

        <com.fsck.k9.power.DeviceIdleManager: com.fsck.k9.power.DeviceIdleManager instance> = $r3;

     label2:
        $r2 = <com.fsck.k9.power.DeviceIdleManager: com.fsck.k9.power.DeviceIdleManager instance>;

     label3:
        exitmonitor class "Lcom/fsck/k9/power/DeviceIdleManager;";

        return $r2;

     label4:
        $r4 = new com.fsck.k9.power.DeviceIdleManager$NoOpDeviceIdleManager;

        specialinvoke $r4.<com.fsck.k9.power.DeviceIdleManager$NoOpDeviceIdleManager: void <init>()>();

        <com.fsck.k9.power.DeviceIdleManager: com.fsck.k9.power.DeviceIdleManager instance> = $r4;

     label5:
        goto label2;

     label6:
        $r5 := @caughtexception;

        exitmonitor class "Lcom/fsck/k9/power/DeviceIdleManager;";

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }
public abstract void registerReceiver() { 
// no body
} 
public abstract void unregisterReceiver() { 
// no body
} 
