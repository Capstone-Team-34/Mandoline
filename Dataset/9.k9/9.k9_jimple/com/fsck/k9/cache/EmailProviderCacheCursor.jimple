com.fsck.k9.cache.EmailProviderCacheCursor extends android.database.CursorWrapper
private com.fsck.k9.cache.EmailProviderCache mCache
private int mFolderIdColumn
private java.util.List mHiddenRows
private int mMessageIdColumn
private int mPosition
private int mThreadRootColumn
    public void <init>(java.lang.String, android.database.Cursor, android.content.Context)
    {
        com.fsck.k9.cache.EmailProviderCacheCursor r0;
        java.lang.String $r1;
        android.database.Cursor $r2;
        android.content.Context $r3;
        java.util.ArrayList $r4;
        com.fsck.k9.cache.EmailProviderCache $r5;
        int $i0;
        java.lang.IllegalArgumentException $r6;
        boolean $z0;
        long $l1, $l2;
        java.lang.Long $r7;
        java.util.List $r8;
        java.lang.Integer $r9;

        r0 := @this: com.fsck.k9.cache.EmailProviderCacheCursor;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.database.Cursor;

        $r3 := @parameter2: android.content.Context;

        specialinvoke r0.<android.database.CursorWrapper: void <init>(android.database.Cursor)>($r2);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.fsck.k9.cache.EmailProviderCacheCursor: java.util.List mHiddenRows> = $r4;

        $r5 = staticinvoke <com.fsck.k9.cache.EmailProviderCache: com.fsck.k9.cache.EmailProviderCache getCache(java.lang.String,android.content.Context)>($r1, $r3);

        r0.<com.fsck.k9.cache.EmailProviderCacheCursor: com.fsck.k9.cache.EmailProviderCache mCache> = $r5;

        $i0 = interfaceinvoke $r2.<android.database.Cursor: int getColumnIndex(java.lang.String)>("id");

        r0.<com.fsck.k9.cache.EmailProviderCacheCursor: int mMessageIdColumn> = $i0;

        $i0 = interfaceinvoke $r2.<android.database.Cursor: int getColumnIndex(java.lang.String)>("folder_id");

        r0.<com.fsck.k9.cache.EmailProviderCacheCursor: int mFolderIdColumn> = $i0;

        $i0 = interfaceinvoke $r2.<android.database.Cursor: int getColumnIndex(java.lang.String)>("root");

        r0.<com.fsck.k9.cache.EmailProviderCacheCursor: int mThreadRootColumn> = $i0;

        $i0 = r0.<com.fsck.k9.cache.EmailProviderCacheCursor: int mMessageIdColumn>;

        if $i0 == -1 goto label1;

        $i0 = r0.<com.fsck.k9.cache.EmailProviderCacheCursor: int mFolderIdColumn>;

        if $i0 == -1 goto label1;

        $i0 = r0.<com.fsck.k9.cache.EmailProviderCacheCursor: int mThreadRootColumn>;

        if $i0 != -1 goto label2;

     label1:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The supplied cursor needs to contain the following columns: id, folder_id, root");

        throw $r6;

     label2:
        $z0 = interfaceinvoke $r2.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label3;

        $i0 = r0.<com.fsck.k9.cache.EmailProviderCacheCursor: int mMessageIdColumn>;

        $l1 = interfaceinvoke $r2.<android.database.Cursor: long getLong(int)>($i0);

        $i0 = r0.<com.fsck.k9.cache.EmailProviderCacheCursor: int mFolderIdColumn>;

        $l2 = interfaceinvoke $r2.<android.database.Cursor: long getLong(int)>($i0);

        $r5 = r0.<com.fsck.k9.cache.EmailProviderCacheCursor: com.fsck.k9.cache.EmailProviderCache mCache>;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $z0 = virtualinvoke $r5.<com.fsck.k9.cache.EmailProviderCache: boolean isMessageHidden(java.lang.Long,long)>($r7, $l2);

        if $z0 == 0 goto label2;

        $r8 = r0.<com.fsck.k9.cache.EmailProviderCacheCursor: java.util.List mHiddenRows>;

        $i0 = interfaceinvoke $r2.<android.database.Cursor: int getPosition()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9);

        goto label2;

     label3:
        interfaceinvoke $r2.<android.database.Cursor: boolean moveToFirst()>();

        interfaceinvoke $r2.<android.database.Cursor: boolean moveToPrevious()>();

        return;
    }
    public int getCount()
    {
        com.fsck.k9.cache.EmailProviderCacheCursor r0;
        int $i0, $i1;
        java.util.List $r1;

        r0 := @this: com.fsck.k9.cache.EmailProviderCacheCursor;

        $i0 = specialinvoke r0.<android.database.CursorWrapper: int getCount()>();

        $r1 = r0.<com.fsck.k9.cache.EmailProviderCacheCursor: java.util.List mHiddenRows>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i0 = $i0 - $i1;

        return $i0;
    }
    public int getInt(int)
    {
        com.fsck.k9.cache.EmailProviderCacheCursor r0;
        int $i0, $i1;
        long $l2, $l3;
        java.lang.String $r1, $r4;
        com.fsck.k9.cache.EmailProviderCache $r2;
        java.lang.Long $r3;

        r0 := @this: com.fsck.k9.cache.EmailProviderCacheCursor;

        $i0 := @parameter0: int;

        $i1 = r0.<com.fsck.k9.cache.EmailProviderCacheCursor: int mMessageIdColumn>;

        $l2 = virtualinvoke r0.<com.fsck.k9.cache.EmailProviderCacheCursor: long getLong(int)>($i1);

        $i1 = r0.<com.fsck.k9.cache.EmailProviderCacheCursor: int mThreadRootColumn>;

        $l3 = virtualinvoke r0.<com.fsck.k9.cache.EmailProviderCacheCursor: long getLong(int)>($i1);

        $r1 = virtualinvoke r0.<com.fsck.k9.cache.EmailProviderCacheCursor: java.lang.String getColumnName(int)>($i0);

        $r2 = r0.<com.fsck.k9.cache.EmailProviderCacheCursor: com.fsck.k9.cache.EmailProviderCache mCache>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r4 = virtualinvoke $r2.<com.fsck.k9.cache.EmailProviderCache: java.lang.String getValueForMessage(java.lang.Long,java.lang.String)>($r3, $r1);

        if $r4 == null goto label1;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        return $i0;

     label1:
        $r2 = r0.<com.fsck.k9.cache.EmailProviderCacheCursor: com.fsck.k9.cache.EmailProviderCache mCache>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r1 = virtualinvoke $r2.<com.fsck.k9.cache.EmailProviderCache: java.lang.String getValueForThread(java.lang.Long,java.lang.String)>($r3, $r1);

        if $r1 == null goto label2;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        return $i0;

     label2:
        $i0 = specialinvoke r0.<android.database.CursorWrapper: int getInt(int)>($i0);

        return $i0;
    }
    public int getPosition()
    {
        com.fsck.k9.cache.EmailProviderCacheCursor r0;
        java.util.List $r1;
        boolean $z0;
        int $i0;

        r0 := @this: com.fsck.k9.cache.EmailProviderCacheCursor;

        $r1 = r0.<com.fsck.k9.cache.EmailProviderCacheCursor: java.util.List mHiddenRows>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $i0 = specialinvoke r0.<android.database.CursorWrapper: int getPosition()>();

        return $i0;

     label1:
        $i0 = r0.<com.fsck.k9.cache.EmailProviderCacheCursor: int mPosition>;

        return $i0;
    }
    public boolean isLast()
    {
        com.fsck.k9.cache.EmailProviderCacheCursor r0;
        java.util.List $r1;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: com.fsck.k9.cache.EmailProviderCacheCursor;

        $r1 = r0.<com.fsck.k9.cache.EmailProviderCacheCursor: java.util.List mHiddenRows>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $z0 = specialinvoke r0.<android.database.CursorWrapper: boolean isLast()>();

        return $z0;

     label1:
        $i0 = r0.<com.fsck.k9.cache.EmailProviderCacheCursor: int mPosition>;

        $i1 = virtualinvoke r0.<com.fsck.k9.cache.EmailProviderCacheCursor: int getCount()>();

        $i1 = $i1 + -1;

        if $i0 != $i1 goto label2;

        return 1;

     label2:
        return 0;
    }
    public boolean move(int)
    {
        com.fsck.k9.cache.EmailProviderCacheCursor r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.fsck.k9.cache.EmailProviderCacheCursor;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.fsck.k9.cache.EmailProviderCacheCursor: int getPosition()>();

        $i0 = $i1 + $i0;

        $z0 = virtualinvoke r0.<com.fsck.k9.cache.EmailProviderCacheCursor: boolean moveToPosition(int)>($i0);

        return $z0;
    }
    public boolean moveToFirst()
    {
        com.fsck.k9.cache.EmailProviderCacheCursor r0;
        boolean $z0;

        r0 := @this: com.fsck.k9.cache.EmailProviderCacheCursor;

        $z0 = virtualinvoke r0.<com.fsck.k9.cache.EmailProviderCacheCursor: boolean moveToPosition(int)>(0);

        return $z0;
    }
    public boolean moveToLast()
    {
        com.fsck.k9.cache.EmailProviderCacheCursor r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.fsck.k9.cache.EmailProviderCacheCursor;

        $i0 = virtualinvoke r0.<com.fsck.k9.cache.EmailProviderCacheCursor: int getCount()>();

        $z0 = virtualinvoke r0.<com.fsck.k9.cache.EmailProviderCacheCursor: boolean moveToPosition(int)>($i0);

        return $z0;
    }
    public boolean moveToNext()
    {
        com.fsck.k9.cache.EmailProviderCacheCursor r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.fsck.k9.cache.EmailProviderCacheCursor;

        $i0 = virtualinvoke r0.<com.fsck.k9.cache.EmailProviderCacheCursor: int getPosition()>();

        $i0 = $i0 + 1;

        $z0 = virtualinvoke r0.<com.fsck.k9.cache.EmailProviderCacheCursor: boolean moveToPosition(int)>($i0);

        return $z0;
    }
    public boolean moveToPosition(int)
    {
        com.fsck.k9.cache.EmailProviderCacheCursor r0;
        int $i0, $i1;
        java.util.List $r1;
        boolean $z0;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        java.lang.Integer $r4;

        r0 := @this: com.fsck.k9.cache.EmailProviderCacheCursor;

        $i0 := @parameter0: int;

        $r1 = r0.<com.fsck.k9.cache.EmailProviderCacheCursor: java.util.List mHiddenRows>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $z0 = specialinvoke r0.<android.database.CursorWrapper: boolean moveToPosition(int)>($i0);

        return $z0;

     label1:
        r0.<com.fsck.k9.cache.EmailProviderCacheCursor: int mPosition> = $i0;

        $r1 = r0.<com.fsck.k9.cache.EmailProviderCacheCursor: java.util.List mHiddenRows>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.Integer) $r3;

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        if $i1 <= $i0 goto label4;

     label3:
        $z0 = specialinvoke r0.<android.database.CursorWrapper: boolean moveToPosition(int)>($i0);

        return $z0;

     label4:
        $i0 = $i0 + 1;

        goto label2;
    }
    public boolean moveToPrevious()
    {
        com.fsck.k9.cache.EmailProviderCacheCursor r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.fsck.k9.cache.EmailProviderCacheCursor;

        $i0 = virtualinvoke r0.<com.fsck.k9.cache.EmailProviderCacheCursor: int getPosition()>();

        $i0 = $i0 + -1;

        $z0 = virtualinvoke r0.<com.fsck.k9.cache.EmailProviderCacheCursor: boolean moveToPosition(int)>($i0);

        return $z0;
    }
