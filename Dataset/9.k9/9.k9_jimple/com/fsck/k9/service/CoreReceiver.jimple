com.fsck.k9.service.CoreReceiver extends android.content.BroadcastReceiver
public static final java.lang.String WAKE_LOCK_ID
public static final java.lang.String WAKE_LOCK_RELEASE
private static java.util.concurrent.atomic.AtomicInteger wakeLockSeq
private static java.util.concurrent.ConcurrentHashMap wakeLocks
    static void <clinit>()
    {
        java.util.concurrent.ConcurrentHashMap $r0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        $r0 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <com.fsck.k9.service.CoreReceiver: java.util.concurrent.ConcurrentHashMap wakeLocks> = $r0;

        $r1 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        <com.fsck.k9.service.CoreReceiver: java.util.concurrent.atomic.AtomicInteger wakeLockSeq> = $r1;

        return;
    }
    public void <init>()
    {
        com.fsck.k9.service.CoreReceiver r0;

        r0 := @this: com.fsck.k9.service.CoreReceiver;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }
    private static java.lang.Integer getWakeLock(android.content.Context)
    {
        android.content.Context $r0;
        com.fsck.k9.mail.power.TracingPowerManager $r1;
        com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock $r2;
        java.util.concurrent.atomic.AtomicInteger $r3;
        int $i0;
        java.lang.Integer $r4;
        java.util.concurrent.ConcurrentHashMap $r5;
        java.lang.Object[] $r6;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.fsck.k9.mail.power.TracingPowerManager: com.fsck.k9.mail.power.TracingPowerManager getPowerManager(android.content.Context)>($r0);

        $r2 = virtualinvoke $r1.<com.fsck.k9.mail.power.TracingPowerManager: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock newWakeLock(int,java.lang.String)>(1, "CoreReceiver getWakeLock");

        virtualinvoke $r2.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock: void setReferenceCounted(boolean)>(0);

        virtualinvoke $r2.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock: void acquire(long)>(60000L);

        $r3 = <com.fsck.k9.service.CoreReceiver: java.util.concurrent.atomic.AtomicInteger wakeLockSeq>;

        $i0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = <com.fsck.k9.service.CoreReceiver: java.util.concurrent.ConcurrentHashMap wakeLocks>;

        virtualinvoke $r5.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r2);

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = $r4;

        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("CoreReceiver Created wakeLock %d", $r6);

        return $r4;
    }
    public static void releaseWakeLock(android.content.Context, int)
    {
        android.content.Context $r0;
        int $i0;
        android.content.Intent r1;
        java.lang.Integer $r2;
        java.lang.Object[] $r3;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r3 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[0] = $r2;

        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("CoreReceiver Got request to release wakeLock %d", $r3);

        r1 = new android.content.Intent;

        specialinvoke r1.<android.content.Intent: void <init>()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>($r0, class "Lcom/fsck/k9/service/CoreReceiver;");

        virtualinvoke r1.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("com.fsck.k9.service.CoreReceiver.wakeLockRelease");

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("com.fsck.k9.service.CoreReceiver.wakeLockId", $i0);

        virtualinvoke $r0.<android.content.Context: void sendBroadcast(android.content.Intent)>(r1);

        return;
    }
    private static void releaseWakeLock(java.lang.Integer)
    {
        java.lang.Integer $r0;
        java.lang.Object $r1;
        java.util.concurrent.ConcurrentHashMap $r2;
        com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock r3;
        java.lang.Object[] $r4;

        $r0 := @parameter0: java.lang.Integer;

        if $r0 == null goto label2;

        $r2 = <com.fsck.k9.service.CoreReceiver: java.util.concurrent.ConcurrentHashMap wakeLocks>;

        $r1 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>($r0);

        r3 = (com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock) $r1;

        if r3 == null goto label1;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r0;

        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("CoreReceiver Releasing wakeLock %d", $r4);

        virtualinvoke r3.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock: void release()>();

        return;

     label1:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r0;

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("BootReceiver WakeLock %d doesn\'t exist", $r4);

     label2:
        return;
    }
    public void onReceive(android.content.Context, android.content.Intent)
    {
        com.fsck.k9.service.CoreReceiver r0;
        android.content.Context $r1;
        android.content.Intent $r2;
        java.lang.Integer $r3, r4, $r8;
        java.lang.Object[] $r5;
        java.lang.String $r6, $r7;
        boolean $z0;
        int $i0;
        java.lang.Throwable $r9;

        r0 := @this: com.fsck.k9.service.CoreReceiver;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.content.Intent;

        $r3 = staticinvoke <com.fsck.k9.service.CoreReceiver: java.lang.Integer getWakeLock(android.content.Context)>($r1);

        r4 = $r3;

     label01:
        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = $r2;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("CoreReceiver.onReceive %s", $r5);

     label02:
        $r6 = "com.fsck.k9.service.CoreReceiver.wakeLockRelease";

     label03:
        $r7 = virtualinvoke $r2.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

     label04:
        if $z0 == 0 goto label09;

     label05:
        $i0 = virtualinvoke $r2.<android.content.Intent: int getIntExtra(java.lang.String,int)>("com.fsck.k9.service.CoreReceiver.wakeLockId", -1);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i0 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

     label06:
        if $i0 == -1 goto label08;

     label07:
        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = $r8;

        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("CoreReceiver Release wakeLock %d", $r5);

        staticinvoke <com.fsck.k9.service.CoreReceiver: void releaseWakeLock(java.lang.Integer)>($r8);

     label08:
        staticinvoke <com.fsck.k9.service.CoreReceiver: void releaseWakeLock(java.lang.Integer)>(r4);

        return;

     label09:
        r4 = virtualinvoke r0.<com.fsck.k9.service.CoreReceiver: java.lang.Integer receive(android.content.Context,android.content.Intent,java.lang.Integer)>($r1, $r2, $r3);

     label10:
        goto label08;

     label11:
        $r9 := @caughtexception;

        staticinvoke <com.fsck.k9.service.CoreReceiver: void releaseWakeLock(java.lang.Integer)>($r3);

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }
    public java.lang.Integer receive(android.content.Context, android.content.Intent, java.lang.Integer)
    {
        com.fsck.k9.service.CoreReceiver r0;
        android.content.Context $r1;
        android.content.Intent $r2;
        java.lang.Integer $r3;

        r0 := @this: com.fsck.k9.service.CoreReceiver;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.content.Intent;

        $r3 := @parameter2: java.lang.Integer;

        return $r3;
    }
