com.fsck.k9.search.SqlQueryBuilder extends java.lang.Object
    public void <init>()
    {
        com.fsck.k9.search.SqlQueryBuilder r0;

        r0 := @this: com.fsck.k9.search.SqlQueryBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static java.lang.String addPrefixToSelection(java.lang.String[], java.lang.String, java.lang.String)
    {
        java.lang.String[] $r0;
        java.lang.String $r1, $r2, r3, $r5;
        int $i0, $i1;
        java.lang.StringBuilder $r4;

        $r0 := @parameter0: java.lang.String[];

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        r3 = $r0[$i1];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(?<=^|[^\\.])\\b");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\b");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>($r5, r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r2;
    }
    private static void appendCondition(com.fsck.k9.search.SearchSpecification$SearchCondition, java.lang.StringBuilder, java.util.List)
    {
        com.fsck.k9.search.SearchSpecification$SearchCondition $r0;
        java.lang.StringBuilder $r1;
        java.util.List r2;
        java.lang.String $r3;

        $r0 := @parameter0: com.fsck.k9.search.SearchSpecification$SearchCondition;

        $r1 := @parameter1: java.lang.StringBuilder;

        r2 := @parameter2: java.util.List;

        $r3 = staticinvoke <com.fsck.k9.search.SqlQueryBuilder: java.lang.String getColumnName(com.fsck.k9.search.SearchSpecification$SearchCondition)>($r0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        staticinvoke <com.fsck.k9.search.SqlQueryBuilder: void appendExprRight(com.fsck.k9.search.SearchSpecification$SearchCondition,java.lang.StringBuilder,java.util.List)>($r0, $r1, r2);

        return;
    }
    private static void appendExprRight(com.fsck.k9.search.SearchSpecification$SearchCondition, java.lang.StringBuilder, java.util.List)
    {
        com.fsck.k9.search.SearchSpecification$SearchCondition $r0;
        java.lang.StringBuilder $r1;
        java.util.List r2;
        com.fsck.k9.search.SearchSpecification$SearchField r3;
        java.lang.String r4, r5;
        int[] $r6;
        com.fsck.k9.search.SearchSpecification$Attribute $r7;
        int $i0;
        java.lang.RuntimeException $r8;
        boolean $z0;

        $r0 := @parameter0: com.fsck.k9.search.SearchSpecification$SearchCondition;

        $r1 := @parameter1: java.lang.StringBuilder;

        r2 := @parameter2: java.util.List;

        r4 = $r0.<com.fsck.k9.search.SearchSpecification$SearchCondition: java.lang.String value>;

        r3 = $r0.<com.fsck.k9.search.SearchSpecification$SearchCondition: com.fsck.k9.search.SearchSpecification$SearchField field>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r5 = null;

        $r6 = <com.fsck.k9.search.SqlQueryBuilder$1: int[] $SwitchMap$com$fsck$k9$search$SearchSpecification$Attribute>;

        $r7 = $r0.<com.fsck.k9.search.SearchSpecification$SearchCondition: com.fsck.k9.search.SearchSpecification$Attribute attribute>;

        $i0 = virtualinvoke $r7.<com.fsck.k9.search.SearchSpecification$Attribute: int ordinal()>();

        $i0 = $r6[$i0];

        lookupswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label08;
            case 8: goto label11;
            default: goto label01;
        };

     label01:
        if r5 != null goto label14;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unhandled case");

        throw $r8;

     label02:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NOT ");

     label03:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LIKE ?");

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%");

        r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label01;

     label04:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NOT ");

     label05:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LIKE ?");

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label01;

     label06:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NOT ");

     label07:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LIKE ?");

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%");

        r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label01;

     label08:
        $z0 = staticinvoke <com.fsck.k9.search.SqlQueryBuilder: boolean isNumberColumn(com.fsck.k9.search.SearchSpecification$SearchField)>(r3);

        if $z0 == 0 goto label10;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!= ?");

     label09:
        r5 = r4;

        goto label01;

     label10:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NOT LIKE ?");

        goto label09;

     label11:
        $z0 = staticinvoke <com.fsck.k9.search.SqlQueryBuilder: boolean isNumberColumn(com.fsck.k9.search.SearchSpecification$SearchField)>(r3);

        if $z0 == 0 goto label13;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("= ?");

     label12:
        r5 = r4;

        goto label01;

     label13:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LIKE ?");

        goto label12;

     label14:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r5);

        return;
    }
    public static void buildWhereClause(com.fsck.k9.Account, com.fsck.k9.search.ConditionsTreeNode, java.lang.StringBuilder, java.util.List)
    {
        com.fsck.k9.Account $r0;
        com.fsck.k9.search.ConditionsTreeNode $r1;
        java.lang.StringBuilder $r2;
        java.util.List r3;

        $r0 := @parameter0: com.fsck.k9.Account;

        $r1 := @parameter1: com.fsck.k9.search.ConditionsTreeNode;

        $r2 := @parameter2: java.lang.StringBuilder;

        r3 := @parameter3: java.util.List;

        staticinvoke <com.fsck.k9.search.SqlQueryBuilder: void buildWhereClauseInternal(com.fsck.k9.Account,com.fsck.k9.search.ConditionsTreeNode,java.lang.StringBuilder,java.util.List)>($r0, $r1, $r2, r3);

        return;
    }
    private static void buildWhereClauseInternal(com.fsck.k9.Account, com.fsck.k9.search.ConditionsTreeNode, java.lang.StringBuilder, java.util.List)
    {
        com.fsck.k9.Account $r0;
        com.fsck.k9.search.ConditionsTreeNode $r1, $r6;
        java.lang.StringBuilder $r2;
        java.util.List r3;
        com.fsck.k9.search.SearchSpecification$SearchCondition r4;
        java.lang.String r5;
        int[] $r7;
        com.fsck.k9.search.SearchSpecification$SearchField $r8;
        int $i0;
        long $l1;
        com.fsck.k9.search.SearchSpecification$Attribute $r9, $r10;
        com.fsck.k9.Account$Searchable $r11;
        com.fsck.k9.search.LocalSearch r12;
        java.lang.Object[] $r13;
        com.fsck.k9.search.ConditionsTreeNode$Operator $r14;

        $r0 := @parameter0: com.fsck.k9.Account;

        $r1 := @parameter1: com.fsck.k9.search.ConditionsTreeNode;

        $r2 := @parameter2: java.lang.StringBuilder;

        r3 := @parameter3: java.util.List;

        if $r1 != null goto label01;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("1");

        return;

     label01:
        $r6 = $r1.<com.fsck.k9.search.ConditionsTreeNode: com.fsck.k9.search.ConditionsTreeNode mLeft>;

        if $r6 != null goto label13;

        $r6 = $r1.<com.fsck.k9.search.ConditionsTreeNode: com.fsck.k9.search.ConditionsTreeNode mRight>;

        if $r6 != null goto label13;

        r4 = $r1.<com.fsck.k9.search.ConditionsTreeNode: com.fsck.k9.search.SearchSpecification$SearchCondition mCondition>;

        $r7 = <com.fsck.k9.search.SqlQueryBuilder$1: int[] $SwitchMap$com$fsck$k9$search$SearchSpecification$SearchField>;

        $r8 = r4.<com.fsck.k9.search.SearchSpecification$SearchCondition: com.fsck.k9.search.SearchSpecification$SearchField field>;

        $i0 = virtualinvoke $r8.<com.fsck.k9.search.SearchSpecification$SearchField: int ordinal()>();

        $i0 = $r7[$i0];

        lookupswitch($i0)
        {
            case 1: goto label03;
            case 2: goto label06;
            case 3: goto label11;
            default: goto label02;
        };

     label02:
        staticinvoke <com.fsck.k9.search.SqlQueryBuilder: void appendCondition(com.fsck.k9.search.SearchSpecification$SearchCondition,java.lang.StringBuilder,java.util.List)>(r4, $r2, r3);

        return;

     label03:
        r5 = r4.<com.fsck.k9.search.SearchSpecification$SearchCondition: java.lang.String value>;

        $l1 = staticinvoke <com.fsck.k9.search.SqlQueryBuilder: long getFolderId(com.fsck.k9.Account,java.lang.String)>($r0, r5);

        $r9 = r4.<com.fsck.k9.search.SearchSpecification$SearchCondition: com.fsck.k9.search.SearchSpecification$Attribute attribute>;

        $r10 = <com.fsck.k9.search.SearchSpecification$Attribute: com.fsck.k9.search.SearchSpecification$Attribute EQUALS>;

        if $r9 != $r10 goto label05;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("folder_id = ?");

     label04:
        r5 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r5);

        return;

     label05:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("folder_id != ?");

        goto label04;

     label06:
        $r7 = <com.fsck.k9.search.SqlQueryBuilder$1: int[] $SwitchMap$com$fsck$k9$Account$Searchable>;

        $r11 = virtualinvoke $r0.<com.fsck.k9.Account: com.fsck.k9.Account$Searchable getSearchableFolders()>();

        $i0 = virtualinvoke $r11.<com.fsck.k9.Account$Searchable: int ordinal()>();

        $i0 = $r7[$i0];

        lookupswitch($i0)
        {
            case 1: goto label08;
            case 2: goto label09;
            case 3: goto label10;
            default: goto label07;
        };

     label07:
        return;

     label08:
        r12 = new com.fsck.k9.search.LocalSearch;

        specialinvoke r12.<com.fsck.k9.search.LocalSearch: void <init>()>();

        virtualinvoke $r0.<com.fsck.k9.Account: void excludeUnwantedFolders(com.fsck.k9.search.LocalSearch)>(r12);

        $r1 = virtualinvoke r12.<com.fsck.k9.search.LocalSearch: com.fsck.k9.search.ConditionsTreeNode getConditions()>();

        staticinvoke <com.fsck.k9.search.SqlQueryBuilder: void buildWhereClauseInternal(com.fsck.k9.Account,com.fsck.k9.search.ConditionsTreeNode,java.lang.StringBuilder,java.util.List)>($r0, $r1, $r2, r3);

        return;

     label09:
        r12 = new com.fsck.k9.search.LocalSearch;

        specialinvoke r12.<com.fsck.k9.search.LocalSearch: void <init>()>();

        virtualinvoke $r0.<com.fsck.k9.Account: void excludeSpecialFolders(com.fsck.k9.search.LocalSearch)>(r12);

        virtualinvoke $r0.<com.fsck.k9.Account: void limitToDisplayableFolders(com.fsck.k9.search.LocalSearch)>(r12);

        $r1 = virtualinvoke r12.<com.fsck.k9.search.LocalSearch: com.fsck.k9.search.ConditionsTreeNode getConditions()>();

        staticinvoke <com.fsck.k9.search.SqlQueryBuilder: void buildWhereClauseInternal(com.fsck.k9.Account,com.fsck.k9.search.ConditionsTreeNode,java.lang.StringBuilder,java.util.List)>($r0, $r1, $r2, r3);

        return;

     label10:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        return;

     label11:
        r5 = r4.<com.fsck.k9.search.SearchSpecification$SearchCondition: java.lang.String value>;

        $r9 = r4.<com.fsck.k9.search.SearchSpecification$SearchCondition: com.fsck.k9.search.SearchSpecification$Attribute attribute>;

        $r10 = <com.fsck.k9.search.SearchSpecification$Attribute: com.fsck.k9.search.SearchSpecification$Attribute CONTAINS>;

        if $r9 == $r10 goto label12;

        $r13 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.String,java.lang.Object[])>("message contents can only be matched!", $r13);

     label12:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("m.id IN (SELECT docid FROM messages_fulltext WHERE fulltext MATCH ?)");

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r5);

        return;

     label13:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r6 = $r1.<com.fsck.k9.search.ConditionsTreeNode: com.fsck.k9.search.ConditionsTreeNode mLeft>;

        staticinvoke <com.fsck.k9.search.SqlQueryBuilder: void buildWhereClauseInternal(com.fsck.k9.Account,com.fsck.k9.search.ConditionsTreeNode,java.lang.StringBuilder,java.util.List)>($r0, $r6, $r2, r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r14 = $r1.<com.fsck.k9.search.ConditionsTreeNode: com.fsck.k9.search.ConditionsTreeNode$Operator mValue>;

        r5 = virtualinvoke $r14.<com.fsck.k9.search.ConditionsTreeNode$Operator: java.lang.String name()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r1 = $r1.<com.fsck.k9.search.ConditionsTreeNode: com.fsck.k9.search.ConditionsTreeNode mRight>;

        staticinvoke <com.fsck.k9.search.SqlQueryBuilder: void buildWhereClauseInternal(com.fsck.k9.Account,com.fsck.k9.search.ConditionsTreeNode,java.lang.StringBuilder,java.util.List)>($r0, $r1, $r2, r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        return;
    }
    private static java.lang.String getColumnName(com.fsck.k9.search.SearchSpecification$SearchCondition)
    {
        com.fsck.k9.search.SearchSpecification$SearchCondition $r0;
        int $i0;
        java.lang.String r1;
        int[] $r2;
        com.fsck.k9.search.SearchSpecification$SearchField $r3;
        java.lang.RuntimeException $r4;

        $r0 := @parameter0: com.fsck.k9.search.SearchSpecification$SearchCondition;

        r1 = null;

        $r2 = <com.fsck.k9.search.SqlQueryBuilder$1: int[] $SwitchMap$com$fsck$k9$search$SearchSpecification$SearchField>;

        $r3 = $r0.<com.fsck.k9.search.SearchSpecification$SearchCondition: com.fsck.k9.search.SearchSpecification$SearchField field>;

        $i0 = virtualinvoke $r3.<com.fsck.k9.search.SearchSpecification$SearchField: int ordinal()>();

        $i0 = $r2[$i0];

        lookupswitch($i0)
        {
            case 4: goto label02;
            case 5: goto label03;
            case 6: goto label04;
            case 7: goto label05;
            case 8: goto label06;
            case 9: goto label07;
            case 10: goto label08;
            case 11: goto label09;
            case 12: goto label10;
            case 13: goto label11;
            case 14: goto label12;
            case 15: goto label13;
            case 16: goto label14;
            case 17: goto label15;
            case 18: goto label16;
            case 19: goto label17;
            case 20: goto label18;
            default: goto label01;
        };

     label01:
        if r1 != null goto label19;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unhandled case");

        throw $r4;

     label02:
        r1 = "attachment_count";

        goto label01;

     label03:
        r1 = "bcc_list";

        goto label01;

     label04:
        r1 = "cc_list";

        goto label01;

     label05:
        r1 = "date";

        goto label01;

     label06:
        r1 = "deleted";

        goto label01;

     label07:
        r1 = "flags";

        goto label01;

     label08:
        r1 = "id";

        goto label01;

     label09:
        r1 = "reply_to_list";

        goto label01;

     label10:
        r1 = "sender_list";

        goto label01;

     label11:
        r1 = "subject";

        goto label01;

     label12:
        r1 = "to_list";

        goto label01;

     label13:
        r1 = "uid";

        goto label01;

     label14:
        r1 = "integrate";

        goto label01;

     label15:
        r1 = "read";

        goto label01;

     label16:
        r1 = "flagged";

        goto label01;

     label17:
        r1 = "display_class";

        goto label01;

     label18:
        r1 = "threads.root";

        goto label01;

     label19:
        return r1;
    }
    private static long getFolderId(com.fsck.k9.Account, java.lang.String)
    {
        com.fsck.k9.Account $r0;
        java.lang.String $r1;
        com.fsck.k9.mail.MessagingException r2;
        com.fsck.k9.mailstore.LocalStore $r3;
        com.fsck.k9.mailstore.LocalFolder $r4;
        long $l0;

        $r0 := @parameter0: com.fsck.k9.Account;

        $r1 := @parameter1: java.lang.String;

     label1:
        $r3 = virtualinvoke $r0.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

        $r4 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LocalFolder getFolder(java.lang.String)>($r1);

        virtualinvoke $r4.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(1);

        $l0 = virtualinvoke $r4.<com.fsck.k9.mailstore.LocalFolder: long getDatabaseId()>();

     label2:
        return $l0;

     label3:
        r2 := @caughtexception;

        virtualinvoke r2.<com.fsck.k9.mail.MessagingException: void printStackTrace()>();

        return 0L;

        catch com.fsck.k9.mail.MessagingException from label1 to label2 with label3;
    }
    private static boolean isNumberColumn(com.fsck.k9.search.SearchSpecification$SearchField)
    {
        com.fsck.k9.search.SearchSpecification$SearchField $r0;
        int $i0;
        int[] $r1;

        $r0 := @parameter0: com.fsck.k9.search.SearchSpecification$SearchField;

        $r1 = <com.fsck.k9.search.SqlQueryBuilder$1: int[] $SwitchMap$com$fsck$k9$search$SearchSpecification$SearchField>;

        $i0 = virtualinvoke $r0.<com.fsck.k9.search.SearchSpecification$SearchField: int ordinal()>();

        $i0 = $r1[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label1;
            case 6: goto label1;
            case 7: goto label2;
            case 8: goto label2;
            case 9: goto label1;
            case 10: goto label2;
            case 11: goto label1;
            case 12: goto label1;
            case 13: goto label1;
            case 14: goto label1;
            case 15: goto label1;
            case 16: goto label2;
            case 17: goto label2;
            case 18: goto label2;
            case 19: goto label1;
            case 20: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 1;
    }
