com.fsck.k9.mail.ssl.LocalKeyStore extends java.lang.Object
private static final int KEY_STORE_FILE_VERSION
private static java.lang.String sKeyStoreLocation
private java.security.KeyStore mKeyStore
private java.io.File mKeyStoreFile
    private void <init>()
    {
        com.fsck.k9.mail.ssl.LocalKeyStore r0;
        java.security.cert.CertificateException r1;
        java.lang.Object[] $r2;

        r0 := @this: com.fsck.k9.mail.ssl.LocalKeyStore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

     label1:
        specialinvoke r0.<com.fsck.k9.mail.ssl.LocalKeyStore: void upgradeKeyStoreFile()>();

        virtualinvoke r0.<com.fsck.k9.mail.ssl.LocalKeyStore: void setKeyStoreFile(java.io.File)>(null);

     label2:
        return;

     label3:
        r1 := @caughtexception;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Local key store has not been initialized", $r2);

        return;

        catch java.security.cert.CertificateException from label1 to label2 with label3;
    }
    void <init>(com.fsck.k9.mail.ssl.LocalKeyStore$1)
    {
        com.fsck.k9.mail.ssl.LocalKeyStore r0;
        com.fsck.k9.mail.ssl.LocalKeyStore$1 $r1;

        r0 := @this: com.fsck.k9.mail.ssl.LocalKeyStore;

        $r1 := @parameter0: com.fsck.k9.mail.ssl.LocalKeyStore$1;

        specialinvoke r0.<com.fsck.k9.mail.ssl.LocalKeyStore: void <init>()>();

        return;
    }
    private static java.lang.String getCertKey(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0;
        java.lang.StringBuilder $r1;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }
    public static com.fsck.k9.mail.ssl.LocalKeyStore getInstance()
    {
        com.fsck.k9.mail.ssl.LocalKeyStore r0;

        r0 = <com.fsck.k9.mail.ssl.LocalKeyStore$LocalKeyStoreHolder: com.fsck.k9.mail.ssl.LocalKeyStore INSTANCE>;

        return r0;
    }
    private java.lang.String getKeyStoreFilePath(int) throws java.security.cert.CertificateException
    {
        com.fsck.k9.mail.ssl.LocalKeyStore r0;
        int $i0;
        java.lang.String $r1;
        java.security.cert.CertificateException $r2;
        java.lang.StringBuilder $r3;

        r0 := @this: com.fsck.k9.mail.ssl.LocalKeyStore;

        $i0 := @parameter0: int;

        $r1 = <com.fsck.k9.mail.ssl.LocalKeyStore: java.lang.String sKeyStoreLocation>;

        if $r1 != null goto label1;

        $r2 = new java.security.cert.CertificateException;

        specialinvoke $r2.<java.security.cert.CertificateException: void <init>(java.lang.String)>("Local key store location has not been initialized");

        throw $r2;

     label1:
        if $i0 >= 1 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r1 = <com.fsck.k9.mail.ssl.LocalKeyStore: java.lang.String sKeyStoreLocation>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = <java.io.File: java.lang.String separator>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("KeyStore.bks");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r1 = <com.fsck.k9.mail.ssl.LocalKeyStore: java.lang.String sKeyStoreLocation>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = <java.io.File: java.lang.String separator>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("KeyStore_v");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".bks");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
    public static void setKeyStoreLocation(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        <com.fsck.k9.mail.ssl.LocalKeyStore: java.lang.String sKeyStoreLocation> = $r0;

        return;
    }
    private void upgradeKeyStoreFile() throws java.security.cert.CertificateException
    {
        com.fsck.k9.mail.ssl.LocalKeyStore r0;
        java.io.File r1;
        java.lang.String $r2;
        boolean $z0;
        java.lang.Object[] $r3;

        r0 := @this: com.fsck.k9.mail.ssl.LocalKeyStore;

        r1 = new java.io.File;

        $r2 = specialinvoke r0.<com.fsck.k9.mail.ssl.LocalKeyStore: java.lang.String getKeyStoreFilePath(int)>(0);

        specialinvoke r1.<java.io.File: void <init>(java.lang.String)>($r2);

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke r1.<java.io.File: boolean delete()>();

        if $z0 != 0 goto label1;

        $r3 = newarray (java.lang.Object)[1];

        $r2 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $r3[0] = $r2;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Failed to delete old key-store file: %s", $r3);

     label1:
        return;
    }
    private void writeCertificateFile() throws java.security.cert.CertificateException
    {
        com.fsck.k9.mail.ssl.LocalKeyStore r0;
        java.io.FileOutputStream r1, r2;
        java.io.File $r3;
        java.security.KeyStore $r4;
        java.lang.String $r5;
        char[] $r6;
        java.io.FileNotFoundException r7;
        java.security.cert.CertificateException $r8, r11;
        java.lang.StringBuilder $r9;
        java.lang.Throwable $r10;
        java.io.IOException r12;
        java.security.NoSuchAlgorithmException r13;
        java.security.KeyStoreException r14;

        r0 := @this: com.fsck.k9.mail.ssl.LocalKeyStore;

        r2 = null;

     label01:
        r1 = new java.io.FileOutputStream;

        $r3 = r0.<com.fsck.k9.mail.ssl.LocalKeyStore: java.io.File mKeyStoreFile>;

     label02:
        specialinvoke r1.<java.io.FileOutputStream: void <init>(java.io.File)>($r3);

     label03:
        $r4 = r0.<com.fsck.k9.mail.ssl.LocalKeyStore: java.security.KeyStore mKeyStore>;

     label04:
        $r5 = "";

     label05:
        $r6 = virtualinvoke $r5.<java.lang.String: char[] toCharArray()>();

        virtualinvoke $r4.<java.security.KeyStore: void store(java.io.OutputStream,char[])>(r1, $r6);

     label06:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>(r1);

        return;

     label07:
        r7 := @caughtexception;

     label08:
        $r8 = new java.security.cert.CertificateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to write KeyStore: ");

        $r5 = virtualinvoke r7.<java.io.FileNotFoundException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.security.cert.CertificateException: void <init>(java.lang.String)>($r5);

        throw $r8;

     label09:
        $r10 := @caughtexception;

     label10:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>(r2);

        throw $r10;

     label11:
        r11 := @caughtexception;

     label12:
        $r8 = new java.security.cert.CertificateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to write KeyStore: ");

        $r5 = virtualinvoke r11.<java.security.cert.CertificateException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.security.cert.CertificateException: void <init>(java.lang.String)>($r5);

        throw $r8;

     label13:
        r12 := @caughtexception;

     label14:
        $r8 = new java.security.cert.CertificateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to write KeyStore: ");

        $r5 = virtualinvoke r12.<java.io.IOException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.security.cert.CertificateException: void <init>(java.lang.String)>($r5);

        throw $r8;

     label15:
        r13 := @caughtexception;

     label16:
        $r8 = new java.security.cert.CertificateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to write KeyStore: ");

        $r5 = virtualinvoke r13.<java.security.NoSuchAlgorithmException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.security.cert.CertificateException: void <init>(java.lang.String)>($r5);

        throw $r8;

     label17:
        r14 := @caughtexception;

     label18:
        $r8 = new java.security.cert.CertificateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to write KeyStore: ");

        $r5 = virtualinvoke r14.<java.security.KeyStoreException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.security.cert.CertificateException: void <init>(java.lang.String)>($r5);

        throw $r8;

     label19:
        $r10 := @caughtexception;

        r2 = r1;

        goto label10;

     label20:
        r14 := @caughtexception;

        r2 = r1;

        goto label18;

     label21:
        r13 := @caughtexception;

        r2 = r1;

        goto label16;

     label22:
        r12 := @caughtexception;

        r2 = r1;

        goto label14;

     label23:
        r11 := @caughtexception;

        r2 = r1;

        goto label12;

     label24:
        r7 := @caughtexception;

        r2 = r1;

        goto label08;

        catch java.io.FileNotFoundException from label02 to label03 with label07;
        catch java.security.cert.CertificateException from label02 to label03 with label11;
        catch java.io.IOException from label02 to label03 with label13;
        catch java.security.NoSuchAlgorithmException from label02 to label03 with label15;
        catch java.security.KeyStoreException from label02 to label03 with label17;
        catch java.lang.Throwable from label01 to label03 with label09;
        catch java.io.FileNotFoundException from label05 to label06 with label24;
        catch java.security.cert.CertificateException from label05 to label06 with label23;
        catch java.io.IOException from label05 to label06 with label22;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label21;
        catch java.security.KeyStoreException from label05 to label06 with label20;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label12 to label13 with label09;
        catch java.lang.Throwable from label14 to label15 with label09;
        catch java.lang.Throwable from label16 to label17 with label09;
        catch java.lang.Throwable from label18 to label19 with label09;
    }
    public void addCertificate(java.lang.String, int, java.security.cert.X509Certificate) throws java.security.cert.CertificateException
    {
        com.fsck.k9.mail.ssl.LocalKeyStore r0;
        java.lang.String $r1;
        int $i0;
        java.security.cert.X509Certificate $r2;
        java.security.KeyStoreException r3;
        java.security.KeyStore $r4;
        java.security.cert.CertificateException $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.fsck.k9.mail.ssl.LocalKeyStore;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.security.cert.X509Certificate;

        entermonitor r0;

     label1:
        $r4 = r0.<com.fsck.k9.mail.ssl.LocalKeyStore: java.security.KeyStore mKeyStore>;

        if $r4 != null goto label3;

        $r5 = new java.security.cert.CertificateException;

        specialinvoke $r5.<java.security.cert.CertificateException: void <init>(java.lang.String)>("Certificate not added because key store not initialized");

        throw $r5;

     label2:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

     label3:
        $r4 = r0.<com.fsck.k9.mail.ssl.LocalKeyStore: java.security.KeyStore mKeyStore>;

     label4:
        $r1 = staticinvoke <com.fsck.k9.mail.ssl.LocalKeyStore: java.lang.String getCertKey(java.lang.String,int)>($r1, $i0);

        virtualinvoke $r4.<java.security.KeyStore: void setCertificateEntry(java.lang.String,java.security.cert.Certificate)>($r1, $r2);

     label5:
        specialinvoke r0.<com.fsck.k9.mail.ssl.LocalKeyStore: void writeCertificateFile()>();

     label6:
        exitmonitor r0;

        return;

     label7:
        r3 := @caughtexception;

     label8:
        $r5 = new java.security.cert.CertificateException;

        specialinvoke $r5.<java.security.cert.CertificateException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to add certificate to local key store", r3);

        throw $r5;

     label9:
        nop;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.security.KeyStoreException from label4 to label5 with label7;
        catch java.lang.Throwable from label3 to label5 with label2;
        catch java.lang.Throwable from label5 to label6 with label2;
        catch java.lang.Throwable from label8 to label9 with label2;
    }
    public void deleteCertificate(java.lang.String, int)
    {
        com.fsck.k9.mail.ssl.LocalKeyStore r0;
        java.lang.String $r1;
        int $i0;
        java.security.cert.CertificateException r2;
        java.security.KeyStore $r3;
        java.security.KeyStoreException $r4;
        java.lang.Object[] $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.fsck.k9.mail.ssl.LocalKeyStore;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        entermonitor r0;

     label01:
        $r3 = r0.<com.fsck.k9.mail.ssl.LocalKeyStore: java.security.KeyStore mKeyStore>;

     label02:
        if $r3 != null goto label04;

     label03:
        exitmonitor r0;

        return;

     label04:
        $r3 = r0.<com.fsck.k9.mail.ssl.LocalKeyStore: java.security.KeyStore mKeyStore>;

     label05:
        $r1 = staticinvoke <com.fsck.k9.mail.ssl.LocalKeyStore: java.lang.String getCertKey(java.lang.String,int)>($r1, $i0);

        virtualinvoke $r3.<java.security.KeyStore: void deleteEntry(java.lang.String)>($r1);

        specialinvoke r0.<com.fsck.k9.mail.ssl.LocalKeyStore: void writeCertificateFile()>();

     label06:
        goto label03;

     label07:
        $r4 := @caughtexception;

        goto label03;

     label08:
        r2 := @caughtexception;

     label09:
        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r2, "Error updating the local key store file", $r5);

     label10:
        goto label03;

     label11:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.security.KeyStoreException from label05 to label06 with label07;
        catch java.security.cert.CertificateException from label05 to label06 with label08;
        catch java.lang.Throwable from label04 to label06 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }
    public boolean isValidCertificate(java.security.cert.Certificate, java.lang.String, int)
    {
        com.fsck.k9.mail.ssl.LocalKeyStore r0;
        java.security.cert.Certificate $r1, $r5;
        java.lang.String $r2;
        int $i0;
        java.security.KeyStoreException r3;
        boolean $z0, $z1;
        java.security.KeyStore $r4;
        java.lang.Throwable $r6;

        r0 := @this: com.fsck.k9.mail.ssl.LocalKeyStore;

        $r1 := @parameter0: java.security.cert.Certificate;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $z0 = 0;

        entermonitor r0;

     label01:
        $r4 = r0.<com.fsck.k9.mail.ssl.LocalKeyStore: java.security.KeyStore mKeyStore>;

     label02:
        if $r4 != null goto label04;

     label03:
        exitmonitor r0;

        return $z0;

     label04:
        $r4 = r0.<com.fsck.k9.mail.ssl.LocalKeyStore: java.security.KeyStore mKeyStore>;

     label05:
        $r2 = staticinvoke <com.fsck.k9.mail.ssl.LocalKeyStore: java.lang.String getCertKey(java.lang.String,int)>($r2, $i0);

        $r5 = virtualinvoke $r4.<java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)>($r2);

     label06:
        if $r5 == null goto label03;

     label07:
        $z1 = virtualinvoke $r5.<java.security.cert.Certificate: boolean equals(java.lang.Object)>($r1);

     label08:
        if $z1 == 0 goto label03;

        $z0 = 1;

        goto label03;

     label09:
        r3 := @caughtexception;

        goto label03;

     label10:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.security.KeyStoreException from label05 to label06 with label09;
        catch java.security.KeyStoreException from label07 to label08 with label09;
        catch java.lang.Throwable from label04 to label08 with label10;
    }
    public void setKeyStoreFile(java.io.File) throws java.security.cert.CertificateException
    {
        com.fsck.k9.mail.ssl.LocalKeyStore r0;
        java.lang.Exception r1;
        java.io.File r2;
        java.io.FileInputStream r3, r6;
        java.lang.String $r4;
        long $l0;
        byte $b1;
        boolean $z0;
        java.lang.Object[] $r5;
        java.security.KeyStore $r7;
        char[] $r8;
        java.lang.Throwable $r9, $r10;
        java.io.FileNotFoundException $r11;

        r0 := @this: com.fsck.k9.mail.ssl.LocalKeyStore;

        r2 := @parameter0: java.io.File;

        entermonitor r0;

        if r2 != null goto label02;

     label01:
        r2 = new java.io.File;

        $r4 = specialinvoke r0.<com.fsck.k9.mail.ssl.LocalKeyStore: java.lang.String getKeyStoreFilePath(int)>(1);

        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r4);

     label02:
        $l0 = virtualinvoke r2.<java.io.File: long length()>();

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label03;

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label03;

        $z0 = virtualinvoke r2.<java.io.File: boolean delete()>();

        if $z0 != 0 goto label03;

        $r5 = newarray (java.lang.Object)[1];

        $r4 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r5[0] = $r4;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Failed to delete empty keystore file: %s", $r5);

     label03:
        r6 = null;

     label04:
        r3 = new java.io.FileInputStream;

     label05:
        specialinvoke r3.<java.io.FileInputStream: void <init>(java.io.File)>(r2);

     label06:
        r6 = r3;

     label07:
        $r4 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();

        $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r4);

     label08:
        $r4 = "";

     label09:
        $r8 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();

        virtualinvoke $r7.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r6, $r8);

        r0.<com.fsck.k9.mail.ssl.LocalKeyStore: java.security.KeyStore mKeyStore> = $r7;

        r0.<com.fsck.k9.mail.ssl.LocalKeyStore: java.io.File mKeyStoreFile> = r2;

     label10:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r6);

     label11:
        exitmonitor r0;

        return;

     label12:
        r1 := @caughtexception;

     label13:
        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r1, "Failed to initialize local key store", $r5);

        r0.<com.fsck.k9.mail.ssl.LocalKeyStore: java.security.KeyStore mKeyStore> = null;

        r0.<com.fsck.k9.mail.ssl.LocalKeyStore: java.io.File mKeyStoreFile> = null;

     label14:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r6);

     label15:
        goto label11;

     label16:
        $r9 := @caughtexception;

        exitmonitor r0;

        throw $r9;

     label17:
        $r10 := @caughtexception;

     label18:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r6);

        throw $r10;

     label19:
        $r11 := @caughtexception;

        goto label07;

        catch java.lang.Throwable from label01 to label03 with label16;
        catch java.io.FileNotFoundException from label05 to label06 with label19;
        catch java.lang.Throwable from label04 to label06 with label16;
        catch java.lang.Exception from label07 to label08 with label12;
        catch java.lang.Exception from label09 to label10 with label12;
        catch java.lang.Throwable from label07 to label10 with label17;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label18 to label19 with label16;
    }
