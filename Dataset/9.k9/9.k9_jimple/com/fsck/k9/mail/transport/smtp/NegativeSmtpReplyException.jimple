com.fsck.k9.mail.transport.smtp.NegativeSmtpReplyException extends com.fsck.k9.mail.MessagingException
private static final long serialVersionUID
private final int replyCode
private final java.lang.String replyText
    public void <init>(int, java.lang.String)
    {
        com.fsck.k9.mail.transport.smtp.NegativeSmtpReplyException r0;
        int $i0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: com.fsck.k9.mail.transport.smtp.NegativeSmtpReplyException;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.fsck.k9.mail.transport.smtp.NegativeSmtpReplyException: java.lang.String buildErrorMessage(int,java.lang.String)>($i0, $r1);

        $z0 = staticinvoke <com.fsck.k9.mail.transport.smtp.NegativeSmtpReplyException: boolean isPermanentSmtpError(int)>($i0);

        specialinvoke r0.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String,boolean)>($r2, $z0);

        r0.<com.fsck.k9.mail.transport.smtp.NegativeSmtpReplyException: int replyCode> = $i0;

        r0.<com.fsck.k9.mail.transport.smtp.NegativeSmtpReplyException: java.lang.String replyText> = $r1;

        return;
    }
    private static java.lang.String buildErrorMessage(int, java.lang.String)
    {
        int $i0;
        java.lang.String $r0;
        boolean $z0;
        java.lang.StringBuilder $r1;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Negative SMTP reply: ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        return $r0;
    }
    private static boolean isPermanentSmtpError(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 < 500 goto label1;

        if $i0 > 599 goto label1;

        return 1;

     label1:
        return 0;
    }
    public int getReplyCode()
    {
        com.fsck.k9.mail.transport.smtp.NegativeSmtpReplyException r0;
        int i0;

        r0 := @this: com.fsck.k9.mail.transport.smtp.NegativeSmtpReplyException;

        i0 = r0.<com.fsck.k9.mail.transport.smtp.NegativeSmtpReplyException: int replyCode>;

        return i0;
    }
    public java.lang.String getReplyText()
    {
        com.fsck.k9.mail.transport.smtp.NegativeSmtpReplyException r0;
        java.lang.String r1;

        r0 := @this: com.fsck.k9.mail.transport.smtp.NegativeSmtpReplyException;

        r1 = r0.<com.fsck.k9.mail.transport.smtp.NegativeSmtpReplyException: java.lang.String replyText>;

        return r1;
    }
