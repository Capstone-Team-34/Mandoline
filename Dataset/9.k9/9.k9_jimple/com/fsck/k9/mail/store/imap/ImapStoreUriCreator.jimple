com.fsck.k9.mail.store.imap.ImapStoreUriCreator extends java.lang.Object
    void <init>()
    {
        com.fsck.k9.mail.store.imap.ImapStoreUriCreator r0;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapStoreUriCreator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static java.lang.String create(com.fsck.k9.mail.ServerSettings)
    {
        com.fsck.k9.mail.ServerSettings $r0;
        int $i0;
        com.fsck.k9.mail.AuthType r1, $r9;
        java.net.URISyntaxException r2;
        java.lang.String $r3, $r4, r5, r6;
        int[] $r7;
        com.fsck.k9.mail.ConnectionSecurity $r8;
        java.lang.StringBuilder $r10;
        java.util.Map $r11;
        java.lang.Boolean $r12;
        java.lang.Object $r13;
        boolean $z0;
        java.net.URI $r14;
        java.lang.IllegalArgumentException $r15;

        $r0 := @parameter0: com.fsck.k9.mail.ServerSettings;

        $r3 = $r0.<com.fsck.k9.mail.ServerSettings: java.lang.String username>;

        $r4 = staticinvoke <com.fsck.k9.mail.helper.UrlEncodingHelper: java.lang.String encodeUtf8(java.lang.String)>($r3);

        $r3 = $r0.<com.fsck.k9.mail.ServerSettings: java.lang.String password>;

        if $r3 == null goto label18;

        $r3 = $r0.<com.fsck.k9.mail.ServerSettings: java.lang.String password>;

        r5 = staticinvoke <com.fsck.k9.mail.helper.UrlEncodingHelper: java.lang.String encodeUtf8(java.lang.String)>($r3);

     label01:
        $r3 = $r0.<com.fsck.k9.mail.ServerSettings: java.lang.String clientCertificateAlias>;

        if $r3 == null goto label19;

        $r3 = $r0.<com.fsck.k9.mail.ServerSettings: java.lang.String clientCertificateAlias>;

        r6 = staticinvoke <com.fsck.k9.mail.helper.UrlEncodingHelper: java.lang.String encodeUtf8(java.lang.String)>($r3);

     label02:
        $r7 = <com.fsck.k9.mail.store.imap.ImapStoreUriCreator$1: int[] $SwitchMap$com$fsck$k9$mail$ConnectionSecurity>;

        $r8 = $r0.<com.fsck.k9.mail.ServerSettings: com.fsck.k9.mail.ConnectionSecurity connectionSecurity>;

        $i0 = virtualinvoke $r8.<com.fsck.k9.mail.ConnectionSecurity: int ordinal()>();

        $i0 = $r7[$i0];

        lookupswitch($i0)
        {
            case 1: goto label20;
            case 2: goto label21;
            default: goto label03;
        };

     label03:
        $r3 = "imap";

     label04:
        r1 = $r0.<com.fsck.k9.mail.ServerSettings: com.fsck.k9.mail.AuthType authenticationType>;

        $r9 = <com.fsck.k9.mail.AuthType: com.fsck.k9.mail.AuthType EXTERNAL>;

        if r1 != $r9 goto label22;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        r5 = virtualinvoke r1.<com.fsck.k9.mail.AuthType: java.lang.String name()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r4 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label05:
        $r11 = virtualinvoke $r0.<com.fsck.k9.mail.ServerSettings: java.util.Map getExtra()>();

     label06:
        if $r11 == null goto label26;

        $r12 = <java.lang.Boolean: java.lang.Boolean TRUE>;

     label07:
        r5 = virtualinvoke $r12.<java.lang.Boolean: java.lang.String toString()>();

        $r13 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>("autoDetectNamespace");

        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r13);

     label08:
        if $z0 == 0 goto label23;

        r5 = null;

     label09:
        $r10 = new java.lang.StringBuilder;

     label10:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

     label11:
        if $z0 == 0 goto label25;

        r6 = "1";

     label12:
        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

     label13:
        if r5 != null goto label14;

        r5 = "";

     label14:
        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label15:
        $r14 = new java.net.URI;

        r6 = $r0.<com.fsck.k9.mail.ServerSettings: java.lang.String host>;

        $i0 = $r0.<com.fsck.k9.mail.ServerSettings: int port>;

     label16:
        specialinvoke $r14.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>($r3, $r4, r6, $i0, r5, null, null);

        $r3 = virtualinvoke $r14.<java.net.URI: java.lang.String toString()>();

     label17:
        return $r3;

     label18:
        r5 = "";

        goto label01;

     label19:
        r6 = "";

        goto label02;

     label20:
        $r3 = "imap+ssl+";

        goto label04;

     label21:
        $r3 = "imap+tls+";

        goto label04;

     label22:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        r6 = virtualinvoke r1.<com.fsck.k9.mail.AuthType: java.lang.String name()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r4 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label05;

     label23:
        $r13 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>("pathPrefix");

     label24:
        r5 = (java.lang.String) $r13;

        goto label09;

     label25:
        r6 = "0";

        goto label12;

     label26:
        r5 = "/1|";

        goto label15;

     label27:
        r2 := @caughtexception;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("Can\'t create ImapStore URI", r2);

        throw $r15;

        catch java.net.URISyntaxException from label05 to label06 with label27;
        catch java.net.URISyntaxException from label07 to label08 with label27;
        catch java.net.URISyntaxException from label10 to label11 with label27;
        catch java.net.URISyntaxException from label12 to label13 with label27;
        catch java.net.URISyntaxException from label14 to label15 with label27;
        catch java.net.URISyntaxException from label16 to label17 with label27;
        catch java.net.URISyntaxException from label23 to label24 with label27;
    }
