com.fsck.k9.mail.store.webdav.WebDavStore extends com.fsck.k9.mail.store.RemoteStore
private java.lang.String alias
private org.apache.http.client.CookieStore authCookies
private java.lang.String authString
private short authenticationType
private java.lang.String baseUrl
private java.lang.String cachedLoginUrl
private java.util.Map folderList
private java.lang.String formBasedAuthPath
private java.lang.String hostname
private com.fsck.k9.mail.store.webdav.WebDavHttpClient httpClient
private final com.fsck.k9.mail.store.webdav.WebDavHttpClient$WebDavHttpClientFactory httpClientFactory
private org.apache.http.protocol.HttpContext httpContext
private com.fsck.k9.mail.ConnectionSecurity mConnectionSecurity
private java.lang.String mailboxPath
private java.lang.String password
private java.lang.String path
private int port
private com.fsck.k9.mail.Folder sendFolder
private java.lang.String username
    public void <init>(com.fsck.k9.mail.store.StoreConfig, com.fsck.k9.mail.store.webdav.WebDavHttpClient$WebDavHttpClientFactory) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        com.fsck.k9.mail.store.StoreConfig $r1;
        com.fsck.k9.mail.store.webdav.WebDavHttpClient$WebDavHttpClientFactory $r2;
        java.lang.IllegalArgumentException r3;
        java.util.HashMap $r4;
        java.lang.String $r5;
        com.fsck.k9.mail.store.webdav.WebDavStoreSettings $r6;
        int $i0;
        com.fsck.k9.mail.ConnectionSecurity $r7;
        boolean $z0;
        java.lang.StringBuilder $r8, $r9;
        com.fsck.k9.mail.MessagingException $r10;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        $r1 := @parameter0: com.fsck.k9.mail.store.StoreConfig;

        $r2 := @parameter1: com.fsck.k9.mail.store.webdav.WebDavHttpClient$WebDavHttpClientFactory;

        specialinvoke r0.<com.fsck.k9.mail.store.RemoteStore: void <init>(com.fsck.k9.mail.store.StoreConfig,com.fsck.k9.mail.ssl.TrustedSocketFactory)>($r1, null);

        r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.webdav.WebDavHttpClient httpClient> = null;

        r0.<com.fsck.k9.mail.store.webdav.WebDavStore: org.apache.http.protocol.HttpContext httpContext> = null;

        r0.<com.fsck.k9.mail.store.webdav.WebDavStore: org.apache.http.client.CookieStore authCookies> = null;

        r0.<com.fsck.k9.mail.store.webdav.WebDavStore: short authenticationType> = 0;

        r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.Folder sendFolder> = null;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.util.Map folderList> = $r4;

        r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.webdav.WebDavHttpClient$WebDavHttpClientFactory httpClientFactory> = $r2;

     label01:
        $r5 = interfaceinvoke $r1.<com.fsck.k9.mail.store.StoreConfig: java.lang.String getStoreUri()>();

        $r6 = staticinvoke <com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.webdav.WebDavStoreSettings decodeUri(java.lang.String)>($r5);

     label02:
        $r5 = $r6.<com.fsck.k9.mail.store.webdav.WebDavStoreSettings: java.lang.String host>;

        r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String hostname> = $r5;

        $i0 = $r6.<com.fsck.k9.mail.store.webdav.WebDavStoreSettings: int port>;

        r0.<com.fsck.k9.mail.store.webdav.WebDavStore: int port> = $i0;

        $r7 = $r6.<com.fsck.k9.mail.store.webdav.WebDavStoreSettings: com.fsck.k9.mail.ConnectionSecurity connectionSecurity>;

        r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.ConnectionSecurity mConnectionSecurity> = $r7;

        $r5 = $r6.<com.fsck.k9.mail.store.webdav.WebDavStoreSettings: java.lang.String username>;

        r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String username> = $r5;

        $r5 = $r6.<com.fsck.k9.mail.store.webdav.WebDavStoreSettings: java.lang.String password>;

        r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String password> = $r5;

        $r5 = $r6.<com.fsck.k9.mail.store.webdav.WebDavStoreSettings: java.lang.String alias>;

        r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String alias> = $r5;

        $r5 = $r6.<com.fsck.k9.mail.store.webdav.WebDavStoreSettings: java.lang.String path>;

        r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String path> = $r5;

        $r5 = $r6.<com.fsck.k9.mail.store.webdav.WebDavStoreSettings: java.lang.String authPath>;

        r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String formBasedAuthPath> = $r5;

        $r5 = $r6.<com.fsck.k9.mail.store.webdav.WebDavStoreSettings: java.lang.String mailboxPath>;

        r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String mailboxPath> = $r5;

        $r5 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String path>;

        if $r5 == null goto label03;

        $r5 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String path>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label09;

     label03:
        r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String path> = "/Exchange";

     label04:
        $r5 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String mailboxPath>;

        if $r5 == null goto label05;

        $r5 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String mailboxPath>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label10;

     label05:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r5 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String alias>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String mailboxPath> = $r5;

     label06:
        $r5 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String formBasedAuthPath>;

        if $r5 == null goto label07;

        $r5 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String formBasedAuthPath>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label07;

        $r5 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String formBasedAuthPath>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 != 0 goto label07;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r5 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String formBasedAuthPath>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String formBasedAuthPath> = $r5;

     label07:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r5 = specialinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String getRoot()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String path>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String mailboxPath>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String baseUrl> = $r5;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Basic ");

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String username>;

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r5 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String password>;

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <com.fsck.k9.mail.filter.Base64: java.lang.String encode(java.lang.String)>($r5);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String authString> = $r5;

        return;

     label08:
        r3 := @caughtexception;

        $r10 = new com.fsck.k9.mail.MessagingException;

        specialinvoke $r10.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String,java.lang.Throwable)>("Error while decoding store URI", r3);

        throw $r10;

     label09:
        $r5 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String path>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 != 0 goto label04;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r5 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String path>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String path> = $r5;

        goto label04;

     label10:
        $r5 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String mailboxPath>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 != 0 goto label06;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r5 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String mailboxPath>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String mailboxPath> = $r5;

        goto label06;

        catch java.lang.IllegalArgumentException from label01 to label02 with label08;
    }
    private boolean authenticate() throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        java.io.IOException r1;
        com.fsck.k9.mail.store.webdav.HttpGeneric r2;
        short $s0;
        com.fsck.k9.mail.store.webdav.ConnectionInfo $r3;
        java.lang.String $r4;
        com.fsck.k9.mail.store.webdav.WebDavHttpClient $r5;
        org.apache.http.protocol.HttpContext $r6;
        org.apache.http.HttpResponse $r7;
        org.apache.http.StatusLine $r8;
        int $i1;
        com.fsck.k9.mail.MessagingException $r9;
        java.lang.Object[] $r10;
        java.lang.StringBuilder $r11;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        $s0 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: short authenticationType>;

        if $s0 != 0 goto label20;

     label01:
        $r3 = specialinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.webdav.ConnectionInfo doInitialConnection()>();

     label02:
        $s0 = $r3.<com.fsck.k9.mail.store.webdav.ConnectionInfo: short requiredAuthType>;

        if $s0 != 1 goto label17;

        r2 = new com.fsck.k9.mail.store.webdav.HttpGeneric;

        $r4 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String baseUrl>;

     label03:
        specialinvoke r2.<com.fsck.k9.mail.store.webdav.HttpGeneric: void <init>(java.lang.String)>($r4);

        virtualinvoke r2.<com.fsck.k9.mail.store.webdav.HttpGeneric: void setMethod(java.lang.String)>("GET");

     label04:
        $r4 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String authString>;

     label05:
        virtualinvoke r2.<com.fsck.k9.mail.store.webdav.HttpGeneric: void setHeader(java.lang.String,java.lang.String)>("Authorization", $r4);

        $r5 = virtualinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.webdav.WebDavHttpClient getHttpClient()>();

     label06:
        $r6 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: org.apache.http.protocol.HttpContext httpContext>;

     label07:
        $r7 = virtualinvoke $r5.<com.fsck.k9.mail.store.webdav.WebDavHttpClient: org.apache.http.HttpResponse executeOverride(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>(r2, $r6);

        $r8 = interfaceinvoke $r7.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i1 = interfaceinvoke $r8.<org.apache.http.StatusLine: int getStatusCode()>();

     label08:
        if $i1 < 200 goto label10;

        if $i1 >= 300 goto label10;

        r0.<com.fsck.k9.mail.store.webdav.WebDavStore: short authenticationType> = 1;

     label09:
        $s0 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: short authenticationType>;

        if $s0 == 0 goto label23;

        return 1;

     label10:
        if $i1 != 401 goto label14;

        $r9 = new com.fsck.k9.mail.MessagingException;

     label11:
        specialinvoke $r9.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String)>("Invalid username or password for authentication.");

     label12:
        throw $r9;

     label13:
        r1 := @caughtexception;

        $r10 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r1, "Error during authentication", $r10);

        $r9 = new com.fsck.k9.mail.MessagingException;

        specialinvoke $r9.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String,java.lang.Throwable)>("Error during authentication", r1);

        throw $r9;

     label14:
        $r9 = new com.fsck.k9.mail.MessagingException;

        $r11 = new java.lang.StringBuilder;

     label15:
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error with code ");

        $r8 = interfaceinvoke $r7.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i1 = interfaceinvoke $r8.<org.apache.http.StatusLine: int getStatusCode()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" during request processing: ");

        $r8 = interfaceinvoke $r7.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $r4 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String)>($r4);

     label16:
        throw $r9;

     label17:
        $s0 = $r3.<com.fsck.k9.mail.store.webdav.ConnectionInfo: short requiredAuthType>;

        if $s0 != 2 goto label09;

     label18:
        specialinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: void performFormBasedAuthentication(com.fsck.k9.mail.store.webdav.ConnectionInfo)>($r3);

     label19:
        goto label09;

     label20:
        $s0 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: short authenticationType>;

        if $s0 == 1 goto label09;

        $s0 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: short authenticationType>;

        if $s0 != 2 goto label09;

     label21:
        specialinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: void performFormBasedAuthentication(com.fsck.k9.mail.store.webdav.ConnectionInfo)>(null);

     label22:
        goto label09;

     label23:
        return 0;

        catch java.io.IOException from label01 to label02 with label13;
        catch java.io.IOException from label03 to label04 with label13;
        catch java.io.IOException from label05 to label06 with label13;
        catch java.io.IOException from label07 to label08 with label13;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.io.IOException from label15 to label16 with label13;
        catch java.io.IOException from label18 to label19 with label13;
        catch java.io.IOException from label21 to label22 with label13;
    }
    private com.fsck.k9.mail.store.webdav.WebDavFolder createFolder(java.lang.String)
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        java.lang.String $r1, $r2;
        com.fsck.k9.mail.store.webdav.WebDavFolder $r3;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = specialinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String getFolderName(java.lang.String)>($r1);

        if $r2 == null goto label2;

        $r3 = virtualinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.webdav.WebDavFolder getFolder(java.lang.String)>($r2);

        if $r3 == null goto label3;

        virtualinvoke $r3.<com.fsck.k9.mail.store.webdav.WebDavFolder: void setUrl(java.lang.String)>($r1);

        return $r3;

     label2:
        return null;

     label3:
        return $r3;
    }
    public static java.lang.String createUri(com.fsck.k9.mail.ServerSettings)
    {
        com.fsck.k9.mail.ServerSettings $r0;
        java.lang.String $r1;

        $r0 := @parameter0: com.fsck.k9.mail.ServerSettings;

        $r1 = staticinvoke <com.fsck.k9.mail.store.webdav.WebDavStoreUriCreator: java.lang.String create(com.fsck.k9.mail.ServerSettings)>($r0);

        return $r1;
    }
    public static com.fsck.k9.mail.store.webdav.WebDavStoreSettings decodeUri(java.lang.String)
    {
        java.lang.String $r0;
        com.fsck.k9.mail.store.webdav.WebDavStoreSettings $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.fsck.k9.mail.store.webdav.WebDavStoreUriDecoder: com.fsck.k9.mail.store.webdav.WebDavStoreSettings decode(java.lang.String)>($r0);

        return $r1;
    }
    private com.fsck.k9.mail.store.webdav.ConnectionInfo doInitialConnection() throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        javax.net.ssl.SSLException r1;
        com.fsck.k9.mail.store.webdav.ConnectionInfo r2;
        java.io.IOException r3;
        com.fsck.k9.mail.store.webdav.HttpGeneric r4;
        com.fsck.k9.mail.store.webdav.WebDavHttpClient $r5;
        java.lang.String $r6;
        org.apache.http.protocol.HttpContext $r7;
        org.apache.http.HttpResponse $r8;
        org.apache.http.StatusLine $r9;
        int $i0;
        boolean $z0;
        java.lang.StringBuilder $r10;
        org.apache.http.Header $r11;
        com.fsck.k9.mail.CertificateValidationException $r12;
        java.lang.Object[] $r13;
        com.fsck.k9.mail.MessagingException $r14;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        r2 = new com.fsck.k9.mail.store.webdav.ConnectionInfo;

        specialinvoke r2.<com.fsck.k9.mail.store.webdav.ConnectionInfo: void <init>()>();

        $r5 = virtualinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.webdav.WebDavHttpClient getHttpClient()>();

        r4 = new com.fsck.k9.mail.store.webdav.HttpGeneric;

        $r6 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String baseUrl>;

        specialinvoke r4.<com.fsck.k9.mail.store.webdav.HttpGeneric: void <init>(java.lang.String)>($r6);

        virtualinvoke r4.<com.fsck.k9.mail.store.webdav.HttpGeneric: void setMethod(java.lang.String)>("GET");

        $r7 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: org.apache.http.protocol.HttpContext httpContext>;

     label01:
        $r8 = virtualinvoke $r5.<com.fsck.k9.mail.store.webdav.WebDavHttpClient: org.apache.http.HttpResponse executeOverride(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>(r4, $r7);

        $r9 = interfaceinvoke $r8.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r9.<org.apache.http.StatusLine: int getStatusCode()>();

     label02:
        r2.<com.fsck.k9.mail.store.webdav.ConnectionInfo: int statusCode> = $i0;

        $i0 = r2.<com.fsck.k9.mail.store.webdav.ConnectionInfo: int statusCode>;

        if $i0 != 401 goto label03;

        r2.<com.fsck.k9.mail.store.webdav.ConnectionInfo: short requiredAuthType> = 1;

        return r2;

     label03:
        $i0 = r2.<com.fsck.k9.mail.store.webdav.ConnectionInfo: int statusCode>;

        if $i0 < 200 goto label04;

        $i0 = r2.<com.fsck.k9.mail.store.webdav.ConnectionInfo: int statusCode>;

        if $i0 < 300 goto label06;

     label04:
        $i0 = r2.<com.fsck.k9.mail.store.webdav.ConnectionInfo: int statusCode>;

        if $i0 < 300 goto label05;

        $i0 = r2.<com.fsck.k9.mail.store.webdav.ConnectionInfo: int statusCode>;

        if $i0 < 400 goto label06;

     label05:
        $i0 = r2.<com.fsck.k9.mail.store.webdav.ConnectionInfo: int statusCode>;

        if $i0 != 440 goto label22;

     label06:
        r2.<com.fsck.k9.mail.store.webdav.ConnectionInfo: short requiredAuthType> = 2;

        $r6 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String formBasedAuthPath>;

        if $r6 == null goto label18;

        $r6 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String formBasedAuthPath>;

     label07:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("");

     label08:
        if $z0 != 0 goto label18;

        $r10 = new java.lang.StringBuilder;

     label09:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r6 = specialinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String getRoot()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label10:
        $r6 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String formBasedAuthPath>;

     label11:
        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label12:
        r2.<com.fsck.k9.mail.store.webdav.ConnectionInfo: java.lang.String guessedAuthUrl> = $r6;

     label13:
        $r11 = interfaceinvoke $r8.<org.apache.http.HttpResponse: org.apache.http.Header getFirstHeader(java.lang.String)>("Location");

     label14:
        if $r11 == null goto label26;

     label15:
        $r6 = interfaceinvoke $r11.<org.apache.http.Header: java.lang.String getValue()>();

     label16:
        r2.<com.fsck.k9.mail.store.webdav.ConnectionInfo: java.lang.String redirectUrl> = $r6;

        return r2;

     label17:
        r1 := @caughtexception;

        $r12 = new com.fsck.k9.mail.CertificateValidationException;

        $r6 = virtualinvoke r1.<javax.net.ssl.SSLException: java.lang.String getMessage()>();

        specialinvoke $r12.<com.fsck.k9.mail.CertificateValidationException: void <init>(java.lang.String,java.lang.Throwable)>($r6, r1);

        throw $r12;

     label18:
        $r10 = new java.lang.StringBuilder;

     label19:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r6 = specialinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String getRoot()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/exchweb/bin/auth/owaauth.dll");

        $r6 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label20:
        r2.<com.fsck.k9.mail.store.webdav.ConnectionInfo: java.lang.String guessedAuthUrl> = $r6;

        goto label13;

     label21:
        r3 := @caughtexception;

        $r13 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r3, "IOException during initial connection", $r13);

        $r14 = new com.fsck.k9.mail.MessagingException;

        specialinvoke $r14.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String,java.lang.Throwable)>("IOException", r3);

        throw $r14;

     label22:
        r3 = new java.io.IOException;

        $r10 = new java.lang.StringBuilder;

     label23:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error with code ");

     label24:
        $i0 = r2.<com.fsck.k9.mail.store.webdav.ConnectionInfo: int statusCode>;

     label25:
        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" during request processing: ");

        $r9 = interfaceinvoke $r8.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $r6 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r3.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw r3;

     label26:
        return r2;

        catch javax.net.ssl.SSLException from label01 to label02 with label17;
        catch javax.net.ssl.SSLException from label07 to label08 with label17;
        catch javax.net.ssl.SSLException from label09 to label10 with label17;
        catch javax.net.ssl.SSLException from label11 to label12 with label17;
        catch javax.net.ssl.SSLException from label13 to label14 with label17;
        catch javax.net.ssl.SSLException from label15 to label16 with label17;
        catch java.io.IOException from label01 to label02 with label21;
        catch java.io.IOException from label07 to label08 with label21;
        catch java.io.IOException from label09 to label10 with label21;
        catch java.io.IOException from label11 to label12 with label21;
        catch java.io.IOException from label13 to label14 with label21;
        catch java.io.IOException from label15 to label16 with label21;
        catch javax.net.ssl.SSLException from label19 to label20 with label17;
        catch java.io.IOException from label19 to label20 with label21;
        catch javax.net.ssl.SSLException from label23 to label24 with label17;
        catch javax.net.ssl.SSLException from label25 to label26 with label17;
        catch java.io.IOException from label23 to label24 with label21;
        catch java.io.IOException from label25 to label26 with label21;
    }
    private java.lang.String findFormAction(java.io.InputStream) throws java.io.IOException
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        java.io.InputStream $r1;
        java.io.BufferedReader r2;
        java.lang.String r3, $r5;
        java.io.InputStreamReader $r4;
        boolean $z0;
        java.lang.String[] $r6;
        int $i0;
        char $c1;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        $r1 := @parameter0: java.io.InputStream;

        r3 = null;

        r2 = new java.io.BufferedReader;

        $r4 = new java.io.InputStreamReader;

        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r1);

        specialinvoke r2.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r4, 4096);

        $r5 = virtualinvoke r2.<java.io.BufferedReader: java.lang.String readLine()>();

     label1:
        if r3 != null goto label3;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean contains(java.lang.CharSequence)>(" action=");

        if $z0 == 0 goto label2;

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(" action=");

        $i0 = lengthof $r6;

        if $i0 <= 1 goto label2;

        $r5 = $r6[1];

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 <= 1 goto label2;

        $r5 = $r6[1];

        $c1 = virtualinvoke $r5.<java.lang.String: char charAt(int)>(0);

        $r5 = $r6[1];

        $i0 = virtualinvoke $r5.<java.lang.String: int indexOf(int,int)>($c1, 1);

        if $i0 <= 1 goto label2;

        r3 = $r6[1];

        $r5 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

        r3 = $r5;

        $i0 = virtualinvoke $r5.<java.lang.String: int indexOf(int)>(63);

        if $i0 == -1 goto label2;

        r3 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label2:
        $r5 = virtualinvoke r2.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label1;

     label3:
        return r3;
    }
    private java.lang.String getFolderListXml()
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<?xml version=\'1.0\' ?><a:searchrequest xmlns:a=\'DAV:\'><a:sql>\r\nSELECT \"DAV:uid\", \"DAV:ishidden\"\r\n FROM SCOPE(\'deep traversal of \"");

        $r2 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String baseUrl>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"\')\r\n WHERE \"DAV:ishidden\"=False AND \"DAV:isfolder\"=True\r\n</a:sql></a:searchrequest>\r\n");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
    private java.lang.String getFolderName(java.lang.String)
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        java.lang.String $r1;
        int i0, i1, $i2;
        char $c3;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        return null;

     label1:
        i0 = -1;

        i1 = 0;

     label2:
        if i1 >= 5 goto label3;

        i0 = i0 + 1;

        $i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(47, i0);

        i0 = $i2;

        if $i2 >= 0 goto label5;

     label3:
        if i0 <= 0 goto label7;

        i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        i1 = i1 + -1;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i1);

        if $c3 != 47 goto label6;

        i0 = i0 + 1;

        i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        i1 = i1 + -1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);

     label4:
        $r1 = staticinvoke <com.fsck.k9.mail.helper.UrlEncodingHelper: java.lang.String decodeUtf8(java.lang.String)>($r1);

        return $r1;

     label5:
        i1 = i1 + 1;

        goto label2;

     label6:
        i0 = i0 + 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(i0);

        goto label4;

     label7:
        return null;
    }
    private java.lang.String getRoot()
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        com.fsck.k9.mail.ConnectionSecurity $r1, $r2;
        java.lang.String r3;
        java.lang.StringBuilder $r4;
        int $i0;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        $r1 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.ConnectionSecurity mConnectionSecurity>;

        $r2 = <com.fsck.k9.mail.ConnectionSecurity: com.fsck.k9.mail.ConnectionSecurity SSL_TLS_REQUIRED>;

        if $r1 != $r2 goto label2;

        r3 = "https";

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("://");

        r3 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String hostname>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i0 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: int port>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return r3;

     label2:
        r3 = "http";

        goto label1;
    }
    private com.fsck.k9.mail.Folder getSendSpoolFolder() throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        com.fsck.k9.mail.store.webdav.WebDavFolder $r1;
        com.fsck.k9.mail.Folder $r2;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        $r2 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.Folder sendFolder>;

        if $r2 != null goto label1;

        $r1 = virtualinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.webdav.WebDavFolder getFolder(java.lang.String)>("##DavMailSubmissionURI##");

        r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.Folder sendFolder> = $r1;

     label1:
        $r2 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.Folder sendFolder>;

        return $r2;
    }
    private java.lang.String getSpecialFoldersList()
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        return "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?><propfind xmlns=\"DAV:\"><prop><inbox xmlns=\"urn:schemas:httpmail:\"/><drafts xmlns=\"urn:schemas:httpmail:\"/><outbox xmlns=\"urn:schemas:httpmail:\"/><sentitems xmlns=\"urn:schemas:httpmail:\"/><deleteditems xmlns=\"urn:schemas:httpmail:\"/><junkemail xmlns=\"urn:schemas:httpmail:\"/></prop></propfind>";
    }
    private void handleUnexpectedRedirect(org.apache.http.HttpResponse, java.lang.String) throws java.io.IOException
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        org.apache.http.HttpResponse $r1;
        java.lang.String $r2;
        org.apache.http.Header $r3;
        java.io.IOException $r4;
        java.lang.StringBuilder $r5;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        $r1 := @parameter0: org.apache.http.HttpResponse;

        $r2 := @parameter1: java.lang.String;

        $r3 = interfaceinvoke $r1.<org.apache.http.HttpResponse: org.apache.http.Header getFirstHeader(java.lang.String)>("Location");

        if $r3 == null goto label1;

        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected redirect during request processing. Expected response from: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but told to redirect to:");

        $r3 = interfaceinvoke $r1.<org.apache.http.HttpResponse: org.apache.http.Header getFirstHeader(java.lang.String)>("Location");

        $r2 = interfaceinvoke $r3.<org.apache.http.Header: java.lang.String getValue()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r2);

        throw $r4;

     label1:
        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected redirect during request processing. Expected response from: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but not told where to redirect to");

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r2);

        throw $r4;
    }
    private void performFormBasedAuthentication(com.fsck.k9.mail.store.webdav.ConnectionInfo) throws java.io.IOException, com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        com.fsck.k9.mail.store.webdav.ConnectionInfo $r1;
        java.net.URI r2, r4;
        org.apache.http.client.entity.UrlEncodedFormEntity r3;
        java.util.ArrayList r5;
        org.apache.http.client.CookieStore $r6;
        com.fsck.k9.mail.store.webdav.WebDavHttpClient $r7;
        java.lang.String $r8, $r11, $r16, $r18;
        com.fsck.k9.mail.store.webdav.HttpGeneric r9;
        org.apache.http.message.BasicNameValuePair $r10;
        org.apache.http.protocol.HttpContext $r12;
        org.apache.http.HttpResponse $r13;
        boolean $z0, z1;
        org.apache.http.HttpEntity $r14;
        java.io.InputStream $r15;
        com.fsck.k9.mail.MessagingException $r17;
        int $i0;
        java.net.URISyntaxException r19;
        java.lang.Object[] $r20;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        $r1 := @parameter0: com.fsck.k9.mail.store.webdav.ConnectionInfo;

        $r6 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: org.apache.http.client.CookieStore authCookies>;

        if $r6 == null goto label01;

        $r6 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: org.apache.http.client.CookieStore authCookies>;

        interfaceinvoke $r6.<org.apache.http.client.CookieStore: void clear()>();

     label01:
        $r7 = virtualinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.webdav.WebDavHttpClient getHttpClient()>();

        if $r1 == null goto label15;

        $r8 = $r1.<com.fsck.k9.mail.store.webdav.ConnectionInfo: java.lang.String guessedAuthUrl>;

     label02:
        r9 = new com.fsck.k9.mail.store.webdav.HttpGeneric;

        specialinvoke r9.<com.fsck.k9.mail.store.webdav.HttpGeneric: void <init>(java.lang.String)>($r8);

        virtualinvoke r9.<com.fsck.k9.mail.store.webdav.HttpGeneric: void setMethod(java.lang.String)>("POST");

        r5 = new java.util.ArrayList;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

        $r10 = new org.apache.http.message.BasicNameValuePair;

        $r11 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String baseUrl>;

        specialinvoke $r10.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("destination", $r11);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r10 = new org.apache.http.message.BasicNameValuePair;

        $r11 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String username>;

        specialinvoke $r10.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("username", $r11);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r10 = new org.apache.http.message.BasicNameValuePair;

        $r11 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String password>;

        specialinvoke $r10.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("password", $r11);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r10 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r10.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("flags", "0");

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r10 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r10.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("SubmitCreds", "Log+On");

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r10 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r10.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("forcedownlevel", "0");

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r10 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r10.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("trusted", "0");

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r10);

        r3 = new org.apache.http.client.entity.UrlEncodedFormEntity;

        specialinvoke r3.<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List)>(r5);

        virtualinvoke r9.<com.fsck.k9.mail.store.webdav.HttpGeneric: void setEntity(org.apache.http.HttpEntity)>(r3);

        $r12 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: org.apache.http.protocol.HttpContext httpContext>;

        $r13 = virtualinvoke $r7.<com.fsck.k9.mail.store.webdav.WebDavHttpClient: org.apache.http.HttpResponse executeOverride(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>(r9, $r12);

        $z0 = specialinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: boolean testAuthenticationResponse(org.apache.http.HttpResponse)>($r13);

        z1 = $z0;

        if $z0 != 0 goto label14;

        $r14 = interfaceinvoke $r13.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r15 = staticinvoke <com.fsck.k9.mail.store.webdav.WebDavHttpClient: java.io.InputStream getUngzippedContent(org.apache.http.HttpEntity)>($r14);

        $r16 = specialinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String findFormAction(java.io.InputStream)>($r15);

        $r11 = $r16;

        if $r16 != null goto label33;

        if $r1 == null goto label33;

        $r16 = $r1.<com.fsck.k9.mail.store.webdav.ConnectionInfo: java.lang.String redirectUrl>;

        if $r16 == null goto label33;

        $r16 = $r1.<com.fsck.k9.mail.store.webdav.ConnectionInfo: java.lang.String redirectUrl>;

        $z0 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label33;

        $r11 = $r1.<com.fsck.k9.mail.store.webdav.ConnectionInfo: java.lang.String redirectUrl>;

        $r8 = $r11;

        r9 = new com.fsck.k9.mail.store.webdav.HttpGeneric;

        specialinvoke r9.<com.fsck.k9.mail.store.webdav.HttpGeneric: void <init>(java.lang.String)>($r11);

        virtualinvoke r9.<com.fsck.k9.mail.store.webdav.HttpGeneric: void setMethod(java.lang.String)>("GET");

        $r12 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: org.apache.http.protocol.HttpContext httpContext>;

        $r13 = virtualinvoke $r7.<com.fsck.k9.mail.store.webdav.WebDavHttpClient: org.apache.http.HttpResponse executeOverride(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>(r9, $r12);

        $r14 = interfaceinvoke $r13.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r15 = staticinvoke <com.fsck.k9.mail.store.webdav.WebDavHttpClient: java.io.InputStream getUngzippedContent(org.apache.http.HttpEntity)>($r14);

        $r11 = specialinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String findFormAction(java.io.InputStream)>($r15);

     label03:
        if $r11 == null goto label30;

        r2 = new java.net.URI;

     label04:
        specialinvoke r2.<java.net.URI: void <init>(java.lang.String)>($r11);

     label05:
        r4 = new java.net.URI;

     label06:
        specialinvoke r4.<java.net.URI: void <init>(java.lang.String)>($r8);

        $z0 = virtualinvoke r2.<java.net.URI: boolean isAbsolute()>();

     label07:
        if $z0 == 0 goto label17;

        $r8 = $r11;

     label08:
        r9 = new com.fsck.k9.mail.store.webdav.HttpGeneric;

     label09:
        specialinvoke r9.<com.fsck.k9.mail.store.webdav.HttpGeneric: void <init>(java.lang.String)>($r8);

     label10:
        virtualinvoke r9.<com.fsck.k9.mail.store.webdav.HttpGeneric: void setMethod(java.lang.String)>("POST");

        virtualinvoke r9.<com.fsck.k9.mail.store.webdav.HttpGeneric: void setEntity(org.apache.http.HttpEntity)>(r3);

     label11:
        $r12 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: org.apache.http.protocol.HttpContext httpContext>;

     label12:
        $r13 = virtualinvoke $r7.<com.fsck.k9.mail.store.webdav.WebDavHttpClient: org.apache.http.HttpResponse executeOverride(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>(r9, $r12);

        $z0 = specialinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: boolean testAuthenticationResponse(org.apache.http.HttpResponse)>($r13);

     label13:
        z1 = $z0;

     label14:
        if z1 == 0 goto label31;

        r0.<com.fsck.k9.mail.store.webdav.WebDavStore: short authenticationType> = 2;

        r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String cachedLoginUrl> = $r8;

        return;

     label15:
        $r8 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String cachedLoginUrl>;

        if $r8 == null goto label16;

        $r8 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String cachedLoginUrl>;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label16;

        $r8 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String cachedLoginUrl>;

        goto label02;

     label16:
        $r17 = new com.fsck.k9.mail.MessagingException;

        specialinvoke $r17.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String)>("No valid login URL available for form-based authentication.");

        throw $r17;

     label17:
        $z0 = virtualinvoke $r11.<java.lang.String: boolean startsWith(java.lang.String)>("/");

     label18:
        if $z0 == 0 goto label22;

        $r8 = $r11;

     label19:
        r2 = new java.net.URI;

     label20:
        $r11 = virtualinvoke r4.<java.net.URI: java.lang.String getScheme()>();

        $r16 = virtualinvoke r4.<java.net.URI: java.lang.String getUserInfo()>();

        $r18 = virtualinvoke r4.<java.net.URI: java.lang.String getHost()>();

        $i0 = virtualinvoke r4.<java.net.URI: int getPort()>();

        specialinvoke r2.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>($r11, $r16, $r18, $i0, $r8, null, null);

        $r8 = virtualinvoke r2.<java.net.URI: java.lang.String toString()>();

     label21:
        goto label08;

     label22:
        $r16 = virtualinvoke r4.<java.net.URI: java.lang.String getPath()>();

     label23:
        $r8 = $r16;

     label24:
        $i0 = virtualinvoke $r16.<java.lang.String: int lastIndexOf(int)>(47);

     label25:
        if $i0 <= -1 goto label19;

        $i0 = $i0 + 1;

     label26:
        $r8 = virtualinvoke $r16.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r8 = virtualinvoke $r8.<java.lang.String: java.lang.String concat(java.lang.String)>($r11);

     label27:
        goto label19;

     label28:
        r19 := @caughtexception;

     label29:
        $r20 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r19, "URISyntaxException caught", $r20);

        $r17 = new com.fsck.k9.mail.MessagingException;

        specialinvoke $r17.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String,java.lang.Throwable)>("URISyntaxException caught", r19);

        throw $r17;

     label30:
        $r17 = new com.fsck.k9.mail.MessagingException;

        specialinvoke $r17.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String)>("A valid URL for Exchange authentication could not be found.");

        throw $r17;

     label31:
        $r17 = new com.fsck.k9.mail.MessagingException;

        specialinvoke $r17.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String)>("Invalid credentials provided for authentication.");

        throw $r17;

     label32:
        r19 := @caughtexception;

        goto label29;

     label33:
        goto label03;

        catch java.net.URISyntaxException from label04 to label05 with label28;
        catch java.net.URISyntaxException from label06 to label07 with label28;
        catch java.net.URISyntaxException from label09 to label10 with label28;
        catch java.net.URISyntaxException from label10 to label11 with label32;
        catch java.net.URISyntaxException from label12 to label13 with label32;
        catch java.net.URISyntaxException from label17 to label18 with label28;
        catch java.net.URISyntaxException from label20 to label21 with label28;
        catch java.net.URISyntaxException from label22 to label23 with label28;
        catch java.net.URISyntaxException from label24 to label25 with label28;
        catch java.net.URISyntaxException from label26 to label27 with label28;
    }
    private boolean testAuthenticationResponse(org.apache.http.HttpResponse) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        org.apache.http.HttpResponse $r1;
        java.net.URISyntaxException r2;
        org.apache.http.StatusLine $r3;
        int $i0;
        org.apache.http.client.CookieStore $r4;
        java.util.List $r5;
        boolean $z0;
        com.fsck.k9.mail.store.webdav.ConnectionInfo $r6;
        java.net.URI $r7;
        java.lang.String $r8, $r9, $r10, $r11;
        java.lang.Object[] $r12;
        com.fsck.k9.mail.MessagingException $r13;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        $r1 := @parameter0: org.apache.http.HttpResponse;

        $r3 = interfaceinvoke $r1.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r3.<org.apache.http.StatusLine: int getStatusCode()>();

        if $i0 < 200 goto label01;

        if $i0 < 300 goto label02;

     label01:
        if $i0 != 302 goto label21;

     label02:
        $r4 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: org.apache.http.client.CookieStore authCookies>;

        if $r4 == null goto label21;

        $r4 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: org.apache.http.client.CookieStore authCookies>;

        $r5 = interfaceinvoke $r4.<org.apache.http.client.CookieStore: java.util.List getCookies()>();

        $z0 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label21;

        $r6 = specialinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.webdav.ConnectionInfo doInitialConnection()>();

        $i0 = $r6.<com.fsck.k9.mail.store.webdav.ConnectionInfo: int statusCode>;

        if $i0 < 200 goto label03;

        $i0 = $r6.<com.fsck.k9.mail.store.webdav.ConnectionInfo: int statusCode>;

        if $i0 >= 300 goto label03;

        return 1;

     label03:
        $i0 = $r6.<com.fsck.k9.mail.store.webdav.ConnectionInfo: int statusCode>;

        if $i0 != 302 goto label21;

        $r7 = new java.net.URI;

        $r8 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String baseUrl>;

     label04:
        specialinvoke $r7.<java.net.URI: void <init>(java.lang.String)>($r8);

        $r9 = virtualinvoke $r7.<java.net.URI: java.lang.String getPath()>();

     label05:
        $r8 = $r9;

        $r7 = new java.net.URI;

        $r10 = $r6.<com.fsck.k9.mail.store.webdav.ConnectionInfo: java.lang.String redirectUrl>;

     label06:
        specialinvoke $r7.<java.net.URI: void <init>(java.lang.String)>($r10);

        $r11 = virtualinvoke $r7.<java.net.URI: java.lang.String getPath()>();

     label07:
        $r10 = $r11;

     label08:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean endsWith(java.lang.String)>("/");

     label09:
        if $z0 != 0 goto label11;

     label10:
        $r8 = virtualinvoke $r9.<java.lang.String: java.lang.String concat(java.lang.String)>("/");

     label11:
        $z0 = virtualinvoke $r11.<java.lang.String: boolean endsWith(java.lang.String)>("/");

     label12:
        if $z0 != 0 goto label14;

     label13:
        $r10 = virtualinvoke $r11.<java.lang.String: java.lang.String concat(java.lang.String)>("/");

     label14:
        $z0 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r8);

     label15:
        if $z0 == 0 goto label16;

        return 1;

     label16:
        $i0 = virtualinvoke $r8.<java.lang.String: int indexOf(int,int)>(47, 1);

     label17:
        if $i0 == -1 goto label21;

        $i0 = $i0 + 1;

     label18:
        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r10 = virtualinvoke $r10.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("/owa/", $r9);

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r8);

     label19:
        if $z0 == 0 goto label21;

        return 1;

     label20:
        r2 := @caughtexception;

        $r12 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r2, "URISyntaxException", $r12);

        $r13 = new com.fsck.k9.mail.MessagingException;

        specialinvoke $r13.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String,java.lang.Throwable)>("URISyntaxException caught", r2);

        throw $r13;

     label21:
        return 0;

        catch java.net.URISyntaxException from label04 to label05 with label20;
        catch java.net.URISyntaxException from label06 to label07 with label20;
        catch java.net.URISyntaxException from label08 to label09 with label20;
        catch java.net.URISyntaxException from label10 to label11 with label20;
        catch java.net.URISyntaxException from label11 to label12 with label20;
        catch java.net.URISyntaxException from label13 to label14 with label20;
        catch java.net.URISyntaxException from label14 to label15 with label20;
        catch java.net.URISyntaxException from label16 to label17 with label20;
        catch java.net.URISyntaxException from label18 to label19 with label20;
    }
    public void checkSettings() throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        specialinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: boolean authenticate()>();

        return;
    }
    public java.lang.String getAlias()
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        java.lang.String r1;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        r1 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String alias>;

        return r1;
    }
    public org.apache.http.client.CookieStore getAuthCookies()
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        org.apache.http.client.CookieStore r1;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        r1 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: org.apache.http.client.CookieStore authCookies>;

        return r1;
    }
    public java.lang.String getAuthString()
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        java.lang.String r1;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        r1 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String authString>;

        return r1;
    }
    short getAuthentication()
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        short s0;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        s0 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: short authenticationType>;

        return s0;
    }
    public volatile com.fsck.k9.mail.Folder getFolder(java.lang.String)
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        java.lang.String $r1;
        com.fsck.k9.mail.store.webdav.WebDavFolder $r2;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.webdav.WebDavFolder getFolder(java.lang.String)>($r1);

        return $r2;
    }
    public com.fsck.k9.mail.store.webdav.WebDavFolder getFolder(java.lang.String)
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.util.Map $r3;
        com.fsck.k9.mail.store.webdav.WebDavFolder r4;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.util.Map folderList>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (com.fsck.k9.mail.store.webdav.WebDavFolder) $r2;

        if r4 != null goto label1;

        r4 = new com.fsck.k9.mail.store.webdav.WebDavFolder;

        specialinvoke r4.<com.fsck.k9.mail.store.webdav.WebDavFolder: void <init>(com.fsck.k9.mail.store.webdav.WebDavStore,java.lang.String)>(r0, $r1);

        $r3 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.util.Map folderList>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r4);

     label1:
        return r4;
    }
    public com.fsck.k9.mail.store.webdav.WebDavHttpClient getHttpClient() throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        java.security.KeyManagementException r1;
        java.security.NoSuchAlgorithmException r2;
        org.apache.http.conn.scheme.Scheme r3;
        com.fsck.k9.mail.store.webdav.WebDavHttpClient $r4;
        com.fsck.k9.mail.store.webdav.WebDavHttpClient$WebDavHttpClientFactory $r5;
        org.apache.http.params.HttpParams $r6;
        org.apache.http.protocol.BasicHttpContext $r7;
        org.apache.http.impl.client.BasicCookieStore $r8;
        org.apache.http.protocol.HttpContext $r9;
        org.apache.http.client.CookieStore $r10;
        org.apache.http.conn.ClientConnectionManager $r11;
        org.apache.http.conn.scheme.SchemeRegistry $r12;
        com.fsck.k9.mail.store.webdav.WebDavSocketFactory $r13;
        java.lang.String $r14;
        java.lang.Object[] $r15;
        com.fsck.k9.mail.MessagingException $r16;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        $r4 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.webdav.WebDavHttpClient httpClient>;

        if $r4 != null goto label2;

        $r5 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.webdav.WebDavHttpClient$WebDavHttpClientFactory httpClientFactory>;

        $r4 = virtualinvoke $r5.<com.fsck.k9.mail.store.webdav.WebDavHttpClient$WebDavHttpClientFactory: com.fsck.k9.mail.store.webdav.WebDavHttpClient create()>();

        r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.webdav.WebDavHttpClient httpClient> = $r4;

        $r4 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.webdav.WebDavHttpClient httpClient>;

        $r6 = virtualinvoke $r4.<com.fsck.k9.mail.store.webdav.WebDavHttpClient: org.apache.http.params.HttpParams getParams()>();

        interfaceinvoke $r6.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>("http.protocol.handle-redirects", 0);

        $r7 = new org.apache.http.protocol.BasicHttpContext;

        specialinvoke $r7.<org.apache.http.protocol.BasicHttpContext: void <init>()>();

        r0.<com.fsck.k9.mail.store.webdav.WebDavStore: org.apache.http.protocol.HttpContext httpContext> = $r7;

        $r8 = new org.apache.http.impl.client.BasicCookieStore;

        specialinvoke $r8.<org.apache.http.impl.client.BasicCookieStore: void <init>()>();

        r0.<com.fsck.k9.mail.store.webdav.WebDavStore: org.apache.http.client.CookieStore authCookies> = $r8;

        $r9 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: org.apache.http.protocol.HttpContext httpContext>;

        $r10 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: org.apache.http.client.CookieStore authCookies>;

        interfaceinvoke $r9.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.cookie-store", $r10);

        $r4 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.webdav.WebDavHttpClient httpClient>;

        $r11 = virtualinvoke $r4.<com.fsck.k9.mail.store.webdav.WebDavHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();

        $r12 = interfaceinvoke $r11.<org.apache.http.conn.ClientConnectionManager: org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry()>();

        r3 = new org.apache.http.conn.scheme.Scheme;

        $r13 = new com.fsck.k9.mail.store.webdav.WebDavSocketFactory;

        $r14 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String hostname>;

     label1:
        specialinvoke $r13.<com.fsck.k9.mail.store.webdav.WebDavSocketFactory: void <init>(java.lang.String,int)>($r14, 443);

        specialinvoke r3.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>("https", $r13, 443);

        virtualinvoke $r12.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>(r3);

     label2:
        $r4 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.webdav.WebDavHttpClient httpClient>;

        return $r4;

     label3:
        r2 := @caughtexception;

        $r15 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r2, "NoSuchAlgorithmException in getHttpClient", $r15);

        $r16 = new com.fsck.k9.mail.MessagingException;

        specialinvoke $r16.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String,java.lang.Throwable)>("NoSuchAlgorithmException in getHttpClient: ", r2);

        throw $r16;

     label4:
        r1 := @caughtexception;

        $r15 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r1, "KeyManagementException in getHttpClient", $r15);

        $r16 = new com.fsck.k9.mail.MessagingException;

        specialinvoke $r16.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String,java.lang.Throwable)>("KeyManagementException in getHttpClient: ", r1);

        throw $r16;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
        catch java.security.KeyManagementException from label1 to label2 with label4;
    }
    org.apache.http.protocol.HttpContext getHttpContext()
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        org.apache.http.protocol.HttpContext r1;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        r1 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: org.apache.http.protocol.HttpContext httpContext>;

        return r1;
    }
    java.lang.String getMarkMessagesReadXml(java.lang.String[], boolean)
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        java.lang.String[] $r1;
        boolean $z0;
        java.lang.StringBuilder r2, $r4;
        java.lang.String r3;
        int $i0, $i1;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        $r1 := @parameter0: java.lang.String[];

        $z0 := @parameter1: boolean;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>(int)>(600);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<?xml version=\'1.0\' ?>\r\n");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<a:propertyupdate xmlns:a=\'DAV:\' xmlns:b=\'urn:schemas:httpmail:\'>\r\n");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<a:target>\r\n");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        r3 = $r1[$i1];

        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" <a:href>");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</a:href>\r\n");

        $i1 = $i1 + 1;

        goto label1;

     label2:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</a:target>\r\n");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<a:set>\r\n");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" <a:prop>\r\n");

        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  <b:read>");

        if $z0 == 0 goto label4;

        r3 = "1";

     label3:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</b:read>\r\n");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" </a:prop>\r\n");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</a:set>\r\n");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</a:propertyupdate>\r\n");

        r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return r3;

     label4:
        r3 = "0";

        goto label3;
    }
    java.lang.String getMessageCountXml(java.lang.String)
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<?xml version=\'1.0\' ?><a:searchrequest xmlns:a=\'DAV:\'><a:sql>\r\nSELECT \"DAV:visiblecount\"\r\n FROM \"\"\r\n WHERE \"DAV:ishidden\"=False AND \"DAV:isfolder\"=False AND \"urn:schemas:httpmail:read\"=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n GROUP BY \"DAV:ishidden\"\r\n</a:sql></a:searchrequest>\r\n");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
    java.lang.String getMessageEnvelopeXml(java.lang.String[])
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        java.lang.String[] $r1;
        java.lang.StringBuilder r2, $r3;
        int i0, i1;
        java.lang.String $r4;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        $r1 := @parameter0: java.lang.String[];

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>(int)>(200);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<?xml version=\'1.0\' ?>");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<a:searchrequest xmlns:a=\'DAV:\'><a:sql>\r\n");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT \"DAV:uid\", \"DAV:getcontentlength\",");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"urn:schemas:mailheader:mime-version\",");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"urn:schemas:mailheader:content-type\",");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"urn:schemas:mailheader:subject\",");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"urn:schemas:mailheader:date\",");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"urn:schemas:mailheader:thread-topic\",");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"urn:schemas:mailheader:thread-index\",");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"urn:schemas:mailheader:from\",");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"urn:schemas:mailheader:to\",");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"urn:schemas:mailheader:in-reply-to\",");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"urn:schemas:mailheader:cc\",");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"urn:schemas:httpmail:read\"");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \r\n");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FROM \"\"\r\n");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHERE \"DAV:ishidden\"=False AND \"DAV:isfolder\"=False AND ");

        i1 = 0;

        i0 = lengthof $r1;

     label1:
        if i1 >= i0 goto label3;

        if i1 == 0 goto label2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  OR ");

     label2:
        $r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"DAV:uid\"=\'");

        $r4 = $r1[i1];

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ");

        i1 = i1 + 1;

        goto label1;

     label3:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</a:sql></a:searchrequest>\r\n");

        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
    java.lang.String getMessageFlagsXml(java.lang.String[]) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        java.lang.String[] $r1;
        java.lang.StringBuilder r2, $r4;
        int i0, i1;
        com.fsck.k9.mail.MessagingException $r3;
        java.lang.String $r5;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        $r1 := @parameter0: java.lang.String[];

        i0 = lengthof $r1;

        if i0 != 0 goto label1;

        $r3 = new com.fsck.k9.mail.MessagingException;

        specialinvoke $r3.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String)>("Attempt to get flags on 0 length array for uids");

        throw $r3;

     label1:
        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>(int)>(200);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<?xml version=\'1.0\' ?>");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<a:searchrequest xmlns:a=\'DAV:\'><a:sql>\r\n");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT \"urn:schemas:httpmail:read\", \"DAV:uid\"\r\n");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FROM \"\"\r\n");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHERE \"DAV:ishidden\"=False AND \"DAV:isfolder\"=False AND ");

        i1 = 0;

        i0 = lengthof $r1;

     label2:
        if i1 >= i0 goto label4;

        if i1 == 0 goto label3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" OR ");

     label3:
        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"DAV:uid\"=\'");

        $r5 = $r1[i1];

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ");

        i1 = i1 + 1;

        goto label2;

     label4:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</a:sql></a:searchrequest>\r\n");

        $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
    java.lang.String getMessageUrlsXml(java.lang.String[])
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        java.lang.String[] $r1;
        java.lang.StringBuilder r2, $r3;
        int i0, i1;
        java.lang.String $r4;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        $r1 := @parameter0: java.lang.String[];

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>(int)>(600);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<?xml version=\'1.0\' ?>");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<a:searchrequest xmlns:a=\'DAV:\'><a:sql>\r\n");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT \"urn:schemas:httpmail:read\", \"DAV:uid\"\r\n");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FROM \"\"\r\n");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHERE \"DAV:ishidden\"=False AND \"DAV:isfolder\"=False AND ");

        i1 = 0;

        i0 = lengthof $r1;

     label1:
        if i1 >= i0 goto label3;

        if i1 == 0 goto label2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  OR ");

     label2:
        $r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"DAV:uid\"=\'");

        $r4 = $r1[i1];

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ");

        i1 = i1 + 1;

        goto label1;

     label3:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</a:sql></a:searchrequest>\r\n");

        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
    java.lang.String getMessagesXml()
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        return "<?xml version=\'1.0\' ?><a:searchrequest xmlns:a=\'DAV:\'><a:sql>\r\nSELECT \"DAV:uid\"\r\n FROM \"\"\r\n WHERE \"DAV:ishidden\"=False AND \"DAV:isfolder\"=False\r\n</a:sql></a:searchrequest>\r\n";
    }
    java.lang.String getMoveOrCopyMessagesReadXml(java.lang.String[], boolean)
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        java.lang.String[] $r1;
        boolean $z0;
        java.lang.StringBuilder r2, $r5;
        java.lang.String r3, r4;
        int $i0, $i1;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        $r1 := @parameter0: java.lang.String[];

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label3;

        r4 = "move";

     label1:
        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>(int)>(600);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<?xml version=\'1.0\' ?>\r\n");

        $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<a:");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" xmlns:a=\'DAV:\' xmlns:b=\'urn:schemas:httpmail:\'>\r\n");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<a:target>\r\n");

        $i0 = lengthof $r1;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        r3 = $r1[$i1];

        $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" <a:href>");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</a:href>\r\n");

        $i1 = $i1 + 1;

        goto label2;

     label3:
        r4 = "copy";

        goto label1;

     label4:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</a:target>\r\n");

        $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</a:");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\r\n");

        r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return r3;
    }
    public java.util.List getPersonalNamespaces(boolean) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        boolean $z0;
        java.util.LinkedList r1;
        java.lang.String r2, $r4;
        java.util.HashMap r3;
        com.fsck.k9.mail.store.webdav.DataSet $r5;
        java.util.Map $r6;
        java.lang.Object $r7;
        com.fsck.k9.mail.store.StoreConfig $r8;
        java.lang.String[] $r9;
        int $i0, $i1;
        com.fsck.k9.mail.store.webdav.WebDavFolder $r10;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        $z0 := @parameter0: boolean;

        r1 = new java.util.LinkedList;

        specialinvoke r1.<java.util.LinkedList: void <init>()>();

        virtualinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.webdav.WebDavHttpClient getHttpClient()>();

        r3 = new java.util.HashMap;

        specialinvoke r3.<java.util.HashMap: void <init>()>();

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Depth", "0");

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Brief", "t");

        r2 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String baseUrl>;

        $r4 = specialinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String getSpecialFoldersList()>();

        $r5 = virtualinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.webdav.DataSet processRequest(java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r2, "PROPFIND", $r4, r3);

        $r6 = virtualinvoke $r5.<com.fsck.k9.mail.store.webdav.DataSet: java.util.Map getSpecialFolderToUrl()>();

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("inbox");

        r2 = (java.lang.String) $r7;

        r2 = specialinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String getFolderName(java.lang.String)>(r2);

        if r2 == null goto label1;

        $r8 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.StoreConfig mStoreConfig>;

        interfaceinvoke $r8.<com.fsck.k9.mail.store.StoreConfig: void setAutoExpandFolderName(java.lang.String)>(r2);

        $r8 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.StoreConfig mStoreConfig>;

        interfaceinvoke $r8.<com.fsck.k9.mail.store.StoreConfig: void setInboxFolderName(java.lang.String)>(r2);

     label1:
        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("drafts");

        r2 = (java.lang.String) $r7;

        r2 = specialinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String getFolderName(java.lang.String)>(r2);

        if r2 == null goto label2;

        $r8 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.StoreConfig mStoreConfig>;

        interfaceinvoke $r8.<com.fsck.k9.mail.store.StoreConfig: void setDraftsFolderName(java.lang.String)>(r2);

     label2:
        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("deleteditems");

        r2 = (java.lang.String) $r7;

        r2 = specialinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String getFolderName(java.lang.String)>(r2);

        if r2 == null goto label3;

        $r8 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.StoreConfig mStoreConfig>;

        interfaceinvoke $r8.<com.fsck.k9.mail.store.StoreConfig: void setTrashFolderName(java.lang.String)>(r2);

     label3:
        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("junkemail");

        r2 = (java.lang.String) $r7;

        r2 = specialinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String getFolderName(java.lang.String)>(r2);

        if r2 == null goto label4;

        $r8 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.StoreConfig mStoreConfig>;

        interfaceinvoke $r8.<com.fsck.k9.mail.store.StoreConfig: void setSpamFolderName(java.lang.String)>(r2);

     label4:
        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("sentitems");

        r2 = (java.lang.String) $r7;

        r2 = specialinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String getFolderName(java.lang.String)>(r2);

        if r2 == null goto label5;

        $r8 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.StoreConfig mStoreConfig>;

        interfaceinvoke $r8.<com.fsck.k9.mail.store.StoreConfig: void setSentFolderName(java.lang.String)>(r2);

     label5:
        r3 = new java.util.HashMap;

        specialinvoke r3.<java.util.HashMap: void <init>()>();

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Brief", "t");

        r2 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String baseUrl>;

        $r4 = specialinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String getFolderListXml()>();

        $r5 = virtualinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.webdav.DataSet processRequest(java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r2, "SEARCH", $r4, r3);

        $r9 = virtualinvoke $r5.<com.fsck.k9.mail.store.webdav.DataSet: java.lang.String[] getHrefs()>();

        $i0 = lengthof $r9;

        $i1 = 0;

     label6:
        if $i1 >= $i0 goto label8;

        r2 = $r9[$i1];

        $r10 = specialinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.webdav.WebDavFolder createFolder(java.lang.String)>(r2);

        if $r10 == null goto label7;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r10);

     label7:
        $i1 = $i1 + 1;

        goto label6;

     label8:
        return r1;
    }
    com.fsck.k9.mail.store.StoreConfig getStoreConfig()
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        com.fsck.k9.mail.store.StoreConfig r1;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        r1 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.StoreConfig mStoreConfig>;

        return r1;
    }
    public java.lang.String getUrl()
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        java.lang.String r1;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        r1 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String baseUrl>;

        return r1;
    }
    public boolean isCopyCapable()
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        return 1;
    }
    public boolean isMoveCapable()
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        return 1;
    }
    public boolean isSendCapable()
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        return 1;
    }
    com.fsck.k9.mail.store.webdav.DataSet processRequest(java.lang.String, java.lang.String, java.lang.String, java.util.Map) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        java.lang.String $r1, $r2, $r3;
        java.util.Map r4;
        com.fsck.k9.mail.store.webdav.DataSet $r5;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.util.Map;

        $r5 = virtualinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.webdav.DataSet processRequest(java.lang.String,java.lang.String,java.lang.String,java.util.Map,boolean)>($r1, $r2, $r3, r4, 1);

        return $r5;
    }
    com.fsck.k9.mail.store.webdav.DataSet processRequest(java.lang.String, java.lang.String, java.lang.String, java.util.Map, boolean) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        java.lang.String $r1, $r2, $r3;
        java.util.Map r4;
        boolean $z0, $z1;
        org.apache.http.entity.StringEntity r5;
        com.fsck.k9.mail.store.webdav.WebDavHandler r6;
        javax.xml.parsers.ParserConfigurationException r7;
        org.xml.sax.SAXException r8;
        com.fsck.k9.mail.store.webdav.DataSet r9;
        java.lang.Object[] $r10;
        java.io.InputStream $r11;
        javax.xml.parsers.SAXParserFactory $r12;
        javax.xml.parsers.SAXParser $r13;
        org.xml.sax.XMLReader $r14;
        org.xml.sax.InputSource $r15;
        com.fsck.k9.mail.MessagingException $r16;
        java.io.UnsupportedEncodingException r17;
        java.io.IOException r18;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.util.Map;

        $z0 := @parameter4: boolean;

        r9 = new com.fsck.k9.mail.store.webdav.DataSet;

        specialinvoke r9.<com.fsck.k9.mail.store.webdav.DataSet: void <init>()>();

        $z1 = staticinvoke <com.fsck.k9.mail.K9MailLib: boolean isDebug()>();

        if $z1 == 0 goto label01;

        $z1 = <com.fsck.k9.mail.K9MailLib: boolean DEBUG_PROTOCOL_WEBDAV>;

        if $z1 == 0 goto label01;

        $r10 = newarray (java.lang.Object)[3];

        $r10[0] = $r1;

        $r10[1] = $r2;

        $r10[2] = $r3;

        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("processRequest url = \'%s\', method = \'%s\', messageBody = \'%s\'", $r10);

     label01:
        if $r1 == null goto label02;

        if $r2 != null goto label03;

     label02:
        return r9;

     label03:
        virtualinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.webdav.WebDavHttpClient getHttpClient()>();

        r5 = null;

        if $r3 == null goto label06;

        r5 = new org.apache.http.entity.StringEntity;

     label04:
        specialinvoke r5.<org.apache.http.entity.StringEntity: void <init>(java.lang.String)>($r3);

     label05:
        virtualinvoke r5.<org.apache.http.entity.StringEntity: void setContentType(java.lang.String)>("text/xml");

     label06:
        $r11 = virtualinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.io.InputStream sendRequest(java.lang.String,java.lang.String,org.apache.http.entity.StringEntity,java.util.Map,boolean)>($r1, $r2, r5, r4, 1);

     label07:
        if $r11 == null goto label14;

        if $z0 == 0 goto label14;

     label08:
        $r12 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        virtualinvoke $r12.<javax.xml.parsers.SAXParserFactory: void setNamespaceAware(boolean)>(1);

        $r13 = virtualinvoke $r12.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        $r14 = virtualinvoke $r13.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

     label09:
        r6 = new com.fsck.k9.mail.store.webdav.WebDavHandler;

     label10:
        specialinvoke r6.<com.fsck.k9.mail.store.webdav.WebDavHandler: void <init>()>();

        interfaceinvoke $r14.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>(r6);

     label11:
        $r15 = new org.xml.sax.InputSource;

     label12:
        specialinvoke $r15.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>($r11);

        interfaceinvoke $r14.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>($r15);

        r9 = virtualinvoke r6.<com.fsck.k9.mail.store.webdav.WebDavHandler: com.fsck.k9.mail.store.webdav.DataSet getDataSet()>();

     label13:
        virtualinvoke $r11.<java.io.InputStream: void close()>();

     label14:
        return r9;

     label15:
        r8 := @caughtexception;

        $r10 = newarray (java.lang.Object)[0];

     label16:
        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r8, "SAXException in processRequest()", $r10);

     label17:
        $r16 = new com.fsck.k9.mail.MessagingException;

     label18:
        specialinvoke $r16.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String,java.lang.Throwable)>("SAXException in processRequest() ", r8);

     label19:
        throw $r16;

     label20:
        r17 := @caughtexception;

     label21:
        $r10 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r17, "UnsupportedEncodingException: ", $r10);

        $r16 = new com.fsck.k9.mail.MessagingException;

        specialinvoke $r16.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String,java.lang.Throwable)>("UnsupportedEncodingException in processRequest() ", r17);

        throw $r16;

     label22:
        r7 := @caughtexception;

        $r10 = newarray (java.lang.Object)[0];

     label23:
        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r7, "ParserConfigurationException in processRequest()", $r10);

     label24:
        $r16 = new com.fsck.k9.mail.MessagingException;

     label25:
        specialinvoke $r16.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String,java.lang.Throwable)>("ParserConfigurationException in processRequest() ", r7);

     label26:
        throw $r16;

     label27:
        r18 := @caughtexception;

     label28:
        $r10 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r18, "IOException: ", $r10);

        $r16 = new com.fsck.k9.mail.MessagingException;

        specialinvoke $r16.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String,java.lang.Throwable)>("IOException in processRequest() ", r18);

        throw $r16;

     label29:
        r18 := @caughtexception;

        goto label28;

     label30:
        r17 := @caughtexception;

        goto label21;

        catch java.io.UnsupportedEncodingException from label04 to label05 with label20;
        catch java.io.IOException from label04 to label05 with label27;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label30;
        catch java.io.IOException from label05 to label06 with label29;
        catch java.io.UnsupportedEncodingException from label06 to label07 with label20;
        catch java.io.IOException from label06 to label07 with label27;
        catch org.xml.sax.SAXException from label08 to label09 with label15;
        catch org.xml.sax.SAXException from label10 to label11 with label15;
        catch org.xml.sax.SAXException from label12 to label13 with label15;
        catch javax.xml.parsers.ParserConfigurationException from label08 to label09 with label22;
        catch javax.xml.parsers.ParserConfigurationException from label10 to label11 with label22;
        catch javax.xml.parsers.ParserConfigurationException from label12 to label13 with label22;
        catch java.io.UnsupportedEncodingException from label08 to label09 with label20;
        catch java.io.UnsupportedEncodingException from label10 to label11 with label20;
        catch java.io.UnsupportedEncodingException from label12 to label13 with label20;
        catch java.io.IOException from label08 to label09 with label27;
        catch java.io.IOException from label10 to label11 with label27;
        catch java.io.IOException from label12 to label13 with label27;
        catch java.io.UnsupportedEncodingException from label13 to label14 with label20;
        catch java.io.UnsupportedEncodingException from label16 to label17 with label20;
        catch java.io.UnsupportedEncodingException from label18 to label19 with label20;
        catch java.io.IOException from label13 to label14 with label27;
        catch java.io.IOException from label16 to label17 with label27;
        catch java.io.IOException from label18 to label19 with label27;
        catch java.io.UnsupportedEncodingException from label23 to label24 with label20;
        catch java.io.UnsupportedEncodingException from label25 to label26 with label20;
        catch java.io.IOException from label23 to label24 with label27;
        catch java.io.IOException from label25 to label26 with label27;
    }
    public void sendMessages(java.util.List) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        java.util.List r1;
        com.fsck.k9.mail.store.StoreConfig $r2;
        java.lang.String $r3;
        com.fsck.k9.mail.store.webdav.WebDavFolder $r4;
        com.fsck.k9.mail.Folder $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.StoreConfig mStoreConfig>;

        $r3 = interfaceinvoke $r2.<com.fsck.k9.mail.store.StoreConfig: java.lang.String getDraftsFolderName()>();

        $r4 = virtualinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.webdav.WebDavFolder getFolder(java.lang.String)>($r3);

     label1:
        virtualinvoke $r4.<com.fsck.k9.mail.store.webdav.WebDavFolder: void open(int)>(0);

        r1 = virtualinvoke $r4.<com.fsck.k9.mail.store.webdav.WebDavFolder: java.util.List appendWebDavMessages(java.util.List)>(r1);

        $r5 = specialinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.Folder getSendSpoolFolder()>();

        virtualinvoke $r4.<com.fsck.k9.mail.store.webdav.WebDavFolder: java.util.Map moveMessages(java.util.List,com.fsck.k9.mail.Folder)>(r1, $r5);

     label2:
        if $r4 == null goto label5;

        virtualinvoke $r4.<com.fsck.k9.mail.store.webdav.WebDavFolder: void close()>();

        return;

     label3:
        $r6 := @caughtexception;

        if $r4 == null goto label4;

        virtualinvoke $r4.<com.fsck.k9.mail.store.webdav.WebDavFolder: void close()>();

     label4:
        throw $r6;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    protected java.io.InputStream sendRequest(java.lang.String, java.lang.String, org.apache.http.entity.StringEntity, java.util.Map, boolean) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.store.webdav.WebDavStore r0;
        java.lang.String $r1, $r2, $r13, $r14;
        org.apache.http.entity.StringEntity $r3;
        java.util.Map r4;
        boolean $z0, $z1;
        com.fsck.k9.mail.store.webdav.HttpGeneric r5;
        java.io.IOException r6;
        java.io.UnsupportedEncodingException r7;
        com.fsck.k9.mail.store.webdav.WebDavHttpClient $r8;
        java.util.Set $r9;
        java.util.Iterator $r10;
        java.lang.Object $r11;
        java.util.Map$Entry r12;
        java.lang.Object[] $r15;
        com.fsck.k9.mail.MessagingException $r16;
        short $s0;
        org.apache.http.protocol.HttpContext $r17;
        org.apache.http.HttpResponse $r18;
        org.apache.http.StatusLine $r19;
        int $i1;
        org.apache.http.HttpEntity $r20;
        java.io.InputStream $r21;
        java.lang.StringBuilder $r22;

        r0 := @this: com.fsck.k9.mail.store.webdav.WebDavStore;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: org.apache.http.entity.StringEntity;

        r4 := @parameter3: java.util.Map;

        $z0 := @parameter4: boolean;

        if $r1 == null goto label01;

        if $r2 != null goto label02;

     label01:
        return null;

     label02:
        $r8 = virtualinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.webdav.WebDavHttpClient getHttpClient()>();

        r5 = new com.fsck.k9.mail.store.webdav.HttpGeneric;

     label03:
        specialinvoke r5.<com.fsck.k9.mail.store.webdav.HttpGeneric: void <init>(java.lang.String)>($r1);

     label04:
        if $r3 == null goto label06;

     label05:
        virtualinvoke r5.<com.fsck.k9.mail.store.webdav.HttpGeneric: void setEntity(org.apache.http.HttpEntity)>($r3);

     label06:
        if r4 == null goto label19;

     label07:
        $r9 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>();

        $r10 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

     label09:
        if $z1 == 0 goto label19;

     label10:
        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

     label11:
        r12 = (java.util.Map$Entry) $r11;

     label12:
        $r11 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getKey()>();

     label13:
        $r13 = (java.lang.String) $r11;

     label14:
        $r11 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getValue()>();

     label15:
        $r14 = (java.lang.String) $r11;

     label16:
        virtualinvoke r5.<com.fsck.k9.mail.store.webdav.HttpGeneric: void setHeader(java.lang.String,java.lang.String)>($r13, $r14);

     label17:
        goto label08;

     label18:
        r7 := @caughtexception;

        $r15 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r7, "UnsupportedEncodingException: ", $r15);

        $r16 = new com.fsck.k9.mail.MessagingException;

        specialinvoke $r16.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String,java.lang.Throwable)>("UnsupportedEncodingException", r7);

        throw $r16;

     label19:
        $s0 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: short authenticationType>;

        if $s0 != 0 goto label26;

        if $z0 == 0 goto label22;

     label20:
        $z1 = specialinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: boolean authenticate()>();

     label21:
        if $z1 != 0 goto label28;

     label22:
        $r16 = new com.fsck.k9.mail.MessagingException;

     label23:
        specialinvoke $r16.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String)>("Unable to authenticate in sendRequest().");

     label24:
        throw $r16;

     label25:
        r6 := @caughtexception;

        $r15 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r6, "IOException: ", $r15);

        $r16 = new com.fsck.k9.mail.MessagingException;

        specialinvoke $r16.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String,java.lang.Throwable)>("IOException", r6);

        throw $r16;

     label26:
        $s0 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: short authenticationType>;

        if $s0 != 1 goto label28;

        $r13 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String authString>;

     label27:
        virtualinvoke r5.<com.fsck.k9.mail.store.webdav.HttpGeneric: void setHeader(java.lang.String,java.lang.String)>("Authorization", $r13);

     label28:
        virtualinvoke r5.<com.fsck.k9.mail.store.webdav.HttpGeneric: void setMethod(java.lang.String)>($r2);

     label29:
        $r17 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: org.apache.http.protocol.HttpContext httpContext>;

     label30:
        $r18 = virtualinvoke $r8.<com.fsck.k9.mail.store.webdav.WebDavHttpClient: org.apache.http.HttpResponse executeOverride(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>(r5, $r17);

        $r19 = interfaceinvoke $r18.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i1 = interfaceinvoke $r19.<org.apache.http.StatusLine: int getStatusCode()>();

        $r20 = interfaceinvoke $r18.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

     label31:
        if $i1 != 401 goto label34;

        $r16 = new com.fsck.k9.mail.MessagingException;

     label32:
        specialinvoke $r16.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String)>("Invalid username or password for Basic authentication.");

     label33:
        throw $r16;

     label34:
        if $i1 != 440 goto label42;

        if $z0 == 0 goto label39;

        $s0 = r0.<com.fsck.k9.mail.store.webdav.WebDavStore: short authenticationType>;

        if $s0 != 2 goto label39;

     label35:
        specialinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: void performFormBasedAuthentication(com.fsck.k9.mail.store.webdav.ConnectionInfo)>(null);

        virtualinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: java.io.InputStream sendRequest(java.lang.String,java.lang.String,org.apache.http.entity.StringEntity,java.util.Map,boolean)>($r1, $r2, $r3, r4, 0);

     label36:
        if $r20 == null goto label48;

     label37:
        $r21 = staticinvoke <com.fsck.k9.mail.store.webdav.WebDavHttpClient: java.io.InputStream getUngzippedContent(org.apache.http.HttpEntity)>($r20);

     label38:
        return $r21;

     label39:
        $r16 = new com.fsck.k9.mail.MessagingException;

     label40:
        specialinvoke $r16.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String)>("Authentication failure in sendRequest().");

     label41:
        throw $r16;

     label42:
        if $i1 != 302 goto label45;

     label43:
        specialinvoke r0.<com.fsck.k9.mail.store.webdav.WebDavStore: void handleUnexpectedRedirect(org.apache.http.HttpResponse,java.lang.String)>($r18, $r1);

     label44:
        goto label36;

     label45:
        if $i1 < 200 goto label46;

        if $i1 < 300 goto label36;

     label46:
        r6 = new java.io.IOException;

        $r22 = new java.lang.StringBuilder;

     label47:
        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error with code ");

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" during request processing: ");

        $r19 = interfaceinvoke $r18.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $r1 = virtualinvoke $r19.<java.lang.Object: java.lang.String toString()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r6.<java.io.IOException: void <init>(java.lang.String)>($r1);

        throw r6;

     label48:
        return null;

        catch java.io.UnsupportedEncodingException from label03 to label04 with label18;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label18;
        catch java.io.UnsupportedEncodingException from label07 to label09 with label18;
        catch java.io.UnsupportedEncodingException from label10 to label11 with label18;
        catch java.io.UnsupportedEncodingException from label12 to label13 with label18;
        catch java.io.UnsupportedEncodingException from label14 to label15 with label18;
        catch java.io.UnsupportedEncodingException from label16 to label17 with label18;
        catch java.io.IOException from label03 to label04 with label25;
        catch java.io.IOException from label05 to label06 with label25;
        catch java.io.IOException from label07 to label09 with label25;
        catch java.io.IOException from label10 to label11 with label25;
        catch java.io.IOException from label12 to label13 with label25;
        catch java.io.IOException from label14 to label15 with label25;
        catch java.io.IOException from label16 to label17 with label25;
        catch java.io.UnsupportedEncodingException from label20 to label21 with label18;
        catch java.io.UnsupportedEncodingException from label23 to label24 with label18;
        catch java.io.IOException from label20 to label21 with label25;
        catch java.io.IOException from label23 to label24 with label25;
        catch java.io.UnsupportedEncodingException from label27 to label29 with label18;
        catch java.io.UnsupportedEncodingException from label30 to label31 with label18;
        catch java.io.UnsupportedEncodingException from label32 to label33 with label18;
        catch java.io.UnsupportedEncodingException from label35 to label36 with label18;
        catch java.io.UnsupportedEncodingException from label37 to label38 with label18;
        catch java.io.UnsupportedEncodingException from label40 to label41 with label18;
        catch java.io.UnsupportedEncodingException from label43 to label44 with label18;
        catch java.io.UnsupportedEncodingException from label47 to label48 with label18;
        catch java.io.IOException from label27 to label29 with label25;
        catch java.io.IOException from label30 to label31 with label25;
        catch java.io.IOException from label32 to label33 with label25;
        catch java.io.IOException from label35 to label36 with label25;
        catch java.io.IOException from label37 to label38 with label25;
        catch java.io.IOException from label40 to label41 with label25;
        catch java.io.IOException from label43 to label44 with label25;
        catch java.io.IOException from label47 to label48 with label25;
    }
