com.fsck.k9.mail.store.imap.ImapStore extends com.fsck.k9.mail.store.RemoteStore
private com.fsck.k9.mail.AuthType authType
private java.lang.String clientCertificateAlias
private java.lang.String combinedPrefix
private com.fsck.k9.mail.ConnectionSecurity connectionSecurity
private final java.util.Deque connections
private android.net.ConnectivityManager connectivityManager
private final java.util.Map folderCache
private com.fsck.k9.mail.store.imap.FolderNameCodec folderNameCodec
private java.lang.String host
private com.fsck.k9.mail.oauth.OAuth2TokenProvider oauthTokenProvider
private java.lang.String password
private java.lang.String pathDelimiter
private java.lang.String pathPrefix
private java.util.Set permanentFlagsIndex
private int port
private java.lang.String username
    public void <init>(com.fsck.k9.mail.store.StoreConfig, com.fsck.k9.mail.ssl.TrustedSocketFactory, android.net.ConnectivityManager, com.fsck.k9.mail.oauth.OAuth2TokenProvider) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.store.imap.ImapStore r0;
        com.fsck.k9.mail.store.StoreConfig $r1;
        com.fsck.k9.mail.ssl.TrustedSocketFactory $r2;
        android.net.ConnectivityManager $r3;
        com.fsck.k9.mail.oauth.OAuth2TokenProvider $r4;
        java.lang.IllegalArgumentException r5;
        java.lang.String $r6, $r10;
        java.util.EnumSet $r7;
        java.util.LinkedList $r8;
        java.util.HashMap $r9;
        com.fsck.k9.mail.store.imap.ImapStoreSettings $r11;
        int $i0;
        com.fsck.k9.mail.ConnectionSecurity $r12;
        com.fsck.k9.mail.AuthType $r13;
        boolean $z0;
        com.fsck.k9.mail.store.imap.FolderNameCodec $r14;
        com.fsck.k9.mail.MessagingException $r15;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapStore;

        $r1 := @parameter0: com.fsck.k9.mail.store.StoreConfig;

        $r2 := @parameter1: com.fsck.k9.mail.ssl.TrustedSocketFactory;

        $r3 := @parameter2: android.net.ConnectivityManager;

        $r4 := @parameter3: com.fsck.k9.mail.oauth.OAuth2TokenProvider;

        $r6 = null;

        specialinvoke r0.<com.fsck.k9.mail.store.RemoteStore: void <init>(com.fsck.k9.mail.store.StoreConfig,com.fsck.k9.mail.ssl.TrustedSocketFactory)>($r1, $r2);

        $r7 = staticinvoke <java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>(class "Lcom/fsck/k9/mail/Flag;");

        r0.<com.fsck.k9.mail.store.imap.ImapStore: java.util.Set permanentFlagsIndex> = $r7;

        r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String combinedPrefix> = null;

        r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String pathDelimiter> = null;

        $r8 = new java.util.LinkedList;

        specialinvoke $r8.<java.util.LinkedList: void <init>()>();

        r0.<com.fsck.k9.mail.store.imap.ImapStore: java.util.Deque connections> = $r8;

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        r0.<com.fsck.k9.mail.store.imap.ImapStore: java.util.Map folderCache> = $r9;

     label1:
        $r10 = interfaceinvoke $r1.<com.fsck.k9.mail.store.StoreConfig: java.lang.String getStoreUri()>();

        $r11 = staticinvoke <com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.store.imap.ImapStoreSettings decodeUri(java.lang.String)>($r10);

     label2:
        $r10 = $r11.<com.fsck.k9.mail.store.imap.ImapStoreSettings: java.lang.String host>;

        r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String host> = $r10;

        $i0 = $r11.<com.fsck.k9.mail.store.imap.ImapStoreSettings: int port>;

        r0.<com.fsck.k9.mail.store.imap.ImapStore: int port> = $i0;

        $r12 = $r11.<com.fsck.k9.mail.store.imap.ImapStoreSettings: com.fsck.k9.mail.ConnectionSecurity connectionSecurity>;

        r0.<com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.ConnectionSecurity connectionSecurity> = $r12;

        r0.<com.fsck.k9.mail.store.imap.ImapStore: android.net.ConnectivityManager connectivityManager> = $r3;

        r0.<com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.oauth.OAuth2TokenProvider oauthTokenProvider> = $r4;

        $r13 = $r11.<com.fsck.k9.mail.store.imap.ImapStoreSettings: com.fsck.k9.mail.AuthType authenticationType>;

        r0.<com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.AuthType authType> = $r13;

        $r10 = $r11.<com.fsck.k9.mail.store.imap.ImapStoreSettings: java.lang.String username>;

        r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String username> = $r10;

        $r10 = $r11.<com.fsck.k9.mail.store.imap.ImapStoreSettings: java.lang.String password>;

        r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String password> = $r10;

        $r10 = $r11.<com.fsck.k9.mail.store.imap.ImapStoreSettings: java.lang.String clientCertificateAlias>;

        r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String clientCertificateAlias> = $r10;

        $z0 = $r11.<com.fsck.k9.mail.store.imap.ImapStoreSettings: boolean autoDetectNamespace>;

        if $z0 == 0 goto label5;

     label3:
        r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String pathPrefix> = $r6;

        $r14 = staticinvoke <com.fsck.k9.mail.store.imap.FolderNameCodec: com.fsck.k9.mail.store.imap.FolderNameCodec newInstance()>();

        r0.<com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.store.imap.FolderNameCodec folderNameCodec> = $r14;

        return;

     label4:
        r5 := @caughtexception;

        $r15 = new com.fsck.k9.mail.MessagingException;

        specialinvoke $r15.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String,java.lang.Throwable)>("Error while decoding store URI", r5);

        throw $r15;

     label5:
        $r6 = $r11.<com.fsck.k9.mail.store.imap.ImapStoreSettings: java.lang.String pathPrefix>;

        goto label3;

        catch java.lang.IllegalArgumentException from label1 to label2 with label4;
    }
    static java.lang.String access$100(com.fsck.k9.mail.store.imap.ImapStore)
    {
        com.fsck.k9.mail.store.imap.ImapStore $r0;
        java.lang.String r1;

        $r0 := @parameter0: com.fsck.k9.mail.store.imap.ImapStore;

        r1 = $r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String host>;

        return r1;
    }
    static java.lang.String access$1000(com.fsck.k9.mail.store.imap.ImapStore)
    {
        com.fsck.k9.mail.store.imap.ImapStore $r0;
        java.lang.String r1;

        $r0 := @parameter0: com.fsck.k9.mail.store.imap.ImapStore;

        r1 = $r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String pathDelimiter>;

        return r1;
    }
    static java.lang.String access$1002(com.fsck.k9.mail.store.imap.ImapStore, java.lang.String)
    {
        com.fsck.k9.mail.store.imap.ImapStore $r0;
        java.lang.String $r1;

        $r0 := @parameter0: com.fsck.k9.mail.store.imap.ImapStore;

        $r1 := @parameter1: java.lang.String;

        $r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String pathDelimiter> = $r1;

        return $r1;
    }
    static java.lang.String access$1100(com.fsck.k9.mail.store.imap.ImapStore)
    {
        com.fsck.k9.mail.store.imap.ImapStore $r0;
        java.lang.String r1;

        $r0 := @parameter0: com.fsck.k9.mail.store.imap.ImapStore;

        r1 = $r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String combinedPrefix>;

        return r1;
    }
    static java.lang.String access$1102(com.fsck.k9.mail.store.imap.ImapStore, java.lang.String)
    {
        com.fsck.k9.mail.store.imap.ImapStore $r0;
        java.lang.String $r1;

        $r0 := @parameter0: com.fsck.k9.mail.store.imap.ImapStore;

        $r1 := @parameter1: java.lang.String;

        $r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String combinedPrefix> = $r1;

        return $r1;
    }
    static int access$200(com.fsck.k9.mail.store.imap.ImapStore)
    {
        com.fsck.k9.mail.store.imap.ImapStore $r0;
        int i0;

        $r0 := @parameter0: com.fsck.k9.mail.store.imap.ImapStore;

        i0 = $r0.<com.fsck.k9.mail.store.imap.ImapStore: int port>;

        return i0;
    }
    static com.fsck.k9.mail.ConnectionSecurity access$300(com.fsck.k9.mail.store.imap.ImapStore)
    {
        com.fsck.k9.mail.store.imap.ImapStore $r0;
        com.fsck.k9.mail.ConnectionSecurity r1;

        $r0 := @parameter0: com.fsck.k9.mail.store.imap.ImapStore;

        r1 = $r0.<com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.ConnectionSecurity connectionSecurity>;

        return r1;
    }
    static com.fsck.k9.mail.AuthType access$400(com.fsck.k9.mail.store.imap.ImapStore)
    {
        com.fsck.k9.mail.store.imap.ImapStore $r0;
        com.fsck.k9.mail.AuthType r1;

        $r0 := @parameter0: com.fsck.k9.mail.store.imap.ImapStore;

        r1 = $r0.<com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.AuthType authType>;

        return r1;
    }
    static java.lang.String access$500(com.fsck.k9.mail.store.imap.ImapStore)
    {
        com.fsck.k9.mail.store.imap.ImapStore $r0;
        java.lang.String r1;

        $r0 := @parameter0: com.fsck.k9.mail.store.imap.ImapStore;

        r1 = $r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String username>;

        return r1;
    }
    static java.lang.String access$600(com.fsck.k9.mail.store.imap.ImapStore)
    {
        com.fsck.k9.mail.store.imap.ImapStore $r0;
        java.lang.String r1;

        $r0 := @parameter0: com.fsck.k9.mail.store.imap.ImapStore;

        r1 = $r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String password>;

        return r1;
    }
    static java.lang.String access$700(com.fsck.k9.mail.store.imap.ImapStore)
    {
        com.fsck.k9.mail.store.imap.ImapStore $r0;
        java.lang.String r1;

        $r0 := @parameter0: com.fsck.k9.mail.store.imap.ImapStore;

        r1 = $r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String clientCertificateAlias>;

        return r1;
    }
    static com.fsck.k9.mail.store.StoreConfig access$800(com.fsck.k9.mail.store.imap.ImapStore)
    {
        com.fsck.k9.mail.store.imap.ImapStore $r0;
        com.fsck.k9.mail.store.StoreConfig r1;

        $r0 := @parameter0: com.fsck.k9.mail.store.imap.ImapStore;

        r1 = $r0.<com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.store.StoreConfig mStoreConfig>;

        return r1;
    }
    static java.lang.String access$900(com.fsck.k9.mail.store.imap.ImapStore)
    {
        com.fsck.k9.mail.store.imap.ImapStore $r0;
        java.lang.String r1;

        $r0 := @parameter0: com.fsck.k9.mail.store.imap.ImapStore;

        r1 = $r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String pathPrefix>;

        return r1;
    }
    static java.lang.String access$902(com.fsck.k9.mail.store.imap.ImapStore, java.lang.String)
    {
        com.fsck.k9.mail.store.imap.ImapStore $r0;
        java.lang.String $r1;

        $r0 := @parameter0: com.fsck.k9.mail.store.imap.ImapStore;

        $r1 := @parameter1: java.lang.String;

        $r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String pathPrefix> = $r1;

        return $r1;
    }
    public static java.lang.String createUri(com.fsck.k9.mail.ServerSettings)
    {
        com.fsck.k9.mail.ServerSettings $r0;
        java.lang.String $r1;

        $r0 := @parameter0: com.fsck.k9.mail.ServerSettings;

        $r1 = staticinvoke <com.fsck.k9.mail.store.imap.ImapStoreUriCreator: java.lang.String create(com.fsck.k9.mail.ServerSettings)>($r0);

        return $r1;
    }
    public static com.fsck.k9.mail.store.imap.ImapStoreSettings decodeUri(java.lang.String)
    {
        java.lang.String $r0;
        com.fsck.k9.mail.store.imap.ImapStoreSettings $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.fsck.k9.mail.store.imap.ImapStoreUriDecoder: com.fsck.k9.mail.store.imap.ImapStoreSettings decode(java.lang.String)>($r0);

        return $r1;
    }
    private java.util.List getFolders(java.util.Collection)
    {
        com.fsck.k9.mail.store.imap.ImapStore r0;
        java.util.Collection r1;
        java.util.ArrayList r2;
        int $i0;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.String r5;
        com.fsck.k9.mail.store.imap.ImapFolder $r6;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapStore;

        r1 := @parameter0: java.util.Collection;

        r2 = new java.util.ArrayList;

        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        specialinvoke r2.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $r6 = virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.store.imap.ImapFolder getFolder(java.lang.String)>(r5);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        return r2;
    }
    private java.util.Set listFolders(com.fsck.k9.mail.store.imap.ImapConnection, boolean) throws java.io.IOException, com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.store.imap.ImapStore r0;
        com.fsck.k9.mail.store.imap.ImapConnection $r1;
        boolean $z0, $z1;
        java.nio.charset.CharacterCodingException r2;
        java.util.HashSet r3;
        java.lang.String r4, r12, $r13;
        java.lang.Object[] $r5;
        java.lang.StringBuilder $r6;
        java.util.List $r7;
        int $i0, $i1;
        java.util.Iterator $r8;
        java.lang.Object $r9;
        com.fsck.k9.mail.store.imap.ListResponse r10;
        com.fsck.k9.mail.store.imap.FolderNameCodec $r11;
        com.fsck.k9.mail.store.StoreConfig $r14;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapStore;

        $r1 := @parameter0: com.fsck.k9.mail.store.imap.ImapConnection;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label10;

        r4 = "LSUB";

     label01:
        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = r4;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        r4 = virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String getCombinedPrefix()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");

        r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r4 = staticinvoke <com.fsck.k9.mail.store.imap.ImapUtility: java.lang.String encodeString(java.lang.String)>(r4);

        $r5[1] = r4;

        r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s \"\" %s", $r5);

        $r7 = virtualinvoke $r1.<com.fsck.k9.mail.store.imap.ImapConnection: java.util.List executeSimpleCommand(java.lang.String)>(r4);

        if $z0 == 0 goto label11;

        $r7 = staticinvoke <com.fsck.k9.mail.store.imap.ListResponse: java.util.List parseLsub(java.util.List)>($r7);

     label02:
        r3 = new java.util.HashSet;

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        specialinvoke r3.<java.util.HashSet: void <init>(int)>($i0);

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.fsck.k9.mail.store.imap.ListResponse) $r9;

        $z0 = 1;

        $r11 = r0.<com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.store.imap.FolderNameCodec folderNameCodec>;

     label04:
        r4 = virtualinvoke r10.<com.fsck.k9.mail.store.imap.ListResponse: java.lang.String getName()>();

        r4 = virtualinvoke $r11.<com.fsck.k9.mail.store.imap.FolderNameCodec: java.lang.String decode(java.lang.String)>(r4);

     label05:
        r12 = r4;

        $r13 = r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String pathDelimiter>;

        if $r13 != null goto label06;

        $r13 = virtualinvoke r10.<com.fsck.k9.mail.store.imap.ListResponse: java.lang.String getHierarchyDelimiter()>();

        r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String pathDelimiter> = $r13;

        r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String combinedPrefix> = null;

     label06:
        $r14 = r0.<com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.store.StoreConfig mStoreConfig>;

        $r13 = interfaceinvoke $r14.<com.fsck.k9.mail.store.StoreConfig: java.lang.String getInboxFolderName()>();

        $z1 = virtualinvoke r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r13);

        if $z1 != 0 goto label03;

        $r14 = r0.<com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.store.StoreConfig mStoreConfig>;

        $r13 = interfaceinvoke $r14.<com.fsck.k9.mail.store.StoreConfig: java.lang.String getOutboxFolderName()>();

        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z1 != 0 goto label03;

        $r13 = virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String getCombinedPrefix()>();

        $i0 = virtualinvoke $r13.<java.lang.String: int length()>();

        if $i0 <= 0 goto label08;

        $i1 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i1 < $i0 goto label07;

        r12 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>($i0);

     label07:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String getCombinedPrefix()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r13 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = virtualinvoke r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r13);

        if $z1 != 0 goto label08;

        $z0 = 0;

     label08:
        $z1 = virtualinvoke r10.<com.fsck.k9.mail.store.imap.ListResponse: boolean hasAttribute(java.lang.String)>("\\NoSelect");

        if $z1 == 0 goto label09;

        $z0 = 0;

     label09:
        if $z0 == 0 goto label03;

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r12);

        goto label03;

     label10:
        r4 = "LIST";

        goto label01;

     label11:
        $r7 = staticinvoke <com.fsck.k9.mail.store.imap.ListResponse: java.util.List parseList(java.util.List)>($r7);

        goto label02;

     label12:
        r2 := @caughtexception;

        $r5 = newarray (java.lang.Object)[1];

        r4 = virtualinvoke r10.<com.fsck.k9.mail.store.imap.ListResponse: java.lang.String getName()>();

        $r5[0] = r4;

        staticinvoke <timber.log.Timber: void w(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r2, "Folder name not correctly encoded with the UTF-7 variant  as defined by RFC 3501: %s", $r5);

        goto label03;

     label13:
        $r14 = r0.<com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.store.StoreConfig mStoreConfig>;

        r4 = interfaceinvoke $r14.<com.fsck.k9.mail.store.StoreConfig: java.lang.String getInboxFolderName()>();

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r4);

        return r3;

        catch java.nio.charset.CharacterCodingException from label04 to label05 with label12;
    }
    private com.fsck.k9.mail.store.imap.ImapConnection pollConnection()
    {
        com.fsck.k9.mail.store.imap.ImapStore r0;
        java.util.Deque $r1, $r3;
        java.lang.Object $r2;
        com.fsck.k9.mail.store.imap.ImapConnection $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapStore;

        $r1 = r0.<com.fsck.k9.mail.store.imap.ImapStore: java.util.Deque connections>;

        entermonitor $r1;

     label1:
        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapStore: java.util.Deque connections>;

        $r2 = interfaceinvoke $r3.<java.util.Deque: java.lang.Object poll()>();

        $r4 = (com.fsck.k9.mail.store.imap.ImapConnection) $r2;

        exitmonitor $r1;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
    void autoconfigureFolders(com.fsck.k9.mail.store.imap.ImapConnection) throws java.io.IOException, com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.store.imap.ImapStore r0;
        com.fsck.k9.mail.store.imap.ImapConnection $r1;
        java.nio.charset.CharacterCodingException r2;
        boolean $z0;
        java.lang.Object[] $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, $r11;
        java.util.List $r6;
        java.util.Iterator $r7;
        java.lang.Object $r8;
        com.fsck.k9.mail.store.imap.ListResponse r9;
        com.fsck.k9.mail.store.imap.FolderNameCodec $r10;
        com.fsck.k9.mail.store.StoreConfig $r12;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapStore;

        $r1 := @parameter0: com.fsck.k9.mail.store.imap.ImapConnection;

        $z0 = virtualinvoke $r1.<com.fsck.k9.mail.store.imap.ImapConnection: boolean hasCapability(java.lang.String)>("SPECIAL-USE");

        if $z0 != 0 goto label01;

        $z0 = staticinvoke <com.fsck.k9.mail.K9MailLib: boolean isDebug()>();

        if $z0 == 0 goto label13;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("No detected folder auto-configuration methods.", $r3);

        return;

     label01:
        $z0 = staticinvoke <com.fsck.k9.mail.K9MailLib: boolean isDebug()>();

        if $z0 == 0 goto label02;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Folder auto-configuration: Using RFC6154/SPECIAL-USE.", $r3);

     label02:
        $r3 = newarray (java.lang.Object)[1];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String getCombinedPrefix()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <com.fsck.k9.mail.store.imap.ImapUtility: java.lang.String encodeString(java.lang.String)>($r5);

        $r3[0] = $r5;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("LIST (SPECIAL-USE) \"\" %s", $r3);

        $r6 = virtualinvoke $r1.<com.fsck.k9.mail.store.imap.ImapConnection: java.util.List executeSimpleCommand(java.lang.String)>($r5);

        $r6 = staticinvoke <com.fsck.k9.mail.store.imap.ListResponse: java.util.List parseList(java.util.List)>($r6);

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (com.fsck.k9.mail.store.imap.ListResponse) $r8;

        $r10 = r0.<com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.store.imap.FolderNameCodec folderNameCodec>;

     label04:
        $r5 = virtualinvoke r9.<com.fsck.k9.mail.store.imap.ListResponse: java.lang.String getName()>();

        $r5 = virtualinvoke $r10.<com.fsck.k9.mail.store.imap.FolderNameCodec: java.lang.String decode(java.lang.String)>($r5);

     label05:
        $r11 = r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String pathDelimiter>;

        if $r11 != null goto label06;

        $r11 = virtualinvoke r9.<com.fsck.k9.mail.store.imap.ListResponse: java.lang.String getHierarchyDelimiter()>();

        r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String pathDelimiter> = $r11;

        r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String combinedPrefix> = null;

     label06:
        $z0 = virtualinvoke r9.<com.fsck.k9.mail.store.imap.ListResponse: boolean hasAttribute(java.lang.String)>("\\Archive");

        if $z0 != 0 goto label07;

        $z0 = virtualinvoke r9.<com.fsck.k9.mail.store.imap.ListResponse: boolean hasAttribute(java.lang.String)>("\\All");

        if $z0 == 0 goto label09;

     label07:
        $r12 = r0.<com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.store.StoreConfig mStoreConfig>;

        interfaceinvoke $r12.<com.fsck.k9.mail.store.StoreConfig: void setArchiveFolderName(java.lang.String)>($r5);

        $z0 = staticinvoke <com.fsck.k9.mail.K9MailLib: boolean isDebug()>();

        if $z0 == 0 goto label03;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r5;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Folder auto-configuration detected Archive folder: %s", $r3);

        goto label03;

     label08:
        r2 := @caughtexception;

        $r3 = newarray (java.lang.Object)[1];

        $r5 = virtualinvoke r9.<com.fsck.k9.mail.store.imap.ListResponse: java.lang.String getName()>();

        $r3[0] = $r5;

        staticinvoke <timber.log.Timber: void w(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r2, "Folder name not correctly encoded with the UTF-7 variant as defined by RFC 3501: %s", $r3);

        goto label03;

     label09:
        $z0 = virtualinvoke r9.<com.fsck.k9.mail.store.imap.ListResponse: boolean hasAttribute(java.lang.String)>("\\Drafts");

        if $z0 == 0 goto label10;

        $r12 = r0.<com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.store.StoreConfig mStoreConfig>;

        interfaceinvoke $r12.<com.fsck.k9.mail.store.StoreConfig: void setDraftsFolderName(java.lang.String)>($r5);

        $z0 = staticinvoke <com.fsck.k9.mail.K9MailLib: boolean isDebug()>();

        if $z0 == 0 goto label03;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r5;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Folder auto-configuration detected Drafts folder: %s", $r3);

        goto label03;

     label10:
        $z0 = virtualinvoke r9.<com.fsck.k9.mail.store.imap.ListResponse: boolean hasAttribute(java.lang.String)>("\\Sent");

        if $z0 == 0 goto label11;

        $r12 = r0.<com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.store.StoreConfig mStoreConfig>;

        interfaceinvoke $r12.<com.fsck.k9.mail.store.StoreConfig: void setSentFolderName(java.lang.String)>($r5);

        $z0 = staticinvoke <com.fsck.k9.mail.K9MailLib: boolean isDebug()>();

        if $z0 == 0 goto label03;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r5;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Folder auto-configuration detected Sent folder: %s", $r3);

        goto label03;

     label11:
        $z0 = virtualinvoke r9.<com.fsck.k9.mail.store.imap.ListResponse: boolean hasAttribute(java.lang.String)>("\\Junk");

        if $z0 == 0 goto label12;

        $r12 = r0.<com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.store.StoreConfig mStoreConfig>;

        interfaceinvoke $r12.<com.fsck.k9.mail.store.StoreConfig: void setSpamFolderName(java.lang.String)>($r5);

        $z0 = staticinvoke <com.fsck.k9.mail.K9MailLib: boolean isDebug()>();

        if $z0 == 0 goto label03;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r5;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Folder auto-configuration detected Spam folder: %s", $r3);

        goto label03;

     label12:
        $z0 = virtualinvoke r9.<com.fsck.k9.mail.store.imap.ListResponse: boolean hasAttribute(java.lang.String)>("\\Trash");

        if $z0 == 0 goto label03;

        $r12 = r0.<com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.store.StoreConfig mStoreConfig>;

        interfaceinvoke $r12.<com.fsck.k9.mail.store.StoreConfig: void setTrashFolderName(java.lang.String)>($r5);

        $z0 = staticinvoke <com.fsck.k9.mail.K9MailLib: boolean isDebug()>();

        if $z0 == 0 goto label03;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r5;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Folder auto-configuration detected Trash folder: %s", $r3);

        goto label03;

     label13:
        return;

        catch java.nio.charset.CharacterCodingException from label04 to label05 with label08;
    }
    public void checkSettings() throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.store.imap.ImapStore r0;
        java.io.IOException r1;
        com.fsck.k9.mail.MessagingException $r2;
        com.fsck.k9.mail.store.imap.ImapConnection $r3;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapStore;

     label1:
        $r3 = virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.store.imap.ImapConnection createImapConnection()>();

        virtualinvoke $r3.<com.fsck.k9.mail.store.imap.ImapConnection: void open()>();

        virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapStore: void autoconfigureFolders(com.fsck.k9.mail.store.imap.ImapConnection)>($r3);

        virtualinvoke $r3.<com.fsck.k9.mail.store.imap.ImapConnection: void close()>();

     label2:
        return;

     label3:
        r1 := @caughtexception;

        $r2 = new com.fsck.k9.mail.MessagingException;

        specialinvoke $r2.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to connect", r1);

        throw $r2;

        catch java.io.IOException from label1 to label2 with label3;
    }
    com.fsck.k9.mail.store.imap.ImapConnection createImapConnection()
    {
        com.fsck.k9.mail.store.imap.ImapStore r0;
        com.fsck.k9.mail.store.imap.ImapConnection $r1;
        com.fsck.k9.mail.store.imap.ImapStore$StoreImapSettings $r2;
        android.net.ConnectivityManager $r3;
        com.fsck.k9.mail.oauth.OAuth2TokenProvider $r4;
        com.fsck.k9.mail.ssl.TrustedSocketFactory $r5;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapStore;

        $r1 = new com.fsck.k9.mail.store.imap.ImapConnection;

        $r2 = new com.fsck.k9.mail.store.imap.ImapStore$StoreImapSettings;

        specialinvoke $r2.<com.fsck.k9.mail.store.imap.ImapStore$StoreImapSettings: void <init>(com.fsck.k9.mail.store.imap.ImapStore,com.fsck.k9.mail.store.imap.ImapStore$1)>(r0, null);

        $r5 = r0.<com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.ssl.TrustedSocketFactory mTrustedSocketFactory>;

        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapStore: android.net.ConnectivityManager connectivityManager>;

        $r4 = r0.<com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.oauth.OAuth2TokenProvider oauthTokenProvider>;

        specialinvoke $r1.<com.fsck.k9.mail.store.imap.ImapConnection: void <init>(com.fsck.k9.mail.store.imap.ImapSettings,com.fsck.k9.mail.ssl.TrustedSocketFactory,android.net.ConnectivityManager,com.fsck.k9.mail.oauth.OAuth2TokenProvider)>($r2, $r5, $r3, $r4);

        return $r1;
    }
    java.lang.String getCombinedPrefix()
    {
        com.fsck.k9.mail.store.imap.ImapStore r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        int $i0;
        java.lang.StringBuilder $r3;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapStore;

        $r1 = r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String combinedPrefix>;

        if $r1 != null goto label2;

        $r1 = r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String pathPrefix>;

        if $r1 == null goto label6;

        $r1 = r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String pathPrefix>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $r2 = r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String pathDelimiter>;

        if $r2 == null goto label3;

        $r2 = r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String pathDelimiter>;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

     label1:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>($r2);

        if $z0 == 0 goto label4;

        r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String combinedPrefix> = $r1;

     label2:
        $r1 = r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String combinedPrefix>;

        return $r1;

     label3:
        $r2 = "";

        goto label1;

     label4:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label5;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String combinedPrefix> = $r1;

        goto label2;

     label5:
        r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String combinedPrefix> = "";

        goto label2;

     label6:
        r0.<com.fsck.k9.mail.store.imap.ImapStore: java.lang.String combinedPrefix> = "";

        goto label2;
    }
    com.fsck.k9.mail.store.imap.ImapConnection getConnection() throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.store.imap.ImapStore r0;
        java.io.IOException r1;
        com.fsck.k9.mail.store.imap.ImapConnection $r2;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapStore;

     label1:
        $r2 = specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.store.imap.ImapConnection pollConnection()>();

        if $r2 == null goto label3;

     label2:
        virtualinvoke $r2.<com.fsck.k9.mail.store.imap.ImapConnection: java.util.List executeSimpleCommand(java.lang.String)>("NOOP");

     label3:
        if $r2 != null goto label5;

        $r2 = virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.store.imap.ImapConnection createImapConnection()>();

        return $r2;

     label4:
        r1 := @caughtexception;

        virtualinvoke $r2.<com.fsck.k9.mail.store.imap.ImapConnection: void close()>();

        goto label1;

     label5:
        return $r2;

        catch java.io.IOException from label2 to label3 with label4;
    }
    public volatile com.fsck.k9.mail.Folder getFolder(java.lang.String)
    {
        com.fsck.k9.mail.store.imap.ImapStore r0;
        java.lang.String $r1;
        com.fsck.k9.mail.store.imap.ImapFolder $r2;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapStore;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.store.imap.ImapFolder getFolder(java.lang.String)>($r1);

        return $r2;
    }
    public com.fsck.k9.mail.store.imap.ImapFolder getFolder(java.lang.String)
    {
        com.fsck.k9.mail.store.imap.ImapStore r0;
        java.lang.String $r1;
        java.util.Map $r2, $r4;
        java.lang.Object $r3;
        com.fsck.k9.mail.store.imap.ImapFolder r5;
        java.lang.Throwable $r6;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapStore;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.fsck.k9.mail.store.imap.ImapStore: java.util.Map folderCache>;

        entermonitor $r2;

     label1:
        $r4 = r0.<com.fsck.k9.mail.store.imap.ImapStore: java.util.Map folderCache>;

        $r3 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r5 = (com.fsck.k9.mail.store.imap.ImapFolder) $r3;

        if r5 != null goto label2;

        r5 = new com.fsck.k9.mail.store.imap.ImapFolder;

        specialinvoke r5.<com.fsck.k9.mail.store.imap.ImapFolder: void <init>(com.fsck.k9.mail.store.imap.ImapStore,java.lang.String)>(r0, $r1);

        $r4 = r0.<com.fsck.k9.mail.store.imap.ImapStore: java.util.Map folderCache>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r5);

     label2:
        exitmonitor $r2;

     label3:
        return r5;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r2;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }
    com.fsck.k9.mail.store.imap.FolderNameCodec getFolderNameCodec()
    {
        com.fsck.k9.mail.store.imap.ImapStore r0;
        com.fsck.k9.mail.store.imap.FolderNameCodec r1;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapStore;

        r1 = r0.<com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.store.imap.FolderNameCodec folderNameCodec>;

        return r1;
    }
    java.util.Set getPermanentFlagsIndex()
    {
        com.fsck.k9.mail.store.imap.ImapStore r0;
        java.util.Set r1;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapStore;

        r1 = r0.<com.fsck.k9.mail.store.imap.ImapStore: java.util.Set permanentFlagsIndex>;

        return r1;
    }
    public java.util.List getPersonalNamespaces(boolean) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.store.imap.ImapStore r0;
        boolean $z0;
        com.fsck.k9.mail.store.imap.ImapConnection $r1;
        java.util.Set $r2, $r5;
        com.fsck.k9.mail.store.StoreConfig $r3;
        java.util.List $r4;
        java.io.IOException $r6;
        java.lang.Exception r7;
        com.fsck.k9.mail.MessagingException $r8;
        java.lang.Throwable $r9;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapStore;

        $z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.store.imap.ImapConnection getConnection()>();

     label01:
        $r2 = specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapStore: java.util.Set listFolders(com.fsck.k9.mail.store.imap.ImapConnection,boolean)>($r1, 0);

     label02:
        if $z0 != 0 goto label06;

     label03:
        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.store.StoreConfig mStoreConfig>;

     label04:
        $z0 = interfaceinvoke $r3.<com.fsck.k9.mail.store.StoreConfig: boolean subscribedFoldersOnly()>();

     label05:
        if $z0 != 0 goto label08;

     label06:
        $r4 = specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapStore: java.util.List getFolders(java.util.Collection)>($r2);

     label07:
        virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapStore: void releaseConnection(com.fsck.k9.mail.store.imap.ImapConnection)>($r1);

        return $r4;

     label08:
        $r5 = specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapStore: java.util.Set listFolders(com.fsck.k9.mail.store.imap.ImapConnection,boolean)>($r1, 1);

        interfaceinvoke $r2.<java.util.Set: boolean retainAll(java.util.Collection)>($r5);

        $r4 = specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapStore: java.util.List getFolders(java.util.Collection)>($r2);

     label09:
        virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapStore: void releaseConnection(com.fsck.k9.mail.store.imap.ImapConnection)>($r1);

        return $r4;

     label10:
        $r6 := @caughtexception;

        r7 = $r6;

     label11:
        virtualinvoke $r1.<com.fsck.k9.mail.store.imap.ImapConnection: void close()>();

        $r8 = new com.fsck.k9.mail.MessagingException;

        specialinvoke $r8.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to get folder list.", r7);

        throw $r8;

     label12:
        $r9 := @caughtexception;

        virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapStore: void releaseConnection(com.fsck.k9.mail.store.imap.ImapConnection)>($r1);

        throw $r9;

     label13:
        $r8 := @caughtexception;

        r7 = $r8;

        goto label11;

        catch java.io.IOException from label01 to label02 with label10;
        catch java.io.IOException from label04 to label05 with label10;
        catch java.io.IOException from label06 to label07 with label10;
        catch com.fsck.k9.mail.MessagingException from label01 to label02 with label13;
        catch com.fsck.k9.mail.MessagingException from label04 to label05 with label13;
        catch com.fsck.k9.mail.MessagingException from label06 to label07 with label13;
        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.io.IOException from label08 to label09 with label10;
        catch com.fsck.k9.mail.MessagingException from label08 to label09 with label13;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label11 to label12 with label12;
    }
    public com.fsck.k9.mail.Pusher getPusher(com.fsck.k9.mail.PushReceiver)
    {
        com.fsck.k9.mail.store.imap.ImapStore r0;
        com.fsck.k9.mail.PushReceiver $r1;
        com.fsck.k9.mail.store.imap.ImapPusher $r2;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapStore;

        $r1 := @parameter0: com.fsck.k9.mail.PushReceiver;

        $r2 = new com.fsck.k9.mail.store.imap.ImapPusher;

        specialinvoke $r2.<com.fsck.k9.mail.store.imap.ImapPusher: void <init>(com.fsck.k9.mail.store.imap.ImapStore,com.fsck.k9.mail.PushReceiver)>(r0, $r1);

        return $r2;
    }
    com.fsck.k9.mail.store.StoreConfig getStoreConfig()
    {
        com.fsck.k9.mail.store.imap.ImapStore r0;
        com.fsck.k9.mail.store.StoreConfig r1;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapStore;

        r1 = r0.<com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.store.StoreConfig mStoreConfig>;

        return r1;
    }
    public boolean isCopyCapable()
    {
        com.fsck.k9.mail.store.imap.ImapStore r0;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapStore;

        return 1;
    }
    public boolean isExpungeCapable()
    {
        com.fsck.k9.mail.store.imap.ImapStore r0;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapStore;

        return 1;
    }
    public boolean isMoveCapable()
    {
        com.fsck.k9.mail.store.imap.ImapStore r0;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapStore;

        return 1;
    }
    public boolean isPushCapable()
    {
        com.fsck.k9.mail.store.imap.ImapStore r0;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapStore;

        return 1;
    }
    void releaseConnection(com.fsck.k9.mail.store.imap.ImapConnection)
    {
        com.fsck.k9.mail.store.imap.ImapStore r0;
        com.fsck.k9.mail.store.imap.ImapConnection $r1;
        java.util.Deque $r2, $r3;
        boolean $z0;
        java.lang.Throwable $r4;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapStore;

        $r1 := @parameter0: com.fsck.k9.mail.store.imap.ImapConnection;

        if $r1 == null goto label5;

        $z0 = virtualinvoke $r1.<com.fsck.k9.mail.store.imap.ImapConnection: boolean isConnected()>();

        if $z0 == 0 goto label5;

        $r2 = r0.<com.fsck.k9.mail.store.imap.ImapStore: java.util.Deque connections>;

        entermonitor $r2;

     label1:
        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapStore: java.util.Deque connections>;

        interfaceinvoke $r3.<java.util.Deque: boolean offer(java.lang.Object)>($r1);

        exitmonitor $r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
