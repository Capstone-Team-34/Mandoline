com.fsck.k9.mail.store.RemoteStore extends com.fsck.k9.mail.Store
public static final int SOCKET_CONNECT_TIMEOUT
public static final int SOCKET_READ_TIMEOUT
private static java.util.Map sStores
protected com.fsck.k9.mail.store.StoreConfig mStoreConfig
protected com.fsck.k9.mail.ssl.TrustedSocketFactory mTrustedSocketFactory
    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.fsck.k9.mail.store.RemoteStore: java.util.Map sStores> = $r0;

        return;
    }
    public void <init>(com.fsck.k9.mail.store.StoreConfig, com.fsck.k9.mail.ssl.TrustedSocketFactory)
    {
        com.fsck.k9.mail.store.RemoteStore r0;
        com.fsck.k9.mail.store.StoreConfig $r1;
        com.fsck.k9.mail.ssl.TrustedSocketFactory $r2;

        r0 := @this: com.fsck.k9.mail.store.RemoteStore;

        $r1 := @parameter0: com.fsck.k9.mail.store.StoreConfig;

        $r2 := @parameter1: com.fsck.k9.mail.ssl.TrustedSocketFactory;

        specialinvoke r0.<com.fsck.k9.mail.Store: void <init>()>();

        r0.<com.fsck.k9.mail.store.RemoteStore: com.fsck.k9.mail.store.StoreConfig mStoreConfig> = $r1;

        r0.<com.fsck.k9.mail.store.RemoteStore: com.fsck.k9.mail.ssl.TrustedSocketFactory mTrustedSocketFactory> = $r2;

        return;
    }
    public static java.lang.String createStoreUri(com.fsck.k9.mail.ServerSettings)
    {
        com.fsck.k9.mail.ServerSettings $r0;
        com.fsck.k9.mail.ServerSettings$Type $r1, $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r4;

        $r0 := @parameter0: com.fsck.k9.mail.ServerSettings;

        $r1 = <com.fsck.k9.mail.ServerSettings$Type: com.fsck.k9.mail.ServerSettings$Type IMAP>;

        $r2 = $r0.<com.fsck.k9.mail.ServerSettings: com.fsck.k9.mail.ServerSettings$Type type>;

        if $r1 != $r2 goto label1;

        $r3 = staticinvoke <com.fsck.k9.mail.store.imap.ImapStore: java.lang.String createUri(com.fsck.k9.mail.ServerSettings)>($r0);

        return $r3;

     label1:
        $r1 = <com.fsck.k9.mail.ServerSettings$Type: com.fsck.k9.mail.ServerSettings$Type POP3>;

        $r2 = $r0.<com.fsck.k9.mail.ServerSettings: com.fsck.k9.mail.ServerSettings$Type type>;

        if $r1 != $r2 goto label2;

        $r3 = staticinvoke <com.fsck.k9.mail.store.pop3.Pop3Store: java.lang.String createUri(com.fsck.k9.mail.ServerSettings)>($r0);

        return $r3;

     label2:
        $r1 = <com.fsck.k9.mail.ServerSettings$Type: com.fsck.k9.mail.ServerSettings$Type WebDAV>;

        $r2 = $r0.<com.fsck.k9.mail.ServerSettings: com.fsck.k9.mail.ServerSettings$Type type>;

        if $r1 != $r2 goto label3;

        $r3 = staticinvoke <com.fsck.k9.mail.store.webdav.WebDavStore: java.lang.String createUri(com.fsck.k9.mail.ServerSettings)>($r0);

        return $r3;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Not a valid store URI");

        throw $r4;
    }
    public static com.fsck.k9.mail.ServerSettings decodeStoreUri(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;
        com.fsck.k9.mail.store.imap.ImapStoreSettings $r1;
        com.fsck.k9.mail.ServerSettings $r2;
        com.fsck.k9.mail.store.webdav.WebDavStoreSettings $r3;
        java.lang.IllegalArgumentException $r4;

        $r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("imap");

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.store.imap.ImapStoreSettings decodeUri(java.lang.String)>($r0);

        return $r1;

     label1:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("pop3");

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <com.fsck.k9.mail.store.pop3.Pop3Store: com.fsck.k9.mail.ServerSettings decodeUri(java.lang.String)>($r0);

        return $r2;

     label2:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("webdav");

        if $z0 == 0 goto label3;

        $r3 = staticinvoke <com.fsck.k9.mail.store.webdav.WebDavStore: com.fsck.k9.mail.store.webdav.WebDavStoreSettings decodeUri(java.lang.String)>($r0);

        return $r3;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Not a valid store URI");

        throw $r4;
    }
    public static com.fsck.k9.mail.Store getInstance(android.content.Context, com.fsck.k9.mail.store.StoreConfig) throws com.fsck.k9.mail.MessagingException
    {
        android.content.Context $r0;
        com.fsck.k9.mail.store.StoreConfig $r1;
        java.lang.String $r2;
        boolean $z0;
        java.lang.Throwable $r3;
        java.util.Map $r4;
        java.lang.Object $r5;
        com.fsck.k9.mail.Store r6;
        android.net.ConnectivityManager $r7;
        java.lang.StringBuilder $r8, $r12;
        java.lang.RuntimeException $r9;
        com.fsck.k9.mail.ssl.DefaultTrustedSocketFactory $r10;
        com.fsck.k9.mail.store.imap.ImapStore $r11;
        com.fsck.k9.mail.MessagingException $r13;
        com.fsck.k9.mail.store.pop3.Pop3Store $r14;
        com.fsck.k9.mail.store.webdav.WebDavHttpClient$WebDavHttpClientFactory $r15;
        com.fsck.k9.mail.store.webdav.WebDavStore $r16;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: com.fsck.k9.mail.store.StoreConfig;

        entermonitor class "Lcom/fsck/k9/mail/store/RemoteStore;";

     label1:
        $r2 = interfaceinvoke $r1.<com.fsck.k9.mail.store.StoreConfig: java.lang.String getStoreUri()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("local");

        if $z0 == 0 goto label3;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>("Asked to get non-local Store object but given LocalStore URI");

        throw $r9;

     label2:
        $r3 := @caughtexception;

        exitmonitor class "Lcom/fsck/k9/mail/store/RemoteStore;";

        throw $r3;

     label3:
        $r4 = <com.fsck.k9.mail.store.RemoteStore: java.util.Map sStores>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r6 = (com.fsck.k9.mail.Store) $r5;

        if r6 != null goto label5;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("imap");

        if $z0 == 0 goto label6;

        $r11 = new com.fsck.k9.mail.store.imap.ImapStore;

        r6 = $r11;

        $r10 = new com.fsck.k9.mail.ssl.DefaultTrustedSocketFactory;

        specialinvoke $r10.<com.fsck.k9.mail.ssl.DefaultTrustedSocketFactory: void <init>(android.content.Context)>($r0);

        $r5 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r7 = (android.net.ConnectivityManager) $r5;

        specialinvoke $r11.<com.fsck.k9.mail.store.imap.ImapStore: void <init>(com.fsck.k9.mail.store.StoreConfig,com.fsck.k9.mail.ssl.TrustedSocketFactory,android.net.ConnectivityManager,com.fsck.k9.mail.oauth.OAuth2TokenProvider)>($r1, $r10, $r7, null);

     label4:
        if r6 == null goto label5;

        $r4 = <com.fsck.k9.mail.store.RemoteStore: java.util.Map sStores>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r6);

     label5:
        if r6 != null goto label9;

        $r13 = new com.fsck.k9.mail.MessagingException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to locate an applicable Store for ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String)>($r2);

        throw $r13;

     label6:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("pop3");

        if $z0 == 0 goto label7;

        $r14 = new com.fsck.k9.mail.store.pop3.Pop3Store;

        r6 = $r14;

        $r10 = new com.fsck.k9.mail.ssl.DefaultTrustedSocketFactory;

        specialinvoke $r10.<com.fsck.k9.mail.ssl.DefaultTrustedSocketFactory: void <init>(android.content.Context)>($r0);

        specialinvoke $r14.<com.fsck.k9.mail.store.pop3.Pop3Store: void <init>(com.fsck.k9.mail.store.StoreConfig,com.fsck.k9.mail.ssl.TrustedSocketFactory)>($r1, $r10);

        goto label4;

     label7:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("webdav");

        if $z0 == 0 goto label4;

        $r16 = new com.fsck.k9.mail.store.webdav.WebDavStore;

        r6 = $r16;

        $r15 = new com.fsck.k9.mail.store.webdav.WebDavHttpClient$WebDavHttpClientFactory;

        specialinvoke $r15.<com.fsck.k9.mail.store.webdav.WebDavHttpClient$WebDavHttpClientFactory: void <init>()>();

        specialinvoke $r16.<com.fsck.k9.mail.store.webdav.WebDavStore: void <init>(com.fsck.k9.mail.store.StoreConfig,com.fsck.k9.mail.store.webdav.WebDavHttpClient$WebDavHttpClientFactory)>($r1, $r15);

     label8:
        goto label4;

     label9:
        exitmonitor class "Lcom/fsck/k9/mail/store/RemoteStore;";

        return r6;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label8 with label2;
    }
    public static void removeInstance(com.fsck.k9.mail.store.StoreConfig)
    {
        com.fsck.k9.mail.store.StoreConfig $r0;
        java.lang.String $r1;
        boolean $z0;
        java.lang.RuntimeException $r2;
        java.util.Map $r3;

        $r0 := @parameter0: com.fsck.k9.mail.store.StoreConfig;

        $r1 = interfaceinvoke $r0.<com.fsck.k9.mail.store.StoreConfig: java.lang.String getStoreUri()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("local");

        if $z0 == 0 goto label1;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Asked to get non-local Store object but given LocalStore URI");

        throw $r2;

     label1:
        $r3 = <com.fsck.k9.mail.store.RemoteStore: java.util.Map sStores>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

        return;
    }
