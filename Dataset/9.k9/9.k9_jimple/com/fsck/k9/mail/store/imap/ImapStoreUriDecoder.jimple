com.fsck.k9.mail.store.imap.ImapStoreUriDecoder extends java.lang.Object
    void <init>()
    {
        com.fsck.k9.mail.store.imap.ImapStoreUriDecoder r0;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapStoreUriDecoder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static com.fsck.k9.mail.store.imap.ImapStoreSettings decode(java.lang.String)
    {
        java.lang.String $r0, r4, r5, r6, r7, $r10;
        java.net.URI r1;
        java.net.URISyntaxException r2;
        com.fsck.k9.mail.AuthType r3, $r15, $r16;
        boolean z0, $z1;
        com.fsck.k9.mail.ConnectionSecurity r8;
        com.fsck.k9.mail.ServerSettings$Type $r9;
        int i0, $i1;
        java.lang.String[] $r11;
        char $c2;
        com.fsck.k9.mail.store.imap.ImapStoreSettings $r12;
        java.lang.IllegalArgumentException $r13;
        java.lang.StringBuilder $r14;

        $r0 := @parameter0: java.lang.String;

        r3 = null;

        r4 = null;

        r5 = null;

        r6 = null;

        r7 = null;

        z0 = 1;

        r1 = new java.net.URI;

     label01:
        specialinvoke r1.<java.net.URI: void <init>(java.lang.String)>($r0);

     label02:
        $r0 = virtualinvoke r1.<java.net.URI: java.lang.String getScheme()>();

        $z1 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("imap");

        if $z1 == 0 goto label09;

        r8 = <com.fsck.k9.mail.ConnectionSecurity: com.fsck.k9.mail.ConnectionSecurity NONE>;

        $r9 = <com.fsck.k9.mail.ServerSettings$Type: com.fsck.k9.mail.ServerSettings$Type IMAP>;

        i0 = $r9.<com.fsck.k9.mail.ServerSettings$Type: int defaultPort>;

     label03:
        $r0 = virtualinvoke r1.<java.net.URI: java.lang.String getHost()>();

        $i1 = virtualinvoke r1.<java.net.URI: int getPort()>();

        if $i1 == -1 goto label04;

        i0 = virtualinvoke r1.<java.net.URI: int getPort()>();

     label04:
        $r10 = virtualinvoke r1.<java.net.URI: java.lang.String getUserInfo()>();

        if $r10 == null goto label05;

        $r10 = virtualinvoke r1.<java.net.URI: java.lang.String getUserInfo()>();

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $z1 = virtualinvoke $r10.<java.lang.String: boolean endsWith(java.lang.String)>(":");

        if $z1 == 0 goto label13;

        $i1 = lengthof $r11;

        if $i1 <= 1 goto label12;

        r4 = $r11[0];

        r3 = staticinvoke <com.fsck.k9.mail.AuthType: com.fsck.k9.mail.AuthType valueOf(java.lang.String)>(r4);

        r4 = $r11[1];

        r4 = staticinvoke <com.fsck.k9.mail.helper.UrlEncodingHelper: java.lang.String decodeUtf8(java.lang.String)>(r4);

     label05:
        $r10 = virtualinvoke r1.<java.net.URI: java.lang.String getPath()>();

        if $r10 == null goto label07;

        $i1 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i1 <= 1 goto label07;

        $r10 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int)>(1);

        $i1 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i1 < 2 goto label17;

        $c2 = virtualinvoke $r10.<java.lang.String: char charAt(int)>(1);

        if $c2 != 124 goto label17;

        $c2 = virtualinvoke $r10.<java.lang.String: char charAt(int)>(0);

        if $c2 != 49 goto label16;

        z0 = 1;

     label06:
        if z0 != 0 goto label07;

        r7 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int)>(2);

     label07:
        $r12 = new com.fsck.k9.mail.store.imap.ImapStoreSettings;

        specialinvoke $r12.<com.fsck.k9.mail.store.imap.ImapStoreSettings: void <init>(java.lang.String,int,com.fsck.k9.mail.ConnectionSecurity,com.fsck.k9.mail.AuthType,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)>($r0, i0, r8, r3, r4, r5, r6, z0, r7);

        return $r12;

     label08:
        r2 := @caughtexception;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("Invalid ImapStore URI", r2);

        throw $r13;

     label09:
        $z1 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("imap+tls");

        if $z1 == 0 goto label10;

        r8 = <com.fsck.k9.mail.ConnectionSecurity: com.fsck.k9.mail.ConnectionSecurity STARTTLS_REQUIRED>;

        $r9 = <com.fsck.k9.mail.ServerSettings$Type: com.fsck.k9.mail.ServerSettings$Type IMAP>;

        i0 = $r9.<com.fsck.k9.mail.ServerSettings$Type: int defaultPort>;

        goto label03;

     label10:
        $z1 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("imap+ssl");

        if $z1 == 0 goto label11;

        r8 = <com.fsck.k9.mail.ConnectionSecurity: com.fsck.k9.mail.ConnectionSecurity SSL_TLS_REQUIRED>;

        $r9 = <com.fsck.k9.mail.ServerSettings$Type: com.fsck.k9.mail.ServerSettings$Type IMAP>;

        i0 = $r9.<com.fsck.k9.mail.ServerSettings$Type: int defaultTlsPort>;

        goto label03;

     label11:
        $r13 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported protocol (");

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r0 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r13;

     label12:
        r3 = <com.fsck.k9.mail.AuthType: com.fsck.k9.mail.AuthType PLAIN>;

        r4 = $r11[0];

        r4 = staticinvoke <com.fsck.k9.mail.helper.UrlEncodingHelper: java.lang.String decodeUtf8(java.lang.String)>(r4);

        goto label05;

     label13:
        $i1 = lengthof $r11;

        if $i1 != 2 goto label14;

        r3 = <com.fsck.k9.mail.AuthType: com.fsck.k9.mail.AuthType PLAIN>;

        r5 = $r11[0];

        r4 = staticinvoke <com.fsck.k9.mail.helper.UrlEncodingHelper: java.lang.String decodeUtf8(java.lang.String)>(r5);

        r5 = $r11[1];

        r5 = staticinvoke <com.fsck.k9.mail.helper.UrlEncodingHelper: java.lang.String decodeUtf8(java.lang.String)>(r5);

        goto label05;

     label14:
        $i1 = lengthof $r11;

        if $i1 != 3 goto label05;

        r4 = $r11[0];

        $r15 = staticinvoke <com.fsck.k9.mail.AuthType: com.fsck.k9.mail.AuthType valueOf(java.lang.String)>(r4);

        r3 = $r15;

        r4 = $r11[1];

        r4 = staticinvoke <com.fsck.k9.mail.helper.UrlEncodingHelper: java.lang.String decodeUtf8(java.lang.String)>(r4);

        $r16 = <com.fsck.k9.mail.AuthType: com.fsck.k9.mail.AuthType EXTERNAL>;

        if $r16 != $r15 goto label15;

        r6 = $r11[2];

        r6 = staticinvoke <com.fsck.k9.mail.helper.UrlEncodingHelper: java.lang.String decodeUtf8(java.lang.String)>(r6);

        goto label05;

     label15:
        r5 = $r11[2];

        r5 = staticinvoke <com.fsck.k9.mail.helper.UrlEncodingHelper: java.lang.String decodeUtf8(java.lang.String)>(r5);

        goto label05;

     label16:
        z0 = 0;

        goto label06;

     label17:
        $i1 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i1 <= 0 goto label07;

        r7 = $r10;

        z0 = 0;

        goto label07;

        catch java.net.URISyntaxException from label01 to label02 with label08;
    }
