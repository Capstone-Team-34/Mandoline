com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock$1 extends java.util.TimerTask
final com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock this$1
    void <init>(com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock)
    {
        com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock$1 r0;
        com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock $r1;

        r0 := @this: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock$1;

        $r1 := @parameter0: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock;

        r0.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock$1: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock this$1> = $r1;

        specialinvoke r0.<java.util.TimerTask: void <init>()>();

        return;
    }
    public void run()
    {
        com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock$1 r0;
        com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock $r1;
        java.lang.Long $r2;
        long $l0, $l2;
        java.lang.Object[] $r3;
        java.lang.String $r4;
        int $i1;
        java.lang.Integer $r5;

        r0 := @this: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock$1;

        $r1 = r0.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock$1: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock this$1>;

        $r2 = $r1.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock: java.lang.Long startTime>;

        if $r2 == null goto label1;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r3 = newarray (java.lang.Object)[4];

        $r1 = r0.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock$1: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock this$1>;

        $r4 = $r1.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock: java.lang.String tag>;

        $r3[0] = $r4;

        $r1 = r0.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock$1: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock this$1>;

        $i1 = $r1.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock: int id>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3[1] = $r5;

        $l0 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

        $r1 = r0.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock$1: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock this$1>;

        $r2 = $r1.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock: java.lang.Long startTime>;

        $l2 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

        $l0 = $l0 - $l2;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r3[2] = $r2;

        $r1 = r0.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock$1: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock this$1>;

        $r2 = $r1.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock: java.lang.Long timeout>;

        $r3[3] = $r2;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("TracingWakeLock for tag %s / id %d: has been active for %d ms, timeout = %d ms", $r3);

        return;

     label1:
        $r3 = newarray (java.lang.Object)[3];

        $r1 = r0.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock$1: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock this$1>;

        $r4 = $r1.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock: java.lang.String tag>;

        $r3[0] = $r4;

        $r1 = r0.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock$1: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock this$1>;

        $i1 = $r1.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock: int id>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3[1] = $r5;

        $r1 = r0.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock$1: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock this$1>;

        $r2 = $r1.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock: java.lang.Long timeout>;

        $r3[2] = $r2;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("TracingWakeLock for tag %s / id %d: still active, timeout = %d ms", $r3);

        return;
    }
