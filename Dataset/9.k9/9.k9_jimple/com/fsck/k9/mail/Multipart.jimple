com.fsck.k9.mail.Multipart extends java.lang.Object implements com.fsck.k9.mail.Body
private com.fsck.k9.mail.Part mParent
private final java.util.List mParts
    public void <init>()
    {
        com.fsck.k9.mail.Multipart r0;
        java.util.ArrayList $r1;

        r0 := @this: com.fsck.k9.mail.Multipart;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.fsck.k9.mail.Multipart: java.util.List mParts> = $r1;

        return;
    }
    public void addBodyPart(com.fsck.k9.mail.BodyPart)
    {
        com.fsck.k9.mail.Multipart r0;
        com.fsck.k9.mail.BodyPart $r1;
        java.util.List $r2;

        r0 := @this: com.fsck.k9.mail.Multipart;

        $r1 := @parameter0: com.fsck.k9.mail.BodyPart;

        $r2 = r0.<com.fsck.k9.mail.Multipart: java.util.List mParts>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        virtualinvoke $r1.<com.fsck.k9.mail.BodyPart: void setParent(com.fsck.k9.mail.Multipart)>(r0);

        return;
    }
    public com.fsck.k9.mail.BodyPart getBodyPart(int)
    {
        com.fsck.k9.mail.Multipart r0;
        int $i0;
        java.lang.Object $r1;
        java.util.List $r2;
        com.fsck.k9.mail.BodyPart $r3;

        r0 := @this: com.fsck.k9.mail.Multipart;

        $i0 := @parameter0: int;

        $r2 = r0.<com.fsck.k9.mail.Multipart: java.util.List mParts>;

        $r1 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (com.fsck.k9.mail.BodyPart) $r1;

        return $r3;
    }
    public java.util.List getBodyParts()
    {
        com.fsck.k9.mail.Multipart r0;
        java.util.List $r1;

        r0 := @this: com.fsck.k9.mail.Multipart;

        $r1 = r0.<com.fsck.k9.mail.Multipart: java.util.List mParts>;

        $r1 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r1;
    }
public abstract java.lang.String getBoundary() { 
// no body
} 
    public int getCount()
    {
        com.fsck.k9.mail.Multipart r0;
        int $i0;
        java.util.List $r1;

        r0 := @this: com.fsck.k9.mail.Multipart;

        $r1 = r0.<com.fsck.k9.mail.Multipart: java.util.List mParts>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }
public abstract byte[] getEpilogue() { 
// no body
} 
public abstract java.lang.String getMimeType() { 
// no body
} 
    public com.fsck.k9.mail.Part getParent()
    {
        com.fsck.k9.mail.Multipart r0;
        com.fsck.k9.mail.Part r1;

        r0 := @this: com.fsck.k9.mail.Multipart;

        r1 = r0.<com.fsck.k9.mail.Multipart: com.fsck.k9.mail.Part mParent>;

        return r1;
    }
public abstract byte[] getPreamble() { 
// no body
} 
    public void setCharset(java.lang.String) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.Multipart r0;
        java.lang.String $r1;
        java.util.List $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.fsck.k9.mail.BodyPart r4;
        com.fsck.k9.mail.Body $r5;
        com.fsck.k9.mail.internet.TextBody r6;

        r0 := @this: com.fsck.k9.mail.Multipart;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.fsck.k9.mail.Multipart: java.util.List mParts>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.fsck.k9.mail.Multipart: java.util.List mParts>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        r4 = (com.fsck.k9.mail.BodyPart) $r3;

        $r5 = virtualinvoke r4.<com.fsck.k9.mail.BodyPart: com.fsck.k9.mail.Body getBody()>();

        $z0 = $r5 instanceof com.fsck.k9.mail.internet.TextBody;

        if $z0 == 0 goto label2;

        staticinvoke <com.fsck.k9.mail.internet.CharsetSupport: void setCharset(java.lang.String,com.fsck.k9.mail.Part)>($r1, r4);

        r6 = (com.fsck.k9.mail.internet.TextBody) $r5;

        virtualinvoke r6.<com.fsck.k9.mail.internet.TextBody: void setCharset(java.lang.String)>($r1);

     label2:
        return;
    }
    public void setEncoding(java.lang.String) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.Multipart r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        com.fsck.k9.mail.MessagingException $r3;

        r0 := @this: com.fsck.k9.mail.Multipart;

        $r1 := @parameter0: java.lang.String;

        $r2 = "7bit";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 != 0 goto label1;

        $r2 = "8bit";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 != 0 goto label1;

        $r3 = new com.fsck.k9.mail.MessagingException;

        specialinvoke $r3.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String)>("Incompatible content-transfer-encoding for a multipart/* body");

        throw $r3;

     label1:
        return;
    }
    public void setParent(com.fsck.k9.mail.Part)
    {
        com.fsck.k9.mail.Multipart r0;
        com.fsck.k9.mail.Part $r1;

        r0 := @this: com.fsck.k9.mail.Multipart;

        $r1 := @parameter0: com.fsck.k9.mail.Part;

        r0.<com.fsck.k9.mail.Multipart: com.fsck.k9.mail.Part mParent> = $r1;

        return;
    }
