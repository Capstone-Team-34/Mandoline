com.fsck.k9.mail.internet.BinaryTempFileMessageBody extends com.fsck.k9.mail.internet.BinaryTempFileBody implements com.fsck.k9.mail.Body
    public void <init>(java.lang.String)
    {
        com.fsck.k9.mail.internet.BinaryTempFileMessageBody r0;
        java.lang.String $r1;

        r0 := @this: com.fsck.k9.mail.internet.BinaryTempFileMessageBody;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.fsck.k9.mail.internet.BinaryTempFileBody: void <init>(java.lang.String)>($r1);

        return;
    }
    public void setEncoding(java.lang.String) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.internet.BinaryTempFileMessageBody r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        com.fsck.k9.mail.MessagingException $r3;

        r0 := @this: com.fsck.k9.mail.internet.BinaryTempFileMessageBody;

        $r1 := @parameter0: java.lang.String;

        $r2 = "7bit";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 != 0 goto label1;

        $r2 = "8bit";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 != 0 goto label1;

        $r3 = new com.fsck.k9.mail.MessagingException;

        specialinvoke $r3.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String)>("Incompatible content-transfer-encoding for a message/rfc822 body");

        throw $r3;

     label1:
        r0.<com.fsck.k9.mail.internet.BinaryTempFileMessageBody: java.lang.String mEncoding> = $r1;

        return;
    }
