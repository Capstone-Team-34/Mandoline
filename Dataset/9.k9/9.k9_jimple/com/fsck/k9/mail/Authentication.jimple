com.fsck.k9.mail.Authentication extends java.lang.Object
private static final java.lang.String US_ASCII
private static final java.lang.String XOAUTH_FORMAT
    public void <init>()
    {
        com.fsck.k9.mail.Authentication r0;

        r0 := @this: com.fsck.k9.mail.Authentication;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static java.lang.String computeCramMd5(java.lang.String, java.lang.String, java.lang.String) throws com.fsck.k9.mail.MessagingException
    {
        java.lang.String $r0, $r1, $r2;
        byte[] $r3;
        com.fsck.k9.mail.MessagingException r4;
        java.lang.Exception r5;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

     label1:
        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>("US-ASCII");

        $r3 = staticinvoke <com.fsck.k9.mail.Authentication: byte[] computeCramMd5Bytes(java.lang.String,java.lang.String,byte[])>($r0, $r1, $r3);

     label2:
        $r0 = new java.lang.String;

     label3:
        specialinvoke $r0.<java.lang.String: void <init>(byte[],java.lang.String)>($r3, "US-ASCII");

     label4:
        return $r0;

     label5:
        r4 := @caughtexception;

        throw r4;

     label6:
        r5 := @caughtexception;

        r4 = new com.fsck.k9.mail.MessagingException;

        specialinvoke r4.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String,java.lang.Throwable)>("This shouldn\'t happen", r5);

        throw r4;

        catch com.fsck.k9.mail.MessagingException from label1 to label2 with label5;
        catch com.fsck.k9.mail.MessagingException from label3 to label4 with label5;
        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Exception from label3 to label4 with label6;
    }
    public static byte[] computeCramMd5Bytes(java.lang.String, java.lang.String, byte[]) throws com.fsck.k9.mail.MessagingException
    {
        java.lang.String $r0, $r1;
        byte[] $r2, r4, r5, r6;
        java.lang.Exception r3;
        java.security.MessageDigest $r7;
        int $i0, $i1;
        byte $b2;
        java.lang.StringBuilder $r8;
        com.fsck.k9.mail.MessagingException $r9;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: byte[];

     label01:
        $r2 = staticinvoke <com.fsck.k9.mail.filter.Base64: byte[] decodeBase64(byte[])>($r2);

        r5 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

     label02:
        r6 = r5;

     label03:
        $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        $i0 = lengthof r5;

     label04:
        if $i0 <= 64 goto label07;

     label05:
        r5 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest(byte[])>(r5);

     label06:
        r6 = r5;

     label07:
        r4 = newarray (byte)[64];

        r5 = newarray (byte)[64];

        $i0 = lengthof r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r6, 0, r4, 0, $i0);

        $i0 = lengthof r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r6, 0, r5, 0, $i0);

     label08:
        $i0 = 0;

     label09:
        $i1 = lengthof r4;

     label10:
        if $i0 >= $i1 goto label15;

     label11:
        $b2 = r4[$i0];

     label12:
        $i1 = $b2 ^ 54;

        $b2 = (byte) $i1;

     label13:
        r4[$i0] = $b2;

     label14:
        $i0 = $i0 + 1;

        goto label09;

     label15:
        $i0 = 0;

     label16:
        $i1 = lengthof r5;

     label17:
        if $i0 >= $i1 goto label22;

     label18:
        $b2 = r5[$i0];

     label19:
        $i1 = $b2 ^ 92;

        $b2 = (byte) $i1;

     label20:
        r5[$i0] = $b2;

     label21:
        $i0 = $i0 + 1;

        goto label16;

     label22:
        virtualinvoke $r7.<java.security.MessageDigest: void update(byte[])>(r4);

        $r2 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest(byte[])>($r2);

        virtualinvoke $r7.<java.security.MessageDigest: void update(byte[])>(r5);

        $r2 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest(byte[])>($r2);

     label23:
        $r8 = new java.lang.StringBuilder;

     label24:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r0 = staticinvoke <com.fsck.k9.mail.filter.Hex: java.lang.String encodeHex(byte[])>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r2 = staticinvoke <com.fsck.k9.mail.filter.Base64: byte[] encodeBase64(byte[])>($r2);

     label25:
        return $r2;

     label26:
        r3 := @caughtexception;

        $r9 = new com.fsck.k9.mail.MessagingException;

        specialinvoke $r9.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String,java.lang.Throwable)>("Something went wrong during CRAM-MD5 computation", r3);

        throw $r9;

        catch java.lang.Exception from label01 to label02 with label26;
        catch java.lang.Exception from label03 to label04 with label26;
        catch java.lang.Exception from label05 to label06 with label26;
        catch java.lang.Exception from label07 to label08 with label26;
        catch java.lang.Exception from label09 to label10 with label26;
        catch java.lang.Exception from label11 to label12 with label26;
        catch java.lang.Exception from label13 to label14 with label26;
        catch java.lang.Exception from label16 to label17 with label26;
        catch java.lang.Exception from label18 to label19 with label26;
        catch java.lang.Exception from label20 to label21 with label26;
        catch java.lang.Exception from label22 to label23 with label26;
        catch java.lang.Exception from label24 to label25 with label26;
    }
    public static java.lang.String computeXoauth(java.lang.String, java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.lang.String $r0, $r1;
        java.lang.Object[] $r2;
        byte[] $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = $r0;

        $r2[1] = $r1;

        $r0 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("user=%1s\u0001auth=Bearer %2s\u0001\u0001", $r2);

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r3 = staticinvoke <com.fsck.k9.mail.filter.Base64: byte[] encodeBase64(byte[])>($r3);

        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(byte[],java.lang.String)>($r3, "US-ASCII");

        return $r0;
    }
