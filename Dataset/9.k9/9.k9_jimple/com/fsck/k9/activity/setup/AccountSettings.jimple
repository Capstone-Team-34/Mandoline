com.fsck.k9.activity.setup.AccountSettings extends com.fsck.k9.activity.K9PreferenceActivity
private static final int ACTIVITY_MANAGE_IDENTITIES
private static final int DIALOG_COLOR_PICKER_ACCOUNT
private static final int DIALOG_COLOR_PICKER_LED
private static final java.lang.String EXTRA_ACCOUNT
private static final java.lang.String PREFERENCE_ALWAYS_SHOW_CC_BCC
private static final java.lang.String PREFERENCE_ARCHIVE_FOLDER
private static final java.lang.String PREFERENCE_AUTO_EXPAND_FOLDER
private static final java.lang.String PREFERENCE_CATEGORY_FOLDERS
private static final java.lang.String PREFERENCE_CHIP_COLOR
private static final java.lang.String PREFERENCE_CLOUD_SEARCH_ENABLED
private static final java.lang.String PREFERENCE_COMPOSITION
private static final java.lang.String PREFERENCE_CRYPTO
private static final java.lang.String PREFERENCE_CRYPTO_KEY
private static final java.lang.String PREFERENCE_DEFAULT
private static final java.lang.String PREFERENCE_DEFAULT_QUOTED_TEXT_SHOWN
private static final java.lang.String PREFERENCE_DELETE_POLICY
private static final java.lang.String PREFERENCE_DESCRIPTION
private static final java.lang.String PREFERENCE_DISPLAY_COUNT
private static final java.lang.String PREFERENCE_DISPLAY_MODE
private static final java.lang.String PREFERENCE_DRAFTS_FOLDER
private static final java.lang.String PREFERENCE_EXPUNGE_POLICY
private static final java.lang.String PREFERENCE_FREQUENCY
private static final java.lang.String PREFERENCE_IDLE_REFRESH_PERIOD
private static final java.lang.String PREFERENCE_INCOMING
private static final java.lang.String PREFERENCE_LED_COLOR
private static final java.lang.String PREFERENCE_LOCAL_STORAGE_PROVIDER
private static final java.lang.String PREFERENCE_MANAGE_IDENTITIES
private static final java.lang.String PREFERENCE_MARK_MESSAGE_AS_READ_ON_VIEW
private static final java.lang.String PREFERENCE_MAX_PUSH_FOLDERS
private static final java.lang.String PREFERENCE_MESSAGE_AGE
private static final java.lang.String PREFERENCE_MESSAGE_FORMAT
private static final java.lang.String PREFERENCE_MESSAGE_READ_RECEIPT
private static final java.lang.String PREFERENCE_MESSAGE_SIZE
private static final java.lang.String PREFERENCE_NOTIFICATION_LED
private static final java.lang.String PREFERENCE_NOTIFICATION_OPENS_UNREAD
private static final java.lang.String PREFERENCE_NOTIFY
private static final java.lang.String PREFERENCE_NOTIFY_CONTACTS_MAIL_ONLY
private static final java.lang.String PREFERENCE_NOTIFY_NEW_MAIL_MODE
private static final java.lang.String PREFERENCE_NOTIFY_SELF
private static final java.lang.String PREFERENCE_NOTIFY_SYNC
private static final java.lang.String PREFERENCE_OUTGOING
private static final java.lang.String PREFERENCE_PUSH_MODE
private static final java.lang.String PREFERENCE_PUSH_POLL_ON_CONNECT
private static final java.lang.String PREFERENCE_QUOTE_PREFIX
private static final java.lang.String PREFERENCE_QUOTE_STYLE
private static final java.lang.String PREFERENCE_REMOTE_SEARCH_FULL_TEXT
private static final java.lang.String PREFERENCE_REMOTE_SEARCH_NUM_RESULTS
private static final java.lang.String PREFERENCE_REPLY_AFTER_QUOTE
private static final java.lang.String PREFERENCE_RINGTONE
private static final java.lang.String PREFERENCE_SCREEN_COMPOSING
private static final java.lang.String PREFERENCE_SCREEN_INCOMING
private static final java.lang.String PREFERENCE_SCREEN_MAIN
private static final java.lang.String PREFERENCE_SCREEN_PUSH_ADVANCED
private static final java.lang.String PREFERENCE_SCREEN_SEARCH
private static final java.lang.String PREFERENCE_SEARCHABLE_FOLDERS
private static final java.lang.String PREFERENCE_SENT_FOLDER
private static final java.lang.String PREFERENCE_SHOW_PICTURES
private static final java.lang.String PREFERENCE_SPAM_FOLDER
private static final java.lang.String PREFERENCE_STRIP_SIGNATURE
private static final java.lang.String PREFERENCE_SYNC_MODE
private static final java.lang.String PREFERENCE_SYNC_REMOTE_DELETIONS
private static final java.lang.String PREFERENCE_TARGET_MODE
private static final java.lang.String PREFERENCE_TRASH_FOLDER
private static final java.lang.String PREFERENCE_VIBRATE
private static final java.lang.String PREFERENCE_VIBRATE_PATTERN
private static final java.lang.String PREFERENCE_VIBRATE_TIMES
private static final int SELECT_AUTO_EXPAND_FOLDER
private com.fsck.k9.Account account
private android.preference.CheckBoxPreference accountDefault
private android.preference.CheckBoxPreference accountDefaultQuotedTextShown
private android.preference.EditTextPreference accountDescription
private android.preference.CheckBoxPreference accountLedEnabled
private android.preference.CheckBoxPreference accountNotify
private android.preference.CheckBoxPreference accountNotifyContactsMailOnly
private android.preference.ListPreference accountNotifyNewMailMode
private android.preference.CheckBoxPreference accountNotifySelf
private android.preference.CheckBoxPreference accountNotifySync
private android.preference.EditTextPreference accountQuotePrefix
private android.preference.RingtonePreference accountRingtone
private android.preference.ListPreference accountShowPictures
private android.preference.CheckBoxPreference accountVibrateEnabled
private android.preference.ListPreference accountVibratePattern
private android.preference.ListPreference accountVibrateTimes
private android.preference.CheckBoxPreference alwaysShowCcBcc
private android.preference.ListPreference archiveFolder
private android.preference.ListPreference autoExpandFolder
private android.preference.ListPreference checkFrequency
private android.preference.Preference chipColor
private android.preference.CheckBoxPreference cloudSearchEnabled
private android.preference.PreferenceScreen composingScreen
private android.preference.ListPreference deletePolicy
private android.preference.ListPreference displayCount
private android.preference.ListPreference displayMode
private android.preference.ListPreference draftsFolder
private android.preference.ListPreference expungePolicy
private boolean hasPgpCrypto
private android.preference.ListPreference idleRefreshPeriod
private boolean incomingChanged
private boolean isExpungeCapable
private boolean isMoveCapable
private boolean isPushCapable
private boolean isSeenFlagSupported
private android.preference.Preference ledColor
private android.preference.ListPreference localStorageProvider
private android.preference.ListPreference mMaxPushFolders
private android.preference.PreferenceScreen mainScreen
private android.preference.CheckBoxPreference markMessageAsReadOnView
private android.preference.ListPreference messageAge
private android.preference.ListPreference messageFormat
private android.preference.CheckBoxPreference messageReadReceipt
private android.preference.ListPreference messageSize
private android.preference.CheckBoxPreference notificationOpensUnread
private org.openintents.openpgp.util.OpenPgpKeyPreference pgpCryptoKey
private android.preference.CheckBoxPreference pgpSupportSignOnly
private android.preference.ListPreference pushMode
private android.preference.CheckBoxPreference pushPollOnConnect
private android.preference.ListPreference quoteStyle
private android.preference.ListPreference remoteSearchNumResults
private android.preference.CheckBoxPreference replyAfterQuote
private android.preference.PreferenceScreen searchScreen
private android.preference.ListPreference searchableFolders
private android.preference.ListPreference sentFolder
private android.preference.ListPreference spamFolder
private android.preference.CheckBoxPreference stripSignature
private android.preference.ListPreference syncMode
private android.preference.CheckBoxPreference syncRemoteDeletions
private android.preference.ListPreference targetMode
private android.preference.ListPreference trashFolder
    public void <init>()
    {
        com.fsck.k9.activity.setup.AccountSettings r0;

        r0 := @this: com.fsck.k9.activity.setup.AccountSettings;

        specialinvoke r0.<com.fsck.k9.activity.K9PreferenceActivity: void <init>()>();

        r0.<com.fsck.k9.activity.setup.AccountSettings: boolean isMoveCapable> = 0;

        r0.<com.fsck.k9.activity.setup.AccountSettings: boolean isPushCapable> = 0;

        r0.<com.fsck.k9.activity.setup.AccountSettings: boolean isExpungeCapable> = 0;

        r0.<com.fsck.k9.activity.setup.AccountSettings: boolean isSeenFlagSupported> = 0;

        r0.<com.fsck.k9.activity.setup.AccountSettings: boolean incomingChanged> = 0;

        r0.<com.fsck.k9.activity.setup.AccountSettings: boolean hasPgpCrypto> = 0;

        return;
    }
    static android.preference.EditTextPreference access$000(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.EditTextPreference r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.EditTextPreference accountDescription>;

        return r1;
    }
    static android.preference.ListPreference access$100(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference messageFormat>;

        return r1;
    }
    static android.preference.ListPreference access$1000(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference deletePolicy>;

        return r1;
    }
    static android.preference.ListPreference access$1100(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference expungePolicy>;

        return r1;
    }
    static android.preference.ListPreference access$1200(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference searchableFolders>;

        return r1;
    }
    static android.preference.ListPreference access$1300(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference displayCount>;

        return r1;
    }
    static android.preference.ListPreference access$1400(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference messageAge>;

        return r1;
    }
    static android.preference.ListPreference access$1500(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference messageSize>;

        return r1;
    }
    static android.preference.ListPreference access$1600(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference accountShowPictures>;

        return r1;
    }
    static android.preference.ListPreference access$1700(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference localStorageProvider>;

        return r1;
    }
    static void access$1800(com.fsck.k9.activity.setup.AccountSettings, java.lang.String)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        java.lang.String $r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        $r1 := @parameter1: java.lang.String;

        specialinvoke $r0.<com.fsck.k9.activity.setup.AccountSettings: void updateRemoteSearchLimit(java.lang.String)>($r1);

        return;
    }
    static android.preference.ListPreference access$1900(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference idleRefreshPeriod>;

        return r1;
    }
    static android.preference.EditTextPreference access$200(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.EditTextPreference r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.EditTextPreference accountQuotePrefix>;

        return r1;
    }
    static android.preference.ListPreference access$2000(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference mMaxPushFolders>;

        return r1;
    }
    static android.preference.ListPreference access$2100(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference pushMode>;

        return r1;
    }
    static android.preference.ListPreference access$2200(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference accountNotifyNewMailMode>;

        return r1;
    }
    static android.preference.ListPreference access$2300(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference accountVibratePattern>;

        return r1;
    }
    static void access$2400(com.fsck.k9.activity.setup.AccountSettings, android.preference.Preference)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.Preference $r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        $r1 := @parameter1: android.preference.Preference;

        specialinvoke $r0.<com.fsck.k9.activity.setup.AccountSettings: void doVibrateTest(android.preference.Preference)>($r1);

        return;
    }
    static android.preference.ListPreference access$2500(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference accountVibrateTimes>;

        return r1;
    }
    static void access$2700(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        specialinvoke $r0.<com.fsck.k9.activity.setup.AccountSettings: void onCompositionSettings()>();

        return;
    }
    static void access$2800(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        specialinvoke $r0.<com.fsck.k9.activity.setup.AccountSettings: void onManageIdentities()>();

        return;
    }
    static boolean access$2902(com.fsck.k9.activity.setup.AccountSettings, boolean)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        boolean $z0;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        $z0 := @parameter1: boolean;

        $r0.<com.fsck.k9.activity.setup.AccountSettings: boolean incomingChanged> = $z0;

        return $z0;
    }
    static android.preference.ListPreference access$300(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference quoteStyle>;

        return r1;
    }
    static void access$3000(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        specialinvoke $r0.<com.fsck.k9.activity.setup.AccountSettings: void onIncomingSettings()>();

        return;
    }
    static void access$3100(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        specialinvoke $r0.<com.fsck.k9.activity.setup.AccountSettings: void onOutgoingSettings()>();

        return;
    }
    static org.openintents.openpgp.util.OpenPgpKeyPreference access$3200(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        org.openintents.openpgp.util.OpenPgpKeyPreference r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: org.openintents.openpgp.util.OpenPgpKeyPreference pgpCryptoKey>;

        return r1;
    }
    static com.fsck.k9.Account access$3300(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        com.fsck.k9.Account r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        return r1;
    }
    static android.preference.ListPreference access$3400(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference autoExpandFolder>;

        return r1;
    }
    static android.preference.ListPreference access$3402(com.fsck.k9.activity.setup.AccountSettings, android.preference.ListPreference)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference $r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        $r1 := @parameter1: android.preference.ListPreference;

        $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference autoExpandFolder> = $r1;

        return $r1;
    }
    static android.preference.ListPreference access$3500(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference archiveFolder>;

        return r1;
    }
    static android.preference.ListPreference access$3502(com.fsck.k9.activity.setup.AccountSettings, android.preference.ListPreference)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference $r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        $r1 := @parameter1: android.preference.ListPreference;

        $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference archiveFolder> = $r1;

        return $r1;
    }
    static android.preference.ListPreference access$3600(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference draftsFolder>;

        return r1;
    }
    static android.preference.ListPreference access$3602(com.fsck.k9.activity.setup.AccountSettings, android.preference.ListPreference)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference $r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        $r1 := @parameter1: android.preference.ListPreference;

        $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference draftsFolder> = $r1;

        return $r1;
    }
    static android.preference.ListPreference access$3700(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference sentFolder>;

        return r1;
    }
    static android.preference.ListPreference access$3702(com.fsck.k9.activity.setup.AccountSettings, android.preference.ListPreference)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference $r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        $r1 := @parameter1: android.preference.ListPreference;

        $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference sentFolder> = $r1;

        return $r1;
    }
    static android.preference.ListPreference access$3800(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference spamFolder>;

        return r1;
    }
    static android.preference.ListPreference access$3802(com.fsck.k9.activity.setup.AccountSettings, android.preference.ListPreference)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference $r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        $r1 := @parameter1: android.preference.ListPreference;

        $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference spamFolder> = $r1;

        return $r1;
    }
    static android.preference.ListPreference access$3900(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference trashFolder>;

        return r1;
    }
    static android.preference.ListPreference access$3902(com.fsck.k9.activity.setup.AccountSettings, android.preference.ListPreference)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference $r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        $r1 := @parameter1: android.preference.ListPreference;

        $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference trashFolder> = $r1;

        return $r1;
    }
    static android.preference.PreferenceScreen access$400(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.PreferenceScreen r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.PreferenceScreen composingScreen>;

        return r1;
    }
    static boolean access$4000(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        boolean z0;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        z0 = $r0.<com.fsck.k9.activity.setup.AccountSettings: boolean isMoveCapable>;

        return z0;
    }
    static void access$4100(com.fsck.k9.activity.setup.AccountSettings, android.preference.ListPreference, java.lang.String, java.lang.CharSequence[], java.lang.CharSequence[])
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference $r1;
        java.lang.String $r2;
        java.lang.CharSequence[] $r3, $r4;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        $r1 := @parameter1: android.preference.ListPreference;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.CharSequence[];

        $r4 := @parameter4: java.lang.CharSequence[];

        virtualinvoke $r0.<com.fsck.k9.activity.setup.AccountSettings: void initListPreference(android.preference.ListPreference,java.lang.String,java.lang.CharSequence[],java.lang.CharSequence[])>($r1, $r2, $r3, $r4);

        return;
    }
    static void access$4200(com.fsck.k9.activity.setup.AccountSettings, android.preference.ListPreference, java.lang.String, java.lang.CharSequence[], java.lang.CharSequence[])
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference $r1;
        java.lang.String $r2;
        java.lang.CharSequence[] $r3, $r4;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        $r1 := @parameter1: android.preference.ListPreference;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.CharSequence[];

        $r4 := @parameter4: java.lang.CharSequence[];

        virtualinvoke $r0.<com.fsck.k9.activity.setup.AccountSettings: void initListPreference(android.preference.ListPreference,java.lang.String,java.lang.CharSequence[],java.lang.CharSequence[])>($r1, $r2, $r3, $r4);

        return;
    }
    static void access$4300(com.fsck.k9.activity.setup.AccountSettings, android.preference.ListPreference, java.lang.String, java.lang.CharSequence[], java.lang.CharSequence[])
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference $r1;
        java.lang.String $r2;
        java.lang.CharSequence[] $r3, $r4;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        $r1 := @parameter1: android.preference.ListPreference;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.CharSequence[];

        $r4 := @parameter4: java.lang.CharSequence[];

        virtualinvoke $r0.<com.fsck.k9.activity.setup.AccountSettings: void initListPreference(android.preference.ListPreference,java.lang.String,java.lang.CharSequence[],java.lang.CharSequence[])>($r1, $r2, $r3, $r4);

        return;
    }
    static void access$4400(com.fsck.k9.activity.setup.AccountSettings, android.preference.ListPreference, java.lang.String, java.lang.CharSequence[], java.lang.CharSequence[])
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference $r1;
        java.lang.String $r2;
        java.lang.CharSequence[] $r3, $r4;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        $r1 := @parameter1: android.preference.ListPreference;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.CharSequence[];

        $r4 := @parameter4: java.lang.CharSequence[];

        virtualinvoke $r0.<com.fsck.k9.activity.setup.AccountSettings: void initListPreference(android.preference.ListPreference,java.lang.String,java.lang.CharSequence[],java.lang.CharSequence[])>($r1, $r2, $r3, $r4);

        return;
    }
    static void access$4500(com.fsck.k9.activity.setup.AccountSettings, android.preference.ListPreference, java.lang.String, java.lang.CharSequence[], java.lang.CharSequence[])
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference $r1;
        java.lang.String $r2;
        java.lang.CharSequence[] $r3, $r4;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        $r1 := @parameter1: android.preference.ListPreference;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.CharSequence[];

        $r4 := @parameter4: java.lang.CharSequence[];

        virtualinvoke $r0.<com.fsck.k9.activity.setup.AccountSettings: void initListPreference(android.preference.ListPreference,java.lang.String,java.lang.CharSequence[],java.lang.CharSequence[])>($r1, $r2, $r3, $r4);

        return;
    }
    static void access$4600(com.fsck.k9.activity.setup.AccountSettings, android.preference.ListPreference, java.lang.String, java.lang.CharSequence[], java.lang.CharSequence[])
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference $r1;
        java.lang.String $r2;
        java.lang.CharSequence[] $r3, $r4;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        $r1 := @parameter1: android.preference.ListPreference;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.CharSequence[];

        $r4 := @parameter4: java.lang.CharSequence[];

        virtualinvoke $r0.<com.fsck.k9.activity.setup.AccountSettings: void initListPreference(android.preference.ListPreference,java.lang.String,java.lang.CharSequence[],java.lang.CharSequence[])>($r1, $r2, $r3, $r4);

        return;
    }
    static android.preference.CheckBoxPreference access$500(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.CheckBoxPreference r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference replyAfterQuote>;

        return r1;
    }
    static android.preference.ListPreference access$600(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference checkFrequency>;

        return r1;
    }
    static android.preference.ListPreference access$700(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference displayMode>;

        return r1;
    }
    static android.preference.ListPreference access$800(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference syncMode>;

        return r1;
    }
    static android.preference.ListPreference access$900(com.fsck.k9.activity.setup.AccountSettings)
    {
        com.fsck.k9.activity.setup.AccountSettings $r0;
        android.preference.ListPreference r1;

        $r0 := @parameter0: com.fsck.k9.activity.setup.AccountSettings;

        r1 = $r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference targetMode>;

        return r1;
    }
    public static void actionSettings(android.content.Context, com.fsck.k9.Account)
    {
        android.content.Context $r0;
        com.fsck.k9.Account $r1;
        android.content.Intent r2;
        java.lang.String $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: com.fsck.k9.Account;

        r2 = new android.content.Intent;

        specialinvoke r2.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r0, class "Lcom/fsck/k9/activity/setup/AccountSettings;");

        $r3 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getUuid()>();

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("account", $r3);

        virtualinvoke $r0.<android.content.Context: void startActivity(android.content.Intent)>(r2);

        return;
    }
    private void doVibrateTest(android.preference.Preference)
    {
        com.fsck.k9.activity.setup.AccountSettings r0;
        android.preference.Preference $r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.os.Vibrator r4;
        android.preference.ListPreference $r5;
        java.lang.String $r6;
        int $i0, $i1;
        long[] $r7;

        r0 := @this: com.fsck.k9.activity.setup.AccountSettings;

        $r1 := @parameter0: android.preference.Preference;

        $r2 = virtualinvoke $r1.<android.preference.Preference: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("vibrator");

        r4 = (android.os.Vibrator) $r3;

        $r5 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference accountVibratePattern>;

        $r6 = virtualinvoke $r5.<android.preference.ListPreference: java.lang.String getValue()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

        $r5 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference accountVibrateTimes>;

        $r6 = virtualinvoke $r5.<android.preference.ListPreference: java.lang.String getValue()>();

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

        $r7 = staticinvoke <com.fsck.k9.NotificationSetting: long[] getVibration(int,int)>($i0, $i1);

        virtualinvoke r4.<android.os.Vibrator: void vibrate(long[],int)>($r7, -1);

        return;
    }
    private void onCompositionSettings()
    {
        com.fsck.k9.activity.setup.AccountSettings r0;
        com.fsck.k9.Account $r1;

        r0 := @this: com.fsck.k9.activity.setup.AccountSettings;

        $r1 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        staticinvoke <com.fsck.k9.activity.setup.AccountSetupComposition: void actionEditCompositionSettings(android.app.Activity,com.fsck.k9.Account)>(r0, $r1);

        return;
    }
    private void onIncomingSettings()
    {
        com.fsck.k9.activity.setup.AccountSettings r0;
        com.fsck.k9.Account $r1;

        r0 := @this: com.fsck.k9.activity.setup.AccountSettings;

        $r1 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        staticinvoke <com.fsck.k9.activity.setup.AccountSetupIncoming: void actionEditIncomingSettings(android.app.Activity,com.fsck.k9.Account)>(r0, $r1);

        return;
    }
    private void onManageIdentities()
    {
        com.fsck.k9.activity.setup.AccountSettings r0;
        android.content.Intent r1;
        java.lang.String $r2;
        com.fsck.k9.Account $r3;

        r0 := @this: com.fsck.k9.activity.setup.AccountSettings;

        r1 = new android.content.Intent;

        specialinvoke r1.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "Lcom/fsck/k9/activity/ManageIdentities;");

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r2 = virtualinvoke $r3.<com.fsck.k9.Account: java.lang.String getUuid()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("com.fsck.k9.ChooseIdentity_account", $r2);

        virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: void startActivityForResult(android.content.Intent,int)>(r1, 2);

        return;
    }
    private void onOutgoingSettings()
    {
        com.fsck.k9.activity.setup.AccountSettings r0;
        com.fsck.k9.Account $r1;

        r0 := @this: com.fsck.k9.activity.setup.AccountSettings;

        $r1 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        staticinvoke <com.fsck.k9.activity.setup.AccountSetupOutgoing: void actionEditOutgoingSettings(android.content.Context,com.fsck.k9.Account)>(r0, $r1);

        return;
    }
    private void removeListEntry(android.preference.ListPreference, java.lang.String)
    {
        com.fsck.k9.activity.setup.AccountSettings r0;
        android.preference.ListPreference $r1;
        java.lang.String $r2;
        java.lang.CharSequence[] r3, r4, $r6, $r7;
        java.lang.CharSequence r5;
        int $i0, i1, $i2;
        boolean $z0;

        r0 := @this: com.fsck.k9.activity.setup.AccountSettings;

        $r1 := @parameter0: android.preference.ListPreference;

        $r2 := @parameter1: java.lang.String;

        $r6 = virtualinvoke $r1.<android.preference.ListPreference: java.lang.CharSequence[] getEntryValues()>();

        $r7 = virtualinvoke $r1.<android.preference.ListPreference: java.lang.CharSequence[] getEntries()>();

        $i0 = lengthof $r6;

        $i0 = $i0 + -1;

        r4 = newarray (java.lang.String)[$i0];

        $i0 = lengthof $r6;

        $i0 = $i0 + -1;

        r3 = newarray (java.lang.String)[$i0];

        $i0 = 0;

        i1 = 0;

     label1:
        $i2 = lengthof $r6;

        if $i0 >= $i2 goto label3;

        r5 = $r6[$i0];

        $z0 = virtualinvoke r5.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label2;

        r4[i1] = r5;

        r5 = $r7[$i0];

        r3[i1] = r5;

        i1 = i1 + 1;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        virtualinvoke $r1.<android.preference.ListPreference: void setEntryValues(java.lang.CharSequence[])>(r4);

        virtualinvoke $r1.<android.preference.ListPreference: void setEntries(java.lang.CharSequence[])>(r3);

        return;
    }
    private java.lang.String reverseTranslateFolder(java.lang.String)
    {
        com.fsck.k9.activity.setup.AccountSettings r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        com.fsck.k9.Account $r3;

        r0 := @this: com.fsck.k9.activity.setup.AccountSettings;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: java.lang.String getString(int)>(2131166090);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r1 = virtualinvoke $r3.<com.fsck.k9.Account: java.lang.String getInboxFolderName()>();

     label1:
        return $r1;
    }
    private void saveSettings()
    {
        com.fsck.k9.activity.setup.AccountSettings r0;
        android.preference.CheckBoxPreference $r1;
        boolean $z0, $z1, $z2, z3;
        com.fsck.k9.Preferences $r2;
        com.fsck.k9.Account $r3;
        android.preference.EditTextPreference $r4;
        java.lang.String $r5;
        android.preference.ListPreference $r6;
        com.fsck.k9.Account$FolderMode $r7, $r19;
        int $i0;
        com.fsck.k9.NotificationSetting $r8;
        com.fsck.k9.Account$DeletePolicy $r9;
        com.fsck.k9.Account$Expunge $r10;
        com.fsck.k9.Account$Searchable $r11;
        com.fsck.k9.Account$MessageFormat $r12;
        com.fsck.k9.Account$QuoteStyle $r13;
        org.openintents.openpgp.util.OpenPgpKeyPreference $r14;
        long $l1;
        android.preference.RingtonePreference $r15;
        android.preference.PreferenceManager $r16;
        android.content.SharedPreferences $r17;
        com.fsck.k9.Account$ShowPictures $r18;

        r0 := @this: com.fsck.k9.activity.setup.AccountSettings;

        $r1 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference accountDefault>;

        $z0 = virtualinvoke $r1.<android.preference.CheckBoxPreference: boolean isChecked()>();

        if $z0 == 0 goto label01;

        $r2 = staticinvoke <com.fsck.k9.Preferences: com.fsck.k9.Preferences getPreferences(android.content.Context)>(r0);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        virtualinvoke $r2.<com.fsck.k9.Preferences: void setDefaultAccount(com.fsck.k9.Account)>($r3);

     label01:
        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r4 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.EditTextPreference accountDescription>;

        $r5 = virtualinvoke $r4.<android.preference.EditTextPreference: java.lang.String getText()>();

        virtualinvoke $r3.<com.fsck.k9.Account: void setDescription(java.lang.String)>($r5);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r1 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference markMessageAsReadOnView>;

        $z0 = virtualinvoke $r1.<android.preference.CheckBoxPreference: boolean isChecked()>();

        virtualinvoke $r3.<com.fsck.k9.Account: void setMarkMessageAsReadOnView(boolean)>($z0);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r1 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference accountNotify>;

        $z0 = virtualinvoke $r1.<android.preference.CheckBoxPreference: boolean isChecked()>();

        virtualinvoke $r3.<com.fsck.k9.Account: void setNotifyNewMail(boolean)>($z0);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r6 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference accountNotifyNewMailMode>;

        $r5 = virtualinvoke $r6.<android.preference.ListPreference: java.lang.String getValue()>();

        $r7 = staticinvoke <com.fsck.k9.Account$FolderMode: com.fsck.k9.Account$FolderMode valueOf(java.lang.String)>($r5);

        virtualinvoke $r3.<com.fsck.k9.Account: void setFolderNotifyNewMailMode(com.fsck.k9.Account$FolderMode)>($r7);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r1 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference accountNotifySelf>;

        $z0 = virtualinvoke $r1.<android.preference.CheckBoxPreference: boolean isChecked()>();

        virtualinvoke $r3.<com.fsck.k9.Account: void setNotifySelfNewMail(boolean)>($z0);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r1 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference accountNotifyContactsMailOnly>;

        $z0 = virtualinvoke $r1.<android.preference.CheckBoxPreference: boolean isChecked()>();

        virtualinvoke $r3.<com.fsck.k9.Account: void setNotifyContactsMailOnly(boolean)>($z0);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r1 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference accountNotifySync>;

        $z0 = virtualinvoke $r1.<android.preference.CheckBoxPreference: boolean isChecked()>();

        virtualinvoke $r3.<com.fsck.k9.Account: void setShowOngoing(boolean)>($z0);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r6 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference displayCount>;

        $r5 = virtualinvoke $r6.<android.preference.ListPreference: java.lang.String getValue()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        virtualinvoke $r3.<com.fsck.k9.Account: void setDisplayCount(int)>($i0);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r6 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference messageSize>;

        $r5 = virtualinvoke $r6.<android.preference.ListPreference: java.lang.String getValue()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        virtualinvoke $r3.<com.fsck.k9.Account: void setMaximumAutoDownloadMessageSize(int)>($i0);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $z0 = virtualinvoke $r3.<com.fsck.k9.Account: boolean isSearchByDateCapable()>();

        if $z0 == 0 goto label02;

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r6 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference messageAge>;

        $r5 = virtualinvoke $r6.<android.preference.ListPreference: java.lang.String getValue()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        virtualinvoke $r3.<com.fsck.k9.Account: void setMaximumPolledMessageAge(int)>($i0);

     label02:
        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r8 = virtualinvoke $r3.<com.fsck.k9.Account: com.fsck.k9.NotificationSetting getNotificationSetting()>();

        $r1 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference accountVibrateEnabled>;

        $z0 = virtualinvoke $r1.<android.preference.CheckBoxPreference: boolean isChecked()>();

        virtualinvoke $r8.<com.fsck.k9.NotificationSetting: void setVibrate(boolean)>($z0);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r8 = virtualinvoke $r3.<com.fsck.k9.Account: com.fsck.k9.NotificationSetting getNotificationSetting()>();

        $r6 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference accountVibratePattern>;

        $r5 = virtualinvoke $r6.<android.preference.ListPreference: java.lang.String getValue()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        virtualinvoke $r8.<com.fsck.k9.NotificationSetting: void setVibratePattern(int)>($i0);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r8 = virtualinvoke $r3.<com.fsck.k9.Account: com.fsck.k9.NotificationSetting getNotificationSetting()>();

        $r6 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference accountVibrateTimes>;

        $r5 = virtualinvoke $r6.<android.preference.ListPreference: java.lang.String getValue()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        virtualinvoke $r8.<com.fsck.k9.NotificationSetting: void setVibrateTimes(int)>($i0);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r8 = virtualinvoke $r3.<com.fsck.k9.Account: com.fsck.k9.NotificationSetting getNotificationSetting()>();

        $r1 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference accountLedEnabled>;

        $z0 = virtualinvoke $r1.<android.preference.CheckBoxPreference: boolean isChecked()>();

        virtualinvoke $r8.<com.fsck.k9.NotificationSetting: void setLed(boolean)>($z0);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r1 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference notificationOpensUnread>;

        $z0 = virtualinvoke $r1.<android.preference.CheckBoxPreference: boolean isChecked()>();

        virtualinvoke $r3.<com.fsck.k9.Account: void setGoToUnreadMessageSearch(boolean)>($z0);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r6 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference targetMode>;

        $r5 = virtualinvoke $r6.<android.preference.ListPreference: java.lang.String getValue()>();

        $r7 = staticinvoke <com.fsck.k9.Account$FolderMode: com.fsck.k9.Account$FolderMode valueOf(java.lang.String)>($r5);

        virtualinvoke $r3.<com.fsck.k9.Account: void setFolderTargetMode(com.fsck.k9.Account$FolderMode)>($r7);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r6 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference deletePolicy>;

        $r5 = virtualinvoke $r6.<android.preference.ListPreference: java.lang.String getValue()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        $r9 = staticinvoke <com.fsck.k9.Account$DeletePolicy: com.fsck.k9.Account$DeletePolicy fromInt(int)>($i0);

        virtualinvoke $r3.<com.fsck.k9.Account: void setDeletePolicy(com.fsck.k9.Account$DeletePolicy)>($r9);

        $z0 = r0.<com.fsck.k9.activity.setup.AccountSettings: boolean isExpungeCapable>;

        if $z0 == 0 goto label03;

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r6 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference expungePolicy>;

        $r5 = virtualinvoke $r6.<android.preference.ListPreference: java.lang.String getValue()>();

        $r10 = staticinvoke <com.fsck.k9.Account$Expunge: com.fsck.k9.Account$Expunge valueOf(java.lang.String)>($r5);

        virtualinvoke $r3.<com.fsck.k9.Account: void setExpungePolicy(com.fsck.k9.Account$Expunge)>($r10);

     label03:
        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r1 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference syncRemoteDeletions>;

        $z0 = virtualinvoke $r1.<android.preference.CheckBoxPreference: boolean isChecked()>();

        virtualinvoke $r3.<com.fsck.k9.Account: void setSyncRemoteDeletions(boolean)>($z0);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r6 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference searchableFolders>;

        $r5 = virtualinvoke $r6.<android.preference.ListPreference: java.lang.String getValue()>();

        $r11 = staticinvoke <com.fsck.k9.Account$Searchable: com.fsck.k9.Account$Searchable valueOf(java.lang.String)>($r5);

        virtualinvoke $r3.<com.fsck.k9.Account: void setSearchableFolders(com.fsck.k9.Account$Searchable)>($r11);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r6 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference messageFormat>;

        $r5 = virtualinvoke $r6.<android.preference.ListPreference: java.lang.String getValue()>();

        $r12 = staticinvoke <com.fsck.k9.Account$MessageFormat: com.fsck.k9.Account$MessageFormat valueOf(java.lang.String)>($r5);

        virtualinvoke $r3.<com.fsck.k9.Account: void setMessageFormat(com.fsck.k9.Account$MessageFormat)>($r12);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r1 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference alwaysShowCcBcc>;

        $z0 = virtualinvoke $r1.<android.preference.CheckBoxPreference: boolean isChecked()>();

        virtualinvoke $r3.<com.fsck.k9.Account: void setAlwaysShowCcBcc(boolean)>($z0);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r1 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference messageReadReceipt>;

        $z0 = virtualinvoke $r1.<android.preference.CheckBoxPreference: boolean isChecked()>();

        virtualinvoke $r3.<com.fsck.k9.Account: void setMessageReadReceipt(boolean)>($z0);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r6 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference quoteStyle>;

        $r5 = virtualinvoke $r6.<android.preference.ListPreference: java.lang.String getValue()>();

        $r13 = staticinvoke <com.fsck.k9.Account$QuoteStyle: com.fsck.k9.Account$QuoteStyle valueOf(java.lang.String)>($r5);

        virtualinvoke $r3.<com.fsck.k9.Account: void setQuoteStyle(com.fsck.k9.Account$QuoteStyle)>($r13);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r4 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.EditTextPreference accountQuotePrefix>;

        $r5 = virtualinvoke $r4.<android.preference.EditTextPreference: java.lang.String getText()>();

        virtualinvoke $r3.<com.fsck.k9.Account: void setQuotePrefix(java.lang.String)>($r5);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r1 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference accountDefaultQuotedTextShown>;

        $z0 = virtualinvoke $r1.<android.preference.CheckBoxPreference: boolean isChecked()>();

        virtualinvoke $r3.<com.fsck.k9.Account: void setDefaultQuotedTextShown(boolean)>($z0);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r1 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference replyAfterQuote>;

        $z0 = virtualinvoke $r1.<android.preference.CheckBoxPreference: boolean isChecked()>();

        virtualinvoke $r3.<com.fsck.k9.Account: void setReplyAfterQuote(boolean)>($z0);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r1 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference stripSignature>;

        $z0 = virtualinvoke $r1.<android.preference.CheckBoxPreference: boolean isChecked()>();

        virtualinvoke $r3.<com.fsck.k9.Account: void setStripSignature(boolean)>($z0);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r6 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference localStorageProvider>;

        $r5 = virtualinvoke $r6.<android.preference.ListPreference: java.lang.String getValue()>();

        virtualinvoke $r3.<com.fsck.k9.Account: void setLocalStorageProviderId(java.lang.String)>($r5);

        $z0 = r0.<com.fsck.k9.activity.setup.AccountSettings: boolean hasPgpCrypto>;

        if $z0 == 0 goto label11;

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r14 = r0.<com.fsck.k9.activity.setup.AccountSettings: org.openintents.openpgp.util.OpenPgpKeyPreference pgpCryptoKey>;

        $l1 = virtualinvoke $r14.<org.openintents.openpgp.util.OpenPgpKeyPreference: long getValue()>();

        virtualinvoke $r3.<com.fsck.k9.Account: void setCryptoKey(long)>($l1);

     label04:
        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r5 = virtualinvoke $r3.<com.fsck.k9.Account: java.lang.String getStoreUri()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("webdav");

        if $z0 == 0 goto label12;

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r6 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference autoExpandFolder>;

        $r5 = virtualinvoke $r6.<android.preference.ListPreference: java.lang.String getValue()>();

        virtualinvoke $r3.<com.fsck.k9.Account: void setAutoExpandFolderName(java.lang.String)>($r5);

     label05:
        $z0 = r0.<com.fsck.k9.activity.setup.AccountSettings: boolean isMoveCapable>;

        if $z0 == 0 goto label06;

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r6 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference archiveFolder>;

        $r5 = virtualinvoke $r6.<android.preference.ListPreference: java.lang.String getValue()>();

        virtualinvoke $r3.<com.fsck.k9.Account: void setArchiveFolderName(java.lang.String)>($r5);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r6 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference draftsFolder>;

        $r5 = virtualinvoke $r6.<android.preference.ListPreference: java.lang.String getValue()>();

        virtualinvoke $r3.<com.fsck.k9.Account: void setDraftsFolderName(java.lang.String)>($r5);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r6 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference sentFolder>;

        $r5 = virtualinvoke $r6.<android.preference.ListPreference: java.lang.String getValue()>();

        virtualinvoke $r3.<com.fsck.k9.Account: void setSentFolderName(java.lang.String)>($r5);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r6 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference spamFolder>;

        $r5 = virtualinvoke $r6.<android.preference.ListPreference: java.lang.String getValue()>();

        virtualinvoke $r3.<com.fsck.k9.Account: void setSpamFolderName(java.lang.String)>($r5);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r6 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference trashFolder>;

        $r5 = virtualinvoke $r6.<android.preference.ListPreference: java.lang.String getValue()>();

        virtualinvoke $r3.<com.fsck.k9.Account: void setTrashFolderName(java.lang.String)>($r5);

     label06:
        $z0 = r0.<com.fsck.k9.activity.setup.AccountSettings: boolean isPushCapable>;

        if $z0 == 0 goto label07;

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r1 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference pushPollOnConnect>;

        $z0 = virtualinvoke $r1.<android.preference.CheckBoxPreference: boolean isChecked()>();

        virtualinvoke $r3.<com.fsck.k9.Account: void setPushPollOnConnect(boolean)>($z0);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r6 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference idleRefreshPeriod>;

        $r5 = virtualinvoke $r6.<android.preference.ListPreference: java.lang.String getValue()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        virtualinvoke $r3.<com.fsck.k9.Account: void setIdleRefreshMinutes(int)>($i0);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r6 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference mMaxPushFolders>;

        $r5 = virtualinvoke $r6.<android.preference.ListPreference: java.lang.String getValue()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        virtualinvoke $r3.<com.fsck.k9.Account: boolean setMaxPushFolders(int)>($i0);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r1 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference cloudSearchEnabled>;

        $z0 = virtualinvoke $r1.<android.preference.CheckBoxPreference: boolean isChecked()>();

        virtualinvoke $r3.<com.fsck.k9.Account: void setAllowRemoteSearch(boolean)>($z0);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r6 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference remoteSearchNumResults>;

        $r5 = virtualinvoke $r6.<android.preference.ListPreference: java.lang.String getValue()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        virtualinvoke $r3.<com.fsck.k9.Account: void setRemoteSearchNumResults(int)>($i0);

     label07:
        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r6 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference checkFrequency>;

        $r5 = virtualinvoke $r6.<android.preference.ListPreference: java.lang.String getValue()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        $z0 = virtualinvoke $r3.<com.fsck.k9.Account: boolean setAutomaticCheckIntervalMinutes(int)>($i0);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r6 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference syncMode>;

        $r5 = virtualinvoke $r6.<android.preference.ListPreference: java.lang.String getValue()>();

        $r7 = staticinvoke <com.fsck.k9.Account$FolderMode: com.fsck.k9.Account$FolderMode valueOf(java.lang.String)>($r5);

        $z1 = virtualinvoke $r3.<com.fsck.k9.Account: boolean setFolderSyncMode(com.fsck.k9.Account$FolderMode)>($r7);

        $z0 = $z0 | $z1;

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r6 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference displayMode>;

        $r5 = virtualinvoke $r6.<android.preference.ListPreference: java.lang.String getValue()>();

        $r7 = staticinvoke <com.fsck.k9.Account$FolderMode: com.fsck.k9.Account$FolderMode valueOf(java.lang.String)>($r5);

        $z1 = virtualinvoke $r3.<com.fsck.k9.Account: boolean setFolderDisplayMode(com.fsck.k9.Account$FolderMode)>($r7);

        $r15 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.RingtonePreference accountRingtone>;

        $r16 = virtualinvoke $r15.<android.preference.RingtonePreference: android.preference.PreferenceManager getPreferenceManager()>();

        $r17 = virtualinvoke $r16.<android.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>();

        $r5 = interfaceinvoke $r17.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("account_ringtone", null);

        if $r5 == null goto label13;

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r8 = virtualinvoke $r3.<com.fsck.k9.Account: com.fsck.k9.NotificationSetting getNotificationSetting()>();

        virtualinvoke $r8.<com.fsck.k9.NotificationSetting: void setRingEnabled(boolean)>(1);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r8 = virtualinvoke $r3.<com.fsck.k9.Account: com.fsck.k9.NotificationSetting getNotificationSetting()>();

        virtualinvoke $r8.<com.fsck.k9.NotificationSetting: void setRingtone(java.lang.String)>($r5);

     label08:
        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r6 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference accountShowPictures>;

        $r5 = virtualinvoke $r6.<android.preference.ListPreference: java.lang.String getValue()>();

        $r18 = staticinvoke <com.fsck.k9.Account$ShowPictures: com.fsck.k9.Account$ShowPictures valueOf(java.lang.String)>($r5);

        virtualinvoke $r3.<com.fsck.k9.Account: void setShowPictures(com.fsck.k9.Account$ShowPictures)>($r18);

        $z2 = r0.<com.fsck.k9.activity.setup.AccountSettings: boolean isPushCapable>;

        if $z2 == 0 goto label10;

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r6 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference pushMode>;

        $r5 = virtualinvoke $r6.<android.preference.ListPreference: java.lang.String getValue()>();

        $r7 = staticinvoke <com.fsck.k9.Account$FolderMode: com.fsck.k9.Account$FolderMode valueOf(java.lang.String)>($r5);

        $z2 = virtualinvoke $r3.<com.fsck.k9.Account: boolean setFolderPushMode(com.fsck.k9.Account$FolderMode)>($r7);

        z3 = $z2;

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r7 = virtualinvoke $r3.<com.fsck.k9.Account: com.fsck.k9.Account$FolderMode getFolderPushMode()>();

        $r19 = <com.fsck.k9.Account$FolderMode: com.fsck.k9.Account$FolderMode NONE>;

        if $r7 == $r19 goto label09;

        $z1 = $z2 | $z1;

        $z2 = r0.<com.fsck.k9.activity.setup.AccountSettings: boolean incomingChanged>;

        z3 = $z1 | $z2;

     label09:
        if $z0 == 0 goto label14;

        if z3 == 0 goto label14;

        staticinvoke <com.fsck.k9.service.MailService: void actionReset(android.content.Context,java.lang.Integer)>(r0, null);

     label10:
        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r2 = staticinvoke <com.fsck.k9.Preferences: com.fsck.k9.Preferences getPreferences(android.content.Context)>(r0);

        virtualinvoke $r3.<com.fsck.k9.Account: void save(com.fsck.k9.Preferences)>($r2);

        return;

     label11:
        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        virtualinvoke $r3.<com.fsck.k9.Account: void setCryptoKey(long)>(0L);

        goto label04;

     label12:
        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r6 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference autoExpandFolder>;

        $r5 = virtualinvoke $r6.<android.preference.ListPreference: java.lang.String getValue()>();

        $r5 = specialinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: java.lang.String reverseTranslateFolder(java.lang.String)>($r5);

        virtualinvoke $r3.<com.fsck.k9.Account: void setAutoExpandFolderName(java.lang.String)>($r5);

        goto label05;

     label13:
        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r8 = virtualinvoke $r3.<com.fsck.k9.Account: com.fsck.k9.NotificationSetting getNotificationSetting()>();

        $z2 = virtualinvoke $r8.<com.fsck.k9.NotificationSetting: boolean isRingEnabled()>();

        if $z2 == 0 goto label08;

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r8 = virtualinvoke $r3.<com.fsck.k9.Account: com.fsck.k9.NotificationSetting getNotificationSetting()>();

        virtualinvoke $r8.<com.fsck.k9.NotificationSetting: void setRingtone(java.lang.String)>(null);

        goto label08;

     label14:
        if $z0 == 0 goto label15;

        staticinvoke <com.fsck.k9.service.MailService: void actionReschedulePoll(android.content.Context,java.lang.Integer)>(r0, null);

        goto label10;

     label15:
        if z3 == 0 goto label10;

        staticinvoke <com.fsck.k9.service.MailService: void actionRestartPushers(android.content.Context,java.lang.Integer)>(r0, null);

        goto label10;
    }
    private java.lang.String translateFolder(java.lang.String)
    {
        com.fsck.k9.activity.setup.AccountSettings r0;
        java.lang.String $r1, $r3;
        com.fsck.k9.Account $r2;
        boolean $z0;

        r0 := @this: com.fsck.k9.activity.setup.AccountSettings;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r3 = virtualinvoke $r2.<com.fsck.k9.Account: java.lang.String getInboxFolderName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: java.lang.String getString(int)>(2131166090);

     label1:
        return $r1;
    }
    private void updateRemoteSearchLimit(java.lang.String)
    {
        com.fsck.k9.activity.setup.AccountSettings r0;
        java.lang.String $r1, $r3;
        boolean $z0;
        android.preference.ListPreference $r2;
        java.lang.Object[] $r4;

        r0 := @this: com.fsck.k9.activity.setup.AccountSettings;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label2;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("0");

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: java.lang.String getString(int)>(2131165324);

     label1:
        $r2 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference remoteSearchNumResults>;

        $r3 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: java.lang.String getString(int)>(2131165325);

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r1;

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r3, $r4);

        virtualinvoke $r2.<android.preference.ListPreference: void setSummary(java.lang.CharSequence)>($r1);

     label2:
        return;
    }
    public void onActivityResult(int, int, android.content.Intent)
    {
        com.fsck.k9.activity.setup.AccountSettings r0;
        int $i0, $i1;
        android.content.Intent $r1;
        org.openintents.openpgp.util.OpenPgpKeyPreference $r2;
        boolean $z0;
        android.preference.ListPreference $r3;
        java.lang.String $r4;

        r0 := @this: com.fsck.k9.activity.setup.AccountSettings;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.content.Intent;

        $r2 = r0.<com.fsck.k9.activity.setup.AccountSettings: org.openintents.openpgp.util.OpenPgpKeyPreference pgpCryptoKey>;

        if $r2 == null goto label1;

        $r2 = r0.<com.fsck.k9.activity.setup.AccountSettings: org.openintents.openpgp.util.OpenPgpKeyPreference pgpCryptoKey>;

        $z0 = virtualinvoke $r2.<org.openintents.openpgp.util.OpenPgpKeyPreference: boolean handleOnActivityResult(int,int,android.content.Intent)>($i0, $i1, $r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        if $i1 != -1 goto label2;

        lookupswitch($i0)
        {
            case 1: goto label3;
            default: goto label2;
        };

     label2:
        specialinvoke r0.<com.fsck.k9.activity.K9PreferenceActivity: void onActivityResult(int,int,android.content.Intent)>($i0, $i1, $r1);

        return;

     label3:
        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference autoExpandFolder>;

        $r4 = virtualinvoke $r1.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("com.fsck.k9.ChooseFolder_newfolder");

        $r4 = specialinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: java.lang.String translateFolder(java.lang.String)>($r4);

        virtualinvoke $r3.<android.preference.ListPreference: void setSummary(java.lang.CharSequence)>($r4);

        goto label2;
    }
    public void onChooseAutoExpandFolder()
    {
        com.fsck.k9.activity.setup.AccountSettings r0;
        android.content.Intent r1;
        com.fsck.k9.Account $r2;
        java.lang.String $r3;
        android.preference.ListPreference $r4;
        java.lang.CharSequence $r5;

        r0 := @this: com.fsck.k9.activity.setup.AccountSettings;

        r1 = new android.content.Intent;

        specialinvoke r1.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "Lcom/fsck/k9/activity/ChooseFolder;");

        $r2 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r3 = virtualinvoke $r2.<com.fsck.k9.Account: java.lang.String getUuid()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("com.fsck.k9.ChooseFolder_account", $r3);

        $r4 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference autoExpandFolder>;

        $r5 = virtualinvoke $r4.<android.preference.ListPreference: java.lang.CharSequence getSummary()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.CharSequence)>("com.fsck.k9.ChooseFolder_curfolder", $r5);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("com.fsck.k9.ChooseFolder_showcurrent", "yes");

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("com.fsck.k9.ChooseFolder_showOptionNone", "yes");

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("com.fsck.k9.ChooseFolder_showDisplayableOnly", "yes");

        virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: void startActivityForResult(android.content.Intent,int)>(r1, 1);

        return;
    }
    public void onChooseChipColor()
    {
        com.fsck.k9.activity.setup.AccountSettings r0;

        r0 := @this: com.fsck.k9.activity.setup.AccountSettings;

        virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: void showDialog(int)>(1);

        return;
    }
    public void onChooseLedColor()
    {
        com.fsck.k9.activity.setup.AccountSettings r0;

        r0 := @this: com.fsck.k9.activity.setup.AccountSettings;

        virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: void showDialog(int)>(2);

        return;
    }
    public void onCreate(android.os.Bundle)
    {
        com.fsck.k9.activity.setup.AccountSettings r0;
        android.os.Bundle $r1;
        java.lang.Exception r2;
        java.lang.String[] r3, r4;
        com.fsck.k9.activity.setup.AccountSettings$4 r5;
        android.content.Intent $r6;
        java.lang.String $r7;
        com.fsck.k9.Preferences $r8;
        com.fsck.k9.Account $r9, $r36;
        com.fsck.k9.mail.Store $r10;
        boolean $z0;
        android.preference.Preference $r11;
        android.preference.PreferenceScreen $r12, $r72;
        android.preference.EditTextPreference $r13;
        com.fsck.k9.activity.setup.AccountSettings$1 $r14;
        android.preference.CheckBoxPreference $r15;
        android.preference.ListPreference $r16, $r18;
        com.fsck.k9.Account$MessageFormat $r17;
        java.lang.CharSequence $r19;
        com.fsck.k9.activity.setup.AccountSettings$2 $r20;
        com.fsck.k9.activity.setup.AccountSettings$3 $r21;
        com.fsck.k9.Account$QuoteStyle $r22;
        int $i0, $i1;
        com.fsck.k9.activity.setup.AccountSettings$5 $r23;
        com.fsck.k9.Account$FolderMode $r24;
        com.fsck.k9.activity.setup.AccountSettings$6 $r25;
        com.fsck.k9.activity.setup.AccountSettings$7 $r26;
        com.fsck.k9.activity.setup.AccountSettings$8 $r27;
        com.fsck.k9.Account$DeletePolicy $r28;
        com.fsck.k9.activity.setup.AccountSettings$9 $r29;
        com.fsck.k9.Account$Expunge $r30;
        com.fsck.k9.activity.setup.AccountSettings$10 $r31;
        com.fsck.k9.Account$Searchable $r32;
        com.fsck.k9.activity.setup.AccountSettings$11 $r33;
        com.fsck.k9.activity.setup.AccountSettings$12 $r34;
        com.fsck.k9.activity.setup.AccountSettings$14 $r35;
        java.lang.StringBuilder $r37;
        com.fsck.k9.Account$ShowPictures $r38;
        com.fsck.k9.activity.setup.AccountSettings$15 $r39;
        com.fsck.k9.mailstore.StorageManager $r40;
        java.util.Map $r41;
        java.util.Set $r42;
        java.util.Iterator $r43;
        java.lang.Object $r44;
        java.util.Map$Entry r45;
        java.lang.Object[] $r46;
        com.fsck.k9.activity.setup.AccountSettings$13 $r47;
        com.fsck.k9.activity.setup.AccountSettings$16 $r48;
        com.fsck.k9.activity.setup.AccountSettings$17 $r49;
        com.fsck.k9.activity.setup.AccountSettings$18 $r50;
        com.fsck.k9.activity.setup.AccountSettings$19 $r51;
        com.fsck.k9.activity.setup.AccountSettings$20 $r52;
        com.fsck.k9.activity.setup.AccountSettings$21 $r53;
        android.preference.RingtonePreference $r54;
        android.preference.PreferenceManager $r55;
        android.content.SharedPreferences $r56;
        com.fsck.k9.NotificationSetting $r57;
        android.content.SharedPreferences$Editor $r58;
        com.fsck.k9.activity.setup.AccountSettings$22 $r59;
        com.fsck.k9.activity.setup.AccountSettings$23 $r60;
        com.fsck.k9.activity.setup.AccountSettings$PopulateFolderPrefsTask $r61;
        java.lang.Void[] $r62;
        com.fsck.k9.activity.setup.AccountSettings$24 $r63;
        com.fsck.k9.activity.setup.AccountSettings$25 $r64;
        com.fsck.k9.activity.setup.AccountSettings$26 $r65;
        com.fsck.k9.activity.setup.AccountSettings$27 $r66;
        com.fsck.k9.activity.setup.AccountSettings$28 $r67;
        com.fsck.k9.activity.setup.AccountSettings$29 $r68;
        org.openintents.openpgp.util.OpenPgpKeyPreference $r69;
        long $l2;
        com.fsck.k9.Identity $r70;
        com.fsck.k9.activity.setup.AccountSettings$30 $r71;
        com.fsck.k9.activity.setup.AccountSettings$31 $r73;

        r0 := @this: com.fsck.k9.activity.setup.AccountSettings;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<com.fsck.k9.activity.K9PreferenceActivity: void onCreate(android.os.Bundle)>($r1);

        $r6 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.content.Intent getIntent()>();

        $r7 = virtualinvoke $r6.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("account");

        $r8 = staticinvoke <com.fsck.k9.Preferences: com.fsck.k9.Preferences getPreferences(android.content.Context)>(r0);

        $r9 = virtualinvoke $r8.<com.fsck.k9.Preferences: com.fsck.k9.Account getAccount(java.lang.String)>($r7);

        r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account> = $r9;

     label01:
        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r10 = virtualinvoke $r9.<com.fsck.k9.Account: com.fsck.k9.mail.Store getRemoteStore()>();

        $z0 = virtualinvoke $r10.<com.fsck.k9.mail.Store: boolean isMoveCapable()>();

        r0.<com.fsck.k9.activity.setup.AccountSettings: boolean isMoveCapable> = $z0;

        $z0 = virtualinvoke $r10.<com.fsck.k9.mail.Store: boolean isPushCapable()>();

        r0.<com.fsck.k9.activity.setup.AccountSettings: boolean isPushCapable> = $z0;

        $z0 = virtualinvoke $r10.<com.fsck.k9.mail.Store: boolean isExpungeCapable()>();

        r0.<com.fsck.k9.activity.setup.AccountSettings: boolean isExpungeCapable> = $z0;

        $z0 = virtualinvoke $r10.<com.fsck.k9.mail.Store: boolean isSeenFlagSupported()>();

        r0.<com.fsck.k9.activity.setup.AccountSettings: boolean isSeenFlagSupported> = $z0;

     label02:
        virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: void addPreferencesFromResource(int)>(2131034112);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("main");

        $r12 = (android.preference.PreferenceScreen) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.PreferenceScreen mainScreen> = $r12;

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("account_description");

        $r13 = (android.preference.EditTextPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.EditTextPreference accountDescription> = $r13;

        $r13 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.EditTextPreference accountDescription>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r7 = virtualinvoke $r9.<com.fsck.k9.Account: java.lang.String getDescription()>();

        virtualinvoke $r13.<android.preference.EditTextPreference: void setSummary(java.lang.CharSequence)>($r7);

        $r13 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.EditTextPreference accountDescription>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r7 = virtualinvoke $r9.<com.fsck.k9.Account: java.lang.String getDescription()>();

        virtualinvoke $r13.<android.preference.EditTextPreference: void setText(java.lang.String)>($r7);

        $r13 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.EditTextPreference accountDescription>;

        $r14 = new com.fsck.k9.activity.setup.AccountSettings$1;

        specialinvoke $r14.<com.fsck.k9.activity.setup.AccountSettings$1: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        virtualinvoke $r13.<android.preference.EditTextPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r14);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("mark_message_as_read_on_view");

        $r15 = (android.preference.CheckBoxPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference markMessageAsReadOnView> = $r15;

        $r15 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference markMessageAsReadOnView>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $z0 = virtualinvoke $r9.<com.fsck.k9.Account: boolean isMarkMessageAsReadOnView()>();

        virtualinvoke $r15.<android.preference.CheckBoxPreference: void setChecked(boolean)>($z0);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("message_format");

        $r16 = (android.preference.ListPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference messageFormat> = $r16;

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference messageFormat>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r17 = virtualinvoke $r9.<com.fsck.k9.Account: com.fsck.k9.Account$MessageFormat getMessageFormat()>();

        $r7 = virtualinvoke $r17.<com.fsck.k9.Account$MessageFormat: java.lang.String name()>();

        virtualinvoke $r16.<android.preference.ListPreference: void setValue(java.lang.String)>($r7);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference messageFormat>;

        $r18 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference messageFormat>;

        $r19 = virtualinvoke $r18.<android.preference.ListPreference: java.lang.CharSequence getEntry()>();

        virtualinvoke $r16.<android.preference.ListPreference: void setSummary(java.lang.CharSequence)>($r19);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference messageFormat>;

        $r20 = new com.fsck.k9.activity.setup.AccountSettings$2;

        specialinvoke $r20.<com.fsck.k9.activity.setup.AccountSettings$2: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        virtualinvoke $r16.<android.preference.ListPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r20);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("always_show_cc_bcc");

        $r15 = (android.preference.CheckBoxPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference alwaysShowCcBcc> = $r15;

        $r15 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference alwaysShowCcBcc>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $z0 = virtualinvoke $r9.<com.fsck.k9.Account: boolean isAlwaysShowCcBcc()>();

        virtualinvoke $r15.<android.preference.CheckBoxPreference: void setChecked(boolean)>($z0);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("message_read_receipt");

        $r15 = (android.preference.CheckBoxPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference messageReadReceipt> = $r15;

        $r15 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference messageReadReceipt>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $z0 = virtualinvoke $r9.<com.fsck.k9.Account: boolean isMessageReadReceiptAlways()>();

        virtualinvoke $r15.<android.preference.CheckBoxPreference: void setChecked(boolean)>($z0);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("account_quote_prefix");

        $r13 = (android.preference.EditTextPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.EditTextPreference accountQuotePrefix> = $r13;

        $r13 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.EditTextPreference accountQuotePrefix>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r7 = virtualinvoke $r9.<com.fsck.k9.Account: java.lang.String getQuotePrefix()>();

        virtualinvoke $r13.<android.preference.EditTextPreference: void setSummary(java.lang.CharSequence)>($r7);

        $r13 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.EditTextPreference accountQuotePrefix>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r7 = virtualinvoke $r9.<com.fsck.k9.Account: java.lang.String getQuotePrefix()>();

        virtualinvoke $r13.<android.preference.EditTextPreference: void setText(java.lang.String)>($r7);

        $r13 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.EditTextPreference accountQuotePrefix>;

        $r21 = new com.fsck.k9.activity.setup.AccountSettings$3;

        specialinvoke $r21.<com.fsck.k9.activity.setup.AccountSettings$3: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        virtualinvoke $r13.<android.preference.EditTextPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r21);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("default_quoted_text_shown");

        $r15 = (android.preference.CheckBoxPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference accountDefaultQuotedTextShown> = $r15;

        $r15 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference accountDefaultQuotedTextShown>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $z0 = virtualinvoke $r9.<com.fsck.k9.Account: boolean isDefaultQuotedTextShown()>();

        virtualinvoke $r15.<android.preference.CheckBoxPreference: void setChecked(boolean)>($z0);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("reply_after_quote");

        $r15 = (android.preference.CheckBoxPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference replyAfterQuote> = $r15;

        $r15 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference replyAfterQuote>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $z0 = virtualinvoke $r9.<com.fsck.k9.Account: boolean isReplyAfterQuote()>();

        virtualinvoke $r15.<android.preference.CheckBoxPreference: void setChecked(boolean)>($z0);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("strip_signature");

        $r15 = (android.preference.CheckBoxPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference stripSignature> = $r15;

        $r15 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference stripSignature>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $z0 = virtualinvoke $r9.<com.fsck.k9.Account: boolean isStripSignature()>();

        virtualinvoke $r15.<android.preference.CheckBoxPreference: void setChecked(boolean)>($z0);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("composing");

        $r12 = (android.preference.PreferenceScreen) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.PreferenceScreen composingScreen> = $r12;

        r5 = new com.fsck.k9.activity.setup.AccountSettings$4;

        specialinvoke r5.<com.fsck.k9.activity.setup.AccountSettings$4: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("quote_style");

        $r16 = (android.preference.ListPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference quoteStyle> = $r16;

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference quoteStyle>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r22 = virtualinvoke $r9.<com.fsck.k9.Account: com.fsck.k9.Account$QuoteStyle getQuoteStyle()>();

        $r7 = virtualinvoke $r22.<com.fsck.k9.Account$QuoteStyle: java.lang.String name()>();

        virtualinvoke $r16.<android.preference.ListPreference: void setValue(java.lang.String)>($r7);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference quoteStyle>;

        $r18 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference quoteStyle>;

        $r19 = virtualinvoke $r18.<android.preference.ListPreference: java.lang.CharSequence getEntry()>();

        virtualinvoke $r16.<android.preference.ListPreference: void setSummary(java.lang.CharSequence)>($r19);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference quoteStyle>;

        virtualinvoke $r16.<android.preference.ListPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>(r5);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference quoteStyle>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r22 = virtualinvoke $r9.<com.fsck.k9.Account: com.fsck.k9.Account$QuoteStyle getQuoteStyle()>();

        $r7 = virtualinvoke $r22.<com.fsck.k9.Account$QuoteStyle: java.lang.String name()>();

        interfaceinvoke r5.<android.preference.Preference$OnPreferenceChangeListener: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>($r16, $r7);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("account_check_frequency");

        $r16 = (android.preference.ListPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference checkFrequency> = $r16;

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference checkFrequency>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $i0 = virtualinvoke $r9.<com.fsck.k9.Account: int getAutomaticCheckIntervalMinutes()>();

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        virtualinvoke $r16.<android.preference.ListPreference: void setValue(java.lang.String)>($r7);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference checkFrequency>;

        $r18 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference checkFrequency>;

        $r19 = virtualinvoke $r18.<android.preference.ListPreference: java.lang.CharSequence getEntry()>();

        virtualinvoke $r16.<android.preference.ListPreference: void setSummary(java.lang.CharSequence)>($r19);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference checkFrequency>;

        $r23 = new com.fsck.k9.activity.setup.AccountSettings$5;

        specialinvoke $r23.<com.fsck.k9.activity.setup.AccountSettings$5: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        virtualinvoke $r16.<android.preference.ListPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r23);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("folder_display_mode");

        $r16 = (android.preference.ListPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference displayMode> = $r16;

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference displayMode>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r24 = virtualinvoke $r9.<com.fsck.k9.Account: com.fsck.k9.Account$FolderMode getFolderDisplayMode()>();

        $r7 = virtualinvoke $r24.<com.fsck.k9.Account$FolderMode: java.lang.String name()>();

        virtualinvoke $r16.<android.preference.ListPreference: void setValue(java.lang.String)>($r7);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference displayMode>;

        $r18 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference displayMode>;

        $r19 = virtualinvoke $r18.<android.preference.ListPreference: java.lang.CharSequence getEntry()>();

        virtualinvoke $r16.<android.preference.ListPreference: void setSummary(java.lang.CharSequence)>($r19);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference displayMode>;

        $r25 = new com.fsck.k9.activity.setup.AccountSettings$6;

        specialinvoke $r25.<com.fsck.k9.activity.setup.AccountSettings$6: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        virtualinvoke $r16.<android.preference.ListPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r25);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("folder_sync_mode");

        $r16 = (android.preference.ListPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference syncMode> = $r16;

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference syncMode>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r24 = virtualinvoke $r9.<com.fsck.k9.Account: com.fsck.k9.Account$FolderMode getFolderSyncMode()>();

        $r7 = virtualinvoke $r24.<com.fsck.k9.Account$FolderMode: java.lang.String name()>();

        virtualinvoke $r16.<android.preference.ListPreference: void setValue(java.lang.String)>($r7);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference syncMode>;

        $r18 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference syncMode>;

        $r19 = virtualinvoke $r18.<android.preference.ListPreference: java.lang.CharSequence getEntry()>();

        virtualinvoke $r16.<android.preference.ListPreference: void setSummary(java.lang.CharSequence)>($r19);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference syncMode>;

        $r26 = new com.fsck.k9.activity.setup.AccountSettings$7;

        specialinvoke $r26.<com.fsck.k9.activity.setup.AccountSettings$7: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        virtualinvoke $r16.<android.preference.ListPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r26);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("folder_target_mode");

        $r16 = (android.preference.ListPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference targetMode> = $r16;

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference targetMode>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r24 = virtualinvoke $r9.<com.fsck.k9.Account: com.fsck.k9.Account$FolderMode getFolderTargetMode()>();

        $r7 = virtualinvoke $r24.<com.fsck.k9.Account$FolderMode: java.lang.String name()>();

        virtualinvoke $r16.<android.preference.ListPreference: void setValue(java.lang.String)>($r7);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference targetMode>;

        $r18 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference targetMode>;

        $r19 = virtualinvoke $r18.<android.preference.ListPreference: java.lang.CharSequence getEntry()>();

        virtualinvoke $r16.<android.preference.ListPreference: void setSummary(java.lang.CharSequence)>($r19);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference targetMode>;

        $r27 = new com.fsck.k9.activity.setup.AccountSettings$8;

        specialinvoke $r27.<com.fsck.k9.activity.setup.AccountSettings$8: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        virtualinvoke $r16.<android.preference.ListPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r27);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("delete_policy");

        $r16 = (android.preference.ListPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference deletePolicy> = $r16;

        $z0 = r0.<com.fsck.k9.activity.setup.AccountSettings: boolean isSeenFlagSupported>;

        if $z0 != 0 goto label03;

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference deletePolicy>;

        $r28 = <com.fsck.k9.Account$DeletePolicy: com.fsck.k9.Account$DeletePolicy MARK_AS_READ>;

        $r7 = virtualinvoke $r28.<com.fsck.k9.Account$DeletePolicy: java.lang.String preferenceString()>();

        specialinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: void removeListEntry(android.preference.ListPreference,java.lang.String)>($r16, $r7);

     label03:
        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference deletePolicy>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r28 = virtualinvoke $r9.<com.fsck.k9.Account: com.fsck.k9.Account$DeletePolicy getDeletePolicy()>();

        $r7 = virtualinvoke $r28.<com.fsck.k9.Account$DeletePolicy: java.lang.String preferenceString()>();

        virtualinvoke $r16.<android.preference.ListPreference: void setValue(java.lang.String)>($r7);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference deletePolicy>;

        $r18 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference deletePolicy>;

        $r19 = virtualinvoke $r18.<android.preference.ListPreference: java.lang.CharSequence getEntry()>();

        virtualinvoke $r16.<android.preference.ListPreference: void setSummary(java.lang.CharSequence)>($r19);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference deletePolicy>;

        $r29 = new com.fsck.k9.activity.setup.AccountSettings$9;

        specialinvoke $r29.<com.fsck.k9.activity.setup.AccountSettings$9: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        virtualinvoke $r16.<android.preference.ListPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r29);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("expunge_policy");

        $r16 = (android.preference.ListPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference expungePolicy> = $r16;

        $z0 = r0.<com.fsck.k9.activity.setup.AccountSettings: boolean isExpungeCapable>;

        if $z0 == 0 goto label08;

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference expungePolicy>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r30 = virtualinvoke $r9.<com.fsck.k9.Account: com.fsck.k9.Account$Expunge getExpungePolicy()>();

        $r7 = virtualinvoke $r30.<com.fsck.k9.Account$Expunge: java.lang.String name()>();

        virtualinvoke $r16.<android.preference.ListPreference: void setValue(java.lang.String)>($r7);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference expungePolicy>;

        $r18 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference expungePolicy>;

        $r19 = virtualinvoke $r18.<android.preference.ListPreference: java.lang.CharSequence getEntry()>();

        virtualinvoke $r16.<android.preference.ListPreference: void setSummary(java.lang.CharSequence)>($r19);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference expungePolicy>;

        $r31 = new com.fsck.k9.activity.setup.AccountSettings$10;

        specialinvoke $r31.<com.fsck.k9.activity.setup.AccountSettings$10: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        virtualinvoke $r16.<android.preference.ListPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r31);

     label04:
        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("account_sync_remote_deletetions");

        $r15 = (android.preference.CheckBoxPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference syncRemoteDeletions> = $r15;

        $r15 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference syncRemoteDeletions>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $z0 = virtualinvoke $r9.<com.fsck.k9.Account: boolean syncRemoteDeletions()>();

        virtualinvoke $r15.<android.preference.CheckBoxPreference: void setChecked(boolean)>($z0);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("searchable_folders");

        $r16 = (android.preference.ListPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference searchableFolders> = $r16;

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference searchableFolders>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r32 = virtualinvoke $r9.<com.fsck.k9.Account: com.fsck.k9.Account$Searchable getSearchableFolders()>();

        $r7 = virtualinvoke $r32.<com.fsck.k9.Account$Searchable: java.lang.String name()>();

        virtualinvoke $r16.<android.preference.ListPreference: void setValue(java.lang.String)>($r7);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference searchableFolders>;

        $r18 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference searchableFolders>;

        $r19 = virtualinvoke $r18.<android.preference.ListPreference: java.lang.CharSequence getEntry()>();

        virtualinvoke $r16.<android.preference.ListPreference: void setSummary(java.lang.CharSequence)>($r19);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference searchableFolders>;

        $r33 = new com.fsck.k9.activity.setup.AccountSettings$11;

        specialinvoke $r33.<com.fsck.k9.activity.setup.AccountSettings$11: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        virtualinvoke $r16.<android.preference.ListPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r33);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("account_display_count");

        $r16 = (android.preference.ListPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference displayCount> = $r16;

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference displayCount>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $i0 = virtualinvoke $r9.<com.fsck.k9.Account: int getDisplayCount()>();

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        virtualinvoke $r16.<android.preference.ListPreference: void setValue(java.lang.String)>($r7);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference displayCount>;

        $r18 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference displayCount>;

        $r19 = virtualinvoke $r18.<android.preference.ListPreference: java.lang.CharSequence getEntry()>();

        virtualinvoke $r16.<android.preference.ListPreference: void setSummary(java.lang.CharSequence)>($r19);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference displayCount>;

        $r34 = new com.fsck.k9.activity.setup.AccountSettings$12;

        specialinvoke $r34.<com.fsck.k9.activity.setup.AccountSettings$12: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        virtualinvoke $r16.<android.preference.ListPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r34);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("account_message_age");

        $r16 = (android.preference.ListPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference messageAge> = $r16;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $z0 = virtualinvoke $r9.<com.fsck.k9.Account: boolean isSearchByDateCapable()>();

        if $z0 != 0 goto label09;

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("incoming_prefs");

        $r12 = (android.preference.PreferenceScreen) $r11;

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference messageAge>;

        virtualinvoke $r12.<android.preference.PreferenceScreen: boolean removePreference(android.preference.Preference)>($r16);

     label05:
        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("account_autodownload_size");

        $r16 = (android.preference.ListPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference messageSize> = $r16;

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference messageSize>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $i0 = virtualinvoke $r9.<com.fsck.k9.Account: int getMaximumAutoDownloadMessageSize()>();

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        virtualinvoke $r16.<android.preference.ListPreference: void setValue(java.lang.String)>($r7);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference messageSize>;

        $r18 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference messageSize>;

        $r19 = virtualinvoke $r18.<android.preference.ListPreference: java.lang.CharSequence getEntry()>();

        virtualinvoke $r16.<android.preference.ListPreference: void setSummary(java.lang.CharSequence)>($r19);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference messageSize>;

        $r35 = new com.fsck.k9.activity.setup.AccountSettings$14;

        specialinvoke $r35.<com.fsck.k9.activity.setup.AccountSettings$14: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        virtualinvoke $r16.<android.preference.ListPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r35);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("account_default");

        $r15 = (android.preference.CheckBoxPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference accountDefault> = $r15;

        $r15 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference accountDefault>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r8 = staticinvoke <com.fsck.k9.Preferences: com.fsck.k9.Preferences getPreferences(android.content.Context)>(r0);

        $r36 = virtualinvoke $r8.<com.fsck.k9.Preferences: com.fsck.k9.Account getDefaultAccount()>();

        $z0 = virtualinvoke $r9.<com.fsck.k9.Account: boolean equals(java.lang.Object)>($r36);

        virtualinvoke $r15.<android.preference.CheckBoxPreference: void setChecked(boolean)>($z0);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("show_pictures_enum");

        $r16 = (android.preference.ListPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference accountShowPictures> = $r16;

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference accountShowPictures>;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r38 = virtualinvoke $r9.<com.fsck.k9.Account: com.fsck.k9.Account$ShowPictures getShowPictures()>();

        $r37 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38);

        $r7 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<android.preference.ListPreference: void setValue(java.lang.String)>($r7);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference accountShowPictures>;

        $r18 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference accountShowPictures>;

        $r19 = virtualinvoke $r18.<android.preference.ListPreference: java.lang.CharSequence getEntry()>();

        virtualinvoke $r16.<android.preference.ListPreference: void setSummary(java.lang.CharSequence)>($r19);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference accountShowPictures>;

        $r39 = new com.fsck.k9.activity.setup.AccountSettings$15;

        specialinvoke $r39.<com.fsck.k9.activity.setup.AccountSettings$15: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        virtualinvoke $r16.<android.preference.ListPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r39);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("local_storage_provider");

        $r16 = (android.preference.ListPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference localStorageProvider> = $r16;

        $r40 = staticinvoke <com.fsck.k9.mailstore.StorageManager: com.fsck.k9.mailstore.StorageManager getInstance(android.content.Context)>(r0);

        $r41 = virtualinvoke $r40.<com.fsck.k9.mailstore.StorageManager: java.util.Map getAvailableProviders()>();

        $i0 = 0;

        $i1 = interfaceinvoke $r41.<java.util.Map: int size()>();

        r4 = newarray (java.lang.String)[$i1];

        $i1 = interfaceinvoke $r41.<java.util.Map: int size()>();

        r3 = newarray (java.lang.String)[$i1];

        $r42 = interfaceinvoke $r41.<java.util.Map: java.util.Set entrySet()>();

        $r43 = interfaceinvoke $r42.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r43.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r44 = interfaceinvoke $r43.<java.util.Iterator: java.lang.Object next()>();

        r45 = (java.util.Map$Entry) $r44;

        $r44 = interfaceinvoke r45.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (java.lang.String) $r44;

        r3[$i0] = $r7;

        $r44 = interfaceinvoke r45.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (java.lang.String) $r44;

        r4[$i0] = $r7;

        $i0 = $i0 + 1;

        goto label06;

     label07:
        r2 := @caughtexception;

        $r46 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r2, "Could not get remote store", $r46);

        goto label02;

     label08:
        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("incoming_prefs");

        $r12 = (android.preference.PreferenceScreen) $r11;

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference expungePolicy>;

        virtualinvoke $r12.<android.preference.PreferenceScreen: boolean removePreference(android.preference.Preference)>($r16);

        goto label04;

     label09:
        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference messageAge>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $i0 = virtualinvoke $r9.<com.fsck.k9.Account: int getMaximumPolledMessageAge()>();

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        virtualinvoke $r16.<android.preference.ListPreference: void setValue(java.lang.String)>($r7);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference messageAge>;

        $r18 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference messageAge>;

        $r19 = virtualinvoke $r18.<android.preference.ListPreference: java.lang.CharSequence getEntry()>();

        virtualinvoke $r16.<android.preference.ListPreference: void setSummary(java.lang.CharSequence)>($r19);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference messageAge>;

        $r47 = new com.fsck.k9.activity.setup.AccountSettings$13;

        specialinvoke $r47.<com.fsck.k9.activity.setup.AccountSettings$13: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        virtualinvoke $r16.<android.preference.ListPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r47);

        goto label05;

     label10:
        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference localStorageProvider>;

        virtualinvoke $r16.<android.preference.ListPreference: void setEntryValues(java.lang.CharSequence[])>(r3);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference localStorageProvider>;

        virtualinvoke $r16.<android.preference.ListPreference: void setEntries(java.lang.CharSequence[])>(r4);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference localStorageProvider>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r7 = virtualinvoke $r9.<com.fsck.k9.Account: java.lang.String getLocalStorageProviderId()>();

        virtualinvoke $r16.<android.preference.ListPreference: void setValue(java.lang.String)>($r7);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference localStorageProvider>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r7 = virtualinvoke $r9.<com.fsck.k9.Account: java.lang.String getLocalStorageProviderId()>();

        $r44 = interfaceinvoke $r41.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        $r19 = (java.lang.CharSequence) $r44;

        virtualinvoke $r16.<android.preference.ListPreference: void setSummary(java.lang.CharSequence)>($r19);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference localStorageProvider>;

        $r48 = new com.fsck.k9.activity.setup.AccountSettings$16;

        specialinvoke $r48.<com.fsck.k9.activity.setup.AccountSettings$16: void <init>(com.fsck.k9.activity.setup.AccountSettings,java.util.Map)>(r0, $r41);

        virtualinvoke $r16.<android.preference.ListPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r48);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("search");

        $r12 = (android.preference.PreferenceScreen) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.PreferenceScreen searchScreen> = $r12;

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("remote_search_enabled");

        $r15 = (android.preference.CheckBoxPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference cloudSearchEnabled> = $r15;

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("account_remote_search_num_results");

        $r16 = (android.preference.ListPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference remoteSearchNumResults> = $r16;

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference remoteSearchNumResults>;

        $r49 = new com.fsck.k9.activity.setup.AccountSettings$17;

        specialinvoke $r49.<com.fsck.k9.activity.setup.AccountSettings$17: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        virtualinvoke $r16.<android.preference.ListPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r49);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("push_poll_on_connect");

        $r15 = (android.preference.CheckBoxPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference pushPollOnConnect> = $r15;

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("idle_refresh_period");

        $r16 = (android.preference.ListPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference idleRefreshPeriod> = $r16;

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("max_push_folders");

        $r16 = (android.preference.ListPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference mMaxPushFolders> = $r16;

        $z0 = r0.<com.fsck.k9.activity.setup.AccountSettings: boolean isPushCapable>;

        if $z0 == 0 goto label13;

        $r15 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference pushPollOnConnect>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $z0 = virtualinvoke $r9.<com.fsck.k9.Account: boolean isPushPollOnConnect()>();

        virtualinvoke $r15.<android.preference.CheckBoxPreference: void setChecked(boolean)>($z0);

        $r15 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference cloudSearchEnabled>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $z0 = virtualinvoke $r9.<com.fsck.k9.Account: boolean allowRemoteSearch()>();

        virtualinvoke $r15.<android.preference.CheckBoxPreference: void setChecked(boolean)>($z0);

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $i0 = virtualinvoke $r9.<com.fsck.k9.Account: int getRemoteSearchNumResults()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference remoteSearchNumResults>;

        virtualinvoke $r16.<android.preference.ListPreference: void setValue(java.lang.String)>($r7);

        specialinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: void updateRemoteSearchLimit(java.lang.String)>($r7);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference idleRefreshPeriod>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $i0 = virtualinvoke $r9.<com.fsck.k9.Account: int getIdleRefreshMinutes()>();

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        virtualinvoke $r16.<android.preference.ListPreference: void setValue(java.lang.String)>($r7);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference idleRefreshPeriod>;

        $r18 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference idleRefreshPeriod>;

        $r19 = virtualinvoke $r18.<android.preference.ListPreference: java.lang.CharSequence getEntry()>();

        virtualinvoke $r16.<android.preference.ListPreference: void setSummary(java.lang.CharSequence)>($r19);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference idleRefreshPeriod>;

        $r50 = new com.fsck.k9.activity.setup.AccountSettings$18;

        specialinvoke $r50.<com.fsck.k9.activity.setup.AccountSettings$18: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        virtualinvoke $r16.<android.preference.ListPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r50);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference mMaxPushFolders>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $i0 = virtualinvoke $r9.<com.fsck.k9.Account: int getMaxPushFolders()>();

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        virtualinvoke $r16.<android.preference.ListPreference: void setValue(java.lang.String)>($r7);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference mMaxPushFolders>;

        $r18 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference mMaxPushFolders>;

        $r19 = virtualinvoke $r18.<android.preference.ListPreference: java.lang.CharSequence getEntry()>();

        virtualinvoke $r16.<android.preference.ListPreference: void setSummary(java.lang.CharSequence)>($r19);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference mMaxPushFolders>;

        $r51 = new com.fsck.k9.activity.setup.AccountSettings$19;

        specialinvoke $r51.<com.fsck.k9.activity.setup.AccountSettings$19: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        virtualinvoke $r16.<android.preference.ListPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r51);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("folder_push_mode");

        $r16 = (android.preference.ListPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference pushMode> = $r16;

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference pushMode>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r24 = virtualinvoke $r9.<com.fsck.k9.Account: com.fsck.k9.Account$FolderMode getFolderPushMode()>();

        $r7 = virtualinvoke $r24.<com.fsck.k9.Account$FolderMode: java.lang.String name()>();

        virtualinvoke $r16.<android.preference.ListPreference: void setValue(java.lang.String)>($r7);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference pushMode>;

        $r18 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference pushMode>;

        $r19 = virtualinvoke $r18.<android.preference.ListPreference: java.lang.CharSequence getEntry()>();

        virtualinvoke $r16.<android.preference.ListPreference: void setSummary(java.lang.CharSequence)>($r19);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference pushMode>;

        $r52 = new com.fsck.k9.activity.setup.AccountSettings$20;

        specialinvoke $r52.<com.fsck.k9.activity.setup.AccountSettings$20: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        virtualinvoke $r16.<android.preference.ListPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r52);

     label11:
        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("account_notify");

        $r15 = (android.preference.CheckBoxPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference accountNotify> = $r15;

        $r15 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference accountNotify>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $z0 = virtualinvoke $r9.<com.fsck.k9.Account: boolean isNotifyNewMail()>();

        virtualinvoke $r15.<android.preference.CheckBoxPreference: void setChecked(boolean)>($z0);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("folder_notify_new_mail_mode");

        $r16 = (android.preference.ListPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference accountNotifyNewMailMode> = $r16;

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference accountNotifyNewMailMode>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r24 = virtualinvoke $r9.<com.fsck.k9.Account: com.fsck.k9.Account$FolderMode getFolderNotifyNewMailMode()>();

        $r7 = virtualinvoke $r24.<com.fsck.k9.Account$FolderMode: java.lang.String name()>();

        virtualinvoke $r16.<android.preference.ListPreference: void setValue(java.lang.String)>($r7);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference accountNotifyNewMailMode>;

        $r18 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference accountNotifyNewMailMode>;

        $r19 = virtualinvoke $r18.<android.preference.ListPreference: java.lang.CharSequence getEntry()>();

        virtualinvoke $r16.<android.preference.ListPreference: void setSummary(java.lang.CharSequence)>($r19);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference accountNotifyNewMailMode>;

        $r53 = new com.fsck.k9.activity.setup.AccountSettings$21;

        specialinvoke $r53.<com.fsck.k9.activity.setup.AccountSettings$21: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        virtualinvoke $r16.<android.preference.ListPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r53);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("account_notify_self");

        $r15 = (android.preference.CheckBoxPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference accountNotifySelf> = $r15;

        $r15 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference accountNotifySelf>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $z0 = virtualinvoke $r9.<com.fsck.k9.Account: boolean isNotifySelfNewMail()>();

        virtualinvoke $r15.<android.preference.CheckBoxPreference: void setChecked(boolean)>($z0);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("account_notify_contacts_mail_only");

        $r15 = (android.preference.CheckBoxPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference accountNotifyContactsMailOnly> = $r15;

        $r15 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference accountNotifyContactsMailOnly>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $z0 = virtualinvoke $r9.<com.fsck.k9.Account: boolean isNotifyContactsMailOnly()>();

        virtualinvoke $r15.<android.preference.CheckBoxPreference: void setChecked(boolean)>($z0);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("account_notify_sync");

        $r15 = (android.preference.CheckBoxPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference accountNotifySync> = $r15;

        $r15 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference accountNotifySync>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $z0 = virtualinvoke $r9.<com.fsck.k9.Account: boolean isShowOngoing()>();

        virtualinvoke $r15.<android.preference.CheckBoxPreference: void setChecked(boolean)>($z0);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("account_ringtone");

        $r54 = (android.preference.RingtonePreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.RingtonePreference accountRingtone> = $r54;

        $r54 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.RingtonePreference accountRingtone>;

        $r55 = virtualinvoke $r54.<android.preference.RingtonePreference: android.preference.PreferenceManager getPreferenceManager()>();

        $r56 = virtualinvoke $r55.<android.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>();

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r57 = virtualinvoke $r9.<com.fsck.k9.Account: com.fsck.k9.NotificationSetting getNotificationSetting()>();

        $z0 = virtualinvoke $r57.<com.fsck.k9.NotificationSetting: boolean isRingEnabled()>();

        if $z0 != 0 goto label14;

        $r7 = null;

     label12:
        $r58 = interfaceinvoke $r56.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r58 = interfaceinvoke $r58.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("account_ringtone", $r7);

        interfaceinvoke $r58.<android.content.SharedPreferences$Editor: boolean commit()>();

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("account_vibrate");

        $r15 = (android.preference.CheckBoxPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference accountVibrateEnabled> = $r15;

        $r15 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference accountVibrateEnabled>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r57 = virtualinvoke $r9.<com.fsck.k9.Account: com.fsck.k9.NotificationSetting getNotificationSetting()>();

        $z0 = virtualinvoke $r57.<com.fsck.k9.NotificationSetting: boolean isVibrateEnabled()>();

        virtualinvoke $r15.<android.preference.CheckBoxPreference: void setChecked(boolean)>($z0);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("account_vibrate_pattern");

        $r16 = (android.preference.ListPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference accountVibratePattern> = $r16;

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference accountVibratePattern>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r57 = virtualinvoke $r9.<com.fsck.k9.Account: com.fsck.k9.NotificationSetting getNotificationSetting()>();

        $i0 = virtualinvoke $r57.<com.fsck.k9.NotificationSetting: int getVibratePattern()>();

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        virtualinvoke $r16.<android.preference.ListPreference: void setValue(java.lang.String)>($r7);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference accountVibratePattern>;

        $r18 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference accountVibratePattern>;

        $r19 = virtualinvoke $r18.<android.preference.ListPreference: java.lang.CharSequence getEntry()>();

        virtualinvoke $r16.<android.preference.ListPreference: void setSummary(java.lang.CharSequence)>($r19);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference accountVibratePattern>;

        $r59 = new com.fsck.k9.activity.setup.AccountSettings$22;

        specialinvoke $r59.<com.fsck.k9.activity.setup.AccountSettings$22: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        virtualinvoke $r16.<android.preference.ListPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r59);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("account_vibrate_times");

        $r16 = (android.preference.ListPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference accountVibrateTimes> = $r16;

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference accountVibrateTimes>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r57 = virtualinvoke $r9.<com.fsck.k9.Account: com.fsck.k9.NotificationSetting getNotificationSetting()>();

        $i0 = virtualinvoke $r57.<com.fsck.k9.NotificationSetting: int getVibrateTimes()>();

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        virtualinvoke $r16.<android.preference.ListPreference: void setValue(java.lang.String)>($r7);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference accountVibrateTimes>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r57 = virtualinvoke $r9.<com.fsck.k9.Account: com.fsck.k9.NotificationSetting getNotificationSetting()>();

        $i0 = virtualinvoke $r57.<com.fsck.k9.NotificationSetting: int getVibrateTimes()>();

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        virtualinvoke $r16.<android.preference.ListPreference: void setSummary(java.lang.CharSequence)>($r7);

        $r16 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.ListPreference accountVibrateTimes>;

        $r60 = new com.fsck.k9.activity.setup.AccountSettings$23;

        specialinvoke $r60.<com.fsck.k9.activity.setup.AccountSettings$23: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        virtualinvoke $r16.<android.preference.ListPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r60);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("account_led");

        $r15 = (android.preference.CheckBoxPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference accountLedEnabled> = $r15;

        $r15 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference accountLedEnabled>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r57 = virtualinvoke $r9.<com.fsck.k9.Account: com.fsck.k9.NotificationSetting getNotificationSetting()>();

        $z0 = virtualinvoke $r57.<com.fsck.k9.NotificationSetting: boolean isLedEnabled()>();

        virtualinvoke $r15.<android.preference.CheckBoxPreference: void setChecked(boolean)>($z0);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("notification_opens_unread");

        $r15 = (android.preference.CheckBoxPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference notificationOpensUnread> = $r15;

        $r15 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.CheckBoxPreference notificationOpensUnread>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $z0 = virtualinvoke $r9.<com.fsck.k9.Account: boolean goToUnreadMessageSearch()>();

        virtualinvoke $r15.<android.preference.CheckBoxPreference: void setChecked(boolean)>($z0);

        $r61 = new com.fsck.k9.activity.setup.AccountSettings$PopulateFolderPrefsTask;

        specialinvoke $r61.<com.fsck.k9.activity.setup.AccountSettings$PopulateFolderPrefsTask: void <init>(com.fsck.k9.activity.setup.AccountSettings,com.fsck.k9.activity.setup.AccountSettings$1)>(r0, null);

        $r62 = newarray (java.lang.Void)[0];

        virtualinvoke $r61.<com.fsck.k9.activity.setup.AccountSettings$PopulateFolderPrefsTask: android.os.AsyncTask execute(java.lang.Object[])>($r62);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("chip_color");

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference chipColor> = $r11;

        $r11 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference chipColor>;

        $r63 = new com.fsck.k9.activity.setup.AccountSettings$24;

        specialinvoke $r63.<com.fsck.k9.activity.setup.AccountSettings$24: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        virtualinvoke $r11.<android.preference.Preference: void setOnPreferenceClickListener(android.preference.Preference$OnPreferenceClickListener)>($r63);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("led_color");

        r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference ledColor> = $r11;

        $r11 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference ledColor>;

        $r64 = new com.fsck.k9.activity.setup.AccountSettings$25;

        specialinvoke $r64.<com.fsck.k9.activity.setup.AccountSettings$25: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        virtualinvoke $r11.<android.preference.Preference: void setOnPreferenceClickListener(android.preference.Preference$OnPreferenceClickListener)>($r64);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("composition");

        $r65 = new com.fsck.k9.activity.setup.AccountSettings$26;

        specialinvoke $r65.<com.fsck.k9.activity.setup.AccountSettings$26: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        virtualinvoke $r11.<android.preference.Preference: void setOnPreferenceClickListener(android.preference.Preference$OnPreferenceClickListener)>($r65);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("manage_identities");

        $r66 = new com.fsck.k9.activity.setup.AccountSettings$27;

        specialinvoke $r66.<com.fsck.k9.activity.setup.AccountSettings$27: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        virtualinvoke $r11.<android.preference.Preference: void setOnPreferenceClickListener(android.preference.Preference$OnPreferenceClickListener)>($r66);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("incoming");

        $r67 = new com.fsck.k9.activity.setup.AccountSettings$28;

        specialinvoke $r67.<com.fsck.k9.activity.setup.AccountSettings$28: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        virtualinvoke $r11.<android.preference.Preference: void setOnPreferenceClickListener(android.preference.Preference$OnPreferenceClickListener)>($r67);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("outgoing");

        $r68 = new com.fsck.k9.activity.setup.AccountSettings$29;

        specialinvoke $r68.<com.fsck.k9.activity.setup.AccountSettings$29: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        virtualinvoke $r11.<android.preference.Preference: void setOnPreferenceClickListener(android.preference.Preference$OnPreferenceClickListener)>($r68);

        $z0 = staticinvoke <com.fsck.k9.K9: boolean isOpenPgpProviderConfigured()>();

        r0.<com.fsck.k9.activity.setup.AccountSettings: boolean hasPgpCrypto> = $z0;

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("crypto");

        $r12 = (android.preference.PreferenceScreen) $r11;

        $z0 = r0.<com.fsck.k9.activity.setup.AccountSettings: boolean hasPgpCrypto>;

        if $z0 == 0 goto label15;

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("crypto_key");

        $r69 = (org.openintents.openpgp.util.OpenPgpKeyPreference) $r11;

        r0.<com.fsck.k9.activity.setup.AccountSettings: org.openintents.openpgp.util.OpenPgpKeyPreference pgpCryptoKey> = $r69;

        $r69 = r0.<com.fsck.k9.activity.setup.AccountSettings: org.openintents.openpgp.util.OpenPgpKeyPreference pgpCryptoKey>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $l2 = virtualinvoke $r9.<com.fsck.k9.Account: long getCryptoKey()>();

        virtualinvoke $r69.<org.openintents.openpgp.util.OpenPgpKeyPreference: void setValue(long)>($l2);

        $r69 = r0.<com.fsck.k9.activity.setup.AccountSettings: org.openintents.openpgp.util.OpenPgpKeyPreference pgpCryptoKey>;

        $r7 = staticinvoke <com.fsck.k9.K9: java.lang.String getOpenPgpProvider()>();

        virtualinvoke $r69.<org.openintents.openpgp.util.OpenPgpKeyPreference: void setOpenPgpProvider(java.lang.String)>($r7);

        $r69 = r0.<com.fsck.k9.activity.setup.AccountSettings: org.openintents.openpgp.util.OpenPgpKeyPreference pgpCryptoKey>;

        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r70 = virtualinvoke $r9.<com.fsck.k9.Account: com.fsck.k9.Identity getIdentity(int)>(0);

        $r7 = staticinvoke <com.fsck.k9.crypto.OpenPgpApiHelper: java.lang.String buildUserId(com.fsck.k9.Identity)>($r70);

        virtualinvoke $r69.<org.openintents.openpgp.util.OpenPgpKeyPreference: void setDefaultUserId(java.lang.String)>($r7);

        $r69 = r0.<com.fsck.k9.activity.setup.AccountSettings: org.openintents.openpgp.util.OpenPgpKeyPreference pgpCryptoKey>;

        $r71 = new com.fsck.k9.activity.setup.AccountSettings$30;

        specialinvoke $r71.<com.fsck.k9.activity.setup.AccountSettings$30: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        virtualinvoke $r69.<org.openintents.openpgp.util.OpenPgpKeyPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r71);

        virtualinvoke $r12.<android.preference.PreferenceScreen: void setOnPreferenceClickListener(android.preference.Preference$OnPreferenceClickListener)>(null);

        return;

     label13:
        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("incoming_prefs");

        $r12 = (android.preference.PreferenceScreen) $r11;

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("push_advanced");

        virtualinvoke $r12.<android.preference.PreferenceScreen: boolean removePreference(android.preference.Preference)>($r11);

        $r11 = virtualinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.Preference findPreference(java.lang.CharSequence)>("folder_push_mode");

        virtualinvoke $r12.<android.preference.PreferenceScreen: boolean removePreference(android.preference.Preference)>($r11);

        $r12 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.PreferenceScreen mainScreen>;

        $r72 = r0.<com.fsck.k9.activity.setup.AccountSettings: android.preference.PreferenceScreen searchScreen>;

        virtualinvoke $r12.<android.preference.PreferenceScreen: boolean removePreference(android.preference.Preference)>($r72);

        goto label11;

     label14:
        $r9 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r57 = virtualinvoke $r9.<com.fsck.k9.Account: com.fsck.k9.NotificationSetting getNotificationSetting()>();

        $r7 = virtualinvoke $r57.<com.fsck.k9.NotificationSetting: java.lang.String getRingtone()>();

        goto label12;

     label15:
        virtualinvoke $r12.<android.preference.PreferenceScreen: void setSummary(int)>(2131165297);

        $r73 = new com.fsck.k9.activity.setup.AccountSettings$31;

        specialinvoke $r73.<com.fsck.k9.activity.setup.AccountSettings$31: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        virtualinvoke $r12.<android.preference.PreferenceScreen: void setOnPreferenceClickListener(android.preference.Preference$OnPreferenceClickListener)>($r73);

        return;

        catch java.lang.Exception from label01 to label02 with label07;
    }
    public android.app.Dialog onCreateDialog(int)
    {
        com.fsck.k9.activity.setup.AccountSettings r0;
        int $i0;
        com.fsck.k9.activity.ColorPickerDialog r1;
        com.fsck.k9.activity.setup.AccountSettings$32 $r2;
        com.fsck.k9.Account $r3;
        com.fsck.k9.activity.setup.AccountSettings$33 $r4;
        com.fsck.k9.NotificationSetting $r5;

        r0 := @this: com.fsck.k9.activity.setup.AccountSettings;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            default: goto label1;
        };

     label1:
        return null;

     label2:
        r1 = new com.fsck.k9.activity.ColorPickerDialog;

        $r2 = new com.fsck.k9.activity.setup.AccountSettings$32;

        specialinvoke $r2.<com.fsck.k9.activity.setup.AccountSettings$32: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $i0 = virtualinvoke $r3.<com.fsck.k9.Account: int getChipColor()>();

        specialinvoke r1.<com.fsck.k9.activity.ColorPickerDialog: void <init>(android.content.Context,com.fsck.k9.activity.ColorPickerDialog$OnColorChangedListener,int)>(r0, $r2, $i0);

        return r1;

     label3:
        r1 = new com.fsck.k9.activity.ColorPickerDialog;

        $r4 = new com.fsck.k9.activity.setup.AccountSettings$33;

        specialinvoke $r4.<com.fsck.k9.activity.setup.AccountSettings$33: void <init>(com.fsck.k9.activity.setup.AccountSettings)>(r0);

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r5 = virtualinvoke $r3.<com.fsck.k9.Account: com.fsck.k9.NotificationSetting getNotificationSetting()>();

        $i0 = virtualinvoke $r5.<com.fsck.k9.NotificationSetting: int getLedColor()>();

        specialinvoke r1.<com.fsck.k9.activity.ColorPickerDialog: void <init>(android.content.Context,com.fsck.k9.activity.ColorPickerDialog$OnColorChangedListener,int)>(r0, $r4, $i0);

        return r1;
    }
    protected void onPause()
    {
        com.fsck.k9.activity.setup.AccountSettings r0;

        r0 := @this: com.fsck.k9.activity.setup.AccountSettings;

        specialinvoke r0.<com.fsck.k9.activity.setup.AccountSettings: void saveSettings()>();

        specialinvoke r0.<com.fsck.k9.activity.K9PreferenceActivity: void onPause()>();

        return;
    }
    public void onPrepareDialog(int, android.app.Dialog)
    {
        com.fsck.k9.activity.setup.AccountSettings r0;
        int $i0;
        android.app.Dialog $r1;
        com.fsck.k9.activity.ColorPickerDialog r2;
        com.fsck.k9.Account $r3;
        com.fsck.k9.NotificationSetting $r4;

        r0 := @this: com.fsck.k9.activity.setup.AccountSettings;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.app.Dialog;

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            default: goto label1;
        };

     label1:
        return;

     label2:
        r2 = (com.fsck.k9.activity.ColorPickerDialog) $r1;

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $i0 = virtualinvoke $r3.<com.fsck.k9.Account: int getChipColor()>();

        virtualinvoke r2.<com.fsck.k9.activity.ColorPickerDialog: void setColor(int)>($i0);

        return;

     label3:
        r2 = (com.fsck.k9.activity.ColorPickerDialog) $r1;

        $r3 = r0.<com.fsck.k9.activity.setup.AccountSettings: com.fsck.k9.Account account>;

        $r4 = virtualinvoke $r3.<com.fsck.k9.Account: com.fsck.k9.NotificationSetting getNotificationSetting()>();

        $i0 = virtualinvoke $r4.<com.fsck.k9.NotificationSetting: int getLedColor()>();

        virtualinvoke r2.<com.fsck.k9.activity.ColorPickerDialog: void setColor(int)>($i0);

        return;
    }
