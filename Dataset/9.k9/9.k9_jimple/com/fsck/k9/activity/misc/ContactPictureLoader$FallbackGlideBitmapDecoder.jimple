com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideBitmapDecoder extends java.lang.Object implements com.bumptech.glide.load.ResourceDecoder
private final android.content.Context context
final com.fsck.k9.activity.misc.ContactPictureLoader this$0
    void <init>(com.fsck.k9.activity.misc.ContactPictureLoader, android.content.Context)
    {
        com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideBitmapDecoder r0;
        com.fsck.k9.activity.misc.ContactPictureLoader $r1;
        android.content.Context $r2;

        r0 := @this: com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideBitmapDecoder;

        $r1 := @parameter0: com.fsck.k9.activity.misc.ContactPictureLoader;

        $r2 := @parameter1: android.content.Context;

        r0.<com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideBitmapDecoder: com.fsck.k9.activity.misc.ContactPictureLoader this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideBitmapDecoder: android.content.Context context> = $r2;

        return;
    }
    public com.bumptech.glide.load.engine.Resource decode(com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideParams, int, int) throws java.io.IOException
    {
        com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideBitmapDecoder r0;
        com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideParams $r1;
        int $i0, $i1;
        android.content.Context $r2;
        com.bumptech.glide.Glide $r3;
        com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool $r4;
        com.fsck.k9.activity.misc.ContactPictureLoader $r5;
        android.graphics.Bitmap$Config $r6;
        android.graphics.Bitmap $r7, r8;
        com.bumptech.glide.load.resource.bitmap.BitmapResource $r9;

        r0 := @this: com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideBitmapDecoder;

        $r1 := @parameter0: com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideParams;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideBitmapDecoder: android.content.Context context>;

        $r3 = staticinvoke <com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>($r2);

        $r4 = virtualinvoke $r3.<com.bumptech.glide.Glide: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool getBitmapPool()>();

        $r5 = r0.<com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideBitmapDecoder: com.fsck.k9.activity.misc.ContactPictureLoader this$0>;

        $i0 = staticinvoke <com.fsck.k9.activity.misc.ContactPictureLoader: int access$200(com.fsck.k9.activity.misc.ContactPictureLoader)>($r5);

        $r5 = r0.<com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideBitmapDecoder: com.fsck.k9.activity.misc.ContactPictureLoader this$0>;

        $i1 = staticinvoke <com.fsck.k9.activity.misc.ContactPictureLoader: int access$200(com.fsck.k9.activity.misc.ContactPictureLoader)>($r5);

        $r6 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r7 = interfaceinvoke $r4.<com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool: android.graphics.Bitmap getDirty(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r6);

        r8 = $r7;

        if $r7 != null goto label1;

        $r5 = r0.<com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideBitmapDecoder: com.fsck.k9.activity.misc.ContactPictureLoader this$0>;

        $i0 = staticinvoke <com.fsck.k9.activity.misc.ContactPictureLoader: int access$200(com.fsck.k9.activity.misc.ContactPictureLoader)>($r5);

        $r5 = r0.<com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideBitmapDecoder: com.fsck.k9.activity.misc.ContactPictureLoader this$0>;

        $i1 = staticinvoke <com.fsck.k9.activity.misc.ContactPictureLoader: int access$200(com.fsck.k9.activity.misc.ContactPictureLoader)>($r5);

        $r6 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r8 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r6);

     label1:
        $r5 = r0.<com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideBitmapDecoder: com.fsck.k9.activity.misc.ContactPictureLoader this$0>;

        staticinvoke <com.fsck.k9.activity.misc.ContactPictureLoader: android.graphics.Bitmap access$300(com.fsck.k9.activity.misc.ContactPictureLoader,android.graphics.Bitmap,com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideParams)>($r5, r8, $r1);

        $r9 = staticinvoke <com.bumptech.glide.load.resource.bitmap.BitmapResource: com.bumptech.glide.load.resource.bitmap.BitmapResource obtain(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)>(r8, $r4);

        return $r9;
    }
    public volatile com.bumptech.glide.load.engine.Resource decode(java.lang.Object, int, int) throws java.io.IOException
    {
        com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideBitmapDecoder r0;
        int $i0, $i1;
        com.bumptech.glide.load.engine.Resource $r1;
        java.lang.Object $r2;
        com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideParams $r3;

        r0 := @this: com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideBitmapDecoder;

        $r2 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r3 = (com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideParams) $r2;

        $r1 = virtualinvoke r0.<com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideBitmapDecoder: com.bumptech.glide.load.engine.Resource decode(com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideParams,int,int)>($r3, $i0, $i1);

        return $r1;
    }
    public java.lang.String getId()
    {
        com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideBitmapDecoder r0;

        r0 := @this: com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideBitmapDecoder;

        return "fallback-photo";
    }
