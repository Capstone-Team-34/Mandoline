com.fsck.k9.activity.misc.ContactPictureLoader extends java.lang.Object
private static final int[] CONTACT_DUMMY_COLORS_ARGB
private static final java.util.regex.Pattern EXTRACT_LETTER_PATTERN
private static final java.lang.String FALLBACK_CONTACT_LETTER
private static final int PICTURE_SIZE
private com.fsck.k9.helper.Contacts mContactsHelper
private int mDefaultBackgroundColor
private int mPictureSizeInPx
private android.content.res.Resources mResources
    static void <clinit>()
    {
        java.util.regex.Pattern $r0;
        int[] $r1;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\p{L}\\p{M}*");

        <com.fsck.k9.activity.misc.ContactPictureLoader: java.util.regex.Pattern EXTRACT_LETTER_PATTERN> = $r0;

        $r1 = newarray (int)[10];

        $r1[0] = -13388315;

        $r1[1] = -5609780;

        $r1[2] = -6697984;

        $r1[3] = -17613;

        $r1[4] = -48060;

        $r1[5] = -16737844;

        $r1[6] = -6736948;

        $r1[7] = -10053376;

        $r1[8] = -30720;

        $r1[9] = -3407872;

        <com.fsck.k9.activity.misc.ContactPictureLoader: int[] CONTACT_DUMMY_COLORS_ARGB> = $r1;

        return;
    }
    public void <init>(android.content.Context, int)
    {
        com.fsck.k9.activity.misc.ContactPictureLoader r0;
        android.content.Context $r1;
        int $i0, $i1;
        float f0;
        android.content.res.Resources $r2;
        com.fsck.k9.helper.Contacts $r3;
        android.util.DisplayMetrics $r4;

        r0 := @this: com.fsck.k9.activity.misc.ContactPictureLoader;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke $r1.<android.content.Context: android.content.Context getApplicationContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        r0.<com.fsck.k9.activity.misc.ContactPictureLoader: android.content.res.Resources mResources> = $r2;

        $r3 = staticinvoke <com.fsck.k9.helper.Contacts: com.fsck.k9.helper.Contacts getInstance(android.content.Context)>($r1);

        r0.<com.fsck.k9.activity.misc.ContactPictureLoader: com.fsck.k9.helper.Contacts mContactsHelper> = $r3;

        $r2 = r0.<com.fsck.k9.activity.misc.ContactPictureLoader: android.content.res.Resources mResources>;

        $r4 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = $r4.<android.util.DisplayMetrics: float density>;

        f0 = 40.0F * f0;

        $i1 = (int) f0;

        r0.<com.fsck.k9.activity.misc.ContactPictureLoader: int mPictureSizeInPx> = $i1;

        r0.<com.fsck.k9.activity.misc.ContactPictureLoader: int mDefaultBackgroundColor> = $i0;

        return;
    }
    static void access$100(com.fsck.k9.activity.misc.ContactPictureLoader, com.fsck.k9.mail.Address, android.widget.ImageView)
    {
        com.fsck.k9.activity.misc.ContactPictureLoader $r0;
        com.fsck.k9.mail.Address $r1;
        android.widget.ImageView $r2;

        $r0 := @parameter0: com.fsck.k9.activity.misc.ContactPictureLoader;

        $r1 := @parameter1: com.fsck.k9.mail.Address;

        $r2 := @parameter2: android.widget.ImageView;

        specialinvoke $r0.<com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)>($r1, $r2);

        return;
    }
    static int access$200(com.fsck.k9.activity.misc.ContactPictureLoader)
    {
        com.fsck.k9.activity.misc.ContactPictureLoader $r0;
        int i0;

        $r0 := @parameter0: com.fsck.k9.activity.misc.ContactPictureLoader;

        i0 = $r0.<com.fsck.k9.activity.misc.ContactPictureLoader: int mPictureSizeInPx>;

        return i0;
    }
    static android.graphics.Bitmap access$300(com.fsck.k9.activity.misc.ContactPictureLoader, android.graphics.Bitmap, com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideParams)
    {
        com.fsck.k9.activity.misc.ContactPictureLoader $r0;
        android.graphics.Bitmap $r1;
        com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideParams $r2;

        $r0 := @parameter0: com.fsck.k9.activity.misc.ContactPictureLoader;

        $r1 := @parameter1: android.graphics.Bitmap;

        $r2 := @parameter2: com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideParams;

        $r1 = specialinvoke $r0.<com.fsck.k9.activity.misc.ContactPictureLoader: android.graphics.Bitmap drawTextAndBgColorOnBitmap(android.graphics.Bitmap,com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideParams)>($r1, $r2);

        return $r1;
    }
    private int calcUnknownContactColor(com.fsck.k9.mail.Address)
    {
        com.fsck.k9.activity.misc.ContactPictureLoader r0;
        com.fsck.k9.mail.Address $r1;
        int i0, $i1;
        int[] $r2;

        r0 := @this: com.fsck.k9.activity.misc.ContactPictureLoader;

        $r1 := @parameter0: com.fsck.k9.mail.Address;

        i0 = r0.<com.fsck.k9.activity.misc.ContactPictureLoader: int mDefaultBackgroundColor>;

        if i0 == 0 goto label1;

        i0 = r0.<com.fsck.k9.activity.misc.ContactPictureLoader: int mDefaultBackgroundColor>;

        return i0;

     label1:
        i0 = virtualinvoke $r1.<com.fsck.k9.mail.Address: int hashCode()>();

        i0 = 2147483647 & i0;

        $r2 = <com.fsck.k9.activity.misc.ContactPictureLoader: int[] CONTACT_DUMMY_COLORS_ARGB>;

        $i1 = lengthof $r2;

        i0 = i0 % $i1;

        $r2 = <com.fsck.k9.activity.misc.ContactPictureLoader: int[] CONTACT_DUMMY_COLORS_ARGB>;

        i0 = $r2[i0];

        return i0;
    }
    protected static java.lang.String calcUnknownContactLetter(com.fsck.k9.mail.Address)
    {
        com.fsck.k9.mail.Address $r0;
        java.util.Locale $r1;
        java.lang.String r2, $r3;
        java.util.regex.Pattern $r4;
        java.util.regex.Matcher $r5;
        boolean $z0;

        $r0 := @parameter0: com.fsck.k9.mail.Address;

        r2 = null;

        $r3 = virtualinvoke $r0.<com.fsck.k9.mail.Address: java.lang.String getPersonal()>();

        if $r3 == null goto label3;

     label1:
        $r4 = <com.fsck.k9.activity.misc.ContactPictureLoader: java.util.regex.Pattern EXTRACT_LETTER_PATTERN>;

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r3);

        $z0 = virtualinvoke $r5.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label2;

        r2 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String group(int)>(0);

        $r1 = <java.util.Locale: java.util.Locale US>;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r1);

     label2:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label4;

        return "?";

     label3:
        $r3 = virtualinvoke $r0.<com.fsck.k9.mail.Address: java.lang.String getAddress()>();

        goto label1;

     label4:
        return r2;
    }
    private android.graphics.Bitmap drawTextAndBgColorOnBitmap(android.graphics.Bitmap, com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideParams)
    {
        com.fsck.k9.activity.misc.ContactPictureLoader r0;
        android.graphics.Bitmap $r1;
        com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideParams $r2;
        android.graphics.Canvas r3;
        android.graphics.Paint r4;
        android.graphics.Rect r5;
        com.fsck.k9.mail.Address $r6;
        int $i0;
        java.lang.String $r7;
        android.graphics.Paint$Style $r8;
        float $f0, $f1, $f2;

        r0 := @this: com.fsck.k9.activity.misc.ContactPictureLoader;

        $r1 := @parameter0: android.graphics.Bitmap;

        $r2 := @parameter1: com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideParams;

        r3 = new android.graphics.Canvas;

        specialinvoke r3.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r1);

        $r6 = $r2.<com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideParams: com.fsck.k9.mail.Address address>;

        $i0 = specialinvoke r0.<com.fsck.k9.activity.misc.ContactPictureLoader: int calcUnknownContactColor(com.fsck.k9.mail.Address)>($r6);

        virtualinvoke $r1.<android.graphics.Bitmap: void eraseColor(int)>($i0);

        $r6 = $r2.<com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideParams: com.fsck.k9.mail.Address address>;

        $r7 = staticinvoke <com.fsck.k9.activity.misc.ContactPictureLoader: java.lang.String calcUnknownContactLetter(com.fsck.k9.mail.Address)>($r6);

        r4 = new android.graphics.Paint;

        specialinvoke r4.<android.graphics.Paint: void <init>()>();

        virtualinvoke r4.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r8 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke r4.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r8);

        virtualinvoke r4.<android.graphics.Paint: void setARGB(int,int,int,int)>(255, 255, 255, 255);

        $i0 = r0.<com.fsck.k9.activity.misc.ContactPictureLoader: int mPictureSizeInPx>;

        $i0 = $i0 * 3;

        $i0 = $i0 / 4;

        $f0 = (float) $i0;

        virtualinvoke r4.<android.graphics.Paint: void setTextSize(float)>($f0);

        r5 = new android.graphics.Rect;

        specialinvoke r5.<android.graphics.Rect: void <init>()>();

        virtualinvoke r4.<android.graphics.Paint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)>($r7, 0, 1, r5);

        $f0 = virtualinvoke r4.<android.graphics.Paint: float measureText(java.lang.String)>($r7);

        $i0 = r0.<com.fsck.k9.activity.misc.ContactPictureLoader: int mPictureSizeInPx>;

        $f1 = (float) $i0;

        $f1 = $f1 / 2.0F;

        $f0 = $f0 / 2.0F;

        $f0 = $f1 - $f0;

        $i0 = r0.<com.fsck.k9.activity.misc.ContactPictureLoader: int mPictureSizeInPx>;

        $f1 = (float) $i0;

        $f1 = $f1 / 2.0F;

        $i0 = virtualinvoke r5.<android.graphics.Rect: int height()>();

        $f2 = (float) $i0;

        $f2 = $f2 / 2.0F;

        $f1 = $f1 + $f2;

        virtualinvoke r3.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r7, $f0, $f1, r4);

        return $r1;
    }
    private void loadContactPicture(android.net.Uri, com.fsck.k9.mail.Address, android.widget.ImageView)
    {
        com.fsck.k9.activity.misc.ContactPictureLoader r0;
        android.net.Uri $r1;
        com.fsck.k9.mail.Address $r2;
        android.widget.ImageView $r3;
        com.fsck.k9.activity.misc.ContactPictureLoader$1 r4;
        int $i0, $i1;
        android.content.Context $r5;
        com.bumptech.glide.RequestManager $r6;
        com.bumptech.glide.DrawableTypeRequest $r7;
        com.bumptech.glide.load.engine.DiskCacheStrategy $r8;
        com.bumptech.glide.DrawableRequestBuilder $r9;

        r0 := @this: com.fsck.k9.activity.misc.ContactPictureLoader;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: com.fsck.k9.mail.Address;

        $r3 := @parameter2: android.widget.ImageView;

        if $r1 == null goto label1;

        r4 = new com.fsck.k9.activity.misc.ContactPictureLoader$1;

        specialinvoke r4.<com.fsck.k9.activity.misc.ContactPictureLoader$1: void <init>(com.fsck.k9.activity.misc.ContactPictureLoader,com.fsck.k9.mail.Address,android.widget.ImageView)>(r0, $r2, $r3);

        $r5 = virtualinvoke $r3.<android.widget.ImageView: android.content.Context getContext()>();

        $r6 = staticinvoke <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)>($r5);

        $r7 = virtualinvoke $r6.<com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest load(android.net.Uri)>($r1);

        $r8 = <com.bumptech.glide.load.engine.DiskCacheStrategy: com.bumptech.glide.load.engine.DiskCacheStrategy NONE>;

        $r9 = virtualinvoke $r7.<com.bumptech.glide.DrawableTypeRequest: com.bumptech.glide.DrawableRequestBuilder diskCacheStrategy(com.bumptech.glide.load.engine.DiskCacheStrategy)>($r8);

        $r9 = virtualinvoke $r9.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder listener(com.bumptech.glide.request.RequestListener)>(r4);

        $r9 = virtualinvoke $r9.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder dontAnimate()>();

        $i1 = r0.<com.fsck.k9.activity.misc.ContactPictureLoader: int mPictureSizeInPx>;

        $i0 = r0.<com.fsck.k9.activity.misc.ContactPictureLoader: int mPictureSizeInPx>;

        $r9 = virtualinvoke $r9.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder override(int,int)>($i1, $i0);

        virtualinvoke $r9.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.request.target.Target into(android.widget.ImageView)>($r3);

        return;

     label1:
        specialinvoke r0.<com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)>($r2, $r3);

        return;
    }
    private void loadFallbackPicture(com.fsck.k9.mail.Address, android.widget.ImageView)
    {
        com.fsck.k9.activity.misc.ContactPictureLoader r0;
        com.fsck.k9.mail.Address $r1;
        android.widget.ImageView $r2;
        android.content.Context $r3;
        com.bumptech.glide.RequestManager $r4;
        com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideModelLoader $r5;
        com.bumptech.glide.RequestManager$GenericModelRequest $r6;
        com.bumptech.glide.RequestManager$GenericModelRequest$GenericTypeRequest $r7;
        com.bumptech.glide.GenericTranscodeRequest $r8;
        com.bumptech.glide.load.resource.transcode.BitmapToGlideDrawableTranscoder $r9;
        com.bumptech.glide.GenericRequestBuilder $r10;
        com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideBitmapDecoder $r11;
        com.bumptech.glide.load.resource.bitmap.BitmapEncoder $r12;
        android.graphics.Bitmap$CompressFormat $r13;
        com.bumptech.glide.load.resource.file.FileToStreamDecoder $r14;
        com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder $r15;
        com.bumptech.glide.load.engine.DiskCacheStrategy $r16;
        com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideParams $r17;
        int $i0, $i1;

        r0 := @this: com.fsck.k9.activity.misc.ContactPictureLoader;

        $r1 := @parameter0: com.fsck.k9.mail.Address;

        $r2 := @parameter1: android.widget.ImageView;

        $r3 = virtualinvoke $r2.<android.widget.ImageView: android.content.Context getContext()>();

        $r4 = staticinvoke <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)>($r3);

        $r5 = new com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideModelLoader;

        specialinvoke $r5.<com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideModelLoader: void <init>(com.fsck.k9.activity.misc.ContactPictureLoader,com.fsck.k9.activity.misc.ContactPictureLoader$1)>(r0, null);

        $r6 = virtualinvoke $r4.<com.bumptech.glide.RequestManager: com.bumptech.glide.RequestManager$GenericModelRequest using(com.bumptech.glide.load.model.ModelLoader,java.lang.Class)>($r5, class "Lcom/fsck/k9/activity/misc/ContactPictureLoader$FallbackGlideParams;");

        $r7 = virtualinvoke $r6.<com.bumptech.glide.RequestManager$GenericModelRequest: com.bumptech.glide.RequestManager$GenericModelRequest$GenericTypeRequest 'from'(java.lang.Class)>(class "Lcom/fsck/k9/activity/misc/ContactPictureLoader$FallbackGlideParams;");

        $r8 = virtualinvoke $r7.<com.bumptech.glide.RequestManager$GenericModelRequest$GenericTypeRequest: com.bumptech.glide.GenericTranscodeRequest as(java.lang.Class)>(class "Landroid/graphics/Bitmap;");

        $r9 = new com.bumptech.glide.load.resource.transcode.BitmapToGlideDrawableTranscoder;

        specialinvoke $r9.<com.bumptech.glide.load.resource.transcode.BitmapToGlideDrawableTranscoder: void <init>(android.content.Context)>($r3);

        $r10 = virtualinvoke $r8.<com.bumptech.glide.GenericTranscodeRequest: com.bumptech.glide.GenericRequestBuilder transcode(com.bumptech.glide.load.resource.transcode.ResourceTranscoder,java.lang.Class)>($r9, class "Lcom/bumptech/glide/load/resource/drawable/GlideDrawable;");

        $r11 = new com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideBitmapDecoder;

        specialinvoke $r11.<com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideBitmapDecoder: void <init>(com.fsck.k9.activity.misc.ContactPictureLoader,android.content.Context)>(r0, $r3);

        $r10 = virtualinvoke $r10.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder decoder(com.bumptech.glide.load.ResourceDecoder)>($r11);

        $r12 = new com.bumptech.glide.load.resource.bitmap.BitmapEncoder;

        $r13 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

        specialinvoke $r12.<com.bumptech.glide.load.resource.bitmap.BitmapEncoder: void <init>(android.graphics.Bitmap$CompressFormat,int)>($r13, 0);

        $r10 = virtualinvoke $r10.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder encoder(com.bumptech.glide.load.ResourceEncoder)>($r12);

        $r14 = new com.bumptech.glide.load.resource.file.FileToStreamDecoder;

        $r15 = new com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder;

        specialinvoke $r15.<com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: void <init>(android.content.Context)>($r3);

        specialinvoke $r14.<com.bumptech.glide.load.resource.file.FileToStreamDecoder: void <init>(com.bumptech.glide.load.ResourceDecoder)>($r15);

        $r10 = virtualinvoke $r10.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder cacheDecoder(com.bumptech.glide.load.ResourceDecoder)>($r14);

        $r16 = <com.bumptech.glide.load.engine.DiskCacheStrategy: com.bumptech.glide.load.engine.DiskCacheStrategy NONE>;

        $r10 = virtualinvoke $r10.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder diskCacheStrategy(com.bumptech.glide.load.engine.DiskCacheStrategy)>($r16);

        $r17 = new com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideParams;

        specialinvoke $r17.<com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideParams: void <init>(com.fsck.k9.activity.misc.ContactPictureLoader,com.fsck.k9.mail.Address)>(r0, $r1);

        $r10 = virtualinvoke $r10.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder load(java.lang.Object)>($r17);

        $r10 = virtualinvoke $r10.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder dontAnimate()>();

        $i0 = r0.<com.fsck.k9.activity.misc.ContactPictureLoader: int mPictureSizeInPx>;

        $i1 = r0.<com.fsck.k9.activity.misc.ContactPictureLoader: int mPictureSizeInPx>;

        $r10 = virtualinvoke $r10.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder override(int,int)>($i0, $i1);

        virtualinvoke $r10.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.target.Target into(android.widget.ImageView)>($r2);

        return;
    }
    public void loadContactPicture(com.fsck.k9.mail.Address, android.widget.ImageView)
    {
        com.fsck.k9.activity.misc.ContactPictureLoader r0;
        com.fsck.k9.mail.Address $r1;
        android.widget.ImageView $r2;
        com.fsck.k9.helper.Contacts $r3;
        java.lang.String $r4;
        android.net.Uri $r5;

        r0 := @this: com.fsck.k9.activity.misc.ContactPictureLoader;

        $r1 := @parameter0: com.fsck.k9.mail.Address;

        $r2 := @parameter1: android.widget.ImageView;

        $r3 = r0.<com.fsck.k9.activity.misc.ContactPictureLoader: com.fsck.k9.helper.Contacts mContactsHelper>;

        $r4 = virtualinvoke $r1.<com.fsck.k9.mail.Address: java.lang.String getAddress()>();

        $r5 = virtualinvoke $r3.<com.fsck.k9.helper.Contacts: android.net.Uri getPhotoUri(java.lang.String)>($r4);

        specialinvoke r0.<com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)>($r5, $r1, $r2);

        return;
    }
    public void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient, android.widget.ImageView)
    {
        com.fsck.k9.activity.misc.ContactPictureLoader r0;
        com.fsck.k9.view.RecipientSelectView$Recipient $r1;
        android.widget.ImageView $r2;
        android.net.Uri $r3;
        com.fsck.k9.mail.Address $r4;

        r0 := @this: com.fsck.k9.activity.misc.ContactPictureLoader;

        $r1 := @parameter0: com.fsck.k9.view.RecipientSelectView$Recipient;

        $r2 := @parameter1: android.widget.ImageView;

        $r3 = $r1.<com.fsck.k9.view.RecipientSelectView$Recipient: android.net.Uri photoThumbnailUri>;

        $r4 = $r1.<com.fsck.k9.view.RecipientSelectView$Recipient: com.fsck.k9.mail.Address address>;

        specialinvoke r0.<com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)>($r3, $r4, $r2);

        return;
    }
