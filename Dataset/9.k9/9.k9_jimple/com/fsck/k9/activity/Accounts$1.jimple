com.fsck.k9.activity.Accounts$1 extends com.fsck.k9.activity.ActivityListener
final com.fsck.k9.activity.Accounts this$0
    void <init>(com.fsck.k9.activity.Accounts)
    {
        com.fsck.k9.activity.Accounts$1 r0;
        com.fsck.k9.activity.Accounts $r1;

        r0 := @this: com.fsck.k9.activity.Accounts$1;

        $r1 := @parameter0: com.fsck.k9.activity.Accounts;

        r0.<com.fsck.k9.activity.Accounts$1: com.fsck.k9.activity.Accounts this$0> = $r1;

        specialinvoke r0.<com.fsck.k9.activity.ActivityListener: void <init>()>();

        return;
    }
    public void accountSizeChanged(com.fsck.k9.Account, long, long)
    {
        com.fsck.k9.activity.Accounts$1 r0;
        com.fsck.k9.Account $r1;
        long $l0, $l1;
        com.fsck.k9.activity.Accounts$AccountsHandler $r2;
        com.fsck.k9.activity.Accounts $r3;

        r0 := @this: com.fsck.k9.activity.Accounts$1;

        $r1 := @parameter0: com.fsck.k9.Account;

        $l0 := @parameter1: long;

        $l1 := @parameter2: long;

        $r3 = r0.<com.fsck.k9.activity.Accounts$1: com.fsck.k9.activity.Accounts this$0>;

        $r2 = staticinvoke <com.fsck.k9.activity.Accounts: com.fsck.k9.activity.Accounts$AccountsHandler access$800(com.fsck.k9.activity.Accounts)>($r3);

        virtualinvoke $r2.<com.fsck.k9.activity.Accounts$AccountsHandler: void accountSizeChanged(com.fsck.k9.Account,long,long)>($r1, $l0, $l1);

        return;
    }
    public void accountStatusChanged(com.fsck.k9.BaseAccount, com.fsck.k9.AccountStats)
    {
        com.fsck.k9.activity.Accounts$1 r0;
        com.fsck.k9.BaseAccount $r1;
        int i0, i1, $i2;
        com.fsck.k9.AccountStats r2, r7;
        com.fsck.k9.activity.Accounts $r3, $r8;
        java.util.concurrent.ConcurrentHashMap $r4;
        java.lang.String $r5;
        java.lang.Object $r6;
        boolean $z0;
        com.fsck.k9.activity.Accounts$AccountsHandler $r9;
        java.util.concurrent.ConcurrentMap $r10;
        com.fsck.k9.activity.Accounts$AccountsAdapter $r11;

        r0 := @this: com.fsck.k9.activity.Accounts$1;

        $r1 := @parameter0: com.fsck.k9.BaseAccount;

        r2 := @parameter1: com.fsck.k9.AccountStats;

        $r3 = r0.<com.fsck.k9.activity.Accounts$1: com.fsck.k9.activity.Accounts this$0>;

        $r4 = staticinvoke <com.fsck.k9.activity.Accounts: java.util.concurrent.ConcurrentHashMap access$600(com.fsck.k9.activity.Accounts)>($r3);

        $r5 = interfaceinvoke $r1.<com.fsck.k9.BaseAccount: java.lang.String getUuid()>();

        $r6 = virtualinvoke $r4.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r5);

        r7 = (com.fsck.k9.AccountStats) $r6;

        i1 = 0;

        if r7 == null goto label1;

        i1 = r7.<com.fsck.k9.AccountStats: int unreadMessageCount>;

     label1:
        if r2 != null goto label2;

        r2 = new com.fsck.k9.AccountStats;

        specialinvoke r2.<com.fsck.k9.AccountStats: void <init>()>();

        r2.<com.fsck.k9.AccountStats: boolean available> = 0;

     label2:
        $r3 = r0.<com.fsck.k9.activity.Accounts$1: com.fsck.k9.activity.Accounts this$0>;

        $r4 = staticinvoke <com.fsck.k9.activity.Accounts: java.util.concurrent.ConcurrentHashMap access$600(com.fsck.k9.activity.Accounts)>($r3);

        $r5 = interfaceinvoke $r1.<com.fsck.k9.BaseAccount: java.lang.String getUuid()>();

        virtualinvoke $r4.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r2);

        $z0 = $r1 instanceof com.fsck.k9.Account;

        if $z0 == 0 goto label3;

        $r3 = r0.<com.fsck.k9.activity.Accounts$1: com.fsck.k9.activity.Accounts this$0>;

        $r8 = r0.<com.fsck.k9.activity.Accounts$1: com.fsck.k9.activity.Accounts this$0>;

        i0 = staticinvoke <com.fsck.k9.activity.Accounts: int access$100(com.fsck.k9.activity.Accounts)>($r8);

        $i2 = r2.<com.fsck.k9.AccountStats: int unreadMessageCount>;

        i1 = $i2 - i1;

        i0 = i0 + i1;

        staticinvoke <com.fsck.k9.activity.Accounts: int access$102(com.fsck.k9.activity.Accounts,int)>($r3, i0);

     label3:
        $r3 = r0.<com.fsck.k9.activity.Accounts$1: com.fsck.k9.activity.Accounts this$0>;

        $r9 = staticinvoke <com.fsck.k9.activity.Accounts: com.fsck.k9.activity.Accounts$AccountsHandler access$800(com.fsck.k9.activity.Accounts)>($r3);

        virtualinvoke $r9.<com.fsck.k9.activity.Accounts$AccountsHandler: void dataChanged()>();

        $r3 = r0.<com.fsck.k9.activity.Accounts$1: com.fsck.k9.activity.Accounts this$0>;

        $r10 = staticinvoke <com.fsck.k9.activity.Accounts: java.util.concurrent.ConcurrentMap access$900(com.fsck.k9.activity.Accounts)>($r3);

        interfaceinvoke $r10.<java.util.concurrent.ConcurrentMap: java.lang.Object remove(java.lang.Object)>($r1);

        $r3 = r0.<com.fsck.k9.activity.Accounts$1: com.fsck.k9.activity.Accounts this$0>;

        $r10 = staticinvoke <com.fsck.k9.activity.Accounts: java.util.concurrent.ConcurrentMap access$900(com.fsck.k9.activity.Accounts)>($r3);

        $z0 = interfaceinvoke $r10.<java.util.concurrent.ConcurrentMap: boolean isEmpty()>();

        if $z0 == 0 goto label4;

        $r3 = r0.<com.fsck.k9.activity.Accounts$1: com.fsck.k9.activity.Accounts this$0>;

        $r9 = staticinvoke <com.fsck.k9.activity.Accounts: com.fsck.k9.activity.Accounts$AccountsHandler access$800(com.fsck.k9.activity.Accounts)>($r3);

        virtualinvoke $r9.<com.fsck.k9.activity.Accounts$AccountsHandler: void progress(int)>(10000);

        $r3 = r0.<com.fsck.k9.activity.Accounts$1: com.fsck.k9.activity.Accounts this$0>;

        $r9 = staticinvoke <com.fsck.k9.activity.Accounts: com.fsck.k9.activity.Accounts$AccountsHandler access$800(com.fsck.k9.activity.Accounts)>($r3);

        virtualinvoke $r9.<com.fsck.k9.activity.Accounts$AccountsHandler: void refreshTitle()>();

        return;

     label4:
        $r3 = r0.<com.fsck.k9.activity.Accounts$1: com.fsck.k9.activity.Accounts this$0>;

        $r11 = staticinvoke <com.fsck.k9.activity.Accounts: com.fsck.k9.activity.Accounts$AccountsAdapter access$500(com.fsck.k9.activity.Accounts)>($r3);

        i0 = virtualinvoke $r11.<com.fsck.k9.activity.Accounts$AccountsAdapter: int getCount()>();

        i0 = 10000 / i0;

        $r3 = r0.<com.fsck.k9.activity.Accounts$1: com.fsck.k9.activity.Accounts this$0>;

        $r11 = staticinvoke <com.fsck.k9.activity.Accounts: com.fsck.k9.activity.Accounts$AccountsAdapter access$500(com.fsck.k9.activity.Accounts)>($r3);

        i1 = virtualinvoke $r11.<com.fsck.k9.activity.Accounts$AccountsAdapter: int getCount()>();

        $r3 = r0.<com.fsck.k9.activity.Accounts$1: com.fsck.k9.activity.Accounts this$0>;

        $r10 = staticinvoke <com.fsck.k9.activity.Accounts: java.util.concurrent.ConcurrentMap access$900(com.fsck.k9.activity.Accounts)>($r3);

        $i2 = interfaceinvoke $r10.<java.util.concurrent.ConcurrentMap: int size()>();

        i1 = i1 - $i2;

        i0 = i0 * i1;

        $r3 = r0.<com.fsck.k9.activity.Accounts$1: com.fsck.k9.activity.Accounts this$0>;

        $r9 = staticinvoke <com.fsck.k9.activity.Accounts: com.fsck.k9.activity.Accounts$AccountsHandler access$800(com.fsck.k9.activity.Accounts)>($r3);

        virtualinvoke $r9.<com.fsck.k9.activity.Accounts$AccountsHandler: void progress(int)>(i0);

        return;
    }
    public void folderStatusChanged(com.fsck.k9.Account, java.lang.String, int)
    {
        com.fsck.k9.activity.Accounts$1 r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2;
        int $i0;
        java.lang.Exception r3;
        com.fsck.k9.AccountStats $r4;
        com.fsck.k9.activity.Accounts $r5;
        java.lang.Object[] $r6;

        r0 := @this: com.fsck.k9.activity.Accounts$1;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

     label1:
        $r5 = r0.<com.fsck.k9.activity.Accounts$1: com.fsck.k9.activity.Accounts this$0>;

        $r4 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.AccountStats getStats(android.content.Context)>($r5);

     label2:
        if $r4 != null goto label5;

     label3:
        $r6 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Unable to get account stats", $r6);

     label4:
        return;

     label5:
        virtualinvoke r0.<com.fsck.k9.activity.Accounts$1: void accountStatusChanged(com.fsck.k9.BaseAccount,com.fsck.k9.AccountStats)>($r1, $r4);

     label6:
        return;

     label7:
        r3 := @caughtexception;

        $r6 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r3, "Unable to get account stats", $r6);

        return;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }
    public void informUserOfStatus()
    {
        com.fsck.k9.activity.Accounts$1 r0;
        com.fsck.k9.activity.Accounts$AccountsHandler $r1;
        com.fsck.k9.activity.Accounts $r2;

        r0 := @this: com.fsck.k9.activity.Accounts$1;

        $r2 = r0.<com.fsck.k9.activity.Accounts$1: com.fsck.k9.activity.Accounts this$0>;

        $r1 = staticinvoke <com.fsck.k9.activity.Accounts: com.fsck.k9.activity.Accounts$AccountsHandler access$800(com.fsck.k9.activity.Accounts)>($r2);

        virtualinvoke $r1.<com.fsck.k9.activity.Accounts$AccountsHandler: void refreshTitle()>();

        return;
    }
    public void synchronizeMailboxFailed(com.fsck.k9.Account, java.lang.String, java.lang.String)
    {
        com.fsck.k9.activity.Accounts$1 r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2, $r3;
        com.fsck.k9.activity.Accounts$AccountsHandler $r4;
        com.fsck.k9.activity.Accounts $r5;

        r0 := @this: com.fsck.k9.activity.Accounts$1;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        specialinvoke r0.<com.fsck.k9.activity.ActivityListener: void synchronizeMailboxFailed(com.fsck.k9.Account,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        $r5 = r0.<com.fsck.k9.activity.Accounts$1: com.fsck.k9.activity.Accounts this$0>;

        $r4 = staticinvoke <com.fsck.k9.activity.Accounts: com.fsck.k9.activity.Accounts$AccountsHandler access$800(com.fsck.k9.activity.Accounts)>($r5);

        virtualinvoke $r4.<com.fsck.k9.activity.Accounts$AccountsHandler: void progress(boolean)>(0);

        return;
    }
    public void synchronizeMailboxFinished(com.fsck.k9.Account, java.lang.String, int, int)
    {
        com.fsck.k9.activity.Accounts$1 r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2;
        int $i0, $i1;
        com.fsck.k9.activity.Accounts $r3, $r6;
        android.app.Application $r4;
        com.fsck.k9.controller.MessagingController $r5;
        com.fsck.k9.activity.ActivityListener $r7;
        com.fsck.k9.activity.Accounts$AccountsHandler $r8;

        r0 := @this: com.fsck.k9.activity.Accounts$1;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 = r0.<com.fsck.k9.activity.Accounts$1: com.fsck.k9.activity.Accounts this$0>;

        $r4 = virtualinvoke $r3.<com.fsck.k9.activity.Accounts: android.app.Application getApplication()>();

        $r5 = staticinvoke <com.fsck.k9.controller.MessagingController: com.fsck.k9.controller.MessagingController getInstance(android.content.Context)>($r4);

        $r3 = r0.<com.fsck.k9.activity.Accounts$1: com.fsck.k9.activity.Accounts this$0>;

        $r6 = r0.<com.fsck.k9.activity.Accounts$1: com.fsck.k9.activity.Accounts this$0>;

        $r7 = $r6.<com.fsck.k9.activity.Accounts: com.fsck.k9.activity.ActivityListener mListener>;

        virtualinvoke $r5.<com.fsck.k9.controller.MessagingController: void getAccountStats(android.content.Context,com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener)>($r3, $r1, $r7);

        specialinvoke r0.<com.fsck.k9.activity.ActivityListener: void synchronizeMailboxFinished(com.fsck.k9.Account,java.lang.String,int,int)>($r1, $r2, $i0, $i1);

        $r3 = r0.<com.fsck.k9.activity.Accounts$1: com.fsck.k9.activity.Accounts this$0>;

        $r8 = staticinvoke <com.fsck.k9.activity.Accounts: com.fsck.k9.activity.Accounts$AccountsHandler access$800(com.fsck.k9.activity.Accounts)>($r3);

        virtualinvoke $r8.<com.fsck.k9.activity.Accounts$AccountsHandler: void progress(boolean)>(0);

        return;
    }
    public void synchronizeMailboxStarted(com.fsck.k9.Account, java.lang.String)
    {
        com.fsck.k9.activity.Accounts$1 r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2;
        com.fsck.k9.activity.Accounts$AccountsHandler $r3;
        com.fsck.k9.activity.Accounts $r4;

        r0 := @this: com.fsck.k9.activity.Accounts$1;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.fsck.k9.activity.ActivityListener: void synchronizeMailboxStarted(com.fsck.k9.Account,java.lang.String)>($r1, $r2);

        $r4 = r0.<com.fsck.k9.activity.Accounts$1: com.fsck.k9.activity.Accounts this$0>;

        $r3 = staticinvoke <com.fsck.k9.activity.Accounts: com.fsck.k9.activity.Accounts$AccountsHandler access$800(com.fsck.k9.activity.Accounts)>($r4);

        virtualinvoke $r3.<com.fsck.k9.activity.Accounts$AccountsHandler: void progress(boolean)>(1);

        return;
    }
