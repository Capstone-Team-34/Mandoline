com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder extends java.lang.Object
private com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode cryptoMode
private com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState cryptoProviderState
private java.lang.Boolean enablePgpInline
private java.lang.Long openPgpKeyId
private java.lang.Boolean preferEncryptMutual
private java.util.List recipients
    public void <init>()
    {
        com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder r0;

        r0 := @this: com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public com.fsck.k9.activity.compose.ComposeCryptoStatus build()
    {
        com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder r0;
        java.util.ArrayList r1;
        com.fsck.k9.activity.compose.ComposeCryptoStatus r2;
        com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState $r3;
        java.lang.AssertionError $r4;
        com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode $r5;
        java.util.List $r6;
        java.lang.Boolean $r7;
        java.util.Iterator $r8;
        boolean $z0;
        java.lang.Object $r9;
        com.fsck.k9.view.RecipientSelectView$Recipient r10;
        com.fsck.k9.mail.Address $r11;
        java.lang.String $r12;
        java.lang.String[] $r13;
        java.lang.Object[] $r14;
        java.lang.Long $r15;

        r0 := @this: com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder;

        $r3 = r0.<com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder: com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState cryptoProviderState>;

        if $r3 != null goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>("cryptoProviderState must be set!");

        throw $r4;

     label1:
        $r5 = r0.<com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder: com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode cryptoMode>;

        if $r5 != null goto label2;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>("crypto mode must be set!");

        throw $r4;

     label2:
        $r6 = r0.<com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder: java.util.List recipients>;

        if $r6 != null goto label3;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>("recipients must be set!");

        throw $r4;

     label3:
        $r7 = r0.<com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder: java.lang.Boolean enablePgpInline>;

        if $r7 != null goto label4;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>("enablePgpInline must be set!");

        throw $r4;

     label4:
        $r7 = r0.<com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder: java.lang.Boolean preferEncryptMutual>;

        if $r7 != null goto label5;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>("preferEncryptMutual must be set!");

        throw $r4;

     label5:
        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r6 = r0.<com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder: java.util.List recipients>;

        $r8 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.fsck.k9.view.RecipientSelectView$Recipient) $r9;

        $r11 = r10.<com.fsck.k9.view.RecipientSelectView$Recipient: com.fsck.k9.mail.Address address>;

        $r12 = virtualinvoke $r11.<com.fsck.k9.mail.Address: java.lang.String getAddress()>();

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        goto label6;

     label7:
        r2 = new com.fsck.k9.activity.compose.ComposeCryptoStatus;

        specialinvoke r2.<com.fsck.k9.activity.compose.ComposeCryptoStatus: void <init>()>();

        $r3 = r0.<com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder: com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState cryptoProviderState>;

        staticinvoke <com.fsck.k9.activity.compose.ComposeCryptoStatus: com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState access$002(com.fsck.k9.activity.compose.ComposeCryptoStatus,com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)>(r2, $r3);

        $r5 = r0.<com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder: com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode cryptoMode>;

        staticinvoke <com.fsck.k9.activity.compose.ComposeCryptoStatus: com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode access$102(com.fsck.k9.activity.compose.ComposeCryptoStatus,com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)>(r2, $r5);

        $r13 = newarray (java.lang.String)[0];

        $r14 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r13);

        $r13 = (java.lang.String[]) $r14;

        staticinvoke <com.fsck.k9.activity.compose.ComposeCryptoStatus: java.lang.String[] access$202(com.fsck.k9.activity.compose.ComposeCryptoStatus,java.lang.String[])>(r2, $r13);

        $r15 = r0.<com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder: java.lang.Long openPgpKeyId>;

        staticinvoke <com.fsck.k9.activity.compose.ComposeCryptoStatus: java.lang.Long access$302(com.fsck.k9.activity.compose.ComposeCryptoStatus,java.lang.Long)>(r2, $r15);

        $r7 = r0.<com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder: java.lang.Boolean enablePgpInline>;

        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        staticinvoke <com.fsck.k9.activity.compose.ComposeCryptoStatus: boolean access$402(com.fsck.k9.activity.compose.ComposeCryptoStatus,boolean)>(r2, $z0);

        $r7 = r0.<com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder: java.lang.Boolean preferEncryptMutual>;

        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        staticinvoke <com.fsck.k9.activity.compose.ComposeCryptoStatus: boolean access$502(com.fsck.k9.activity.compose.ComposeCryptoStatus,boolean)>(r2, $z0);

        return r2;
    }
    public com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder setCryptoMode(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)
    {
        com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder r0;
        com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode $r1;

        r0 := @this: com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder;

        $r1 := @parameter0: com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode;

        r0.<com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder: com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode cryptoMode> = $r1;

        return r0;
    }
    public com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)
    {
        com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder r0;
        com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState $r1;

        r0 := @this: com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder;

        $r1 := @parameter0: com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState;

        r0.<com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder: com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState cryptoProviderState> = $r1;

        return r0;
    }
    public com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder setEnablePgpInline(boolean)
    {
        com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder r0;
        boolean $z0;
        java.lang.Boolean $r1;

        r0 := @this: com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder;

        $z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        r0.<com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder: java.lang.Boolean enablePgpInline> = $r1;

        return r0;
    }
    public com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder setOpenPgpKeyId(java.lang.Long)
    {
        com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder r0;
        java.lang.Long $r1;

        r0 := @this: com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder;

        $r1 := @parameter0: java.lang.Long;

        r0.<com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder: java.lang.Long openPgpKeyId> = $r1;

        return r0;
    }
    public com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder setPreferEncryptMutual(boolean)
    {
        com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder r0;
        boolean $z0;
        java.lang.Boolean $r1;

        r0 := @this: com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder;

        $z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        r0.<com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder: java.lang.Boolean preferEncryptMutual> = $r1;

        return r0;
    }
    public com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder setRecipients(java.util.List)
    {
        com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder r0;
        java.util.List r1;

        r0 := @this: com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder;

        r1 := @parameter0: java.util.List;

        r0.<com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder: java.util.List recipients> = r1;

        return r0;
    }
