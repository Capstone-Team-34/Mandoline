com.fsck.k9.activity.compose.RecipientLoader extends android.content.AsyncTaskLoader
private static final int CRYPTO_PROVIDER_STATUS_TRUSTED
private static final int CRYPTO_PROVIDER_STATUS_UNTRUSTED
private static final int INDEX_AUTOCRYPT_STATUS
private static final int INDEX_CONTACT_ID
private static final int INDEX_CONTACT_ID_FOR_NICKNAME
private static final int INDEX_EMAIL
private static final int INDEX_EMAIL_ADDRESS
private static final int INDEX_EMAIL_CUSTOM_LABEL
private static final int INDEX_EMAIL_STATUS
private static final int INDEX_EMAIL_TYPE
private static final int INDEX_LOOKUP_KEY
private static final int INDEX_NAME
private static final int INDEX_NICKNAME
private static final int INDEX_PHOTO_URI
private static final int INDEX_USER_ID
private static final java.lang.String[] PROJECTION
private static final java.lang.String[] PROJECTION_CRYPTO_ADDRESSES
private static final java.lang.String[] PROJECTION_CRYPTO_STATUS
private static final java.lang.String[] PROJECTION_NICKNAME
private static final java.lang.String SORT_ORDER
private final com.fsck.k9.mail.Address[] addresses
private java.util.List cachedRecipients
private final android.net.Uri contactUri
private final android.content.ContentResolver contentResolver
private final java.lang.String cryptoProvider
private final android.net.Uri lookupKeyUri
private android.content.Loader$ForceLoadContentObserver observerContact
private android.content.Loader$ForceLoadContentObserver observerKey
private final java.lang.String query
    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[8];

        $r0[0] = "_id";

        $r0[1] = "display_name";

        $r0[2] = "lookup";

        $r0[3] = "data1";

        $r0[4] = "data2";

        $r0[5] = "data3";

        $r0[6] = "contact_id";

        $r0[7] = "photo_thumb_uri";

        <com.fsck.k9.activity.compose.RecipientLoader: java.lang.String[] PROJECTION> = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "contact_id";

        $r0[1] = "data1";

        <com.fsck.k9.activity.compose.RecipientLoader: java.lang.String[] PROJECTION_NICKNAME> = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "address";

        $r0[1] = "uid_address";

        <com.fsck.k9.activity.compose.RecipientLoader: java.lang.String[] PROJECTION_CRYPTO_ADDRESSES> = $r0;

        $r0 = newarray (java.lang.String)[3];

        $r0[0] = "address";

        $r0[1] = "uid_key_status";

        $r0[2] = "autocrypt_key_status";

        <com.fsck.k9.activity.compose.RecipientLoader: java.lang.String[] PROJECTION_CRYPTO_STATUS> = $r0;

        return;
    }
    public void <init>(android.content.Context, java.lang.String, android.net.Uri, boolean)
    {
        com.fsck.k9.activity.compose.RecipientLoader r0;
        android.content.Context $r1;
        java.lang.String $r2;
        boolean $z0;
        android.content.ContentResolver $r3;
        android.net.Uri r4, $r5;

        r0 := @this: com.fsck.k9.activity.compose.RecipientLoader;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        r4 := @parameter2: android.net.Uri;

        $z0 := @parameter3: boolean;

        specialinvoke r0.<android.content.AsyncTaskLoader: void <init>(android.content.Context)>($r1);

        r0.<com.fsck.k9.activity.compose.RecipientLoader: java.lang.String query> = null;

        r0.<com.fsck.k9.activity.compose.RecipientLoader: com.fsck.k9.mail.Address[] addresses> = null;

        if $z0 == 0 goto label3;

        $r5 = null;

     label1:
        r0.<com.fsck.k9.activity.compose.RecipientLoader: android.net.Uri contactUri> = $r5;

        if $z0 == 0 goto label4;

     label2:
        r0.<com.fsck.k9.activity.compose.RecipientLoader: android.net.Uri lookupKeyUri> = r4;

        r0.<com.fsck.k9.activity.compose.RecipientLoader: java.lang.String cryptoProvider> = $r2;

        $r3 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r0.<com.fsck.k9.activity.compose.RecipientLoader: android.content.ContentResolver contentResolver> = $r3;

        return;

     label3:
        $r5 = r4;

        goto label1;

     label4:
        r4 = null;

        goto label2;
    }
    public void <init>(android.content.Context, java.lang.String, java.lang.String)
    {
        com.fsck.k9.activity.compose.RecipientLoader r0;
        android.content.Context $r1;
        java.lang.String $r2, $r3;
        android.content.ContentResolver $r4;

        r0 := @this: com.fsck.k9.activity.compose.RecipientLoader;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        specialinvoke r0.<android.content.AsyncTaskLoader: void <init>(android.content.Context)>($r1);

        r0.<com.fsck.k9.activity.compose.RecipientLoader: java.lang.String query> = $r3;

        r0.<com.fsck.k9.activity.compose.RecipientLoader: android.net.Uri lookupKeyUri> = null;

        r0.<com.fsck.k9.activity.compose.RecipientLoader: com.fsck.k9.mail.Address[] addresses> = null;

        r0.<com.fsck.k9.activity.compose.RecipientLoader: android.net.Uri contactUri> = null;

        r0.<com.fsck.k9.activity.compose.RecipientLoader: java.lang.String cryptoProvider> = $r2;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r0.<com.fsck.k9.activity.compose.RecipientLoader: android.content.ContentResolver contentResolver> = $r4;

        return;
    }
    public transient void <init>(android.content.Context, java.lang.String, com.fsck.k9.mail.Address[])
    {
        com.fsck.k9.activity.compose.RecipientLoader r0;
        android.content.Context $r1;
        java.lang.String $r2;
        com.fsck.k9.mail.Address[] $r3;
        android.content.ContentResolver $r4;

        r0 := @this: com.fsck.k9.activity.compose.RecipientLoader;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.fsck.k9.mail.Address[];

        specialinvoke r0.<android.content.AsyncTaskLoader: void <init>(android.content.Context)>($r1);

        r0.<com.fsck.k9.activity.compose.RecipientLoader: java.lang.String query> = null;

        r0.<com.fsck.k9.activity.compose.RecipientLoader: com.fsck.k9.mail.Address[] addresses> = $r3;

        r0.<com.fsck.k9.activity.compose.RecipientLoader: android.net.Uri contactUri> = null;

        r0.<com.fsck.k9.activity.compose.RecipientLoader: java.lang.String cryptoProvider> = $r2;

        r0.<com.fsck.k9.activity.compose.RecipientLoader: android.net.Uri lookupKeyUri> = null;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r0.<com.fsck.k9.activity.compose.RecipientLoader: android.content.ContentResolver contentResolver> = $r4;

        return;
    }
    private void fillContactDataFromAddresses(com.fsck.k9.mail.Address[], java.util.List, java.util.Map)
    {
        com.fsck.k9.activity.compose.RecipientLoader r0;
        com.fsck.k9.mail.Address[] $r1;
        java.util.List r2;
        java.util.Map r3;
        com.fsck.k9.mail.Address r4;
        com.fsck.k9.view.RecipientSelectView$Recipient r5;
        int $i0, $i1;
        java.lang.String $r6;

        r0 := @this: com.fsck.k9.activity.compose.RecipientLoader;

        $r1 := @parameter0: com.fsck.k9.mail.Address[];

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.Map;

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        r4 = $r1[$i1];

        r5 = new com.fsck.k9.view.RecipientSelectView$Recipient;

        specialinvoke r5.<com.fsck.k9.view.RecipientSelectView$Recipient: void <init>(com.fsck.k9.mail.Address)>(r4);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r5);

        $r6 = virtualinvoke r4.<com.fsck.k9.mail.Address: java.lang.String getAddress()>();

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }
    private void fillContactDataFromCryptoProvider(java.lang.String, java.util.List, java.util.Map)
    {
        com.fsck.k9.activity.compose.RecipientLoader r0;
        java.lang.String $r1, $r8;
        java.util.List r2;
        java.util.Map r3;
        com.fsck.k9.mail.Address r4;
        java.lang.SecurityException r5;
        com.fsck.k9.view.RecipientSelectView$Recipient r6;
        java.lang.StringBuilder $r7;
        android.net.Uri $r9;
        android.content.ContentResolver $r10;
        java.lang.String[] $r11, $r12;
        android.database.Cursor $r13;
        java.lang.Object[] $r14;
        boolean $z0;
        com.fsck.k9.mail.Address[] $r15;
        int $i0, $i1;

        r0 := @this: com.fsck.k9.activity.compose.RecipientLoader;

        $r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.Map;

        $r7 = new java.lang.StringBuilder;

     label01:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content://");

     label02:
        $r8 = r0.<com.fsck.k9.activity.compose.RecipientLoader: java.lang.String cryptoProvider>;

     label03:
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".provider.exported/autocrypt_status");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r8);

     label04:
        $r10 = r0.<com.fsck.k9.activity.compose.RecipientLoader: android.content.ContentResolver contentResolver>;

        $r11 = <com.fsck.k9.activity.compose.RecipientLoader: java.lang.String[] PROJECTION_CRYPTO_ADDRESSES>;

        $r12 = newarray (java.lang.String)[1];

        $r7 = new java.lang.StringBuilder;

     label05:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%");

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label06:
        $r12[0] = $r1;

     label07:
        $r13 = virtualinvoke $r10.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r9, $r11, null, $r12, null);

     label08:
        if $r13 != null goto label10;

        return;

     label09:
        r5 := @caughtexception;

        $r14 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r5, "Couldn\'t obtain recipients from crypto provider!", $r14);

        return;

     label10:
        $z0 = interfaceinvoke $r13.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label14;

        $r1 = interfaceinvoke $r13.<android.database.Cursor: java.lang.String getString(int)>(1);

        $r15 = staticinvoke <com.fsck.k9.mail.Address: com.fsck.k9.mail.Address[] parseUnencoded(java.lang.String)>($r1);

        $i0 = lengthof $r15;

        $i1 = 0;

     label11:
        if $i1 >= $i0 goto label10;

        r4 = $r15[$i1];

        $r1 = virtualinvoke r4.<com.fsck.k9.mail.Address: java.lang.String getAddress()>();

        $z0 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label13;

     label12:
        $i1 = $i1 + 1;

        goto label11;

     label13:
        r6 = new com.fsck.k9.view.RecipientSelectView$Recipient;

        specialinvoke r6.<com.fsck.k9.view.RecipientSelectView$Recipient: void <init>(com.fsck.k9.mail.Address)>(r4);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r6);

        $r1 = virtualinvoke r4.<com.fsck.k9.mail.Address: java.lang.String getAddress()>();

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r6);

        goto label12;

     label14:
        interfaceinvoke $r13.<android.database.Cursor: void close()>();

        return;

        catch java.lang.SecurityException from label01 to label02 with label09;
        catch java.lang.SecurityException from label03 to label04 with label09;
        catch java.lang.SecurityException from label05 to label06 with label09;
        catch java.lang.SecurityException from label07 to label08 with label09;
    }
    private void fillContactDataFromCursor(android.database.Cursor, java.util.List, java.util.Map)
    {
        com.fsck.k9.activity.compose.RecipientLoader r0;
        android.database.Cursor $r1;
        java.util.List r2;
        java.util.Map r3;

        r0 := @this: com.fsck.k9.activity.compose.RecipientLoader;

        $r1 := @parameter0: android.database.Cursor;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.Map;

        specialinvoke r0.<com.fsck.k9.activity.compose.RecipientLoader: void fillContactDataFromCursor(android.database.Cursor,java.util.List,java.util.Map,java.lang.String)>($r1, r2, r3, null);

        return;
    }
    private void fillContactDataFromCursor(android.database.Cursor, java.util.List, java.util.Map, java.lang.String)
    {
        com.fsck.k9.activity.compose.RecipientLoader r0;
        android.database.Cursor $r1;
        java.util.List r2;
        java.util.Map r3;
        java.lang.String $r4, r6, $r7, $r8, r9;
        com.fsck.k9.view.RecipientSelectView$Recipient r5;
        boolean $z0;
        long $l0;
        int $i1;
        android.net.Uri r10;
        android.content.Context $r11;

        r0 := @this: com.fsck.k9.activity.compose.RecipientLoader;

        $r1 := @parameter0: android.database.Cursor;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.Map;

        $r4 := @parameter3: java.lang.String;

     label01:
        $z0 = interfaceinvoke $r1.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label12;

        if $r4 == null goto label05;

        r6 = $r4;

     label02:
        $r7 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>(3);

        $l0 = interfaceinvoke $r1.<android.database.Cursor: long getLong(int)>(6);

        $r8 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>(2);

        $z0 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r7);

        if $z0 != 0 goto label01;

        $i1 = interfaceinvoke $r1.<android.database.Cursor: int getInt(int)>(4);

        r9 = null;

        lookupswitch($i1)
        {
            case 0: goto label10;
            case 1: goto label06;
            case 2: goto label07;
            case 3: goto label08;
            case 4: goto label09;
            default: goto label03;
        };

     label03:
        r5 = new com.fsck.k9.view.RecipientSelectView$Recipient;

        specialinvoke r5.<com.fsck.k9.view.RecipientSelectView$Recipient: void <init>(java.lang.String,java.lang.String,java.lang.String,long,java.lang.String)>(r6, $r7, r9, $l0, $r8);

        $z0 = virtualinvoke r5.<com.fsck.k9.view.RecipientSelectView$Recipient: boolean isValidEmailAddress()>();

        if $z0 == 0 goto label01;

        $z0 = interfaceinvoke $r1.<android.database.Cursor: boolean isNull(int)>(7);

        if $z0 == 0 goto label11;

        r10 = null;

     label04:
        r5.<com.fsck.k9.view.RecipientSelectView$Recipient: android.net.Uri photoThumbnailUri> = r10;

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, r5);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r5);

        goto label01;

     label05:
        r6 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>(1);

        goto label02;

     label06:
        $r11 = virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientLoader: android.content.Context getContext()>();

        r9 = virtualinvoke $r11.<android.content.Context: java.lang.String getString(int)>(2131165490);

        goto label03;

     label07:
        $r11 = virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientLoader: android.content.Context getContext()>();

        r9 = virtualinvoke $r11.<android.content.Context: java.lang.String getString(int)>(2131165493);

        goto label03;

     label08:
        $r11 = virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientLoader: android.content.Context getContext()>();

        r9 = virtualinvoke $r11.<android.content.Context: java.lang.String getString(int)>(2131165492);

        goto label03;

     label09:
        $r11 = virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientLoader: android.content.Context getContext()>();

        r9 = virtualinvoke $r11.<android.content.Context: java.lang.String getString(int)>(2131165491);

        goto label03;

     label10:
        r9 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>(5);

        goto label03;

     label11:
        r6 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>(7);

        r10 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r6);

        goto label04;

     label12:
        interfaceinvoke $r1.<android.database.Cursor: void close()>();

        return;
    }
    private void fillContactDataFromEmailContentUri(android.net.Uri, java.util.List, java.util.Map)
    {
        com.fsck.k9.activity.compose.RecipientLoader r0;
        android.net.Uri $r1;
        java.util.List r2;
        java.util.Map r3;
        android.content.ContentResolver $r4;
        java.lang.String[] $r5;
        android.database.Cursor $r6;

        r0 := @this: com.fsck.k9.activity.compose.RecipientLoader;

        $r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.Map;

        $r4 = r0.<com.fsck.k9.activity.compose.RecipientLoader: android.content.ContentResolver contentResolver>;

        $r5 = <com.fsck.k9.activity.compose.RecipientLoader: java.lang.String[] PROJECTION>;

        $r6 = virtualinvoke $r4.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, $r5, null, null, null);

        if $r6 != null goto label1;

        return;

     label1:
        specialinvoke r0.<com.fsck.k9.activity.compose.RecipientLoader: void fillContactDataFromCursor(android.database.Cursor,java.util.List,java.util.Map)>($r6, r2, r3);

        return;
    }
    private void fillContactDataFromLookupKey(android.net.Uri, java.util.List, java.util.Map)
    {
        com.fsck.k9.activity.compose.RecipientLoader r0;
        android.net.Uri $r1;
        java.util.List r2;
        java.util.Map r3;
        java.lang.String[] $r4, $r7;
        android.content.ContentResolver $r5;
        java.lang.String $r6;
        android.database.Cursor $r8;

        r0 := @this: com.fsck.k9.activity.compose.RecipientLoader;

        $r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.Map;

        $r5 = r0.<com.fsck.k9.activity.compose.RecipientLoader: android.content.ContentResolver contentResolver>;

        $r1 = staticinvoke <android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)>($r5, $r1);

        if $r1 != null goto label1;

        return;

     label1:
        $r6 = staticinvoke <com.fsck.k9.activity.compose.RecipientLoader: java.lang.String getContactIdFromContactUri(android.net.Uri)>($r1);

        $r5 = r0.<com.fsck.k9.activity.compose.RecipientLoader: android.content.ContentResolver contentResolver>;

        $r1 = <android.provider.ContactsContract$CommonDataKinds$Email: android.net.Uri CONTENT_URI>;

        $r4 = <com.fsck.k9.activity.compose.RecipientLoader: java.lang.String[] PROJECTION>;

        $r7 = newarray (java.lang.String)[1];

        $r7[0] = $r6;

        $r8 = virtualinvoke $r5.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, $r4, "contact_id=?", $r7, null);

        if $r8 == null goto label2;

        specialinvoke r0.<com.fsck.k9.activity.compose.RecipientLoader: void fillContactDataFromCursor(android.database.Cursor,java.util.List,java.util.Map)>($r8, r2, r3);

     label2:
        return;
    }
    private boolean fillContactDataFromNameAndEmail(java.lang.String, java.util.List, java.util.Map)
    {
        com.fsck.k9.activity.compose.RecipientLoader r0;
        java.util.List r1;
        java.util.Map r2;
        android.net.Uri r3;
        java.lang.String[] r4, $r8;
        java.lang.String $r5;
        java.lang.StringBuilder $r6;
        android.content.ContentResolver $r7;
        android.database.Cursor $r9;

        r0 := @this: com.fsck.k9.activity.compose.RecipientLoader;

        $r5 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.Map;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%");

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r3 = <android.provider.ContactsContract$CommonDataKinds$Email: android.net.Uri CONTENT_URI>;

        r4 = newarray (java.lang.String)[2];

        r4[0] = $r5;

        r4[1] = $r5;

        $r7 = r0.<com.fsck.k9.activity.compose.RecipientLoader: android.content.ContentResolver contentResolver>;

        $r8 = <com.fsck.k9.activity.compose.RecipientLoader: java.lang.String[] PROJECTION>;

        $r9 = virtualinvoke $r7.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r3, $r8, "display_name LIKE ?  OR (data1 LIKE ? AND mimetype = \'vnd.android.cursor.item/email_v2\')", r4, "times_contacted DESC, sort_key");

        if $r9 != null goto label1;

        return 0;

     label1:
        specialinvoke r0.<com.fsck.k9.activity.compose.RecipientLoader: void fillContactDataFromCursor(android.database.Cursor,java.util.List,java.util.Map)>($r9, r1, r2);

        return 1;
    }
    private boolean fillContactDataFromNickname(java.lang.String, java.util.List, java.util.Map)
    {
        com.fsck.k9.activity.compose.RecipientLoader r0;
        java.lang.String $r1;
        java.util.List r2;
        java.util.Map r3;
        android.net.Uri r4;
        java.lang.String[] $r5, $r8;
        boolean z0, $z1;
        android.database.Cursor $r6, $r9;
        android.content.ContentResolver $r7;
        java.lang.Throwable $r10;

        r0 := @this: com.fsck.k9.activity.compose.RecipientLoader;

        $r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.Map;

        z0 = 0;

        r4 = <android.provider.ContactsContract$CommonDataKinds$Email: android.net.Uri CONTENT_URI>;

        $r6 = specialinvoke r0.<com.fsck.k9.activity.compose.RecipientLoader: android.database.Cursor getNicknameCursor(java.lang.String)>($r1);

        if $r6 != null goto label1;

        return 0;

     label1:
        $z1 = interfaceinvoke $r6.<android.database.Cursor: boolean moveToNext()>();

     label2:
        if $z1 == 0 goto label5;

     label3:
        $r1 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r7 = r0.<com.fsck.k9.activity.compose.RecipientLoader: android.content.ContentResolver contentResolver>;

        $r5 = <com.fsck.k9.activity.compose.RecipientLoader: java.lang.String[] PROJECTION>;

        $r8 = newarray (java.lang.String)[1];

        $r8[0] = $r1;

        $r9 = virtualinvoke $r7.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r4, $r5, "contact_id = ?", $r8, "times_contacted DESC, sort_key");

        $r1 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>(1);

        specialinvoke r0.<com.fsck.k9.activity.compose.RecipientLoader: void fillContactDataFromCursor(android.database.Cursor,java.util.List,java.util.Map,java.lang.String)>($r9, r2, r3, $r1);

     label4:
        z0 = 1;

        goto label1;

     label5:
        interfaceinvoke $r6.<android.database.Cursor: void close()>();

        return z0;

     label6:
        $r10 := @caughtexception;

        interfaceinvoke $r6.<android.database.Cursor: void close()>();

        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
    }
    private void fillContactDataFromQuery(java.lang.String, java.util.List, java.util.Map)
    {
        com.fsck.k9.activity.compose.RecipientLoader r0;
        java.lang.String $r1;
        java.util.List r2;
        java.util.Map r3;
        boolean $z0, $z1;

        r0 := @this: com.fsck.k9.activity.compose.RecipientLoader;

        $r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.Map;

        $z0 = specialinvoke r0.<com.fsck.k9.activity.compose.RecipientLoader: boolean fillContactDataFromNickname(java.lang.String,java.util.List,java.util.Map)>($r1, r2, r3);

        $z1 = specialinvoke r0.<com.fsck.k9.activity.compose.RecipientLoader: boolean fillContactDataFromNameAndEmail(java.lang.String,java.util.List,java.util.Map)>($r1, r2, r3);

        $z0 = $z0 | $z1;

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.fsck.k9.activity.compose.RecipientLoader: void registerContentObserver()>();

     label1:
        return;
    }
    private void fillCryptoStatusData(java.util.Map)
    {
        com.fsck.k9.activity.compose.RecipientLoader r0;
        java.util.Map r1;
        com.fsck.k9.mail.Address r2;
        java.lang.SecurityException r3;
        java.util.ArrayList r4;
        java.util.Set $r5;
        int $i0, $i1, $i2;
        java.lang.String[] $r6, $r12;
        java.lang.Object[] $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        android.net.Uri $r10;
        android.content.ContentResolver $r11;
        android.database.Cursor $r13;
        boolean $z0;
        com.fsck.k9.mail.Address[] $r14;
        java.lang.Object $r15;
        com.fsck.k9.view.RecipientSelectView$Recipient r16;
        com.fsck.k9.view.RecipientSelectView$RecipientCryptoStatus $r17, $r18;
        android.content.Loader$ForceLoadContentObserver $r19;

        r0 := @this: com.fsck.k9.activity.compose.RecipientLoader;

        r1 := @parameter0: java.util.Map;

        r4 = new java.util.ArrayList;

        $r5 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        specialinvoke r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r5);

        $i0 = interfaceinvoke r4.<java.util.List: int size()>();

        $r6 = newarray (java.lang.String)[$i0];

        $r7 = interfaceinvoke r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r6 = (java.lang.String[]) $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content://");

        $r9 = r0.<com.fsck.k9.activity.compose.RecipientLoader: java.lang.String cryptoProvider>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".provider.exported/autocrypt_status");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r9);

        $r11 = r0.<com.fsck.k9.activity.compose.RecipientLoader: android.content.ContentResolver contentResolver>;

        $r12 = <com.fsck.k9.activity.compose.RecipientLoader: java.lang.String[] PROJECTION_CRYPTO_STATUS>;

     label01:
        $r13 = virtualinvoke $r11.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r10, $r12, null, $r6, null);

     label02:
        specialinvoke r0.<com.fsck.k9.activity.compose.RecipientLoader: void initializeCryptoStatusForAllRecipients(java.util.Map)>(r1);

        if $r13 != null goto label04;

        return;

     label03:
        r3 := @caughtexception;

        return;

     label04:
        $z0 = interfaceinvoke $r13.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label11;

        $r9 = interfaceinvoke $r13.<android.database.Cursor: java.lang.String getString(int)>(0);

        $i0 = interfaceinvoke $r13.<android.database.Cursor: int getInt(int)>(1);

        $i1 = interfaceinvoke $r13.<android.database.Cursor: int getInt(int)>(2);

        if $i0 <= $i1 goto label08;

     label05:
        $r14 = staticinvoke <com.fsck.k9.mail.Address: com.fsck.k9.mail.Address[] parseUnencoded(java.lang.String)>($r9);

        $i1 = lengthof $r14;

        $i2 = 0;

     label06:
        if $i2 >= $i1 goto label04;

        r2 = $r14[$i2];

        $r9 = virtualinvoke r2.<com.fsck.k9.mail.Address: java.lang.String getAddress()>();

        $z0 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r9);

        if $z0 == 0 goto label07;

        $r15 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        r16 = (com.fsck.k9.view.RecipientSelectView$Recipient) $r15;

        lookupswitch($i0)
        {
            case 1: goto label09;
            case 2: goto label10;
            default: goto label07;
        };

     label07:
        $i2 = $i2 + 1;

        goto label06;

     label08:
        $i0 = $i1;

        goto label05;

     label09:
        $r17 = virtualinvoke r16.<com.fsck.k9.view.RecipientSelectView$Recipient: com.fsck.k9.view.RecipientSelectView$RecipientCryptoStatus getCryptoStatus()>();

        $r18 = <com.fsck.k9.view.RecipientSelectView$RecipientCryptoStatus: com.fsck.k9.view.RecipientSelectView$RecipientCryptoStatus UNAVAILABLE>;

        if $r17 != $r18 goto label07;

        $r17 = <com.fsck.k9.view.RecipientSelectView$RecipientCryptoStatus: com.fsck.k9.view.RecipientSelectView$RecipientCryptoStatus AVAILABLE_UNTRUSTED>;

        virtualinvoke r16.<com.fsck.k9.view.RecipientSelectView$Recipient: void setCryptoStatus(com.fsck.k9.view.RecipientSelectView$RecipientCryptoStatus)>($r17);

        goto label07;

     label10:
        $r17 = virtualinvoke r16.<com.fsck.k9.view.RecipientSelectView$Recipient: com.fsck.k9.view.RecipientSelectView$RecipientCryptoStatus getCryptoStatus()>();

        $r18 = <com.fsck.k9.view.RecipientSelectView$RecipientCryptoStatus: com.fsck.k9.view.RecipientSelectView$RecipientCryptoStatus AVAILABLE_TRUSTED>;

        if $r17 == $r18 goto label07;

        $r17 = <com.fsck.k9.view.RecipientSelectView$RecipientCryptoStatus: com.fsck.k9.view.RecipientSelectView$RecipientCryptoStatus AVAILABLE_TRUSTED>;

        virtualinvoke r16.<com.fsck.k9.view.RecipientSelectView$Recipient: void setCryptoStatus(com.fsck.k9.view.RecipientSelectView$RecipientCryptoStatus)>($r17);

        goto label07;

     label11:
        interfaceinvoke $r13.<android.database.Cursor: void close()>();

        $r19 = r0.<com.fsck.k9.activity.compose.RecipientLoader: android.content.Loader$ForceLoadContentObserver observerKey>;

        if $r19 == null goto label12;

        $r19 = new android.content.Loader$ForceLoadContentObserver;

        specialinvoke $r19.<android.content.Loader$ForceLoadContentObserver: void <init>(android.content.Loader)>(r0);

        r0.<com.fsck.k9.activity.compose.RecipientLoader: android.content.Loader$ForceLoadContentObserver observerKey> = $r19;

        $r11 = r0.<com.fsck.k9.activity.compose.RecipientLoader: android.content.ContentResolver contentResolver>;

        $r19 = r0.<com.fsck.k9.activity.compose.RecipientLoader: android.content.Loader$ForceLoadContentObserver observerKey>;

        virtualinvoke $r11.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r10, 0, $r19);

     label12:
        return;

        catch java.lang.SecurityException from label01 to label02 with label03;
    }
    private static java.lang.String getContactIdFromContactUri(android.net.Uri)
    {
        android.net.Uri $r0;
        java.lang.String $r1;

        $r0 := @parameter0: android.net.Uri;

        $r1 = virtualinvoke $r0.<android.net.Uri: java.lang.String getLastPathSegment()>();

        return $r1;
    }
    private android.database.Cursor getNicknameCursor(java.lang.String)
    {
        com.fsck.k9.activity.compose.RecipientLoader r0;
        android.net.Uri r1;
        java.lang.String $r2;
        java.lang.StringBuilder $r3;
        android.content.ContentResolver $r4;
        java.lang.String[] $r5, $r6;
        android.database.Cursor $r7;

        r0 := @this: com.fsck.k9.activity.compose.RecipientLoader;

        $r2 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r1 = <android.provider.ContactsContract$Data: android.net.Uri CONTENT_URI>;

        $r4 = r0.<com.fsck.k9.activity.compose.RecipientLoader: android.content.ContentResolver contentResolver>;

        $r5 = <com.fsck.k9.activity.compose.RecipientLoader: java.lang.String[] PROJECTION_NICKNAME>;

        $r6 = newarray (java.lang.String)[2];

        $r6[0] = $r2;

        $r6[1] = "vnd.android.cursor.item/nickname";

        $r7 = virtualinvoke $r4.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, $r5, "data1 LIKE ? AND mimetype = ?", $r6, null);

        return $r7;
    }
    private void initializeCryptoStatusForAllRecipients(java.util.Map)
    {
        com.fsck.k9.activity.compose.RecipientLoader r0;
        java.util.Map r1;
        java.util.Collection $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.fsck.k9.view.RecipientSelectView$Recipient r5;
        com.fsck.k9.view.RecipientSelectView$RecipientCryptoStatus $r6;

        r0 := @this: com.fsck.k9.activity.compose.RecipientLoader;

        r1 := @parameter0: java.util.Map;

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.fsck.k9.view.RecipientSelectView$Recipient) $r4;

        $r6 = <com.fsck.k9.view.RecipientSelectView$RecipientCryptoStatus: com.fsck.k9.view.RecipientSelectView$RecipientCryptoStatus UNAVAILABLE>;

        virtualinvoke r5.<com.fsck.k9.view.RecipientSelectView$Recipient: void setCryptoStatus(com.fsck.k9.view.RecipientSelectView$RecipientCryptoStatus)>($r6);

        goto label1;

     label2:
        return;
    }
    private void registerContentObserver()
    {
        com.fsck.k9.activity.compose.RecipientLoader r0;
        android.net.Uri $r1;
        android.content.Loader$ForceLoadContentObserver $r2;
        android.content.ContentResolver $r3;

        r0 := @this: com.fsck.k9.activity.compose.RecipientLoader;

        $r2 = r0.<com.fsck.k9.activity.compose.RecipientLoader: android.content.Loader$ForceLoadContentObserver observerContact>;

        if $r2 == null goto label1;

        $r2 = new android.content.Loader$ForceLoadContentObserver;

        specialinvoke $r2.<android.content.Loader$ForceLoadContentObserver: void <init>(android.content.Loader)>(r0);

        r0.<com.fsck.k9.activity.compose.RecipientLoader: android.content.Loader$ForceLoadContentObserver observerContact> = $r2;

        $r3 = r0.<com.fsck.k9.activity.compose.RecipientLoader: android.content.ContentResolver contentResolver>;

        $r1 = <android.provider.ContactsContract$CommonDataKinds$Email: android.net.Uri CONTENT_URI>;

        $r2 = r0.<com.fsck.k9.activity.compose.RecipientLoader: android.content.Loader$ForceLoadContentObserver observerContact>;

        virtualinvoke $r3.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r1, 0, $r2);

     label1:
        return;
    }
    public volatile void deliverResult(java.lang.Object)
    {
        com.fsck.k9.activity.compose.RecipientLoader r0;
        java.lang.Object $r1;
        java.util.List $r2;

        r0 := @this: com.fsck.k9.activity.compose.RecipientLoader;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.List) $r1;

        virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientLoader: void deliverResult(java.util.List)>($r2);

        return;
    }
    public void deliverResult(java.util.List)
    {
        com.fsck.k9.activity.compose.RecipientLoader r0;
        java.util.List r1;
        boolean $z0;

        r0 := @this: com.fsck.k9.activity.compose.RecipientLoader;

        r1 := @parameter0: java.util.List;

        r0.<com.fsck.k9.activity.compose.RecipientLoader: java.util.List cachedRecipients> = r1;

        $z0 = virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientLoader: boolean isStarted()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.content.AsyncTaskLoader: void deliverResult(java.lang.Object)>(r1);

     label1:
        return;
    }
    public volatile java.lang.Object loadInBackground()
    {
        com.fsck.k9.activity.compose.RecipientLoader r0;
        java.util.List $r1;

        r0 := @this: com.fsck.k9.activity.compose.RecipientLoader;

        $r1 = virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientLoader: java.util.List loadInBackground()>();

        return $r1;
    }
    public java.util.List loadInBackground()
    {
        com.fsck.k9.activity.compose.RecipientLoader r0;
        java.util.HashMap r1;
        java.util.ArrayList r2;
        boolean $z0;
        com.fsck.k9.mail.Address[] $r3;
        android.net.Uri $r4;
        java.lang.String $r5;
        java.lang.IllegalStateException $r6;

        r0 := @this: com.fsck.k9.activity.compose.RecipientLoader;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        r1 = new java.util.HashMap;

        specialinvoke r1.<java.util.HashMap: void <init>()>();

        $r3 = r0.<com.fsck.k9.activity.compose.RecipientLoader: com.fsck.k9.mail.Address[] addresses>;

        if $r3 == null goto label2;

        $r3 = r0.<com.fsck.k9.activity.compose.RecipientLoader: com.fsck.k9.mail.Address[] addresses>;

        specialinvoke r0.<com.fsck.k9.activity.compose.RecipientLoader: void fillContactDataFromAddresses(com.fsck.k9.mail.Address[],java.util.List,java.util.Map)>($r3, r2, r1);

     label1:
        $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label6;

        return r2;

     label2:
        $r4 = r0.<com.fsck.k9.activity.compose.RecipientLoader: android.net.Uri contactUri>;

        if $r4 == null goto label3;

        $r4 = r0.<com.fsck.k9.activity.compose.RecipientLoader: android.net.Uri contactUri>;

        specialinvoke r0.<com.fsck.k9.activity.compose.RecipientLoader: void fillContactDataFromEmailContentUri(android.net.Uri,java.util.List,java.util.Map)>($r4, r2, r1);

        goto label1;

     label3:
        $r5 = r0.<com.fsck.k9.activity.compose.RecipientLoader: java.lang.String query>;

        if $r5 == null goto label4;

        $r5 = r0.<com.fsck.k9.activity.compose.RecipientLoader: java.lang.String query>;

        specialinvoke r0.<com.fsck.k9.activity.compose.RecipientLoader: void fillContactDataFromQuery(java.lang.String,java.util.List,java.util.Map)>($r5, r2, r1);

        $r5 = r0.<com.fsck.k9.activity.compose.RecipientLoader: java.lang.String cryptoProvider>;

        if $r5 == null goto label1;

        $r5 = r0.<com.fsck.k9.activity.compose.RecipientLoader: java.lang.String query>;

        specialinvoke r0.<com.fsck.k9.activity.compose.RecipientLoader: void fillContactDataFromCryptoProvider(java.lang.String,java.util.List,java.util.Map)>($r5, r2, r1);

        goto label1;

     label4:
        $r4 = r0.<com.fsck.k9.activity.compose.RecipientLoader: android.net.Uri lookupKeyUri>;

        if $r4 == null goto label5;

        $r4 = r0.<com.fsck.k9.activity.compose.RecipientLoader: android.net.Uri lookupKeyUri>;

        specialinvoke r0.<com.fsck.k9.activity.compose.RecipientLoader: void fillContactDataFromLookupKey(android.net.Uri,java.util.List,java.util.Map)>($r4, r2, r1);

        goto label1;

     label5:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("loader must be initialized with query or list of addresses!");

        throw $r6;

     label6:
        $r5 = r0.<com.fsck.k9.activity.compose.RecipientLoader: java.lang.String cryptoProvider>;

        if $r5 == null goto label7;

        specialinvoke r0.<com.fsck.k9.activity.compose.RecipientLoader: void fillCryptoStatusData(java.util.Map)>(r1);

     label7:
        return r2;
    }
    protected void onAbandon()
    {
        com.fsck.k9.activity.compose.RecipientLoader r0;
        android.content.Loader$ForceLoadContentObserver $r1;
        android.content.ContentResolver $r2;

        r0 := @this: com.fsck.k9.activity.compose.RecipientLoader;

        specialinvoke r0.<android.content.AsyncTaskLoader: void onAbandon()>();

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientLoader: android.content.Loader$ForceLoadContentObserver observerKey>;

        if $r1 == null goto label1;

        $r2 = r0.<com.fsck.k9.activity.compose.RecipientLoader: android.content.ContentResolver contentResolver>;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientLoader: android.content.Loader$ForceLoadContentObserver observerKey>;

        virtualinvoke $r2.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>($r1);

     label1:
        $r1 = r0.<com.fsck.k9.activity.compose.RecipientLoader: android.content.Loader$ForceLoadContentObserver observerContact>;

        if $r1 == null goto label2;

        $r2 = r0.<com.fsck.k9.activity.compose.RecipientLoader: android.content.ContentResolver contentResolver>;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientLoader: android.content.Loader$ForceLoadContentObserver observerContact>;

        virtualinvoke $r2.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>($r1);

     label2:
        return;
    }
    protected void onStartLoading()
    {
        com.fsck.k9.activity.compose.RecipientLoader r0;
        boolean $z0;
        java.util.List $r1;

        r0 := @this: com.fsck.k9.activity.compose.RecipientLoader;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientLoader: java.util.List cachedRecipients>;

        if $r1 == null goto label1;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientLoader: java.util.List cachedRecipients>;

        specialinvoke r0.<android.content.AsyncTaskLoader: void deliverResult(java.lang.Object)>($r1);

        return;

     label1:
        $z0 = virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientLoader: boolean takeContentChanged()>();

        if $z0 != 0 goto label2;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientLoader: java.util.List cachedRecipients>;

        if $r1 != null goto label3;

     label2:
        virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientLoader: void forceLoad()>();

     label3:
        return;
    }
