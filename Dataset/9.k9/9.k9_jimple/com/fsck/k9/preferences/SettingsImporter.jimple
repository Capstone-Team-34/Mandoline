com.fsck.k9.preferences.SettingsImporter extends java.lang.Object
    public void <init>()
    {
        com.fsck.k9.preferences.SettingsImporter r0;

        r0 := @this: com.fsck.k9.preferences.SettingsImporter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private static int findIdentity(com.fsck.k9.preferences.SettingsImporter$ImportedIdentity, java.util.List)
    {
        com.fsck.k9.preferences.SettingsImporter$ImportedIdentity $r0;
        java.util.List r1;
        int i0, $i1;
        java.lang.Object $r2;
        com.fsck.k9.Identity r3;
        java.lang.String $r4, $r5;
        boolean $z0;

        $r0 := @parameter0: com.fsck.k9.preferences.SettingsImporter$ImportedIdentity;

        r1 := @parameter1: java.util.List;

        i0 = 0;

     label1:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if i0 >= $i1 goto label3;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        r3 = (com.fsck.k9.Identity) $r2;

        $r4 = virtualinvoke r3.<com.fsck.k9.Identity: java.lang.String getName()>();

        $r5 = $r0.<com.fsck.k9.preferences.SettingsImporter$ImportedIdentity: java.lang.String name>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke r3.<com.fsck.k9.Identity: java.lang.String getEmail()>();

        $r5 = $r0.<com.fsck.k9.preferences.SettingsImporter$ImportedIdentity: java.lang.String email>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        return i0;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return -1;
    }
    private static java.lang.String getAccountDisplayName(com.fsck.k9.preferences.SettingsImporter$ImportedAccount)
    {
        com.fsck.k9.preferences.SettingsImporter$ImportedAccount $r0;
        java.lang.String r1;
        boolean $z0;
        java.util.List $r2;
        int $i0;
        java.lang.Object $r3;
        com.fsck.k9.preferences.SettingsImporter$ImportedIdentity $r4;

        $r0 := @parameter0: com.fsck.k9.preferences.SettingsImporter$ImportedAccount;

        r1 = $r0.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: java.lang.String name>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r2 = $r0.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: java.util.List identities>;

        if $r2 == null goto label1;

        $r2 = $r0.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: java.util.List identities>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        $r2 = $r0.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: java.util.List identities>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (com.fsck.k9.preferences.SettingsImporter$ImportedIdentity) $r3;

        r1 = $r4.<com.fsck.k9.preferences.SettingsImporter$ImportedIdentity: java.lang.String email>;

     label1:
        return r1;
    }
    public static com.fsck.k9.preferences.SettingsImporter$ImportContents getImportStreamContents(java.io.InputStream) throws com.fsck.k9.preferences.SettingsImportExportException
    {
        java.io.InputStream $r0;
        java.util.ArrayList r1;
        boolean z0, $z1;
        com.fsck.k9.preferences.SettingsImporter$Imported $r2;
        com.fsck.k9.preferences.SettingsImporter$ImportedSettings $r3;
        java.util.Map $r4;
        java.util.Collection $r5;
        java.util.Iterator $r6;
        java.lang.Object $r7;
        com.fsck.k9.preferences.SettingsImporter$ImportedAccount r8;
        java.lang.String $r9, $r11;
        com.fsck.k9.preferences.SettingsImporter$AccountDescription $r10;
        com.fsck.k9.preferences.SettingsImportExportException r12;
        com.fsck.k9.preferences.SettingsImporter$ImportContents $r13;
        java.lang.Exception r14;

        $r0 := @parameter0: java.io.InputStream;

        z0 = 1;

     label01:
        $r2 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: com.fsck.k9.preferences.SettingsImporter$Imported parseSettings(java.io.InputStream,boolean,java.util.List,boolean)>($r0, 0, null, 1);

     label02:
        $r3 = $r2.<com.fsck.k9.preferences.SettingsImporter$Imported: com.fsck.k9.preferences.SettingsImporter$ImportedSettings globalSettings>;

     label03:
        if $r3 == null goto label20;

     label04:
        r1 = new java.util.ArrayList;

     label05:
        specialinvoke r1.<java.util.ArrayList: void <init>()>();

     label06:
        $r4 = $r2.<com.fsck.k9.preferences.SettingsImporter$Imported: java.util.Map accounts>;

     label07:
        if $r4 == null goto label21;

     label08:
        $r4 = $r2.<com.fsck.k9.preferences.SettingsImporter$Imported: java.util.Map accounts>;

     label09:
        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label10:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

     label11:
        if $z1 == 0 goto label21;

     label12:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

     label13:
        r8 = (com.fsck.k9.preferences.SettingsImporter$ImportedAccount) $r7;

     label14:
        $r9 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: java.lang.String getAccountDisplayName(com.fsck.k9.preferences.SettingsImporter$ImportedAccount)>(r8);

     label15:
        $r10 = new com.fsck.k9.preferences.SettingsImporter$AccountDescription;

     label16:
        $r11 = r8.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: java.lang.String uuid>;

     label17:
        specialinvoke $r10.<com.fsck.k9.preferences.SettingsImporter$AccountDescription: void <init>(java.lang.String,java.lang.String,com.fsck.k9.preferences.SettingsImporter$1)>($r9, $r11, null);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r10);

     label18:
        goto label10;

     label19:
        r12 := @caughtexception;

        throw r12;

     label20:
        z0 = 0;

        goto label04;

     label21:
        $r13 = new com.fsck.k9.preferences.SettingsImporter$ImportContents;

     label22:
        specialinvoke $r13.<com.fsck.k9.preferences.SettingsImporter$ImportContents: void <init>(boolean,java.util.List,com.fsck.k9.preferences.SettingsImporter$1)>(z0, r1, null);

     label23:
        return $r13;

     label24:
        r14 := @caughtexception;

        r12 = new com.fsck.k9.preferences.SettingsImportExportException;

        specialinvoke r12.<com.fsck.k9.preferences.SettingsImportExportException: void <init>(java.lang.Throwable)>(r14);

        throw r12;

        catch com.fsck.k9.preferences.SettingsImportExportException from label01 to label02 with label19;
        catch com.fsck.k9.preferences.SettingsImportExportException from label05 to label06 with label19;
        catch com.fsck.k9.preferences.SettingsImportExportException from label09 to label11 with label19;
        catch com.fsck.k9.preferences.SettingsImportExportException from label12 to label13 with label19;
        catch com.fsck.k9.preferences.SettingsImportExportException from label14 to label15 with label19;
        catch com.fsck.k9.preferences.SettingsImportExportException from label17 to label18 with label19;
        catch java.lang.Exception from label01 to label03 with label24;
        catch java.lang.Exception from label05 to label07 with label24;
        catch java.lang.Exception from label08 to label11 with label24;
        catch java.lang.Exception from label12 to label15 with label24;
        catch java.lang.Exception from label16 to label18 with label24;
        catch com.fsck.k9.preferences.SettingsImportExportException from label22 to label23 with label19;
        catch java.lang.Exception from label22 to label23 with label24;
    }
    private static java.lang.String getText(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser $r0;
        int $i0;
        java.lang.String $r1;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i0 == 4 goto label1;

        return "";

     label1:
        $r1 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        return $r1;
    }
    private static com.fsck.k9.preferences.SettingsImporter$AccountDescriptionPair importAccount(android.content.Context, com.fsck.k9.preferences.StorageEditor, int, com.fsck.k9.preferences.SettingsImporter$ImportedAccount, boolean) throws com.fsck.k9.preferences.Settings$InvalidSettingValueException
    {
        android.content.Context $r0;
        com.fsck.k9.preferences.StorageEditor $r1;
        int $i0, i1, $i2;
        com.fsck.k9.preferences.SettingsImporter$ImportedAccount $r2;
        boolean $z0, z1, $z2, $z3;
        com.fsck.k9.preferences.SettingsImporter$AccountDescription r3, r5, $r35;
        com.fsck.k9.preferences.SettingsImporter$ImportedServerSettings r4, $r33;
        java.lang.String $r6, $r7, $r12, $r14, $r16;
        com.fsck.k9.Preferences $r8;
        java.util.List $r9;
        com.fsck.k9.Account $r10;
        java.util.UUID $r11;
        java.lang.StringBuilder $r13, $r31;
        com.fsck.k9.preferences.SettingsImporter$ImportedServer $r15;
        com.fsck.k9.mail.AuthType $r17, $r18;
        com.fsck.k9.mail.ServerSettings$Type $r19, $r20;
        com.fsck.k9.preferences.SettingsImporter$ImportedSettings $r21;
        java.util.Map $r22, r23, $r25;
        com.fsck.k9.preferences.Storage $r24;
        java.util.Set $r26;
        java.util.Iterator $r27;
        java.lang.Object $r28;
        java.util.Map$Entry r29;
        com.fsck.k9.preferences.SettingsImporter$ImportedFolder r30;
        com.fsck.k9.preferences.Settings$InvalidSettingValueException $r32;
        java.util.HashMap $r34;
        com.fsck.k9.preferences.SettingsImporter$AccountDescriptionPair $r36;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: com.fsck.k9.preferences.StorageEditor;

        $i0 := @parameter2: int;

        $r2 := @parameter3: com.fsck.k9.preferences.SettingsImporter$ImportedAccount;

        $z0 := @parameter4: boolean;

        r3 = new com.fsck.k9.preferences.SettingsImporter$AccountDescription;

        r5 = r3;

        $r6 = $r2.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: java.lang.String name>;

        $r7 = $r2.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: java.lang.String uuid>;

        specialinvoke r3.<com.fsck.k9.preferences.SettingsImporter$AccountDescription: void <init>(java.lang.String,java.lang.String,com.fsck.k9.preferences.SettingsImporter$1)>($r6, $r7, null);

        $r8 = staticinvoke <com.fsck.k9.Preferences: com.fsck.k9.Preferences getPreferences(android.content.Context)>($r0);

        $r9 = virtualinvoke $r8.<com.fsck.k9.Preferences: java.util.List getAccounts()>();

        $r6 = $r2.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: java.lang.String uuid>;

        $r10 = virtualinvoke $r8.<com.fsck.k9.Preferences: com.fsck.k9.Account getAccount(java.lang.String)>($r6);

        if $z0 == 0 goto label05;

        if $r10 == null goto label05;

        z1 = 1;

     label01:
        if $z0 != 0 goto label02;

        if $r10 == null goto label02;

        $r11 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r6 = virtualinvoke $r11.<java.util.UUID: java.lang.String toString()>();

     label02:
        $r12 = $r2.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: java.lang.String name>;

        $r7 = $r12;

        $z2 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: boolean isAccountNameUsed(java.lang.String,java.util.List)>($r12, $r9);

        if $z2 == 0 goto label04;

        i1 = 1;

     label03:
        $i2 = interfaceinvoke $r9.<java.util.List: int size()>();

        if i1 > $i2 goto label04;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r7 = $r2.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: java.lang.String name>;

        $r13 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = $r12;

        $z2 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: boolean isAccountNameUsed(java.lang.String,java.util.List)>($r12, $r9);

        if $z2 != 0 goto label06;

     label04:
        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("description");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.fsck.k9.preferences.SettingsImporter: void putString(com.fsck.k9.preferences.StorageEditor,java.lang.String,java.lang.String)>($r1, $r14, $r7);

        $r15 = $r2.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: com.fsck.k9.preferences.SettingsImporter$ImportedServer incoming>;

        if $r15 != null goto label07;

        $r32 = new com.fsck.k9.preferences.Settings$InvalidSettingValueException;

        specialinvoke $r32.<com.fsck.k9.preferences.Settings$InvalidSettingValueException: void <init>()>();

        throw $r32;

     label05:
        z1 = 0;

        goto label01;

     label06:
        i1 = i1 + 1;

        goto label03;

     label07:
        $r33 = new com.fsck.k9.preferences.SettingsImporter$ImportedServerSettings;

        r4 = $r33;

        $r15 = $r2.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: com.fsck.k9.preferences.SettingsImporter$ImportedServer incoming>;

        specialinvoke $r33.<com.fsck.k9.preferences.SettingsImporter$ImportedServerSettings: void <init>(com.fsck.k9.preferences.SettingsImporter$ImportedServer)>($r15);

        $r16 = staticinvoke <com.fsck.k9.mail.store.RemoteStore: java.lang.String createStoreUri(com.fsck.k9.mail.ServerSettings)>(r4);

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("storeUri");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = staticinvoke <com.fsck.k9.mail.filter.Base64: java.lang.String encode(java.lang.String)>($r16);

        staticinvoke <com.fsck.k9.preferences.SettingsImporter: void putString(com.fsck.k9.preferences.StorageEditor,java.lang.String,java.lang.String)>($r1, $r14, $r16);

        $r17 = <com.fsck.k9.mail.AuthType: com.fsck.k9.mail.AuthType EXTERNAL>;

        $r18 = r4.<com.fsck.k9.mail.ServerSettings: com.fsck.k9.mail.AuthType authenticationType>;

        if $r17 == $r18 goto label10;

        $r14 = r4.<com.fsck.k9.mail.ServerSettings: java.lang.String password>;

        if $r14 == null goto label08;

        $r14 = r4.<com.fsck.k9.mail.ServerSettings: java.lang.String password>;

        $z2 = virtualinvoke $r14.<java.lang.String: boolean isEmpty()>();

        if $z2 == 0 goto label10;

     label08:
        $z2 = 1;

     label09:
        $r15 = $r2.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: com.fsck.k9.preferences.SettingsImporter$ImportedServer outgoing>;

        if $r15 != null goto label11;

        $r19 = <com.fsck.k9.mail.ServerSettings$Type: com.fsck.k9.mail.ServerSettings$Type WebDAV>;

        $r14 = virtualinvoke $r19.<com.fsck.k9.mail.ServerSettings$Type: java.lang.String name()>();

        $r15 = $r2.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: com.fsck.k9.preferences.SettingsImporter$ImportedServer incoming>;

        $r16 = $r15.<com.fsck.k9.preferences.SettingsImporter$ImportedServer: java.lang.String type>;

        $z3 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z3 != 0 goto label11;

        $r32 = new com.fsck.k9.preferences.Settings$InvalidSettingValueException;

        specialinvoke $r32.<com.fsck.k9.preferences.Settings$InvalidSettingValueException: void <init>()>();

        throw $r32;

     label10:
        $z2 = 0;

        goto label09;

     label11:
        $r15 = $r2.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: com.fsck.k9.preferences.SettingsImporter$ImportedServer outgoing>;

        if $r15 == null goto label15;

        $r33 = new com.fsck.k9.preferences.SettingsImporter$ImportedServerSettings;

        r4 = $r33;

        $r15 = $r2.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: com.fsck.k9.preferences.SettingsImporter$ImportedServer outgoing>;

        specialinvoke $r33.<com.fsck.k9.preferences.SettingsImporter$ImportedServerSettings: void <init>(com.fsck.k9.preferences.SettingsImporter$ImportedServer)>($r15);

        $r16 = staticinvoke <com.fsck.k9.mail.TransportUris: java.lang.String createTransportUri(com.fsck.k9.mail.ServerSettings)>(r4);

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("transportUri");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = staticinvoke <com.fsck.k9.mail.filter.Base64: java.lang.String encode(java.lang.String)>($r16);

        staticinvoke <com.fsck.k9.preferences.SettingsImporter: void putString(com.fsck.k9.preferences.StorageEditor,java.lang.String,java.lang.String)>($r1, $r14, $r16);

        $r17 = <com.fsck.k9.mail.AuthType: com.fsck.k9.mail.AuthType EXTERNAL>;

        $r18 = r4.<com.fsck.k9.mail.ServerSettings: com.fsck.k9.mail.AuthType authenticationType>;

        if $r17 == $r18 goto label21;

        $r19 = <com.fsck.k9.mail.ServerSettings$Type: com.fsck.k9.mail.ServerSettings$Type WebDAV>;

        $r20 = r4.<com.fsck.k9.mail.ServerSettings: com.fsck.k9.mail.ServerSettings$Type type>;

        if $r19 == $r20 goto label21;

        $r14 = r4.<com.fsck.k9.mail.ServerSettings: java.lang.String username>;

        if $r14 == null goto label21;

        $r14 = r4.<com.fsck.k9.mail.ServerSettings: java.lang.String username>;

        $z3 = virtualinvoke $r14.<java.lang.String: boolean isEmpty()>();

        if $z3 != 0 goto label21;

        $r14 = r4.<com.fsck.k9.mail.ServerSettings: java.lang.String password>;

        if $r14 == null goto label12;

        $r14 = r4.<com.fsck.k9.mail.ServerSettings: java.lang.String password>;

        $z3 = virtualinvoke $r14.<java.lang.String: boolean isEmpty()>();

        if $z3 == 0 goto label21;

     label12:
        $z3 = 1;

     label13:
        if $z3 != 0 goto label14;

        if $z2 == 0 goto label22;

     label14:
        $z2 = 1;

     label15:
        if $z2 == 0 goto label16;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("enabled");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean)>($r14, 0);

     label16:
        $r21 = $r2.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: com.fsck.k9.preferences.SettingsImporter$ImportedSettings settings>;

        $r22 = $r21.<com.fsck.k9.preferences.SettingsImporter$ImportedSettings: java.util.Map settings>;

        if z1 != 0 goto label23;

        $z2 = 1;

     label17:
        $r22 = staticinvoke <com.fsck.k9.preferences.AccountSettings: java.util.Map validate(int,java.util.Map,boolean)>($i0, $r22, $z2);

        if $i0 == 48 goto label18;

        staticinvoke <com.fsck.k9.preferences.AccountSettings: java.util.Set upgrade(int,java.util.Map)>($i0, $r22);

     label18:
        $r22 = staticinvoke <com.fsck.k9.preferences.AccountSettings: java.util.Map convert(java.util.Map)>($r22);

        if z1 == 0 goto label24;

        $r34 = new java.util.HashMap;

        r23 = $r34;

        $r24 = virtualinvoke $r8.<com.fsck.k9.Preferences: com.fsck.k9.preferences.Storage getStorage()>();

        $r25 = staticinvoke <com.fsck.k9.preferences.AccountSettings: java.util.Map getAccountSettings(com.fsck.k9.preferences.Storage,java.lang.String)>($r24, $r6);

        specialinvoke $r34.<java.util.HashMap: void <init>(java.util.Map)>($r25);

        interfaceinvoke r23.<java.util.Map: void putAll(java.util.Map)>($r22);

     label19:
        $r26 = interfaceinvoke r23.<java.util.Map: java.util.Set entrySet()>();

        $r27 = interfaceinvoke $r26.<java.util.Set: java.util.Iterator iterator()>();

     label20:
        $z2 = interfaceinvoke $r27.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label25;

        $r28 = interfaceinvoke $r27.<java.util.Iterator: java.lang.Object next()>();

        r29 = (java.util.Map$Entry) $r28;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r28 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r14 = (java.lang.String) $r28;

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r16 = (java.lang.String) $r28;

        staticinvoke <com.fsck.k9.preferences.SettingsImporter: void putString(com.fsck.k9.preferences.StorageEditor,java.lang.String,java.lang.String)>($r1, $r14, $r16);

        goto label20;

     label21:
        $z3 = 0;

        goto label13;

     label22:
        $z2 = 0;

        goto label15;

     label23:
        $z2 = 0;

        goto label17;

     label24:
        r23 = $r22;

        goto label19;

     label25:
        if z1 != 0 goto label26;

        i1 = staticinvoke <com.fsck.k9.Account: int generateAccountNumber(com.fsck.k9.Preferences)>($r8);

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("accountNumber");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

        staticinvoke <com.fsck.k9.preferences.SettingsImporter: void putString(com.fsck.k9.preferences.StorageEditor,java.lang.String,java.lang.String)>($r1, $r12, $r14);

     label26:
        $r9 = $r2.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: java.util.List identities>;

        if $r9 == null goto label29;

        staticinvoke <com.fsck.k9.preferences.SettingsImporter: void importIdentities(com.fsck.k9.preferences.StorageEditor,int,java.lang.String,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean,com.fsck.k9.Account,com.fsck.k9.Preferences)>($r1, $i0, $r6, $r2, $z0, $r10, $r8);

     label27:
        $r9 = $r2.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: java.util.List folders>;

        if $r9 == null goto label30;

        $r9 = $r2.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: java.util.List folders>;

        $r27 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label28:
        $z0 = interfaceinvoke $r27.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label30;

        $r28 = interfaceinvoke $r27.<java.util.Iterator: java.lang.Object next()>();

        r30 = (com.fsck.k9.preferences.SettingsImporter$ImportedFolder) $r28;

        staticinvoke <com.fsck.k9.preferences.SettingsImporter: void importFolder(com.fsck.k9.preferences.StorageEditor,int,java.lang.String,com.fsck.k9.preferences.SettingsImporter$ImportedFolder,boolean,com.fsck.k9.Preferences)>($r1, $i0, $r6, r30, z1, $r8);

        goto label28;

     label29:
        if z1 != 0 goto label27;

        $r32 = new com.fsck.k9.preferences.Settings$InvalidSettingValueException;

        specialinvoke $r32.<com.fsck.k9.preferences.Settings$InvalidSettingValueException: void <init>()>();

        throw $r32;

     label30:
        $r35 = new com.fsck.k9.preferences.SettingsImporter$AccountDescription;

        specialinvoke $r35.<com.fsck.k9.preferences.SettingsImporter$AccountDescription: void <init>(java.lang.String,java.lang.String,com.fsck.k9.preferences.SettingsImporter$1)>($r7, $r6, null);

        $r36 = new com.fsck.k9.preferences.SettingsImporter$AccountDescriptionPair;

        specialinvoke $r36.<com.fsck.k9.preferences.SettingsImporter$AccountDescriptionPair: void <init>(com.fsck.k9.preferences.SettingsImporter$AccountDescription,com.fsck.k9.preferences.SettingsImporter$AccountDescription,boolean,com.fsck.k9.preferences.SettingsImporter$1)>(r5, $r35, z1, null);

        return $r36;
    }
    private static void importFolder(com.fsck.k9.preferences.StorageEditor, int, java.lang.String, com.fsck.k9.preferences.SettingsImporter$ImportedFolder, boolean, com.fsck.k9.Preferences)
    {
        com.fsck.k9.preferences.StorageEditor $r0;
        int $i0;
        java.lang.String $r1, $r7, r15;
        com.fsck.k9.preferences.SettingsImporter$ImportedFolder $r2;
        boolean $z0, $z1;
        com.fsck.k9.Preferences $r3;
        com.fsck.k9.preferences.SettingsImporter$ImportedSettings $r4;
        java.util.Map $r5, $r8, r9;
        com.fsck.k9.preferences.Storage $r6;
        java.lang.StringBuilder $r10;
        java.util.Set $r11;
        java.util.Iterator $r12;
        java.lang.Object $r13;
        java.util.Map$Entry r14;

        $r0 := @parameter0: com.fsck.k9.preferences.StorageEditor;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.String;

        $r2 := @parameter3: com.fsck.k9.preferences.SettingsImporter$ImportedFolder;

        $z0 := @parameter4: boolean;

        $r3 := @parameter5: com.fsck.k9.Preferences;

        $r4 = $r2.<com.fsck.k9.preferences.SettingsImporter$ImportedFolder: com.fsck.k9.preferences.SettingsImporter$ImportedSettings settings>;

        $r5 = $r4.<com.fsck.k9.preferences.SettingsImporter$ImportedSettings: java.util.Map settings>;

        if $z0 != 0 goto label5;

        $z1 = 1;

     label1:
        $r5 = staticinvoke <com.fsck.k9.preferences.FolderSettings: java.util.Map validate(int,java.util.Map,boolean)>($i0, $r5, $z1);

        if $i0 == 48 goto label2;

        staticinvoke <com.fsck.k9.preferences.FolderSettings: java.util.Set upgrade(int,java.util.Map)>($i0, $r5);

     label2:
        $r5 = staticinvoke <com.fsck.k9.preferences.FolderSettings: java.util.Map convert(java.util.Map)>($r5);

        if $z0 == 0 goto label6;

        $r6 = virtualinvoke $r3.<com.fsck.k9.Preferences: com.fsck.k9.preferences.Storage getStorage()>();

        $r7 = $r2.<com.fsck.k9.preferences.SettingsImporter$ImportedFolder: java.lang.String name>;

        $r8 = staticinvoke <com.fsck.k9.preferences.FolderSettings: java.util.Map getFolderSettings(com.fsck.k9.preferences.Storage,java.lang.String,java.lang.String)>($r6, $r1, $r7);

        r9 = $r8;

        interfaceinvoke $r8.<java.util.Map: void putAll(java.util.Map)>($r5);

     label3:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r1 = $r2.<com.fsck.k9.preferences.SettingsImporter$ImportedFolder: java.lang.String name>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = interfaceinvoke r9.<java.util.Map: java.util.Set entrySet()>();

        $r12 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (java.util.Map$Entry) $r13;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r13 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (java.lang.String) $r13;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getValue()>();

        r15 = (java.lang.String) $r13;

        staticinvoke <com.fsck.k9.preferences.SettingsImporter: void putString(com.fsck.k9.preferences.StorageEditor,java.lang.String,java.lang.String)>($r0, $r7, r15);

        goto label4;

     label5:
        $z1 = 0;

        goto label1;

     label6:
        r9 = $r5;

        goto label3;

     label7:
        return;
    }
    private static void importGlobalSettings(com.fsck.k9.preferences.Storage, com.fsck.k9.preferences.StorageEditor, int, com.fsck.k9.preferences.SettingsImporter$ImportedSettings)
    {
        com.fsck.k9.preferences.Storage $r0;
        com.fsck.k9.preferences.StorageEditor $r1;
        int $i0;
        com.fsck.k9.preferences.SettingsImporter$ImportedSettings $r2;
        java.util.HashMap r3;
        java.util.Map $r4, $r5;
        java.util.Set $r6;
        java.util.Iterator $r7;
        boolean $z0;
        java.lang.Object $r8;
        java.util.Map$Entry r9;
        java.lang.String r10, r11;

        $r0 := @parameter0: com.fsck.k9.preferences.Storage;

        $r1 := @parameter1: com.fsck.k9.preferences.StorageEditor;

        $i0 := @parameter2: int;

        $r2 := @parameter3: com.fsck.k9.preferences.SettingsImporter$ImportedSettings;

        $r4 = $r2.<com.fsck.k9.preferences.SettingsImporter$ImportedSettings: java.util.Map settings>;

        $r4 = staticinvoke <com.fsck.k9.preferences.GlobalSettings: java.util.Map validate(int,java.util.Map)>($i0, $r4);

        if $i0 == 48 goto label1;

        staticinvoke <com.fsck.k9.preferences.GlobalSettings: java.util.Set upgrade(int,java.util.Map)>($i0, $r4);

     label1:
        $r4 = staticinvoke <com.fsck.k9.preferences.GlobalSettings: java.util.Map convert(java.util.Map)>($r4);

        r3 = new java.util.HashMap;

        $r5 = staticinvoke <com.fsck.k9.preferences.GlobalSettings: java.util.Map getGlobalSettings(com.fsck.k9.preferences.Storage)>($r0);

        specialinvoke r3.<java.util.HashMap: void <init>(java.util.Map)>($r5);

        interfaceinvoke r3.<java.util.Map: void putAll(java.util.Map)>($r4);

        $r6 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.util.Map$Entry) $r8;

        $r8 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        r10 = (java.lang.String) $r8;

        $r8 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        r11 = (java.lang.String) $r8;

        staticinvoke <com.fsck.k9.preferences.SettingsImporter: void putString(com.fsck.k9.preferences.StorageEditor,java.lang.String,java.lang.String)>($r1, r10, r11);

        goto label2;

     label3:
        return;
    }
    private static void importIdentities(com.fsck.k9.preferences.StorageEditor, int, java.lang.String, com.fsck.k9.preferences.SettingsImporter$ImportedAccount, boolean, com.fsck.k9.Account, com.fsck.k9.Preferences) throws com.fsck.k9.preferences.Settings$InvalidSettingValueException
    {
        com.fsck.k9.preferences.StorageEditor $r0;
        int $i0, i1, i2, $i3, $i4;
        java.lang.String $r1, $r6, $r12, r13, $r14, $r15;
        com.fsck.k9.preferences.SettingsImporter$ImportedAccount $r2;
        boolean $z0, $z1, $z2;
        com.fsck.k9.Account $r3;
        com.fsck.k9.Preferences $r4;
        java.lang.StringBuilder $r5, $r24;
        java.util.List $r7, r8;
        java.util.Iterator $r9, $r22;
        java.lang.Object $r10;
        com.fsck.k9.preferences.SettingsImporter$ImportedIdentity r11;
        com.fsck.k9.preferences.SettingsImporter$ImportedSettings $r16;
        java.util.Map $r17, r18, $r20;
        com.fsck.k9.preferences.Storage $r19;
        java.util.Set $r21;
        java.util.Map$Entry r23;
        com.fsck.k9.preferences.Settings$InvalidSettingValueException $r25;
        java.util.ArrayList $r26;
        java.util.HashMap $r27;

        $r0 := @parameter0: com.fsck.k9.preferences.StorageEditor;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.String;

        $r2 := @parameter3: com.fsck.k9.preferences.SettingsImporter$ImportedAccount;

        $z0 := @parameter4: boolean;

        $r3 := @parameter5: com.fsck.k9.Account;

        $r4 := @parameter6: com.fsck.k9.Preferences;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        i1 = 0;

        if $z0 == 0 goto label09;

        if $r3 == null goto label09;

        $r7 = virtualinvoke $r3.<com.fsck.k9.Account: java.util.List getIdentities()>();

        r8 = $r7;

        i1 = interfaceinvoke $r7.<java.util.List: int size()>();

     label01:
        $r7 = $r2.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: java.util.List identities>;

        $r9 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label20;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (com.fsck.k9.preferences.SettingsImporter$ImportedIdentity) $r10;

        i2 = i1;

        $z1 = 0;

        if $z0 == 0 goto label03;

        $i3 = interfaceinvoke r8.<java.util.List: int size()>();

        if $i3 <= 0 goto label03;

        $i3 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: int findIdentity(com.fsck.k9.preferences.SettingsImporter$ImportedIdentity,java.util.List)>(r11, r8);

        if $i3 == -1 goto label03;

        i2 = $i3;

        $z1 = 1;

     label03:
        if $z1 != 0 goto label04;

        i1 = i1 + 1;

     label04:
        $r12 = r11.<com.fsck.k9.preferences.SettingsImporter$ImportedIdentity: java.lang.String description>;

        if $r12 != null goto label10;

        r13 = "Imported";

     label05:
        $z2 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: boolean isIdentityDescriptionUsed(java.lang.String,java.util.List)>(r13, r8);

        if $z2 == 0 goto label07;

        $i3 = 1;

     label06:
        $i4 = interfaceinvoke r8.<java.util.List: int size()>();

        if $i3 > $i4 goto label07;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r12 = r11.<com.fsck.k9.preferences.SettingsImporter$ImportedIdentity: java.lang.String description>;

        $r5 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r13 = $r12;

        $z2 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: boolean isIdentityDescriptionUsed(java.lang.String,java.util.List)>($r12, r8);

        if $z2 != 0 goto label11;

     label07:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = r11.<com.fsck.k9.preferences.SettingsImporter$ImportedIdentity: java.lang.String name>;

        if $r14 != null goto label12;

        $r14 = "";

     label08:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("name");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r15 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.fsck.k9.preferences.SettingsImporter: void putString(com.fsck.k9.preferences.StorageEditor,java.lang.String,java.lang.String)>($r0, $r15, $r14);

        $r14 = r11.<com.fsck.k9.preferences.SettingsImporter$ImportedIdentity: java.lang.String email>;

        $z2 = staticinvoke <com.fsck.k9.preferences.IdentitySettings: boolean isEmailAddressValid(java.lang.String)>($r14);

        if $z2 != 0 goto label13;

        $r25 = new com.fsck.k9.preferences.Settings$InvalidSettingValueException;

        specialinvoke $r25.<com.fsck.k9.preferences.Settings$InvalidSettingValueException: void <init>()>();

        throw $r25;

     label09:
        $r26 = new java.util.ArrayList;

        r8 = $r26;

        specialinvoke $r26.<java.util.ArrayList: void <init>()>();

        goto label01;

     label10:
        r13 = r11.<com.fsck.k9.preferences.SettingsImporter$ImportedIdentity: java.lang.String description>;

        goto label05;

     label11:
        $i3 = $i3 + 1;

        goto label06;

     label12:
        $r14 = r11.<com.fsck.k9.preferences.SettingsImporter$ImportedIdentity: java.lang.String name>;

        goto label08;

     label13:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("email");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = r11.<com.fsck.k9.preferences.SettingsImporter$ImportedIdentity: java.lang.String email>;

        staticinvoke <com.fsck.k9.preferences.SettingsImporter: void putString(com.fsck.k9.preferences.StorageEditor,java.lang.String,java.lang.String)>($r0, $r14, $r15);

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("description");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.fsck.k9.preferences.SettingsImporter: void putString(com.fsck.k9.preferences.StorageEditor,java.lang.String,java.lang.String)>($r0, $r14, r13);

        $r16 = r11.<com.fsck.k9.preferences.SettingsImporter$ImportedIdentity: com.fsck.k9.preferences.SettingsImporter$ImportedSettings settings>;

        if $r16 == null goto label02;

        $r16 = r11.<com.fsck.k9.preferences.SettingsImporter$ImportedIdentity: com.fsck.k9.preferences.SettingsImporter$ImportedSettings settings>;

        $r17 = $r16.<com.fsck.k9.preferences.SettingsImporter$ImportedSettings: java.util.Map settings>;

        if $z1 != 0 goto label18;

        $z2 = 1;

     label14:
        $r17 = staticinvoke <com.fsck.k9.preferences.IdentitySettings: java.util.Map validate(int,java.util.Map,boolean)>($i0, $r17, $z2);

        if $i0 == 48 goto label15;

        staticinvoke <com.fsck.k9.preferences.IdentitySettings: java.util.Set upgrade(int,java.util.Map)>($i0, $r17);

     label15:
        $r17 = staticinvoke <com.fsck.k9.preferences.IdentitySettings: java.util.Map convert(java.util.Map)>($r17);

        if $z1 == 0 goto label19;

        $r27 = new java.util.HashMap;

        r18 = $r27;

        $r19 = virtualinvoke $r4.<com.fsck.k9.Preferences: com.fsck.k9.preferences.Storage getStorage()>();

        $r20 = staticinvoke <com.fsck.k9.preferences.IdentitySettings: java.util.Map getIdentitySettings(com.fsck.k9.preferences.Storage,java.lang.String,int)>($r19, $r1, i2);

        specialinvoke $r27.<java.util.HashMap: void <init>(java.util.Map)>($r20);

        interfaceinvoke r18.<java.util.Map: void putAll(java.util.Map)>($r17);

     label16:
        $r21 = interfaceinvoke r18.<java.util.Map: java.util.Set entrySet()>();

        $r22 = interfaceinvoke $r21.<java.util.Set: java.util.Iterator iterator()>();

     label17:
        $z1 = interfaceinvoke $r22.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label02;

        $r10 = interfaceinvoke $r22.<java.util.Iterator: java.lang.Object next()>();

        r23 = (java.util.Map$Entry) $r10;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r10 = interfaceinvoke r23.<java.util.Map$Entry: java.lang.Object getKey()>();

        r13 = (java.lang.String) $r10;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        r13 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = interfaceinvoke r23.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r14 = (java.lang.String) $r10;

        staticinvoke <com.fsck.k9.preferences.SettingsImporter: void putString(com.fsck.k9.preferences.StorageEditor,java.lang.String,java.lang.String)>($r0, r13, $r14);

        goto label17;

     label18:
        $z2 = 0;

        goto label14;

     label19:
        r18 = $r17;

        goto label16;

     label20:
        return;
    }
    public static com.fsck.k9.preferences.SettingsImporter$ImportResults importSettings(android.content.Context, java.io.InputStream, boolean, java.util.List, boolean) throws com.fsck.k9.preferences.SettingsImportExportException
    {
        android.content.Context $r0;
        java.io.InputStream $r1;
        boolean $z0, $z1, z2;
        java.util.List r2;
        java.util.ArrayList r3, r4;
        java.lang.String r5, $r18;
        com.fsck.k9.preferences.SettingsImporter$Imported $r6;
        com.fsck.k9.Preferences $r7;
        com.fsck.k9.preferences.Storage $r8;
        com.fsck.k9.preferences.StorageEditor $r9;
        com.fsck.k9.preferences.SettingsImporter$ImportedSettings $r10;
        int $i0;
        java.lang.Object[] $r11;
        java.util.Map $r12;
        java.util.Iterator $r13;
        java.lang.Object $r14;
        com.fsck.k9.preferences.SettingsImporter$ImportedAccount r15;
        com.fsck.k9.preferences.SettingsImporter$AccountDescriptionPair $r16;
        com.fsck.k9.preferences.SettingsImporter$AccountDescription $r17;
        java.lang.StringBuilder $r19;
        com.fsck.k9.preferences.SettingsImportExportException $r20;
        com.fsck.k9.preferences.Settings$InvalidSettingValueException r21;
        java.lang.Exception r22, r23, r24;
        com.fsck.k9.preferences.SettingsImporter$ImportResults $r25;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.io.InputStream;

        $z0 := @parameter2: boolean;

        r2 := @parameter3: java.util.List;

        $z1 := @parameter4: boolean;

        z2 = 0;

        r4 = new java.util.ArrayList;

     label01:
        specialinvoke r4.<java.util.ArrayList: void <init>()>();

     label02:
        r3 = new java.util.ArrayList;

     label03:
        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        $r6 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: com.fsck.k9.preferences.SettingsImporter$Imported parseSettings(java.io.InputStream,boolean,java.util.List,boolean)>($r1, $z0, r2, 0);

        $r7 = staticinvoke <com.fsck.k9.Preferences: com.fsck.k9.Preferences getPreferences(android.content.Context)>($r0);

        $r8 = virtualinvoke $r7.<com.fsck.k9.Preferences: com.fsck.k9.preferences.Storage getStorage()>();

     label04:
        if $z0 == 0 goto label12;

     label05:
        $r9 = virtualinvoke $r8.<com.fsck.k9.preferences.Storage: com.fsck.k9.preferences.StorageEditor edit()>();

        $r10 = $r6.<com.fsck.k9.preferences.SettingsImporter$Imported: com.fsck.k9.preferences.SettingsImporter$ImportedSettings globalSettings>;

     label06:
        if $r10 == null goto label52;

     label07:
        $i0 = $r6.<com.fsck.k9.preferences.SettingsImporter$Imported: int contentVersion>;

        $r10 = $r6.<com.fsck.k9.preferences.SettingsImporter$Imported: com.fsck.k9.preferences.SettingsImporter$ImportedSettings globalSettings>;

        staticinvoke <com.fsck.k9.preferences.SettingsImporter: void importGlobalSettings(com.fsck.k9.preferences.Storage,com.fsck.k9.preferences.StorageEditor,int,com.fsck.k9.preferences.SettingsImporter$ImportedSettings)>($r8, $r9, $i0, $r10);

     label08:
        $z0 = virtualinvoke $r9.<com.fsck.k9.preferences.StorageEditor: boolean commit()>();

     label09:
        if $z0 == 0 goto label59;

     label10:
        $r11 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("Committed global settings to the preference storage.", $r11);

     label11:
        z2 = 1;

     label12:
        if r2 == null goto label89;

     label13:
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

     label14:
        if $i0 <= 0 goto label89;

     label15:
        $r12 = $r6.<com.fsck.k9.preferences.SettingsImporter$Imported: java.util.Map accounts>;

     label16:
        if $r12 == null goto label87;

     label17:
        $r13 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label18:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

     label19:
        if $z0 == 0 goto label79;

     label20:
        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

     label21:
        r5 = (java.lang.String) $r14;

        $r12 = $r6.<com.fsck.k9.preferences.SettingsImporter$Imported: java.util.Map accounts>;

     label22:
        $z0 = interfaceinvoke $r12.<java.util.Map: boolean containsKey(java.lang.Object)>(r5);

     label23:
        if $z0 == 0 goto label76;

     label24:
        $r12 = $r6.<com.fsck.k9.preferences.SettingsImporter$Imported: java.util.Map accounts>;

     label25:
        $r14 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

     label26:
        r15 = (com.fsck.k9.preferences.SettingsImporter$ImportedAccount) $r14;

     label27:
        $r9 = virtualinvoke $r8.<com.fsck.k9.preferences.Storage: com.fsck.k9.preferences.StorageEditor edit()>();

     label28:
        $i0 = $r6.<com.fsck.k9.preferences.SettingsImporter$Imported: int contentVersion>;

     label29:
        $r16 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: com.fsck.k9.preferences.SettingsImporter$AccountDescriptionPair importAccount(android.content.Context,com.fsck.k9.preferences.StorageEditor,int,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean)>($r0, $r9, $i0, r15, $z1);

        $z0 = virtualinvoke $r9.<com.fsck.k9.preferences.StorageEditor: boolean commit()>();

     label30:
        if $z0 == 0 goto label71;

     label31:
        $r11 = newarray (java.lang.Object)[1];

        $r17 = $r16.<com.fsck.k9.preferences.SettingsImporter$AccountDescriptionPair: com.fsck.k9.preferences.SettingsImporter$AccountDescription imported>;

        r5 = $r17.<com.fsck.k9.preferences.SettingsImporter$AccountDescription: java.lang.String name>;

        $r11[0] = r5;

     label32:
        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("Committed settings for account \"%s\" to the settings database.", $r11);

     label33:
        $z0 = $r16.<com.fsck.k9.preferences.SettingsImporter$AccountDescriptionPair: boolean overwritten>;

     label34:
        if $z0 != 0 goto label62;

     label35:
        $r9 = virtualinvoke $r8.<com.fsck.k9.preferences.Storage: com.fsck.k9.preferences.StorageEditor edit()>();

     label36:
        $r17 = $r16.<com.fsck.k9.preferences.SettingsImporter$AccountDescriptionPair: com.fsck.k9.preferences.SettingsImporter$AccountDescription imported>;

        r5 = $r17.<com.fsck.k9.preferences.SettingsImporter$AccountDescription: java.lang.String uuid>;

     label37:
        $r18 = virtualinvoke $r8.<com.fsck.k9.preferences.Storage: java.lang.String getString(java.lang.String,java.lang.String)>("accountUuids", "");

        $i0 = virtualinvoke $r18.<java.lang.String: int length()>();

     label38:
        if $i0 <= 0 goto label61;

        $r19 = new java.lang.StringBuilder;

     label39:
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

     label40:
        staticinvoke <com.fsck.k9.preferences.SettingsImporter: void putString(com.fsck.k9.preferences.StorageEditor,java.lang.String,java.lang.String)>($r9, "accountUuids", r5);

        $z0 = virtualinvoke $r9.<com.fsck.k9.preferences.StorageEditor: boolean commit()>();

     label41:
        if $z0 != 0 goto label62;

        $r20 = new com.fsck.k9.preferences.SettingsImportExportException;

     label42:
        specialinvoke $r20.<com.fsck.k9.preferences.SettingsImportExportException: void <init>(java.lang.String)>("Failed to set account UUID list");

     label43:
        throw $r20;

     label44:
        r21 := @caughtexception;

     label45:
        $r11 = newarray (java.lang.Object)[1];

        r5 = r15.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: java.lang.String name>;

        $r11[0] = r5;

     label46:
        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r21, "Encountered invalid setting while importing account \"%s\"", $r11);

     label47:
        $r17 = new com.fsck.k9.preferences.SettingsImporter$AccountDescription;

     label48:
        r5 = r15.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: java.lang.String name>;

        $r18 = r15.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: java.lang.String uuid>;

     label49:
        specialinvoke $r17.<com.fsck.k9.preferences.SettingsImporter$AccountDescription: void <init>(java.lang.String,java.lang.String,com.fsck.k9.preferences.SettingsImporter$1)>(r5, $r18, null);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r17);

     label50:
        goto label18;

     label51:
        $r20 := @caughtexception;

        throw $r20;

     label52:
        $r11 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Was asked to import global settings but none found.", $r11);

     label53:
        goto label08;

     label54:
        r22 := @caughtexception;

     label55:
        $r11 = newarray (java.lang.Object)[0];

     label56:
        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r22, "Exception while importing global settings", $r11);

     label57:
        goto label12;

     label58:
        r23 := @caughtexception;

        $r20 = new com.fsck.k9.preferences.SettingsImportExportException;

        specialinvoke $r20.<com.fsck.k9.preferences.SettingsImportExportException: void <init>(java.lang.Throwable)>(r23);

        throw $r20;

     label59:
        $r11 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("Failed to commit global settings to the preference storage", $r11);

     label60:
        goto label12;

     label61:
        goto label40;

     label62:
        virtualinvoke $r7.<com.fsck.k9.Preferences: void loadAccounts()>();

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r16);

     label63:
        goto label18;

     label64:
        r24 := @caughtexception;

     label65:
        $r11 = newarray (java.lang.Object)[1];

        r5 = r15.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: java.lang.String name>;

        $r11[0] = r5;

     label66:
        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r24, "Exception while importing account \"%s\"", $r11);

     label67:
        $r17 = new com.fsck.k9.preferences.SettingsImporter$AccountDescription;

     label68:
        r5 = r15.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: java.lang.String name>;

        $r18 = r15.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: java.lang.String uuid>;

     label69:
        specialinvoke $r17.<com.fsck.k9.preferences.SettingsImporter$AccountDescription: void <init>(java.lang.String,java.lang.String,com.fsck.k9.preferences.SettingsImporter$1)>(r5, $r18, null);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r17);

     label70:
        goto label18;

     label71:
        $r11 = newarray (java.lang.Object)[1];

        $r17 = $r16.<com.fsck.k9.preferences.SettingsImporter$AccountDescriptionPair: com.fsck.k9.preferences.SettingsImporter$AccountDescription original>;

        r5 = $r17.<com.fsck.k9.preferences.SettingsImporter$AccountDescription: java.lang.String name>;

        $r11[0] = r5;

     label72:
        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Error while committing settings for account \"%s\" to the settings database.", $r11);

     label73:
        $r17 = $r16.<com.fsck.k9.preferences.SettingsImporter$AccountDescriptionPair: com.fsck.k9.preferences.SettingsImporter$AccountDescription original>;

     label74:
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r17);

     label75:
        goto label18;

     label76:
        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r5;

     label77:
        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Was asked to import account with UUID %s. But this account wasn\'t found.", $r11);

     label78:
        goto label18;

     label79:
        $r9 = virtualinvoke $r8.<com.fsck.k9.preferences.Storage: com.fsck.k9.preferences.StorageEditor edit()>();

        r5 = virtualinvoke $r8.<com.fsck.k9.preferences.Storage: java.lang.String getString(java.lang.String,java.lang.String)>("defaultAccountUuid", null);

     label80:
        if r5 != null goto label84;

     label81:
        $r14 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

     label82:
        r5 = (java.lang.String) $r14;

     label83:
        staticinvoke <com.fsck.k9.preferences.SettingsImporter: void putString(com.fsck.k9.preferences.StorageEditor,java.lang.String,java.lang.String)>($r9, "defaultAccountUuid", r5);

     label84:
        $z0 = virtualinvoke $r9.<com.fsck.k9.preferences.StorageEditor: boolean commit()>();

     label85:
        if $z0 != 0 goto label89;

        $r20 = new com.fsck.k9.preferences.SettingsImportExportException;

     label86:
        specialinvoke $r20.<com.fsck.k9.preferences.SettingsImportExportException: void <init>(java.lang.String)>("Failed to set default account");

        throw $r20;

     label87:
        $r11 = newarray (java.lang.Object)[0];

     label88:
        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Was asked to import at least one account but none found.", $r11);

     label89:
        virtualinvoke $r7.<com.fsck.k9.Preferences: void loadAccounts()>();

        staticinvoke <com.fsck.k9.K9: void loadPrefs(com.fsck.k9.Preferences)>($r7);

        staticinvoke <com.fsck.k9.K9: void setServicesEnabled(android.content.Context)>($r0);

     label90:
        $r25 = new com.fsck.k9.preferences.SettingsImporter$ImportResults;

     label91:
        specialinvoke $r25.<com.fsck.k9.preferences.SettingsImporter$ImportResults: void <init>(boolean,java.util.List,java.util.List,com.fsck.k9.preferences.SettingsImporter$1)>(z2, r4, r3, null);

     label92:
        return $r25;

        catch com.fsck.k9.preferences.SettingsImportExportException from label01 to label02 with label51;
        catch com.fsck.k9.preferences.SettingsImportExportException from label03 to label04 with label51;
        catch java.lang.Exception from label01 to label02 with label58;
        catch java.lang.Exception from label03 to label04 with label58;
        catch java.lang.Exception from label05 to label06 with label54;
        catch java.lang.Exception from label07 to label09 with label54;
        catch java.lang.Exception from label10 to label11 with label54;
        catch com.fsck.k9.preferences.SettingsImportExportException from label13 to label14 with label51;
        catch com.fsck.k9.preferences.SettingsImportExportException from label17 to label19 with label51;
        catch com.fsck.k9.preferences.SettingsImportExportException from label20 to label21 with label51;
        catch com.fsck.k9.preferences.SettingsImportExportException from label22 to label23 with label51;
        catch com.fsck.k9.preferences.SettingsImportExportException from label25 to label26 with label51;
        catch java.lang.Exception from label13 to label14 with label58;
        catch java.lang.Exception from label15 to label16 with label58;
        catch java.lang.Exception from label17 to label19 with label58;
        catch java.lang.Exception from label20 to label23 with label58;
        catch java.lang.Exception from label24 to label27 with label58;
        catch com.fsck.k9.preferences.Settings$InvalidSettingValueException from label27 to label28 with label44;
        catch com.fsck.k9.preferences.Settings$InvalidSettingValueException from label29 to label30 with label44;
        catch com.fsck.k9.preferences.Settings$InvalidSettingValueException from label32 to label33 with label44;
        catch com.fsck.k9.preferences.Settings$InvalidSettingValueException from label35 to label36 with label44;
        catch com.fsck.k9.preferences.Settings$InvalidSettingValueException from label37 to label38 with label44;
        catch com.fsck.k9.preferences.Settings$InvalidSettingValueException from label39 to label40 with label44;
        catch com.fsck.k9.preferences.Settings$InvalidSettingValueException from label40 to label41 with label44;
        catch com.fsck.k9.preferences.Settings$InvalidSettingValueException from label42 to label43 with label44;
        catch java.lang.Exception from label27 to label30 with label64;
        catch java.lang.Exception from label31 to label34 with label64;
        catch java.lang.Exception from label35 to label38 with label64;
        catch java.lang.Exception from label39 to label40 with label64;
        catch java.lang.Exception from label40 to label41 with label64;
        catch java.lang.Exception from label42 to label44 with label64;
        catch com.fsck.k9.preferences.SettingsImportExportException from label46 to label47 with label51;
        catch com.fsck.k9.preferences.SettingsImportExportException from label49 to label50 with label51;
        catch java.lang.Exception from label45 to label47 with label58;
        catch java.lang.Exception from label48 to label50 with label58;
        catch java.lang.Exception from label52 to label53 with label54;
        catch com.fsck.k9.preferences.SettingsImportExportException from label56 to label57 with label51;
        catch java.lang.Exception from label55 to label57 with label58;
        catch java.lang.Exception from label59 to label60 with label54;
        catch com.fsck.k9.preferences.Settings$InvalidSettingValueException from label62 to label63 with label44;
        catch java.lang.Exception from label62 to label63 with label64;
        catch com.fsck.k9.preferences.SettingsImportExportException from label66 to label67 with label51;
        catch com.fsck.k9.preferences.SettingsImportExportException from label69 to label70 with label51;
        catch java.lang.Exception from label65 to label67 with label58;
        catch java.lang.Exception from label68 to label70 with label58;
        catch com.fsck.k9.preferences.Settings$InvalidSettingValueException from label72 to label73 with label44;
        catch com.fsck.k9.preferences.Settings$InvalidSettingValueException from label74 to label75 with label44;
        catch java.lang.Exception from label71 to label75 with label64;
        catch com.fsck.k9.preferences.SettingsImportExportException from label77 to label78 with label51;
        catch com.fsck.k9.preferences.SettingsImportExportException from label79 to label80 with label51;
        catch com.fsck.k9.preferences.SettingsImportExportException from label81 to label82 with label51;
        catch com.fsck.k9.preferences.SettingsImportExportException from label83 to label85 with label51;
        catch com.fsck.k9.preferences.SettingsImportExportException from label86 to label87 with label51;
        catch com.fsck.k9.preferences.SettingsImportExportException from label88 to label90 with label51;
        catch com.fsck.k9.preferences.SettingsImportExportException from label91 to label92 with label51;
        catch java.lang.Exception from label76 to label78 with label58;
        catch java.lang.Exception from label79 to label80 with label58;
        catch java.lang.Exception from label81 to label85 with label58;
        catch java.lang.Exception from label86 to label90 with label58;
        catch java.lang.Exception from label91 to label92 with label58;
    }
    private static boolean isAccountNameUsed(java.lang.String, java.util.List)
    {
        java.lang.String $r0, $r5;
        java.util.List r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.fsck.k9.Account r4;

        $r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.fsck.k9.Account) $r3;

        if r4 == null goto label1;

        $r5 = virtualinvoke r4.<com.fsck.k9.Account: java.lang.String getDescription()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        return 1;

     label2:
        return 0;
    }
    private static boolean isIdentityDescriptionUsed(java.lang.String, java.util.List)
    {
        java.lang.String $r0, $r5;
        java.util.List r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.fsck.k9.Identity r4;

        $r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.fsck.k9.Identity) $r3;

        $r5 = virtualinvoke r4.<com.fsck.k9.Identity: java.lang.String getDescription()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        return 1;

     label2:
        return 0;
    }
    private static com.fsck.k9.preferences.SettingsImporter$ImportedAccount parseAccount(org.xmlpull.v1.XmlPullParser, java.util.List, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser $r0;
        java.util.List r1;
        boolean $z0, $z1;
        java.lang.Exception r2;
        java.lang.String $r3, $r5, $r6;
        com.fsck.k9.preferences.SettingsImporter$ImportedAccount r4;
        int $i0;
        java.lang.Object[] $r7;
        com.fsck.k9.preferences.SettingsImporter$ImportedServer $r8;
        com.fsck.k9.preferences.SettingsImporter$ImportedSettings $r9;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.util.List;

        $z0 := @parameter2: boolean;

        $r3 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "uuid");

     label01:
        staticinvoke <java.util.UUID: java.util.UUID fromString(java.lang.String)>($r3);

     label02:
        r4 = new com.fsck.k9.preferences.SettingsImporter$ImportedAccount;

        specialinvoke r4.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: void <init>()>();

        r4.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: java.lang.String uuid> = $r3;

        if $z0 != 0 goto label03;

        $z1 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>($r3);

        if $z1 == 0 goto label18;

     label03:
        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

     label04:
        if $i0 != 3 goto label05;

        $r5 = "account";

        $r6 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label19;

     label05:
        if $i0 != 2 goto label06;

        $r5 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r6 = "name";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label08;

        $r5 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: java.lang.String getText(org.xmlpull.v1.XmlPullParser)>($r0);

        r4.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: java.lang.String name> = $r5;

     label06:
        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label04;

     label07:
        r2 := @caughtexception;

        staticinvoke <com.fsck.k9.preferences.SettingsImporter: void skipToEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r0, "account");

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = $r3;

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Skipping account with invalid UUID %s", $r7);

        return null;

     label08:
        $r6 = "incoming-server";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label10;

        if $z0 == 0 goto label09;

        staticinvoke <com.fsck.k9.preferences.SettingsImporter: void skipToEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r0, "incoming-server");

        goto label06;

     label09:
        $r8 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: com.fsck.k9.preferences.SettingsImporter$ImportedServer parseServerSettings(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r0, "incoming-server");

        r4.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: com.fsck.k9.preferences.SettingsImporter$ImportedServer incoming> = $r8;

        goto label06;

     label10:
        $r6 = "outgoing-server";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label12;

        if $z0 == 0 goto label11;

        staticinvoke <com.fsck.k9.preferences.SettingsImporter: void skipToEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r0, "outgoing-server");

        goto label06;

     label11:
        $r8 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: com.fsck.k9.preferences.SettingsImporter$ImportedServer parseServerSettings(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r0, "outgoing-server");

        r4.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: com.fsck.k9.preferences.SettingsImporter$ImportedServer outgoing> = $r8;

        goto label06;

     label12:
        $r6 = "settings";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label14;

        if $z0 == 0 goto label13;

        staticinvoke <com.fsck.k9.preferences.SettingsImporter: void skipToEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r0, "settings");

        goto label06;

     label13:
        $r9 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: com.fsck.k9.preferences.SettingsImporter$ImportedSettings parseSettings(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r0, "settings");

        r4.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: com.fsck.k9.preferences.SettingsImporter$ImportedSettings settings> = $r9;

        goto label06;

     label14:
        $r6 = "identities";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label15;

        r1 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: java.util.List parseIdentities(org.xmlpull.v1.XmlPullParser)>($r0);

        r4.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: java.util.List identities> = r1;

        goto label06;

     label15:
        $r6 = "folders";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label17;

        if $z0 == 0 goto label16;

        staticinvoke <com.fsck.k9.preferences.SettingsImporter: void skipToEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r0, "folders");

        goto label06;

     label16:
        r1 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: java.util.List parseFolders(org.xmlpull.v1.XmlPullParser)>($r0);

        r4.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: java.util.List folders> = r1;

        goto label06;

     label17:
        $r7 = newarray (java.lang.Object)[1];

        $r5 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r7[0] = $r5;

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Unexpected start tag: %s", $r7);

        goto label06;

     label18:
        staticinvoke <com.fsck.k9.preferences.SettingsImporter: void skipToEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r0, "account");

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = $r3;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Skipping account with UUID %s", $r7);

     label19:
        $r5 = r4.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: java.lang.String name>;

        if $r5 != null goto label20;

        r4.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: java.lang.String name> = $r3;

     label20:
        return r4;

        catch java.lang.Exception from label01 to label02 with label07;
    }
    private static java.util.Map parseAccounts(org.xmlpull.v1.XmlPullParser, java.util.List, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser $r0;
        java.util.List r1;
        boolean $z0, $z1;
        java.util.HashMap r2;
        int $i0;
        java.lang.String $r3, $r4;
        com.fsck.k9.preferences.SettingsImporter$ImportedAccount $r5;
        java.lang.Object[] $r6;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.util.List;

        $z0 := @parameter2: boolean;

        r2 = null;

        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

     label1:
        if $i0 != 3 goto label2;

        $r3 = "accounts";

        $r4 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label8;

     label2:
        if $i0 != 2 goto label4;

        $r3 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r4 = "account";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label7;

        if r2 != null goto label3;

        r2 = new java.util.HashMap;

        specialinvoke r2.<java.util.HashMap: void <init>()>();

     label3:
        $r5 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: com.fsck.k9.preferences.SettingsImporter$ImportedAccount parseAccount(org.xmlpull.v1.XmlPullParser,java.util.List,boolean)>($r0, r1, $z0);

        if $r5 != null goto label5;

     label4:
        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label1;

     label5:
        $r3 = $r5.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: java.lang.String uuid>;

        $z1 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

        if $z1 != 0 goto label6;

        $r3 = $r5.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: java.lang.String uuid>;

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        goto label4;

     label6:
        $r6 = newarray (java.lang.Object)[1];

        $r3 = $r5.<com.fsck.k9.preferences.SettingsImporter$ImportedAccount: java.lang.String uuid>;

        $r6[0] = $r3;

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Duplicate account entries with UUID %s. Ignoring!", $r6);

        goto label4;

     label7:
        $r6 = newarray (java.lang.Object)[1];

        $r3 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r6[0] = $r3;

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Unexpected start tag: %s", $r6);

        goto label4;

     label8:
        return r2;
    }
    private static com.fsck.k9.preferences.SettingsImporter$ImportedFolder parseFolder(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser $r0;
        com.fsck.k9.preferences.SettingsImporter$ImportedFolder r1;
        java.lang.String $r2;
        com.fsck.k9.preferences.SettingsImporter$ImportedSettings $r3;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 = new com.fsck.k9.preferences.SettingsImporter$ImportedFolder;

        specialinvoke r1.<com.fsck.k9.preferences.SettingsImporter$ImportedFolder: void <init>(com.fsck.k9.preferences.SettingsImporter$1)>(null);

        $r2 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        r1.<com.fsck.k9.preferences.SettingsImporter$ImportedFolder: java.lang.String name> = $r2;

        $r3 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: com.fsck.k9.preferences.SettingsImporter$ImportedSettings parseSettings(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r0, "folder");

        r1.<com.fsck.k9.preferences.SettingsImporter$ImportedFolder: com.fsck.k9.preferences.SettingsImporter$ImportedSettings settings> = $r3;

        return r1;
    }
    private static java.util.List parseFolders(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser $r0;
        java.util.ArrayList r1;
        int $i0;
        java.lang.String $r2, $r3;
        boolean $z0;
        com.fsck.k9.preferences.SettingsImporter$ImportedFolder $r4;
        java.lang.Object[] $r5;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 = null;

        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

     label1:
        if $i0 != 3 goto label2;

        $r2 = "folders";

        $r3 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label6;

     label2:
        if $i0 != 2 goto label4;

        $r2 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r3 = "folder";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label5;

        if r1 != null goto label3;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

     label3:
        $r4 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: com.fsck.k9.preferences.SettingsImporter$ImportedFolder parseFolder(org.xmlpull.v1.XmlPullParser)>($r0);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4);

     label4:
        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label1;

     label5:
        $r5 = newarray (java.lang.Object)[1];

        $r2 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r5[0] = $r2;

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Unexpected start tag: %s", $r5);

        goto label4;

     label6:
        return r1;
    }
    private static java.util.List parseIdentities(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser $r0;
        java.util.ArrayList r1;
        int $i0;
        java.lang.String $r2, $r3;
        boolean $z0;
        com.fsck.k9.preferences.SettingsImporter$ImportedIdentity $r4;
        java.lang.Object[] $r5;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 = null;

        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

     label1:
        if $i0 != 3 goto label2;

        $r2 = "identities";

        $r3 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label6;

     label2:
        if $i0 != 2 goto label4;

        $r2 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r3 = "identity";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label5;

        if r1 != null goto label3;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

     label3:
        $r4 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: com.fsck.k9.preferences.SettingsImporter$ImportedIdentity parseIdentity(org.xmlpull.v1.XmlPullParser)>($r0);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4);

     label4:
        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label1;

     label5:
        $r5 = newarray (java.lang.Object)[1];

        $r2 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r5[0] = $r2;

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Unexpected start tag: %s", $r5);

        goto label4;

     label6:
        return r1;
    }
    private static com.fsck.k9.preferences.SettingsImporter$ImportedIdentity parseIdentity(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser $r0;
        com.fsck.k9.preferences.SettingsImporter$ImportedIdentity r1;
        int $i0;
        java.lang.String $r2, $r3;
        boolean $z0;
        com.fsck.k9.preferences.SettingsImporter$ImportedSettings $r4;
        java.lang.Object[] $r5;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 = new com.fsck.k9.preferences.SettingsImporter$ImportedIdentity;

        specialinvoke r1.<com.fsck.k9.preferences.SettingsImporter$ImportedIdentity: void <init>()>();

        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

     label1:
        if $i0 != 3 goto label2;

        $r2 = "identity";

        $r3 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label8;

     label2:
        if $i0 != 2 goto label3;

        $r2 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r3 = "name";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label4;

        $r2 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: java.lang.String getText(org.xmlpull.v1.XmlPullParser)>($r0);

        r1.<com.fsck.k9.preferences.SettingsImporter$ImportedIdentity: java.lang.String name> = $r2;

     label3:
        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label1;

     label4:
        $r3 = "email";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label5;

        $r2 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: java.lang.String getText(org.xmlpull.v1.XmlPullParser)>($r0);

        r1.<com.fsck.k9.preferences.SettingsImporter$ImportedIdentity: java.lang.String email> = $r2;

        goto label3;

     label5:
        $r3 = "description";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label6;

        $r2 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: java.lang.String getText(org.xmlpull.v1.XmlPullParser)>($r0);

        r1.<com.fsck.k9.preferences.SettingsImporter$ImportedIdentity: java.lang.String description> = $r2;

        goto label3;

     label6:
        $r3 = "settings";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label7;

        $r4 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: com.fsck.k9.preferences.SettingsImporter$ImportedSettings parseSettings(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r0, "settings");

        r1.<com.fsck.k9.preferences.SettingsImporter$ImportedIdentity: com.fsck.k9.preferences.SettingsImporter$ImportedSettings settings> = $r4;

        goto label3;

     label7:
        $r5 = newarray (java.lang.Object)[1];

        $r2 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r5[0] = $r2;

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Unexpected start tag: %s", $r5);

        goto label3;

     label8:
        return r1;
    }
    private static com.fsck.k9.preferences.SettingsImporter$Imported parseRoot(org.xmlpull.v1.XmlPullParser, boolean, java.util.List, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException, com.fsck.k9.preferences.SettingsImportExportException
    {
        org.xmlpull.v1.XmlPullParser $r0;
        boolean $z0, $z1, $z2;
        java.util.List r1;
        com.fsck.k9.preferences.SettingsImporter$Imported r2;
        java.lang.String $r3, $r4;
        int $i0;
        com.fsck.k9.preferences.SettingsImporter$ImportedSettings $r5;
        java.lang.Object[] $r6;
        java.util.Map $r7;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $z0 := @parameter1: boolean;

        r1 := @parameter2: java.util.List;

        $z1 := @parameter3: boolean;

        r2 = new com.fsck.k9.preferences.SettingsImporter$Imported;

        specialinvoke r2.<com.fsck.k9.preferences.SettingsImporter$Imported: void <init>()>();

        $r3 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "format");

        staticinvoke <com.fsck.k9.preferences.SettingsImporter: int validateFileFormatVersion(java.lang.String)>($r3);

        $r3 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "version");

        $i0 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: int validateContentVersion(java.lang.String)>($r3);

        r2.<com.fsck.k9.preferences.SettingsImporter$Imported: int contentVersion> = $i0;

        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

     label01:
        if $i0 != 3 goto label02;

        $r3 = "k9settings";

        $r4 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z2 != 0 goto label11;

     label02:
        if $i0 != 2 goto label04;

        $r3 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r4 = "global";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z2 == 0 goto label08;

        if $z1 != 0 goto label03;

        if $z0 == 0 goto label07;

     label03:
        $r5 = r2.<com.fsck.k9.preferences.SettingsImporter$Imported: com.fsck.k9.preferences.SettingsImporter$ImportedSettings globalSettings>;

        if $r5 != null goto label06;

        if $z1 == 0 goto label05;

        $r5 = new com.fsck.k9.preferences.SettingsImporter$ImportedSettings;

        specialinvoke $r5.<com.fsck.k9.preferences.SettingsImporter$ImportedSettings: void <init>(com.fsck.k9.preferences.SettingsImporter$1)>(null);

        r2.<com.fsck.k9.preferences.SettingsImporter$Imported: com.fsck.k9.preferences.SettingsImporter$ImportedSettings globalSettings> = $r5;

        staticinvoke <com.fsck.k9.preferences.SettingsImporter: void skipToEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r0, "global");

     label04:
        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label01;

     label05:
        $r5 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: com.fsck.k9.preferences.SettingsImporter$ImportedSettings parseSettings(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r0, "global");

        r2.<com.fsck.k9.preferences.SettingsImporter$Imported: com.fsck.k9.preferences.SettingsImporter$ImportedSettings globalSettings> = $r5;

        goto label04;

     label06:
        staticinvoke <com.fsck.k9.preferences.SettingsImporter: void skipToEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r0, "global");

        $r6 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("More than one global settings element. Only using the first one!", $r6);

        goto label04;

     label07:
        staticinvoke <com.fsck.k9.preferences.SettingsImporter: void skipToEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r0, "global");

        $r6 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Skipping global settings", $r6);

        goto label04;

     label08:
        $r4 = "accounts";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z2 == 0 goto label10;

        $r7 = r2.<com.fsck.k9.preferences.SettingsImporter$Imported: java.util.Map accounts>;

        if $r7 != null goto label09;

        $r7 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: java.util.Map parseAccounts(org.xmlpull.v1.XmlPullParser,java.util.List,boolean)>($r0, r1, $z1);

        r2.<com.fsck.k9.preferences.SettingsImporter$Imported: java.util.Map accounts> = $r7;

        goto label04;

     label09:
        $r6 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("More than one accounts element. Only using the first one!", $r6);

        goto label04;

     label10:
        $r6 = newarray (java.lang.Object)[1];

        $r3 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r6[0] = $r3;

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Unexpected start tag: %s", $r6);

        goto label04;

     label11:
        return r2;
    }
    private static com.fsck.k9.preferences.SettingsImporter$ImportedServer parseServerSettings(org.xmlpull.v1.XmlPullParser, java.lang.String) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser $r0;
        java.lang.String $r1, $r3, $r4;
        com.fsck.k9.preferences.SettingsImporter$ImportedServer r2;
        int $i0;
        boolean $z0;
        com.fsck.k9.mail.AuthType $r5;
        com.fsck.k9.preferences.SettingsImporter$ImportedSettings $r6;
        java.lang.Object[] $r7;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r1 := @parameter1: java.lang.String;

        r2 = new com.fsck.k9.preferences.SettingsImporter$ImportedServer;

        specialinvoke r2.<com.fsck.k9.preferences.SettingsImporter$ImportedServer: void <init>()>();

        $r3 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "type");

        r2.<com.fsck.k9.preferences.SettingsImporter$ImportedServer: java.lang.String type> = $r3;

        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

     label01:
        if $i0 != 3 goto label02;

        $r3 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label12;

     label02:
        if $i0 != 2 goto label03;

        $r3 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r4 = "host";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label04;

        $r3 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: java.lang.String getText(org.xmlpull.v1.XmlPullParser)>($r0);

        r2.<com.fsck.k9.preferences.SettingsImporter$ImportedServer: java.lang.String host> = $r3;

     label03:
        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label01;

     label04:
        $r4 = "port";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label05;

        $r3 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: java.lang.String getText(org.xmlpull.v1.XmlPullParser)>($r0);

        r2.<com.fsck.k9.preferences.SettingsImporter$ImportedServer: java.lang.String port> = $r3;

        goto label03;

     label05:
        $r4 = "connection-security";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label06;

        $r3 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: java.lang.String getText(org.xmlpull.v1.XmlPullParser)>($r0);

        r2.<com.fsck.k9.preferences.SettingsImporter$ImportedServer: java.lang.String connectionSecurity> = $r3;

        goto label03;

     label06:
        $r4 = "authentication-type";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label07;

        $r3 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: java.lang.String getText(org.xmlpull.v1.XmlPullParser)>($r0);

        $r5 = staticinvoke <com.fsck.k9.mail.AuthType: com.fsck.k9.mail.AuthType valueOf(java.lang.String)>($r3);

        r2.<com.fsck.k9.preferences.SettingsImporter$ImportedServer: com.fsck.k9.mail.AuthType authenticationType> = $r5;

        goto label03;

     label07:
        $r4 = "username";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label08;

        $r3 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: java.lang.String getText(org.xmlpull.v1.XmlPullParser)>($r0);

        r2.<com.fsck.k9.preferences.SettingsImporter$ImportedServer: java.lang.String username> = $r3;

        goto label03;

     label08:
        $r4 = "client-cert-alias";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label09;

        $r3 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: java.lang.String getText(org.xmlpull.v1.XmlPullParser)>($r0);

        r2.<com.fsck.k9.preferences.SettingsImporter$ImportedServer: java.lang.String clientCertificateAlias> = $r3;

        goto label03;

     label09:
        $r4 = "password";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label10;

        $r3 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: java.lang.String getText(org.xmlpull.v1.XmlPullParser)>($r0);

        r2.<com.fsck.k9.preferences.SettingsImporter$ImportedServer: java.lang.String password> = $r3;

        goto label03;

     label10:
        $r4 = "extra";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label11;

        $r6 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: com.fsck.k9.preferences.SettingsImporter$ImportedSettings parseSettings(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r0, "extra");

        r2.<com.fsck.k9.preferences.SettingsImporter$ImportedServer: com.fsck.k9.preferences.SettingsImporter$ImportedSettings extras> = $r6;

        goto label03;

     label11:
        $r7 = newarray (java.lang.Object)[1];

        $r3 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r7[0] = $r3;

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Unexpected start tag: %s", $r7);

        goto label03;

     label12:
        return r2;
    }
    static com.fsck.k9.preferences.SettingsImporter$Imported parseSettings(java.io.InputStream, boolean, java.util.List, boolean) throws com.fsck.k9.preferences.SettingsImportExportException
    {
        java.io.InputStream $r0;
        boolean $z0, $z1, $z2;
        java.util.List r1;
        java.lang.Exception r2;
        java.io.InputStreamReader r3;
        java.lang.IllegalArgumentException $r4;
        org.xmlpull.v1.XmlPullParserFactory $r5;
        org.xmlpull.v1.XmlPullParser $r6;
        com.fsck.k9.preferences.SettingsImporter$Imported r7;
        int $i0;
        java.lang.String $r8, $r9;
        java.lang.Object[] $r10;
        com.fsck.k9.preferences.SettingsImportExportException $r11;
        com.fsck.k9.preferences.SettingsImporter$ImportedSettings $r12;
        java.util.Map $r13;

        $r0 := @parameter0: java.io.InputStream;

        $z0 := @parameter1: boolean;

        r1 := @parameter2: java.util.List;

        $z1 := @parameter3: boolean;

        if $z1 != 0 goto label01;

        if r1 != null goto label01;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Argument \'accountUuids\' must not be null.");

        throw $r4;

     label01:
        $r5 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        $r6 = virtualinvoke $r5.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

     label02:
        r3 = new java.io.InputStreamReader;

     label03:
        specialinvoke r3.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r0);

        interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>(r3);

     label04:
        r7 = null;

     label05:
        $i0 = interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label06:
        if $i0 == 1 goto label15;

        if $i0 != 2 goto label10;

        $r8 = "k9settings";

     label07:
        $r9 = interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

     label08:
        if $z2 == 0 goto label12;

     label09:
        r7 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: com.fsck.k9.preferences.SettingsImporter$Imported parseRoot(org.xmlpull.v1.XmlPullParser,boolean,java.util.List,boolean)>($r6, $z0, r1, $z1);

     label10:
        $i0 = interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: int next()>();

     label11:
        goto label06;

     label12:
        $r10 = newarray (java.lang.Object)[1];

        $r8 = interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r10[0] = $r8;

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Unexpected start tag: %s", $r10);

     label13:
        goto label10;

     label14:
        r2 := @caughtexception;

        $r11 = new com.fsck.k9.preferences.SettingsImportExportException;

        specialinvoke $r11.<com.fsck.k9.preferences.SettingsImportExportException: void <init>(java.lang.Throwable)>(r2);

        throw $r11;

     label15:
        if r7 == null goto label20;

        if $z1 == 0 goto label22;

     label16:
        $r12 = r7.<com.fsck.k9.preferences.SettingsImporter$Imported: com.fsck.k9.preferences.SettingsImporter$ImportedSettings globalSettings>;

     label17:
        if $r12 != null goto label22;

     label18:
        $r13 = r7.<com.fsck.k9.preferences.SettingsImporter$Imported: java.util.Map accounts>;

     label19:
        if $r13 != null goto label22;

     label20:
        $r11 = new com.fsck.k9.preferences.SettingsImportExportException;

     label21:
        specialinvoke $r11.<com.fsck.k9.preferences.SettingsImportExportException: void <init>(java.lang.String)>("Invalid import data");

        throw $r11;

     label22:
        return r7;

        catch java.lang.Exception from label01 to label02 with label14;
        catch java.lang.Exception from label03 to label04 with label14;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Exception from label07 to label08 with label14;
        catch java.lang.Exception from label09 to label10 with label14;
        catch java.lang.Exception from label10 to label11 with label14;
        catch java.lang.Exception from label12 to label13 with label14;
        catch java.lang.Exception from label16 to label17 with label14;
        catch java.lang.Exception from label18 to label19 with label14;
        catch java.lang.Exception from label21 to label22 with label14;
    }
    private static com.fsck.k9.preferences.SettingsImporter$ImportedSettings parseSettings(org.xmlpull.v1.XmlPullParser, java.lang.String) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser $r0;
        java.lang.String $r1, $r3, $r4;
        com.fsck.k9.preferences.SettingsImporter$ImportedSettings r2;
        int $i0;
        boolean $z0;
        java.util.Map $r5;
        java.lang.Object[] $r6;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r1 := @parameter1: java.lang.String;

        r2 = null;

        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

     label1:
        if $i0 != 3 goto label2;

        $r3 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label7;

     label2:
        if $i0 != 2 goto label4;

        $r3 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r4 = "value";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label6;

        $r3 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "key");

        $r4 = staticinvoke <com.fsck.k9.preferences.SettingsImporter: java.lang.String getText(org.xmlpull.v1.XmlPullParser)>($r0);

        if r2 != null goto label3;

        r2 = new com.fsck.k9.preferences.SettingsImporter$ImportedSettings;

        specialinvoke r2.<com.fsck.k9.preferences.SettingsImporter$ImportedSettings: void <init>(com.fsck.k9.preferences.SettingsImporter$1)>(null);

     label3:
        $r5 = r2.<com.fsck.k9.preferences.SettingsImporter$ImportedSettings: java.util.Map settings>;

        $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

        if $z0 == 0 goto label5;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = $r3;

        $r6[1] = $r4;

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Already read key \"%s\". Ignoring value \"%s\"", $r6);

     label4:
        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label1;

     label5:
        $r5 = r2.<com.fsck.k9.preferences.SettingsImporter$ImportedSettings: java.util.Map settings>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        goto label4;

     label6:
        $r6 = newarray (java.lang.Object)[1];

        $r3 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r6[0] = $r3;

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Unexpected start tag: %s", $r6);

        goto label4;

     label7:
        return r2;
    }
    private static void putString(com.fsck.k9.preferences.StorageEditor, java.lang.String, java.lang.String)
    {
        com.fsck.k9.preferences.StorageEditor $r0;
        java.lang.String $r1, $r2, r3;
        boolean $z0;
        java.lang.Object[] $r4;

        $r0 := @parameter0: com.fsck.k9.preferences.StorageEditor;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $z0 = staticinvoke <com.fsck.k9.K9: boolean isDebug()>();

        if $z0 == 0 goto label3;

        r3 = $r2;

        $z0 = <com.fsck.k9.K9: boolean DEBUG_SENSITIVE>;

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>(".transportUri");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>(".storeUri");

        if $z0 == 0 goto label2;

     label1:
        r3 = "*sensitive*";

     label2:
        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = $r1;

        $r4[1] = r3;

        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("Setting %s=%s", $r4);

     label3:
        virtualinvoke $r0.<com.fsck.k9.preferences.StorageEditor: com.fsck.k9.preferences.StorageEditor putString(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }
    private static void skipToEndTag(org.xmlpull.v1.XmlPullParser, java.lang.String) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser $r0;
        java.lang.String $r1, $r2;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r1 := @parameter1: java.lang.String;

        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

     label1:
        if $i0 != 3 goto label2;

        $r2 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label3;

     label2:
        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label1;

     label3:
        return;
    }
    private static int validateContentVersion(java.lang.String) throws com.fsck.k9.preferences.SettingsImportExportException
    {
        java.lang.String $r0;
        java.lang.NumberFormatException r1;
        com.fsck.k9.preferences.SettingsImportExportException $r2;
        int $i0;
        java.lang.StringBuilder $r3;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        $r2 = new com.fsck.k9.preferences.SettingsImportExportException;

        specialinvoke $r2.<com.fsck.k9.preferences.SettingsImportExportException: void <init>(java.lang.String)>("Missing content version");

        throw $r2;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

     label2:
        if $i0 >= 1 goto label4;

        $r2 = new com.fsck.k9.preferences.SettingsImportExportException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported content version: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.fsck.k9.preferences.SettingsImportExportException: void <init>(java.lang.String)>($r0);

        throw $r2;

     label3:
        r1 := @caughtexception;

        $r2 = new com.fsck.k9.preferences.SettingsImportExportException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid content version: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.fsck.k9.preferences.SettingsImportExportException: void <init>(java.lang.String)>($r0);

        throw $r2;

     label4:
        return $i0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }
    private static int validateFileFormatVersion(java.lang.String) throws com.fsck.k9.preferences.SettingsImportExportException
    {
        java.lang.String $r0;
        java.lang.NumberFormatException r1;
        com.fsck.k9.preferences.SettingsImportExportException $r2;
        int $i0;
        java.lang.StringBuilder $r3;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        $r2 = new com.fsck.k9.preferences.SettingsImportExportException;

        specialinvoke $r2.<com.fsck.k9.preferences.SettingsImportExportException: void <init>(java.lang.String)>("Missing file format version");

        throw $r2;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

     label2:
        if $i0 == 1 goto label4;

        $r2 = new com.fsck.k9.preferences.SettingsImportExportException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported file format version: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.fsck.k9.preferences.SettingsImportExportException: void <init>(java.lang.String)>($r0);

        throw $r2;

     label3:
        r1 := @caughtexception;

        $r2 = new com.fsck.k9.preferences.SettingsImportExportException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid file format version: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.fsck.k9.preferences.SettingsImportExportException: void <init>(java.lang.String)>($r0);

        throw $r2;

     label4:
        return $i0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }
