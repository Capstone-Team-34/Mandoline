com.fsck.k9.preferences.Settings extends java.lang.Object
public static final int VERSION
    public void <init>()
    {
        com.fsck.k9.preferences.Settings r0;

        r0 := @this: com.fsck.k9.preferences.Settings;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static java.util.Map convert(java.util.Map, java.util.Map)
    {
        java.util.Map r0, r1;
        java.util.HashMap r2;
        java.util.Set $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5, $r8;
        java.util.Map$Entry r6;
        java.lang.String r7, $r12;
        java.util.TreeMap r9;
        java.lang.Integer r10;
        com.fsck.k9.preferences.Settings$SettingsDescription r11;
        java.lang.Object[] $r13;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.util.Map;

        r2 = new java.util.HashMap;

        specialinvoke r2.<java.util.HashMap: void <init>()>();

        $r3 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        r7 = (java.lang.String) $r5;

        $r5 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        r9 = (java.util.TreeMap) $r8;

        $r8 = virtualinvoke r9.<java.util.TreeMap: java.lang.Object lastKey()>();

        r10 = (java.lang.Integer) $r8;

        $r8 = virtualinvoke r9.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>(r10);

        r11 = (com.fsck.k9.preferences.Settings$SettingsDescription) $r8;

        if r11 == null goto label2;

        $r12 = virtualinvoke r11.<com.fsck.k9.preferences.Settings$SettingsDescription: java.lang.String toString(java.lang.Object)>($r5);

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r12);

        goto label1;

     label2:
        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = r7;

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Settings.convert() called with a setting that should have been removed: %s", $r13);

        goto label1;

     label3:
        return r2;
    }
    public static java.util.Set upgrade(int, java.util.Map, java.util.Map, java.util.Map)
    {
        int $i0;
        java.util.Map r0, r1, r2;
        java.util.Set r3;
        java.lang.Integer $r4;
        boolean $z0;
        java.lang.Object $r5;
        com.fsck.k9.preferences.Settings$SettingsUpgrader r6;

        $i0 := @parameter0: int;

        r0 := @parameter1: java.util.Map;

        r1 := @parameter2: java.util.Map;

        r2 := @parameter3: java.util.Map;

        r3 = null;

        $i0 = $i0 + 1;

     label1:
        if $i0 > 48 goto label3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $z0 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r6 = (com.fsck.k9.preferences.Settings$SettingsUpgrader) $r5;

        r3 = interfaceinvoke r6.<com.fsck.k9.preferences.Settings$SettingsUpgrader: java.util.Set upgrade(java.util.Map)>(r2);

     label2:
        r3 = staticinvoke <com.fsck.k9.preferences.Settings: java.util.Set upgradeSettingsGeneric(java.util.Map,java.util.Map,java.util.Set,int)>(r1, r2, r3, $i0);

        $i0 = $i0 + 1;

        goto label1;

     label3:
        return r3;
    }
    private static void upgradeSettingInsertDefault(java.util.Map, java.lang.String, com.fsck.k9.preferences.Settings$SettingsDescription)
    {
        java.util.Map r0;
        java.lang.String $r1, $r4;
        com.fsck.k9.preferences.Settings$SettingsDescription r2;
        java.lang.Object $r3;
        boolean $z0;
        java.lang.Object[] $r5;

        r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.fsck.k9.preferences.Settings$SettingsDescription;

        $r3 = virtualinvoke r2.<com.fsck.k9.preferences.Settings$SettingsDescription: java.lang.Object getDefaultValue()>();

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        $z0 = staticinvoke <com.fsck.k9.K9: boolean isDebug()>();

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r2.<com.fsck.k9.preferences.Settings$SettingsDescription: java.lang.String toPrettyString(java.lang.Object)>($r3);

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = $r1;

        $r5[1] = $r4;

        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("Added new setting \"%s\" with default value \"%s\"", $r5);

     label1:
        return;
    }
    private static void upgradeSettingRemove(java.util.Map, java.util.Set, java.lang.String)
    {
        java.util.Map r0;
        java.util.Set r1;
        java.lang.String $r2;
        java.lang.Object[] $r3;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.util.Set;

        $r2 := @parameter2: java.lang.String;

        interfaceinvoke r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r2);

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r2);

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r2;

        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("Removed setting \"%s\"", $r3);

        return;
    }
    private static java.util.Set upgradeSettingsGeneric(java.util.Map, java.util.Map, java.util.Set, int)
    {
        java.util.Map r0, r1;
        int $i0, $i1;
        java.util.Set r2, $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.util.Map$Entry r6;
        java.lang.String r7;
        java.util.TreeMap r8;
        java.lang.Integer $r9;
        com.fsck.k9.preferences.Settings$SettingsDescription r10;
        java.lang.AssertionError $r11;
        java.util.HashSet $r12;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.util.Map;

        r2 := @parameter2: java.util.Set;

        $i0 := @parameter3: int;

        $r3 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        r7 = (java.lang.String) $r5;

        $r5 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        r8 = (java.util.TreeMap) $r5;

        $r5 = virtualinvoke r8.<java.util.TreeMap: java.lang.Object firstKey()>();

        $r9 = (java.lang.Integer) $r5;

        $i1 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        if $i1 != $i0 goto label3;

        $z0 = 1;

     label2:
        if $z0 == 0 goto label5;

        $z0 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r7);

        if $z0 != 0 goto label1;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = virtualinvoke r8.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r9);

        r10 = (com.fsck.k9.preferences.Settings$SettingsDescription) $r5;

        if r10 != null goto label4;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>(java.lang.Object)>("First version of a setting must be non-null!");

        throw $r11;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        staticinvoke <com.fsck.k9.preferences.Settings: void upgradeSettingInsertDefault(java.util.Map,java.lang.String,com.fsck.k9.preferences.Settings$SettingsDescription)>(r1, r7, r10);

     label5:
        $r5 = virtualinvoke r8.<java.util.TreeMap: java.lang.Object lastKey()>();

        $r9 = (java.lang.Integer) $r5;

        $i1 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        if $i1 != $i0 goto label8;

        $r5 = virtualinvoke r8.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r9);

        if $r5 != null goto label8;

        $z0 = 1;

     label6:
        if $z0 == 0 goto label1;

        if r2 != null goto label7;

        $r12 = new java.util.HashSet;

        r2 = $r12;

        specialinvoke $r12.<java.util.HashSet: void <init>()>();

     label7:
        staticinvoke <com.fsck.k9.preferences.Settings: void upgradeSettingRemove(java.util.Map,java.util.Set,java.lang.String)>(r1, r2, r7);

        goto label1;

     label8:
        $z0 = 0;

        goto label6;

     label9:
        return r2;
    }
    static java.util.Map validate(int, java.util.Map, java.util.Map, boolean)
    {
        int $i0, $i1;
        java.util.Map r0, r1;
        boolean $z0, $z1;
        com.fsck.k9.preferences.Settings$InvalidSettingValueException r2;
        java.util.HashMap r3;
        java.util.Set $r4;
        java.util.Iterator $r5;
        java.lang.Object $r6;
        java.util.Map$Entry r7;
        java.util.TreeMap r8;
        java.lang.Integer $r9;
        java.util.SortedMap $r10;
        com.fsck.k9.preferences.Settings$SettingsDescription r11;
        java.lang.String r12, $r14;
        java.lang.Object[] $r13;

        $i0 := @parameter0: int;

        r0 := @parameter1: java.util.Map;

        r1 := @parameter2: java.util.Map;

        $z0 := @parameter3: boolean;

        r3 = new java.util.HashMap;

        specialinvoke r3.<java.util.HashMap: void <init>()>();

        $r4 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        r8 = (java.util.TreeMap) $r6;

        $i1 = $i0 + 1;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r10 = virtualinvoke r8.<java.util.TreeMap: java.util.SortedMap headMap(java.lang.Object)>($r9);

        $z1 = interfaceinvoke $r10.<java.util.SortedMap: boolean isEmpty()>();

        if $z1 != 0 goto label01;

        $r6 = interfaceinvoke $r10.<java.util.SortedMap: java.lang.Object lastKey()>();

        $r9 = (java.lang.Integer) $r6;

        $r6 = virtualinvoke r8.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r9);

        r11 = (com.fsck.k9.preferences.Settings$SettingsDescription) $r6;

        if r11 == null goto label01;

        $r6 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        r12 = (java.lang.String) $r6;

        $z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r12);

        if $z1 != 0 goto label05;

        $r13 = newarray (java.lang.Object)[2];

        $r13[0] = r12;

        if $z0 == 0 goto label04;

        $r14 = " Using default value.";

     label02:
        $r13[1] = $r14;

        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("Key \"%s\" wasn\'t found in the imported file.%s", $r13);

        $z1 = $z0;

     label03:
        if $z1 == 0 goto label01;

        $r6 = virtualinvoke r11.<com.fsck.k9.preferences.Settings$SettingsDescription: java.lang.Object getDefaultValue()>();

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r12, $r6);

        goto label01;

     label04:
        $r14 = "";

        goto label02;

     label05:
        $r6 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r12);

        $r14 = (java.lang.String) $r6;

     label06:
        $r6 = virtualinvoke r11.<com.fsck.k9.preferences.Settings$SettingsDescription: java.lang.Object fromPrettyString(java.lang.String)>($r14);

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r12, $r6);

     label07:
        $z1 = 0;

        goto label03;

     label08:
        r2 := @caughtexception;

        $r13 = newarray (java.lang.Object)[3];

        $r13[0] = r12;

        $r13[1] = $r14;

        if $z0 == 0 goto label10;

        $r14 = "Using default value.";

     label09:
        $r13[2] = $r14;

        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("Key \"%s\" has invalid value \"%s\" in imported file. %s", $r13);

        $z1 = $z0;

        goto label03;

     label10:
        $r14 = "Skipping.";

        goto label09;

     label11:
        return r3;

        catch com.fsck.k9.preferences.Settings$InvalidSettingValueException from label06 to label07 with label08;
    }
    static transient java.util.TreeMap versions(com.fsck.k9.preferences.Settings$V[])
    {
        com.fsck.k9.preferences.Settings$V[] $r0;
        java.util.TreeMap r1;
        com.fsck.k9.preferences.Settings$V r2;
        int $i0, $i1;
        java.lang.Integer $r3;
        com.fsck.k9.preferences.Settings$SettingsDescription $r4;

        $r0 := @parameter0: com.fsck.k9.preferences.Settings$V[];

        r1 = new java.util.TreeMap;

        specialinvoke r1.<java.util.TreeMap: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        r2 = $r0[$i1];

        $r3 = r2.<com.fsck.k9.preferences.Settings$V: java.lang.Integer version>;

        $r4 = r2.<com.fsck.k9.preferences.Settings$V: com.fsck.k9.preferences.Settings$SettingsDescription description>;

        virtualinvoke r1.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return r1;
    }
