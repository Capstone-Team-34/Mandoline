com.fsck.k9.preferences.SettingsExporter extends java.lang.Object
static final java.lang.String ACCOUNTS_ELEMENT
static final java.lang.String ACCOUNT_ELEMENT
static final java.lang.String AUTHENTICATION_TYPE_ELEMENT
static final java.lang.String CLIENT_CERTIFICATE_ALIAS_ELEMENT
static final java.lang.String CONNECTION_SECURITY_ELEMENT
static final java.lang.String DESCRIPTION_ELEMENT
static final java.lang.String EMAIL_ELEMENT
public static final java.lang.String EXPORT_FILENAME_PREFIX
public static final java.lang.String EXPORT_FILENAME_SUFFIX
static final java.lang.String EXTRA_ELEMENT
static final java.lang.String FILE_FORMAT_ATTRIBUTE
static final int FILE_FORMAT_VERSION
static final java.lang.String FOLDERS_ELEMENT
static final java.lang.String FOLDER_ELEMENT
static final java.lang.String GLOBAL_ELEMENT
static final java.lang.String HOST_ELEMENT
static final java.lang.String IDENTITIES_ELEMENT
static final java.lang.String IDENTITY_ELEMENT
static final java.lang.String INCOMING_SERVER_ELEMENT
static final java.lang.String KEY_ATTRIBUTE
static final java.lang.String NAME_ATTRIBUTE
static final java.lang.String NAME_ELEMENT
static final java.lang.String OUTGOING_SERVER_ELEMENT
static final java.lang.String PASSWORD_ELEMENT
static final java.lang.String PORT_ELEMENT
static final java.lang.String ROOT_ELEMENT
static final java.lang.String SETTINGS_ELEMENT
static final java.lang.String TYPE_ATTRIBUTE
static final java.lang.String USERNAME_ELEMENT
static final java.lang.String UUID_ATTRIBUTE
static final java.lang.String VALUE_ELEMENT
static final java.lang.String VERSION_ATTRIBUTE
    public void <init>()
    {
        com.fsck.k9.preferences.SettingsExporter r0;

        r0 := @this: com.fsck.k9.preferences.SettingsExporter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private static void closeOrThrow(java.io.OutputStream) throws com.fsck.k9.preferences.SettingsImportExportException
    {
        java.io.OutputStream $r0;
        java.io.IOException r1;
        com.fsck.k9.preferences.SettingsImportExportException $r2;

        $r0 := @parameter0: java.io.OutputStream;

        if $r0 != null goto label1;

        return;

     label1:
        virtualinvoke $r0.<java.io.OutputStream: void close()>();

     label2:
        return;

     label3:
        r1 := @caughtexception;

        $r2 = new com.fsck.k9.preferences.SettingsImportExportException;

        specialinvoke $r2.<com.fsck.k9.preferences.SettingsImportExportException: void <init>(java.lang.Throwable)>(r1);

        throw $r2;

        catch java.io.IOException from label1 to label2 with label3;
    }
    static void exportPreferences(android.content.Context, java.io.OutputStream, boolean, java.util.Set) throws com.fsck.k9.preferences.SettingsImportExportException
    {
        android.content.Context $r0;
        java.io.OutputStream $r1;
        boolean $z0, $z1;
        java.util.Set r2;
        java.lang.Exception r3;
        org.xmlpull.v1.XmlSerializer $r5;
        java.lang.Boolean $r6;
        java.lang.String $r7;
        java.lang.Object[] $r8;
        com.fsck.k9.Preferences $r9;
        com.fsck.k9.preferences.Storage $r10;
        java.util.List $r11;
        java.util.Iterator $r12;
        java.lang.Object $r13;
        com.fsck.k9.Account r14;
        java.util.Map $r15;
        java.util.HashSet $r16;
        com.fsck.k9.preferences.SettingsImportExportException $r17;
        java.util.TreeMap $r18;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.io.OutputStream;

        $z0 := @parameter2: boolean;

        r2 := @parameter3: java.util.Set;

     label01:
        $r5 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlSerializer newSerializer()>();

        interfaceinvoke $r5.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>($r1, "UTF-8");

     label02:
        $r6 = <java.lang.Boolean: java.lang.Boolean TRUE>;

     label03:
        interfaceinvoke $r5.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r6);

        interfaceinvoke $r5.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        interfaceinvoke $r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "k9settings");

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(48);

        interfaceinvoke $r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "version", $r7);

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(1);

        interfaceinvoke $r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "format", $r7);

        $r8 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Exporting preferences", $r8);

        $r9 = staticinvoke <com.fsck.k9.Preferences: com.fsck.k9.Preferences getPreferences(android.content.Context)>($r0);

        $r10 = virtualinvoke $r9.<com.fsck.k9.Preferences: com.fsck.k9.preferences.Storage getStorage()>();

     label04:
        if r2 != null goto label13;

     label05:
        $r11 = virtualinvoke $r9.<com.fsck.k9.Preferences: java.util.List getAccounts()>();

     label06:
        $r16 = new java.util.HashSet;

        r2 = $r16;

     label07:
        specialinvoke $r16.<java.util.HashSet: void <init>()>();

        $r12 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

     label09:
        if $z1 == 0 goto label13;

     label10:
        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (com.fsck.k9.Account) $r13;

        $r7 = virtualinvoke r14.<com.fsck.k9.Account: java.lang.String getUuid()>();

        interfaceinvoke $r16.<java.util.Set: boolean add(java.lang.Object)>($r7);

     label11:
        goto label08;

     label12:
        r3 := @caughtexception;

        $r17 = new com.fsck.k9.preferences.SettingsImportExportException;

        $r7 = virtualinvoke r3.<java.lang.Exception: java.lang.String getLocalizedMessage()>();

        specialinvoke $r17.<com.fsck.k9.preferences.SettingsImportExportException: void <init>(java.lang.String,java.lang.Throwable)>($r7, r3);

        throw $r17;

     label13:
        $r18 = new java.util.TreeMap;

     label14:
        $r15 = virtualinvoke $r10.<com.fsck.k9.preferences.Storage: java.util.Map getAll()>();

        specialinvoke $r18.<java.util.TreeMap: void <init>(java.util.Map)>($r15);

     label15:
        if $z0 == 0 goto label17;

     label16:
        interfaceinvoke $r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "global");

        staticinvoke <com.fsck.k9.preferences.SettingsExporter: void writeSettings(org.xmlpull.v1.XmlSerializer,java.util.Map)>($r5, $r18);

        interfaceinvoke $r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "global");

     label17:
        interfaceinvoke $r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "accounts");

        $r12 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label18:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

     label19:
        if $z0 == 0 goto label22;

     label20:
        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.String) $r13;

        r14 = virtualinvoke $r9.<com.fsck.k9.Preferences: com.fsck.k9.Account getAccount(java.lang.String)>($r7);

        staticinvoke <com.fsck.k9.preferences.SettingsExporter: void writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)>($r5, r14, $r18);

     label21:
        goto label18;

     label22:
        interfaceinvoke $r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "accounts");

        interfaceinvoke $r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "k9settings");

        interfaceinvoke $r5.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        interfaceinvoke $r5.<org.xmlpull.v1.XmlSerializer: void flush()>();

     label23:
        return;

        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label03 to label04 with label12;
        catch java.lang.Exception from label05 to label06 with label12;
        catch java.lang.Exception from label07 to label09 with label12;
        catch java.lang.Exception from label10 to label11 with label12;
        catch java.lang.Exception from label14 to label15 with label12;
        catch java.lang.Exception from label16 to label19 with label12;
        catch java.lang.Exception from label20 to label21 with label12;
        catch java.lang.Exception from label22 to label23 with label12;
    }
    public static java.lang.String exportToFile(android.content.Context, boolean, java.util.Set) throws com.fsck.k9.preferences.SettingsImportExportException
    {
        android.content.Context $r0;
        boolean $z0, $z1;
        java.util.Set r1;
        java.io.File r2, $r6;
        java.io.FileOutputStream r3, r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r7;
        java.lang.Object[] $r8;
        java.lang.Exception r9;
        com.fsck.k9.preferences.SettingsImportExportException $r10;
        java.lang.Throwable $r11;

        $r0 := @parameter0: android.content.Context;

        $z0 := @parameter1: boolean;

        r1 := @parameter2: java.util.Set;

        r4 = null;

     label01:
        r2 = new java.io.File;

        $r5 = new java.lang.StringBuilder;

     label02:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

     label03:
        $r7 = <java.io.File: java.lang.String separator>;

     label04:
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r7);

        $z1 = virtualinvoke r2.<java.io.File: boolean mkdirs()>();

     label05:
        if $z1 != 0 goto label09;

     label06:
        $r8 = newarray (java.lang.Object)[1];

        $r7 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

     label07:
        $r8[0] = $r7;

     label08:
        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Unable to create directory: %s", $r8);

     label09:
        $r7 = staticinvoke <com.fsck.k9.preferences.SettingsExporter: java.lang.String generateDatedExportFileName()>();

        r2 = staticinvoke <com.fsck.k9.helper.FileHelper: java.io.File createUniqueFile(java.io.File,java.lang.String)>(r2, $r7);

        $r7 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

     label10:
        r3 = new java.io.FileOutputStream;

     label11:
        specialinvoke r3.<java.io.FileOutputStream: void <init>(java.lang.String)>($r7);

     label12:
        staticinvoke <com.fsck.k9.preferences.SettingsExporter: void exportPreferences(android.content.Context,java.io.OutputStream,boolean,java.util.Set)>($r0, r3, $z0, r1);

     label13:
        staticinvoke <com.fsck.k9.preferences.SettingsExporter: void closeOrThrow(java.io.OutputStream)>(r3);

        return $r7;

     label14:
        r9 := @caughtexception;

     label15:
        $r10 = new com.fsck.k9.preferences.SettingsImportExportException;

        specialinvoke $r10.<com.fsck.k9.preferences.SettingsImportExportException: void <init>(java.lang.Throwable)>(r9);

        throw $r10;

     label16:
        $r11 := @caughtexception;

     label17:
        staticinvoke <com.fsck.k9.preferences.SettingsExporter: void closeOrThrow(java.io.OutputStream)>(r4);

        throw $r11;

     label18:
        $r11 := @caughtexception;

        r4 = r3;

        goto label17;

     label19:
        r9 := @caughtexception;

        r4 = r3;

        goto label15;

        catch java.lang.Exception from label02 to label03 with label14;
        catch java.lang.Exception from label04 to label05 with label14;
        catch java.lang.Exception from label06 to label10 with label14;
        catch java.lang.Exception from label11 to label12 with label14;
        catch java.lang.Throwable from label01 to label05 with label16;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label08 to label12 with label16;
        catch java.lang.Exception from label12 to label13 with label19;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label15 to label16 with label16;
    }
    public static void exportToUri(android.content.Context, boolean, java.util.Set, android.net.Uri) throws com.fsck.k9.preferences.SettingsImportExportException
    {
        android.content.Context $r0;
        boolean $z0;
        java.util.Set r1;
        android.net.Uri $r2;
        java.lang.Exception r3;
        java.io.OutputStream r4, $r6;
        android.content.ContentResolver $r5;
        com.fsck.k9.preferences.SettingsImportExportException $r7;
        java.lang.Throwable $r8;

        $r0 := @parameter0: android.content.Context;

        $z0 := @parameter1: boolean;

        r1 := @parameter2: java.util.Set;

        $r2 := @parameter3: android.net.Uri;

        r4 = null;

     label1:
        $r5 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r6 = virtualinvoke $r5.<android.content.ContentResolver: java.io.OutputStream openOutputStream(android.net.Uri)>($r2);

     label2:
        r4 = $r6;

     label3:
        staticinvoke <com.fsck.k9.preferences.SettingsExporter: void exportPreferences(android.content.Context,java.io.OutputStream,boolean,java.util.Set)>($r0, $r6, $z0, r1);

     label4:
        staticinvoke <com.fsck.k9.preferences.SettingsExporter: void closeOrThrow(java.io.OutputStream)>($r6);

        return;

     label5:
        r3 := @caughtexception;

     label6:
        $r7 = new com.fsck.k9.preferences.SettingsImportExportException;

        specialinvoke $r7.<com.fsck.k9.preferences.SettingsImportExportException: void <init>(java.lang.Throwable)>(r3);

        throw $r7;

     label7:
        $r8 := @caughtexception;

        staticinvoke <com.fsck.k9.preferences.SettingsExporter: void closeOrThrow(java.io.OutputStream)>(r4);

        throw $r8;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
    }
    public static java.lang.String generateDatedExportFileName()
    {
        java.text.SimpleDateFormat r0;
        java.util.Calendar $r1;
        java.lang.Object[] $r2;
        java.util.Date $r3;
        java.lang.String $r4;

        $r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        r0 = new java.text.SimpleDateFormat;

        specialinvoke r0.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd");

        $r2 = newarray (java.lang.Object)[3];

        $r2[0] = "k9_settings_export";

        $r3 = virtualinvoke $r1.<java.util.Calendar: java.util.Date getTime()>();

        $r4 = virtualinvoke r0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r3);

        $r2[1] = $r4;

        $r2[2] = "k9s";

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s_%s.%s", $r2);

        return $r4;
    }
    private static void writeAccount(org.xmlpull.v1.XmlSerializer, com.fsck.k9.Account, java.util.Map) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer $r0;
        com.fsck.k9.Account $r1;
        java.util.Map r2, $r17;
        com.fsck.k9.preferences.Settings$InvalidSettingValueException r3;
        java.util.HashSet r4, r5;
        java.lang.String r6, r7, $r9, $r11, $r22, $r23;
        java.util.ArrayList r8;
        java.lang.StringBuilder $r10;
        java.lang.Object $r12;
        com.fsck.k9.mail.ServerSettings $r13;
        com.fsck.k9.mail.ServerSettings$Type $r14;
        int $i0, $i1;
        com.fsck.k9.mail.ConnectionSecurity $r15;
        com.fsck.k9.mail.AuthType $r16;
        java.util.Set $r18;
        java.util.Iterator $r19;
        boolean $z0;
        java.util.Map$Entry r20;
        java.lang.String[] $r21;
        java.lang.Integer $r24;
        java.lang.NumberFormatException $r25;
        java.util.TreeMap r26;
        com.fsck.k9.preferences.Settings$SettingsDescription r27;
        java.lang.Object[] $r28;

        $r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r1 := @parameter1: com.fsck.k9.Account;

        r2 := @parameter2: java.util.Map;

        r5 = new java.util.HashSet;

        specialinvoke r5.<java.util.HashSet: void <init>()>();

        r4 = new java.util.HashSet;

        specialinvoke r4.<java.util.HashSet: void <init>()>();

        $r9 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getUuid()>();

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "account");

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "uuid", $r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("description");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

        $r11 = (java.lang.String) $r12;

        if $r11 == null goto label01;

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "name");

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r11);

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "name");

     label01:
        $r11 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getStoreUri()>();

        $r13 = staticinvoke <com.fsck.k9.mail.store.RemoteStore: com.fsck.k9.mail.ServerSettings decodeStoreUri(java.lang.String)>($r11);

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "incoming-server");

        $r14 = $r13.<com.fsck.k9.mail.ServerSettings: com.fsck.k9.mail.ServerSettings$Type type>;

        $r11 = virtualinvoke $r14.<com.fsck.k9.mail.ServerSettings$Type: java.lang.String name()>();

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", $r11);

        $r11 = $r13.<com.fsck.k9.mail.ServerSettings: java.lang.String host>;

        staticinvoke <com.fsck.k9.preferences.SettingsExporter: void writeElement(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String)>($r0, "host", $r11);

        $i0 = $r13.<com.fsck.k9.mail.ServerSettings: int port>;

        if $i0 == -1 goto label02;

        $i0 = $r13.<com.fsck.k9.mail.ServerSettings: int port>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        staticinvoke <com.fsck.k9.preferences.SettingsExporter: void writeElement(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String)>($r0, "port", $r11);

     label02:
        $r15 = $r13.<com.fsck.k9.mail.ServerSettings: com.fsck.k9.mail.ConnectionSecurity connectionSecurity>;

        if $r15 == null goto label03;

        $r15 = $r13.<com.fsck.k9.mail.ServerSettings: com.fsck.k9.mail.ConnectionSecurity connectionSecurity>;

        $r11 = virtualinvoke $r15.<com.fsck.k9.mail.ConnectionSecurity: java.lang.String name()>();

        staticinvoke <com.fsck.k9.preferences.SettingsExporter: void writeElement(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String)>($r0, "connection-security", $r11);

     label03:
        $r16 = $r13.<com.fsck.k9.mail.ServerSettings: com.fsck.k9.mail.AuthType authenticationType>;

        if $r16 == null goto label04;

        $r16 = $r13.<com.fsck.k9.mail.ServerSettings: com.fsck.k9.mail.AuthType authenticationType>;

        $r11 = virtualinvoke $r16.<com.fsck.k9.mail.AuthType: java.lang.String name()>();

        staticinvoke <com.fsck.k9.preferences.SettingsExporter: void writeElement(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String)>($r0, "authentication-type", $r11);

     label04:
        $r11 = $r13.<com.fsck.k9.mail.ServerSettings: java.lang.String username>;

        staticinvoke <com.fsck.k9.preferences.SettingsExporter: void writeElement(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String)>($r0, "username", $r11);

        $r11 = $r13.<com.fsck.k9.mail.ServerSettings: java.lang.String clientCertificateAlias>;

        staticinvoke <com.fsck.k9.preferences.SettingsExporter: void writeElement(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String)>($r0, "client-cert-alias", $r11);

        $r17 = virtualinvoke $r13.<com.fsck.k9.mail.ServerSettings: java.util.Map getExtra()>();

        if $r17 == null goto label07;

        $i0 = interfaceinvoke $r17.<java.util.Map: int size()>();

        if $i0 <= 0 goto label07;

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "extra");

        $r18 = interfaceinvoke $r17.<java.util.Map: java.util.Set entrySet()>();

        $r19 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r12 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.util.Map$Entry) $r12;

        $r12 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = (java.lang.String) $r12;

        $r12 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getValue()>();

        r6 = (java.lang.String) $r12;

        staticinvoke <com.fsck.k9.preferences.SettingsExporter: void writeKeyAndPrettyValueFromSetting(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String)>($r0, $r11, r6);

        goto label05;

     label06:
        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "extra");

     label07:
        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "incoming-server");

        $r11 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getTransportUri()>();

        $r13 = staticinvoke <com.fsck.k9.mail.TransportUris: com.fsck.k9.mail.ServerSettings decodeTransportUri(java.lang.String)>($r11);

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "outgoing-server");

        $r14 = $r13.<com.fsck.k9.mail.ServerSettings: com.fsck.k9.mail.ServerSettings$Type type>;

        $r11 = virtualinvoke $r14.<com.fsck.k9.mail.ServerSettings$Type: java.lang.String name()>();

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", $r11);

        $r11 = $r13.<com.fsck.k9.mail.ServerSettings: java.lang.String host>;

        staticinvoke <com.fsck.k9.preferences.SettingsExporter: void writeElement(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String)>($r0, "host", $r11);

        $i0 = $r13.<com.fsck.k9.mail.ServerSettings: int port>;

        if $i0 == -1 goto label08;

        $i0 = $r13.<com.fsck.k9.mail.ServerSettings: int port>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        staticinvoke <com.fsck.k9.preferences.SettingsExporter: void writeElement(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String)>($r0, "port", $r11);

     label08:
        $r15 = $r13.<com.fsck.k9.mail.ServerSettings: com.fsck.k9.mail.ConnectionSecurity connectionSecurity>;

        if $r15 == null goto label09;

        $r15 = $r13.<com.fsck.k9.mail.ServerSettings: com.fsck.k9.mail.ConnectionSecurity connectionSecurity>;

        $r11 = virtualinvoke $r15.<com.fsck.k9.mail.ConnectionSecurity: java.lang.String name()>();

        staticinvoke <com.fsck.k9.preferences.SettingsExporter: void writeElement(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String)>($r0, "connection-security", $r11);

     label09:
        $r16 = $r13.<com.fsck.k9.mail.ServerSettings: com.fsck.k9.mail.AuthType authenticationType>;

        if $r16 == null goto label10;

        $r16 = $r13.<com.fsck.k9.mail.ServerSettings: com.fsck.k9.mail.AuthType authenticationType>;

        $r11 = virtualinvoke $r16.<com.fsck.k9.mail.AuthType: java.lang.String name()>();

        staticinvoke <com.fsck.k9.preferences.SettingsExporter: void writeElement(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String)>($r0, "authentication-type", $r11);

     label10:
        $r11 = $r13.<com.fsck.k9.mail.ServerSettings: java.lang.String username>;

        staticinvoke <com.fsck.k9.preferences.SettingsExporter: void writeElement(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String)>($r0, "username", $r11);

        $r11 = $r13.<com.fsck.k9.mail.ServerSettings: java.lang.String clientCertificateAlias>;

        staticinvoke <com.fsck.k9.preferences.SettingsExporter: void writeElement(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String)>($r0, "client-cert-alias", $r11);

        $r17 = virtualinvoke $r13.<com.fsck.k9.mail.ServerSettings: java.util.Map getExtra()>();

        if $r17 == null goto label13;

        $i0 = interfaceinvoke $r17.<java.util.Map: int size()>();

        if $i0 <= 0 goto label13;

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "extra");

        $r18 = interfaceinvoke $r17.<java.util.Map: java.util.Set entrySet()>();

        $r19 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();

     label11:
        $z0 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r12 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.util.Map$Entry) $r12;

        $r12 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = (java.lang.String) $r12;

        $r12 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getValue()>();

        r6 = (java.lang.String) $r12;

        staticinvoke <com.fsck.k9.preferences.SettingsExporter: void writeKeyAndPrettyValueFromSetting(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String)>($r0, $r11, r6);

        goto label11;

     label12:
        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "extra");

     label13:
        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "outgoing-server");

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "settings");

        $r18 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        $r19 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();

     label14:
        $z0 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label25;

        $r12 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.util.Map$Entry) $r12;

        $r12 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getKey()>();

        r6 = (java.lang.String) $r12;

        $r12 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

        $r21 = virtualinvoke r6.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("\\.", 2);

        $i0 = lengthof $r21;

        if $i0 < 2 goto label14;

        r7 = $r21[0];

        r6 = $r21[1];

        $z0 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label14;

        $i0 = virtualinvoke r6.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        if $i0 == -1 goto label19;

        $i1 = virtualinvoke r6.<java.lang.String: int length()>();

        $i1 = $i1 + -1;

        if $i0 >= $i1 goto label19;

        $z0 = 1;

     label15:
        if $z0 == 0 goto label21;

        r7 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i0 = $i0 + 1;

        $r22 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>($i0);

        $r23 = "description";

        $z0 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z0 == 0 goto label20;

     label16:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r22);

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>($r24);

     label17:
        goto label14;

     label18:
        $r25 := @caughtexception;

        goto label14;

     label19:
        $z0 = 0;

        goto label15;

     label20:
        $r17 = <com.fsck.k9.preferences.FolderSettings: java.util.Map SETTINGS>;

        $z0 = interfaceinvoke $r17.<java.util.Map: boolean containsKey(java.lang.Object)>($r22);

        if $z0 == 0 goto label21;

        interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>(r7);

        goto label14;

     label21:
        $r17 = <com.fsck.k9.preferences.AccountSettings: java.util.Map SETTINGS>;

        $r12 = interfaceinvoke $r17.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        r26 = (java.util.TreeMap) $r12;

        if r26 == null goto label14;

        $r12 = virtualinvoke r26.<java.util.TreeMap: java.lang.Object lastKey()>();

        $r24 = (java.lang.Integer) $r12;

        $r12 = virtualinvoke r26.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r24);

        r27 = (com.fsck.k9.preferences.Settings$SettingsDescription) $r12;

        if r27 == null goto label14;

     label22:
        staticinvoke <com.fsck.k9.preferences.SettingsExporter: void writeKeyAndPrettyValueFromSetting(org.xmlpull.v1.XmlSerializer,java.lang.String,com.fsck.k9.preferences.Settings$SettingsDescription,java.lang.String)>($r0, r6, r27, $r11);

     label23:
        goto label14;

     label24:
        r3 := @caughtexception;

        $r28 = newarray (java.lang.Object)[3];

        $r28[0] = r6;

        r6 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getDescription()>();

        $r28[1] = r6;

        $r28[2] = $r11;

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Account setting \"%s\" (%s) has invalid value \"%s\" in preference storage. This shouldn\'t happen!", $r28);

        goto label14;

     label25:
        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "settings");

        $i0 = interfaceinvoke r5.<java.util.Set: int size()>();

        if $i0 <= 0 goto label28;

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "identities");

        r8 = new java.util.ArrayList;

        specialinvoke r8.<java.util.ArrayList: void <init>(java.util.Collection)>(r5);

        staticinvoke <java.util.Collections: void sort(java.util.List)>(r8);

        $r19 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>();

     label26:
        $z0 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label27;

        $r12 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        $r24 = (java.lang.Integer) $r12;

        $r11 = virtualinvoke $r24.<java.lang.Integer: java.lang.String toString()>();

        staticinvoke <com.fsck.k9.preferences.SettingsExporter: void writeIdentity(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)>($r0, $r9, $r11, r2);

        goto label26;

     label27:
        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "identities");

     label28:
        $i0 = interfaceinvoke r4.<java.util.Set: int size()>();

        if $i0 <= 0 goto label31;

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "folders");

        $r19 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>();

     label29:
        $z0 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label30;

        $r12 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (java.lang.String) $r12;

        staticinvoke <com.fsck.k9.preferences.SettingsExporter: void writeFolder(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)>($r0, $r9, $r11, r2);

        goto label29;

     label30:
        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "folders");

     label31:
        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "account");

        return;

        catch java.lang.NumberFormatException from label16 to label17 with label18;
        catch com.fsck.k9.preferences.Settings$InvalidSettingValueException from label22 to label23 with label24;
    }
    private static void writeElement(org.xmlpull.v1.XmlSerializer, java.lang.String, java.lang.String) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer $r0;
        java.lang.String $r1, $r2;

        $r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        if $r2 == null goto label1;

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, $r1);

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r2);

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, $r1);

     label1:
        return;
    }
    private static void writeFolder(org.xmlpull.v1.XmlSerializer, java.lang.String, java.lang.String, java.util.Map) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer $r0;
        java.lang.String $r1, $r2, r9, $r10, $r11, $r12;
        java.util.Map r3;
        com.fsck.k9.preferences.Settings$InvalidSettingValueException r4;
        java.util.Set $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;
        java.util.Map$Entry r8;
        int $i0, $i1;
        java.util.TreeMap r13;
        java.lang.Integer r14;
        com.fsck.k9.preferences.Settings$SettingsDescription r15;
        java.lang.Object[] $r16;

        $r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.util.Map;

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "folder");

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r2);

        $r5 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r7;

        $r7 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        r9 = (java.lang.String) $r7;

        $r7 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        $i0 = virtualinvoke r9.<java.lang.String: int indexOf(int)>(46);

        $i1 = virtualinvoke r9.<java.lang.String: int lastIndexOf(int)>(46);

        if $i0 == -1 goto label1;

        if $i1 == -1 goto label1;

        if $i0 == $i1 goto label1;

        $r11 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i0 = $i0 + 1;

        $r12 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        $i1 = $i1 + 1;

        r9 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int)>($i1);

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        r3 = <com.fsck.k9.preferences.FolderSettings: java.util.Map SETTINGS>;

        $r7 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9);

        r13 = (java.util.TreeMap) $r7;

        if r13 == null goto label1;

        $r7 = virtualinvoke r13.<java.util.TreeMap: java.lang.Object lastKey()>();

        r14 = (java.lang.Integer) $r7;

        $r7 = virtualinvoke r13.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>(r14);

        r15 = (com.fsck.k9.preferences.Settings$SettingsDescription) $r7;

        if r15 == null goto label1;

     label2:
        staticinvoke <com.fsck.k9.preferences.SettingsExporter: void writeKeyAndPrettyValueFromSetting(org.xmlpull.v1.XmlSerializer,java.lang.String,com.fsck.k9.preferences.Settings$SettingsDescription,java.lang.String)>($r0, r9, r15, $r10);

     label3:
        goto label1;

     label4:
        r4 := @caughtexception;

        $r16 = newarray (java.lang.Object)[2];

        $r16[0] = r9;

        $r16[1] = $r10;

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Folder setting \"%s\" has invalid value \"%s\" in preference storage. This shouldn\'t happen!", $r16);

        goto label1;

     label5:
        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "folder");

        return;

        catch com.fsck.k9.preferences.Settings$InvalidSettingValueException from label2 to label3 with label4;
    }
    private static void writeIdentity(org.xmlpull.v1.XmlSerializer, java.lang.String, java.lang.String, java.util.Map) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer $r0;
        java.lang.String $r1, $r2, r5, r6, r7, $r9;
        java.util.Map r3;
        com.fsck.k9.preferences.Settings$InvalidSettingValueException r4;
        java.lang.StringBuilder $r8;
        java.lang.Object $r10;
        java.util.Set $r11;
        java.util.Iterator $r12;
        boolean $z0;
        java.util.Map$Entry r13;
        java.lang.String[] $r14;
        int $i0;
        java.util.TreeMap r15;
        java.lang.Integer r16;
        com.fsck.k9.preferences.Settings$SettingsDescription r17;
        java.lang.Object[] $r18;

        $r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.util.Map;

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "identity");

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("name");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        r6 = (java.lang.String) $r10;

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "name");

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>(r6);

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "name");

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("email");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        r6 = (java.lang.String) $r10;

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "email");

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>(r6);

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "email");

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("description");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        $r9 = (java.lang.String) $r10;

        if $r9 == null goto label1;

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "description");

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r9);

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "description");

     label1:
        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "settings");

        $r11 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>();

        $r12 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r10 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.util.Map$Entry) $r10;

        $r10 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getKey()>();

        r5 = (java.lang.String) $r10;

        $r10 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        $r14 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");

        $i0 = lengthof $r14;

        if $i0 < 3 goto label2;

        r7 = $r14[0];

        r6 = $r14[1];

        r5 = $r14[2];

        $z0 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        r3 = <com.fsck.k9.preferences.IdentitySettings: java.util.Map SETTINGS>;

        $r10 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        r15 = (java.util.TreeMap) $r10;

        if r15 == null goto label2;

        $r10 = virtualinvoke r15.<java.util.TreeMap: java.lang.Object lastKey()>();

        r16 = (java.lang.Integer) $r10;

        $r10 = virtualinvoke r15.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>(r16);

        r17 = (com.fsck.k9.preferences.Settings$SettingsDescription) $r10;

        if r17 == null goto label2;

     label3:
        staticinvoke <com.fsck.k9.preferences.SettingsExporter: void writeKeyAndPrettyValueFromSetting(org.xmlpull.v1.XmlSerializer,java.lang.String,com.fsck.k9.preferences.Settings$SettingsDescription,java.lang.String)>($r0, r6, r17, $r9);

     label4:
        goto label2;

     label5:
        r4 := @caughtexception;

        $r18 = newarray (java.lang.Object)[2];

        $r18[0] = r6;

        $r18[1] = $r9;

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Identity setting \"%s\" has invalid value \"%s\" in preference storage. This shouldn\'t happen!", $r18);

        goto label2;

     label6:
        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "settings");

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "identity");

        return;

        catch com.fsck.k9.preferences.Settings$InvalidSettingValueException from label3 to label4 with label5;
    }
    private static void writeKeyAndDefaultValueFromSetting(org.xmlpull.v1.XmlSerializer, java.lang.String, com.fsck.k9.preferences.Settings$SettingsDescription) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer $r0;
        java.lang.String $r1, $r4;
        com.fsck.k9.preferences.Settings$SettingsDescription r2;
        java.lang.Object $r3;

        $r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.fsck.k9.preferences.Settings$SettingsDescription;

        $r3 = virtualinvoke r2.<com.fsck.k9.preferences.Settings$SettingsDescription: java.lang.Object getDefaultValue()>();

        $r4 = virtualinvoke r2.<com.fsck.k9.preferences.Settings$SettingsDescription: java.lang.String toPrettyString(java.lang.Object)>($r3);

        staticinvoke <com.fsck.k9.preferences.SettingsExporter: void writeKeyAndPrettyValueFromSetting(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String)>($r0, $r1, $r4);

        return;
    }
    private static void writeKeyAndPrettyValueFromSetting(org.xmlpull.v1.XmlSerializer, java.lang.String, com.fsck.k9.preferences.Settings$SettingsDescription, java.lang.String) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.io.IOException, com.fsck.k9.preferences.Settings$InvalidSettingValueException
    {
        org.xmlpull.v1.XmlSerializer $r0;
        java.lang.String $r1, $r3;
        com.fsck.k9.preferences.Settings$SettingsDescription r2;
        java.lang.Object $r4;

        $r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.fsck.k9.preferences.Settings$SettingsDescription;

        $r3 := @parameter3: java.lang.String;

        $r4 = virtualinvoke r2.<com.fsck.k9.preferences.Settings$SettingsDescription: java.lang.Object fromString(java.lang.String)>($r3);

        $r3 = virtualinvoke r2.<com.fsck.k9.preferences.Settings$SettingsDescription: java.lang.String toPrettyString(java.lang.Object)>($r4);

        staticinvoke <com.fsck.k9.preferences.SettingsExporter: void writeKeyAndPrettyValueFromSetting(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String)>($r0, $r1, $r3);

        return;
    }
    private static void writeKeyAndPrettyValueFromSetting(org.xmlpull.v1.XmlSerializer, java.lang.String, java.lang.String) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer $r0;
        java.lang.String $r1, $r2;

        $r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "value");

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "key", $r1);

        if $r2 == null goto label1;

        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r2);

     label1:
        interfaceinvoke $r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "value");

        return;
    }
    private static void writeSettings(org.xmlpull.v1.XmlSerializer, java.util.Map) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer $r0;
        java.util.Map r1, $r3;
        com.fsck.k9.preferences.Settings$InvalidSettingValueException r2;
        java.util.Set $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.util.Map$Entry r7;
        java.lang.String r8, r9;
        java.util.TreeMap r10;
        java.lang.Integer r11;
        com.fsck.k9.preferences.Settings$SettingsDescription r12;
        java.lang.Object[] $r13;

        $r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.util.Map;

        $r3 = <com.fsck.k9.preferences.GlobalSettings: java.util.Map SETTINGS>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        r8 = (java.lang.String) $r6;

        $r6 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8);

        r9 = (java.lang.String) $r6;

        $r6 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        r10 = (java.util.TreeMap) $r6;

        $r6 = virtualinvoke r10.<java.util.TreeMap: java.lang.Object lastKey()>();

        r11 = (java.lang.Integer) $r6;

        $r6 = virtualinvoke r10.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>(r11);

        r12 = (com.fsck.k9.preferences.Settings$SettingsDescription) $r6;

        if r12 == null goto label1;

        if r9 == null goto label5;

     label2:
        staticinvoke <com.fsck.k9.preferences.SettingsExporter: void writeKeyAndPrettyValueFromSetting(org.xmlpull.v1.XmlSerializer,java.lang.String,com.fsck.k9.preferences.Settings$SettingsDescription,java.lang.String)>($r0, r8, r12, r9);

     label3:
        goto label1;

     label4:
        r2 := @caughtexception;

        $r13 = newarray (java.lang.Object)[2];

        $r13[0] = r8;

        $r13[1] = r9;

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Global setting \"%s\" has invalid value \"%s\" in preference storage. This shouldn\'t happen!", $r13);

        goto label1;

     label5:
        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = r8;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Couldn\'t find key \"%s\" in preference storage. Using default value.", $r13);

        staticinvoke <com.fsck.k9.preferences.SettingsExporter: void writeKeyAndDefaultValueFromSetting(org.xmlpull.v1.XmlSerializer,java.lang.String,com.fsck.k9.preferences.Settings$SettingsDescription)>($r0, r8, r12);

        goto label1;

     label6:
        return;

        catch com.fsck.k9.preferences.Settings$InvalidSettingValueException from label2 to label3 with label4;
    }
