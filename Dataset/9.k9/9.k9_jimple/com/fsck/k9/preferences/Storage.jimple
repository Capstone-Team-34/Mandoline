com.fsck.k9.preferences.Storage extends java.lang.Object
private static java.util.concurrent.ConcurrentMap storages
private java.lang.String DB_NAME
private int DB_VERSION
private android.content.Context context
private volatile java.util.concurrent.ConcurrentMap storage
private java.lang.ThreadLocal workingChangedKeys
private java.lang.ThreadLocal workingDB
private java.lang.ThreadLocal workingStorage
    static void <clinit>()
    {
        java.util.concurrent.ConcurrentHashMap $r0;

        $r0 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <com.fsck.k9.preferences.Storage: java.util.concurrent.ConcurrentMap storages> = $r0;

        return;
    }
    private void <init>(android.content.Context)
    {
        com.fsck.k9.preferences.Storage r0;
        android.content.Context $r1;
        java.util.concurrent.ConcurrentHashMap $r2;
        java.lang.ThreadLocal $r3;

        r0 := @this: com.fsck.k9.preferences.Storage;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r2.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<com.fsck.k9.preferences.Storage: java.util.concurrent.ConcurrentMap storage> = $r2;

        r0.<com.fsck.k9.preferences.Storage: int DB_VERSION> = 2;

        r0.<com.fsck.k9.preferences.Storage: java.lang.String DB_NAME> = "preferences_storage";

        $r3 = new java.lang.ThreadLocal;

        specialinvoke $r3.<java.lang.ThreadLocal: void <init>()>();

        r0.<com.fsck.k9.preferences.Storage: java.lang.ThreadLocal workingStorage> = $r3;

        $r3 = new java.lang.ThreadLocal;

        specialinvoke $r3.<java.lang.ThreadLocal: void <init>()>();

        r0.<com.fsck.k9.preferences.Storage: java.lang.ThreadLocal workingDB> = $r3;

        $r3 = new java.lang.ThreadLocal;

        specialinvoke $r3.<java.lang.ThreadLocal: void <init>()>();

        r0.<com.fsck.k9.preferences.Storage: java.lang.ThreadLocal workingChangedKeys> = $r3;

        r0.<com.fsck.k9.preferences.Storage: android.content.Context context> = null;

        r0.<com.fsck.k9.preferences.Storage: android.content.Context context> = $r1;

        specialinvoke r0.<com.fsck.k9.preferences.Storage: void loadValues()>();

        return;
    }
    public static com.fsck.k9.preferences.Storage getStorage(android.content.Context)
    {
        android.content.Context $r0;
        java.util.concurrent.ConcurrentMap $r1;
        java.lang.Object $r2;
        com.fsck.k9.preferences.Storage r3, r5;
        java.lang.Object[] $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 = <com.fsck.k9.preferences.Storage: java.util.concurrent.ConcurrentMap storages>;

        $r2 = interfaceinvoke $r1.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>($r0);

        r3 = (com.fsck.k9.preferences.Storage) $r2;

        if r3 == null goto label1;

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Returning already existing Storage", $r4);

        return r3;

     label1:
        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Creating provisional storage", $r4);

        r3 = new com.fsck.k9.preferences.Storage;

        specialinvoke r3.<com.fsck.k9.preferences.Storage: void <init>(android.content.Context)>($r0);

        $r1 = <com.fsck.k9.preferences.Storage: java.util.concurrent.ConcurrentMap storages>;

        $r2 = interfaceinvoke $r1.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($r0, r3);

        r5 = (com.fsck.k9.preferences.Storage) $r2;

        if r5 == null goto label2;

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Another thread beat us to creating the Storage, returning that one", $r4);

        return r5;

     label2:
        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Returning the Storage we created", $r4);

        return r3;
    }
    private void keyChange(java.lang.String)
    {
        com.fsck.k9.preferences.Storage r0;
        java.lang.String $r1;
        java.lang.ThreadLocal $r2;
        java.lang.Object $r3;
        java.util.List r4;
        boolean $z0;

        r0 := @this: com.fsck.k9.preferences.Storage;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.fsck.k9.preferences.Storage: java.lang.ThreadLocal workingChangedKeys>;

        $r3 = virtualinvoke $r2.<java.lang.ThreadLocal: java.lang.Object get()>();

        r4 = (java.util.List) $r3;

        $z0 = interfaceinvoke r4.<java.util.List: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r1);

     label1:
        return;
    }
    private void liveUpdate(java.lang.String, java.lang.String)
    {
        com.fsck.k9.preferences.Storage r0;
        java.lang.String $r1, $r2;
        java.lang.Object $r3;
        java.lang.ThreadLocal $r4;
        java.util.concurrent.ConcurrentMap $r5;

        r0 := @this: com.fsck.k9.preferences.Storage;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r4 = r0.<com.fsck.k9.preferences.Storage: java.lang.ThreadLocal workingStorage>;

        $r3 = virtualinvoke $r4.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r5 = (java.util.concurrent.ConcurrentMap) $r3;

        interfaceinvoke $r5.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        specialinvoke r0.<com.fsck.k9.preferences.Storage: void keyChange(java.lang.String)>($r1);

        return;
    }
    private void loadValues()
    {
        com.fsck.k9.preferences.Storage r0;
        long $l0, $l1;
        java.lang.Object[] $r1;
        android.database.Cursor r2, $r5;
        android.database.sqlite.SQLiteDatabase r3, $r4;
        boolean $z0;
        java.lang.String $r6, $r7;
        java.util.concurrent.ConcurrentMap $r8;
        java.lang.Throwable $r9;
        java.lang.Long $r10;

        r0 := @this: com.fsck.k9.preferences.Storage;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Loading preferences from DB into Storage", $r1);

        r2 = null;

        r3 = null;

     label01:
        $r4 = specialinvoke r0.<com.fsck.k9.preferences.Storage: android.database.sqlite.SQLiteDatabase openDB()>();

     label02:
        r3 = $r4;

     label03:
        $r5 = virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("SELECT primkey, value FROM preferences_storage", null);

     label04:
        r2 = $r5;

     label05:
        $z0 = interfaceinvoke $r5.<android.database.Cursor: boolean moveToNext()>();

     label06:
        if $z0 == 0 goto label11;

     label07:
        $r6 = interfaceinvoke $r5.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r7 = interfaceinvoke $r5.<android.database.Cursor: java.lang.String getString(int)>(1);

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = $r6;

        $r1[1] = $r7;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Loading key \'%s\', value = \'%s\'", $r1);

        $r8 = r0.<com.fsck.k9.preferences.Storage: java.util.concurrent.ConcurrentMap storage>;

        interfaceinvoke $r8.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

     label08:
        goto label05;

     label09:
        $r9 := @caughtexception;

        staticinvoke <com.fsck.k9.helper.Utility: void closeQuietly(android.database.Cursor)>(r2);

        if r3 == null goto label10;

        virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: void close()>();

     label10:
        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r1 = newarray (java.lang.Object)[1];

        $l0 = $l1 - $l0;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r1[0] = $r10;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Preferences load took %d ms", $r1);

        throw $r9;

     label11:
        staticinvoke <com.fsck.k9.helper.Utility: void closeQuietly(android.database.Cursor)>($r5);

        if $r4 == null goto label12;

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void close()>();

     label12:
        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r1 = newarray (java.lang.Object)[1];

        $l0 = $l1 - $l0;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r1[0] = $r10;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Preferences load took %d ms", $r1);

        return;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }
    private android.database.sqlite.SQLiteDatabase openDB()
    {
        com.fsck.k9.preferences.Storage r0;
        java.lang.Exception r1;
        java.lang.String r2, $r8, $r9, $r10, r13, $r15, $r16, $r17;
        android.content.Context $r3;
        android.database.sqlite.SQLiteDatabase $r4;
        int $i0, $i1, $i2;
        java.lang.Object[] $r5;
        java.lang.String[] $r6, $r12;
        java.lang.StringBuilder $r7;
        java.net.URI r11, r14;
        boolean $z0;

        r0 := @this: com.fsck.k9.preferences.Storage;

        $r3 = r0.<com.fsck.k9.preferences.Storage: android.content.Context context>;

        r2 = r0.<com.fsck.k9.preferences.Storage: java.lang.String DB_NAME>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory)>(r2, 0, null);

        $i0 = virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: int getVersion()>();

        if $i0 != 1 goto label64;

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Updating preferences to urlencoded username/password", $r5);

        r2 = specialinvoke r0.<com.fsck.k9.preferences.Storage: java.lang.String readValue(android.database.sqlite.SQLiteDatabase,java.lang.String)>($r4, "accountUuids");

        if r2 == null goto label63;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 == 0 goto label63;

        $r6 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i0 = lengthof $r6;

        $i1 = 0;

     label01:
        if $i1 >= $i0 goto label63;

        r2 = $r6[$i1];

        $r7 = new java.lang.StringBuilder;

     label02:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".storeUri");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = specialinvoke r0.<com.fsck.k9.preferences.Storage: java.lang.String readValue(android.database.sqlite.SQLiteDatabase,java.lang.String)>($r4, $r8);

        $r8 = staticinvoke <com.fsck.k9.mail.filter.Base64: java.lang.String decode(java.lang.String)>($r8);

     label03:
        $r7 = new java.lang.StringBuilder;

     label04:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".transportUri");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = specialinvoke r0.<com.fsck.k9.preferences.Storage: java.lang.String readValue(android.database.sqlite.SQLiteDatabase,java.lang.String)>($r4, $r9);

        $r10 = staticinvoke <com.fsck.k9.mail.filter.Base64: java.lang.String decode(java.lang.String)>($r9);

     label05:
        r11 = new java.net.URI;

     label06:
        specialinvoke r11.<java.net.URI: void <init>(java.lang.String)>($r10);

     label07:
        $r9 = null;

        if $r10 == null goto label18;

     label08:
        $r9 = virtualinvoke r11.<java.net.URI: java.lang.String getUserInfo()>();

        $r12 = virtualinvoke $r9.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r9 = $r12[0];

        $r9 = staticinvoke <com.fsck.k9.helper.UrlEncodingHelper: java.lang.String encodeUtf8(java.lang.String)>($r9);

     label09:
        r13 = "";

        $r10 = "";

     label10:
        $i2 = lengthof $r12;

     label11:
        if $i2 <= 1 goto label13;

        $r7 = new java.lang.StringBuilder;

     label12:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        r13 = $r12[1];

        r13 = staticinvoke <com.fsck.k9.helper.UrlEncodingHelper: java.lang.String encodeUtf8(java.lang.String)>(r13);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        r13 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label13:
        $i2 = lengthof $r12;

     label14:
        if $i2 <= 2 goto label16;

        $r7 = new java.lang.StringBuilder;

     label15:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r10 = $r12[2];

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label16:
        $r7 = new java.lang.StringBuilder;

     label17:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label18:
        if $r9 == null goto label22;

        r14 = new java.net.URI;

     label19:
        $r10 = virtualinvoke r11.<java.net.URI: java.lang.String getScheme()>();

        r13 = virtualinvoke r11.<java.net.URI: java.lang.String getHost()>();

        $i2 = virtualinvoke r11.<java.net.URI: int getPort()>();

        $r15 = virtualinvoke r11.<java.net.URI: java.lang.String getPath()>();

        $r16 = virtualinvoke r11.<java.net.URI: java.lang.String getQuery()>();

        $r17 = virtualinvoke r11.<java.net.URI: java.lang.String getFragment()>();

        specialinvoke r14.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>($r10, $r9, r13, $i2, $r15, $r16, $r17);

        $r9 = virtualinvoke r14.<java.net.URI: java.lang.String toString()>();

        $r9 = staticinvoke <com.fsck.k9.mail.filter.Base64: java.lang.String encode(java.lang.String)>($r9);

     label20:
        $r7 = new java.lang.StringBuilder;

     label21:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".transportUri");

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.fsck.k9.preferences.Storage: void writeValue(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String)>($r4, $r10, $r9);

     label22:
        r11 = new java.net.URI;

     label23:
        specialinvoke r11.<java.net.URI: void <init>(java.lang.String)>($r8);

     label24:
        $r9 = null;

     label25:
        $z0 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>("imap");

     label26:
        if $z0 == 0 goto label42;

     label27:
        $r8 = virtualinvoke r11.<java.net.URI: java.lang.String getUserInfo()>();

        $r12 = virtualinvoke $r8.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $i2 = lengthof $r12;

     label28:
        if $i2 != 2 goto label38;

     label29:
        $r8 = $r12[0];

        $r8 = staticinvoke <com.fsck.k9.helper.UrlEncodingHelper: java.lang.String encodeUtf8(java.lang.String)>($r8);

        $r9 = $r12[1];

        $r9 = staticinvoke <com.fsck.k9.helper.UrlEncodingHelper: java.lang.String encodeUtf8(java.lang.String)>($r9);

     label30:
        $r7 = new java.lang.StringBuilder;

     label31:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label32:
        $r9 = $r8;

     label33:
        if $r9 == null goto label37;

        r14 = new java.net.URI;

     label34:
        $r8 = virtualinvoke r11.<java.net.URI: java.lang.String getScheme()>();

        $r10 = virtualinvoke r11.<java.net.URI: java.lang.String getHost()>();

        $i2 = virtualinvoke r11.<java.net.URI: int getPort()>();

        r13 = virtualinvoke r11.<java.net.URI: java.lang.String getPath()>();

        $r15 = virtualinvoke r11.<java.net.URI: java.lang.String getQuery()>();

        $r16 = virtualinvoke r11.<java.net.URI: java.lang.String getFragment()>();

        specialinvoke r14.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>($r8, $r9, $r10, $i2, r13, $r15, $r16);

        $r8 = virtualinvoke r14.<java.net.URI: java.lang.String toString()>();

        $r8 = staticinvoke <com.fsck.k9.mail.filter.Base64: java.lang.String encode(java.lang.String)>($r8);

     label35:
        $r7 = new java.lang.StringBuilder;

     label36:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".storeUri");

        r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.fsck.k9.preferences.Storage: void writeValue(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String)>($r4, r2, $r8);

     label37:
        $i1 = $i1 + 1;

        goto label01;

     label38:
        $r8 = $r12[0];

        $r9 = $r12[1];

        $r9 = staticinvoke <com.fsck.k9.helper.UrlEncodingHelper: java.lang.String encodeUtf8(java.lang.String)>($r9);

        $r10 = $r12[2];

        $r10 = staticinvoke <com.fsck.k9.helper.UrlEncodingHelper: java.lang.String encodeUtf8(java.lang.String)>($r10);

     label39:
        $r7 = new java.lang.StringBuilder;

     label40:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label41:
        $r9 = $r8;

        goto label33;

     label42:
        $z0 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>("pop3");

     label43:
        if $z0 == 0 goto label52;

     label44:
        $r8 = virtualinvoke r11.<java.net.URI: java.lang.String getUserInfo()>();

        $r12 = virtualinvoke $r8.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(":", 2);

        $r8 = $r12[0];

        $r8 = staticinvoke <com.fsck.k9.helper.UrlEncodingHelper: java.lang.String encodeUtf8(java.lang.String)>($r8);

     label45:
        $r9 = "";

     label46:
        $i2 = lengthof $r12;

     label47:
        if $i2 <= 1 goto label49;

        $r7 = new java.lang.StringBuilder;

     label48:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r9 = $r12[1];

        $r9 = staticinvoke <com.fsck.k9.helper.UrlEncodingHelper: java.lang.String encodeUtf8(java.lang.String)>($r9);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label49:
        $r7 = new java.lang.StringBuilder;

     label50:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label51:
        $r9 = $r8;

        goto label33;

     label52:
        $z0 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>("webdav");

     label53:
        if $z0 == 0 goto label33;

     label54:
        $r8 = virtualinvoke r11.<java.net.URI: java.lang.String getUserInfo()>();

        $r12 = virtualinvoke $r8.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(":", 2);

        $r8 = $r12[0];

        $r8 = staticinvoke <com.fsck.k9.helper.UrlEncodingHelper: java.lang.String encodeUtf8(java.lang.String)>($r8);

     label55:
        $r9 = "";

     label56:
        $i2 = lengthof $r12;

     label57:
        if $i2 <= 1 goto label59;

        $r7 = new java.lang.StringBuilder;

     label58:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r9 = $r12[1];

        $r9 = staticinvoke <com.fsck.k9.helper.UrlEncodingHelper: java.lang.String encodeUtf8(java.lang.String)>($r9);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label59:
        $r7 = new java.lang.StringBuilder;

     label60:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label61:
        $r9 = $r8;

        goto label33;

     label62:
        r1 := @caughtexception;

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r1, "ooops", $r5);

        goto label37;

     label63:
        $i0 = r0.<com.fsck.k9.preferences.Storage: int DB_VERSION>;

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void setVersion(int)>($i0);

     label64:
        $i0 = virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: int getVersion()>();

        $i1 = r0.<com.fsck.k9.preferences.Storage: int DB_VERSION>;

        if $i0 == $i1 goto label65;

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Creating Storage database", $r5);

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS preferences_storage");

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE preferences_storage (primkey TEXT PRIMARY KEY ON CONFLICT REPLACE, value TEXT)");

        $i0 = r0.<com.fsck.k9.preferences.Storage: int DB_VERSION>;

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void setVersion(int)>($i0);

     label65:
        return $r4;

        catch java.lang.Exception from label02 to label03 with label62;
        catch java.lang.Exception from label04 to label05 with label62;
        catch java.lang.Exception from label06 to label07 with label62;
        catch java.lang.Exception from label08 to label09 with label62;
        catch java.lang.Exception from label10 to label11 with label62;
        catch java.lang.Exception from label12 to label13 with label62;
        catch java.lang.Exception from label13 to label14 with label62;
        catch java.lang.Exception from label15 to label16 with label62;
        catch java.lang.Exception from label17 to label18 with label62;
        catch java.lang.Exception from label19 to label20 with label62;
        catch java.lang.Exception from label21 to label22 with label62;
        catch java.lang.Exception from label23 to label24 with label62;
        catch java.lang.Exception from label25 to label26 with label62;
        catch java.lang.Exception from label27 to label28 with label62;
        catch java.lang.Exception from label29 to label30 with label62;
        catch java.lang.Exception from label31 to label32 with label62;
        catch java.lang.Exception from label34 to label35 with label62;
        catch java.lang.Exception from label36 to label37 with label62;
        catch java.lang.Exception from label38 to label39 with label62;
        catch java.lang.Exception from label40 to label41 with label62;
        catch java.lang.Exception from label42 to label43 with label62;
        catch java.lang.Exception from label44 to label45 with label62;
        catch java.lang.Exception from label46 to label47 with label62;
        catch java.lang.Exception from label48 to label49 with label62;
        catch java.lang.Exception from label50 to label51 with label62;
        catch java.lang.Exception from label52 to label53 with label62;
        catch java.lang.Exception from label54 to label55 with label62;
        catch java.lang.Exception from label56 to label57 with label62;
        catch java.lang.Exception from label58 to label59 with label62;
        catch java.lang.Exception from label60 to label61 with label62;
    }
    private java.lang.String readValue(android.database.sqlite.SQLiteDatabase, java.lang.String)
    {
        com.fsck.k9.preferences.Storage r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.String $r2, r5, $r8;
        java.lang.String[] $r3, $r6;
        android.database.Cursor r4, $r7;
        boolean $z0;
        java.lang.Object[] $r9;
        java.lang.Throwable $r10;

        r0 := @this: com.fsck.k9.preferences.Storage;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 := @parameter1: java.lang.String;

        r4 = null;

        r5 = null;

     label1:
        $r6 = newarray (java.lang.String)[1];

        $r6[0] = "value";

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = $r2;

        $r7 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("preferences_storage", $r6, "primkey = ?", $r3, null, null, null);

     label2:
        r4 = $r7;

     label3:
        $z0 = interfaceinvoke $r7.<android.database.Cursor: boolean moveToNext()>();

     label4:
        if $z0 == 0 goto label8;

     label5:
        $r8 = interfaceinvoke $r7.<android.database.Cursor: java.lang.String getString(int)>(0);

     label6:
        r5 = $r8;

     label7:
        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = $r2;

        $r9[1] = $r8;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Loading key \'%s\', value = \'%s\'", $r9);

     label8:
        staticinvoke <com.fsck.k9.helper.Utility: void closeQuietly(android.database.Cursor)>($r7);

        return r5;

     label9:
        $r10 := @caughtexception;

        staticinvoke <com.fsck.k9.helper.Utility: void closeQuietly(android.database.Cursor)>(r4);

        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }
    private void writeValue(android.database.sqlite.SQLiteDatabase, java.lang.String, java.lang.String)
    {
        com.fsck.k9.preferences.Storage r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.String $r2, $r3;
        android.content.ContentValues r4;
        long $l0;
        byte $b1;
        java.lang.Object[] $r5;

        r0 := @this: com.fsck.k9.preferences.Storage;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        r4 = new android.content.ContentValues;

        specialinvoke r4.<android.content.ContentValues: void <init>()>();

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("primkey", $r2);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("value", $r3);

        $l0 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("preferences_storage", "primkey", r4);

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label1;

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = $r2;

        $r5[1] = $r3;

        staticinvoke <timber.log.Timber: void e(java.lang.String,java.lang.Object[])>("Error writing key \'%s\', value = \'%s\'", $r5);

     label1:
        return;
    }
    public boolean contains(java.lang.String)
    {
        com.fsck.k9.preferences.Storage r0;
        java.lang.String $r1;
        boolean $z0;
        java.util.concurrent.ConcurrentMap $r2;

        r0 := @this: com.fsck.k9.preferences.Storage;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.fsck.k9.preferences.Storage: java.util.concurrent.ConcurrentMap storage>;

        $z0 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: boolean containsKey(java.lang.Object)>($r1);

        return $z0;
    }
    void doInTransaction(java.lang.Runnable)
    {
        com.fsck.k9.preferences.Storage r0;
        java.lang.Runnable $r1;
        java.util.ArrayList r2;
        java.util.concurrent.ConcurrentHashMap r3;
        android.database.sqlite.SQLiteDatabase $r4;
        java.util.concurrent.ConcurrentMap $r5;
        java.lang.ThreadLocal $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.fsck.k9.preferences.Storage;

        $r1 := @parameter0: java.lang.Runnable;

        r3 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke r3.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        $r5 = r0.<com.fsck.k9.preferences.Storage: java.util.concurrent.ConcurrentMap storage>;

        interfaceinvoke r3.<java.util.concurrent.ConcurrentMap: void putAll(java.util.Map)>($r5);

        $r6 = r0.<com.fsck.k9.preferences.Storage: java.lang.ThreadLocal workingStorage>;

        virtualinvoke $r6.<java.lang.ThreadLocal: void set(java.lang.Object)>(r3);

        $r4 = specialinvoke r0.<com.fsck.k9.preferences.Storage: android.database.sqlite.SQLiteDatabase openDB()>();

        $r6 = r0.<com.fsck.k9.preferences.Storage: java.lang.ThreadLocal workingDB>;

        virtualinvoke $r6.<java.lang.ThreadLocal: void set(java.lang.Object)>($r4);

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r6 = r0.<com.fsck.k9.preferences.Storage: java.lang.ThreadLocal workingChangedKeys>;

        virtualinvoke $r6.<java.lang.ThreadLocal: void set(java.lang.Object)>(r2);

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();

     label1:
        interfaceinvoke $r1.<java.lang.Runnable: void run()>();

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

        r0.<com.fsck.k9.preferences.Storage: java.util.concurrent.ConcurrentMap storage> = r3;

     label2:
        $r6 = r0.<com.fsck.k9.preferences.Storage: java.lang.ThreadLocal workingDB>;

        virtualinvoke $r6.<java.lang.ThreadLocal: void remove()>();

        $r6 = r0.<com.fsck.k9.preferences.Storage: java.lang.ThreadLocal workingStorage>;

        virtualinvoke $r6.<java.lang.ThreadLocal: void remove()>();

        $r6 = r0.<com.fsck.k9.preferences.Storage: java.lang.ThreadLocal workingChangedKeys>;

        virtualinvoke $r6.<java.lang.ThreadLocal: void remove()>();

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void close()>();

        return;

     label3:
        $r7 := @caughtexception;

        $r6 = r0.<com.fsck.k9.preferences.Storage: java.lang.ThreadLocal workingDB>;

        virtualinvoke $r6.<java.lang.ThreadLocal: void remove()>();

        $r6 = r0.<com.fsck.k9.preferences.Storage: java.lang.ThreadLocal workingStorage>;

        virtualinvoke $r6.<java.lang.ThreadLocal: void remove()>();

        $r6 = r0.<com.fsck.k9.preferences.Storage: java.lang.ThreadLocal workingChangedKeys>;

        virtualinvoke $r6.<java.lang.ThreadLocal: void remove()>();

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void close()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public com.fsck.k9.preferences.StorageEditor edit()
    {
        com.fsck.k9.preferences.Storage r0;
        com.fsck.k9.preferences.StorageEditor $r1;

        r0 := @this: com.fsck.k9.preferences.Storage;

        $r1 = new com.fsck.k9.preferences.StorageEditor;

        specialinvoke $r1.<com.fsck.k9.preferences.StorageEditor: void <init>(com.fsck.k9.preferences.Storage)>(r0);

        return $r1;
    }
    public java.util.Map getAll()
    {
        com.fsck.k9.preferences.Storage r0;
        java.util.concurrent.ConcurrentMap r1;

        r0 := @this: com.fsck.k9.preferences.Storage;

        r1 = r0.<com.fsck.k9.preferences.Storage: java.util.concurrent.ConcurrentMap storage>;

        return r1;
    }
    public boolean getBoolean(java.lang.String, boolean)
    {
        com.fsck.k9.preferences.Storage r0;
        java.lang.String $r1;
        java.util.concurrent.ConcurrentMap $r2;
        boolean z0;
        java.lang.Object $r3;

        r0 := @this: com.fsck.k9.preferences.Storage;

        $r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.fsck.k9.preferences.Storage: java.util.concurrent.ConcurrentMap storage>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>($r1);

        $r1 = (java.lang.String) $r3;

        if $r1 != null goto label1;

        return z0;

     label1:
        z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r1);

        return z0;
    }
    public int getInt(java.lang.String, int)
    {
        com.fsck.k9.preferences.Storage r0;
        java.lang.String $r1;
        java.lang.NumberFormatException r2;
        int i0, $i1;
        java.util.concurrent.ConcurrentMap $r3;
        java.lang.Object $r4;
        java.lang.Object[] $r5;

        r0 := @this: com.fsck.k9.preferences.Storage;

        $r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = r0.<com.fsck.k9.preferences.Storage: java.util.concurrent.ConcurrentMap storage>;

        $r4 = interfaceinvoke $r3.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>($r1);

        $r1 = (java.lang.String) $r4;

        if $r1 != null goto label1;

        return i0;

     label1:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label2:
        return $i1;

     label3:
        r2 := @caughtexception;

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r2, "Could not parse int", $r5);

        return i0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }
    public long getLong(java.lang.String, long)
    {
        com.fsck.k9.preferences.Storage r0;
        java.lang.String $r1;
        java.lang.NumberFormatException r2;
        long l0, $l1;
        java.util.concurrent.ConcurrentMap $r3;
        java.lang.Object $r4;
        java.lang.Object[] $r5;

        r0 := @this: com.fsck.k9.preferences.Storage;

        $r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r3 = r0.<com.fsck.k9.preferences.Storage: java.util.concurrent.ConcurrentMap storage>;

        $r4 = interfaceinvoke $r3.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>($r1);

        $r1 = (java.lang.String) $r4;

        if $r1 != null goto label1;

        return l0;

     label1:
        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r1);

     label2:
        return $l1;

     label3:
        r2 := @caughtexception;

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r2, "Could not parse long", $r5);

        return l0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }
    public java.lang.String getString(java.lang.String, java.lang.String)
    {
        com.fsck.k9.preferences.Storage r0;
        java.lang.String $r1, r4;
        java.util.concurrent.ConcurrentMap $r2;
        java.lang.Object $r3;

        r0 := @this: com.fsck.k9.preferences.Storage;

        $r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r2 = r0.<com.fsck.k9.preferences.Storage: java.util.concurrent.ConcurrentMap storage>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>($r1);

        $r1 = (java.lang.String) $r3;

        if $r1 != null goto label1;

        return r4;

     label1:
        return $r1;
    }
    public boolean isEmpty()
    {
        com.fsck.k9.preferences.Storage r0;
        boolean $z0;
        java.util.concurrent.ConcurrentMap $r1;

        r0 := @this: com.fsck.k9.preferences.Storage;

        $r1 = r0.<com.fsck.k9.preferences.Storage: java.util.concurrent.ConcurrentMap storage>;

        $z0 = interfaceinvoke $r1.<java.util.concurrent.ConcurrentMap: boolean isEmpty()>();

        return $z0;
    }
    void put(java.util.Map)
    {
        com.fsck.k9.preferences.Storage r0;
        java.util.Map r1;
        java.lang.ThreadLocal $r2;
        java.lang.Object $r3;
        android.database.sqlite.SQLiteDatabase $r4;
        android.database.sqlite.SQLiteStatement $r5;
        java.util.Set $r6;
        java.util.Iterator $r7;
        boolean $z0;
        java.util.Map$Entry r8;
        java.lang.String r9, r10;

        r0 := @this: com.fsck.k9.preferences.Storage;

        r1 := @parameter0: java.util.Map;

        $r2 = r0.<com.fsck.k9.preferences.Storage: java.lang.ThreadLocal workingDB>;

        $r3 = virtualinvoke $r2.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r4 = (android.database.sqlite.SQLiteDatabase) $r3;

        $r5 = virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>("INSERT INTO preferences_storage (primkey, value) VALUES (?, ?)");

        $r6 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r3;

        $r3 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        r9 = (java.lang.String) $r3;

        $r3 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        r10 = (java.lang.String) $r3;

        virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(1, r9);

        virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(2, r10);

        virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void execute()>();

        virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void clearBindings()>();

        specialinvoke r0.<com.fsck.k9.preferences.Storage: void liveUpdate(java.lang.String,java.lang.String)>(r9, r10);

        goto label1;

     label2:
        virtualinvoke $r5.<android.database.sqlite.SQLiteStatement: void close()>();

        return;
    }
    void remove(java.lang.String)
    {
        com.fsck.k9.preferences.Storage r0;
        java.lang.String $r1;
        java.lang.ThreadLocal $r2;
        java.lang.Object $r3;
        android.database.sqlite.SQLiteDatabase $r4;
        java.lang.String[] $r5;
        java.util.concurrent.ConcurrentMap $r6;

        r0 := @this: com.fsck.k9.preferences.Storage;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.fsck.k9.preferences.Storage: java.lang.ThreadLocal workingDB>;

        $r3 = virtualinvoke $r2.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r4 = (android.database.sqlite.SQLiteDatabase) $r3;

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = $r1;

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("preferences_storage", "primkey = ?", $r5);

        $r2 = r0.<com.fsck.k9.preferences.Storage: java.lang.ThreadLocal workingStorage>;

        $r3 = virtualinvoke $r2.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r6 = (java.util.concurrent.ConcurrentMap) $r3;

        interfaceinvoke $r6.<java.util.concurrent.ConcurrentMap: java.lang.Object remove(java.lang.Object)>($r1);

        specialinvoke r0.<com.fsck.k9.preferences.Storage: void keyChange(java.lang.String)>($r1);

        return;
    }
