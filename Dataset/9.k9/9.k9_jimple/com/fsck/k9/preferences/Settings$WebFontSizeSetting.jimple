com.fsck.k9.preferences.Settings$WebFontSizeSetting extends com.fsck.k9.preferences.Settings$PseudoEnumSetting
private final java.util.Map mapping
    void <init>(int)
    {
        com.fsck.k9.preferences.Settings$WebFontSizeSetting r0;
        int $i0;
        java.util.HashMap r1;
        java.lang.Integer $r2;
        java.util.Map $r3;

        r0 := @this: com.fsck.k9.preferences.Settings$WebFontSizeSetting;

        $i0 := @parameter0: int;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        specialinvoke r0.<com.fsck.k9.preferences.Settings$PseudoEnumSetting: void <init>(java.lang.Object)>($r2);

        r1 = new java.util.HashMap;

        specialinvoke r1.<java.util.HashMap: void <init>()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, "smallest");

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, "smaller");

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, "normal");

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, "larger");

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, "largest");

        $r3 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r1);

        r0.<com.fsck.k9.preferences.Settings$WebFontSizeSetting: java.util.Map mapping> = $r3;

        return;
    }
    public java.lang.Integer fromString(java.lang.String) throws com.fsck.k9.preferences.Settings$InvalidSettingValueException
    {
        com.fsck.k9.preferences.Settings$WebFontSizeSetting r0;
        java.lang.String $r1;
        int $i0;
        java.lang.Integer $r2;
        java.util.Map $r3;
        boolean $z0;
        java.lang.NumberFormatException $r4;
        com.fsck.k9.preferences.Settings$InvalidSettingValueException $r5;

        r0 := @this: com.fsck.k9.preferences.Settings$WebFontSizeSetting;

        $r1 := @parameter0: java.lang.String;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label2:
        $r3 = r0.<com.fsck.k9.preferences.Settings$WebFontSizeSetting: java.util.Map mapping>;

     label3:
        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);

     label4:
        if $z0 == 0 goto label6;

        return $r2;

     label5:
        $r4 := @caughtexception;

     label6:
        $r5 = new com.fsck.k9.preferences.Settings$InvalidSettingValueException;

        specialinvoke $r5.<com.fsck.k9.preferences.Settings$InvalidSettingValueException: void <init>()>();

        throw $r5;

        catch java.lang.NumberFormatException from label1 to label2 with label5;
        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }
    public volatile java.lang.Object fromString(java.lang.String) throws com.fsck.k9.preferences.Settings$InvalidSettingValueException
    {
        com.fsck.k9.preferences.Settings$WebFontSizeSetting r0;
        java.lang.String $r1;
        java.lang.Integer $r2;

        r0 := @this: com.fsck.k9.preferences.Settings$WebFontSizeSetting;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.fsck.k9.preferences.Settings$WebFontSizeSetting: java.lang.Integer fromString(java.lang.String)>($r1);

        return $r2;
    }
    protected java.util.Map getMapping()
    {
        com.fsck.k9.preferences.Settings$WebFontSizeSetting r0;
        java.util.Map r1;

        r0 := @this: com.fsck.k9.preferences.Settings$WebFontSizeSetting;

        r1 = r0.<com.fsck.k9.preferences.Settings$WebFontSizeSetting: java.util.Map mapping>;

        return r1;
    }
