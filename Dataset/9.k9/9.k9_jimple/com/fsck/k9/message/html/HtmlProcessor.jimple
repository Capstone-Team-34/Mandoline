com.fsck.k9.message.html.HtmlProcessor extends java.lang.Object
private final com.fsck.k9.message.html.HtmlSanitizer htmlSanitizer
    private void <init>(com.fsck.k9.message.html.HtmlSanitizer)
    {
        com.fsck.k9.message.html.HtmlProcessor r0;
        com.fsck.k9.message.html.HtmlSanitizer $r1;

        r0 := @this: com.fsck.k9.message.html.HtmlProcessor;

        $r1 := @parameter0: com.fsck.k9.message.html.HtmlSanitizer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.fsck.k9.message.html.HtmlProcessor: com.fsck.k9.message.html.HtmlSanitizer htmlSanitizer> = $r1;

        return;
    }
    private void addCustomHeadContents(org.jsoup.nodes.Document)
    {
        com.fsck.k9.message.html.HtmlProcessor r0;
        org.jsoup.nodes.Document $r1;
        org.jsoup.nodes.Element $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        r0 := @this: com.fsck.k9.message.html.HtmlProcessor;

        $r1 := @parameter0: org.jsoup.nodes.Document;

        $r2 = virtualinvoke $r1.<org.jsoup.nodes.Document: org.jsoup.nodes.Element head()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<meta name=\"viewport\" content=\"width=device-width\"/>");

        $r4 = staticinvoke <com.fsck.k9.message.html.HtmlConverter: java.lang.String cssStyleTheme()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = staticinvoke <com.fsck.k9.message.html.HtmlConverter: java.lang.String cssStylePre()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<org.jsoup.nodes.Element: org.jsoup.nodes.Element append(java.lang.String)>($r4);

        return;
    }
    public static com.fsck.k9.message.html.HtmlProcessor newInstance()
    {
        com.fsck.k9.message.html.HtmlSanitizer r0;
        com.fsck.k9.message.html.HtmlProcessor $r1;

        r0 = new com.fsck.k9.message.html.HtmlSanitizer;

        specialinvoke r0.<com.fsck.k9.message.html.HtmlSanitizer: void <init>()>();

        $r1 = new com.fsck.k9.message.html.HtmlProcessor;

        specialinvoke $r1.<com.fsck.k9.message.html.HtmlProcessor: void <init>(com.fsck.k9.message.html.HtmlSanitizer)>(r0);

        return $r1;
    }
    public static java.lang.String toCompactString(org.jsoup.nodes.Document)
    {
        org.jsoup.nodes.Document $r0;
        org.jsoup.nodes.Document$OutputSettings $r1;
        java.lang.String $r2;

        $r0 := @parameter0: org.jsoup.nodes.Document;

        $r1 = virtualinvoke $r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Document$OutputSettings outputSettings()>();

        $r1 = virtualinvoke $r1.<org.jsoup.nodes.Document$OutputSettings: org.jsoup.nodes.Document$OutputSettings prettyPrint(boolean)>(0);

        virtualinvoke $r1.<org.jsoup.nodes.Document$OutputSettings: org.jsoup.nodes.Document$OutputSettings indentAmount(int)>(0);

        $r2 = virtualinvoke $r0.<org.jsoup.nodes.Document: java.lang.String html()>();

        return $r2;
    }
    public java.lang.String processForDisplay(java.lang.String)
    {
        com.fsck.k9.message.html.HtmlProcessor r0;
        java.lang.String $r1;
        com.fsck.k9.message.html.HtmlSanitizer $r2;
        org.jsoup.nodes.Document $r3;

        r0 := @this: com.fsck.k9.message.html.HtmlProcessor;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.fsck.k9.message.html.HtmlProcessor: com.fsck.k9.message.html.HtmlSanitizer htmlSanitizer>;

        $r3 = virtualinvoke $r2.<com.fsck.k9.message.html.HtmlSanitizer: org.jsoup.nodes.Document sanitize(java.lang.String)>($r1);

        specialinvoke r0.<com.fsck.k9.message.html.HtmlProcessor: void addCustomHeadContents(org.jsoup.nodes.Document)>($r3);

        $r1 = staticinvoke <com.fsck.k9.message.html.HtmlProcessor: java.lang.String toCompactString(org.jsoup.nodes.Document)>($r3);

        return $r1;
    }
