com.fsck.k9.message.html.HtmlSanitizer extends java.lang.Object
private final org.jsoup.safety.Cleaner cleaner
private final com.fsck.k9.message.html.HeadCleaner headCleaner
    void <init>()
    {
        com.fsck.k9.message.html.HtmlSanitizer r0;
        org.jsoup.safety.Whitelist $r1;
        java.lang.String[] $r2;
        org.jsoup.safety.Cleaner $r3;
        com.fsck.k9.message.html.HeadCleaner $r4;

        r0 := @this: com.fsck.k9.message.html.HtmlSanitizer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist relaxed()>();

        $r2 = newarray (java.lang.String)[4];

        $r2[0] = "font";

        $r2[1] = "hr";

        $r2[2] = "ins";

        $r2[3] = "del";

        $r1 = virtualinvoke $r1.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addTags(java.lang.String[])>($r2);

        $r2 = newarray (java.lang.String)[3];

        $r2[0] = "color";

        $r2[1] = "face";

        $r2[2] = "size";

        $r1 = virtualinvoke $r1.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("font", $r2);

        $r2 = newarray (java.lang.String)[7];

        $r2[0] = "align";

        $r2[1] = "background";

        $r2[2] = "bgcolor";

        $r2[3] = "border";

        $r2[4] = "cellpadding";

        $r2[5] = "cellspacing";

        $r2[6] = "width";

        $r1 = virtualinvoke $r1.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("table", $r2);

        $r2 = newarray (java.lang.String)[3];

        $r2[0] = "align";

        $r2[1] = "bgcolor";

        $r2[2] = "valign";

        $r1 = virtualinvoke $r1.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("tr", $r2);

        $r2 = newarray (java.lang.String)[11];

        $r2[0] = "align";

        $r2[1] = "bgcolor";

        $r2[2] = "colspan";

        $r2[3] = "headers";

        $r2[4] = "height";

        $r2[5] = "nowrap";

        $r2[6] = "rowspan";

        $r2[7] = "scope";

        $r2[8] = "sorted";

        $r2[9] = "valign";

        $r2[10] = "width";

        $r1 = virtualinvoke $r1.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("th", $r2);

        $r2 = newarray (java.lang.String)[10];

        $r2[0] = "align";

        $r2[1] = "bgcolor";

        $r2[2] = "colspan";

        $r2[3] = "headers";

        $r2[4] = "height";

        $r2[5] = "nowrap";

        $r2[6] = "rowspan";

        $r2[7] = "scope";

        $r2[8] = "valign";

        $r2[9] = "width";

        $r1 = virtualinvoke $r1.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("td", $r2);

        $r2 = newarray (java.lang.String)[3];

        $r2[0] = "class";

        $r2[1] = "style";

        $r2[2] = "id";

        $r1 = virtualinvoke $r1.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>(":all", $r2);

        $r2 = newarray (java.lang.String)[4];

        $r2[0] = "http";

        $r2[1] = "https";

        $r2[2] = "cid";

        $r2[3] = "data";

        $r1 = virtualinvoke $r1.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addProtocols(java.lang.String,java.lang.String,java.lang.String[])>("img", "src", $r2);

        $r3 = new org.jsoup.safety.Cleaner;

        specialinvoke $r3.<org.jsoup.safety.Cleaner: void <init>(org.jsoup.safety.Whitelist)>($r1);

        r0.<com.fsck.k9.message.html.HtmlSanitizer: org.jsoup.safety.Cleaner cleaner> = $r3;

        $r4 = new com.fsck.k9.message.html.HeadCleaner;

        specialinvoke $r4.<com.fsck.k9.message.html.HeadCleaner: void <init>()>();

        r0.<com.fsck.k9.message.html.HtmlSanitizer: com.fsck.k9.message.html.HeadCleaner headCleaner> = $r4;

        return;
    }
    public org.jsoup.nodes.Document sanitize(java.lang.String)
    {
        com.fsck.k9.message.html.HtmlSanitizer r0;
        java.lang.String $r1;
        org.jsoup.nodes.Document $r2, $r4;
        org.jsoup.safety.Cleaner $r3;
        com.fsck.k9.message.html.HeadCleaner $r5;

        r0 := @this: com.fsck.k9.message.html.HtmlSanitizer;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.jsoup.Jsoup: org.jsoup.nodes.Document parse(java.lang.String)>($r1);

        $r3 = r0.<com.fsck.k9.message.html.HtmlSanitizer: org.jsoup.safety.Cleaner cleaner>;

        $r4 = virtualinvoke $r3.<org.jsoup.safety.Cleaner: org.jsoup.nodes.Document clean(org.jsoup.nodes.Document)>($r2);

        $r5 = r0.<com.fsck.k9.message.html.HtmlSanitizer: com.fsck.k9.message.html.HeadCleaner headCleaner>;

        virtualinvoke $r5.<com.fsck.k9.message.html.HeadCleaner: void clean(org.jsoup.nodes.Document,org.jsoup.nodes.Document)>($r2, $r4);

        return $r4;
    }
