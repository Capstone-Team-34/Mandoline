com.fsck.k9.message.html.HeadCleaner extends java.lang.Object
private static final java.util.List ALLOWED_TAGS
    static void <clinit>()
    {
        java.util.List $r0;
        java.lang.String[] $r1;

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "style";

        $r1[1] = "meta";

        $r0 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        <com.fsck.k9.message.html.HeadCleaner: java.util.List ALLOWED_TAGS> = $r0;

        return;
    }
    void <init>()
    {
        com.fsck.k9.message.html.HeadCleaner r0;

        r0 := @this: com.fsck.k9.message.html.HeadCleaner;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    static java.util.List access$000()
    {
        java.util.List r0;

        r0 = <com.fsck.k9.message.html.HeadCleaner: java.util.List ALLOWED_TAGS>;

        return r0;
    }
    private void copySafeNodes(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        com.fsck.k9.message.html.HeadCleaner r0;
        org.jsoup.nodes.Element $r1, $r2;
        com.fsck.k9.message.html.HeadCleaner$CleaningVisitor r3;
        org.jsoup.select.NodeTraversor r4;

        r0 := @this: com.fsck.k9.message.html.HeadCleaner;

        $r1 := @parameter0: org.jsoup.nodes.Element;

        $r2 := @parameter1: org.jsoup.nodes.Element;

        r3 = new com.fsck.k9.message.html.HeadCleaner$CleaningVisitor;

        specialinvoke r3.<com.fsck.k9.message.html.HeadCleaner$CleaningVisitor: void <init>(org.jsoup.nodes.Element,org.jsoup.nodes.Element)>($r1, $r2);

        r4 = new org.jsoup.select.NodeTraversor;

        specialinvoke r4.<org.jsoup.select.NodeTraversor: void <init>(org.jsoup.select.NodeVisitor)>(r3);

        virtualinvoke r4.<org.jsoup.select.NodeTraversor: void traverse(org.jsoup.nodes.Node)>($r1);

        return;
    }
    public void clean(org.jsoup.nodes.Document, org.jsoup.nodes.Document)
    {
        com.fsck.k9.message.html.HeadCleaner r0;
        org.jsoup.nodes.Document $r1, $r2;
        org.jsoup.nodes.Element $r3, $r4;

        r0 := @this: com.fsck.k9.message.html.HeadCleaner;

        $r1 := @parameter0: org.jsoup.nodes.Document;

        $r2 := @parameter1: org.jsoup.nodes.Document;

        $r3 = virtualinvoke $r1.<org.jsoup.nodes.Document: org.jsoup.nodes.Element head()>();

        $r4 = virtualinvoke $r2.<org.jsoup.nodes.Document: org.jsoup.nodes.Element head()>();

        specialinvoke r0.<com.fsck.k9.message.html.HeadCleaner: void copySafeNodes(org.jsoup.nodes.Element,org.jsoup.nodes.Element)>($r3, $r4);

        return;
    }
