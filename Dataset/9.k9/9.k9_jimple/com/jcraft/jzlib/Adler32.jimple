com.jcraft.jzlib.Adler32 extends java.lang.Object
private static final int BASE
private static final int NMAX
    void <init>()
    {
        com.jcraft.jzlib.Adler32 r0;

        r0 := @this: com.jcraft.jzlib.Adler32;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    long adler32(long, byte[], int, int)
    {
        com.jcraft.jzlib.Adler32 r0;
        long $l0, l3, $l7;
        byte[] $r1;
        int i1, $i2, i4, i5;
        byte $b6;

        r0 := @this: com.jcraft.jzlib.Adler32;

        $l0 := @parameter0: long;

        $r1 := @parameter1: byte[];

        i1 := @parameter2: int;

        $i2 := @parameter3: int;

        if $r1 != null goto label1;

        return 1L;

     label1:
        l3 = $l0 & 65535L;

        $l0 = $l0 >> 16;

        $l0 = $l0 & 65535L;

     label2:
        if $i2 <= 0 goto label9;

        if $i2 >= 5552 goto label5;

        i4 = $i2;

     label3:
        $i2 = $i2 - i4;

     label4:
        if i4 < 16 goto label6;

        i5 = i1 + 1;

        $b6 = $r1[i1];

        i1 = $b6 & 255;

        $l7 = (long) i1;

        l3 = l3 + $l7;

        $l0 = $l0 + l3;

        i1 = i5 + 1;

        $b6 = $r1[i5];

        i5 = $b6 & 255;

        $l7 = (long) i5;

        l3 = l3 + $l7;

        $l0 = $l0 + l3;

        i5 = i1 + 1;

        $b6 = $r1[i1];

        i1 = $b6 & 255;

        $l7 = (long) i1;

        l3 = l3 + $l7;

        $l0 = $l0 + l3;

        i1 = i5 + 1;

        $b6 = $r1[i5];

        i5 = $b6 & 255;

        $l7 = (long) i5;

        l3 = l3 + $l7;

        $l0 = $l0 + l3;

        i5 = i1 + 1;

        $b6 = $r1[i1];

        i1 = $b6 & 255;

        $l7 = (long) i1;

        l3 = l3 + $l7;

        $l0 = $l0 + l3;

        i1 = i5 + 1;

        $b6 = $r1[i5];

        i5 = $b6 & 255;

        $l7 = (long) i5;

        l3 = l3 + $l7;

        $l0 = $l0 + l3;

        i5 = i1 + 1;

        $b6 = $r1[i1];

        i1 = $b6 & 255;

        $l7 = (long) i1;

        l3 = l3 + $l7;

        $l0 = $l0 + l3;

        i1 = i5 + 1;

        $b6 = $r1[i5];

        i5 = $b6 & 255;

        $l7 = (long) i5;

        l3 = l3 + $l7;

        $l0 = $l0 + l3;

        i5 = i1 + 1;

        $b6 = $r1[i1];

        i1 = $b6 & 255;

        $l7 = (long) i1;

        l3 = l3 + $l7;

        $l0 = $l0 + l3;

        i1 = i5 + 1;

        $b6 = $r1[i5];

        i5 = $b6 & 255;

        $l7 = (long) i5;

        l3 = l3 + $l7;

        $l0 = $l0 + l3;

        i5 = i1 + 1;

        $b6 = $r1[i1];

        i1 = $b6 & 255;

        $l7 = (long) i1;

        l3 = l3 + $l7;

        $l0 = $l0 + l3;

        i1 = i5 + 1;

        $b6 = $r1[i5];

        i5 = $b6 & 255;

        $l7 = (long) i5;

        l3 = l3 + $l7;

        $l0 = $l0 + l3;

        i5 = i1 + 1;

        $b6 = $r1[i1];

        i1 = $b6 & 255;

        $l7 = (long) i1;

        l3 = l3 + $l7;

        $l0 = $l0 + l3;

        i1 = i5 + 1;

        $b6 = $r1[i5];

        i5 = $b6 & 255;

        $l7 = (long) i5;

        l3 = l3 + $l7;

        $l0 = $l0 + l3;

        i5 = i1 + 1;

        $b6 = $r1[i1];

        i1 = $b6 & 255;

        $l7 = (long) i1;

        l3 = l3 + $l7;

        $l0 = $l0 + l3;

        i1 = i5 + 1;

        $b6 = $r1[i5];

        i5 = $b6 & 255;

        $l7 = (long) i5;

        l3 = l3 + $l7;

        $l0 = $l0 + l3;

        i4 = i4 + -16;

        goto label4;

     label5:
        i4 = 5552;

        goto label3;

     label6:
        if i4 == 0 goto label8;

     label7:
        i5 = i1;

        i1 = i1 + 1;

        $b6 = $r1[i5];

        i5 = $b6 & 255;

        $l7 = (long) i5;

        l3 = l3 + $l7;

        $l0 = $l0 + l3;

        i4 = i4 + -1;

        if i4 != 0 goto label7;

     label8:
        l3 = l3 % 65521L;

        $l0 = $l0 % 65521L;

        goto label2;

     label9:
        $l0 = $l0 << 16;

        $l0 = $l0 | l3;

        return $l0;
    }
