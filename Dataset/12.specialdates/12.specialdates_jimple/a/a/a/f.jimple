a.a.a.f extends java.lang.Object
    public static a.a.a.b.c a(java.io.InputStream)
    {
        java.io.InputStream $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        a.a.a.b.c $r2;
        java.lang.Throwable $r3;

        $r0 := @parameter0: java.io.InputStream;

     label1:
        $r1 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#process-namespaces", 0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>($r0, null);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int nextTag()>();

        $r2 = staticinvoke <a.a.a.f: a.a.a.b.c a(org.xmlpull.v1.XmlPullParser)>($r1);

     label2:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

        return $r2;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r0.<java.io.InputStream: void close()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    private static a.a.a.b.c a(org.xmlpull.v1.XmlPullParser)
    {
        org.xmlpull.v1.XmlPullParser $r0;
        a.a.a.b.c $r1;
        int $i0;
        java.lang.String $r2, $r3;
        boolean $z0;
        a.a.a.b.a $r4;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r1 = new a.a.a.b.c;

        specialinvoke $r1.<a.a.a.b.c: void <init>()>();

        interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, null, "notices");

     label1:
        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i0 == 3 goto label3;

        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i0 != 2 goto label1;

        $r2 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r3 = "notice";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <a.a.a.f: a.a.a.b.a b(org.xmlpull.v1.XmlPullParser)>($r0);

        virtualinvoke $r1.<a.a.a.b.c: void a(a.a.a.b.a)>($r4);

        goto label1;

     label2:
        staticinvoke <a.a.a.f: void h(org.xmlpull.v1.XmlPullParser)>($r0);

        goto label1;

     label3:
        return $r1;
    }
    private static java.lang.String a(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        org.xmlpull.v1.XmlPullParser $r0;
        java.lang.String $r1, $r2;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r1 := @parameter1: java.lang.String;

        interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, null, $r1);

        $r2 = staticinvoke <a.a.a.f: java.lang.String g(org.xmlpull.v1.XmlPullParser)>($r0);

        interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(3, null, $r1);

        return $r2;
    }
    private static a.a.a.b.a b(org.xmlpull.v1.XmlPullParser)
    {
        org.xmlpull.v1.XmlPullParser $r0;
        a.a.a.a.f $r1;
        java.lang.String $r2, $r3, $r4, $r5, $r6;
        int $i0;
        boolean $z0;
        a.a.a.b.a $r7;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r1 = null;

        interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, null, "notice");

        $r2 = null;

        $r3 = null;

        $r4 = null;

     label1:
        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i0 == 3 goto label6;

        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i0 != 2 goto label1;

        $r5 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r6 = "name";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <a.a.a.f: java.lang.String c(org.xmlpull.v1.XmlPullParser)>($r0);

        goto label1;

     label2:
        $r6 = "url";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label3;

        $r3 = staticinvoke <a.a.a.f: java.lang.String d(org.xmlpull.v1.XmlPullParser)>($r0);

        goto label1;

     label3:
        $r6 = "copyright";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label4;

        $r2 = staticinvoke <a.a.a.f: java.lang.String e(org.xmlpull.v1.XmlPullParser)>($r0);

        goto label1;

     label4:
        $r6 = "license";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label5;

        $r1 = staticinvoke <a.a.a.f: a.a.a.a.f f(org.xmlpull.v1.XmlPullParser)>($r0);

        goto label1;

     label5:
        staticinvoke <a.a.a.f: void h(org.xmlpull.v1.XmlPullParser)>($r0);

        goto label1;

     label6:
        $r7 = new a.a.a.b.a;

        specialinvoke $r7.<a.a.a.b.a: void <init>(java.lang.String,java.lang.String,java.lang.String,a.a.a.a.f)>($r4, $r3, $r2, $r1);

        return $r7;
    }
    private static java.lang.String c(org.xmlpull.v1.XmlPullParser)
    {
        org.xmlpull.v1.XmlPullParser $r0;
        java.lang.String $r1;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r1 = staticinvoke <a.a.a.f: java.lang.String a(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r0, "name");

        return $r1;
    }
    private static java.lang.String d(org.xmlpull.v1.XmlPullParser)
    {
        org.xmlpull.v1.XmlPullParser $r0;
        java.lang.String $r1;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r1 = staticinvoke <a.a.a.f: java.lang.String a(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r0, "url");

        return $r1;
    }
    private static java.lang.String e(org.xmlpull.v1.XmlPullParser)
    {
        org.xmlpull.v1.XmlPullParser $r0;
        java.lang.String $r1;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r1 = staticinvoke <a.a.a.f: java.lang.String a(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r0, "copyright");

        return $r1;
    }
    private static a.a.a.a.f f(org.xmlpull.v1.XmlPullParser)
    {
        org.xmlpull.v1.XmlPullParser $r0;
        java.lang.String $r1;
        a.a.a.a.f $r2;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r1 = staticinvoke <a.a.a.f: java.lang.String a(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r0, "license");

        $r2 = staticinvoke <a.a.a.a: a.a.a.a.f a(java.lang.String)>($r1);

        return $r2;
    }
    private static java.lang.String g(org.xmlpull.v1.XmlPullParser)
    {
        org.xmlpull.v1.XmlPullParser $r0;
        int $i0;
        java.lang.String $r1;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i0 != 4 goto label1;

        $r1 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int nextTag()>();

        return $r1;

     label1:
        return "";
    }
    private static void h(org.xmlpull.v1.XmlPullParser)
    {
        org.xmlpull.v1.XmlPullParser $r0;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        return;
    }
