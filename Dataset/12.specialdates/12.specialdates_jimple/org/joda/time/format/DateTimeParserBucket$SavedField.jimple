org.joda.time.format.DateTimeParserBucket$SavedField extends java.lang.Object implements java.lang.Comparable
org.joda.time.DateTimeField iField
java.util.Locale iLocale
java.lang.String iText
int iValue
    void <init>()
    {
        org.joda.time.format.DateTimeParserBucket$SavedField r0;

        r0 := @this: org.joda.time.format.DateTimeParserBucket$SavedField;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public volatile int compareTo(java.lang.Object)
    {
        org.joda.time.format.DateTimeParserBucket$SavedField r0, $r2;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: org.joda.time.format.DateTimeParserBucket$SavedField;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (org.joda.time.format.DateTimeParserBucket$SavedField) $r1;

        $i0 = virtualinvoke r0.<org.joda.time.format.DateTimeParserBucket$SavedField: int compareTo(org.joda.time.format.DateTimeParserBucket$SavedField)>($r2);

        return $i0;
    }
    public int compareTo(org.joda.time.format.DateTimeParserBucket$SavedField)
    {
        org.joda.time.format.DateTimeParserBucket$SavedField r0, $r1;
        org.joda.time.DateTimeField $r2, $r3;
        org.joda.time.DurationField $r4, $r5;
        int $i0;

        r0 := @this: org.joda.time.format.DateTimeParserBucket$SavedField;

        $r1 := @parameter0: org.joda.time.format.DateTimeParserBucket$SavedField;

        $r2 = $r1.<org.joda.time.format.DateTimeParserBucket$SavedField: org.joda.time.DateTimeField iField>;

        $r3 = r0.<org.joda.time.format.DateTimeParserBucket$SavedField: org.joda.time.DateTimeField iField>;

        $r4 = virtualinvoke $r3.<org.joda.time.DateTimeField: org.joda.time.DurationField getRangeDurationField()>();

        $r5 = virtualinvoke $r2.<org.joda.time.DateTimeField: org.joda.time.DurationField getRangeDurationField()>();

        $i0 = staticinvoke <org.joda.time.format.DateTimeParserBucket: int compareReverse(org.joda.time.DurationField,org.joda.time.DurationField)>($r4, $r5);

        if $i0 == 0 goto label1;

        return $i0;

     label1:
        $r3 = r0.<org.joda.time.format.DateTimeParserBucket$SavedField: org.joda.time.DateTimeField iField>;

        $r4 = virtualinvoke $r3.<org.joda.time.DateTimeField: org.joda.time.DurationField getDurationField()>();

        $r5 = virtualinvoke $r2.<org.joda.time.DateTimeField: org.joda.time.DurationField getDurationField()>();

        $i0 = staticinvoke <org.joda.time.format.DateTimeParserBucket: int compareReverse(org.joda.time.DurationField,org.joda.time.DurationField)>($r4, $r5);

        return $i0;
    }
    void init(org.joda.time.DateTimeField, int)
    {
        org.joda.time.format.DateTimeParserBucket$SavedField r0;
        org.joda.time.DateTimeField $r1;
        int $i0;

        r0 := @this: org.joda.time.format.DateTimeParserBucket$SavedField;

        $r1 := @parameter0: org.joda.time.DateTimeField;

        $i0 := @parameter1: int;

        r0.<org.joda.time.format.DateTimeParserBucket$SavedField: org.joda.time.DateTimeField iField> = $r1;

        r0.<org.joda.time.format.DateTimeParserBucket$SavedField: int iValue> = $i0;

        r0.<org.joda.time.format.DateTimeParserBucket$SavedField: java.lang.String iText> = null;

        r0.<org.joda.time.format.DateTimeParserBucket$SavedField: java.util.Locale iLocale> = null;

        return;
    }
    void init(org.joda.time.DateTimeField, java.lang.String, java.util.Locale)
    {
        org.joda.time.format.DateTimeParserBucket$SavedField r0;
        org.joda.time.DateTimeField $r1;
        java.lang.String $r2;
        java.util.Locale $r3;

        r0 := @this: org.joda.time.format.DateTimeParserBucket$SavedField;

        $r1 := @parameter0: org.joda.time.DateTimeField;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.util.Locale;

        r0.<org.joda.time.format.DateTimeParserBucket$SavedField: org.joda.time.DateTimeField iField> = $r1;

        r0.<org.joda.time.format.DateTimeParserBucket$SavedField: int iValue> = 0;

        r0.<org.joda.time.format.DateTimeParserBucket$SavedField: java.lang.String iText> = $r2;

        r0.<org.joda.time.format.DateTimeParserBucket$SavedField: java.util.Locale iLocale> = $r3;

        return;
    }
    long set(long, boolean)
    {
        org.joda.time.format.DateTimeParserBucket$SavedField r0;
        long $l0;
        boolean $z0;
        java.lang.String $r1;
        org.joda.time.DateTimeField $r2;
        int $i1;
        java.util.Locale $r3;

        r0 := @this: org.joda.time.format.DateTimeParserBucket$SavedField;

        $l0 := @parameter0: long;

        $z0 := @parameter1: boolean;

        $r1 = r0.<org.joda.time.format.DateTimeParserBucket$SavedField: java.lang.String iText>;

        if $r1 != null goto label2;

        $r2 = r0.<org.joda.time.format.DateTimeParserBucket$SavedField: org.joda.time.DateTimeField iField>;

        $i1 = r0.<org.joda.time.format.DateTimeParserBucket$SavedField: int iValue>;

        $l0 = virtualinvoke $r2.<org.joda.time.DateTimeField: long set(long,int)>($l0, $i1);

     label1:
        if $z0 == 0 goto label3;

        $r2 = r0.<org.joda.time.format.DateTimeParserBucket$SavedField: org.joda.time.DateTimeField iField>;

        $l0 = virtualinvoke $r2.<org.joda.time.DateTimeField: long roundFloor(long)>($l0);

        return $l0;

     label2:
        $r2 = r0.<org.joda.time.format.DateTimeParserBucket$SavedField: org.joda.time.DateTimeField iField>;

        $r1 = r0.<org.joda.time.format.DateTimeParserBucket$SavedField: java.lang.String iText>;

        $r3 = r0.<org.joda.time.format.DateTimeParserBucket$SavedField: java.util.Locale iLocale>;

        $l0 = virtualinvoke $r2.<org.joda.time.DateTimeField: long set(long,java.lang.String,java.util.Locale)>($l0, $r1, $r3);

        goto label1;

     label3:
        return $l0;
    }
