org.joda.time.format.PeriodFormatterBuilder$Composite extends java.lang.Object implements org.joda.time.format.PeriodParser org.joda.time.format.PeriodPrinter
private final org.joda.time.format.PeriodParser[] iParsers
private final org.joda.time.format.PeriodPrinter[] iPrinters
    void <init>(java.util.List)
    {
        org.joda.time.format.PeriodFormatterBuilder$Composite r0;
        java.util.List $r1;
        java.util.ArrayList $r2, $r3;
        int $i0;
        org.joda.time.format.PeriodPrinter[] $r4;
        java.lang.Object[] $r5;
        org.joda.time.format.PeriodParser[] $r6;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$Composite;

        $r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$Composite: void decompose(java.util.List,java.util.List,java.util.List)>($r1, $r3, $r2);

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 > 0 goto label2;

        r0.<org.joda.time.format.PeriodFormatterBuilder$Composite: org.joda.time.format.PeriodPrinter[] iPrinters> = null;

     label1:
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 > 0 goto label3;

        r0.<org.joda.time.format.PeriodFormatterBuilder$Composite: org.joda.time.format.PeriodParser[] iParsers> = null;

        return;

     label2:
        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r4 = newarray (org.joda.time.format.PeriodPrinter)[$i0];

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r4 = (org.joda.time.format.PeriodPrinter[]) $r5;

        r0.<org.joda.time.format.PeriodFormatterBuilder$Composite: org.joda.time.format.PeriodPrinter[] iPrinters> = $r4;

        goto label1;

     label3:
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r6 = newarray (org.joda.time.format.PeriodParser)[$i0];

        $r5 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r6 = (org.joda.time.format.PeriodParser[]) $r5;

        r0.<org.joda.time.format.PeriodFormatterBuilder$Composite: org.joda.time.format.PeriodParser[] iParsers> = $r6;

        return;
    }
    private void addArrayToList(java.util.List, java.lang.Object[])
    {
        org.joda.time.format.PeriodFormatterBuilder$Composite r0;
        java.util.List $r1;
        java.lang.Object[] $r2;
        int $i0, $i1;
        java.lang.Object $r3;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$Composite;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.lang.Object[];

        if $r2 == null goto label2;

        $i0 = 0;

     label1:
        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label2;

        $r3 = $r2[$i0];

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }
    private void decompose(java.util.List, java.util.List, java.util.List)
    {
        org.joda.time.format.PeriodFormatterBuilder$Composite r0, $r5;
        java.util.List $r1, $r2, $r3;
        int $i0, $i1, $i2;
        java.lang.Object $r4;
        boolean $z0;
        org.joda.time.format.PeriodPrinter[] $r6;
        org.joda.time.format.PeriodParser[] $r7;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$Composite;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.util.List;

        $r3 := @parameter2: java.util.List;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label6;

        $r4 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $z0 = $r4 instanceof org.joda.time.format.PeriodPrinter;

        if $z0 == 0 goto label2;

        $z0 = $r4 instanceof org.joda.time.format.PeriodFormatterBuilder$Composite;

        if $z0 == 0 goto label4;

        $r5 = (org.joda.time.format.PeriodFormatterBuilder$Composite) $r4;

        $r6 = $r5.<org.joda.time.format.PeriodFormatterBuilder$Composite: org.joda.time.format.PeriodPrinter[] iPrinters>;

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$Composite: void addArrayToList(java.util.List,java.lang.Object[])>($r2, $r6);

     label2:
        $i2 = $i1 + 1;

        $r4 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i2);

        $z0 = $r4 instanceof org.joda.time.format.PeriodParser;

        if $z0 == 0 goto label3;

        $z0 = $r4 instanceof org.joda.time.format.PeriodFormatterBuilder$Composite;

        if $z0 == 0 goto label5;

        $r5 = (org.joda.time.format.PeriodFormatterBuilder$Composite) $r4;

        $r7 = $r5.<org.joda.time.format.PeriodFormatterBuilder$Composite: org.joda.time.format.PeriodParser[] iParsers>;

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$Composite: void addArrayToList(java.util.List,java.lang.Object[])>($r3, $r7);

     label3:
        $i1 = $i1 + 2;

        goto label1;

     label4:
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label2;

     label5:
        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label3;

     label6:
        return;
    }
    public int calculatePrintedLength(org.joda.time.ReadablePeriod, java.util.Locale)
    {
        org.joda.time.format.PeriodFormatterBuilder$Composite r0;
        org.joda.time.ReadablePeriod $r1;
        java.util.Locale $r2;
        org.joda.time.format.PeriodPrinter[] $r3;
        int $i0, $i1, $i2;
        org.joda.time.format.PeriodPrinter $r4;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$Composite;

        $r1 := @parameter0: org.joda.time.ReadablePeriod;

        $r2 := @parameter1: java.util.Locale;

        $i1 = 0;

        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$Composite: org.joda.time.format.PeriodPrinter[] iPrinters>;

        $i2 = lengthof $r3;

     label1:
        $i2 = $i2 + -1;

        if $i2 < 0 goto label2;

        $r4 = $r3[$i2];

        $i0 = interfaceinvoke $r4.<org.joda.time.format.PeriodPrinter: int calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)>($r1, $r2);

        $i1 = $i1 + $i0;

        goto label1;

     label2:
        return $i1;
    }
    public int countFieldsToPrint(org.joda.time.ReadablePeriod, int, java.util.Locale)
    {
        org.joda.time.format.PeriodFormatterBuilder$Composite r0;
        org.joda.time.ReadablePeriod $r1;
        int $i0, $i1, $i2, $i3;
        java.util.Locale $r2;
        org.joda.time.format.PeriodPrinter[] $r3;
        org.joda.time.format.PeriodPrinter $r4;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$Composite;

        $r1 := @parameter0: org.joda.time.ReadablePeriod;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.util.Locale;

        $i2 = 0;

        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$Composite: org.joda.time.format.PeriodPrinter[] iPrinters>;

        $i3 = lengthof $r3;

     label1:
        if $i2 >= $i0 goto label2;

        $i3 = $i3 + -1;

        if $i3 < 0 goto label2;

        $r4 = $r3[$i3];

        $i1 = interfaceinvoke $r4.<org.joda.time.format.PeriodPrinter: int countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)>($r1, 2147483647, $r2);

        $i2 = $i2 + $i1;

        goto label1;

     label2:
        return $i2;
    }
    public int parseInto(org.joda.time.ReadWritablePeriod, java.lang.String, int, java.util.Locale)
    {
        org.joda.time.format.PeriodFormatterBuilder$Composite r0;
        org.joda.time.ReadWritablePeriod $r1;
        java.lang.String $r2;
        java.util.Locale $r3;
        org.joda.time.format.PeriodParser[] $r4;
        int $i0, $i1, $i2;
        org.joda.time.format.PeriodParser $r5;
        java.lang.UnsupportedOperationException $r6;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$Composite;

        $r1 := @parameter0: org.joda.time.ReadWritablePeriod;

        $r2 := @parameter1: java.lang.String;

        $i1 := @parameter2: int;

        $r3 := @parameter3: java.util.Locale;

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$Composite: org.joda.time.format.PeriodParser[] iParsers>;

        if $r4 != null goto label1;

        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r6;

     label1:
        $i0 = lengthof $r4;

        $i2 = 0;

     label2:
        if $i2 >= $i0 goto label3;

        if $i1 < 0 goto label3;

        $r5 = $r4[$i2];

        $i1 = interfaceinvoke $r5.<org.joda.time.format.PeriodParser: int parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)>($r1, $r2, $i1, $r3);

        $i2 = $i2 + 1;

        goto label2;

     label3:
        return $i1;
    }
    public void printTo(java.io.Writer, org.joda.time.ReadablePeriod, java.util.Locale)
    {
        org.joda.time.format.PeriodFormatterBuilder$Composite r0;
        java.io.Writer $r1;
        org.joda.time.ReadablePeriod $r2;
        java.util.Locale $r3;
        org.joda.time.format.PeriodPrinter[] $r4;
        int $i0, $i1;
        org.joda.time.format.PeriodPrinter $r5;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$Composite;

        $r1 := @parameter0: java.io.Writer;

        $r2 := @parameter1: org.joda.time.ReadablePeriod;

        $r3 := @parameter2: java.util.Locale;

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$Composite: org.joda.time.format.PeriodPrinter[] iPrinters>;

        $i0 = lengthof $r4;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r5 = $r4[$i1];

        interfaceinvoke $r5.<org.joda.time.format.PeriodPrinter: void printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)>($r1, $r2, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }
    public void printTo(java.lang.StringBuffer, org.joda.time.ReadablePeriod, java.util.Locale)
    {
        org.joda.time.format.PeriodFormatterBuilder$Composite r0;
        java.lang.StringBuffer $r1;
        org.joda.time.ReadablePeriod $r2;
        java.util.Locale $r3;
        org.joda.time.format.PeriodPrinter[] $r4;
        int $i0, $i1;
        org.joda.time.format.PeriodPrinter $r5;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$Composite;

        $r1 := @parameter0: java.lang.StringBuffer;

        $r2 := @parameter1: org.joda.time.ReadablePeriod;

        $r3 := @parameter2: java.util.Locale;

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$Composite: org.joda.time.format.PeriodPrinter[] iPrinters>;

        $i0 = lengthof $r4;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r5 = $r4[$i1];

        interfaceinvoke $r5.<org.joda.time.format.PeriodPrinter: void printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)>($r1, $r2, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }
