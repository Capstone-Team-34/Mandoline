org.joda.time.format.PeriodFormatterBuilder$PluralAffix extends org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix
private final java.lang.String iPluralText
private final java.lang.String iSingularText
    void <init>(java.lang.String, java.lang.String)
    {
        org.joda.time.format.PeriodFormatterBuilder$PluralAffix r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$PluralAffix;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix: void <init>()>();

        r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iSingularText> = $r1;

        r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iPluralText> = $r2;

        return;
    }
    public int calculatePrintedLength(int)
    {
        org.joda.time.format.PeriodFormatterBuilder$PluralAffix r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$PluralAffix;

        $i0 := @parameter0: int;

        if $i0 != 1 goto label2;

        $r1 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iSingularText>;

     label1:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        return $i0;

     label2:
        $r1 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iPluralText>;

        goto label1;
    }
    public java.lang.String[] getAffixes()
    {
        org.joda.time.format.PeriodFormatterBuilder$PluralAffix r0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$PluralAffix;

        $r1 = newarray (java.lang.String)[2];

        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iSingularText>;

        $r1[0] = $r2;

        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iPluralText>;

        $r1[1] = $r2;

        return $r1;
    }
    public int parse(java.lang.String, int)
    {
        org.joda.time.format.PeriodFormatterBuilder$PluralAffix r0;
        java.lang.String $r1, $r2, $r3, $r4;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$PluralAffix;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iPluralText>;

        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iSingularText>;

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label4;

        $r4 = $r2;

        $r2 = $r3;

     label1:
        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, $i0, $r2, 0, $i1);

        if $z0 == 0 goto label2;

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $z0 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: boolean matchesOtherAffix(int,java.lang.String,int)>($i1, $r1, $i0);

        if $z0 != 0 goto label2;

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i1 + $i0;

        return $i0;

     label2:
        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, $i0, $r4, 0, $i1);

        if $z0 == 0 goto label3;

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        $z0 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: boolean matchesOtherAffix(int,java.lang.String,int)>($i1, $r1, $i0);

        if $z0 != 0 goto label3;

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i0 = $i1 + $i0;

        return $i0;

     label3:
        $i0 = $i0 ^ -1;

        return $i0;

     label4:
        $r4 = $r3;

        goto label1;
    }
    public void printTo(java.io.Writer, int)
    {
        org.joda.time.format.PeriodFormatterBuilder$PluralAffix r0;
        java.io.Writer $r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$PluralAffix;

        $r1 := @parameter0: java.io.Writer;

        $i0 := @parameter1: int;

        if $i0 != 1 goto label2;

        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iSingularText>;

     label1:
        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>($r2);

        return;

     label2:
        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iPluralText>;

        goto label1;
    }
    public void printTo(java.lang.StringBuffer, int)
    {
        org.joda.time.format.PeriodFormatterBuilder$PluralAffix r0;
        java.lang.StringBuffer $r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$PluralAffix;

        $r1 := @parameter0: java.lang.StringBuffer;

        $i0 := @parameter1: int;

        if $i0 != 1 goto label2;

        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iSingularText>;

     label1:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        return;

     label2:
        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iPluralText>;

        goto label1;
    }
    public int scan(java.lang.String, int)
    {
        org.joda.time.format.PeriodFormatterBuilder$PluralAffix r0;
        java.lang.String $r1, $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$PluralAffix;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iPluralText>;

        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iSingularText>;

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label6;

        $r4 = $r3;

     label1:
        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i3 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i4 = $i0;

     label2:
        if $i4 >= $i3 goto label5;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, $i4, $r4, 0, $i1);

        if $z0 == 0 goto label3;

        $i5 = virtualinvoke $r4.<java.lang.String: int length()>();

        $z0 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: boolean matchesOtherAffix(int,java.lang.String,int)>($i5, $r1, $i4);

        if $z0 != 0 goto label3;

        return $i4;

     label3:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, $i4, $r2, 0, $i2);

        if $z0 == 0 goto label4;

        $i5 = virtualinvoke $r2.<java.lang.String: int length()>();

        $z0 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: boolean matchesOtherAffix(int,java.lang.String,int)>($i5, $r1, $i4);

        if $z0 == 0 goto label7;

     label4:
        $i4 = $i4 + 1;

        goto label2;

     label5:
        $i0 = $i0 ^ -1;

        return $i0;

     label6:
        $r4 = $r2;

        $r2 = $r3;

        goto label1;

     label7:
        return $i4;
    }
