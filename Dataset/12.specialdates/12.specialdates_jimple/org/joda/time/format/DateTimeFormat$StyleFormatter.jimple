org.joda.time.format.DateTimeFormat$StyleFormatter extends java.lang.Object implements org.joda.time.format.InternalParser org.joda.time.format.InternalPrinter
private static final java.util.concurrent.ConcurrentHashMap cCache
private final int iDateStyle
private final int iTimeStyle
private final int iType
    static void <clinit>()
    {
        java.util.concurrent.ConcurrentHashMap $r0;

        $r0 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <org.joda.time.format.DateTimeFormat$StyleFormatter: java.util.concurrent.ConcurrentHashMap cCache> = $r0;

        return;
    }
    void <init>(int, int, int)
    {
        org.joda.time.format.DateTimeFormat$StyleFormatter r0;
        int $i0, $i1, $i2;

        r0 := @this: org.joda.time.format.DateTimeFormat$StyleFormatter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iDateStyle> = $i0;

        r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iTimeStyle> = $i1;

        r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iType> = $i2;

        return;
    }
    private org.joda.time.format.DateTimeFormatter getFormatter(java.util.Locale)
    {
        org.joda.time.format.DateTimeFormat$StyleFormatter r0;
        org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey $r1;
        int $i0, $i1, $i2;
        java.util.Locale $r2;
        java.util.concurrent.ConcurrentHashMap $r3;
        java.lang.Object $r4;
        org.joda.time.format.DateTimeFormatter $r5, $r7;
        java.lang.String $r6;

        r0 := @this: org.joda.time.format.DateTimeFormat$StyleFormatter;

        $r2 := @parameter0: java.util.Locale;

        if $r2 != null goto label1;

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

     label1:
        $r1 = new org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey;

        $i1 = r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iType>;

        $i2 = r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iDateStyle>;

        $i0 = r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iTimeStyle>;

        specialinvoke $r1.<org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey: void <init>(int,int,int,java.util.Locale)>($i1, $i2, $i0, $r2);

        $r3 = <org.joda.time.format.DateTimeFormat$StyleFormatter: java.util.concurrent.ConcurrentHashMap cCache>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (org.joda.time.format.DateTimeFormatter) $r4;

        if $r5 != null goto label2;

        $r6 = virtualinvoke r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: java.lang.String getPattern(java.util.Locale)>($r2);

        $r5 = staticinvoke <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forPattern(java.lang.String)>($r6);

        $r3 = <org.joda.time.format.DateTimeFormat$StyleFormatter: java.util.concurrent.ConcurrentHashMap cCache>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($r1, $r5);

        $r7 = (org.joda.time.format.DateTimeFormatter) $r4;

        if $r7 == null goto label2;

        return $r7;

     label2:
        return $r5;
    }
    public int estimateParsedLength()
    {
        org.joda.time.format.DateTimeFormat$StyleFormatter r0;

        r0 := @this: org.joda.time.format.DateTimeFormat$StyleFormatter;

        return 40;
    }
    public int estimatePrintedLength()
    {
        org.joda.time.format.DateTimeFormat$StyleFormatter r0;

        r0 := @this: org.joda.time.format.DateTimeFormat$StyleFormatter;

        return 40;
    }
    java.lang.String getPattern(java.util.Locale)
    {
        org.joda.time.format.DateTimeFormat$StyleFormatter r0;
        java.util.Locale $r1;
        java.text.DateFormat $r2;
        int $i0, $i1;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        java.text.SimpleDateFormat $r6;

        r0 := @this: org.joda.time.format.DateTimeFormat$StyleFormatter;

        $r1 := @parameter0: java.util.Locale;

        $r2 = null;

        $i0 = r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iType>;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            default: goto label1;
        };

     label1:
        $z0 = $r2 instanceof java.text.SimpleDateFormat;

        if $z0 != 0 goto label5;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No datetime pattern for locale: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label2:
        $i0 = r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iDateStyle>;

        $r2 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>($i0, $r1);

        goto label1;

     label3:
        $i0 = r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iTimeStyle>;

        $r2 = staticinvoke <java.text.DateFormat: java.text.DateFormat getTimeInstance(int,java.util.Locale)>($i0, $r1);

        goto label1;

     label4:
        $i0 = r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iDateStyle>;

        $i1 = r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iTimeStyle>;

        $r2 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)>($i0, $i1, $r1);

        goto label1;

     label5:
        $r6 = (java.text.SimpleDateFormat) $r2;

        $r5 = virtualinvoke $r6.<java.text.SimpleDateFormat: java.lang.String toPattern()>();

        return $r5;
    }
    public int parseInto(org.joda.time.format.DateTimeParserBucket, java.lang.CharSequence, int)
    {
        org.joda.time.format.DateTimeFormat$StyleFormatter r0;
        org.joda.time.format.DateTimeParserBucket $r1;
        java.lang.CharSequence $r2;
        int $i0;
        java.util.Locale $r3;
        org.joda.time.format.DateTimeFormatter $r4;
        org.joda.time.format.InternalParser $r5;

        r0 := @this: org.joda.time.format.DateTimeFormat$StyleFormatter;

        $r1 := @parameter0: org.joda.time.format.DateTimeParserBucket;

        $r2 := @parameter1: java.lang.CharSequence;

        $i0 := @parameter2: int;

        $r3 = virtualinvoke $r1.<org.joda.time.format.DateTimeParserBucket: java.util.Locale getLocale()>();

        $r4 = specialinvoke r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: org.joda.time.format.DateTimeFormatter getFormatter(java.util.Locale)>($r3);

        $r5 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.InternalParser getParser0()>();

        $i0 = interfaceinvoke $r5.<org.joda.time.format.InternalParser: int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)>($r1, $r2, $i0);

        return $i0;
    }
    public void printTo(java.lang.Appendable, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale)
    {
        org.joda.time.format.DateTimeFormat$StyleFormatter r0;
        java.lang.Appendable $r1;
        long $l0;
        org.joda.time.Chronology $r2;
        int $i1;
        org.joda.time.DateTimeZone $r3;
        java.util.Locale $r4;
        org.joda.time.format.DateTimeFormatter $r5;
        org.joda.time.format.InternalPrinter $r6;

        r0 := @this: org.joda.time.format.DateTimeFormat$StyleFormatter;

        $r1 := @parameter0: java.lang.Appendable;

        $l0 := @parameter1: long;

        $r2 := @parameter2: org.joda.time.Chronology;

        $i1 := @parameter3: int;

        $r3 := @parameter4: org.joda.time.DateTimeZone;

        $r4 := @parameter5: java.util.Locale;

        $r5 = specialinvoke r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: org.joda.time.format.DateTimeFormatter getFormatter(java.util.Locale)>($r4);

        $r6 = virtualinvoke $r5.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.InternalPrinter getPrinter0()>();

        interfaceinvoke $r6.<org.joda.time.format.InternalPrinter: void printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)>($r1, $l0, $r2, $i1, $r3, $r4);

        return;
    }
    public void printTo(java.lang.Appendable, org.joda.time.ReadablePartial, java.util.Locale)
    {
        org.joda.time.format.DateTimeFormat$StyleFormatter r0;
        java.lang.Appendable $r1;
        org.joda.time.ReadablePartial $r2;
        java.util.Locale $r3;
        org.joda.time.format.DateTimeFormatter $r4;
        org.joda.time.format.InternalPrinter $r5;

        r0 := @this: org.joda.time.format.DateTimeFormat$StyleFormatter;

        $r1 := @parameter0: java.lang.Appendable;

        $r2 := @parameter1: org.joda.time.ReadablePartial;

        $r3 := @parameter2: java.util.Locale;

        $r4 = specialinvoke r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: org.joda.time.format.DateTimeFormatter getFormatter(java.util.Locale)>($r3);

        $r5 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.InternalPrinter getPrinter0()>();

        interfaceinvoke $r5.<org.joda.time.format.InternalPrinter: void printTo(java.lang.Appendable,org.joda.time.ReadablePartial,java.util.Locale)>($r1, $r2, $r3);

        return;
    }
