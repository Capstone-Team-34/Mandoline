org.joda.time.format.PeriodFormatterBuilder extends java.lang.Object
private static final int DAYS
private static final int HOURS
private static final int MAX_FIELD
private static final int MILLIS
private static final int MINUTES
private static final int MONTHS
private static final java.util.concurrent.ConcurrentMap PATTERNS
private static final int PRINT_ZERO_ALWAYS
private static final int PRINT_ZERO_IF_SUPPORTED
private static final int PRINT_ZERO_NEVER
private static final int PRINT_ZERO_RARELY_FIRST
private static final int PRINT_ZERO_RARELY_LAST
private static final int SECONDS
private static final int SECONDS_MILLIS
private static final int SECONDS_OPTIONAL_MILLIS
private static final int WEEKS
private static final int YEARS
private java.util.List iElementPairs
private org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters
private int iMaxParsedDigits
private int iMinPrintedDigits
private boolean iNotParser
private boolean iNotPrinter
private org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix
private int iPrintZeroSetting
private boolean iRejectSignedValues
    static void <clinit>()
    {
        java.util.concurrent.ConcurrentHashMap $r0;

        $r0 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <org.joda.time.format.PeriodFormatterBuilder: java.util.concurrent.ConcurrentMap PATTERNS> = $r0;

        return;
    }
    public void <init>()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void clear()>();

        return;
    }
    static java.util.concurrent.ConcurrentMap access$200()
    {
        java.util.concurrent.ConcurrentMap r0;

        r0 = <org.joda.time.format.PeriodFormatterBuilder: java.util.concurrent.ConcurrentMap PATTERNS>;

        return r0;
    }
    private org.joda.time.format.PeriodFormatterBuilder append0(org.joda.time.format.PeriodPrinter, org.joda.time.format.PeriodParser)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        org.joda.time.format.PeriodPrinter $r1;
        org.joda.time.format.PeriodParser $r2;
        boolean $z0, $z1, $z2;
        java.util.List $r3;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        $r1 := @parameter0: org.joda.time.format.PeriodPrinter;

        $r2 := @parameter1: org.joda.time.format.PeriodParser;

        $z1 = 1;

        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        $z0 = r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotPrinter>;

        if $r1 != null goto label3;

        $z2 = 1;

     label1:
        $z0 = $z2 | $z0;

        r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotPrinter> = $z0;

        $z0 = r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotParser>;

        if $r2 != null goto label4;

     label2:
        $z1 = $z0 | $z1;

        r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotParser> = $z1;

        return r0;

     label3:
        $z2 = 0;

        goto label1;

     label4:
        $z1 = 0;

        goto label2;
    }
    private void appendField(int)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        int $i0, $i1;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        $i0 := @parameter0: int;

        $i1 = r0.<org.joda.time.format.PeriodFormatterBuilder: int iMinPrintedDigits>;

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int,int)>($i0, $i1);

        return;
    }
    private void appendField(int, int)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        int $i0, $i1, $i2, $i3;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter $r1;
        boolean $z0;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] $r2;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r3;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = new org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        $i2 = r0.<org.joda.time.format.PeriodFormatterBuilder: int iPrintZeroSetting>;

        $i3 = r0.<org.joda.time.format.PeriodFormatterBuilder: int iMaxParsedDigits>;

        $z0 = r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iRejectSignedValues>;

        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters>;

        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        specialinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void <init>(int,int,int,boolean,int,org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[],org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix,org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)>($i1, $i2, $i3, $z0, $i0, $r2, $r3, null);

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>($r1, $r1);

        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters>;

        $r2[$i0] = $r1;

        r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix> = null;

        return;
    }
    private org.joda.time.format.PeriodFormatterBuilder appendPrefix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r1, $r2;
        java.lang.IllegalArgumentException $r3;
        org.joda.time.format.PeriodFormatterBuilder$CompositeAffix $r4;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        $r2 := @parameter0: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix;

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label1:
        $r1 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        if $r1 == null goto label2;

        $r4 = new org.joda.time.format.PeriodFormatterBuilder$CompositeAffix;

        $r1 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        specialinvoke $r4.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: void <init>(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix,org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)>($r1, $r2);

        $r2 = $r4;

     label2:
        r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix> = $r2;

        return r0;
    }
    private org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String, java.lang.String, java.lang.String[], boolean, boolean)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        java.lang.String $r1, $r2;
        java.lang.String[] $r3;
        boolean $z0, $z1, $z2;
        java.lang.IllegalArgumentException $r4;
        java.util.List $r5;
        int $i0, $i1;
        org.joda.time.format.PeriodFormatterBuilder$Separator $r6;
        org.joda.time.format.PeriodFormatterBuilder$Literal $r7, $r8;
        java.lang.Object $r9;
        java.lang.IllegalStateException $r10;
        java.lang.Object[] $r11;
        org.joda.time.format.PeriodPrinter $r12;
        org.joda.time.format.PeriodParser $r13;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String[];

        $z0 := @parameter3: boolean;

        $z1 := @parameter4: boolean;

        if $r1 == null goto label1;

        if $r2 != null goto label2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label2:
        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void clearPrefix()>();

        $r5 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 != 0 goto label3;

        if $z1 == 0 goto label9;

        if $z0 != 0 goto label9;

        $r6 = new org.joda.time.format.PeriodFormatterBuilder$Separator;

        $r7 = <org.joda.time.format.PeriodFormatterBuilder$Literal: org.joda.time.format.PeriodFormatterBuilder$Literal EMPTY>;

        $r8 = <org.joda.time.format.PeriodFormatterBuilder$Literal: org.joda.time.format.PeriodFormatterBuilder$Literal EMPTY>;

        specialinvoke $r6.<org.joda.time.format.PeriodFormatterBuilder$Separator: void <init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean)>($r1, $r2, $r3, $r7, $r8, $z0, $z1);

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>($r6, $r6);

        return r0;

     label3:
        $r6 = null;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

     label4:
        $i0 = $i0 + -1;

        if $i0 < 0 goto label8;

        $r9 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i0);

        $z2 = $r9 instanceof org.joda.time.format.PeriodFormatterBuilder$Separator;

        if $z2 == 0 goto label6;

        $r9 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i0);

        $r6 = (org.joda.time.format.PeriodFormatterBuilder$Separator) $r9;

        $i0 = $i0 + 1;

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r5 = interfaceinvoke $r5.<java.util.List: java.util.List subList(int,int)>($i0, $i1);

     label5:
        if $r6 == null goto label7;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 != 0 goto label7;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot have two adjacent separators");

        throw $r10;

     label6:
        $i0 = $i0 + -1;

        goto label4;

     label7:
        $r11 = staticinvoke <org.joda.time.format.PeriodFormatterBuilder: java.lang.Object[] createComposite(java.util.List)>($r5);

        interfaceinvoke $r5.<java.util.List: void clear()>();

        $r6 = new org.joda.time.format.PeriodFormatterBuilder$Separator;

        $r9 = $r11[0];

        $r12 = (org.joda.time.format.PeriodPrinter) $r9;

        $r9 = $r11[1];

        $r13 = (org.joda.time.format.PeriodParser) $r9;

        specialinvoke $r6.<org.joda.time.format.PeriodFormatterBuilder$Separator: void <init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean)>($r1, $r2, $r3, $r12, $r13, $z0, $z1);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

        return r0;

     label8:
        goto label5;

     label9:
        return r0;
    }
    private org.joda.time.format.PeriodFormatterBuilder appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r1;
        java.lang.Object $r2, $r5;
        java.util.List $r3, $r4;
        int $i0;
        boolean $z0;
        java.lang.IllegalStateException $r6;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter $r7, $r8;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] $r9;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        $r1 := @parameter0: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix;

        $r2 = null;

        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 <= 0 goto label3;

        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>;

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i0 = $i0 + -2;

        $r2 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>;

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i0 = $i0 + -1;

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i0);

     label1:
        if $r2 == null goto label2;

        if $r5 == null goto label2;

        if $r2 != $r5 goto label2;

        $z0 = $r2 instanceof org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        if $z0 != 0 goto label4;

     label2:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No field to apply suffix to");

        throw $r6;

     label3:
        $r5 = null;

        goto label1;

     label4:
        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void clearPrefix()>();

        $r7 = new org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        $r8 = (org.joda.time.format.PeriodFormatterBuilder$FieldFormatter) $r2;

        specialinvoke $r7.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void <init>(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter,org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)>($r8, $r1);

        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>;

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i0 = $i0 + -2;

        interfaceinvoke $r3.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i0, $r7);

        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>;

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i0 = $i0 + -1;

        interfaceinvoke $r3.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i0, $r7);

        $r9 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters>;

        $i0 = virtualinvoke $r7.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int getFieldType()>();

        $r9[$i0] = $r7;

        return r0;
    }
    private void clearPrefix()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        $r1 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        if $r1 == null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Prefix not followed by field");

        throw $r2;

     label1:
        r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix> = null;

        return;
    }
    private static java.lang.Object[] createComposite(java.util.List)
    {
        java.util.List $r0;
        int $i0;
        org.joda.time.format.PeriodFormatterBuilder$Composite $r1;
        java.lang.Object[] $r2;
        org.joda.time.format.PeriodFormatterBuilder$Literal $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            default: goto label1;
        };

     label1:
        $r1 = new org.joda.time.format.PeriodFormatterBuilder$Composite;

        specialinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder$Composite: void <init>(java.util.List)>($r0);

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = $r1;

        $r2[1] = $r1;

        return $r2;

     label2:
        $r2 = newarray (java.lang.Object)[2];

        $r3 = <org.joda.time.format.PeriodFormatterBuilder$Literal: org.joda.time.format.PeriodFormatterBuilder$Literal EMPTY>;

        $r2[0] = $r3;

        $r3 = <org.joda.time.format.PeriodFormatterBuilder$Literal: org.joda.time.format.PeriodFormatterBuilder$Literal EMPTY>;

        $r2[1] = $r3;

        return $r2;

     label3:
        $r2 = newarray (java.lang.Object)[2];

        $r4 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(0);

        $r2[0] = $r4;

        $r4 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(1);

        $r2[1] = $r4;

        return $r2;
    }
    private static org.joda.time.format.PeriodFormatter toFormatter(java.util.List, boolean, boolean)
    {
        java.util.List $r0;
        boolean $z0, $z1, $z2;
        java.lang.IllegalStateException $r1;
        int $i0;
        java.lang.Object $r2;
        org.joda.time.format.PeriodFormatterBuilder$Separator $r3;
        org.joda.time.format.PeriodParser $r4;
        org.joda.time.format.PeriodPrinter $r5;
        org.joda.time.format.PeriodFormatter $r6;
        java.lang.Object[] $r7;

        $r0 := @parameter0: java.util.List;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        if $z0 == 0 goto label1;

        if $z1 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Builder has created neither a printer nor a parser");

        throw $r1;

     label1:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i0 < 2 goto label2;

        $r2 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(0);

        $z2 = $r2 instanceof org.joda.time.format.PeriodFormatterBuilder$Separator;

        if $z2 == 0 goto label2;

        $r2 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (org.joda.time.format.PeriodFormatterBuilder$Separator) $r2;

        $r4 = staticinvoke <org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodParser access$000(org.joda.time.format.PeriodFormatterBuilder$Separator)>($r3);

        if $r4 != null goto label2;

        $r5 = staticinvoke <org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodPrinter access$100(org.joda.time.format.PeriodFormatterBuilder$Separator)>($r3);

        if $r5 != null goto label2;

        $r0 = interfaceinvoke $r0.<java.util.List: java.util.List subList(int,int)>(2, $i0);

        $r6 = staticinvoke <org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatter toFormatter(java.util.List,boolean,boolean)>($r0, $z0, $z1);

        $r5 = virtualinvoke $r6.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter getPrinter()>();

        $r4 = virtualinvoke $r6.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser getParser()>();

        $r3 = virtualinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodFormatterBuilder$Separator finish(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>($r5, $r4);

        $r6 = new org.joda.time.format.PeriodFormatter;

        specialinvoke $r6.<org.joda.time.format.PeriodFormatter: void <init>(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>($r3, $r3);

        return $r6;

     label2:
        $r7 = staticinvoke <org.joda.time.format.PeriodFormatterBuilder: java.lang.Object[] createComposite(java.util.List)>($r0);

        if $z0 == 0 goto label3;

        $r6 = new org.joda.time.format.PeriodFormatter;

        $r2 = $r7[1];

        $r4 = (org.joda.time.format.PeriodParser) $r2;

        specialinvoke $r6.<org.joda.time.format.PeriodFormatter: void <init>(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>(null, $r4);

        return $r6;

     label3:
        if $z1 == 0 goto label4;

        $r6 = new org.joda.time.format.PeriodFormatter;

        $r2 = $r7[0];

        $r5 = (org.joda.time.format.PeriodPrinter) $r2;

        specialinvoke $r6.<org.joda.time.format.PeriodFormatter: void <init>(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>($r5, null);

        return $r6;

     label4:
        $r6 = new org.joda.time.format.PeriodFormatter;

        $r2 = $r7[0];

        $r5 = (org.joda.time.format.PeriodPrinter) $r2;

        $r2 = $r7[1];

        $r4 = (org.joda.time.format.PeriodParser) $r2;

        specialinvoke $r6.<org.joda.time.format.PeriodFormatter: void <init>(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>($r5, $r4);

        return $r6;
    }
    public org.joda.time.format.PeriodFormatterBuilder append(org.joda.time.format.PeriodFormatter)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        org.joda.time.format.PeriodFormatter $r1;
        java.lang.IllegalArgumentException $r2;
        org.joda.time.format.PeriodPrinter $r3;
        org.joda.time.format.PeriodParser $r4;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        $r1 := @parameter0: org.joda.time.format.PeriodFormatter;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No formatter supplied");

        throw $r2;

     label1:
        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void clearPrefix()>();

        $r3 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter getPrinter()>();

        $r4 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser getParser()>();

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>($r3, $r4);

        return r0;
    }
    public org.joda.time.format.PeriodFormatterBuilder append(org.joda.time.format.PeriodPrinter, org.joda.time.format.PeriodParser)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        org.joda.time.format.PeriodPrinter $r1;
        org.joda.time.format.PeriodParser $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        $r1 := @parameter0: org.joda.time.format.PeriodPrinter;

        $r2 := @parameter1: org.joda.time.format.PeriodParser;

        if $r1 != null goto label1;

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No printer or parser supplied");

        throw $r3;

     label1:
        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void clearPrefix()>();

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>($r1, $r2);

        return r0;
    }
    public org.joda.time.format.PeriodFormatterBuilder appendDays()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(3);

        return r0;
    }
    public org.joda.time.format.PeriodFormatterBuilder appendHours()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(4);

        return r0;
    }
    public org.joda.time.format.PeriodFormatterBuilder appendLiteral(java.lang.String)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r2;
        org.joda.time.format.PeriodFormatterBuilder$Literal $r3;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Literal must not be null");

        throw $r2;

     label1:
        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void clearPrefix()>();

        $r3 = new org.joda.time.format.PeriodFormatterBuilder$Literal;

        specialinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder$Literal: void <init>(java.lang.String)>($r1);

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>($r3, $r3);

        return r0;
    }
    public org.joda.time.format.PeriodFormatterBuilder appendMillis()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(7);

        return r0;
    }
    public org.joda.time.format.PeriodFormatterBuilder appendMillis3Digit()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int,int)>(7, 3);

        return r0;
    }
    public org.joda.time.format.PeriodFormatterBuilder appendMinutes()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(5);

        return r0;
    }
    public org.joda.time.format.PeriodFormatterBuilder appendMonths()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(1);

        return r0;
    }
    public org.joda.time.format.PeriodFormatterBuilder appendPrefix(java.lang.String)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r2;
        org.joda.time.format.PeriodFormatterBuilder$SimpleAffix $r3;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        $r3 = new org.joda.time.format.PeriodFormatterBuilder$SimpleAffix;

        specialinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder$SimpleAffix: void <init>(java.lang.String)>($r1);

        r0 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendPrefix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)>($r3);

        return r0;
    }
    public org.joda.time.format.PeriodFormatterBuilder appendPrefix(java.lang.String, java.lang.String)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        java.lang.String $r1, $r2;
        java.lang.IllegalArgumentException $r3;
        org.joda.time.format.PeriodFormatterBuilder$PluralAffix $r4;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 == null goto label1;

        if $r2 != null goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label2:
        $r4 = new org.joda.time.format.PeriodFormatterBuilder$PluralAffix;

        specialinvoke $r4.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        r0 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendPrefix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)>($r4);

        return r0;
    }
    public org.joda.time.format.PeriodFormatterBuilder appendPrefix(java.lang.String[], java.lang.String[])
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        java.lang.String[] $r1, $r2;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r3;
        org.joda.time.format.PeriodFormatterBuilder$RegExAffix $r4;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        $r1 := @parameter0: java.lang.String[];

        $r2 := @parameter1: java.lang.String[];

        if $r1 == null goto label1;

        if $r2 == null goto label1;

        $i0 = lengthof $r1;

        if $i0 < 1 goto label1;

        $i0 = lengthof $r1;

        $i1 = lengthof $r2;

        if $i0 == $i1 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label2:
        $r4 = new org.joda.time.format.PeriodFormatterBuilder$RegExAffix;

        specialinvoke $r4.<org.joda.time.format.PeriodFormatterBuilder$RegExAffix: void <init>(java.lang.String[],java.lang.String[])>($r1, $r2);

        r0 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendPrefix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)>($r4);

        return r0;
    }
    public org.joda.time.format.PeriodFormatterBuilder appendSeconds()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(6);

        return r0;
    }
    public org.joda.time.format.PeriodFormatterBuilder appendSecondsWithMillis()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(8);

        return r0;
    }
    public org.joda.time.format.PeriodFormatterBuilder appendSecondsWithOptionalMillis()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(9);

        return r0;
    }
    public org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        java.lang.String $r1;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        $r1 := @parameter0: java.lang.String;

        r0 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)>($r1, $r1, null, 1, 1);

        return r0;
    }
    public org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String, java.lang.String)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        r0 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)>($r1, $r2, null, 1, 1);

        return r0;
    }
    public org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String, java.lang.String, java.lang.String[])
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        java.lang.String $r1, $r2;
        java.lang.String[] $r3;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String[];

        r0 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)>($r1, $r2, $r3, 1, 1);

        return r0;
    }
    public org.joda.time.format.PeriodFormatterBuilder appendSeparatorIfFieldsAfter(java.lang.String)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        java.lang.String $r1;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        $r1 := @parameter0: java.lang.String;

        r0 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)>($r1, $r1, null, 0, 1);

        return r0;
    }
    public org.joda.time.format.PeriodFormatterBuilder appendSeparatorIfFieldsBefore(java.lang.String)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        java.lang.String $r1;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        $r1 := @parameter0: java.lang.String;

        r0 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)>($r1, $r1, null, 1, 0);

        return r0;
    }
    public org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r2;
        org.joda.time.format.PeriodFormatterBuilder$SimpleAffix $r3;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        $r3 = new org.joda.time.format.PeriodFormatterBuilder$SimpleAffix;

        specialinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder$SimpleAffix: void <init>(java.lang.String)>($r1);

        r0 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)>($r3);

        return r0;
    }
    public org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String, java.lang.String)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        java.lang.String $r1, $r2;
        java.lang.IllegalArgumentException $r3;
        org.joda.time.format.PeriodFormatterBuilder$PluralAffix $r4;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 == null goto label1;

        if $r2 != null goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label2:
        $r4 = new org.joda.time.format.PeriodFormatterBuilder$PluralAffix;

        specialinvoke $r4.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        r0 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)>($r4);

        return r0;
    }
    public org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String[], java.lang.String[])
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        java.lang.String[] $r1, $r2;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r3;
        org.joda.time.format.PeriodFormatterBuilder$RegExAffix $r4;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        $r1 := @parameter0: java.lang.String[];

        $r2 := @parameter1: java.lang.String[];

        if $r1 == null goto label1;

        if $r2 == null goto label1;

        $i0 = lengthof $r1;

        if $i0 < 1 goto label1;

        $i0 = lengthof $r1;

        $i1 = lengthof $r2;

        if $i0 == $i1 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label2:
        $r4 = new org.joda.time.format.PeriodFormatterBuilder$RegExAffix;

        specialinvoke $r4.<org.joda.time.format.PeriodFormatterBuilder$RegExAffix: void <init>(java.lang.String[],java.lang.String[])>($r1, $r2);

        r0 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)>($r4);

        return r0;
    }
    public org.joda.time.format.PeriodFormatterBuilder appendWeeks()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(2);

        return r0;
    }
    public org.joda.time.format.PeriodFormatterBuilder appendYears()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(0);

        return r0;
    }
    public void clear()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        java.util.List $r1;
        java.util.ArrayList $r2;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] $r3;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        r0.<org.joda.time.format.PeriodFormatterBuilder: int iMinPrintedDigits> = 1;

        r0.<org.joda.time.format.PeriodFormatterBuilder: int iPrintZeroSetting> = 2;

        r0.<org.joda.time.format.PeriodFormatterBuilder: int iMaxParsedDigits> = 10;

        r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iRejectSignedValues> = 0;

        r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix> = null;

        $r1 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>;

        if $r1 != null goto label2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs> = $r2;

     label1:
        r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotPrinter> = 0;

        r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotParser> = 0;

        $r3 = newarray (org.joda.time.format.PeriodFormatterBuilder$FieldFormatter)[10];

        r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters> = $r3;

        return;

     label2:
        $r1 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        goto label1;
    }
    public org.joda.time.format.PeriodFormatterBuilder maximumParsedDigits(int)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        int $i0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        $i0 := @parameter0: int;

        r0.<org.joda.time.format.PeriodFormatterBuilder: int iMaxParsedDigits> = $i0;

        return r0;
    }
    public org.joda.time.format.PeriodFormatterBuilder minimumPrintedDigits(int)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        int $i0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        $i0 := @parameter0: int;

        r0.<org.joda.time.format.PeriodFormatterBuilder: int iMinPrintedDigits> = $i0;

        return r0;
    }
    public org.joda.time.format.PeriodFormatterBuilder printZeroAlways()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        r0.<org.joda.time.format.PeriodFormatterBuilder: int iPrintZeroSetting> = 4;

        return r0;
    }
    public org.joda.time.format.PeriodFormatterBuilder printZeroIfSupported()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        r0.<org.joda.time.format.PeriodFormatterBuilder: int iPrintZeroSetting> = 3;

        return r0;
    }
    public org.joda.time.format.PeriodFormatterBuilder printZeroNever()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        r0.<org.joda.time.format.PeriodFormatterBuilder: int iPrintZeroSetting> = 5;

        return r0;
    }
    public org.joda.time.format.PeriodFormatterBuilder printZeroRarelyFirst()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        r0.<org.joda.time.format.PeriodFormatterBuilder: int iPrintZeroSetting> = 1;

        return r0;
    }
    public org.joda.time.format.PeriodFormatterBuilder printZeroRarelyLast()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        r0.<org.joda.time.format.PeriodFormatterBuilder: int iPrintZeroSetting> = 2;

        return r0;
    }
    public org.joda.time.format.PeriodFormatterBuilder rejectSignedValues(boolean)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        boolean $z0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        $z0 := @parameter0: boolean;

        r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iRejectSignedValues> = $z0;

        return r0;
    }
    public org.joda.time.format.PeriodFormatter toFormatter()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        int $i0, $i1;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter $r1;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] $r2, $r5;
        java.util.List $r3;
        boolean $z0, $z1;
        org.joda.time.format.PeriodFormatter $r4;
        java.lang.Object $r6;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>;

        $z0 = r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotPrinter>;

        $z1 = r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotParser>;

        $r4 = staticinvoke <org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatter toFormatter(java.util.List,boolean,boolean)>($r3, $z0, $z1);

        $r5 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters>;

        $i0 = lengthof $r5;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = $r5[$i1];

        if $r1 == null goto label2;

        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters>;

        virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void finish(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[])>($r2);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters>;

        $r6 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[]) $r6;

        r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters> = $r2;

        return $r4;
    }
    public org.joda.time.format.PeriodParser toParser()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        boolean $z0;
        org.joda.time.format.PeriodFormatter $r1;
        org.joda.time.format.PeriodParser $r2;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        $z0 = r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotParser>;

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatter toFormatter()>();

        $r2 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser getParser()>();

        return $r2;
    }
    public org.joda.time.format.PeriodPrinter toPrinter()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        boolean $z0;
        org.joda.time.format.PeriodFormatter $r1;
        org.joda.time.format.PeriodPrinter $r2;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        $z0 = r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotPrinter>;

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatter toFormatter()>();

        $r2 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter getPrinter()>();

        return $r2;
    }
