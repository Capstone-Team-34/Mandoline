org.joda.time.format.PeriodFormatterBuilder$FieldFormatter extends java.lang.Object implements org.joda.time.format.PeriodParser org.joda.time.format.PeriodPrinter
private final org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters
private final int iFieldType
private final int iMaxParsedDigits
private final int iMinPrintedDigits
private final org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix
private final int iPrintZeroSetting
private final boolean iRejectSignedValues
private final org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix
    void <init>(int, int, int, boolean, int, org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[], org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix, org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)
    {
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] $r1;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r2, $r3;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $i3 := @parameter4: int;

        $r1 := @parameter5: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[];

        $r2 := @parameter6: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix;

        $r3 := @parameter7: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMinPrintedDigits> = $i0;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iPrintZeroSetting> = $i1;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMaxParsedDigits> = $i2;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean iRejectSignedValues> = $z0;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType> = $i3;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters> = $r1;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix> = $r2;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix> = $r3;

        return;
    }
    void <init>(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter, org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)
    {
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0, $r1;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r2, $r3;
        int $i0;
        boolean $z0;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] $r4;
        org.joda.time.format.PeriodFormatterBuilder$CompositeAffix $r5;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        $r1 := @parameter0: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        $r3 := @parameter1: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = $r1.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMinPrintedDigits>;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMinPrintedDigits> = $i0;

        $i0 = $r1.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iPrintZeroSetting>;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iPrintZeroSetting> = $i0;

        $i0 = $r1.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMaxParsedDigits>;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMaxParsedDigits> = $i0;

        $z0 = $r1.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean iRejectSignedValues>;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean iRejectSignedValues> = $z0;

        $i0 = $r1.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType> = $i0;

        $r4 = $r1.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters>;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters> = $r4;

        $r2 = $r1.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix> = $r2;

        $r2 = $r1.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        if $r2 == null goto label1;

        $r5 = new org.joda.time.format.PeriodFormatterBuilder$CompositeAffix;

        $r2 = $r1.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        specialinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: void <init>(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix,org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)>($r2, $r3);

        $r3 = $r5;

     label1:
        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix> = $r3;

        return;
    }
    private int parseInt(java.lang.String, int, int)
    {
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0;
        java.lang.String $r1;
        int $i0, $i1, $i2, $i5;
        boolean $z0;
        char $c3, $c4;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = 0;

        if $i1 < 10 goto label1;

        $i1 = $i0 + $i1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        return $i0;

     label1:
        if $i1 <= 0 goto label7;

        $i2 = $i0 + 1;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        $c4 = $c3;

        $i5 = $i1 + -1;

        if $c3 != 45 goto label4;

        $i5 = $i5 + -1;

        if $i5 < 0 goto label7;

        $z0 = 1;

        $i0 = $i2 + 1;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i2);

     label2:
        $i2 = $c4 + -48;

        $i1 = $i0;

     label3:
        $i0 = $i5 + -1;

        if $i5 <= 0 goto label5;

        $i5 = $i2 << 3;

        $i2 = $i2 << 1;

        $i2 = $i2 + $i5;

        $i5 = $i1 + 1;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        $i1 = $i2 + $c3;

        $i2 = $i1 + -48;

        $i1 = $i5;

        $i5 = $i0;

        goto label3;

     label4:
        $i0 = $i2;

        goto label2;

     label5:
        if $z0 == 0 goto label6;

        $i0 = neg $i2;

        return $i0;

     label6:
        return $i2;

     label7:
        return 0;
    }
    public int calculatePrintedLength(org.joda.time.ReadablePeriod, java.util.Locale)
    {
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0;
        org.joda.time.ReadablePeriod $r1;
        java.util.Locale $r2;
        long $l0, $l1;
        byte $b2;
        int $i3, $i4, $i5;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r3;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        $r1 := @parameter0: org.joda.time.ReadablePeriod;

        $r2 := @parameter1: java.util.Locale;

        $l0 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: long getFieldValue(org.joda.time.ReadablePeriod)>($r1);

        $l1 = $l0;

        $b2 = $l0 cmp 9223372036854775807L;

        if $b2 != 0 goto label1;

        return 0;

     label1:
        $i3 = staticinvoke <org.joda.time.format.FormatUtils: int calculateDigitCount(long)>($l0);

        $i4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMinPrintedDigits>;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i4);

        $i3 = $i4;

        $i5 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i5 < 8 goto label4;

        $b2 = $l0 cmp 0L;

        if $b2 >= 0 goto label6;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i4, 5);

     label2:
        $i3 = $i3 + 1;

        $i4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i4 != 9 goto label3;

        $l1 = staticinvoke <java.lang.Math: long abs(long)>($l0);

        $l1 = $l1 % 1000L;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label3;

        $i3 = $i3 + -4;

     label3:
        $l1 = $l0 / 1000L;

     label4:
        $i4 = (int) $l1;

        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        if $r3 == null goto label5;

        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        $i5 = interfaceinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int calculatePrintedLength(int)>($i4);

        $i3 = $i3 + $i5;

     label5:
        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        if $r3 == null goto label7;

        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        $i4 = interfaceinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int calculatePrintedLength(int)>($i4);

        $i3 = $i3 + $i4;

        return $i3;

     label6:
        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i4, 4);

        goto label2;

     label7:
        return $i3;
    }
    public int countFieldsToPrint(org.joda.time.ReadablePeriod, int, java.util.Locale)
    {
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0;
        org.joda.time.ReadablePeriod $r1;
        int $i0;
        java.util.Locale $r2;
        long $l1;
        byte $b2;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        $r1 := @parameter0: org.joda.time.ReadablePeriod;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.util.Locale;

        if $i0 > 0 goto label1;

        return 0;

     label1:
        $i0 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iPrintZeroSetting>;

        if $i0 == 4 goto label2;

        $l1 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: long getFieldValue(org.joda.time.ReadablePeriod)>($r1);

        $b2 = $l1 cmp 9223372036854775807L;

        if $b2 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }
    public void finish(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[])
    {
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0, $r4;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] $r1;
        java.util.HashSet $r2, $r3;
        int $i0, $i1;
        boolean $z0;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r5;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        $r1 := @parameter0: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[];

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r4 = $r1[$i1];

        if $r4 == null goto label2;

        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label2;

        $r5 = $r4.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r5);

        $r5 = $r4.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r5);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r5 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        if $r5 == null goto label4;

        $r5 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        interfaceinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: void finish(java.util.Set)>($r2);

     label4:
        $r5 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        if $r5 == null goto label5;

        $r5 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        interfaceinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: void finish(java.util.Set)>($r3);

     label5:
        return;
    }
    int getFieldType()
    {
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0;
        int i0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        i0 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        return i0;
    }
    long getFieldValue(org.joda.time.ReadablePeriod)
    {
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0, $r5;
        org.joda.time.ReadablePeriod $r1;
        int $i0, $i3;
        org.joda.time.PeriodType $r2;
        boolean $z0;
        org.joda.time.DurationFieldType $r3;
        long $l1, $l4;
        byte $b2;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] $r4;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        $r1 := @parameter0: org.joda.time.ReadablePeriod;

        $i0 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iPrintZeroSetting>;

        if $i0 != 4 goto label03;

        $r2 = null;

     label01:
        if $r2 == null goto label04;

        $i0 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        $z0 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean isSupported(org.joda.time.PeriodType,int)>($r2, $i0);

        if $z0 != 0 goto label04;

     label02:
        return 9223372036854775807L;

     label03:
        $r2 = interfaceinvoke $r1.<org.joda.time.ReadablePeriod: org.joda.time.PeriodType getPeriodType()>();

        goto label01;

     label04:
        $i0 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        lookupswitch($i0)
        {
            case 0: goto label06;
            case 1: goto label09;
            case 2: goto label10;
            case 3: goto label11;
            case 4: goto label12;
            case 5: goto label13;
            case 6: goto label14;
            case 7: goto label15;
            case 8: goto label16;
            case 9: goto label16;
            default: goto label05;
        };

     label05:
        return 9223372036854775807L;

     label06:
        $r3 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType years()>();

        $i0 = interfaceinvoke $r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r3);

        $l1 = (long) $i0;

     label07:
        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label08;

        $i0 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iPrintZeroSetting>;

        lookupswitch($i0)
        {
            case 1: goto label20;
            case 2: goto label17;
            case 3: goto label08;
            case 4: goto label08;
            case 5: goto label02;
            default: goto label08;
        };

     label08:
        return $l1;

     label09:
        $r3 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType months()>();

        $i0 = interfaceinvoke $r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r3);

        $l1 = (long) $i0;

        goto label07;

     label10:
        $r3 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType weeks()>();

        $i0 = interfaceinvoke $r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r3);

        $l1 = (long) $i0;

        goto label07;

     label11:
        $r3 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType days()>();

        $i0 = interfaceinvoke $r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r3);

        $l1 = (long) $i0;

        goto label07;

     label12:
        $r3 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType hours()>();

        $i0 = interfaceinvoke $r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r3);

        $l1 = (long) $i0;

        goto label07;

     label13:
        $r3 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType minutes()>();

        $i0 = interfaceinvoke $r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r3);

        $l1 = (long) $i0;

        goto label07;

     label14:
        $r3 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType seconds()>();

        $i0 = interfaceinvoke $r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r3);

        $l1 = (long) $i0;

        goto label07;

     label15:
        $r3 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType millis()>();

        $i0 = interfaceinvoke $r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r3);

        $l1 = (long) $i0;

        goto label07;

     label16:
        $r3 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType seconds()>();

        $i0 = interfaceinvoke $r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r3);

        $r3 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType millis()>();

        $i3 = interfaceinvoke $r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r3);

        $l1 = (long) $i0;

        $l1 = $l1 * 1000L;

        $l4 = (long) $i3;

        $l1 = $l4 + $l1;

        goto label07;

     label17:
        $z0 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean isZero(org.joda.time.ReadablePeriod)>($r1);

        if $z0 == 0 goto label23;

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters>;

        $i0 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        $r5 = $r4[$i0];

        if $r5 != r0 goto label23;

        $i0 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        $i0 = $i0 + 1;

     label18:
        if $i0 > 9 goto label08;

        $z0 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean isSupported(org.joda.time.PeriodType,int)>($r2, $i0);

        if $z0 == 0 goto label19;

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters>;

        $r5 = $r4[$i0];

        if $r5 != null goto label23;

     label19:
        $i0 = $i0 + 1;

        goto label18;

     label20:
        $z0 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean isZero(org.joda.time.ReadablePeriod)>($r1);

        if $z0 == 0 goto label23;

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters>;

        $i0 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        $r5 = $r4[$i0];

        if $r5 != r0 goto label23;

        $i0 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 8);

        $i0 = $i0 + -1;

     label21:
        if $i0 < 0 goto label08;

        if $i0 > 9 goto label08;

        $z0 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean isSupported(org.joda.time.PeriodType,int)>($r2, $i0);

        if $z0 == 0 goto label22;

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters>;

        $r5 = $r4[$i0];

        if $r5 != null goto label23;

     label22:
        $i0 = $i0 + -1;

        goto label21;

     label23:
        return 9223372036854775807L;
    }
    boolean isSupported(org.joda.time.PeriodType, int)
    {
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0;
        org.joda.time.PeriodType $r1;
        int $i0;
        org.joda.time.DurationFieldType $r2;
        boolean $z0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        $r1 := @parameter0: org.joda.time.PeriodType;

        $i0 := @parameter1: int;

        lookupswitch($i0)
        {
            case 0: goto label02;
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label08;
            case 7: goto label09;
            case 8: goto label10;
            case 9: goto label10;
            default: goto label01;
        };

     label01:
        return 0;

     label02:
        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType years()>();

        $z0 = virtualinvoke $r1.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r2);

        return $z0;

     label03:
        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType months()>();

        $z0 = virtualinvoke $r1.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r2);

        return $z0;

     label04:
        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType weeks()>();

        $z0 = virtualinvoke $r1.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r2);

        return $z0;

     label05:
        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType days()>();

        $z0 = virtualinvoke $r1.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r2);

        return $z0;

     label06:
        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType hours()>();

        $z0 = virtualinvoke $r1.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r2);

        return $z0;

     label07:
        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType minutes()>();

        $z0 = virtualinvoke $r1.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r2);

        return $z0;

     label08:
        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType seconds()>();

        $z0 = virtualinvoke $r1.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r2);

        return $z0;

     label09:
        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType millis()>();

        $z0 = virtualinvoke $r1.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r2);

        return $z0;

     label10:
        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType seconds()>();

        $z0 = virtualinvoke $r1.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r2);

        if $z0 != 0 goto label11;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType millis()>();

        $z0 = virtualinvoke $r1.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r2);

        if $z0 == 0 goto label12;

     label11:
        return 1;

     label12:
        return 0;
    }
    boolean isZero(org.joda.time.ReadablePeriod)
    {
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0;
        org.joda.time.ReadablePeriod $r1;
        int $i0, $i1, $i2;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        $r1 := @parameter0: org.joda.time.ReadablePeriod;

        $i0 = interfaceinvoke $r1.<org.joda.time.ReadablePeriod: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $i2 = interfaceinvoke $r1.<org.joda.time.ReadablePeriod: int getValue(int)>($i1);

        if $i2 == 0 goto label2;

        return 0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 1;
    }
    public int parseInto(org.joda.time.ReadWritablePeriod, java.lang.String, int, java.util.Locale)
    {
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0;
        org.joda.time.ReadWritablePeriod $r1;
        java.lang.String $r2;
        java.util.Locale $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r4;
        org.joda.time.PeriodType $r5;
        char $c6;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        $r1 := @parameter0: org.joda.time.ReadWritablePeriod;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r3 := @parameter3: java.util.Locale;

        $i1 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iPrintZeroSetting>;

        if $i1 != 4 goto label02;

        $z0 = 1;

     label01:
        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 < $i1 goto label03;

        if $z0 == 0 goto label40;

        $i0 = $i0 ^ -1;

        return $i0;

     label02:
        $z0 = 0;

        goto label01;

     label03:
        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        if $r4 == null goto label04;

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        $i1 = interfaceinvoke $r4.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int parse(java.lang.String,int)>($r2, $i0);

        $i0 = $i1;

        if $i1 < 0 goto label12;

        $z0 = 1;

     label04:
        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        if $r4 == null goto label39;

        if $z0 != 0 goto label39;

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        $i1 = interfaceinvoke $r4.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int scan(java.lang.String,int)>($r2, $i0);

        if $i1 < 0 goto label13;

        $z0 = 1;

        $i2 = $i1;

     label05:
        if $z0 != 0 goto label06;

        $r5 = interfaceinvoke $r1.<org.joda.time.ReadWritablePeriod: org.joda.time.PeriodType getPeriodType()>();

        $i1 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        $z0 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean isSupported(org.joda.time.PeriodType,int)>($r5, $i1);

        if $z0 == 0 goto label40;

     label06:
        if $i2 <= 0 goto label15;

        $i1 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMaxParsedDigits>;

        $i3 = $i2 - $i0;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i3);

     label07:
        $i3 = -1;

        $z0 = 0;

        $z1 = 0;

        $i4 = $i1;

        $i1 = 0;

     label08:
        if $i1 >= $i4 goto label38;

        $i5 = $i0 + $i1;

        $c6 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i5);

        if $i1 != 0 goto label20;

        if $c6 == 45 goto label09;

        if $c6 != 43 goto label20;

     label09:
        $z2 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean iRejectSignedValues>;

        if $z2 != 0 goto label20;

        if $c6 != 45 goto label16;

        $z1 = 1;

     label10:
        $i5 = $i1 + 1;

        if $i5 >= $i4 goto label38;

        $i5 = $i0 + $i1;

        $i5 = $i5 + 1;

        $c6 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i5);

        if $c6 < 48 goto label38;

        if $c6 <= 57 goto label17;

     label11:
        if $z0 != 0 goto label26;

        $i0 = $i0 ^ -1;

        return $i0;

     label12:
        if $z0 != 0 goto label41;

        $i0 = $i1 ^ -1;

        return $i0;

     label13:
        if $z0 != 0 goto label14;

        $i0 = $i1 ^ -1;

        return $i0;

     label14:
        return $i1;

     label15:
        $i1 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMaxParsedDigits>;

        $i3 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i3 = $i3 - $i0;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i3);

        goto label07;

     label16:
        $z1 = 0;

        goto label10;

     label17:
        if $z1 == 0 goto label19;

        $i1 = $i1 + 1;

     label18:
        $i4 = $i4 + 1;

        $i5 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i5 = $i5 - $i0;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i5);

        goto label08;

     label19:
        $i0 = $i0 + 1;

        goto label18;

     label20:
        if $c6 < 48 goto label22;

        if $c6 > 57 goto label22;

        $z0 = 1;

     label21:
        $i1 = $i1 + 1;

        goto label08;

     label22:
        if $c6 == 46 goto label23;

        if $c6 != 44 goto label38;

     label23:
        $i5 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i5 == 8 goto label24;

        $i5 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i5 != 9 goto label38;

     label24:
        if $i3 < 0 goto label25;

        goto label11;

     label25:
        $i3 = $i0 + $i1;

        $i3 = $i3 + 1;

        $i4 = $i4 + 1;

        $i5 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i5 = $i5 - $i0;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i5);

        goto label21;

     label26:
        if $i2 < 0 goto label27;

        $i4 = $i0 + $i1;

        if $i4 == $i2 goto label27;

        return $i0;

     label27:
        $i2 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i2 == 8 goto label30;

        $i2 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i2 == 9 goto label30;

        $i2 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        $i3 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int parseInt(java.lang.String,int,int)>($r2, $i0, $i1);

        virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void setFieldValue(org.joda.time.ReadWritablePeriod,int,int)>($r1, $i2, $i3);

     label28:
        $i0 = $i1 + $i0;

        if $i0 < 0 goto label29;

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        if $r4 == null goto label29;

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        $i0 = interfaceinvoke $r4.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int parse(java.lang.String,int)>($r2, $i0);

     label29:
        return $i0;

     label30:
        if $i3 >= 0 goto label31;

        $i2 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int parseInt(java.lang.String,int,int)>($r2, $i0, $i1);

        virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void setFieldValue(org.joda.time.ReadWritablePeriod,int,int)>($r1, 6, $i2);

        virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void setFieldValue(org.joda.time.ReadWritablePeriod,int,int)>($r1, 7, 0);

        goto label28;

     label31:
        $i2 = $i3 - $i0;

        $i2 = $i2 + -1;

        $i2 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int parseInt(java.lang.String,int,int)>($r2, $i0, $i2);

        virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void setFieldValue(org.joda.time.ReadWritablePeriod,int,int)>($r1, 6, $i2);

        $i4 = $i0 + $i1;

        $i4 = $i4 - $i3;

        if $i4 > 0 goto label33;

        $i3 = 0;

     label32:
        virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void setFieldValue(org.joda.time.ReadWritablePeriod,int,int)>($r1, 7, $i3);

        goto label28;

     label33:
        if $i4 < 3 goto label36;

        $i3 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int parseInt(java.lang.String,int,int)>($r2, $i3, 3);

     label34:
        if $z1 != 0 goto label35;

        if $i2 >= 0 goto label32;

     label35:
        $i3 = neg $i3;

        goto label32;

     label36:
        $i3 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int parseInt(java.lang.String,int,int)>($r2, $i3, $i4);

        if $i4 != 1 goto label37;

        $i3 = $i3 * 100;

        goto label34;

     label37:
        $i3 = $i3 * 10;

        goto label34;

     label38:
        goto label11;

     label39:
        $i2 = -1;

        goto label05;

     label40:
        return $i0;

     label41:
        return $i1;
    }
    public void printTo(java.io.Writer, org.joda.time.ReadablePeriod, java.util.Locale)
    {
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0;
        java.io.Writer $r1;
        org.joda.time.ReadablePeriod $r2;
        java.util.Locale $r3;
        long $l0, $l4;
        byte $b1;
        int $i2, $i3, $i5;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r4;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        $r1 := @parameter0: java.io.Writer;

        $r2 := @parameter1: org.joda.time.ReadablePeriod;

        $r3 := @parameter2: java.util.Locale;

        $l0 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: long getFieldValue(org.joda.time.ReadablePeriod)>($r2);

        $b1 = $l0 cmp 9223372036854775807L;

        if $b1 != 0 goto label1;

        return;

     label1:
        $i2 = (int) $l0;

        $i3 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i3 < 8 goto label2;

        $l4 = $l0 / 1000L;

        $i2 = (int) $l4;

     label2:
        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        if $r4 == null goto label3;

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        interfaceinvoke $r4.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: void printTo(java.io.Writer,int)>($r1, $i2);

     label3:
        $i3 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMinPrintedDigits>;

        if $i3 > 1 goto label7;

        staticinvoke <org.joda.time.format.FormatUtils: void writeUnpaddedInteger(java.io.Writer,int)>($r1, $i2);

     label4:
        $i3 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i3 < 8 goto label6;

        $l0 = staticinvoke <java.lang.Math: long abs(long)>($l0);

        $l0 = $l0 % 1000L;

        $i3 = (int) $l0;

        $i5 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i5 == 8 goto label5;

        if $i3 <= 0 goto label6;

     label5:
        virtualinvoke $r1.<java.io.Writer: void write(int)>(46);

        staticinvoke <org.joda.time.format.FormatUtils: void writePaddedInteger(java.io.Writer,int,int)>($r1, $i3, 3);

     label6:
        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        if $r4 == null goto label8;

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        interfaceinvoke $r4.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: void printTo(java.io.Writer,int)>($r1, $i2);

        return;

     label7:
        staticinvoke <org.joda.time.format.FormatUtils: void writePaddedInteger(java.io.Writer,int,int)>($r1, $i2, $i3);

        goto label4;

     label8:
        return;
    }
    public void printTo(java.lang.StringBuffer, org.joda.time.ReadablePeriod, java.util.Locale)
    {
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0;
        java.lang.StringBuffer $r1;
        org.joda.time.ReadablePeriod $r2;
        java.util.Locale $r3;
        long $l0, $l4;
        byte $b1;
        int $i2, $i3, $i5, $i6;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r4;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        $r1 := @parameter0: java.lang.StringBuffer;

        $r2 := @parameter1: org.joda.time.ReadablePeriod;

        $r3 := @parameter2: java.util.Locale;

        $l0 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: long getFieldValue(org.joda.time.ReadablePeriod)>($r2);

        $b1 = $l0 cmp 9223372036854775807L;

        if $b1 != 0 goto label1;

        return;

     label1:
        $i2 = (int) $l0;

        $i3 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i3 < 8 goto label2;

        $l4 = $l0 / 1000L;

        $i2 = (int) $l4;

     label2:
        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        if $r4 == null goto label3;

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        interfaceinvoke $r4.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: void printTo(java.lang.StringBuffer,int)>($r1, $i2);

     label3:
        $i3 = virtualinvoke $r1.<java.lang.StringBuffer: int length()>();

        $i5 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMinPrintedDigits>;

        if $i5 > 1 goto label8;

        staticinvoke <org.joda.time.format.FormatUtils: void appendUnpaddedInteger(java.lang.StringBuffer,int)>($r1, $i2);

     label4:
        $i5 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i5 < 8 goto label7;

        $l4 = staticinvoke <java.lang.Math: long abs(long)>($l0);

        $l4 = $l4 % 1000L;

        $i5 = (int) $l4;

        $i6 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i6 == 8 goto label5;

        if $i5 <= 0 goto label7;

     label5:
        $b1 = $l0 cmp 0L;

        if $b1 >= 0 goto label6;

        $b1 = $l0 cmp -1000L;

        if $b1 <= 0 goto label6;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char)>($i3, 45);

     label6:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        staticinvoke <org.joda.time.format.FormatUtils: void appendPaddedInteger(java.lang.StringBuffer,int,int)>($r1, $i5, 3);

     label7:
        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        if $r4 == null goto label9;

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        interfaceinvoke $r4.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: void printTo(java.lang.StringBuffer,int)>($r1, $i2);

        return;

     label8:
        staticinvoke <org.joda.time.format.FormatUtils: void appendPaddedInteger(java.lang.StringBuffer,int,int)>($r1, $i2, $i5);

        goto label4;

     label9:
        return;
    }
    void setFieldValue(org.joda.time.ReadWritablePeriod, int, int)
    {
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0;
        org.joda.time.ReadWritablePeriod $r1;
        int $i0, $i1;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        $r1 := @parameter0: org.joda.time.ReadWritablePeriod;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label7;
            case 6: goto label8;
            case 7: goto label9;
            default: goto label1;
        };

     label1:
        return;

     label2:
        interfaceinvoke $r1.<org.joda.time.ReadWritablePeriod: void setYears(int)>($i1);

        return;

     label3:
        interfaceinvoke $r1.<org.joda.time.ReadWritablePeriod: void setMonths(int)>($i1);

        return;

     label4:
        interfaceinvoke $r1.<org.joda.time.ReadWritablePeriod: void setWeeks(int)>($i1);

        return;

     label5:
        interfaceinvoke $r1.<org.joda.time.ReadWritablePeriod: void setDays(int)>($i1);

        return;

     label6:
        interfaceinvoke $r1.<org.joda.time.ReadWritablePeriod: void setHours(int)>($i1);

        return;

     label7:
        interfaceinvoke $r1.<org.joda.time.ReadWritablePeriod: void setMinutes(int)>($i1);

        return;

     label8:
        interfaceinvoke $r1.<org.joda.time.ReadWritablePeriod: void setSeconds(int)>($i1);

        return;

     label9:
        interfaceinvoke $r1.<org.joda.time.ReadWritablePeriod: void setMillis(int)>($i1);

        return;
    }
