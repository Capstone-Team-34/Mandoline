org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber extends org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter
    protected void <init>(org.joda.time.DateTimeFieldType, int, boolean)
    {
        org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber r0;
        org.joda.time.DateTimeFieldType $r1;
        int $i0;
        boolean $z0;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber;

        $r1 := @parameter0: org.joda.time.DateTimeFieldType;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        specialinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter: void <init>(org.joda.time.DateTimeFieldType,int,boolean)>($r1, $i0, $z0);

        return;
    }
    public int estimatePrintedLength()
    {
        org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber r0;
        int i0;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber;

        i0 = r0.<org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber: int iMaxParsedDigits>;

        return i0;
    }
    public void printTo(java.lang.Appendable, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale)
    {
        org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber r0;
        java.lang.Appendable $r1;
        long $l0;
        org.joda.time.Chronology $r2;
        int $i1;
        org.joda.time.DateTimeZone $r3;
        java.util.Locale $r4;
        org.joda.time.DateTimeFieldType $r5;
        org.joda.time.DateTimeField $r6;
        java.lang.RuntimeException $r7;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber;

        $r1 := @parameter0: java.lang.Appendable;

        $l0 := @parameter1: long;

        $r2 := @parameter2: org.joda.time.Chronology;

        $i1 := @parameter3: int;

        $r3 := @parameter4: org.joda.time.DateTimeZone;

        $r4 := @parameter5: java.util.Locale;

     label1:
        $r5 = r0.<org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber: org.joda.time.DateTimeFieldType iFieldType>;

        $r6 = virtualinvoke $r5.<org.joda.time.DateTimeFieldType: org.joda.time.DateTimeField getField(org.joda.time.Chronology)>($r2);

        $i1 = virtualinvoke $r6.<org.joda.time.DateTimeField: int get(long)>($l0);

        staticinvoke <org.joda.time.format.FormatUtils: void appendUnpaddedInteger(java.lang.Appendable,int)>($r1, $i1);

     label2:
        return;

     label3:
        $r7 := @caughtexception;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(char)>(65533);

        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }
    public void printTo(java.lang.Appendable, org.joda.time.ReadablePartial, java.util.Locale)
    {
        org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber r0;
        java.lang.Appendable $r1;
        org.joda.time.ReadablePartial $r2;
        java.util.Locale $r3;
        org.joda.time.DateTimeFieldType $r4;
        boolean $z0;
        int $i0;
        java.lang.RuntimeException $r5;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber;

        $r1 := @parameter0: java.lang.Appendable;

        $r2 := @parameter1: org.joda.time.ReadablePartial;

        $r3 := @parameter2: java.util.Locale;

        $r4 = r0.<org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber: org.joda.time.DateTimeFieldType iFieldType>;

        $z0 = interfaceinvoke $r2.<org.joda.time.ReadablePartial: boolean isSupported(org.joda.time.DateTimeFieldType)>($r4);

        if $z0 == 0 goto label4;

     label1:
        $r4 = r0.<org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber: org.joda.time.DateTimeFieldType iFieldType>;

        $i0 = interfaceinvoke $r2.<org.joda.time.ReadablePartial: int get(org.joda.time.DateTimeFieldType)>($r4);

        staticinvoke <org.joda.time.format.FormatUtils: void appendUnpaddedInteger(java.lang.Appendable,int)>($r1, $i0);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(char)>(65533);

        return;

     label4:
        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(char)>(65533);

        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }
