org.joda.time.DateTimeFieldType$StandardDateTimeFieldType extends org.joda.time.DateTimeFieldType
private static final long serialVersionUID
private final byte iOrdinal
private final transient org.joda.time.DurationFieldType iRangeType
private final transient org.joda.time.DurationFieldType iUnitType
    void <init>(java.lang.String, byte, org.joda.time.DurationFieldType, org.joda.time.DurationFieldType)
    {
        org.joda.time.DateTimeFieldType$StandardDateTimeFieldType r0;
        java.lang.String $r1;
        byte $b0;
        org.joda.time.DurationFieldType $r2, $r3;

        r0 := @this: org.joda.time.DateTimeFieldType$StandardDateTimeFieldType;

        $r1 := @parameter0: java.lang.String;

        $b0 := @parameter1: byte;

        $r2 := @parameter2: org.joda.time.DurationFieldType;

        $r3 := @parameter3: org.joda.time.DurationFieldType;

        specialinvoke r0.<org.joda.time.DateTimeFieldType: void <init>(java.lang.String)>($r1);

        r0.<org.joda.time.DateTimeFieldType$StandardDateTimeFieldType: byte iOrdinal> = $b0;

        r0.<org.joda.time.DateTimeFieldType$StandardDateTimeFieldType: org.joda.time.DurationFieldType iUnitType> = $r2;

        r0.<org.joda.time.DateTimeFieldType$StandardDateTimeFieldType: org.joda.time.DurationFieldType iRangeType> = $r3;

        return;
    }
    private java.lang.Object readResolve()
    {
        byte $b0;
        org.joda.time.DateTimeFieldType$StandardDateTimeFieldType r0;
        org.joda.time.DateTimeFieldType $r1;

        r0 := @this: org.joda.time.DateTimeFieldType$StandardDateTimeFieldType;

        $b0 = r0.<org.joda.time.DateTimeFieldType$StandardDateTimeFieldType: byte iOrdinal>;

        lookupswitch($b0)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label08;
            case 8: goto label09;
            case 9: goto label10;
            case 10: goto label11;
            case 11: goto label12;
            case 12: goto label13;
            case 13: goto label14;
            case 14: goto label15;
            case 15: goto label16;
            case 16: goto label17;
            case 17: goto label18;
            case 18: goto label19;
            case 19: goto label20;
            case 20: goto label21;
            case 21: goto label22;
            case 22: goto label23;
            case 23: goto label24;
            default: goto label01;
        };

     label01:
        return r0;

     label02:
        $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType access$000()>();

        return $r1;

     label03:
        $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType access$100()>();

        return $r1;

     label04:
        $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType access$200()>();

        return $r1;

     label05:
        $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType access$300()>();

        return $r1;

     label06:
        $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType access$400()>();

        return $r1;

     label07:
        $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType access$500()>();

        return $r1;

     label08:
        $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType access$600()>();

        return $r1;

     label09:
        $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType access$700()>();

        return $r1;

     label10:
        $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType access$800()>();

        return $r1;

     label11:
        $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType access$900()>();

        return $r1;

     label12:
        $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType access$1000()>();

        return $r1;

     label13:
        $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType access$1100()>();

        return $r1;

     label14:
        $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType access$1200()>();

        return $r1;

     label15:
        $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType access$1300()>();

        return $r1;

     label16:
        $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType access$1400()>();

        return $r1;

     label17:
        $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType access$1500()>();

        return $r1;

     label18:
        $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType access$1600()>();

        return $r1;

     label19:
        $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType access$1700()>();

        return $r1;

     label20:
        $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType access$1800()>();

        return $r1;

     label21:
        $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType access$1900()>();

        return $r1;

     label22:
        $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType access$2000()>();

        return $r1;

     label23:
        $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType access$2100()>();

        return $r1;

     label24:
        $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType access$2200()>();

        return $r1;
    }
    public boolean equals(java.lang.Object)
    {
        org.joda.time.DateTimeFieldType$StandardDateTimeFieldType r0;
        byte $b0, $b1;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: org.joda.time.DateTimeFieldType$StandardDateTimeFieldType;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof org.joda.time.DateTimeFieldType$StandardDateTimeFieldType;

        if $z0 == 0 goto label2;

        $b1 = r0.<org.joda.time.DateTimeFieldType$StandardDateTimeFieldType: byte iOrdinal>;

        r0 = (org.joda.time.DateTimeFieldType$StandardDateTimeFieldType) $r1;

        $b0 = r0.<org.joda.time.DateTimeFieldType$StandardDateTimeFieldType: byte iOrdinal>;

        if $b1 == $b0 goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }
    public org.joda.time.DurationFieldType getDurationType()
    {
        org.joda.time.DateTimeFieldType$StandardDateTimeFieldType r0;
        org.joda.time.DurationFieldType r1;

        r0 := @this: org.joda.time.DateTimeFieldType$StandardDateTimeFieldType;

        r1 = r0.<org.joda.time.DateTimeFieldType$StandardDateTimeFieldType: org.joda.time.DurationFieldType iUnitType>;

        return r1;
    }
    public org.joda.time.DateTimeField getField(org.joda.time.Chronology)
    {
        org.joda.time.DateTimeFieldType$StandardDateTimeFieldType r0;
        org.joda.time.Chronology $r1;
        byte $b0;
        java.lang.InternalError $r2;
        org.joda.time.DateTimeField $r3;

        r0 := @this: org.joda.time.DateTimeFieldType$StandardDateTimeFieldType;

        $r1 := @parameter0: org.joda.time.Chronology;

        $r1 = staticinvoke <org.joda.time.DateTimeUtils: org.joda.time.Chronology getChronology(org.joda.time.Chronology)>($r1);

        $b0 = r0.<org.joda.time.DateTimeFieldType$StandardDateTimeFieldType: byte iOrdinal>;

        lookupswitch($b0)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label08;
            case 8: goto label09;
            case 9: goto label10;
            case 10: goto label11;
            case 11: goto label12;
            case 12: goto label13;
            case 13: goto label14;
            case 14: goto label15;
            case 15: goto label16;
            case 16: goto label17;
            case 17: goto label18;
            case 18: goto label19;
            case 19: goto label20;
            case 20: goto label21;
            case 21: goto label22;
            case 22: goto label23;
            case 23: goto label24;
            default: goto label01;
        };

     label01:
        $r2 = new java.lang.InternalError;

        specialinvoke $r2.<java.lang.InternalError: void <init>()>();

        throw $r2;

     label02:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField era()>();

        return $r3;

     label03:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField yearOfEra()>();

        return $r3;

     label04:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField centuryOfEra()>();

        return $r3;

     label05:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField yearOfCentury()>();

        return $r3;

     label06:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField year()>();

        return $r3;

     label07:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField dayOfYear()>();

        return $r3;

     label08:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField monthOfYear()>();

        return $r3;

     label09:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField dayOfMonth()>();

        return $r3;

     label10:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField weekyearOfCentury()>();

        return $r3;

     label11:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField weekyear()>();

        return $r3;

     label12:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField weekOfWeekyear()>();

        return $r3;

     label13:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField dayOfWeek()>();

        return $r3;

     label14:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField halfdayOfDay()>();

        return $r3;

     label15:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField hourOfHalfday()>();

        return $r3;

     label16:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField clockhourOfHalfday()>();

        return $r3;

     label17:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField clockhourOfDay()>();

        return $r3;

     label18:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField hourOfDay()>();

        return $r3;

     label19:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField minuteOfDay()>();

        return $r3;

     label20:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField minuteOfHour()>();

        return $r3;

     label21:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField secondOfDay()>();

        return $r3;

     label22:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField secondOfMinute()>();

        return $r3;

     label23:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField millisOfDay()>();

        return $r3;

     label24:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField millisOfSecond()>();

        return $r3;
    }
    public org.joda.time.DurationFieldType getRangeDurationType()
    {
        org.joda.time.DateTimeFieldType$StandardDateTimeFieldType r0;
        org.joda.time.DurationFieldType r1;

        r0 := @this: org.joda.time.DateTimeFieldType$StandardDateTimeFieldType;

        r1 = r0.<org.joda.time.DateTimeFieldType$StandardDateTimeFieldType: org.joda.time.DurationFieldType iRangeType>;

        return r1;
    }
    public int hashCode()
    {
        org.joda.time.DateTimeFieldType$StandardDateTimeFieldType r0;
        byte $b0;
        int $i1;

        r0 := @this: org.joda.time.DateTimeFieldType$StandardDateTimeFieldType;

        $b0 = r0.<org.joda.time.DateTimeFieldType$StandardDateTimeFieldType: byte iOrdinal>;

        $i1 = 1 << $b0;

        return $i1;
    }
