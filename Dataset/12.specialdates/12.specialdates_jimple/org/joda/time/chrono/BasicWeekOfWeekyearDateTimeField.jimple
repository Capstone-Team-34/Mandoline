org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField extends org.joda.time.field.PreciseDurationDateTimeField
private static final long serialVersionUID
private final org.joda.time.chrono.BasicChronology iChronology
    void <init>(org.joda.time.chrono.BasicChronology, org.joda.time.DurationField)
    {
        org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField r0;
        org.joda.time.chrono.BasicChronology $r1;
        org.joda.time.DurationField $r2;
        org.joda.time.DateTimeFieldType $r3;

        r0 := @this: org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField;

        $r1 := @parameter0: org.joda.time.chrono.BasicChronology;

        $r2 := @parameter1: org.joda.time.DurationField;

        $r3 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType weekOfWeekyear()>();

        specialinvoke r0.<org.joda.time.field.PreciseDurationDateTimeField: void <init>(org.joda.time.DateTimeFieldType,org.joda.time.DurationField)>($r3, $r2);

        r0.<org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology> = $r1;

        return;
    }
    private java.lang.Object readResolve()
    {
        org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField r0;
        org.joda.time.DateTimeField $r1;
        org.joda.time.chrono.BasicChronology $r2;

        r0 := @this: org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField;

        $r2 = r0.<org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $r1 = virtualinvoke $r2.<org.joda.time.chrono.BasicChronology: org.joda.time.DateTimeField weekOfWeekyear()>();

        return $r1;
    }
    public int get(long)
    {
        org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField r0;
        long $l0;
        int $i1;
        org.joda.time.chrono.BasicChronology $r1;

        r0 := @this: org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField;

        $l0 := @parameter0: long;

        $r1 = r0.<org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $i1 = virtualinvoke $r1.<org.joda.time.chrono.BasicChronology: int getWeekOfWeekyear(long)>($l0);

        return $i1;
    }
    public int getMaximumValue()
    {
        org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField r0;

        r0 := @this: org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField;

        return 53;
    }
    public int getMaximumValue(long)
    {
        org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField r0;
        long $l0;
        org.joda.time.chrono.BasicChronology $r1;
        int $i1;

        r0 := @this: org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField;

        $l0 := @parameter0: long;

        $r1 = r0.<org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $i1 = virtualinvoke $r1.<org.joda.time.chrono.BasicChronology: int getWeekyear(long)>($l0);

        $r1 = r0.<org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $i1 = virtualinvoke $r1.<org.joda.time.chrono.BasicChronology: int getWeeksInYear(int)>($i1);

        return $i1;
    }
    public int getMaximumValue(org.joda.time.ReadablePartial)
    {
        org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField r0;
        org.joda.time.ReadablePartial $r1;
        org.joda.time.chrono.BasicChronology $r2;
        org.joda.time.DateTimeFieldType $r3;
        boolean $z0;
        int $i0;

        r0 := @this: org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField;

        $r1 := @parameter0: org.joda.time.ReadablePartial;

        $r3 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType weekyear()>();

        $z0 = interfaceinvoke $r1.<org.joda.time.ReadablePartial: boolean isSupported(org.joda.time.DateTimeFieldType)>($r3);

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType weekyear()>();

        $i0 = interfaceinvoke $r1.<org.joda.time.ReadablePartial: int get(org.joda.time.DateTimeFieldType)>($r3);

        $r2 = r0.<org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $i0 = virtualinvoke $r2.<org.joda.time.chrono.BasicChronology: int getWeeksInYear(int)>($i0);

        return $i0;

     label1:
        return 53;
    }
    public int getMaximumValue(org.joda.time.ReadablePartial, int[])
    {
        org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField r0;
        org.joda.time.ReadablePartial $r1;
        int[] $r2;
        int $i0, $i1;
        org.joda.time.DateTimeFieldType $r3, $r4;
        org.joda.time.chrono.BasicChronology $r5;

        r0 := @this: org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField;

        $r1 := @parameter0: org.joda.time.ReadablePartial;

        $r2 := @parameter1: int[];

        $i0 = interfaceinvoke $r1.<org.joda.time.ReadablePartial: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r3 = interfaceinvoke $r1.<org.joda.time.ReadablePartial: org.joda.time.DateTimeFieldType getFieldType(int)>($i1);

        $r4 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType weekyear()>();

        if $r3 != $r4 goto label2;

        $i0 = $r2[$i1];

        $r5 = r0.<org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $i0 = virtualinvoke $r5.<org.joda.time.chrono.BasicChronology: int getWeeksInYear(int)>($i0);

        return $i0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 53;
    }
    protected int getMaximumValueForSet(long, int)
    {
        org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField r0;
        long $l0;
        int $i1;

        r0 := @this: org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        if $i1 <= 52 goto label1;

        $i1 = virtualinvoke r0.<org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField: int getMaximumValue(long)>($l0);

        return $i1;

     label1:
        return 52;
    }
    public int getMinimumValue()
    {
        org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField r0;

        r0 := @this: org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField;

        return 1;
    }
    public org.joda.time.DurationField getRangeDurationField()
    {
        org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField r0;
        org.joda.time.DurationField $r1;
        org.joda.time.chrono.BasicChronology $r2;

        r0 := @this: org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField;

        $r2 = r0.<org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $r1 = virtualinvoke $r2.<org.joda.time.chrono.BasicChronology: org.joda.time.DurationField weekyears()>();

        return $r1;
    }
    public long remainder(long)
    {
        org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField r0;
        long $l0;

        r0 := @this: org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField;

        $l0 := @parameter0: long;

        $l0 = 259200000L + $l0;

        $l0 = specialinvoke r0.<org.joda.time.field.PreciseDurationDateTimeField: long remainder(long)>($l0);

        return $l0;
    }
    public long roundCeiling(long)
    {
        org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField r0;
        long $l0;

        r0 := @this: org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField;

        $l0 := @parameter0: long;

        $l0 = $l0 + 259200000L;

        $l0 = specialinvoke r0.<org.joda.time.field.PreciseDurationDateTimeField: long roundCeiling(long)>($l0);

        $l0 = $l0 - 259200000L;

        return $l0;
    }
    public long roundFloor(long)
    {
        org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField r0;
        long $l0;

        r0 := @this: org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField;

        $l0 := @parameter0: long;

        $l0 = $l0 + 259200000L;

        $l0 = specialinvoke r0.<org.joda.time.field.PreciseDurationDateTimeField: long roundFloor(long)>($l0);

        $l0 = $l0 - 259200000L;

        return $l0;
    }
