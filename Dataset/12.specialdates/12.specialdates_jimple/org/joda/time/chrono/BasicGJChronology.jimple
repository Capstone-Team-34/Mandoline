org.joda.time.chrono.BasicGJChronology extends org.joda.time.chrono.BasicChronology
private static final long FEB_29
private static final int[] MAX_DAYS_PER_MONTH_ARRAY
private static final long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY
private static final int[] MIN_DAYS_PER_MONTH_ARRAY
private static final long[] MIN_TOTAL_MILLIS_BY_MONTH_ARRAY
private static final long serialVersionUID
    static void <clinit>()
    {
        long $l0, $l2, $l4;
        int[] $r0;
        long[] $r1;
        int $i1, $i3;

        $l0 = 0L;

        $r0 = newarray (int)[12];

        $r0[0] = 31;

        $r0[1] = 28;

        $r0[2] = 31;

        $r0[3] = 30;

        $r0[4] = 31;

        $r0[5] = 30;

        $r0[6] = 31;

        $r0[7] = 31;

        $r0[8] = 30;

        $r0[9] = 31;

        $r0[10] = 30;

        $r0[11] = 31;

        <org.joda.time.chrono.BasicGJChronology: int[] MIN_DAYS_PER_MONTH_ARRAY> = $r0;

        $r0 = newarray (int)[12];

        $r0[0] = 31;

        $r0[1] = 29;

        $r0[2] = 31;

        $r0[3] = 30;

        $r0[4] = 31;

        $r0[5] = 30;

        $r0[6] = 31;

        $r0[7] = 31;

        $r0[8] = 30;

        $r0[9] = 31;

        $r0[10] = 30;

        $r0[11] = 31;

        <org.joda.time.chrono.BasicGJChronology: int[] MAX_DAYS_PER_MONTH_ARRAY> = $r0;

        $r1 = newarray (long)[12];

        <org.joda.time.chrono.BasicGJChronology: long[] MIN_TOTAL_MILLIS_BY_MONTH_ARRAY> = $r1;

        $r1 = newarray (long)[12];

        <org.joda.time.chrono.BasicGJChronology: long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY> = $r1;

        $i1 = 0;

        $l2 = 0L;

     label1:
        if $i1 >= 11 goto label2;

        $r0 = <org.joda.time.chrono.BasicGJChronology: int[] MIN_DAYS_PER_MONTH_ARRAY>;

        $i3 = $r0[$i1];

        $l4 = (long) $i3;

        $l4 = $l4 * 86400000L;

        $l2 = $l2 + $l4;

        $r1 = <org.joda.time.chrono.BasicGJChronology: long[] MIN_TOTAL_MILLIS_BY_MONTH_ARRAY>;

        $i3 = $i1 + 1;

        $r1[$i3] = $l2;

        $r0 = <org.joda.time.chrono.BasicGJChronology: int[] MAX_DAYS_PER_MONTH_ARRAY>;

        $i3 = $r0[$i1];

        $l4 = (long) $i3;

        $l4 = $l4 * 86400000L;

        $l0 = $l0 + $l4;

        $r1 = <org.joda.time.chrono.BasicGJChronology: long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY>;

        $i3 = $i1 + 1;

        $r1[$i3] = $l0;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }
    void <init>(org.joda.time.Chronology, java.lang.Object, int)
    {
        org.joda.time.chrono.BasicGJChronology r0;
        org.joda.time.Chronology $r1;
        java.lang.Object $r2;
        int $i0;

        r0 := @this: org.joda.time.chrono.BasicGJChronology;

        $r1 := @parameter0: org.joda.time.Chronology;

        $r2 := @parameter1: java.lang.Object;

        $i0 := @parameter2: int;

        specialinvoke r0.<org.joda.time.chrono.BasicChronology: void <init>(org.joda.time.Chronology,java.lang.Object,int)>($r1, $r2, $i0);

        return;
    }
    int getDaysInMonthMax(int)
    {
        org.joda.time.chrono.BasicGJChronology r0;
        int $i0;
        int[] $r1;

        r0 := @this: org.joda.time.chrono.BasicGJChronology;

        $i0 := @parameter0: int;

        $r1 = <org.joda.time.chrono.BasicGJChronology: int[] MAX_DAYS_PER_MONTH_ARRAY>;

        $i0 = $i0 + -1;

        $i0 = $r1[$i0];

        return $i0;
    }
    int getDaysInMonthMaxForSet(long, int)
    {
        org.joda.time.chrono.BasicGJChronology r0;
        long $l0;
        int $i1;

        r0 := @this: org.joda.time.chrono.BasicGJChronology;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        if $i1 > 28 goto label1;

        if $i1 >= 1 goto label2;

     label1:
        $i1 = virtualinvoke r0.<org.joda.time.chrono.BasicGJChronology: int getDaysInMonthMax(long)>($l0);

        return $i1;

     label2:
        return 28;
    }
    int getDaysInYearMonth(int, int)
    {
        org.joda.time.chrono.BasicGJChronology r0;
        int $i0, $i1;
        boolean $z0;
        int[] $r1;

        r0 := @this: org.joda.time.chrono.BasicGJChronology;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 = virtualinvoke r0.<org.joda.time.chrono.BasicGJChronology: boolean isLeapYear(int)>($i0);

        if $z0 == 0 goto label1;

        $r1 = <org.joda.time.chrono.BasicGJChronology: int[] MAX_DAYS_PER_MONTH_ARRAY>;

        $i0 = $i1 + -1;

        $i0 = $r1[$i0];

        return $i0;

     label1:
        $r1 = <org.joda.time.chrono.BasicGJChronology: int[] MIN_DAYS_PER_MONTH_ARRAY>;

        $i0 = $i1 + -1;

        $i0 = $r1[$i0];

        return $i0;
    }
    int getMonthOfYear(long, int)
    {
        org.joda.time.chrono.BasicGJChronology r0;
        long $l0, $l3;
        int $i1, $i2;
        boolean $z0;

        r0 := @this: org.joda.time.chrono.BasicGJChronology;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $l3 = virtualinvoke r0.<org.joda.time.chrono.BasicGJChronology: long getYearMillis(int)>($i1);

        $l0 = $l0 - $l3;

        $l0 = $l0 >> 10;

        $i2 = (int) $l0;

        $z0 = virtualinvoke r0.<org.joda.time.chrono.BasicGJChronology: boolean isLeapYear(int)>($i1);

        if $z0 == 0 goto label12;

        if $i2 >= 15356250 goto label06;

        if $i2 >= 7678125 goto label03;

        if $i2 >= 2615625 goto label01;

        return 1;

     label01:
        if $i2 >= 5062500 goto label02;

        return 2;

     label02:
        return 3;

     label03:
        if $i2 >= 10209375 goto label04;

        return 4;

     label04:
        if $i2 >= 12825000 goto label05;

        return 5;

     label05:
        return 6;

     label06:
        if $i2 >= 23118750 goto label09;

        if $i2 >= 17971875 goto label07;

        return 7;

     label07:
        if $i2 >= 20587500 goto label08;

        return 8;

     label08:
        return 9;

     label09:
        if $i2 >= 25734375 goto label10;

        return 10;

     label10:
        if $i2 >= 28265625 goto label11;

        return 11;

     label11:
        return 12;

     label12:
        if $i2 >= 15271875 goto label17;

        if $i2 >= 7593750 goto label14;

        if $i2 < 2615625 goto label23;

        if $i2 >= 4978125 goto label13;

        return 2;

     label13:
        return 3;

     label14:
        if $i2 >= 10125000 goto label15;

        return 4;

     label15:
        if $i2 >= 12740625 goto label16;

        return 5;

     label16:
        return 6;

     label17:
        if $i2 >= 23034375 goto label20;

        if $i2 >= 17887500 goto label18;

        return 7;

     label18:
        if $i2 >= 20503125 goto label19;

        return 8;

     label19:
        return 9;

     label20:
        if $i2 >= 25650000 goto label21;

        return 10;

     label21:
        if $i2 >= 28181250 goto label22;

        return 11;

     label22:
        return 12;

     label23:
        return 1;
    }
    long getTotalMillisByYearMonth(int, int)
    {
        org.joda.time.chrono.BasicGJChronology r0;
        int $i0, $i1;
        boolean $z0;
        long[] $r1;
        long $l2;

        r0 := @this: org.joda.time.chrono.BasicGJChronology;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 = virtualinvoke r0.<org.joda.time.chrono.BasicGJChronology: boolean isLeapYear(int)>($i0);

        if $z0 == 0 goto label1;

        $r1 = <org.joda.time.chrono.BasicGJChronology: long[] MAX_TOTAL_MILLIS_BY_MONTH_ARRAY>;

        $i0 = $i1 + -1;

        $l2 = $r1[$i0];

        return $l2;

     label1:
        $r1 = <org.joda.time.chrono.BasicGJChronology: long[] MIN_TOTAL_MILLIS_BY_MONTH_ARRAY>;

        $i0 = $i1 + -1;

        $l2 = $r1[$i0];

        return $l2;
    }
    long getYearDifference(long, long)
    {
        org.joda.time.chrono.BasicGJChronology r0;
        long $l0, $l1, $l5;
        byte $b2;
        int $i3, $i4;
        boolean $z0;

        r0 := @this: org.joda.time.chrono.BasicGJChronology;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $i3 = virtualinvoke r0.<org.joda.time.chrono.BasicGJChronology: int getYear(long)>($l0);

        $i4 = virtualinvoke r0.<org.joda.time.chrono.BasicGJChronology: int getYear(long)>($l1);

        $l5 = virtualinvoke r0.<org.joda.time.chrono.BasicGJChronology: long getYearMillis(int)>($i3);

        $l0 = $l0 - $l5;

        $l5 = virtualinvoke r0.<org.joda.time.chrono.BasicGJChronology: long getYearMillis(int)>($i4);

        $l1 = $l1 - $l5;

        $b2 = $l1 cmp 5097600000L;

        if $b2 < 0 goto label4;

        $z0 = virtualinvoke r0.<org.joda.time.chrono.BasicGJChronology: boolean isLeapYear(int)>($i4);

        if $z0 == 0 goto label3;

        $z0 = virtualinvoke r0.<org.joda.time.chrono.BasicGJChronology: boolean isLeapYear(int)>($i3);

        if $z0 != 0 goto label4;

        $l1 = $l1 - 86400000L;

     label1:
        $i3 = $i3 - $i4;

        $b2 = $l0 cmp $l1;

        if $b2 >= 0 goto label2;

        $i3 = $i3 + -1;

     label2:
        $l0 = (long) $i3;

        return $l0;

     label3:
        $b2 = $l0 cmp 5097600000L;

        if $b2 < 0 goto label4;

        $z0 = virtualinvoke r0.<org.joda.time.chrono.BasicGJChronology: boolean isLeapYear(int)>($i3);

        if $z0 == 0 goto label4;

        $l0 = $l0 - 86400000L;

        goto label1;

     label4:
        goto label1;
    }
    boolean isLeapDay(long)
    {
        org.joda.time.chrono.BasicGJChronology r0;
        long $l0;
        org.joda.time.DateTimeField $r1;
        int $i1;
        boolean $z0;

        r0 := @this: org.joda.time.chrono.BasicGJChronology;

        $l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<org.joda.time.chrono.BasicGJChronology: org.joda.time.DateTimeField dayOfMonth()>();

        $i1 = virtualinvoke $r1.<org.joda.time.DateTimeField: int get(long)>($l0);

        if $i1 != 29 goto label1;

        $r1 = virtualinvoke r0.<org.joda.time.chrono.BasicGJChronology: org.joda.time.DateTimeField monthOfYear()>();

        $z0 = virtualinvoke $r1.<org.joda.time.DateTimeField: boolean isLeap(long)>($l0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    long setYear(long, int)
    {
        org.joda.time.chrono.BasicGJChronology r0;
        long $l0, $l6;
        int $i1, $i2, $i3, $i4, $i5;
        boolean $z0;

        r0 := @this: org.joda.time.chrono.BasicGJChronology;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<org.joda.time.chrono.BasicGJChronology: int getYear(long)>($l0);

        $i3 = virtualinvoke r0.<org.joda.time.chrono.BasicGJChronology: int getDayOfYear(long,int)>($l0, $i2);

        $i4 = $i3;

        $i5 = virtualinvoke r0.<org.joda.time.chrono.BasicGJChronology: int getMillisOfDay(long)>($l0);

        if $i3 <= 59 goto label1;

        $z0 = virtualinvoke r0.<org.joda.time.chrono.BasicGJChronology: boolean isLeapYear(int)>($i2);

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke r0.<org.joda.time.chrono.BasicGJChronology: boolean isLeapYear(int)>($i1);

        if $z0 != 0 goto label1;

        $i4 = $i3 + -1;

     label1:
        $l0 = virtualinvoke r0.<org.joda.time.chrono.BasicGJChronology: long getYearMonthDayMillis(int,int,int)>($i1, 1, $i4);

        $l6 = (long) $i5;

        $l0 = $l0 + $l6;

        return $l0;

     label2:
        $z0 = virtualinvoke r0.<org.joda.time.chrono.BasicGJChronology: boolean isLeapYear(int)>($i1);

        if $z0 == 0 goto label1;

        $i4 = $i3 + 1;

        goto label1;
    }
