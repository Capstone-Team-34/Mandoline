org.joda.time.DurationField extends java.lang.Object implements java.lang.Comparable
    public void <init>()
    {
        org.joda.time.DurationField r0;

        r0 := @this: org.joda.time.DurationField;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
public abstract long add(long, int) { 
// no body
} 
public abstract long add(long, long) { 
// no body
} 
public abstract int getDifference(long, long) { 
// no body
} 
public abstract long getDifferenceAsLong(long, long) { 
// no body
} 
public abstract long getMillis(int) { 
// no body
} 
public abstract long getMillis(int, long) { 
// no body
} 
public abstract long getMillis(long) { 
// no body
} 
public abstract long getMillis(long, long) { 
// no body
} 
public abstract java.lang.String getName() { 
// no body
} 
public abstract org.joda.time.DurationFieldType getType() { 
// no body
} 
public abstract long getUnitMillis() { 
// no body
} 
public abstract int getValue(long) { 
// no body
} 
public abstract int getValue(long, long) { 
// no body
} 
public abstract long getValueAsLong(long) { 
// no body
} 
public abstract long getValueAsLong(long, long) { 
// no body
} 
public abstract boolean isPrecise() { 
// no body
} 
public abstract boolean isSupported() { 
// no body
} 
    public long subtract(long, int)
    {
        org.joda.time.DurationField r0;
        long $l0, $l2;
        int $i1;

        r0 := @this: org.joda.time.DurationField;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        if $i1 != -2147483648 goto label1;

        $l2 = (long) $i1;

        $l0 = virtualinvoke r0.<org.joda.time.DurationField: long subtract(long,long)>($l0, $l2);

        return $l0;

     label1:
        $i1 = neg $i1;

        $l0 = virtualinvoke r0.<org.joda.time.DurationField: long add(long,int)>($l0, $i1);

        return $l0;
    }
    public long subtract(long, long)
    {
        org.joda.time.DurationField r0;
        long $l0, $l1;
        byte $b2;
        java.lang.ArithmeticException $r1;

        r0 := @this: org.joda.time.DurationField;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $b2 = $l1 cmp -9223372036854775808L;

        if $b2 != 0 goto label1;

        $r1 = new java.lang.ArithmeticException;

        specialinvoke $r1.<java.lang.ArithmeticException: void <init>(java.lang.String)>("Long.MIN_VALUE cannot be negated");

        throw $r1;

     label1:
        $l1 = neg $l1;

        $l0 = virtualinvoke r0.<org.joda.time.DurationField: long add(long,long)>($l0, $l1);

        return $l0;
    }
public abstract java.lang.String toString() { 
// no body
} 
