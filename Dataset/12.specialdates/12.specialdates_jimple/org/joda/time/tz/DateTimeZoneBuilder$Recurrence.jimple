org.joda.time.tz.DateTimeZoneBuilder$Recurrence extends java.lang.Object
final java.lang.String iNameKey
final org.joda.time.tz.DateTimeZoneBuilder$OfYear iOfYear
final int iSaveMillis
    void <init>(org.joda.time.tz.DateTimeZoneBuilder$OfYear, java.lang.String, int)
    {
        org.joda.time.tz.DateTimeZoneBuilder$Recurrence r0;
        org.joda.time.tz.DateTimeZoneBuilder$OfYear $r1;
        java.lang.String $r2;
        int $i0;

        r0 := @this: org.joda.time.tz.DateTimeZoneBuilder$Recurrence;

        $r1 := @parameter0: org.joda.time.tz.DateTimeZoneBuilder$OfYear;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: org.joda.time.tz.DateTimeZoneBuilder$OfYear iOfYear> = $r1;

        r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: java.lang.String iNameKey> = $r2;

        r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: int iSaveMillis> = $i0;

        return;
    }
    static org.joda.time.tz.DateTimeZoneBuilder$Recurrence readFrom(java.io.DataInput)
    {
        java.io.DataInput $r0;
        org.joda.time.tz.DateTimeZoneBuilder$Recurrence $r1;
        int $i0;
        org.joda.time.tz.DateTimeZoneBuilder$OfYear $r2;
        java.lang.String $r3;
        long $l1;

        $r0 := @parameter0: java.io.DataInput;

        $r1 = new org.joda.time.tz.DateTimeZoneBuilder$Recurrence;

        $r2 = staticinvoke <org.joda.time.tz.DateTimeZoneBuilder$OfYear: org.joda.time.tz.DateTimeZoneBuilder$OfYear readFrom(java.io.DataInput)>($r0);

        $r3 = interfaceinvoke $r0.<java.io.DataInput: java.lang.String readUTF()>();

        $l1 = staticinvoke <org.joda.time.tz.DateTimeZoneBuilder: long readMillis(java.io.DataInput)>($r0);

        $i0 = (int) $l1;

        specialinvoke $r1.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: void <init>(org.joda.time.tz.DateTimeZoneBuilder$OfYear,java.lang.String,int)>($r2, $r3, $i0);

        return $r1;
    }
    public boolean equals(java.lang.Object)
    {
        org.joda.time.tz.DateTimeZoneBuilder$Recurrence r0, $r2;
        java.lang.Object $r1;
        boolean $z0;
        int $i0, $i1;
        java.lang.String $r3, $r4;
        org.joda.time.tz.DateTimeZoneBuilder$OfYear $r5, $r6;

        r0 := @this: org.joda.time.tz.DateTimeZoneBuilder$Recurrence;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof org.joda.time.tz.DateTimeZoneBuilder$Recurrence;

        if $z0 == 0 goto label2;

        $r2 = (org.joda.time.tz.DateTimeZoneBuilder$Recurrence) $r1;

        $i0 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: int iSaveMillis>;

        $i1 = $r2.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: int iSaveMillis>;

        if $i0 != $i1 goto label2;

        $r3 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: java.lang.String iNameKey>;

        $r4 = $r2.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: java.lang.String iNameKey>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r5 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: org.joda.time.tz.DateTimeZoneBuilder$OfYear iOfYear>;

        $r6 = $r2.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: org.joda.time.tz.DateTimeZoneBuilder$OfYear iOfYear>;

        $z0 = virtualinvoke $r5.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }
    public java.lang.String getNameKey()
    {
        org.joda.time.tz.DateTimeZoneBuilder$Recurrence r0;
        java.lang.String r1;

        r0 := @this: org.joda.time.tz.DateTimeZoneBuilder$Recurrence;

        r1 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: java.lang.String iNameKey>;

        return r1;
    }
    public org.joda.time.tz.DateTimeZoneBuilder$OfYear getOfYear()
    {
        org.joda.time.tz.DateTimeZoneBuilder$Recurrence r0;
        org.joda.time.tz.DateTimeZoneBuilder$OfYear r1;

        r0 := @this: org.joda.time.tz.DateTimeZoneBuilder$Recurrence;

        r1 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: org.joda.time.tz.DateTimeZoneBuilder$OfYear iOfYear>;

        return r1;
    }
    public int getSaveMillis()
    {
        org.joda.time.tz.DateTimeZoneBuilder$Recurrence r0;
        int i0;

        r0 := @this: org.joda.time.tz.DateTimeZoneBuilder$Recurrence;

        i0 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: int iSaveMillis>;

        return i0;
    }
    public long next(long, int, int)
    {
        org.joda.time.tz.DateTimeZoneBuilder$Recurrence r0;
        long $l0;
        int $i1, $i2;
        org.joda.time.tz.DateTimeZoneBuilder$OfYear $r1;

        r0 := @this: org.joda.time.tz.DateTimeZoneBuilder$Recurrence;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r1 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: org.joda.time.tz.DateTimeZoneBuilder$OfYear iOfYear>;

        $l0 = virtualinvoke $r1.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: long next(long,int,int)>($l0, $i1, $i2);

        return $l0;
    }
    public long previous(long, int, int)
    {
        org.joda.time.tz.DateTimeZoneBuilder$Recurrence r0;
        long $l0;
        int $i1, $i2;
        org.joda.time.tz.DateTimeZoneBuilder$OfYear $r1;

        r0 := @this: org.joda.time.tz.DateTimeZoneBuilder$Recurrence;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r1 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: org.joda.time.tz.DateTimeZoneBuilder$OfYear iOfYear>;

        $l0 = virtualinvoke $r1.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: long previous(long,int,int)>($l0, $i1, $i2);

        return $l0;
    }
    org.joda.time.tz.DateTimeZoneBuilder$Recurrence rename(java.lang.String)
    {
        org.joda.time.tz.DateTimeZoneBuilder$Recurrence r0, $r2;
        java.lang.String $r1;
        org.joda.time.tz.DateTimeZoneBuilder$OfYear $r3;
        int $i0;

        r0 := @this: org.joda.time.tz.DateTimeZoneBuilder$Recurrence;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.joda.time.tz.DateTimeZoneBuilder$Recurrence;

        $r3 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: org.joda.time.tz.DateTimeZoneBuilder$OfYear iOfYear>;

        $i0 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: int iSaveMillis>;

        specialinvoke $r2.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: void <init>(org.joda.time.tz.DateTimeZoneBuilder$OfYear,java.lang.String,int)>($r3, $r1, $i0);

        return $r2;
    }
    org.joda.time.tz.DateTimeZoneBuilder$Recurrence renameAppend(java.lang.String)
    {
        org.joda.time.tz.DateTimeZoneBuilder$Recurrence r0;
        java.lang.String $r1, $r2;
        java.lang.StringBuilder $r3;

        r0 := @this: org.joda.time.tz.DateTimeZoneBuilder$Recurrence;

        $r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: java.lang.String iNameKey>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String intern()>();

        r0 = virtualinvoke r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: org.joda.time.tz.DateTimeZoneBuilder$Recurrence rename(java.lang.String)>($r1);

        return r0;
    }
    public void writeTo(java.io.DataOutput)
    {
        org.joda.time.tz.DateTimeZoneBuilder$Recurrence r0;
        java.io.DataOutput $r1;
        org.joda.time.tz.DateTimeZoneBuilder$OfYear $r2;
        java.lang.String $r3;
        int $i0;
        long $l1;

        r0 := @this: org.joda.time.tz.DateTimeZoneBuilder$Recurrence;

        $r1 := @parameter0: java.io.DataOutput;

        $r2 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: org.joda.time.tz.DateTimeZoneBuilder$OfYear iOfYear>;

        virtualinvoke $r2.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: void writeTo(java.io.DataOutput)>($r1);

        $r3 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: java.lang.String iNameKey>;

        interfaceinvoke $r1.<java.io.DataOutput: void writeUTF(java.lang.String)>($r3);

        $i0 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: int iSaveMillis>;

        $l1 = (long) $i0;

        staticinvoke <org.joda.time.tz.DateTimeZoneBuilder: void writeMillis(java.io.DataOutput,long)>($r1, $l1);

        return;
    }
