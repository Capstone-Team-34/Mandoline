org.joda.time.convert.ConverterSet extends java.lang.Object
private final org.joda.time.convert.Converter[] iConverters
private org.joda.time.convert.ConverterSet$Entry[] iSelectEntries
    void <init>(org.joda.time.convert.Converter[])
    {
        org.joda.time.convert.ConverterSet r0;
        org.joda.time.convert.Converter[] $r1;
        org.joda.time.convert.ConverterSet$Entry[] $r2;

        r0 := @this: org.joda.time.convert.ConverterSet;

        $r1 := @parameter0: org.joda.time.convert.Converter[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters> = $r1;

        $r2 = newarray (org.joda.time.convert.ConverterSet$Entry)[16];

        r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.ConverterSet$Entry[] iSelectEntries> = $r2;

        return;
    }
    private static org.joda.time.convert.Converter selectSlow(org.joda.time.convert.ConverterSet, java.lang.Class)
    {
        org.joda.time.convert.ConverterSet $r0, $r5;
        java.lang.Class $r1, $r4, $r6;
        org.joda.time.convert.Converter[] $r2;
        int $i0, $i1, $i2;
        org.joda.time.convert.Converter $r3;
        boolean $z0;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        java.lang.IllegalStateException $r9;

        $r0 := @parameter0: org.joda.time.convert.ConverterSet;

        $r1 := @parameter1: java.lang.Class;

        $r2 = $r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>;

        $i0 = lengthof $r2;

        $i1 = $i0;

     label01:
        $i1 = $i1 + -1;

        if $i1 < 0 goto label05;

        $r3 = $r2[$i1];

        $r4 = interfaceinvoke $r3.<org.joda.time.convert.Converter: java.lang.Class getSupportedType()>();

        if $r4 != $r1 goto label02;

        return $r3;

     label02:
        if $r4 == null goto label03;

        if $r1 == null goto label04;

        $z0 = virtualinvoke $r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r1);

        if $z0 != 0 goto label04;

     label03:
        $r5 = virtualinvoke $r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.ConverterSet remove(int,org.joda.time.convert.Converter[])>($i1, null);

        $r0 = $r5;

        $r2 = $r5.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>;

        $i0 = lengthof $r2;

     label04:
        goto label01;

     label05:
        if $r1 == null goto label16;

        if $i0 == 0 goto label16;

        if $i0 != 1 goto label06;

        $r3 = $r2[0];

        return $r3;

     label06:
        $i1 = $i0;

     label07:
        $i0 = $i0 + -1;

        if $i0 < 0 goto label10;

        $r3 = $r2[$i0];

        $r4 = interfaceinvoke $r3.<org.joda.time.convert.Converter: java.lang.Class getSupportedType()>();

        $i2 = $i1;

     label08:
        $i2 = $i2 + -1;

        if $i2 < 0 goto label09;

        if $i2 == $i0 goto label08;

        $r3 = $r2[$i2];

        $r6 = interfaceinvoke $r3.<org.joda.time.convert.Converter: java.lang.Class getSupportedType()>();

        $z0 = virtualinvoke $r6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4);

        if $z0 == 0 goto label08;

        $r5 = virtualinvoke $r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.ConverterSet remove(int,org.joda.time.convert.Converter[])>($i2, null);

        $r0 = $r5;

        $r2 = $r5.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>;

        $i1 = lengthof $r2;

        $i0 = $i1 + -1;

        goto label08;

     label09:
        goto label07;

     label10:
        if $i1 != 1 goto label11;

        $r3 = $r2[0];

        return $r3;

     label11:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find best converter for type \"");

        $r8 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" from remaining set: ");

        $i0 = 0;

     label12:
        if $i0 >= $i1 goto label15;

        $r3 = $r2[$i0];

        $r1 = interfaceinvoke $r3.<org.joda.time.convert.Converter: java.lang.Class getSupportedType()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        if $r1 != null goto label14;

        $r8 = null;

     label13:
        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], ");

        $i0 = $i0 + 1;

        goto label12;

     label14:
        $r8 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        goto label13;

     label15:
        $r9 = new java.lang.IllegalStateException;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r9;

     label16:
        return null;
    }
    org.joda.time.convert.ConverterSet add(org.joda.time.convert.Converter, org.joda.time.convert.Converter[])
    {
        org.joda.time.convert.Converter $r0, $r3, $r8;
        org.joda.time.convert.Converter[] $r1, $r2, $r7;
        int $i0, $i1, $i2;
        org.joda.time.convert.ConverterSet r4;
        boolean $z0;
        java.lang.Class $r5, $r6;

        r4 := @this: org.joda.time.convert.ConverterSet;

        $r0 := @parameter0: org.joda.time.convert.Converter;

        $r1 := @parameter1: org.joda.time.convert.Converter[];

        $r2 = r4.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>;

        $i0 = lengthof $r2;

        $i1 = 0;

     label01:
        if $i1 >= $i0 goto label09;

        $r3 = $r2[$i1];

        $z0 = virtualinvoke $r0.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label02;

        if $r1 == null goto label11;

        $r1[0] = null;

        return r4;

     label02:
        $r5 = interfaceinvoke $r0.<org.joda.time.convert.Converter: java.lang.Class getSupportedType()>();

        $r6 = interfaceinvoke $r3.<org.joda.time.convert.Converter: java.lang.Class getSupportedType()>();

        if $r5 != $r6 goto label08;

        $r7 = newarray (org.joda.time.convert.Converter)[$i0];

        $i2 = 0;

     label03:
        if $i2 >= $i0 goto label06;

        if $i2 == $i1 goto label05;

        $r8 = $r2[$i2];

        $r7[$i2] = $r8;

     label04:
        $i2 = $i2 + 1;

        goto label03;

     label05:
        $r7[$i2] = $r0;

        goto label04;

     label06:
        if $r1 == null goto label07;

        $r1[0] = $r3;

     label07:
        r4 = new org.joda.time.convert.ConverterSet;

        specialinvoke r4.<org.joda.time.convert.ConverterSet: void <init>(org.joda.time.convert.Converter[])>($r7);

        return r4;

     label08:
        $i1 = $i1 + 1;

        goto label01;

     label09:
        $i1 = $i0 + 1;

        $r7 = newarray (org.joda.time.convert.Converter)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r7, 0, $i0);

        $r7[$i0] = $r0;

        if $r1 == null goto label10;

        $r1[0] = null;

     label10:
        r4 = new org.joda.time.convert.ConverterSet;

        specialinvoke r4.<org.joda.time.convert.ConverterSet: void <init>(org.joda.time.convert.Converter[])>($r7);

     label11:
        return r4;
    }
    void copyInto(org.joda.time.convert.Converter[])
    {
        org.joda.time.convert.ConverterSet r0;
        org.joda.time.convert.Converter[] $r1, $r2, $r3;
        int $i0;

        r0 := @this: org.joda.time.convert.ConverterSet;

        $r1 := @parameter0: org.joda.time.convert.Converter[];

        $r2 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>;

        $r3 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>;

        $i0 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i0);

        return;
    }
    org.joda.time.convert.ConverterSet remove(int, org.joda.time.convert.Converter[])
    {
        org.joda.time.convert.ConverterSet r0;
        int $i0, $i1, $i2, $i3, $i4;
        org.joda.time.convert.Converter[] $r1, $r2;
        org.joda.time.convert.Converter $r3;
        java.lang.IndexOutOfBoundsException $r4;

        r0 := @this: org.joda.time.convert.ConverterSet;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.joda.time.convert.Converter[];

        $r2 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>;

        $i1 = lengthof $r2;

        if $i0 < $i1 goto label1;

        $r4 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r4.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r4;

     label1:
        if $r1 == null goto label2;

        $r3 = $r2[$i0];

        $r1[0] = $r3;

     label2:
        $i2 = $i1 + -1;

        $r1 = newarray (org.joda.time.convert.Converter)[$i2];

        $i3 = 0;

        $i4 = 0;

     label3:
        if $i3 >= $i1 goto label5;

        if $i3 == $i0 goto label6;

        $i2 = $i4 + 1;

        $r3 = $r2[$i3];

        $r1[$i4] = $r3;

     label4:
        $i3 = $i3 + 1;

        $i4 = $i2;

        goto label3;

     label5:
        r0 = new org.joda.time.convert.ConverterSet;

        specialinvoke r0.<org.joda.time.convert.ConverterSet: void <init>(org.joda.time.convert.Converter[])>($r1);

        return r0;

     label6:
        $i2 = $i4;

        goto label4;
    }
    org.joda.time.convert.ConverterSet remove(org.joda.time.convert.Converter, org.joda.time.convert.Converter[])
    {
        org.joda.time.convert.Converter $r0, $r4;
        org.joda.time.convert.Converter[] $r1, $r2;
        int $i0, $i1;
        org.joda.time.convert.ConverterSet r3;
        boolean $z0;

        r3 := @this: org.joda.time.convert.ConverterSet;

        $r0 := @parameter0: org.joda.time.convert.Converter;

        $r1 := @parameter1: org.joda.time.convert.Converter[];

        $r2 = r3.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>;

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r4 = $r2[$i1];

        $z0 = virtualinvoke $r0.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        r3 = virtualinvoke r3.<org.joda.time.convert.ConverterSet: org.joda.time.convert.ConverterSet remove(int,org.joda.time.convert.Converter[])>($i1, $r1);

        return r3;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        if $r1 == null goto label4;

        $r1[0] = null;

     label4:
        return r3;
    }
    org.joda.time.convert.Converter select(java.lang.Class)
    {
        org.joda.time.convert.ConverterSet r0;
        java.lang.Class $r1, $r4;
        int $i0, $i1, $i2, $i3, $i4;
        org.joda.time.convert.ConverterSet$Entry[] $r2, $r7;
        org.joda.time.convert.ConverterSet$Entry $r3, $r8;
        org.joda.time.convert.Converter $r5;
        java.lang.Object $r6;

        r0 := @this: org.joda.time.convert.ConverterSet;

        $r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.ConverterSet$Entry[] iSelectEntries>;

        $i0 = lengthof $r2;

        if $r1 != null goto label02;

        $i1 = 0;

     label01:
        $r3 = $r2[$i1];

        if $r3 == null goto label04;

        $r4 = $r3.<org.joda.time.convert.ConverterSet$Entry: java.lang.Class iType>;

        if $r4 != $r1 goto label03;

        $r5 = $r3.<org.joda.time.convert.ConverterSet$Entry: org.joda.time.convert.Converter iConverter>;

        return $r5;

     label02:
        $i1 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i2 = $i0 + -1;

        $i1 = $i1 & $i2;

        goto label01;

     label03:
        $i1 = $i1 + 1;

        if $i1 < $i0 goto label13;

        $i1 = 0;

        goto label01;

     label04:
        $r5 = staticinvoke <org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)>(r0, $r1);

        $r3 = new org.joda.time.convert.ConverterSet$Entry;

        specialinvoke $r3.<org.joda.time.convert.ConverterSet$Entry: void <init>(java.lang.Class,org.joda.time.convert.Converter)>($r1, $r5);

        $r6 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.joda.time.convert.ConverterSet$Entry[]) $r6;

        $r7 = $r2;

        $r7[$i1] = $r3;

        $i1 = 0;

     label05:
        if $i1 >= $i0 goto label07;

        $r3 = $r7[$i1];

        if $r3 != null goto label06;

        r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.ConverterSet$Entry[] iSelectEntries> = $r7;

        return $r5;

     label06:
        $i1 = $i1 + 1;

        goto label05;

     label07:
        $i1 = $i0 << 1;

        $r2 = newarray (org.joda.time.convert.ConverterSet$Entry)[$i1];

        $i2 = 0;

     label08:
        if $i2 >= $i0 goto label12;

        $r3 = $r7[$i2];

        $r1 = $r3.<org.joda.time.convert.ConverterSet$Entry: java.lang.Class iType>;

        if $r1 != null goto label10;

        $i3 = 0;

     label09:
        $r8 = $r2[$i3];

        if $r8 == null goto label11;

        $i3 = $i3 + 1;

        if $i3 < $i1 goto label09;

        $i3 = 0;

        goto label09;

     label10:
        $i3 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i4 = $i1 + -1;

        $i3 = $i3 & $i4;

        goto label09;

     label11:
        $r2[$i3] = $r3;

        $i2 = $i2 + 1;

        goto label08;

     label12:
        r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.ConverterSet$Entry[] iSelectEntries> = $r2;

        return $r5;

     label13:
        goto label01;
    }
    int size()
    {
        org.joda.time.convert.ConverterSet r0;
        org.joda.time.convert.Converter[] $r1;
        int $i0;

        r0 := @this: org.joda.time.convert.ConverterSet;

        $r1 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>;

        $i0 = lengthof $r1;

        return $i0;
    }
