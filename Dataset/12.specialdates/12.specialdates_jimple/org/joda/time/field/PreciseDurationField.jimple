org.joda.time.field.PreciseDurationField extends org.joda.time.field.BaseDurationField
private static final long serialVersionUID
private final long iUnitMillis
    public void <init>(org.joda.time.DurationFieldType, long)
    {
        org.joda.time.field.PreciseDurationField r0;
        org.joda.time.DurationFieldType $r1;
        long $l0;

        r0 := @this: org.joda.time.field.PreciseDurationField;

        $r1 := @parameter0: org.joda.time.DurationFieldType;

        $l0 := @parameter1: long;

        specialinvoke r0.<org.joda.time.field.BaseDurationField: void <init>(org.joda.time.DurationFieldType)>($r1);

        r0.<org.joda.time.field.PreciseDurationField: long iUnitMillis> = $l0;

        return;
    }
    public long add(long, int)
    {
        org.joda.time.field.PreciseDurationField r0;
        long $l0, $l2, $l3;
        int $i1;

        r0 := @this: org.joda.time.field.PreciseDurationField;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $l3 = (long) $i1;

        $l2 = r0.<org.joda.time.field.PreciseDurationField: long iUnitMillis>;

        $l2 = $l3 * $l2;

        $l0 = staticinvoke <org.joda.time.field.FieldUtils: long safeAdd(long,long)>($l0, $l2);

        return $l0;
    }
    public long add(long, long)
    {
        org.joda.time.field.PreciseDurationField r0;
        long $l0, $l1, $l2;

        r0 := @this: org.joda.time.field.PreciseDurationField;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $l2 = r0.<org.joda.time.field.PreciseDurationField: long iUnitMillis>;

        $l1 = staticinvoke <org.joda.time.field.FieldUtils: long safeMultiply(long,long)>($l1, $l2);

        $l0 = staticinvoke <org.joda.time.field.FieldUtils: long safeAdd(long,long)>($l0, $l1);

        return $l0;
    }
    public boolean equals(java.lang.Object)
    {
        org.joda.time.field.PreciseDurationField r0, $r2;
        long $l0, $l1;
        java.lang.Object $r1;
        boolean $z0;
        org.joda.time.DurationFieldType $r3, $r4;
        byte $b2;

        r0 := @this: org.joda.time.field.PreciseDurationField;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof org.joda.time.field.PreciseDurationField;

        if $z0 == 0 goto label2;

        $r2 = (org.joda.time.field.PreciseDurationField) $r1;

        $r3 = virtualinvoke r0.<org.joda.time.field.PreciseDurationField: org.joda.time.DurationFieldType getType()>();

        $r4 = virtualinvoke $r2.<org.joda.time.field.PreciseDurationField: org.joda.time.DurationFieldType getType()>();

        if $r3 != $r4 goto label2;

        $l1 = r0.<org.joda.time.field.PreciseDurationField: long iUnitMillis>;

        $l0 = $r2.<org.joda.time.field.PreciseDurationField: long iUnitMillis>;

        $b2 = $l1 cmp $l0;

        if $b2 == 0 goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }
    public long getDifferenceAsLong(long, long)
    {
        org.joda.time.field.PreciseDurationField r0;
        long $l0, $l1;

        r0 := @this: org.joda.time.field.PreciseDurationField;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $l1 = staticinvoke <org.joda.time.field.FieldUtils: long safeSubtract(long,long)>($l0, $l1);

        $l0 = r0.<org.joda.time.field.PreciseDurationField: long iUnitMillis>;

        $l0 = $l1 / $l0;

        return $l0;
    }
    public long getMillis(int, long)
    {
        org.joda.time.field.PreciseDurationField r0;
        int $i0;
        long $l1, $l2;

        r0 := @this: org.joda.time.field.PreciseDurationField;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $l2 = (long) $i0;

        $l1 = r0.<org.joda.time.field.PreciseDurationField: long iUnitMillis>;

        $l1 = $l2 * $l1;

        return $l1;
    }
    public long getMillis(long, long)
    {
        org.joda.time.field.PreciseDurationField r0;
        long $l0, $l1;

        r0 := @this: org.joda.time.field.PreciseDurationField;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $l1 = r0.<org.joda.time.field.PreciseDurationField: long iUnitMillis>;

        $l0 = staticinvoke <org.joda.time.field.FieldUtils: long safeMultiply(long,long)>($l0, $l1);

        return $l0;
    }
    public final long getUnitMillis()
    {
        org.joda.time.field.PreciseDurationField r0;
        long l0;

        r0 := @this: org.joda.time.field.PreciseDurationField;

        l0 = r0.<org.joda.time.field.PreciseDurationField: long iUnitMillis>;

        return l0;
    }
    public long getValueAsLong(long, long)
    {
        org.joda.time.field.PreciseDurationField r0;
        long $l0, $l1;

        r0 := @this: org.joda.time.field.PreciseDurationField;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $l1 = r0.<org.joda.time.field.PreciseDurationField: long iUnitMillis>;

        $l0 = $l0 / $l1;

        return $l0;
    }
    public int hashCode()
    {
        org.joda.time.field.PreciseDurationField r0;
        long $l0, $l1;
        int $i2, $i3;
        org.joda.time.DurationFieldType $r1;

        r0 := @this: org.joda.time.field.PreciseDurationField;

        $l0 = r0.<org.joda.time.field.PreciseDurationField: long iUnitMillis>;

        $l1 = $l0 >>> 32;

        $l0 = $l0 ^ $l1;

        $i2 = (int) $l0;

        $r1 = virtualinvoke r0.<org.joda.time.field.PreciseDurationField: org.joda.time.DurationFieldType getType()>();

        $i3 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i2 = $i2 + $i3;

        return $i2;
    }
    public final boolean isPrecise()
    {
        org.joda.time.field.PreciseDurationField r0;

        r0 := @this: org.joda.time.field.PreciseDurationField;

        return 1;
    }
