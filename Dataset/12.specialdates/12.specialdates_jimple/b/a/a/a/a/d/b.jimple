b.a.a.a.a.d.b extends java.lang.Object
public static final int MAX_BYTE_SIZE_PER_FILE
public static final int MAX_FILES_IN_BATCH
public static final int MAX_FILES_TO_KEEP
public static final java.lang.String ROLL_OVER_FILE_NAME_SEPARATOR
protected final android.content.Context context
protected final b.a.a.a.a.b.s currentTimeProvider
private final int defaultMaxFilesToKeep
protected final b.a.a.a.a.d.e eventStorage
protected volatile long lastRollOverTime
protected final java.util.List rollOverListeners
protected final b.a.a.a.a.d.a transform
    public void <init>(android.content.Context, b.a.a.a.a.d.a, b.a.a.a.a.b.s, b.a.a.a.a.d.e, int)
    {
        b.a.a.a.a.d.b r0;
        android.content.Context $r1;
        b.a.a.a.a.d.a $r2;
        b.a.a.a.a.b.s $r3;
        b.a.a.a.a.d.e $r4;
        int $i0;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        long $l1;

        r0 := @this: b.a.a.a.a.d.b;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: b.a.a.a.a.d.a;

        $r3 := @parameter2: b.a.a.a.a.b.s;

        $r4 := @parameter3: b.a.a.a.a.d.e;

        $i0 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<b.a.a.a.a.d.b: java.util.List rollOverListeners> = $r5;

        $r1 = virtualinvoke $r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<b.a.a.a.a.d.b: android.content.Context context> = $r1;

        r0.<b.a.a.a.a.d.b: b.a.a.a.a.d.a transform> = $r2;

        r0.<b.a.a.a.a.d.b: b.a.a.a.a.d.e eventStorage> = $r4;

        r0.<b.a.a.a.a.d.b: b.a.a.a.a.b.s currentTimeProvider> = $r3;

        $r3 = r0.<b.a.a.a.a.d.b: b.a.a.a.a.b.s currentTimeProvider>;

        $l1 = interfaceinvoke $r3.<b.a.a.a.a.b.s: long a()>();

        r0.<b.a.a.a.a.d.b: long lastRollOverTime> = $l1;

        r0.<b.a.a.a.a.d.b: int defaultMaxFilesToKeep> = $i0;

        return;
    }
    private void rollFileOverIfNeeded(int)
    {
        b.a.a.a.a.d.b r0;
        int $i0, $i1;
        b.a.a.a.a.d.e $r1;
        boolean $z0;
        java.util.Locale $r2;
        java.lang.Object[] $r3;
        java.lang.Integer $r4;
        java.lang.String $r5;
        android.content.Context $r6;

        r0 := @this: b.a.a.a.a.d.b;

        $i0 := @parameter0: int;

        $r1 = r0.<b.a.a.a.a.d.b: b.a.a.a.a.d.e eventStorage>;

        $i1 = virtualinvoke r0.<b.a.a.a.a.d.b: int getMaxByteSizePerFile()>();

        $z0 = interfaceinvoke $r1.<b.a.a.a.a.d.e: boolean a(int,int)>($i0, $i1);

        if $z0 != 0 goto label1;

        $r2 = <java.util.Locale: java.util.Locale US>;

        $r3 = newarray (java.lang.Object)[3];

        $r1 = r0.<b.a.a.a.a.d.b: b.a.a.a.a.d.e eventStorage>;

        $i1 = interfaceinvoke $r1.<b.a.a.a.a.d.e: int a()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3[0] = $r4;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[1] = $r4;

        $i0 = virtualinvoke r0.<b.a.a.a.a.d.b: int getMaxByteSizePerFile()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[2] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r2, "session analytics events file is %d bytes, new event is %d bytes, this is over flush limit of %d, rolling it over", $r3);

        $r6 = r0.<b.a.a.a.a.d.b: android.content.Context context>;

        staticinvoke <b.a.a.a.a.b.m: void a(android.content.Context,int,java.lang.String,java.lang.String)>($r6, 4, "Fabric", $r5);

        virtualinvoke r0.<b.a.a.a.a.d.b: boolean rollFileOver()>();

     label1:
        return;
    }
    private void triggerRollOverOnListeners(java.lang.String)
    {
        b.a.a.a.a.d.b r0;
        java.lang.String $r1;
        android.content.Context $r2;
        java.util.List $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        b.a.a.a.a.d.f $r6;
        java.lang.Exception $r7;

        r0 := @this: b.a.a.a.a.d.b;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<b.a.a.a.a.d.b: java.util.List rollOverListeners>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (b.a.a.a.a.d.f) $r5;

     label2:
        interfaceinvoke $r6.<b.a.a.a.a.d.f: void onRollOver(java.lang.String)>($r1);

     label3:
        goto label1;

     label4:
        $r7 := @caughtexception;

        $r2 = r0.<b.a.a.a.a.d.b: android.content.Context context>;

        staticinvoke <b.a.a.a.a.b.m: void a(android.content.Context,java.lang.String,java.lang.Throwable)>($r2, "One of the roll over listeners threw an exception", $r7);

        goto label1;

     label5:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }
    public void deleteAllEventsFiles()
    {
        b.a.a.a.a.d.b r0;
        java.util.List $r1;
        b.a.a.a.a.d.e $r2, $r3;

        r0 := @this: b.a.a.a.a.d.b;

        $r2 = r0.<b.a.a.a.a.d.b: b.a.a.a.a.d.e eventStorage>;

        $r3 = r0.<b.a.a.a.a.d.b: b.a.a.a.a.d.e eventStorage>;

        $r1 = interfaceinvoke $r3.<b.a.a.a.a.d.e: java.util.List c()>();

        interfaceinvoke $r2.<b.a.a.a.a.d.e: void a(java.util.List)>($r1);

        $r2 = r0.<b.a.a.a.a.d.b: b.a.a.a.a.d.e eventStorage>;

        interfaceinvoke $r2.<b.a.a.a.a.d.e: void d()>();

        return;
    }
    public void deleteOldestInRollOverIfOverMax()
    {
        b.a.a.a.a.d.b r0;
        b.a.a.a.a.d.e $r1;
        java.util.List $r2;
        int $i0, $i1, $i2;
        android.content.Context $r3;
        java.util.Locale $r4;
        java.lang.Object[] $r5;
        java.lang.Integer $r6;
        java.lang.String $r7;
        java.util.TreeSet $r8;
        b.a.a.a.a.d.c $r9;
        java.util.Iterator $r10;
        boolean $z0;
        java.lang.Object $r11;
        java.io.File $r12;
        long $l3;
        b.a.a.a.a.d.d $r13;
        java.util.ArrayList $r14;

        r0 := @this: b.a.a.a.a.d.b;

        $r1 = r0.<b.a.a.a.a.d.b: b.a.a.a.a.d.e eventStorage>;

        $r2 = interfaceinvoke $r1.<b.a.a.a.a.d.e: java.util.List c()>();

        $i0 = virtualinvoke r0.<b.a.a.a.a.d.b: int getMaxFilesToKeep()>();

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i1 > $i0 goto label1;

        return;

     label1:
        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i1 = $i1 - $i0;

        $r3 = r0.<b.a.a.a.a.d.b: android.content.Context context>;

        $r4 = <java.util.Locale: java.util.Locale US>;

        $r5 = newarray (java.lang.Object)[3];

        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r5[0] = $r6;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[1] = $r6;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r5[2] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r4, "Found %d files in  roll over directory, this is greater than %d, deleting %d oldest files", $r5);

        staticinvoke <b.a.a.a.a.b.m: void a(android.content.Context,java.lang.String)>($r3, $r7);

        $r8 = new java.util.TreeSet;

        $r9 = new b.a.a.a.a.d.c;

        specialinvoke $r9.<b.a.a.a.a.d.c: void <init>(b.a.a.a.a.d.b)>(r0);

        specialinvoke $r8.<java.util.TreeSet: void <init>(java.util.Comparator)>($r9);

        $r10 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.io.File) $r11;

        $r7 = virtualinvoke $r12.<java.io.File: java.lang.String getName()>();

        $l3 = virtualinvoke r0.<b.a.a.a.a.d.b: long parseCreationTimestampFromFileName(java.lang.String)>($r7);

        $r13 = new b.a.a.a.a.d.d;

        specialinvoke $r13.<b.a.a.a.a.d.d: void <init>(java.io.File,long)>($r12, $l3);

        virtualinvoke $r8.<java.util.TreeSet: boolean add(java.lang.Object)>($r13);

        goto label2;

     label3:
        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        $r10 = virtualinvoke $r8.<java.util.TreeSet: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (b.a.a.a.a.d.d) $r11;

        $r12 = $r13.<b.a.a.a.a.d.d: java.io.File a>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        $i0 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        if $i0 != $i1 goto label4;

     label5:
        $r1 = r0.<b.a.a.a.a.d.b: b.a.a.a.a.d.e eventStorage>;

        interfaceinvoke $r1.<b.a.a.a.a.d.e: void a(java.util.List)>($r14);

        return;
    }
    public void deleteSentFiles(java.util.List)
    {
        b.a.a.a.a.d.b r0;
        java.util.List $r1;
        b.a.a.a.a.d.e $r2;

        r0 := @this: b.a.a.a.a.d.b;

        $r1 := @parameter0: java.util.List;

        $r2 = r0.<b.a.a.a.a.d.b: b.a.a.a.a.d.e eventStorage>;

        interfaceinvoke $r2.<b.a.a.a.a.d.e: void a(java.util.List)>($r1);

        return;
    }
protected abstract java.lang.String generateUniqueRollOverFileName() { 
// no body
} 
    public java.util.List getBatchOfFilesToSend()
    {
        b.a.a.a.a.d.b r0;
        java.util.List $r1;
        b.a.a.a.a.d.e $r2;

        r0 := @this: b.a.a.a.a.d.b;

        $r2 = r0.<b.a.a.a.a.d.b: b.a.a.a.a.d.e eventStorage>;

        $r1 = interfaceinvoke $r2.<b.a.a.a.a.d.e: java.util.List a(int)>(1);

        return $r1;
    }
    public long getLastRollOverTime()
    {
        b.a.a.a.a.d.b r0;
        long l0;

        r0 := @this: b.a.a.a.a.d.b;

        l0 = r0.<b.a.a.a.a.d.b: long lastRollOverTime>;

        return l0;
    }
    protected int getMaxByteSizePerFile()
    {
        b.a.a.a.a.d.b r0;

        r0 := @this: b.a.a.a.a.d.b;

        return 8000;
    }
    protected int getMaxFilesToKeep()
    {
        b.a.a.a.a.d.b r0;
        int i0;

        r0 := @this: b.a.a.a.a.d.b;

        i0 = r0.<b.a.a.a.a.d.b: int defaultMaxFilesToKeep>;

        return i0;
    }
    public long parseCreationTimestampFromFileName(java.lang.String)
    {
        b.a.a.a.a.d.b r0;
        java.lang.String $r1;
        java.lang.String[] $r2;
        int $i0;
        java.lang.Long $r3;
        long $l1;
        java.lang.NumberFormatException $r4;

        r0 := @this: b.a.a.a.a.d.b;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("_");

        $i0 = lengthof $r2;

        if $i0 == 3 goto label1;

        return 0L;

     label1:
        $r1 = $r2[2];

     label2:
        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r1);

        $l1 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

     label3:
        return $l1;

     label4:
        $r4 := @caughtexception;

        return 0L;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }
    public void registerRollOverListener(b.a.a.a.a.d.f)
    {
        b.a.a.a.a.d.b r0;
        b.a.a.a.a.d.f $r1;
        java.util.List $r2;

        r0 := @this: b.a.a.a.a.d.b;

        $r1 := @parameter0: b.a.a.a.a.d.f;

        if $r1 == null goto label1;

        $r2 = r0.<b.a.a.a.a.d.b: java.util.List rollOverListeners>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

     label1:
        return;
    }
    public boolean rollFileOver()
    {
        b.a.a.a.a.d.b r0;
        java.util.Locale $r1;
        java.lang.Object[] $r2;
        boolean $z0, $z1;
        java.lang.String $r3, $r5;
        b.a.a.a.a.d.e $r4;
        android.content.Context $r6;
        b.a.a.a.a.b.s $r7;
        long $l0;

        r0 := @this: b.a.a.a.a.d.b;

        $z0 = 1;

        $r3 = null;

        $r4 = r0.<b.a.a.a.a.d.b: b.a.a.a.a.d.e eventStorage>;

        $z1 = interfaceinvoke $r4.<b.a.a.a.a.d.e: boolean b()>();

        if $z1 != 0 goto label2;

        $r5 = virtualinvoke r0.<b.a.a.a.a.d.b: java.lang.String generateUniqueRollOverFileName()>();

        $r3 = $r5;

        $r4 = r0.<b.a.a.a.a.d.b: b.a.a.a.a.d.e eventStorage>;

        interfaceinvoke $r4.<b.a.a.a.a.d.e: void a(java.lang.String)>($r5);

        $r6 = r0.<b.a.a.a.a.d.b: android.content.Context context>;

        $r1 = <java.util.Locale: java.util.Locale US>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = $r5;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r1, "generated new file %s", $r2);

        staticinvoke <b.a.a.a.a.b.m: void a(android.content.Context,int,java.lang.String,java.lang.String)>($r6, 4, "Fabric", $r5);

        $r7 = r0.<b.a.a.a.a.d.b: b.a.a.a.a.b.s currentTimeProvider>;

        $l0 = interfaceinvoke $r7.<b.a.a.a.a.b.s: long a()>();

        r0.<b.a.a.a.a.d.b: long lastRollOverTime> = $l0;

     label1:
        specialinvoke r0.<b.a.a.a.a.d.b: void triggerRollOverOnListeners(java.lang.String)>($r3);

        return $z0;

     label2:
        $z0 = 0;

        goto label1;
    }
    public void writeEvent(java.lang.Object)
    {
        b.a.a.a.a.d.b r0;
        java.lang.Object $r1;
        byte[] $r2;
        b.a.a.a.a.d.a $r3;
        int $i0;
        b.a.a.a.a.d.e $r4;

        r0 := @this: b.a.a.a.a.d.b;

        $r1 := @parameter0: java.lang.Object;

        $r3 = r0.<b.a.a.a.a.d.b: b.a.a.a.a.d.a transform>;

        $r2 = interfaceinvoke $r3.<b.a.a.a.a.d.a: byte[] toBytes(java.lang.Object)>($r1);

        $i0 = lengthof $r2;

        specialinvoke r0.<b.a.a.a.a.d.b: void rollFileOverIfNeeded(int)>($i0);

        $r4 = r0.<b.a.a.a.a.d.b: b.a.a.a.a.d.e eventStorage>;

        interfaceinvoke $r4.<b.a.a.a.a.d.e: void a(byte[])>($r2);

        return;
    }
