b.a.a.a.a.b.a extends java.lang.Object
public static final java.lang.String ACCEPT_JSON_VALUE
public static final java.lang.String ANDROID_CLIENT_TYPE
public static final java.lang.String CLS_ANDROID_SDK_DEVELOPER_TOKEN
public static final java.lang.String CRASHLYTICS_USER_AGENT
public static final int DEFAULT_TIMEOUT
public static final java.lang.String HEADER_ACCEPT
public static final java.lang.String HEADER_API_KEY
public static final java.lang.String HEADER_CLIENT_TYPE
public static final java.lang.String HEADER_CLIENT_VERSION
public static final java.lang.String HEADER_DEVELOPER_TOKEN
public static final java.lang.String HEADER_REQUEST_ID
public static final java.lang.String HEADER_USER_AGENT
private static final java.util.regex.Pattern PROTOCOL_AND_HOST_PATTERN
protected final b.a.a.a.q kit
private final b.a.a.a.a.e.d method
private final java.lang.String protocolAndHostOverride
private final b.a.a.a.a.e.m requestFactory
private final java.lang.String url
    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("http(s?)://[^\\/]+", 2);

        <b.a.a.a.a.b.a: java.util.regex.Pattern PROTOCOL_AND_HOST_PATTERN> = $r0;

        return;
    }
    public void <init>(b.a.a.a.q, java.lang.String, java.lang.String, b.a.a.a.a.e.m, b.a.a.a.a.e.d)
    {
        b.a.a.a.a.b.a r0;
        b.a.a.a.q $r1;
        java.lang.String $r2, $r3;
        b.a.a.a.a.e.m $r4;
        b.a.a.a.a.e.d $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: b.a.a.a.a.b.a;

        $r1 := @parameter0: b.a.a.a.q;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: b.a.a.a.a.e.m;

        $r5 := @parameter4: b.a.a.a.a.e.d;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $r3 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("url must not be null.");

        throw $r6;

     label1:
        if $r4 != null goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("requestFactory must not be null.");

        throw $r6;

     label2:
        r0.<b.a.a.a.a.b.a: b.a.a.a.q kit> = $r1;

        r0.<b.a.a.a.a.b.a: java.lang.String protocolAndHostOverride> = $r2;

        $r2 = specialinvoke r0.<b.a.a.a.a.b.a: java.lang.String overrideProtocolAndHost(java.lang.String)>($r3);

        r0.<b.a.a.a.a.b.a: java.lang.String url> = $r2;

        r0.<b.a.a.a.a.b.a: b.a.a.a.a.e.m requestFactory> = $r4;

        r0.<b.a.a.a.a.b.a: b.a.a.a.a.e.d method> = $r5;

        return;
    }
    private java.lang.String overrideProtocolAndHost(java.lang.String)
    {
        b.a.a.a.a.b.a r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        java.util.regex.Pattern $r3;
        java.util.regex.Matcher $r4;

        r0 := @this: b.a.a.a.a.b.a;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<b.a.a.a.a.b.a: java.lang.String protocolAndHostOverride>;

        $z0 = staticinvoke <b.a.a.a.a.b.m: boolean c(java.lang.String)>($r2);

        if $z0 != 0 goto label1;

        $r3 = <b.a.a.a.a.b.a: java.util.regex.Pattern PROTOCOL_AND_HOST_PATTERN>;

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $r1 = r0.<b.a.a.a.a.b.a: java.lang.String protocolAndHostOverride>;

        $r1 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String replaceFirst(java.lang.String)>($r1);

     label1:
        return $r1;
    }
    protected b.a.a.a.a.e.e getHttpRequest()
    {
        b.a.a.a.a.b.a r0;
        java.util.Map $r1;
        b.a.a.a.a.e.e $r2;

        r0 := @this: b.a.a.a.a.b.a;

        $r1 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        $r2 = virtualinvoke r0.<b.a.a.a.a.b.a: b.a.a.a.a.e.e getHttpRequest(java.util.Map)>($r1);

        return $r2;
    }
    protected b.a.a.a.a.e.e getHttpRequest(java.util.Map)
    {
        b.a.a.a.a.b.a r0;
        java.util.Map $r1;
        b.a.a.a.a.e.m $r2;
        b.a.a.a.a.e.d $r3;
        java.lang.String $r4;
        b.a.a.a.a.e.e $r5;
        java.lang.StringBuilder $r6;
        b.a.a.a.q $r7;

        r0 := @this: b.a.a.a.a.b.a;

        $r1 := @parameter0: java.util.Map;

        $r2 = r0.<b.a.a.a.a.b.a: b.a.a.a.a.e.m requestFactory>;

        $r3 = r0.<b.a.a.a.a.b.a: b.a.a.a.a.e.d method>;

        $r4 = virtualinvoke r0.<b.a.a.a.a.b.a: java.lang.String getUrl()>();

        $r5 = interfaceinvoke $r2.<b.a.a.a.a.e.m: b.a.a.a.a.e.e a(b.a.a.a.a.e.d,java.lang.String,java.util.Map)>($r3, $r4, $r1);

        $r5 = virtualinvoke $r5.<b.a.a.a.a.e.e: b.a.a.a.a.e.e a(boolean)>(0);

        $r5 = virtualinvoke $r5.<b.a.a.a.a.e.e: b.a.a.a.a.e.e a(int)>(10000);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crashlytics Android SDK/");

        $r7 = r0.<b.a.a.a.a.b.a: b.a.a.a.q kit>;

        $r4 = virtualinvoke $r7.<b.a.a.a.q: java.lang.String getVersion()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<b.a.a.a.a.e.e: b.a.a.a.a.e.e a(java.lang.String,java.lang.String)>("User-Agent", $r4);

        $r5 = virtualinvoke $r5.<b.a.a.a.a.e.e: b.a.a.a.a.e.e a(java.lang.String,java.lang.String)>("X-CRASHLYTICS-DEVELOPER-TOKEN", "470fa2b4ae81cd56ecbcda9735803434cec591fa");

        return $r5;
    }
    protected java.lang.String getUrl()
    {
        b.a.a.a.a.b.a r0;
        java.lang.String r1;

        r0 := @this: b.a.a.a.a.b.a;

        r1 = r0.<b.a.a.a.a.b.a: java.lang.String url>;

        return r1;
    }
