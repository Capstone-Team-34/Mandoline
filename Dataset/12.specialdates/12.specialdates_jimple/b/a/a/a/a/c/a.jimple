b.a.a.a.a.c.a extends java.lang.Object
private static final int a
public static final java.util.concurrent.Executor b
public static final java.util.concurrent.Executor c
private static final int d
private static final int e
private static final java.util.concurrent.ThreadFactory f
private static final java.util.concurrent.BlockingQueue g
private static final b.a.a.a.a.c.g h
private static volatile java.util.concurrent.Executor i
private final b.a.a.a.a.c.k j
private final java.util.concurrent.FutureTask k
private volatile b.a.a.a.a.c.j l
private final java.util.concurrent.atomic.AtomicBoolean m
private final java.util.concurrent.atomic.AtomicBoolean n
    static void <clinit>()
    {
        int $i0, $i1;
        java.util.concurrent.TimeUnit $r0;
        java.util.concurrent.BlockingQueue $r1;
        java.util.concurrent.ThreadFactory $r2;
        java.lang.Runtime $r3;
        b.a.a.a.a.c.b $r4;
        java.util.concurrent.LinkedBlockingQueue $r5;
        java.util.concurrent.ThreadPoolExecutor $r6;
        b.a.a.a.a.c.h $r7;
        b.a.a.a.a.c.g $r8;
        java.util.concurrent.Executor $r9;

        $r3 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $i0 = virtualinvoke $r3.<java.lang.Runtime: int availableProcessors()>();

        <b.a.a.a.a.c.a: int a> = $i0;

        $i0 = <b.a.a.a.a.c.a: int a>;

        $i0 = $i0 + 1;

        <b.a.a.a.a.c.a: int d> = $i0;

        $i0 = <b.a.a.a.a.c.a: int a>;

        $i0 = $i0 * 2;

        $i0 = $i0 + 1;

        <b.a.a.a.a.c.a: int e> = $i0;

        $r4 = new b.a.a.a.a.c.b;

        specialinvoke $r4.<b.a.a.a.a.c.b: void <init>()>();

        <b.a.a.a.a.c.a: java.util.concurrent.ThreadFactory f> = $r4;

        $r5 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke $r5.<java.util.concurrent.LinkedBlockingQueue: void <init>(int)>(128);

        <b.a.a.a.a.c.a: java.util.concurrent.BlockingQueue g> = $r5;

        $r6 = new java.util.concurrent.ThreadPoolExecutor;

        $i0 = <b.a.a.a.a.c.a: int d>;

        $i1 = <b.a.a.a.a.c.a: int e>;

        $r0 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r1 = <b.a.a.a.a.c.a: java.util.concurrent.BlockingQueue g>;

        $r2 = <b.a.a.a.a.c.a: java.util.concurrent.ThreadFactory f>;

        specialinvoke $r6.<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)>($i0, $i1, 1L, $r0, $r1, $r2);

        <b.a.a.a.a.c.a: java.util.concurrent.Executor b> = $r6;

        $r7 = new b.a.a.a.a.c.h;

        specialinvoke $r7.<b.a.a.a.a.c.h: void <init>(b.a.a.a.a.c.b)>(null);

        <b.a.a.a.a.c.a: java.util.concurrent.Executor c> = $r7;

        $r8 = new b.a.a.a.a.c.g;

        specialinvoke $r8.<b.a.a.a.a.c.g: void <init>()>();

        <b.a.a.a.a.c.a: b.a.a.a.a.c.g h> = $r8;

        $r9 = <b.a.a.a.a.c.a: java.util.concurrent.Executor c>;

        <b.a.a.a.a.c.a: java.util.concurrent.Executor i> = $r9;

        return;
    }
    public void <init>()
    {
        b.a.a.a.a.c.a r0;
        b.a.a.a.a.c.k $r1;
        b.a.a.a.a.c.j $r2;
        java.util.concurrent.atomic.AtomicBoolean $r3;
        b.a.a.a.a.c.c $r4;
        b.a.a.a.a.c.d $r5;

        r0 := @this: b.a.a.a.a.c.a;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <b.a.a.a.a.c.j: b.a.a.a.a.c.j a>;

        r0.<b.a.a.a.a.c.a: b.a.a.a.a.c.j l> = $r2;

        $r3 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();

        r0.<b.a.a.a.a.c.a: java.util.concurrent.atomic.AtomicBoolean m> = $r3;

        $r3 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();

        r0.<b.a.a.a.a.c.a: java.util.concurrent.atomic.AtomicBoolean n> = $r3;

        $r4 = new b.a.a.a.a.c.c;

        specialinvoke $r4.<b.a.a.a.a.c.c: void <init>(b.a.a.a.a.c.a)>(r0);

        r0.<b.a.a.a.a.c.a: b.a.a.a.a.c.k j> = $r4;

        $r5 = new b.a.a.a.a.c.d;

        $r1 = r0.<b.a.a.a.a.c.a: b.a.a.a.a.c.k j>;

        specialinvoke $r5.<b.a.a.a.a.c.d: void <init>(b.a.a.a.a.c.a,java.util.concurrent.Callable)>(r0, $r1);

        r0.<b.a.a.a.a.c.a: java.util.concurrent.FutureTask k> = $r5;

        return;
    }
    static java.lang.Object a(b.a.a.a.a.c.a, java.lang.Object)
    {
        b.a.a.a.a.c.a $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: b.a.a.a.a.c.a;

        $r1 := @parameter1: java.lang.Object;

        $r1 = specialinvoke $r0.<b.a.a.a.a.c.a: java.lang.Object d(java.lang.Object)>($r1);

        return $r1;
    }
    static java.util.concurrent.atomic.AtomicBoolean a(b.a.a.a.a.c.a)
    {
        b.a.a.a.a.c.a $r0;
        java.util.concurrent.atomic.AtomicBoolean r1;

        $r0 := @parameter0: b.a.a.a.a.c.a;

        r1 = $r0.<b.a.a.a.a.c.a: java.util.concurrent.atomic.AtomicBoolean n>;

        return r1;
    }
    static void b(b.a.a.a.a.c.a, java.lang.Object)
    {
        b.a.a.a.a.c.a $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: b.a.a.a.a.c.a;

        $r1 := @parameter1: java.lang.Object;

        specialinvoke $r0.<b.a.a.a.a.c.a: void c(java.lang.Object)>($r1);

        return;
    }
    static void c(b.a.a.a.a.c.a, java.lang.Object)
    {
        b.a.a.a.a.c.a $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: b.a.a.a.a.c.a;

        $r1 := @parameter1: java.lang.Object;

        specialinvoke $r0.<b.a.a.a.a.c.a: void e(java.lang.Object)>($r1);

        return;
    }
    private void c(java.lang.Object)
    {
        b.a.a.a.a.c.a r0;
        java.lang.Object $r1;
        boolean $z0;
        java.util.concurrent.atomic.AtomicBoolean $r2;

        r0 := @this: b.a.a.a.a.c.a;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<b.a.a.a.a.c.a: java.util.concurrent.atomic.AtomicBoolean n>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 != 0 goto label1;

        specialinvoke r0.<b.a.a.a.a.c.a: java.lang.Object d(java.lang.Object)>($r1);

     label1:
        return;
    }
    private java.lang.Object d(java.lang.Object)
    {
        b.a.a.a.a.c.a r0;
        java.lang.Object $r1;
        b.a.a.a.a.c.f $r2;
        java.lang.Object[] $r3;
        android.os.Message $r4;
        b.a.a.a.a.c.g $r5;

        r0 := @this: b.a.a.a.a.c.a;

        $r1 := @parameter0: java.lang.Object;

        $r5 = <b.a.a.a.a.c.a: b.a.a.a.a.c.g h>;

        $r2 = new b.a.a.a.a.c.f;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r1;

        specialinvoke $r2.<b.a.a.a.a.c.f: void <init>(b.a.a.a.a.c.a,java.lang.Object[])>(r0, $r3);

        $r4 = virtualinvoke $r5.<b.a.a.a.a.c.g: android.os.Message obtainMessage(int,java.lang.Object)>(1, $r2);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

        return $r1;
    }
    private void e(java.lang.Object)
    {
        b.a.a.a.a.c.a r0;
        java.lang.Object $r1;
        boolean $z0;
        b.a.a.a.a.c.j $r2;

        r0 := @this: b.a.a.a.a.c.a;

        $r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<b.a.a.a.a.c.a: boolean d()>();

        if $z0 == 0 goto label2;

        virtualinvoke r0.<b.a.a.a.a.c.a: void b(java.lang.Object)>($r1);

     label1:
        $r2 = <b.a.a.a.a.c.j: b.a.a.a.a.c.j c>;

        r0.<b.a.a.a.a.c.a: b.a.a.a.a.c.j l> = $r2;

        return;

     label2:
        virtualinvoke r0.<b.a.a.a.a.c.a: void a(java.lang.Object)>($r1);

        goto label1;
    }
    public final transient b.a.a.a.a.c.a a(java.util.concurrent.Executor, java.lang.Object[])
    {
        b.a.a.a.a.c.a r0;
        java.util.concurrent.Executor $r1;
        java.lang.Object[] $r2;
        int $i0;
        b.a.a.a.a.c.j $r3, $r4;
        int[] $r5;
        b.a.a.a.a.c.k $r6;
        java.util.concurrent.FutureTask $r7;
        java.lang.IllegalStateException $r8;

        r0 := @this: b.a.a.a.a.c.a;

        $r1 := @parameter0: java.util.concurrent.Executor;

        $r2 := @parameter1: java.lang.Object[];

        $r3 = r0.<b.a.a.a.a.c.a: b.a.a.a.a.c.j l>;

        $r4 = <b.a.a.a.a.c.j: b.a.a.a.a.c.j a>;

        if $r3 == $r4 goto label1;

        $r5 = <b.a.a.a.a.c.e: int[] a>;

        $r3 = r0.<b.a.a.a.a.c.a: b.a.a.a.a.c.j l>;

        $i0 = virtualinvoke $r3.<b.a.a.a.a.c.j: int ordinal()>();

        $i0 = $r5[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            default: goto label1;
        };

     label1:
        $r3 = <b.a.a.a.a.c.j: b.a.a.a.a.c.j b>;

        r0.<b.a.a.a.a.c.a: b.a.a.a.a.c.j l> = $r3;

        virtualinvoke r0.<b.a.a.a.a.c.a: void a()>();

        $r6 = r0.<b.a.a.a.a.c.a: b.a.a.a.a.c.k j>;

        $r6.<b.a.a.a.a.c.k: java.lang.Object[] b> = $r2;

        $r7 = r0.<b.a.a.a.a.c.a: java.util.concurrent.FutureTask k>;

        interfaceinvoke $r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r7);

        return r0;

     label2:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot execute task: the task is already running.");

        throw $r8;

     label3:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot execute task: the task has already been executed (a task can be executed only once)");

        throw $r8;
    }
protected abstract transient java.lang.Object a(java.lang.Object[]) { 
// no body
} 
    protected void a()
    {
        b.a.a.a.a.c.a r0;

        r0 := @this: b.a.a.a.a.c.a;

        return;
    }
    protected void a(java.lang.Object)
    {
        b.a.a.a.a.c.a r0;
        java.lang.Object $r1;

        r0 := @this: b.a.a.a.a.c.a;

        $r1 := @parameter0: java.lang.Object;

        return;
    }
    public final boolean a(boolean)
    {
        b.a.a.a.a.c.a r0;
        boolean $z0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        java.util.concurrent.FutureTask $r2;

        r0 := @this: b.a.a.a.a.c.a;

        $z0 := @parameter0: boolean;

        $r1 = r0.<b.a.a.a.a.c.a: java.util.concurrent.atomic.AtomicBoolean m>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r2 = r0.<b.a.a.a.a.c.a: java.util.concurrent.FutureTask k>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.FutureTask: boolean cancel(boolean)>($z0);

        return $z0;
    }
    public final b.a.a.a.a.c.j b()
    {
        b.a.a.a.a.c.a r0;
        b.a.a.a.a.c.j r1;

        r0 := @this: b.a.a.a.a.c.a;

        r1 = r0.<b.a.a.a.a.c.a: b.a.a.a.a.c.j l>;

        return r1;
    }
    protected void b(java.lang.Object)
    {
        b.a.a.a.a.c.a r0;
        java.lang.Object $r1;

        r0 := @this: b.a.a.a.a.c.a;

        $r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<b.a.a.a.a.c.a: void c()>();

        return;
    }
    protected transient void b(java.lang.Object[])
    {
        b.a.a.a.a.c.a r0;
        java.lang.Object[] $r1;

        r0 := @this: b.a.a.a.a.c.a;

        $r1 := @parameter0: java.lang.Object[];

        return;
    }
    protected void c()
    {
        b.a.a.a.a.c.a r0;

        r0 := @this: b.a.a.a.a.c.a;

        return;
    }
    public final boolean d()
    {
        b.a.a.a.a.c.a r0;
        boolean $z0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @this: b.a.a.a.a.c.a;

        $r1 = r0.<b.a.a.a.a.c.a: java.util.concurrent.atomic.AtomicBoolean m>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        return $z0;
    }
