b.a.a.a.a.e.k extends java.lang.Object implements java.util.concurrent.Callable
    protected void <init>()
    {
        b.a.a.a.a.e.k r0;

        r0 := @this: b.a.a.a.a.e.k;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
protected abstract java.lang.Object b() { 
// no body
} 
protected abstract void c() { 
// no body
} 
    public java.lang.Object call()
    {
        b.a.a.a.a.e.k r0;
        java.lang.Object $r1;
        boolean $z0;
        java.io.IOException $r2, $r5, $r6;
        b.a.a.a.a.e.j $r3;
        java.lang.Throwable $r4;

        r0 := @this: b.a.a.a.a.e.k;

        $z0 = 1;

     label01:
        $r1 = virtualinvoke r0.<b.a.a.a.a.e.k: java.lang.Object b()>();

     label02:
        virtualinvoke r0.<b.a.a.a.a.e.k: void c()>();

     label03:
        return $r1;

     label04:
        $r2 := @caughtexception;

        $r3 = new b.a.a.a.a.e.j;

        specialinvoke $r3.<b.a.a.a.a.e.j: void <init>(java.io.IOException)>($r2);

        throw $r3;

     label05:
        $r3 := @caughtexception;

     label06:
        throw $r3;

     label07:
        $r4 := @caughtexception;

     label08:
        virtualinvoke r0.<b.a.a.a.a.e.k: void c()>();

     label09:
        throw $r4;

     label10:
        $r5 := @caughtexception;

     label11:
        $r3 = new b.a.a.a.a.e.j;

        specialinvoke $r3.<b.a.a.a.a.e.j: void <init>(java.io.IOException)>($r5);

        throw $r3;

     label12:
        $r6 := @caughtexception;

        if $z0 != 0 goto label09;

        $r3 = new b.a.a.a.a.e.j;

        specialinvoke $r3.<b.a.a.a.a.e.j: void <init>(java.io.IOException)>($r6);

        throw $r3;

     label13:
        $r4 := @caughtexception;

        $z0 = 0;

        goto label08;

        catch b.a.a.a.a.e.j from label01 to label02 with label05;
        catch java.io.IOException from label01 to label02 with label10;
        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.io.IOException from label02 to label03 with label04;
        catch java.lang.Throwable from label06 to label07 with label07;
        catch java.io.IOException from label08 to label09 with label12;
        catch java.lang.Throwable from label11 to label12 with label07;
    }
