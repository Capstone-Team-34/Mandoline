com.c.b.c.c extends java.lang.Object implements com.c.b.c.a
private final com.c.b.c.b a
private final java.util.concurrent.Executor b
    void <init>(com.c.b.c.b, java.util.concurrent.Executor)
    {
        com.c.b.c.c r0;
        com.c.b.c.b $r1;
        java.util.concurrent.Executor $r2;

        r0 := @this: com.c.b.c.c;

        $r1 := @parameter0: com.c.b.c.b;

        $r2 := @parameter1: java.util.concurrent.Executor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.c.b.c.c: com.c.b.c.b a> = $r1;

        r0.<com.c.b.c.c: java.util.concurrent.Executor b> = $r2;

        return;
    }
    public static com.c.b.c.a a()
    {
        com.c.b.c.c $r0;
        com.c.b.c.b $r1;
        java.util.concurrent.ExecutorService $r2;

        $r1 = staticinvoke <com.c.b.c.b: com.c.b.c.b a()>();

        $r2 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>();

        $r0 = new com.c.b.c.c;

        specialinvoke $r0.<com.c.b.c.c: void <init>(com.c.b.c.b,java.util.concurrent.Executor)>($r1, $r2);

        return $r0;
    }
    static com.c.b.c.b a(com.c.b.c.c)
    {
        com.c.b.c.c $r0;
        com.c.b.c.b r1;

        $r0 := @parameter0: com.c.b.c.c;

        r1 = $r0.<com.c.b.c.c: com.c.b.c.b a>;

        return r1;
    }
    private java.lang.Runnable b(com.c.b.c.e)
    {
        com.c.b.c.c r0;
        com.c.b.c.e $r1;
        com.c.b.c.d $r2;

        r0 := @this: com.c.b.c.c;

        $r1 := @parameter0: com.c.b.c.e;

        $r2 = new com.c.b.c.d;

        specialinvoke $r2.<com.c.b.c.d: void <init>(com.c.b.c.c,com.c.b.c.e)>(r0, $r1);

        return $r2;
    }
    public void a(com.c.b.c.e)
    {
        com.c.b.c.c r0;
        com.c.b.c.e $r1;
        java.util.concurrent.Executor $r2;
        java.lang.Runnable $r3;

        r0 := @this: com.c.b.c.c;

        $r1 := @parameter0: com.c.b.c.e;

        $r3 = specialinvoke r0.<com.c.b.c.c: java.lang.Runnable b(com.c.b.c.e)>($r1);

        $r2 = r0.<com.c.b.c.c: java.util.concurrent.Executor b>;

        interfaceinvoke $r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        return;
    }
