com.crashlytics.android.beta.AbstractCheckForUpdatesController extends java.lang.Object implements com.crashlytics.android.beta.UpdatesController
static final long LAST_UPDATE_CHECK_DEFAULT
static final java.lang.String LAST_UPDATE_CHECK_KEY
private static final long MILLIS_PER_SECOND
private com.crashlytics.android.beta.Beta beta
private b.a.a.a.a.g.f betaSettings
private com.crashlytics.android.beta.BuildProperties buildProps
private android.content.Context context
private b.a.a.a.a.b.s currentTimeProvider
private final java.util.concurrent.atomic.AtomicBoolean externallyReady
private b.a.a.a.a.e.m httpRequestFactory
private b.a.a.a.a.b.z idManager
private final java.util.concurrent.atomic.AtomicBoolean initialized
private long lastCheckTimeMillis
private b.a.a.a.a.f.c preferenceStore
    public void <init>()
    {
        com.crashlytics.android.beta.AbstractCheckForUpdatesController r0;

        r0 := @this: com.crashlytics.android.beta.AbstractCheckForUpdatesController;

        specialinvoke r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: void <init>(boolean)>(0);

        return;
    }
    public void <init>(boolean)
    {
        com.crashlytics.android.beta.AbstractCheckForUpdatesController r0;
        boolean $z0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @this: com.crashlytics.android.beta.AbstractCheckForUpdatesController;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();

        r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: java.util.concurrent.atomic.AtomicBoolean initialized> = $r1;

        r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: long lastCheckTimeMillis> = 0L;

        $r1 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>($z0);

        r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: java.util.concurrent.atomic.AtomicBoolean externallyReady> = $r1;

        return;
    }
    private void performUpdateCheck()
    {
        com.crashlytics.android.beta.AbstractCheckForUpdatesController r0;
        b.a.a.a.a.e.m $r1;
        com.crashlytics.android.beta.CheckForUpdatesResponseTransform $r2;
        b.a.a.a.t $r3;
        b.a.a.a.a.b.k $r4;
        android.content.Context $r5;
        java.lang.String $r6, $r11, $r15, $r17;
        b.a.a.a.a.b.z $r7;
        java.util.Map $r8;
        b.a.a.a.a.b.aa $r9;
        java.lang.Object $r10;
        com.crashlytics.android.beta.CheckForUpdatesRequest $r12;
        com.crashlytics.android.beta.Beta $r13, $r14;
        b.a.a.a.a.g.f $r16;
        com.crashlytics.android.beta.BuildProperties $r18;

        r0 := @this: com.crashlytics.android.beta.AbstractCheckForUpdatesController;

        $r3 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        interfaceinvoke $r3.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("Beta", "Performing update check");

        $r4 = new b.a.a.a.a.b.k;

        specialinvoke $r4.<b.a.a.a.a.b.k: void <init>()>();

        $r5 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: android.content.Context context>;

        $r6 = virtualinvoke $r4.<b.a.a.a.a.b.k: java.lang.String a(android.content.Context)>($r5);

        $r7 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: b.a.a.a.a.b.z idManager>;

        $r8 = virtualinvoke $r7.<b.a.a.a.a.b.z: java.util.Map i()>();

        $r9 = <b.a.a.a.a.b.aa: b.a.a.a.a.b.aa c>;

        $r10 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        $r11 = (java.lang.String) $r10;

        $r12 = new com.crashlytics.android.beta.CheckForUpdatesRequest;

        $r13 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: com.crashlytics.android.beta.Beta beta>;

        $r14 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: com.crashlytics.android.beta.Beta beta>;

        $r15 = virtualinvoke $r14.<com.crashlytics.android.beta.Beta: java.lang.String getOverridenSpiEndpoint()>();

        $r16 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: b.a.a.a.a.g.f betaSettings>;

        $r17 = $r16.<b.a.a.a.a.g.f: java.lang.String a>;

        $r1 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: b.a.a.a.a.e.m httpRequestFactory>;

        $r2 = new com.crashlytics.android.beta.CheckForUpdatesResponseTransform;

        specialinvoke $r2.<com.crashlytics.android.beta.CheckForUpdatesResponseTransform: void <init>()>();

        specialinvoke $r12.<com.crashlytics.android.beta.CheckForUpdatesRequest: void <init>(b.a.a.a.q,java.lang.String,java.lang.String,b.a.a.a.a.e.m,com.crashlytics.android.beta.CheckForUpdatesResponseTransform)>($r13, $r15, $r17, $r1, $r2);

        $r18 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: com.crashlytics.android.beta.BuildProperties buildProps>;

        virtualinvoke $r12.<com.crashlytics.android.beta.CheckForUpdatesRequest: com.crashlytics.android.beta.CheckForUpdatesResponse invoke(java.lang.String,java.lang.String,com.crashlytics.android.beta.BuildProperties)>($r6, $r11, $r18);

        return;
    }
    protected void checkForUpdates()
    {
        com.crashlytics.android.beta.AbstractCheckForUpdatesController r0;
        b.a.a.a.a.f.c $r1, $r2, $r4;
        android.content.SharedPreferences $r3;
        boolean $z0;
        android.content.SharedPreferences$Editor $r5;
        b.a.a.a.a.b.s $r6;
        long $l0, $l2, $l3;
        b.a.a.a.a.g.f $r7;
        int $i1;
        b.a.a.a.t $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r10;
        byte $b4;
        java.lang.Throwable $r11, $r12;

        r0 := @this: com.crashlytics.android.beta.AbstractCheckForUpdatesController;

        $r1 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: b.a.a.a.a.f.c preferenceStore>;

        entermonitor $r1;

     label01:
        $r2 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: b.a.a.a.a.f.c preferenceStore>;

        $r3 = interfaceinvoke $r2.<b.a.a.a.a.f.c: android.content.SharedPreferences a()>();

        $z0 = interfaceinvoke $r3.<android.content.SharedPreferences: boolean contains(java.lang.String)>("last_update_check");

        if $z0 == 0 goto label02;

        $r2 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: b.a.a.a.a.f.c preferenceStore>;

        $r4 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: b.a.a.a.a.f.c preferenceStore>;

        $r5 = interfaceinvoke $r4.<b.a.a.a.a.f.c: android.content.SharedPreferences$Editor b()>();

        $r5 = interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>("last_update_check");

        interfaceinvoke $r2.<b.a.a.a.a.f.c: boolean a(android.content.SharedPreferences$Editor)>($r5);

     label02:
        exitmonitor $r1;

     label03:
        $r6 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: b.a.a.a.a.b.s currentTimeProvider>;

        $l0 = interfaceinvoke $r6.<b.a.a.a.a.b.s: long a()>();

        $r7 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: b.a.a.a.a.g.f betaSettings>;

        $i1 = $r7.<b.a.a.a.a.g.f: int b>;

        $l2 = (long) $i1;

        $l2 = $l2 * 1000L;

        $r8 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Check for updates delay: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("Beta", $r10);

        $r8 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Check for updates last check time: ");

        $l3 = virtualinvoke r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: long getLastCheckTimeMillis()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("Beta", $r10);

        $l3 = virtualinvoke r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: long getLastCheckTimeMillis()>();

        $l2 = $l2 + $l3;

        $r8 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Check for updates current time: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", next check time: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("Beta", $r10);

        $b4 = $l0 cmp $l2;

        if $b4 < 0 goto label10;

     label04:
        specialinvoke r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: void performUpdateCheck()>();

     label05:
        virtualinvoke r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: void setLastCheckTimeMillis(long)>($l0);

        return;

     label06:
        $r11 := @caughtexception;

     label07:
        exitmonitor $r1;

     label08:
        throw $r11;

     label09:
        $r12 := @caughtexception;

        virtualinvoke r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: void setLastCheckTimeMillis(long)>($l0);

        throw $r12;

     label10:
        $r8 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        interfaceinvoke $r8.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("Beta", "Check for updates next check time was not passed");

        return;

        catch java.lang.Throwable from label01 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label06;
    }
    long getLastCheckTimeMillis()
    {
        com.crashlytics.android.beta.AbstractCheckForUpdatesController r0;
        long l0;

        r0 := @this: com.crashlytics.android.beta.AbstractCheckForUpdatesController;

        l0 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: long lastCheckTimeMillis>;

        return l0;
    }
    public void initialize(android.content.Context, com.crashlytics.android.beta.Beta, b.a.a.a.a.b.z, b.a.a.a.a.g.f, com.crashlytics.android.beta.BuildProperties, b.a.a.a.a.f.c, b.a.a.a.a.b.s, b.a.a.a.a.e.m)
    {
        com.crashlytics.android.beta.AbstractCheckForUpdatesController r0;
        android.content.Context $r1;
        com.crashlytics.android.beta.Beta $r2;
        b.a.a.a.a.b.z $r3;
        b.a.a.a.a.g.f $r4;
        com.crashlytics.android.beta.BuildProperties $r5;
        b.a.a.a.a.f.c $r6;
        b.a.a.a.a.b.s $r7;
        b.a.a.a.a.e.m $r8;
        boolean $z0;

        r0 := @this: com.crashlytics.android.beta.AbstractCheckForUpdatesController;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.crashlytics.android.beta.Beta;

        $r3 := @parameter2: b.a.a.a.a.b.z;

        $r4 := @parameter3: b.a.a.a.a.g.f;

        $r5 := @parameter4: com.crashlytics.android.beta.BuildProperties;

        $r6 := @parameter5: b.a.a.a.a.f.c;

        $r7 := @parameter6: b.a.a.a.a.b.s;

        $r8 := @parameter7: b.a.a.a.a.e.m;

        r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: android.content.Context context> = $r1;

        r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: com.crashlytics.android.beta.Beta beta> = $r2;

        r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: b.a.a.a.a.b.z idManager> = $r3;

        r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: b.a.a.a.a.g.f betaSettings> = $r4;

        r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: com.crashlytics.android.beta.BuildProperties buildProps> = $r5;

        r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: b.a.a.a.a.f.c preferenceStore> = $r6;

        r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: b.a.a.a.a.b.s currentTimeProvider> = $r7;

        r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: b.a.a.a.a.e.m httpRequestFactory> = $r8;

        $z0 = virtualinvoke r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: boolean signalInitialized()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: void checkForUpdates()>();

     label1:
        return;
    }
    void setLastCheckTimeMillis(long)
    {
        com.crashlytics.android.beta.AbstractCheckForUpdatesController r0;
        long $l0;

        r0 := @this: com.crashlytics.android.beta.AbstractCheckForUpdatesController;

        $l0 := @parameter0: long;

        r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: long lastCheckTimeMillis> = $l0;

        return;
    }
    protected boolean signalExternallyReady()
    {
        com.crashlytics.android.beta.AbstractCheckForUpdatesController r0;
        boolean $z0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @this: com.crashlytics.android.beta.AbstractCheckForUpdatesController;

        $r1 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: java.util.concurrent.atomic.AtomicBoolean externallyReady>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r1 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: java.util.concurrent.atomic.AtomicBoolean initialized>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        return $z0;
    }
    boolean signalInitialized()
    {
        com.crashlytics.android.beta.AbstractCheckForUpdatesController r0;
        boolean $z0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @this: com.crashlytics.android.beta.AbstractCheckForUpdatesController;

        $r1 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: java.util.concurrent.atomic.AtomicBoolean initialized>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r1 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: java.util.concurrent.atomic.AtomicBoolean externallyReady>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        return $z0;
    }
