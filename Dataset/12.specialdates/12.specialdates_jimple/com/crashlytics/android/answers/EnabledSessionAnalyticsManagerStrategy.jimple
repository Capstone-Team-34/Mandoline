com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy extends java.lang.Object implements com.crashlytics.android.answers.SessionAnalyticsManagerStrategy
static final int UNDEFINED_ROLLOVER_INTERVAL_SECONDS
b.a.a.a.a.b.k apiKey
private final android.content.Context context
boolean customEventsEnabled
com.crashlytics.android.answers.EventFilter eventFilter
private final java.util.concurrent.ScheduledExecutorService executorService
private final com.crashlytics.android.answers.SessionAnalyticsFilesManager filesManager
b.a.a.a.a.d.h filesSender
private final b.a.a.a.a.e.m httpRequestFactory
private final b.a.a.a.q kit
final com.crashlytics.android.answers.SessionEventMetadata metadata
boolean predefinedEventsEnabled
private final java.util.concurrent.atomic.AtomicReference rolloverFutureRef
volatile int rolloverIntervalSeconds
    public void <init>(b.a.a.a.q, android.content.Context, java.util.concurrent.ScheduledExecutorService, com.crashlytics.android.answers.SessionAnalyticsFilesManager, b.a.a.a.a.e.m, com.crashlytics.android.answers.SessionEventMetadata)
    {
        com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy r0;
        b.a.a.a.q $r1;
        android.content.Context $r2;
        java.util.concurrent.ScheduledExecutorService $r3;
        com.crashlytics.android.answers.SessionAnalyticsFilesManager $r4;
        b.a.a.a.a.e.m $r5;
        com.crashlytics.android.answers.SessionEventMetadata $r6;
        java.util.concurrent.atomic.AtomicReference $r7;
        b.a.a.a.a.b.k $r8;
        com.crashlytics.android.answers.KeepAllEventFilter $r9;

        r0 := @this: com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy;

        $r1 := @parameter0: b.a.a.a.q;

        $r2 := @parameter1: android.content.Context;

        $r3 := @parameter2: java.util.concurrent.ScheduledExecutorService;

        $r4 := @parameter3: com.crashlytics.android.answers.SessionAnalyticsFilesManager;

        $r5 := @parameter4: b.a.a.a.a.e.m;

        $r6 := @parameter5: com.crashlytics.android.answers.SessionEventMetadata;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r7 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r7.<java.util.concurrent.atomic.AtomicReference: void <init>()>();

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: java.util.concurrent.atomic.AtomicReference rolloverFutureRef> = $r7;

        $r8 = new b.a.a.a.a.b.k;

        specialinvoke $r8.<b.a.a.a.a.b.k: void <init>()>();

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: b.a.a.a.a.b.k apiKey> = $r8;

        $r9 = new com.crashlytics.android.answers.KeepAllEventFilter;

        specialinvoke $r9.<com.crashlytics.android.answers.KeepAllEventFilter: void <init>()>();

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.EventFilter eventFilter> = $r9;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean customEventsEnabled> = 1;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean predefinedEventsEnabled> = 1;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: int rolloverIntervalSeconds> = -1;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: b.a.a.a.q kit> = $r1;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: android.content.Context context> = $r2;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: java.util.concurrent.ScheduledExecutorService executorService> = $r3;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionAnalyticsFilesManager filesManager> = $r4;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: b.a.a.a.a.e.m httpRequestFactory> = $r5;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionEventMetadata metadata> = $r6;

        return;
    }
    public void cancelTimeBasedFileRollOver()
    {
        com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy r0;
        java.util.concurrent.atomic.AtomicReference $r1;
        java.lang.Object $r2;
        android.content.Context $r3;
        java.util.concurrent.ScheduledFuture $r4;

        r0 := @this: com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy;

        $r1 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: java.util.concurrent.atomic.AtomicReference rolloverFutureRef>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        if $r2 == null goto label1;

        $r3 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: android.content.Context context>;

        staticinvoke <b.a.a.a.a.b.m: void a(android.content.Context,java.lang.String)>($r3, "Cancelling time-based rollover because no events are currently being generated.");

        $r1 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: java.util.concurrent.atomic.AtomicReference rolloverFutureRef>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r4 = (java.util.concurrent.ScheduledFuture) $r2;

        interfaceinvoke $r4.<java.util.concurrent.ScheduledFuture: boolean cancel(boolean)>(0);

        $r1 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: java.util.concurrent.atomic.AtomicReference rolloverFutureRef>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(null);

     label1:
        return;
    }
    public void deleteAllEvents()
    {
        com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy r0;
        com.crashlytics.android.answers.SessionAnalyticsFilesManager $r1;

        r0 := @this: com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy;

        $r1 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionAnalyticsFilesManager filesManager>;

        virtualinvoke $r1.<com.crashlytics.android.answers.SessionAnalyticsFilesManager: void deleteAllEventsFiles()>();

        return;
    }
    public void processEvent(com.crashlytics.android.answers.SessionEvent$Builder)
    {
        com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy r0;
        com.crashlytics.android.answers.SessionEvent$Builder $r1;
        com.crashlytics.android.answers.SessionEventMetadata $r2;
        com.crashlytics.android.answers.SessionEvent $r3;
        boolean $z0;
        com.crashlytics.android.answers.SessionEvent$Type $r4, $r5;
        b.a.a.a.t $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        com.crashlytics.android.answers.EventFilter $r9;
        com.crashlytics.android.answers.SessionAnalyticsFilesManager $r10;
        java.io.IOException $r11;

        r0 := @this: com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy;

        $r1 := @parameter0: com.crashlytics.android.answers.SessionEvent$Builder;

        $r2 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionEventMetadata metadata>;

        $r3 = virtualinvoke $r1.<com.crashlytics.android.answers.SessionEvent$Builder: com.crashlytics.android.answers.SessionEvent build(com.crashlytics.android.answers.SessionEventMetadata)>($r2);

        $z0 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean customEventsEnabled>;

        if $z0 != 0 goto label1;

        $r4 = <com.crashlytics.android.answers.SessionEvent$Type: com.crashlytics.android.answers.SessionEvent$Type CUSTOM>;

        $r5 = $r3.<com.crashlytics.android.answers.SessionEvent: com.crashlytics.android.answers.SessionEvent$Type type>;

        $z0 = virtualinvoke $r4.<com.crashlytics.android.answers.SessionEvent$Type: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        $r6 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Custom events tracking disabled - skipping event: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("Answers", $r8);

        return;

     label1:
        $z0 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean predefinedEventsEnabled>;

        if $z0 != 0 goto label2;

        $r4 = <com.crashlytics.android.answers.SessionEvent$Type: com.crashlytics.android.answers.SessionEvent$Type PREDEFINED>;

        $r5 = $r3.<com.crashlytics.android.answers.SessionEvent: com.crashlytics.android.answers.SessionEvent$Type type>;

        $z0 = virtualinvoke $r4.<com.crashlytics.android.answers.SessionEvent$Type: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        $r6 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Predefined events tracking disabled - skipping event: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("Answers", $r8);

        return;

     label2:
        $r9 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.EventFilter eventFilter>;

        $z0 = interfaceinvoke $r9.<com.crashlytics.android.answers.EventFilter: boolean skipEvent(com.crashlytics.android.answers.SessionEvent)>($r3);

        if $z0 == 0 goto label3;

        $r6 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping filtered event: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("Answers", $r8);

        return;

     label3:
        $r10 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionAnalyticsFilesManager filesManager>;

     label4:
        virtualinvoke $r10.<com.crashlytics.android.answers.SessionAnalyticsFilesManager: void writeEvent(java.lang.Object)>($r3);

     label5:
        virtualinvoke r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void scheduleTimeBasedRollOverIfNeeded()>();

        return;

     label6:
        $r11 := @caughtexception;

        $r6 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to write event: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<b.a.a.a.t: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Answers", $r8, $r11);

        goto label5;

        catch java.io.IOException from label4 to label5 with label6;
    }
    public boolean rollFileOver()
    {
        com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy r0;
        android.content.Context $r1;
        boolean $z0;
        com.crashlytics.android.answers.SessionAnalyticsFilesManager $r2;
        java.io.IOException $r3;

        r0 := @this: com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy;

        $r2 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionAnalyticsFilesManager filesManager>;

     label1:
        $z0 = virtualinvoke $r2.<com.crashlytics.android.answers.SessionAnalyticsFilesManager: boolean rollFileOver()>();

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        $r1 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: android.content.Context context>;

        staticinvoke <b.a.a.a.a.b.m: void a(android.content.Context,java.lang.String,java.lang.Throwable)>($r1, "Failed to roll file over.", $r3);

        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }
    void scheduleTimeBasedFileRollOver(long, long)
    {
        com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy r0;
        long $l0, $l1;
        java.util.concurrent.TimeUnit $r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;
        boolean $z0;
        b.a.a.a.a.d.k $r4;
        android.content.Context $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        java.util.concurrent.ScheduledExecutorService $r8;
        java.util.concurrent.ScheduledFuture $r9;
        java.util.concurrent.RejectedExecutionException $r10;

        r0 := @this: com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $r2 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: java.util.concurrent.atomic.AtomicReference rolloverFutureRef>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        if $r3 != null goto label4;

        $z0 = 1;

     label1:
        if $z0 == 0 goto label6;

        $r4 = new b.a.a.a.a.d.k;

        $r5 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: android.content.Context context>;

        specialinvoke $r4.<b.a.a.a.a.d.k: void <init>(android.content.Context,b.a.a.a.a.d.g)>($r5, r0);

        $r5 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: android.content.Context context>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scheduling time based file roll over every ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <b.a.a.a.a.b.m: void a(android.content.Context,java.lang.String)>($r5, $r7);

        $r2 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: java.util.concurrent.atomic.AtomicReference rolloverFutureRef>;

        $r8 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: java.util.concurrent.ScheduledExecutorService executorService>;

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

     label2:
        $r9 = interfaceinvoke $r8.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>($r4, $l0, $l1, $r1);

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>($r9);

     label3:
        return;

     label4:
        $z0 = 0;

        goto label1;

     label5:
        $r10 := @caughtexception;

        $r5 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: android.content.Context context>;

        staticinvoke <b.a.a.a.a.b.m: void a(android.content.Context,java.lang.String,java.lang.Throwable)>($r5, "Failed to schedule time based file roll over", $r10);

     label6:
        return;

        catch java.util.concurrent.RejectedExecutionException from label2 to label3 with label5;
    }
    public void scheduleTimeBasedRollOverIfNeeded()
    {
        com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy r0;
        int $i0;
        boolean $z0;
        long $l1, $l2;

        r0 := @this: com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy;

        $i0 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: int rolloverIntervalSeconds>;

        if $i0 == -1 goto label2;

        $z0 = 1;

     label1:
        if $z0 == 0 goto label3;

        $i0 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: int rolloverIntervalSeconds>;

        $l1 = (long) $i0;

        $i0 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: int rolloverIntervalSeconds>;

        $l2 = (long) $i0;

        virtualinvoke r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void scheduleTimeBasedFileRollOver(long,long)>($l1, $l2);

        return;

     label2:
        $z0 = 0;

        goto label1;

     label3:
        return;
    }
    public void sendEvents()
    {
        com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy r0;
        b.a.a.a.a.d.h $r1;
        android.content.Context $r2;
        com.crashlytics.android.answers.SessionAnalyticsFilesManager $r3;
        java.util.List $r4;
        int $i0, $i1;
        java.util.Locale $r5;
        java.lang.Object[] $r6;
        java.lang.Integer $r7;
        java.lang.String $r8;
        boolean $z0;
        java.lang.Exception $r9, $r10;
        java.lang.StringBuilder $r11;

        r0 := @this: com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy;

        $r1 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: b.a.a.a.a.d.h filesSender>;

        if $r1 != null goto label01;

        $r2 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: android.content.Context context>;

        staticinvoke <b.a.a.a.a.b.m: void a(android.content.Context,java.lang.String)>($r2, "skipping files send because we don\'t yet know the target endpoint");

        return;

     label01:
        $r2 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: android.content.Context context>;

        staticinvoke <b.a.a.a.a.b.m: void a(android.content.Context,java.lang.String)>($r2, "Sending all files");

        $r3 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionAnalyticsFilesManager filesManager>;

        $r4 = virtualinvoke $r3.<com.crashlytics.android.answers.SessionAnalyticsFilesManager: java.util.List getBatchOfFilesToSend()>();

        $i0 = 0;

     label02:
        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

     label03:
        if $i1 <= 0 goto label12;

     label04:
        $r2 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: android.content.Context context>;

     label05:
        $r5 = <java.util.Locale: java.util.Locale US>;

     label06:
        $r6 = newarray (java.lang.Object)[1];

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6[0] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r5, "attempt to send batch of %d files", $r6);

        staticinvoke <b.a.a.a.a.b.m: void a(android.content.Context,java.lang.String)>($r2, $r8);

        $r1 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: b.a.a.a.a.d.h filesSender>;

        $z0 = interfaceinvoke $r1.<b.a.a.a.a.d.h: boolean send(java.util.List)>($r4);

     label07:
        if $z0 == 0 goto label11;

     label08:
        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

     label09:
        $i0 = $i1 + $i0;

     label10:
        $r3 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionAnalyticsFilesManager filesManager>;

        virtualinvoke $r3.<com.crashlytics.android.answers.SessionAnalyticsFilesManager: void deleteSentFiles(java.util.List)>($r4);

     label11:
        if $z0 != 0 goto label13;

     label12:
        if $i0 != 0 goto label18;

        $r3 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionAnalyticsFilesManager filesManager>;

        virtualinvoke $r3.<com.crashlytics.android.answers.SessionAnalyticsFilesManager: void deleteOldestInRollOverIfOverMax()>();

        return;

     label13:
        $r3 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionAnalyticsFilesManager filesManager>;

        $r4 = virtualinvoke $r3.<com.crashlytics.android.answers.SessionAnalyticsFilesManager: java.util.List getBatchOfFilesToSend()>();

     label14:
        goto label02;

     label15:
        $r9 := @caughtexception;

        $r10 = $r9;

     label16:
        $r2 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: android.content.Context context>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to send batch of analytics files to server: ");

        $r8 = virtualinvoke $r10.<java.lang.Exception: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <b.a.a.a.a.b.m: void a(android.content.Context,java.lang.String,java.lang.Throwable)>($r2, $r8, $r10);

        goto label12;

     label17:
        $r10 := @caughtexception;

        goto label16;

     label18:
        return;

        catch java.lang.Exception from label02 to label03 with label15;
        catch java.lang.Exception from label04 to label05 with label15;
        catch java.lang.Exception from label06 to label07 with label15;
        catch java.lang.Exception from label08 to label09 with label15;
        catch java.lang.Exception from label10 to label11 with label17;
        catch java.lang.Exception from label13 to label14 with label15;
    }
    public void setAnalyticsSettingsData(b.a.a.a.a.g.b, java.lang.String)
    {
        com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy r0;
        b.a.a.a.a.g.b $r1;
        java.lang.String $r2, $r6, $r9;
        b.a.a.a.a.e.m $r3;
        com.crashlytics.android.answers.SessionAnalyticsFilesSender $r4;
        b.a.a.a.q $r5;
        b.a.a.a.a.b.k $r7;
        android.content.Context $r8;
        com.crashlytics.android.answers.AnswersRetryFilesSender $r10;
        com.crashlytics.android.answers.SessionAnalyticsFilesManager $r11;
        boolean $z0;
        b.a.a.a.t $r12;
        java.lang.StringBuilder $r13;
        int $i0;
        com.crashlytics.android.answers.SamplingEventFilter $r14;
        long $l1;

        r0 := @this: com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy;

        $r1 := @parameter0: b.a.a.a.a.g.b;

        $r2 := @parameter1: java.lang.String;

        $r4 = new com.crashlytics.android.answers.SessionAnalyticsFilesSender;

        $r5 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: b.a.a.a.q kit>;

        $r6 = $r1.<b.a.a.a.a.g.b: java.lang.String a>;

        $r3 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: b.a.a.a.a.e.m httpRequestFactory>;

        $r7 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: b.a.a.a.a.b.k apiKey>;

        $r8 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: android.content.Context context>;

        $r9 = virtualinvoke $r7.<b.a.a.a.a.b.k: java.lang.String a(android.content.Context)>($r8);

        specialinvoke $r4.<com.crashlytics.android.answers.SessionAnalyticsFilesSender: void <init>(b.a.a.a.q,java.lang.String,java.lang.String,b.a.a.a.a.e.m,java.lang.String)>($r5, $r2, $r6, $r3, $r9);

        $r10 = staticinvoke <com.crashlytics.android.answers.AnswersRetryFilesSender: com.crashlytics.android.answers.AnswersRetryFilesSender build(com.crashlytics.android.answers.SessionAnalyticsFilesSender)>($r4);

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: b.a.a.a.a.d.h filesSender> = $r10;

        $r11 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionAnalyticsFilesManager filesManager>;

        virtualinvoke $r11.<com.crashlytics.android.answers.SessionAnalyticsFilesManager: void setAnalyticsSettingsData(b.a.a.a.a.g.b)>($r1);

        $z0 = $r1.<b.a.a.a.a.g.b: boolean f>;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean customEventsEnabled> = $z0;

        $r12 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Custom event tracking ");

        $z0 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean customEventsEnabled>;

        if $z0 == 0 goto label4;

        $r2 = "enabled";

     label1:
        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("Answers", $r2);

        $z0 = $r1.<b.a.a.a.a.g.b: boolean g>;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean predefinedEventsEnabled> = $z0;

        $r12 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Predefined event tracking ");

        $z0 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean predefinedEventsEnabled>;

        if $z0 == 0 goto label5;

        $r2 = "enabled";

     label2:
        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("Answers", $r2);

        $i0 = $r1.<b.a.a.a.a.g.b: int i>;

        if $i0 <= 1 goto label3;

        $r12 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        interfaceinvoke $r12.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("Answers", "Event sampling enabled");

        $r14 = new com.crashlytics.android.answers.SamplingEventFilter;

        $i0 = $r1.<b.a.a.a.a.g.b: int i>;

        specialinvoke $r14.<com.crashlytics.android.answers.SamplingEventFilter: void <init>(int)>($i0);

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.EventFilter eventFilter> = $r14;

     label3:
        $i0 = $r1.<b.a.a.a.a.g.b: int b>;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: int rolloverIntervalSeconds> = $i0;

        $i0 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: int rolloverIntervalSeconds>;

        $l1 = (long) $i0;

        virtualinvoke r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void scheduleTimeBasedFileRollOver(long,long)>(0L, $l1);

        return;

     label4:
        $r2 = "disabled";

        goto label1;

     label5:
        $r2 = "disabled";

        goto label2;
    }
