com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler extends java.lang.Object implements java.lang.Thread$UncaughtExceptionHandler
private static final int ANALYZER_VERSION
static final java.io.FilenameFilter ANY_SESSION_FILENAME_FILTER
private static final java.lang.String EVENT_TYPE_CRASH
private static final java.lang.String EVENT_TYPE_LOGGED
private static final java.lang.String GENERATOR_FORMAT
private static final java.lang.String[] INITIAL_SESSION_PART_TAGS
static final java.lang.String INVALID_CLS_CACHE_DIR
static final java.util.Comparator LARGEST_FILE_NAME_FIRST
private static final int MAX_COMPLETE_SESSIONS_COUNT
private static final int MAX_LOCAL_LOGGED_EXCEPTIONS
static final int MAX_OPEN_SESSIONS
private static final java.util.Map SEND_AT_CRASHTIME_HEADER
static final java.lang.String SESSION_APP_TAG
static final java.lang.String SESSION_BEGIN_TAG
static final java.lang.String SESSION_DEVICE_TAG
static final java.lang.String SESSION_FATAL_TAG
static final java.io.FilenameFilter SESSION_FILE_FILTER
private static final java.util.regex.Pattern SESSION_FILE_PATTERN
private static final int SESSION_ID_LENGTH
static final java.lang.String SESSION_NON_FATAL_TAG
static final java.lang.String SESSION_OS_TAG
static final java.lang.String SESSION_USER_TAG
static final java.util.Comparator SMALLEST_FILE_NAME_FIRST
private final com.crashlytics.android.core.CrashlyticsCore crashlyticsCore
private final java.lang.Thread$UncaughtExceptionHandler defaultHandler
private final com.crashlytics.android.core.DevicePowerStateListener devicePowerStateListener
private final java.util.concurrent.atomic.AtomicInteger eventCounter
private final com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper executorServiceWrapper
private final b.a.a.a.a.f.a fileStore
private final b.a.a.a.a.b.z idManager
private final java.util.concurrent.atomic.AtomicBoolean isHandlingException
private final com.crashlytics.android.core.LogFileManager logFileManager
private final java.lang.String unityVersion
    static void <clinit>()
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$1 $r0;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$2 $r1;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$3 $r2;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$4 $r3;
        java.util.regex.Pattern $r4;
        java.util.Map $r5;
        java.lang.String[] $r6;

        $r0 = new com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$1;

        specialinvoke $r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$1: void <init>()>();

        <com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.FilenameFilter SESSION_FILE_FILTER> = $r0;

        $r1 = new com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$2;

        specialinvoke $r1.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$2: void <init>()>();

        <com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.util.Comparator LARGEST_FILE_NAME_FIRST> = $r1;

        $r2 = new com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$3;

        specialinvoke $r2.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$3: void <init>()>();

        <com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.util.Comparator SMALLEST_FILE_NAME_FIRST> = $r2;

        $r3 = new com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$4;

        specialinvoke $r3.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$4: void <init>()>();

        <com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.FilenameFilter ANY_SESSION_FILENAME_FILTER> = $r3;

        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("([\\d|A-Z|a-z]{12}\\-[\\d|A-Z|a-z]{4}\\-[\\d|A-Z|a-z]{4}\\-[\\d|A-Z|a-z]{12}).+");

        <com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.util.regex.Pattern SESSION_FILE_PATTERN> = $r4;

        $r5 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("X-CRASHLYTICS-SEND-FLAGS", "1");

        <com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.util.Map SEND_AT_CRASHTIME_HEADER> = $r5;

        $r6 = newarray (java.lang.String)[4];

        $r6[0] = "SessionUser";

        $r6[1] = "SessionApp";

        $r6[2] = "SessionOS";

        $r6[3] = "SessionDevice";

        <com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.lang.String[] INITIAL_SESSION_PART_TAGS> = $r6;

        return;
    }
    void <init>(java.lang.Thread$UncaughtExceptionHandler, com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper, b.a.a.a.a.b.z, com.crashlytics.android.core.UnityVersionProvider, b.a.a.a.a.f.a, com.crashlytics.android.core.CrashlyticsCore)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.lang.Thread$UncaughtExceptionHandler $r1;
        com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper $r2;
        b.a.a.a.a.b.z $r3;
        com.crashlytics.android.core.UnityVersionProvider $r4;
        b.a.a.a.a.f.a $r5;
        com.crashlytics.android.core.CrashlyticsCore $r6;
        java.util.concurrent.atomic.AtomicInteger $r7;
        java.lang.String $r8;
        java.util.concurrent.atomic.AtomicBoolean $r9;
        android.content.Context $r10;
        com.crashlytics.android.core.LogFileManager $r11;
        com.crashlytics.android.core.DevicePowerStateListener $r12;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: java.lang.Thread$UncaughtExceptionHandler;

        $r2 := @parameter1: com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper;

        $r3 := @parameter2: b.a.a.a.a.b.z;

        $r4 := @parameter3: com.crashlytics.android.core.UnityVersionProvider;

        $r5 := @parameter4: b.a.a.a.a.f.a;

        $r6 := @parameter5: com.crashlytics.android.core.CrashlyticsCore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r7 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r7.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.util.concurrent.atomic.AtomicInteger eventCounter> = $r7;

        r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.lang.Thread$UncaughtExceptionHandler defaultHandler> = $r1;

        r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper executorServiceWrapper> = $r2;

        r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: b.a.a.a.a.b.z idManager> = $r3;

        r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore> = $r6;

        $r8 = interfaceinvoke $r4.<com.crashlytics.android.core.UnityVersionProvider: java.lang.String getUnityVersion()>();

        r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.lang.String unityVersion> = $r8;

        r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: b.a.a.a.a.f.a fileStore> = $r5;

        $r9 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r9.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.util.concurrent.atomic.AtomicBoolean isHandlingException> = $r9;

        $r10 = virtualinvoke $r6.<com.crashlytics.android.core.CrashlyticsCore: android.content.Context getContext()>();

        $r11 = new com.crashlytics.android.core.LogFileManager;

        specialinvoke $r11.<com.crashlytics.android.core.LogFileManager: void <init>(android.content.Context,b.a.a.a.a.f.a)>($r10, $r5);

        r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.LogFileManager logFileManager> = $r11;

        $r12 = new com.crashlytics.android.core.DevicePowerStateListener;

        specialinvoke $r12.<com.crashlytics.android.core.DevicePowerStateListener: void <init>(android.content.Context)>($r10);

        r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.DevicePowerStateListener devicePowerStateListener> = $r12;

        return;
    }
    static java.util.regex.Pattern access$000()
    {
        java.util.regex.Pattern r0;

        r0 = <com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.util.regex.Pattern SESSION_FILE_PATTERN>;

        return r0;
    }
    static void access$100(com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler, java.util.Date, java.lang.Thread, java.lang.Throwable)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler $r0;
        java.util.Date $r1;
        java.lang.Thread $r2;
        java.lang.Throwable $r3;

        $r0 := @parameter0: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter1: java.util.Date;

        $r2 := @parameter2: java.lang.Thread;

        $r3 := @parameter3: java.lang.Throwable;

        specialinvoke $r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void handleUncaughtException(java.util.Date,java.lang.Thread,java.lang.Throwable)>($r1, $r2, $r3);

        return;
    }
    static void access$1000(com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler, boolean)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler $r0;
        boolean $z0;

        $r0 := @parameter0: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void doCloseSessions(boolean)>($z0);

        return;
    }
    static java.io.File[] access$1200(com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler, java.io.FilenameFilter)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler $r0;
        java.io.FilenameFilter $r1;
        java.io.File[] $r2;

        $r0 := @parameter0: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter1: java.io.FilenameFilter;

        $r2 = specialinvoke $r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File[] listFilesMatching(java.io.FilenameFilter)>($r1);

        return $r2;
    }
    static java.util.Map access$1300()
    {
        java.util.Map r0;

        r0 = <com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.util.Map SEND_AT_CRASHTIME_HEADER>;

        return r0;
    }
    static java.util.concurrent.atomic.AtomicBoolean access$200(com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler $r0;
        java.util.concurrent.atomic.AtomicBoolean r1;

        $r0 := @parameter0: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        r1 = $r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.util.concurrent.atomic.AtomicBoolean isHandlingException>;

        return r1;
    }
    static com.crashlytics.android.core.LogFileManager access$300(com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler $r0;
        com.crashlytics.android.core.LogFileManager r1;

        $r0 := @parameter0: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        r1 = $r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.LogFileManager logFileManager>;

        return r1;
    }
    static void access$400(com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler, java.util.Date, java.lang.Thread, java.lang.Throwable)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler $r0;
        java.util.Date $r1;
        java.lang.Thread $r2;
        java.lang.Throwable $r3;

        $r0 := @parameter0: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter1: java.util.Date;

        $r2 := @parameter2: java.lang.Thread;

        $r3 := @parameter3: java.lang.Throwable;

        specialinvoke $r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void doWriteNonFatal(java.util.Date,java.lang.Thread,java.lang.Throwable)>($r1, $r2, $r3);

        return;
    }
    static java.lang.String access$500(com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler $r0;
        java.lang.String $r1;

        $r0 := @parameter0: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 = specialinvoke $r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.lang.String getCurrentSessionId()>();

        return $r1;
    }
    static java.io.File access$600(com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler $r0;
        java.io.File $r1;

        $r0 := @parameter0: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 = specialinvoke $r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File getFilesDir()>();

        return $r1;
    }
    static void access$700(com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler $r0;

        $r0 := @parameter0: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        specialinvoke $r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void doOpenSession()>();

        return;
    }
    static com.crashlytics.android.core.CrashlyticsCore access$800(com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler $r0;
        com.crashlytics.android.core.CrashlyticsCore r1;

        $r0 := @parameter0: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        r1 = $r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        return r1;
    }
    static void access$900(com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler, com.crashlytics.android.core.internal.models.SessionEventData)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler $r0;
        com.crashlytics.android.core.internal.models.SessionEventData $r1;

        $r0 := @parameter0: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter1: com.crashlytics.android.core.internal.models.SessionEventData;

        specialinvoke $r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void writeExternalCrashEvent(com.crashlytics.android.core.internal.models.SessionEventData)>($r1);

        return;
    }
    private void closeOpenSessions(java.io.File[], int, int)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.io.File[] $r1;
        int $i0, $i1, $i2;
        b.a.a.a.t $r2;
        java.io.File $r3;
        java.lang.String $r4, $r6;
        java.lang.StringBuilder $r5;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: java.io.File[];

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $r2 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        interfaceinvoke $r2.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("CrashlyticsCore", "Closing open sessions.");

     label1:
        $i2 = lengthof $r1;

        if $i1 >= $i2 goto label2;

        $r3 = $r1[$i1];

        $r4 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.lang.String getSessionIdFromSessionFile(java.io.File)>($r3);

        $r2 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing session: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("CrashlyticsCore", $r6);

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void writeSessionPartsToSessionFile(java.io.File,java.lang.String,int)>($r3, $r4, $i0);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }
    private void closeWithoutRenamingOrLog(com.crashlytics.android.core.ClsFileOutputStream)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        com.crashlytics.android.core.ClsFileOutputStream $r1;
        java.io.IOException $r2;
        b.a.a.a.t $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: com.crashlytics.android.core.ClsFileOutputStream;

        if $r1 != null goto label1;

        return;

     label1:
        virtualinvoke $r1.<com.crashlytics.android.core.ClsFileOutputStream: void closeInProgressStream()>();

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        interfaceinvoke $r3.<b.a.a.a.t: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Error closing session file stream in the presence of an exception", $r2);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
    private static void copyToCodedOutputStream(java.io.InputStream, com.crashlytics.android.core.CodedOutputStream, int)
    {
        java.io.InputStream $r0;
        com.crashlytics.android.core.CodedOutputStream $r1;
        int $i0, $i1;
        byte[] $r2;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: com.crashlytics.android.core.CodedOutputStream;

        $i0 := @parameter2: int;

        $r2 = newarray (byte)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label2;

        $i1 = lengthof $r2;

        $i1 = $i1 - $i0;

        $i1 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r2, $i0, $i1);

        if $i1 < 0 goto label2;

        $i0 = $i0 + $i1;

        goto label1;

     label2:
        virtualinvoke $r1.<com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(byte[])>($r2);

        return;
    }
    private void deleteLegacyInvalidCacheDir()
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.io.File $r1, $r2;
        int $i0, $i1;
        com.crashlytics.android.core.CrashlyticsCore $r3;
        boolean $z0;
        java.io.File[] $r4;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 = new java.io.File;

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $r2 = virtualinvoke $r3.<com.crashlytics.android.core.CrashlyticsCore: java.io.File getSdkDirectory()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "invalidClsFiles");

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $z0 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label3;

        $r4 = virtualinvoke $r1.<java.io.File: java.io.File[] listFiles()>();

        $i0 = lengthof $r4;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $r2 = $r4[$i1];

        virtualinvoke $r2.<java.io.File: boolean delete()>();

        $i1 = $i1 + 1;

        goto label2;

     label3:
        virtualinvoke $r1.<java.io.File: boolean delete()>();

        return;
    }
    private void deleteSessionPartFilesFor(java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.lang.String $r1;
        int $i0, $i1;
        java.io.File $r2;
        java.io.File[] $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: java.lang.String;

        $r3 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File[] listSessionPartFilesFor(java.lang.String)>($r1);

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r3[$i1];

        virtualinvoke $r2.<java.io.File: boolean delete()>();

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }
    private void doCloseSessions(boolean)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        boolean $z0;
        byte $b0;
        int $i1;
        java.io.File[] $r1;
        b.a.a.a.t $r2;
        java.io.File $r3;
        java.lang.String $r4;
        b.a.a.a.a.g.p $r5;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label2;

        $b0 = 1;

     label1:
        $i1 = $b0 + 8;

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void trimOpenSessions(int)>($i1);

        $r1 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File[] listSortedSessionBeginFiles()>();

        $i1 = lengthof $r1;

        if $i1 > $b0 goto label3;

        $r2 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        interfaceinvoke $r2.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("CrashlyticsCore", "No open sessions to be closed.");

        return;

     label2:
        $b0 = 0;

        goto label1;

     label3:
        $r3 = $r1[$b0];

        $r4 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.lang.String getSessionIdFromSessionFile(java.io.File)>($r3);

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void writeSessionUser(java.lang.String)>($r4);

        $r5 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: b.a.a.a.a.g.p getSessionSettingsData()>();

        if $r5 != null goto label4;

        $r2 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        interfaceinvoke $r2.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("CrashlyticsCore", "Unable to close session. Settings are not loaded.");

        return;

     label4:
        $i1 = $r5.<b.a.a.a.a.g.p: int c>;

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void closeOpenSessions(java.io.File[],int,int)>($r1, $b0, $i1);

        return;
    }
    private void doOpenSession()
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.util.Date $r1;
        com.crashlytics.android.core.CLSUUID $r2;
        b.a.a.a.a.b.z $r3;
        java.lang.String $r4, $r7;
        b.a.a.a.t $r5;
        java.lang.StringBuilder $r6;
        com.crashlytics.android.core.LogFileManager $r8;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>()>();

        $r2 = new com.crashlytics.android.core.CLSUUID;

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: b.a.a.a.a.b.z idManager>;

        specialinvoke $r2.<com.crashlytics.android.core.CLSUUID: void <init>(b.a.a.a.a.b.z)>($r3);

        $r4 = virtualinvoke $r2.<com.crashlytics.android.core.CLSUUID: java.lang.String toString()>();

        $r5 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Opening an new session with ID ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("CrashlyticsCore", $r7);

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void writeBeginSession(java.lang.String,java.util.Date)>($r4, $r1);

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void writeSessionApp(java.lang.String)>($r4);

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void writeSessionOS(java.lang.String)>($r4);

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void writeSessionDevice(java.lang.String)>($r4);

        $r8 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.LogFileManager logFileManager>;

        virtualinvoke $r8.<com.crashlytics.android.core.LogFileManager: void setCurrentSession(java.lang.String)>($r4);

        return;
    }
    private void doWriteNonFatal(java.util.Date, java.lang.Thread, java.lang.Throwable)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.util.Date $r1;
        java.lang.Thread $r2;
        java.lang.Throwable $r3, $r15;
        com.crashlytics.android.core.ClsFileOutputStream $r4;
        com.crashlytics.android.core.CodedOutputStream $r5, $r12;
        java.lang.String $r6, $r9;
        b.a.a.a.t $r7;
        java.lang.StringBuilder $r8;
        java.util.concurrent.atomic.AtomicInteger $r10;
        int $i0;
        java.io.File $r11;
        java.lang.Exception $r13, $r14;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: java.util.Date;

        $r2 := @parameter1: java.lang.Thread;

        $r3 := @parameter2: java.lang.Throwable;

        $r5 = null;

        $r6 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.lang.String getCurrentSessionId()>();

        if $r6 != null goto label01;

        $r7 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        interfaceinvoke $r7.<b.a.a.a.t: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Tried to write a non-fatal exception while no session was open.", null);

        return;

     label01:
        staticinvoke <com.crashlytics.android.core.CrashlyticsCore: void recordLoggedExceptionEvent(java.lang.String)>($r6);

     label02:
        $r7 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

     label03:
        $r8 = new java.lang.StringBuilder;

     label04:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crashlytics is logging non-fatal exception \"");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" from thread ");

        $r9 = virtualinvoke $r2.<java.lang.Thread: java.lang.String getName()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("CrashlyticsCore", $r9);

        $r10 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.util.concurrent.atomic.AtomicInteger eventCounter>;

        $i0 = virtualinvoke $r10.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r9 = staticinvoke <b.a.a.a.a.b.m: java.lang.String a(int)>($i0);

     label05:
        $r8 = new java.lang.StringBuilder;

     label06:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionEvent");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        $r4 = new com.crashlytics.android.core.ClsFileOutputStream;

     label08:
        $r11 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File getFilesDir()>();

        specialinvoke $r4.<com.crashlytics.android.core.ClsFileOutputStream: void <init>(java.io.File,java.lang.String)>($r11, $r9);

     label09:
        $r12 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: com.crashlytics.android.core.CodedOutputStream newInstance(java.io.OutputStream)>($r4);

     label10:
        $r5 = $r12;

     label11:
        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void writeSessionEvent(com.crashlytics.android.core.CodedOutputStream,java.util.Date,java.lang.Thread,java.lang.Throwable,java.lang.String,boolean)>($r12, $r1, $r2, $r3, "error", 0);

     label12:
        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Flushable,java.lang.String)>($r12, "Failed to flush to non-fatal file.");

        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Closeable,java.lang.String)>($r4, "Failed to close non-fatal file output stream.");

     label13:
        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void trimSessionEventFiles(java.lang.String,int)>($r6, 64);

     label14:
        return;

     label15:
        $r13 := @caughtexception;

        $r7 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        interfaceinvoke $r7.<b.a.a.a.t: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "An error occurred when trimming non-fatal files.", $r13);

        return;

     label16:
        $r14 := @caughtexception;

        $r4 = null;

     label17:
        $r7 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        interfaceinvoke $r7.<b.a.a.a.t: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "An error occurred in the non-fatal exception logger", $r14);

        staticinvoke <com.crashlytics.android.core.ExceptionUtils: void writeStackTraceIfNotNull(java.lang.Throwable,java.io.OutputStream)>($r14, $r4);

     label18:
        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Flushable,java.lang.String)>($r5, "Failed to flush to non-fatal file.");

        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Closeable,java.lang.String)>($r4, "Failed to close non-fatal file output stream.");

        goto label13;

     label19:
        $r15 := @caughtexception;

        $r4 = null;

     label20:
        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Flushable,java.lang.String)>($r5, "Failed to flush to non-fatal file.");

        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Closeable,java.lang.String)>($r4, "Failed to close non-fatal file output stream.");

        throw $r15;

     label21:
        $r15 := @caughtexception;

        goto label20;

     label22:
        $r15 := @caughtexception;

        goto label20;

     label23:
        $r14 := @caughtexception;

        goto label17;

        catch java.lang.Exception from label02 to label03 with label16;
        catch java.lang.Exception from label04 to label05 with label16;
        catch java.lang.Exception from label06 to label07 with label16;
        catch java.lang.Exception from label08 to label09 with label16;
        catch java.lang.Throwable from label02 to label09 with label19;
        catch java.lang.Exception from label09 to label10 with label23;
        catch java.lang.Exception from label11 to label12 with label23;
        catch java.lang.Throwable from label09 to label10 with label21;
        catch java.lang.Throwable from label11 to label12 with label21;
        catch java.lang.Exception from label13 to label14 with label15;
        catch java.lang.Throwable from label17 to label18 with label22;
    }
    private java.io.File[] ensureFileArrayNotNull(java.io.File[])
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.io.File[] $r1;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: java.io.File[];

        if $r1 != null goto label1;

        $r1 = newarray (java.io.File)[0];

     label1:
        return $r1;
    }
    private java.lang.String getCurrentSessionId()
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.io.File[] $r1;
        int $i0;
        java.io.File $r2;
        java.lang.String $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File[] listSortedSessionBeginFiles()>();

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        $r2 = $r1[0];

        $r3 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.lang.String getSessionIdFromSessionFile(java.io.File)>($r2);

        return $r3;

     label1:
        return null;
    }
    private java.io.File getFilesDir()
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.io.File $r1;
        b.a.a.a.a.f.a $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: b.a.a.a.a.f.a fileStore>;

        $r1 = interfaceinvoke $r2.<b.a.a.a.a.f.a: java.io.File a()>();

        return $r1;
    }
    private java.lang.String getPreviousSessionId()
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        int $i0;
        java.io.File[] $r1;
        java.io.File $r2;
        java.lang.String $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File[] listSortedSessionBeginFiles()>();

        $i0 = lengthof $r1;

        if $i0 <= 1 goto label1;

        $r2 = $r1[1];

        $r3 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.lang.String getSessionIdFromSessionFile(java.io.File)>($r2);

        return $r3;

     label1:
        return null;
    }
    private java.lang.String getSessionIdFromSessionFile(java.io.File)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.io.File $r1;
        java.lang.String $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: java.io.File;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, 35);

        return $r2;
    }
    private java.io.File[] getTrimmedNonFatalFiles(java.lang.String, java.io.File[], int)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.lang.String $r1, $r7;
        int $i0, $i1;
        java.io.File[] $r2;
        b.a.a.a.t $r3;
        java.util.Locale $r4;
        java.lang.Object[] $r5;
        java.lang.Integer $r6;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$FileNameContainsFilter $r8;
        java.lang.StringBuilder $r9;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.File[];

        $i0 := @parameter2: int;

        $i1 = lengthof $r2;

        if $i1 <= $i0 goto label1;

        $r3 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        $r4 = <java.util.Locale: java.util.Locale US>;

        $r5 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[0] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r4, "Trimming down to %d logged exceptions.", $r5);

        interfaceinvoke $r3.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("CrashlyticsCore", $r7);

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void trimSessionEventFiles(java.lang.String,int)>($r1, $i0);

        $r8 = new com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$FileNameContainsFilter;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionEvent");

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$FileNameContainsFilter: void <init>(java.lang.String)>($r1);

        $r2 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File[] listFilesMatching(java.io.FilenameFilter)>($r8);

     label1:
        return $r2;
    }
    private com.crashlytics.android.core.UserMetaData getUserMetaData(java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.lang.String $r1, $r4, $r5;
        boolean $z0;
        com.crashlytics.android.core.UserMetaData $r2;
        com.crashlytics.android.core.CrashlyticsCore $r3;
        com.crashlytics.android.core.MetaDataStore $r6;
        java.io.File $r7;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: boolean isHandlingException()>();

        if $z0 == 0 goto label1;

        $r2 = new com.crashlytics.android.core.UserMetaData;

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $r1 = virtualinvoke $r3.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String getUserIdentifier()>();

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $r4 = virtualinvoke $r3.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String getUserName()>();

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $r5 = virtualinvoke $r3.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String getUserEmail()>();

        specialinvoke $r2.<com.crashlytics.android.core.UserMetaData: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r1, $r4, $r5);

        return $r2;

     label1:
        $r6 = new com.crashlytics.android.core.MetaDataStore;

        $r7 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File getFilesDir()>();

        specialinvoke $r6.<com.crashlytics.android.core.MetaDataStore: void <init>(java.io.File)>($r7);

        $r2 = virtualinvoke $r6.<com.crashlytics.android.core.MetaDataStore: com.crashlytics.android.core.UserMetaData readUserData(java.lang.String)>($r1);

        return $r2;
    }
    private void handleUncaughtException(java.util.Date, java.lang.Thread, java.lang.Throwable)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.util.Date $r1;
        java.lang.Thread $r2;
        java.lang.Throwable $r3;
        boolean $z0;
        com.crashlytics.android.core.CrashlyticsCore $r4;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: java.util.Date;

        $r2 := @parameter1: java.lang.Thread;

        $r3 := @parameter2: java.lang.Throwable;

        $r4 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        virtualinvoke $r4.<com.crashlytics.android.core.CrashlyticsCore: void createCrashMarker()>();

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void writeFatal(java.util.Date,java.lang.Thread,java.lang.Throwable)>($r1, $r2, $r3);

        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void doCloseSessions()>();

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void doOpenSession()>();

        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void trimSessionFiles()>();

        $r4 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $z0 = virtualinvoke $r4.<com.crashlytics.android.core.CrashlyticsCore: boolean shouldPromptUserBeforeSendingCrashReports()>();

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void sendSessionReports()>();

     label1:
        return;
    }
    private java.io.File[] listCompleteSessionFiles()
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.io.File[] $r1;
        java.io.FilenameFilter $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r2 = <com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.FilenameFilter SESSION_FILE_FILTER>;

        $r1 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File[] listFilesMatching(java.io.FilenameFilter)>($r2);

        return $r1;
    }
    private java.io.File[] listFilesMatching(java.io.FilenameFilter)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.io.FilenameFilter $r1;
        java.io.File $r2;
        java.io.File[] $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: java.io.FilenameFilter;

        $r2 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File getFilesDir()>();

        $r3 = virtualinvoke $r2.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r1);

        $r3 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File[] ensureFileArrayNotNull(java.io.File[])>($r3);

        return $r3;
    }
    private java.io.File[] listSessionPartFilesFor(java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.lang.String $r1;
        java.io.File[] $r2;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$SessionPartFileFilter $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: java.lang.String;

        $r3 = new com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$SessionPartFileFilter;

        specialinvoke $r3.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$SessionPartFileFilter: void <init>(java.lang.String)>($r1);

        $r2 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File[] listFilesMatching(java.io.FilenameFilter)>($r3);

        return $r2;
    }
    private java.io.File[] listSortedSessionBeginFiles()
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.util.Comparator $r1;
        java.io.File[] $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r2 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File[] listSessionBeginFiles()>();

        $r1 = <com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.util.Comparator LARGEST_FILE_NAME_FIRST>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($r2, $r1);

        return $r2;
    }
    private void sendSessionReports()
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        int $i0, $i1;
        java.io.File $r1;
        com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper $r2;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$SendSessionRunnable $r3;
        com.crashlytics.android.core.CrashlyticsCore $r4;
        java.io.File[] $r5;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r5 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File[] listCompleteSessionFiles()>();

        $i0 = lengthof $r5;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r1 = $r5[$i1];

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper executorServiceWrapper>;

        $r3 = new com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$SendSessionRunnable;

        $r4 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        specialinvoke $r3.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$SendSessionRunnable: void <init>(com.crashlytics.android.core.CrashlyticsCore,java.io.File)>($r4, $r1);

        virtualinvoke $r2.<com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper: java.util.concurrent.Future executeAsync(java.lang.Runnable)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }
    private void synthesizeSessionFile(java.io.File, java.lang.String, java.io.File[], java.io.File)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.io.File $r1, $r4, $r7;
        java.lang.String $r2, $r11;
        java.io.File[] $r3;
        com.crashlytics.android.core.CodedOutputStream $r5, $r8;
        boolean $z0;
        com.crashlytics.android.core.ClsFileOutputStream $r6;
        b.a.a.a.t $r9;
        java.lang.StringBuilder $r10;
        java.util.Date $r12;
        long $l0;
        java.lang.Exception $r13;
        java.lang.Throwable $r14;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.io.File[];

        $r4 := @parameter3: java.io.File;

        $r5 = null;

        $z0 = 1;

        if $r4 == null goto label16;

     label01:
        $r6 = new com.crashlytics.android.core.ClsFileOutputStream;

     label02:
        $r7 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File getFilesDir()>();

        specialinvoke $r6.<com.crashlytics.android.core.ClsFileOutputStream: void <init>(java.io.File,java.lang.String)>($r7, $r2);

     label03:
        $r8 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: com.crashlytics.android.core.CodedOutputStream newInstance(java.io.OutputStream)>($r6);

     label04:
        $r5 = $r8;

     label05:
        $r9 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

     label06:
        $r10 = new java.lang.StringBuilder;

     label07:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Collecting SessionStart data for session ID ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("CrashlyticsCore", $r11);

        staticinvoke <com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void writeToCosFromFile(com.crashlytics.android.core.CodedOutputStream,java.io.File)>($r8, $r1);

     label08:
        $r12 = new java.util.Date;

     label09:
        specialinvoke $r12.<java.util.Date: void <init>()>();

        $l0 = virtualinvoke $r12.<java.util.Date: long getTime()>();

     label10:
        $l0 = $l0 / 1000L;

     label11:
        virtualinvoke $r8.<com.crashlytics.android.core.CodedOutputStream: void writeUInt64(int,long)>(4, $l0);

        virtualinvoke $r8.<com.crashlytics.android.core.CodedOutputStream: void writeBool(int,boolean)>(5, $z0);

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void writeInitialPartsTo(com.crashlytics.android.core.CodedOutputStream,java.lang.String)>($r8, $r2);

        staticinvoke <com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void writeNonFatalEventsTo(com.crashlytics.android.core.CodedOutputStream,java.io.File[],java.lang.String)>($r8, $r3, $r2);

     label12:
        if $z0 == 0 goto label14;

     label13:
        staticinvoke <com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void writeToCosFromFile(com.crashlytics.android.core.CodedOutputStream,java.io.File)>($r8, $r4);

     label14:
        virtualinvoke $r8.<com.crashlytics.android.core.CodedOutputStream: void writeUInt32(int,int)>(11, 1);

        virtualinvoke $r8.<com.crashlytics.android.core.CodedOutputStream: void writeEnum(int,int)>(12, 3);

     label15:
        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Flushable,java.lang.String)>($r8, "Error flushing session file stream");

        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Closeable,java.lang.String)>($r6, "Failed to close CLS file");

        return;

     label16:
        $z0 = 0;

        goto label01;

     label17:
        $r13 := @caughtexception;

        $r6 = null;

     label18:
        $r9 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to write session file for session ID: ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<b.a.a.a.t: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", $r2, $r13);

        staticinvoke <com.crashlytics.android.core.ExceptionUtils: void writeStackTraceIfNotNull(java.lang.Throwable,java.io.OutputStream)>($r13, $r6);

     label19:
        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Flushable,java.lang.String)>($r5, "Error flushing session file stream");

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void closeWithoutRenamingOrLog(com.crashlytics.android.core.ClsFileOutputStream)>($r6);

        return;

     label20:
        $r14 := @caughtexception;

        $r6 = null;

     label21:
        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Flushable,java.lang.String)>($r5, "Error flushing session file stream");

        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Closeable,java.lang.String)>($r6, "Failed to close CLS file");

        throw $r14;

     label22:
        $r14 := @caughtexception;

        goto label21;

     label23:
        $r13 := @caughtexception;

        goto label18;

        catch java.lang.Exception from label02 to label03 with label17;
        catch java.lang.Throwable from label01 to label03 with label20;
        catch java.lang.Exception from label03 to label04 with label23;
        catch java.lang.Exception from label05 to label06 with label23;
        catch java.lang.Exception from label07 to label08 with label23;
        catch java.lang.Exception from label09 to label10 with label23;
        catch java.lang.Exception from label11 to label12 with label23;
        catch java.lang.Exception from label13 to label15 with label23;
        catch java.lang.Throwable from label03 to label04 with label22;
        catch java.lang.Throwable from label05 to label10 with label22;
        catch java.lang.Throwable from label11 to label12 with label22;
        catch java.lang.Throwable from label13 to label15 with label22;
        catch java.lang.Throwable from label18 to label19 with label22;
    }
    private void trimOpenSessions(int)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        int $i0, $i1, $i2;
        java.util.HashSet $r1;
        java.io.File[] $r2;
        java.io.File $r3;
        java.lang.String $r4, $r9;
        com.crashlytics.android.core.LogFileManager $r5;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$AnySessionPartFileFilter $r6;
        java.util.regex.Pattern $r7;
        java.util.regex.Matcher $r8;
        boolean $z0;
        b.a.a.a.t $r10;
        java.lang.StringBuilder $r11;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $i0 := @parameter0: int;

        $i1 = 0;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $r2 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File[] listSortedSessionBeginFiles()>();

        $i2 = lengthof $r2;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i2);

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $r3 = $r2[$i2];

        $r4 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.lang.String getSessionIdFromSessionFile(java.io.File)>($r3);

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r4);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $r5 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.LogFileManager logFileManager>;

        virtualinvoke $r5.<com.crashlytics.android.core.LogFileManager: void discardOldLogFiles(java.util.Set)>($r1);

        $r6 = new com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$AnySessionPartFileFilter;

        specialinvoke $r6.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$AnySessionPartFileFilter: void <init>(com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$1)>(null);

        $r2 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File[] listFilesMatching(java.io.FilenameFilter)>($r6);

        $i0 = lengthof $r2;

     label3:
        if $i1 >= $i0 goto label5;

        $r3 = $r2[$i1];

        $r4 = virtualinvoke $r3.<java.io.File: java.lang.String getName()>();

        $r7 = <com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.util.regex.Pattern SESSION_FILE_PATTERN>;

        $r8 = virtualinvoke $r7.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r4);

        virtualinvoke $r8.<java.util.regex.Matcher: boolean matches()>();

        $r9 = virtualinvoke $r8.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>($r9);

        if $z0 != 0 goto label4;

        $r10 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trimming open session file: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("CrashlyticsCore", $r4);

        virtualinvoke $r3.<java.io.File: boolean delete()>();

     label4:
        $i1 = $i1 + 1;

        goto label3;

     label5:
        return;
    }
    private void trimSessionEventFiles(java.lang.String, int)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.lang.String $r1;
        int $i0;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$FileNameContainsFilter $r2;
        java.io.File $r3;
        java.lang.StringBuilder $r4;
        java.util.Comparator $r5;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r3 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File getFilesDir()>();

        $r2 = new com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$FileNameContainsFilter;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionEvent");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$FileNameContainsFilter: void <init>(java.lang.String)>($r1);

        $r5 = <com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.util.Comparator SMALLEST_FILE_NAME_FIRST>;

        staticinvoke <com.crashlytics.android.core.Utils: void capFileCount(java.io.File,java.io.FilenameFilter,int,java.util.Comparator)>($r3, $r2, $i0, $r5);

        return;
    }
    private void writeBeginSession(java.lang.String, java.util.Date)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.lang.String $r1, $r7;
        java.util.Date $r2;
        com.crashlytics.android.core.CodedOutputStream $r3, $r8;
        com.crashlytics.android.core.ClsFileOutputStream $r4;
        java.io.File $r5;
        java.lang.StringBuilder $r6;
        java.util.Locale $r9;
        java.lang.Object[] $r10;
        com.crashlytics.android.core.CrashlyticsCore $r11;
        long $l0;
        java.lang.Exception $r12;
        java.lang.Throwable $r13;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Date;

        $r3 = null;

     label01:
        $r4 = new com.crashlytics.android.core.ClsFileOutputStream;

     label02:
        $r5 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File getFilesDir()>();

     label03:
        $r6 = new java.lang.StringBuilder;

     label04:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BeginSession");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<com.crashlytics.android.core.ClsFileOutputStream: void <init>(java.io.File,java.lang.String)>($r5, $r7);

     label05:
        $r8 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: com.crashlytics.android.core.CodedOutputStream newInstance(java.io.OutputStream)>($r4);

     label06:
        $r3 = $r8;

     label07:
        $r9 = <java.util.Locale: java.util.Locale US>;

     label08:
        $r10 = newarray (java.lang.Object)[1];

        $r11 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $r7 = virtualinvoke $r11.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String getVersion()>();

     label09:
        $r10[0] = $r7;

     label10:
        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r9, "Crashlytics Android SDK/%s", $r10);

        $l0 = virtualinvoke $r2.<java.util.Date: long getTime()>();

     label11:
        $l0 = $l0 / 1000L;

     label12:
        staticinvoke <com.crashlytics.android.core.SessionProtobufHelper: void writeBeginSession(com.crashlytics.android.core.CodedOutputStream,java.lang.String,java.lang.String,long)>($r8, $r1, $r7, $l0);

     label13:
        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Flushable,java.lang.String)>($r8, "Failed to flush to session begin file.");

        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Closeable,java.lang.String)>($r4, "Failed to close begin session file.");

        return;

     label14:
        $r12 := @caughtexception;

        $r4 = null;

     label15:
        staticinvoke <com.crashlytics.android.core.ExceptionUtils: void writeStackTraceIfNotNull(java.lang.Throwable,java.io.OutputStream)>($r12, $r4);

        throw $r12;

     label16:
        $r13 := @caughtexception;

     label17:
        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Flushable,java.lang.String)>($r3, "Failed to flush to session begin file.");

        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Closeable,java.lang.String)>($r4, "Failed to close begin session file.");

        throw $r13;

     label18:
        $r13 := @caughtexception;

        $r4 = null;

        goto label17;

     label19:
        $r12 := @caughtexception;

        goto label15;

        catch java.lang.Exception from label02 to label03 with label14;
        catch java.lang.Exception from label04 to label05 with label14;
        catch java.lang.Throwable from label01 to label05 with label18;
        catch java.lang.Exception from label05 to label06 with label19;
        catch java.lang.Exception from label08 to label11 with label19;
        catch java.lang.Exception from label12 to label13 with label19;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label09 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label15 to label16 with label16;
    }
    private void writeExternalCrashEvent(com.crashlytics.android.core.internal.models.SessionEventData)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        com.crashlytics.android.core.internal.models.SessionEventData $r1;
        b.a.a.a.a.f.a $r2;
        com.crashlytics.android.core.CodedOutputStream $r3, $r10;
        java.lang.String $r4, $r9;
        b.a.a.a.t $r5;
        com.crashlytics.android.core.ClsFileOutputStream $r6;
        java.io.File $r7;
        java.lang.StringBuilder $r8;
        com.crashlytics.android.core.MetaDataStore $r11;
        java.util.Map $r12;
        com.crashlytics.android.core.LogFileManager $r13;
        com.crashlytics.android.core.CrashlyticsCore $r14;
        android.content.Context $r15;
        java.lang.Exception $r16;
        java.lang.Throwable $r17;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: com.crashlytics.android.core.internal.models.SessionEventData;

        $r3 = null;

     label01:
        $r4 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.lang.String getPreviousSessionId()>();

     label02:
        if $r4 != null goto label05;

     label03:
        $r5 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        interfaceinvoke $r5.<b.a.a.a.t: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Tried to write a native crash while no session was open.", null);

     label04:
        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Flushable,java.lang.String)>(null, "Failed to flush to session begin file.");

        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Closeable,java.lang.String)>(null, "Failed to close fatal exception file output stream.");

        return;

     label05:
        staticinvoke <com.crashlytics.android.core.CrashlyticsCore: void recordFatalExceptionEvent(java.lang.String)>($r4);

     label06:
        $r6 = new com.crashlytics.android.core.ClsFileOutputStream;

     label07:
        $r7 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File getFilesDir()>();

     label08:
        $r8 = new java.lang.StringBuilder;

     label09:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionCrash");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.crashlytics.android.core.ClsFileOutputStream: void <init>(java.io.File,java.lang.String)>($r7, $r9);

     label10:
        $r10 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: com.crashlytics.android.core.CodedOutputStream newInstance(java.io.OutputStream)>($r6);

     label11:
        $r3 = $r10;

     label12:
        $r11 = new com.crashlytics.android.core.MetaDataStore;

     label13:
        $r7 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File getFilesDir()>();

        specialinvoke $r11.<com.crashlytics.android.core.MetaDataStore: void <init>(java.io.File)>($r7);

        $r12 = virtualinvoke $r11.<com.crashlytics.android.core.MetaDataStore: java.util.Map readKeyData(java.lang.String)>($r4);

     label14:
        $r13 = new com.crashlytics.android.core.LogFileManager;

     label15:
        $r14 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $r15 = virtualinvoke $r14.<com.crashlytics.android.core.CrashlyticsCore: android.content.Context getContext()>();

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: b.a.a.a.a.f.a fileStore>;

        specialinvoke $r13.<com.crashlytics.android.core.LogFileManager: void <init>(android.content.Context,b.a.a.a.a.f.a,java.lang.String)>($r15, $r2, $r4);

        staticinvoke <com.crashlytics.android.core.NativeCrashWriter: void writeNativeCrash(com.crashlytics.android.core.internal.models.SessionEventData,com.crashlytics.android.core.LogFileManager,java.util.Map,com.crashlytics.android.core.CodedOutputStream)>($r1, $r13, $r12, $r10);

     label16:
        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Flushable,java.lang.String)>($r10, "Failed to flush to session begin file.");

        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Closeable,java.lang.String)>($r6, "Failed to close fatal exception file output stream.");

        return;

     label17:
        $r16 := @caughtexception;

        $r6 = null;

     label18:
        $r5 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        interfaceinvoke $r5.<b.a.a.a.t: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "An error occurred in the native crash logger", $r16);

        staticinvoke <com.crashlytics.android.core.ExceptionUtils: void writeStackTraceIfNotNull(java.lang.Throwable,java.io.OutputStream)>($r16, $r6);

     label19:
        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Flushable,java.lang.String)>($r3, "Failed to flush to session begin file.");

        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Closeable,java.lang.String)>($r6, "Failed to close fatal exception file output stream.");

        return;

     label20:
        $r17 := @caughtexception;

        $r6 = null;

     label21:
        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Flushable,java.lang.String)>($r3, "Failed to flush to session begin file.");

        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Closeable,java.lang.String)>($r6, "Failed to close fatal exception file output stream.");

        throw $r17;

     label22:
        $r17 := @caughtexception;

        goto label21;

     label23:
        $r16 := @caughtexception;

        goto label18;

        catch java.lang.Exception from label01 to label02 with label17;
        catch java.lang.Exception from label03 to label04 with label17;
        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch java.lang.Exception from label05 to label06 with label17;
        catch java.lang.Exception from label07 to label08 with label17;
        catch java.lang.Exception from label09 to label10 with label17;
        catch java.lang.Throwable from label05 to label10 with label20;
        catch java.lang.Exception from label10 to label11 with label23;
        catch java.lang.Exception from label13 to label14 with label23;
        catch java.lang.Exception from label15 to label16 with label23;
        catch java.lang.Throwable from label10 to label11 with label22;
        catch java.lang.Throwable from label12 to label16 with label22;
        catch java.lang.Throwable from label18 to label19 with label22;
    }
    private void writeFatal(java.util.Date, java.lang.Thread, java.lang.Throwable)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.util.Date $r1;
        java.lang.Thread $r2;
        java.lang.Throwable $r3, $r12;
        com.crashlytics.android.core.ClsFileOutputStream $r4;
        com.crashlytics.android.core.CodedOutputStream $r5, $r10;
        java.lang.String $r6;
        b.a.a.a.t $r7;
        java.io.File $r8;
        java.lang.StringBuilder $r9;
        java.lang.Exception $r11;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: java.util.Date;

        $r2 := @parameter1: java.lang.Thread;

        $r3 := @parameter2: java.lang.Throwable;

        $r5 = null;

     label01:
        $r6 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.lang.String getCurrentSessionId()>();

     label02:
        if $r6 != null goto label05;

     label03:
        $r7 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        interfaceinvoke $r7.<b.a.a.a.t: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Tried to write a fatal exception while no session was open.", null);

     label04:
        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Flushable,java.lang.String)>(null, "Failed to flush to session begin file.");

        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Closeable,java.lang.String)>(null, "Failed to close fatal exception file output stream.");

        return;

     label05:
        staticinvoke <com.crashlytics.android.core.CrashlyticsCore: void recordFatalExceptionEvent(java.lang.String)>($r6);

     label06:
        $r4 = new com.crashlytics.android.core.ClsFileOutputStream;

     label07:
        $r8 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File getFilesDir()>();

     label08:
        $r9 = new java.lang.StringBuilder;

     label09:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionCrash");

        $r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<com.crashlytics.android.core.ClsFileOutputStream: void <init>(java.io.File,java.lang.String)>($r8, $r6);

     label10:
        $r10 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: com.crashlytics.android.core.CodedOutputStream newInstance(java.io.OutputStream)>($r4);

     label11:
        $r5 = $r10;

     label12:
        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void writeSessionEvent(com.crashlytics.android.core.CodedOutputStream,java.util.Date,java.lang.Thread,java.lang.Throwable,java.lang.String,boolean)>($r10, $r1, $r2, $r3, "crash", 1);

     label13:
        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Flushable,java.lang.String)>($r10, "Failed to flush to session begin file.");

        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Closeable,java.lang.String)>($r4, "Failed to close fatal exception file output stream.");

        return;

     label14:
        $r11 := @caughtexception;

        $r4 = null;

     label15:
        $r7 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        interfaceinvoke $r7.<b.a.a.a.t: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "An error occurred in the fatal exception logger", $r11);

        staticinvoke <com.crashlytics.android.core.ExceptionUtils: void writeStackTraceIfNotNull(java.lang.Throwable,java.io.OutputStream)>($r11, $r4);

     label16:
        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Flushable,java.lang.String)>($r5, "Failed to flush to session begin file.");

        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Closeable,java.lang.String)>($r4, "Failed to close fatal exception file output stream.");

        return;

     label17:
        $r12 := @caughtexception;

        $r4 = null;

     label18:
        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Flushable,java.lang.String)>($r5, "Failed to flush to session begin file.");

        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Closeable,java.lang.String)>($r4, "Failed to close fatal exception file output stream.");

        throw $r12;

     label19:
        $r12 := @caughtexception;

        goto label18;

     label20:
        $r12 := @caughtexception;

        goto label18;

     label21:
        $r11 := @caughtexception;

        goto label15;

        catch java.lang.Exception from label01 to label02 with label14;
        catch java.lang.Exception from label03 to label04 with label14;
        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Exception from label07 to label08 with label14;
        catch java.lang.Exception from label09 to label10 with label14;
        catch java.lang.Throwable from label05 to label10 with label17;
        catch java.lang.Exception from label10 to label11 with label21;
        catch java.lang.Exception from label12 to label13 with label21;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch java.lang.Throwable from label15 to label16 with label20;
    }
    private void writeInitialPartsTo(com.crashlytics.android.core.CodedOutputStream, java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        com.crashlytics.android.core.CodedOutputStream $r1;
        java.lang.String $r2, $r4, $r7;
        java.lang.String[] $r3;
        int $i0, $i1, $i2;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$FileNameContainsFilter $r5;
        java.lang.StringBuilder $r6;
        java.io.File[] $r8;
        b.a.a.a.t $r9;
        java.io.File $r10;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: com.crashlytics.android.core.CodedOutputStream;

        $r2 := @parameter1: java.lang.String;

        $r3 = <com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.lang.String[] INITIAL_SESSION_PART_TAGS>;

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r4 = $r3[$i1];

        $r5 = new com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$FileNameContainsFilter;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$FileNameContainsFilter: void <init>(java.lang.String)>($r7);

        $r8 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File[] listFilesMatching(java.io.FilenameFilter)>($r5);

        $i2 = lengthof $r8;

        if $i2 != 0 goto label3;

        $r9 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t find ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" data for session ID ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<b.a.a.a.t: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", $r4, null);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r9 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Collecting ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" data for session ID ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("CrashlyticsCore", $r4);

        $r10 = $r8[0];

        staticinvoke <com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void writeToCosFromFile(com.crashlytics.android.core.CodedOutputStream,java.io.File)>($r1, $r10);

        goto label2;

     label4:
        return;
    }
    private static void writeNonFatalEventsTo(com.crashlytics.android.core.CodedOutputStream, java.io.File[], java.lang.String)
    {
        com.crashlytics.android.core.CodedOutputStream $r0;
        java.io.File[] $r1;
        java.lang.String $r2, $r8;
        int $i0, $i1;
        java.util.Comparator $r3;
        java.io.File $r4;
        b.a.a.a.t $r5;
        java.util.Locale $r6;
        java.lang.Object[] $r7;
        java.lang.Exception $r9;

        $r0 := @parameter0: com.crashlytics.android.core.CodedOutputStream;

        $r1 := @parameter1: java.io.File[];

        $r2 := @parameter2: java.lang.String;

        $r3 = <b.a.a.a.a.b.m: java.util.Comparator a>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($r1, $r3);

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label7;

        $r4 = $r1[$i1];

     label2:
        $r5 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

     label3:
        $r6 = <java.util.Locale: java.util.Locale US>;

     label4:
        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = $r2;

        $r8 = virtualinvoke $r4.<java.io.File: java.lang.String getName()>();

        $r7[1] = $r8;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r6, "Found Non Fatal for session ID %s in %s ", $r7);

        interfaceinvoke $r5.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("CrashlyticsCore", $r8);

        staticinvoke <com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void writeToCosFromFile(com.crashlytics.android.core.CodedOutputStream,java.io.File)>($r0, $r4);

     label5:
        $i1 = $i1 + 1;

        goto label1;

     label6:
        $r9 := @caughtexception;

        $r5 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        interfaceinvoke $r5.<b.a.a.a.t: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Error writting non-fatal to session.", $r9);

        goto label5;

     label7:
        return;

        catch java.lang.Exception from label2 to label3 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }
    private void writeSessionApp(java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.lang.String $r1, $r2, $r10, $r11, $r12, $r13;
        com.crashlytics.android.core.CodedOutputStream $r3, $r7;
        com.crashlytics.android.core.ClsFileOutputStream $r4;
        java.io.File $r5;
        java.lang.StringBuilder $r6;
        b.a.a.a.a.b.z $r8;
        com.crashlytics.android.core.CrashlyticsCore $r9;
        b.a.a.a.a.b.t $r14;
        int $i0;
        java.lang.Exception $r15, $r18;
        java.lang.Throwable $r16, $r17;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: java.lang.String;

        $r3 = null;

     label01:
        $r4 = new com.crashlytics.android.core.ClsFileOutputStream;

     label02:
        $r5 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File getFilesDir()>();

     label03:
        $r6 = new java.lang.StringBuilder;

     label04:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionApp");

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<com.crashlytics.android.core.ClsFileOutputStream: void <init>(java.io.File,java.lang.String)>($r5, $r1);

     label05:
        $r7 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: com.crashlytics.android.core.CodedOutputStream newInstance(java.io.OutputStream)>($r4);

     label06:
        $r8 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: b.a.a.a.a.b.z idManager>;

        $r1 = virtualinvoke $r8.<b.a.a.a.a.b.z: java.lang.String c()>();

        $r9 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $r10 = virtualinvoke $r9.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String getApiKey()>();

        $r9 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $r11 = virtualinvoke $r9.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String getVersionCode()>();

        $r9 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $r12 = virtualinvoke $r9.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String getVersionName()>();

        $r8 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: b.a.a.a.a.b.z idManager>;

        $r13 = virtualinvoke $r8.<b.a.a.a.a.b.z: java.lang.String b()>();

        $r9 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $r2 = virtualinvoke $r9.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String getInstallerPackageName()>();

        $r14 = staticinvoke <b.a.a.a.a.b.t: b.a.a.a.a.b.t a(java.lang.String)>($r2);

        $i0 = virtualinvoke $r14.<b.a.a.a.a.b.t: int a()>();

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.lang.String unityVersion>;

        staticinvoke <com.crashlytics.android.core.SessionProtobufHelper: void writeSessionApp(com.crashlytics.android.core.CodedOutputStream,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>($r7, $r1, $r10, $r11, $r12, $r13, $i0, $r2);

     label07:
        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Flushable,java.lang.String)>($r7, "Failed to flush to session app file.");

        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Closeable,java.lang.String)>($r4, "Failed to close session app file.");

        return;

     label08:
        $r15 := @caughtexception;

        $r4 = null;

     label09:
        staticinvoke <com.crashlytics.android.core.ExceptionUtils: void writeStackTraceIfNotNull(java.lang.Throwable,java.io.OutputStream)>($r15, $r4);

        throw $r15;

     label10:
        $r16 := @caughtexception;

     label11:
        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Flushable,java.lang.String)>($r3, "Failed to flush to session app file.");

        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Closeable,java.lang.String)>($r4, "Failed to close session app file.");

        throw $r16;

     label12:
        $r16 := @caughtexception;

        $r4 = null;

        goto label11;

     label13:
        $r16 := @caughtexception;

        goto label11;

     label14:
        $r17 := @caughtexception;

        $r3 = $r7;

        $r16 = $r17;

        goto label11;

     label15:
        $r15 := @caughtexception;

        goto label09;

     label16:
        $r18 := @caughtexception;

        $r15 = $r18;

        $r3 = $r7;

        goto label09;

        catch java.lang.Exception from label02 to label03 with label08;
        catch java.lang.Exception from label04 to label05 with label08;
        catch java.lang.Throwable from label01 to label05 with label12;
        catch java.lang.Exception from label05 to label06 with label15;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Exception from label06 to label07 with label16;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label09 to label10 with label10;
    }
    private void writeSessionDevice(java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.lang.String $r1, $r2, $r13, $r16;
        com.crashlytics.android.core.ClsFileOutputStream $r3, $r5;
        com.crashlytics.android.core.CodedOutputStream $r4, $r8;
        java.io.File $r6;
        java.lang.StringBuilder $r7;
        com.crashlytics.android.core.CrashlyticsCore $r9;
        android.content.Context $r10;
        android.os.StatFs $r11;
        b.a.a.a.a.b.z $r12;
        int $i0, $i1, $i3;
        java.lang.Runtime $r14;
        long $l2, $l4, $l5;
        boolean $z0;
        java.util.Map $r15;
        java.lang.Exception $r17;
        java.lang.Throwable $r18;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: java.lang.String;

        $r3 = null;

        $r4 = null;

     label01:
        $r5 = new com.crashlytics.android.core.ClsFileOutputStream;

     label02:
        $r6 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File getFilesDir()>();

     label03:
        $r7 = new java.lang.StringBuilder;

     label04:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionDevice");

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.crashlytics.android.core.ClsFileOutputStream: void <init>(java.io.File,java.lang.String)>($r6, $r1);

     label05:
        $r8 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: com.crashlytics.android.core.CodedOutputStream newInstance(java.io.OutputStream)>($r5);

     label06:
        $r4 = $r8;

     label07:
        $r9 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $r10 = virtualinvoke $r9.<com.crashlytics.android.core.CrashlyticsCore: android.content.Context getContext()>();

     label08:
        $r11 = new android.os.StatFs;

     label09:
        $r6 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r1 = virtualinvoke $r6.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r11.<android.os.StatFs: void <init>(java.lang.String)>($r1);

        $r12 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: b.a.a.a.a.b.z idManager>;

        $r13 = virtualinvoke $r12.<b.a.a.a.a.b.z: java.lang.String h()>();

        $i0 = staticinvoke <b.a.a.a.a.b.m: int a()>();

        $r14 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $i1 = virtualinvoke $r14.<java.lang.Runtime: int availableProcessors()>();

        $l2 = staticinvoke <b.a.a.a.a.b.m: long b()>();

        $i3 = virtualinvoke $r11.<android.os.StatFs: int getBlockCount()>();

     label10:
        $l4 = (long) $i3;

     label11:
        $i3 = virtualinvoke $r11.<android.os.StatFs: int getBlockSize()>();

     label12:
        $l5 = (long) $i3;

        $l4 = $l4 * $l5;

     label13:
        $z0 = staticinvoke <b.a.a.a.a.b.m: boolean f(android.content.Context)>($r10);

        $r12 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: b.a.a.a.a.b.z idManager>;

        $r15 = virtualinvoke $r12.<b.a.a.a.a.b.z: java.util.Map i()>();

        $i3 = staticinvoke <b.a.a.a.a.b.m: int h(android.content.Context)>($r10);

     label14:
        $r16 = <android.os.Build: java.lang.String MODEL>;

        $r1 = <android.os.Build: java.lang.String MANUFACTURER>;

        $r2 = <android.os.Build: java.lang.String PRODUCT>;

     label15:
        staticinvoke <com.crashlytics.android.core.SessionProtobufHelper: void writeSessionDevice(com.crashlytics.android.core.CodedOutputStream,java.lang.String,int,java.lang.String,int,long,long,boolean,java.util.Map,int,java.lang.String,java.lang.String)>($r8, $r13, $i0, $r16, $i1, $l2, $l4, $z0, $r15, $i3, $r1, $r2);

     label16:
        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Flushable,java.lang.String)>($r8, "Failed to flush session device info.");

        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Closeable,java.lang.String)>($r5, "Failed to close session device file.");

        return;

     label17:
        $r17 := @caughtexception;

     label18:
        staticinvoke <com.crashlytics.android.core.ExceptionUtils: void writeStackTraceIfNotNull(java.lang.Throwable,java.io.OutputStream)>($r17, $r3);

        throw $r17;

     label19:
        $r18 := @caughtexception;

        $r5 = $r3;

     label20:
        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Flushable,java.lang.String)>($r4, "Failed to flush session device info.");

        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Closeable,java.lang.String)>($r5, "Failed to close session device file.");

        throw $r18;

     label21:
        $r18 := @caughtexception;

        $r5 = null;

        goto label20;

     label22:
        $r18 := @caughtexception;

        goto label20;

     label23:
        $r17 := @caughtexception;

        $r3 = $r5;

        goto label18;

        catch java.lang.Exception from label02 to label03 with label17;
        catch java.lang.Exception from label04 to label05 with label17;
        catch java.lang.Throwable from label01 to label05 with label21;
        catch java.lang.Exception from label05 to label06 with label23;
        catch java.lang.Exception from label07 to label08 with label23;
        catch java.lang.Exception from label09 to label10 with label23;
        catch java.lang.Exception from label11 to label12 with label23;
        catch java.lang.Exception from label13 to label14 with label23;
        catch java.lang.Exception from label15 to label16 with label23;
        catch java.lang.Throwable from label05 to label06 with label22;
        catch java.lang.Throwable from label07 to label10 with label22;
        catch java.lang.Throwable from label11 to label12 with label22;
        catch java.lang.Throwable from label13 to label16 with label22;
        catch java.lang.Throwable from label18 to label19 with label19;
    }
    private void writeSessionEvent(com.crashlytics.android.core.CodedOutputStream, java.util.Date, java.lang.Thread, java.lang.Throwable, java.lang.String, boolean)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        com.crashlytics.android.core.CodedOutputStream $r1;
        java.util.Date $r2;
        java.lang.Thread $r3, $r25;
        java.lang.Throwable $r4;
        java.lang.String $r5, $r13, $r18;
        boolean $z0, $z1;
        long $l0, $l2, $l4;
        com.crashlytics.android.core.LogFileManager $r6;
        int $i1, $i3, $i5;
        com.crashlytics.android.core.CrashlyticsCore $r7;
        android.content.Context $r8;
        float $f0;
        com.crashlytics.android.core.DevicePowerStateListener $r9;
        android.content.res.Resources $r10;
        android.content.res.Configuration $r11;
        java.io.File $r12;
        android.app.ActivityManager$RunningAppProcessInfo $r14;
        java.util.LinkedList $r15, $r27;
        java.lang.StackTraceElement[] $r16;
        b.a.a.a.a.b.z $r17;
        java.util.Map $r19, $r26;
        java.lang.Thread[] $r20;
        java.util.Set $r21;
        java.util.Iterator $r22;
        java.lang.Object $r23;
        java.util.Map$Entry $r24;
        java.util.TreeMap $r28;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: com.crashlytics.android.core.CodedOutputStream;

        $r2 := @parameter1: java.util.Date;

        $r3 := @parameter2: java.lang.Thread;

        $r4 := @parameter3: java.lang.Throwable;

        $r5 := @parameter4: java.lang.String;

        $z0 := @parameter5: boolean;

        $r7 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $r8 = virtualinvoke $r7.<com.crashlytics.android.core.CrashlyticsCore: android.content.Context getContext()>();

        $l0 = virtualinvoke $r2.<java.util.Date: long getTime()>();

        $l0 = $l0 / 1000L;

        $f0 = staticinvoke <b.a.a.a.a.b.m: float c(android.content.Context)>($r8);

        $r9 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.DevicePowerStateListener devicePowerStateListener>;

        $z1 = virtualinvoke $r9.<com.crashlytics.android.core.DevicePowerStateListener: boolean isPowerConnected()>();

        $i3 = staticinvoke <b.a.a.a.a.b.m: int a(android.content.Context,boolean)>($r8, $z1);

        $z1 = staticinvoke <b.a.a.a.a.b.m: boolean d(android.content.Context)>($r8);

        $r10 = virtualinvoke $r8.<android.content.Context: android.content.res.Resources getResources()>();

        $r11 = virtualinvoke $r10.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i1 = $r11.<android.content.res.Configuration: int orientation>;

        $l2 = staticinvoke <b.a.a.a.a.b.m: long b()>();

        $l4 = staticinvoke <b.a.a.a.a.b.m: long b(android.content.Context)>($r8);

        $l2 = $l2 - $l4;

        $r12 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r13 = virtualinvoke $r12.<java.io.File: java.lang.String getPath()>();

        $l4 = staticinvoke <b.a.a.a.a.b.m: long b(java.lang.String)>($r13);

        $r13 = virtualinvoke $r8.<android.content.Context: java.lang.String getPackageName()>();

        $r14 = staticinvoke <b.a.a.a.a.b.m: android.app.ActivityManager$RunningAppProcessInfo a(java.lang.String,android.content.Context)>($r13, $r8);

        $r27 = new java.util.LinkedList;

        $r15 = $r27;

        specialinvoke $r27.<java.util.LinkedList: void <init>()>();

        $r16 = virtualinvoke $r4.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        $r7 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $r13 = virtualinvoke $r7.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String getBuildId()>();

        $r17 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: b.a.a.a.a.b.z idManager>;

        $r18 = virtualinvoke $r17.<b.a.a.a.a.b.z: java.lang.String c()>();

        if $z0 == 0 goto label2;

        $r19 = staticinvoke <java.lang.Thread: java.util.Map getAllStackTraces()>();

        $i5 = interfaceinvoke $r19.<java.util.Map: int size()>();

        $r20 = newarray (java.lang.Thread)[$i5];

        $r21 = interfaceinvoke $r19.<java.util.Map: java.util.Set entrySet()>();

        $r22 = interfaceinvoke $r21.<java.util.Set: java.util.Iterator iterator()>();

        $i5 = 0;

     label1:
        $z0 = interfaceinvoke $r22.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r23 = interfaceinvoke $r22.<java.util.Iterator: java.lang.Object next()>();

        $r24 = (java.util.Map$Entry) $r23;

        $r23 = interfaceinvoke $r24.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r25 = (java.lang.Thread) $r23;

        $r20[$i5] = $r25;

        $r23 = interfaceinvoke $r24.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r23);

        $i5 = $i5 + 1;

        goto label1;

     label2:
        $r20 = newarray (java.lang.Thread)[0];

     label3:
        $z0 = staticinvoke <b.a.a.a.a.b.m: boolean a(android.content.Context,java.lang.String,boolean)>($r8, "com.crashlytics.CollectCustomKeys", 1);

        if $z0 != 0 goto label5;

        $r28 = new java.util.TreeMap;

        $r19 = $r28;

        specialinvoke $r28.<java.util.TreeMap: void <init>()>();

     label4:
        $r6 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.LogFileManager logFileManager>;

        staticinvoke <com.crashlytics.android.core.SessionProtobufHelper: void writeSessionEvent(com.crashlytics.android.core.CodedOutputStream,long,java.lang.String,java.lang.Throwable,java.lang.Thread,java.lang.StackTraceElement[],java.lang.Thread[],java.util.List,java.util.Map,com.crashlytics.android.core.LogFileManager,android.app.ActivityManager$RunningAppProcessInfo,int,java.lang.String,java.lang.String,float,int,boolean,long,long)>($r1, $l0, $r5, $r4, $r3, $r16, $r20, $r15, $r19, $r6, $r14, $i1, $r18, $r13, $f0, $i3, $z1, $l2, $l4);

        return;

     label5:
        $r7 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $r26 = virtualinvoke $r7.<com.crashlytics.android.core.CrashlyticsCore: java.util.Map getAttributes()>();

        if $r26 == null goto label6;

        $i5 = interfaceinvoke $r26.<java.util.Map: int size()>();

        if $i5 <= 1 goto label6;

        $r28 = new java.util.TreeMap;

        $r19 = $r28;

        specialinvoke $r28.<java.util.TreeMap: void <init>(java.util.Map)>($r26);

        goto label4;

     label6:
        $r19 = $r26;

        goto label4;
    }
    private void writeSessionOS(java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.lang.String $r1;
        com.crashlytics.android.core.CodedOutputStream $r2, $r6;
        com.crashlytics.android.core.ClsFileOutputStream $r3;
        java.io.File $r4;
        java.lang.StringBuilder $r5;
        com.crashlytics.android.core.CrashlyticsCore $r7;
        android.content.Context $r8;
        boolean $z0;
        java.lang.Exception $r9;
        java.lang.Throwable $r10;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 = null;

     label01:
        $r3 = new com.crashlytics.android.core.ClsFileOutputStream;

     label02:
        $r4 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File getFilesDir()>();

     label03:
        $r5 = new java.lang.StringBuilder;

     label04:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionOS");

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<com.crashlytics.android.core.ClsFileOutputStream: void <init>(java.io.File,java.lang.String)>($r4, $r1);

     label05:
        $r6 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: com.crashlytics.android.core.CodedOutputStream newInstance(java.io.OutputStream)>($r3);

     label06:
        $r2 = $r6;

     label07:
        $r7 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $r8 = virtualinvoke $r7.<com.crashlytics.android.core.CrashlyticsCore: android.content.Context getContext()>();

        $z0 = staticinvoke <b.a.a.a.a.b.m: boolean g(android.content.Context)>($r8);

        staticinvoke <com.crashlytics.android.core.SessionProtobufHelper: void writeSessionOS(com.crashlytics.android.core.CodedOutputStream,boolean)>($r6, $z0);

     label08:
        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Flushable,java.lang.String)>($r6, "Failed to flush to session OS file.");

        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Closeable,java.lang.String)>($r3, "Failed to close session OS file.");

        return;

     label09:
        $r9 := @caughtexception;

        $r3 = null;

     label10:
        staticinvoke <com.crashlytics.android.core.ExceptionUtils: void writeStackTraceIfNotNull(java.lang.Throwable,java.io.OutputStream)>($r9, $r3);

        throw $r9;

     label11:
        $r10 := @caughtexception;

     label12:
        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Flushable,java.lang.String)>($r2, "Failed to flush to session OS file.");

        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Closeable,java.lang.String)>($r3, "Failed to close session OS file.");

        throw $r10;

     label13:
        $r10 := @caughtexception;

        $r3 = null;

        goto label12;

     label14:
        $r9 := @caughtexception;

        goto label10;

        catch java.lang.Exception from label02 to label03 with label09;
        catch java.lang.Exception from label04 to label05 with label09;
        catch java.lang.Throwable from label01 to label05 with label13;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Exception from label07 to label08 with label14;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
    }
    private void writeSessionPartsToSessionFile(java.io.File, java.lang.String, int)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.io.File $r1, $r12;
        java.lang.String $r2, $r5;
        int $i0, $i1;
        b.a.a.a.t $r3;
        java.lang.StringBuilder $r4;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$FileNameContainsFilter $r6;
        java.io.File[] $r7, $r11;
        boolean $z0, $z1;
        java.util.Locale $r8;
        java.lang.Object[] $r9;
        java.lang.Boolean $r10;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r3 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Collecting session parts for ID ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("CrashlyticsCore", $r5);

        $r6 = new com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$FileNameContainsFilter;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionCrash");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$FileNameContainsFilter: void <init>(java.lang.String)>($r5);

        $r7 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File[] listFilesMatching(java.io.FilenameFilter)>($r6);

        if $r7 == null goto label6;

        $i1 = lengthof $r7;

        if $i1 <= 0 goto label6;

        $z0 = 1;

     label1:
        $r3 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        $r8 = <java.util.Locale: java.util.Locale US>;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = $r2;

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r9[1] = $r10;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r8, "Session %s has fatal exception: %s", $r9);

        interfaceinvoke $r3.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("CrashlyticsCore", $r5);

        $r6 = new com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$FileNameContainsFilter;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionEvent");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$FileNameContainsFilter: void <init>(java.lang.String)>($r5);

        $r11 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File[] listFilesMatching(java.io.FilenameFilter)>($r6);

        if $r11 == null goto label7;

        $i1 = lengthof $r11;

        if $i1 <= 0 goto label7;

        $z1 = 1;

     label2:
        $r3 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        $r8 = <java.util.Locale: java.util.Locale US>;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = $r2;

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r9[1] = $r10;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r8, "Session %s has non-fatal exceptions: %s", $r9);

        interfaceinvoke $r3.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("CrashlyticsCore", $r5);

        if $z0 != 0 goto label3;

        if $z1 == 0 goto label9;

     label3:
        $r11 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File[] getTrimmedNonFatalFiles(java.lang.String,java.io.File[],int)>($r2, $r11, $i0);

        if $z0 == 0 goto label8;

        $r12 = $r7[0];

     label4:
        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void synthesizeSessionFile(java.io.File,java.lang.String,java.io.File[],java.io.File)>($r1, $r2, $r11, $r12);

     label5:
        $r3 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing session part files for ID ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("CrashlyticsCore", $r5);

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void deleteSessionPartFilesFor(java.lang.String)>($r2);

        return;

     label6:
        $z0 = 0;

        goto label1;

     label7:
        $z1 = 0;

        goto label2;

     label8:
        $r12 = null;

        goto label4;

     label9:
        $r3 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No events present for session ID ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("CrashlyticsCore", $r5);

        goto label5;
    }
    private void writeSessionUser(java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.lang.String $r1, $r6, $r9;
        com.crashlytics.android.core.CodedOutputStream $r2, $r7;
        com.crashlytics.android.core.ClsFileOutputStream $r3;
        java.io.File $r4;
        java.lang.StringBuilder $r5;
        com.crashlytics.android.core.UserMetaData $r8;
        boolean $z0;
        java.lang.Exception $r10;
        java.lang.Throwable $r11;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 = null;

     label01:
        $r3 = new com.crashlytics.android.core.ClsFileOutputStream;

     label02:
        $r4 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File getFilesDir()>();

     label03:
        $r5 = new java.lang.StringBuilder;

     label04:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionUser");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<com.crashlytics.android.core.ClsFileOutputStream: void <init>(java.io.File,java.lang.String)>($r4, $r6);

     label05:
        $r7 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: com.crashlytics.android.core.CodedOutputStream newInstance(java.io.OutputStream)>($r3);

     label06:
        $r2 = $r7;

     label07:
        $r8 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.UserMetaData getUserMetaData(java.lang.String)>($r1);

        $z0 = virtualinvoke $r8.<com.crashlytics.android.core.UserMetaData: boolean isEmpty()>();

     label08:
        if $z0 == 0 goto label09;

        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Flushable,java.lang.String)>($r7, "Failed to flush session user file.");

        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Closeable,java.lang.String)>($r3, "Failed to close session user file.");

        return;

     label09:
        $r1 = $r8.<com.crashlytics.android.core.UserMetaData: java.lang.String id>;

        $r6 = $r8.<com.crashlytics.android.core.UserMetaData: java.lang.String name>;

        $r9 = $r8.<com.crashlytics.android.core.UserMetaData: java.lang.String email>;

        staticinvoke <com.crashlytics.android.core.SessionProtobufHelper: void writeSessionUser(com.crashlytics.android.core.CodedOutputStream,java.lang.String,java.lang.String,java.lang.String)>($r7, $r1, $r6, $r9);

     label10:
        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Flushable,java.lang.String)>($r7, "Failed to flush session user file.");

        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Closeable,java.lang.String)>($r3, "Failed to close session user file.");

        return;

     label11:
        $r10 := @caughtexception;

        $r3 = null;

     label12:
        staticinvoke <com.crashlytics.android.core.ExceptionUtils: void writeStackTraceIfNotNull(java.lang.Throwable,java.io.OutputStream)>($r10, $r3);

        throw $r10;

     label13:
        $r11 := @caughtexception;

     label14:
        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Flushable,java.lang.String)>($r2, "Failed to flush session user file.");

        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Closeable,java.lang.String)>($r3, "Failed to close session user file.");

        throw $r11;

     label15:
        $r11 := @caughtexception;

        $r3 = null;

        goto label14;

     label16:
        $r10 := @caughtexception;

        goto label12;

        catch java.lang.Exception from label02 to label03 with label11;
        catch java.lang.Exception from label04 to label05 with label11;
        catch java.lang.Throwable from label01 to label05 with label15;
        catch java.lang.Exception from label05 to label06 with label16;
        catch java.lang.Exception from label07 to label08 with label16;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Exception from label09 to label10 with label16;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label12 to label13 with label13;
    }
    private static void writeToCosFromFile(com.crashlytics.android.core.CodedOutputStream, java.io.File)
    {
        com.crashlytics.android.core.CodedOutputStream $r0;
        java.io.File $r1;
        boolean $z0;
        b.a.a.a.t $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.io.FileInputStream $r5;
        long $l0;
        int $i1;
        java.lang.Throwable $r6;

        $r0 := @parameter0: com.crashlytics.android.core.CodedOutputStream;

        $r1 := @parameter1: java.io.File;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $r2 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tried to include a file that doesn\'t exist: ");

        $r4 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<b.a.a.a.t: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", $r4, null);

        return;

     label1:
        $r5 = new java.io.FileInputStream;

        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

     label2:
        $l0 = virtualinvoke $r1.<java.io.File: long length()>();

     label3:
        $i1 = (int) $l0;

     label4:
        staticinvoke <com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void copyToCodedOutputStream(java.io.InputStream,com.crashlytics.android.core.CodedOutputStream,int)>($r5, $r0, $i1);

     label5:
        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Closeable,java.lang.String)>($r5, "Failed to close file input stream.");

        return;

     label6:
        $r6 := @caughtexception;

        $r5 = null;

     label7:
        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Closeable,java.lang.String)>($r5, "Failed to close file input stream.");

        throw $r6;

     label8:
        $r6 := @caughtexception;

        goto label7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
    }
    void cacheKeyData(java.util.Map)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.util.Map $r1;
        com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper $r2;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$9 $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: java.util.Map;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper executorServiceWrapper>;

        $r3 = new com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$9;

        specialinvoke $r3.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$9: void <init>(com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler,java.util.Map)>(r0, $r1);

        virtualinvoke $r2.<com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper: java.util.concurrent.Future executeAsync(java.util.concurrent.Callable)>($r3);

        return;
    }
    void cacheUserData(java.lang.String, java.lang.String, java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.lang.String $r1, $r2, $r3;
        com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper $r4;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$8 $r5;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper executorServiceWrapper>;

        $r5 = new com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$8;

        specialinvoke $r5.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$8: void <init>(com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler,java.lang.String,java.lang.String,java.lang.String)>(r0, $r1, $r2, $r3);

        virtualinvoke $r4.<com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper: java.util.concurrent.Future executeAsync(java.util.concurrent.Callable)>($r5);

        return;
    }
    void cleanInvalidTempFiles()
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper $r1;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$12 $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper executorServiceWrapper>;

        $r2 = new com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$12;

        specialinvoke $r2.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$12: void <init>(com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler)>(r0);

        virtualinvoke $r1.<com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper: java.util.concurrent.Future executeAsync(java.lang.Runnable)>($r2);

        return;
    }
    void doCleanInvalidTempFiles(java.io.File[])
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.io.File[] $r1, $r7;
        int $i0, $i1, $i2, $i3;
        java.io.File $r2;
        b.a.a.a.t $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$13 $r6;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: java.io.File[];

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void deleteLegacyInvalidCacheDir()>();

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r2 = $r1[$i1];

        $r3 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found invalid session part file: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("CrashlyticsCore", $r5);

        $r5 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.lang.String getSessionIdFromSessionFile(java.io.File)>($r2);

        $r6 = new com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$13;

        specialinvoke $r6.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$13: void <init>(com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler,java.lang.String)>(r0, $r5);

        $r3 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting all part files for invalid session: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("CrashlyticsCore", $r5);

        $r7 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File[] listFilesMatching(java.io.FilenameFilter)>($r6);

        $i2 = lengthof $r7;

        $i3 = 0;

     label2:
        if $i3 >= $i2 goto label3;

        $r2 = $r7[$i3];

        $r3 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting session file: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("CrashlyticsCore", $r5);

        virtualinvoke $r2.<java.io.File: boolean delete()>();

        $i3 = $i3 + 1;

        goto label2;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        return;
    }
    void doCloseSessions()
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void doCloseSessions(boolean)>(0);

        return;
    }
    boolean finalizeSessions()
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$11 $r1;
        com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper executorServiceWrapper>;

        $r1 = new com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$11;

        specialinvoke $r1.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$11: void <init>(com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler)>(r0);

        $r3 = virtualinvoke $r2.<com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper: java.lang.Object executeSyncLoggingException(java.util.concurrent.Callable)>($r1);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }
    boolean hasOpenSession()
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.io.File[] $r1;
        int $i0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File[] listSessionBeginFiles()>();

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    boolean isHandlingException()
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        boolean $z0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.util.concurrent.atomic.AtomicBoolean isHandlingException>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        return $z0;
    }
    java.io.File[] listSessionBeginFiles()
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.io.File[] $r1;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$FileNameContainsFilter $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r2 = new com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$FileNameContainsFilter;

        specialinvoke $r2.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$FileNameContainsFilter: void <init>(java.lang.String)>("BeginSession");

        $r1 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File[] listFilesMatching(java.io.FilenameFilter)>($r2);

        return $r1;
    }
    void openSession()
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper $r1;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$10 $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper executorServiceWrapper>;

        $r2 = new com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$10;

        specialinvoke $r2.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$10: void <init>(com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler)>(r0);

        virtualinvoke $r1.<com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper: java.util.concurrent.Future executeAsync(java.util.concurrent.Callable)>($r2);

        return;
    }
    void trimSessionFiles()
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.io.FilenameFilter $r1;
        java.util.Comparator $r2;
        java.io.File $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r3 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.File getFilesDir()>();

        $r1 = <com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.io.FilenameFilter SESSION_FILE_FILTER>;

        $r2 = <com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.util.Comparator SMALLEST_FILE_NAME_FIRST>;

        staticinvoke <com.crashlytics.android.core.Utils: void capFileCount(java.io.File,java.io.FilenameFilter,int,java.util.Comparator)>($r3, $r1, 4, $r2);

        return;
    }
    public void uncaughtException(java.lang.Thread, java.lang.Throwable)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.lang.Thread $r1;
        java.lang.Throwable $r2, $r13, $r14;
        java.util.concurrent.atomic.AtomicBoolean $r3;
        b.a.a.a.t $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        com.crashlytics.android.core.DevicePowerStateListener $r7;
        java.util.Date $r8;
        com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper $r9;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$5 $r10;
        java.lang.Thread$UncaughtExceptionHandler $r11;
        java.lang.Exception $r12;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: java.lang.Thread;

        $r2 := @parameter1: java.lang.Throwable;

        entermonitor r0;

     label01:
        $r3 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.util.concurrent.atomic.AtomicBoolean isHandlingException>;

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

     label02:
        $r4 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

     label03:
        $r5 = new java.lang.StringBuilder;

     label04:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crashlytics is handling uncaught exception \"");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" from thread ");

        $r6 = virtualinvoke $r1.<java.lang.Thread: java.lang.String getName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("CrashlyticsCore", $r6);

        $r7 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.DevicePowerStateListener devicePowerStateListener>;

        virtualinvoke $r7.<com.crashlytics.android.core.DevicePowerStateListener: void dispose()>();

     label05:
        $r8 = new java.util.Date;

     label06:
        specialinvoke $r8.<java.util.Date: void <init>()>();

        $r9 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper executorServiceWrapper>;

     label07:
        $r10 = new com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$5;

     label08:
        specialinvoke $r10.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$5: void <init>(com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler,java.util.Date,java.lang.Thread,java.lang.Throwable)>(r0, $r8, $r1, $r2);

        virtualinvoke $r9.<com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper: java.lang.Object executeSyncLoggingException(java.util.concurrent.Callable)>($r10);

     label09:
        $r4 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        interfaceinvoke $r4.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("CrashlyticsCore", "Crashlytics completed exception processing. Invoking default exception handler.");

        $r11 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.lang.Thread$UncaughtExceptionHandler defaultHandler>;

        interfaceinvoke $r11.<java.lang.Thread$UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>($r1, $r2);

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.util.concurrent.atomic.AtomicBoolean isHandlingException>;

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

     label10:
        exitmonitor r0;

        return;

     label11:
        $r12 := @caughtexception;

     label12:
        $r4 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        interfaceinvoke $r4.<b.a.a.a.t: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "An error occurred in the uncaught exception handler", $r12);

     label13:
        $r4 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        interfaceinvoke $r4.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("CrashlyticsCore", "Crashlytics completed exception processing. Invoking default exception handler.");

        $r11 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.lang.Thread$UncaughtExceptionHandler defaultHandler>;

        interfaceinvoke $r11.<java.lang.Thread$UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>($r1, $r2);

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.util.concurrent.atomic.AtomicBoolean isHandlingException>;

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

     label14:
        goto label10;

     label15:
        $r13 := @caughtexception;

        exitmonitor r0;

        throw $r13;

     label16:
        $r14 := @caughtexception;

     label17:
        $r4 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        interfaceinvoke $r4.<b.a.a.a.t: void a(java.lang.String,java.lang.String)>("CrashlyticsCore", "Crashlytics completed exception processing. Invoking default exception handler.");

        $r11 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.lang.Thread$UncaughtExceptionHandler defaultHandler>;

        interfaceinvoke $r11.<java.lang.Thread$UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>($r1, $r2);

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.util.concurrent.atomic.AtomicBoolean isHandlingException>;

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        throw $r14;

     label18:
        nop;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Exception from label02 to label03 with label11;
        catch java.lang.Exception from label04 to label05 with label11;
        catch java.lang.Exception from label06 to label07 with label11;
        catch java.lang.Exception from label08 to label09 with label11;
        catch java.lang.Throwable from label02 to label09 with label16;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label17 to label18 with label15;
    }
    void writeNonFatalException(java.lang.Thread, java.lang.Throwable)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.lang.Thread $r1;
        java.lang.Throwable $r2;
        java.util.Date $r3;
        com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper $r4;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$7 $r5;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: java.lang.Thread;

        $r2 := @parameter1: java.lang.Throwable;

        $r3 = new java.util.Date;

        specialinvoke $r3.<java.util.Date: void <init>()>();

        $r4 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper executorServiceWrapper>;

        $r5 = new com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$7;

        specialinvoke $r5.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$7: void <init>(com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler,java.util.Date,java.lang.Thread,java.lang.Throwable)>(r0, $r3, $r1, $r2);

        virtualinvoke $r4.<com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper: java.util.concurrent.Future executeAsync(java.lang.Runnable)>($r5);

        return;
    }
    void writeToLog(long, java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        long $l0;
        java.lang.String $r1;
        com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper $r2;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$6 $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper executorServiceWrapper>;

        $r3 = new com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$6;

        specialinvoke $r3.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$6: void <init>(com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler,long,java.lang.String)>(r0, $l0, $r1);

        virtualinvoke $r2.<com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper: java.util.concurrent.Future executeAsync(java.util.concurrent.Callable)>($r3);

        return;
    }
