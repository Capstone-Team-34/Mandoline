com.crashlytics.android.core.QueueFileLogStore extends java.lang.Object implements com.crashlytics.android.core.FileLogStore
private b.a.a.a.a.b.ad logFile
private final int maxLogSize
private final java.io.File workingFile
    public void <init>(java.io.File, int)
    {
        com.crashlytics.android.core.QueueFileLogStore r0;
        java.io.File $r1;
        int $i0;

        r0 := @this: com.crashlytics.android.core.QueueFileLogStore;

        $r1 := @parameter0: java.io.File;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.crashlytics.android.core.QueueFileLogStore: java.io.File workingFile> = $r1;

        r0.<com.crashlytics.android.core.QueueFileLogStore: int maxLogSize> = $i0;

        return;
    }
    private void doWriteToLog(long, java.lang.String)
    {
        com.crashlytics.android.core.QueueFileLogStore r0;
        long $l0;
        java.lang.String $r1;
        b.a.a.a.a.b.ad $r2;
        int $i1, $i2;
        java.lang.StringBuilder $r3;
        java.util.Locale $r4;
        java.lang.Object[] $r5;
        java.lang.Long $r6;
        byte[] $r7;
        boolean $z0;
        java.io.IOException $r8;
        b.a.a.a.t $r9;

        r0 := @this: com.crashlytics.android.core.QueueFileLogStore;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.crashlytics.android.core.QueueFileLogStore: b.a.a.a.a.b.ad logFile>;

        if $r2 != null goto label01;

        return;

     label01:
        if $r1 != null goto label23;

        $r1 = "null";

     label02:
        $i1 = r0.<com.crashlytics.android.core.QueueFileLogStore: int maxLogSize>;

        $i1 = $i1 / 4;

     label03:
        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

     label04:
        if $i2 <= $i1 goto label08;

        $r3 = new java.lang.StringBuilder;

     label05:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...");

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

     label06:
        $i1 = $i2 - $i1;

     label07:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label08:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\r", " ");

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\n", " ");

     label09:
        $r4 = <java.util.Locale: java.util.Locale US>;

        $r5 = newarray (java.lang.Object)[2];

     label10:
        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label11:
        $r5[0] = $r6;

        $r5[1] = $r1;

     label12:
        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r4, "%d %s%n", $r5);

        $r7 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label13:
        $r2 = r0.<com.crashlytics.android.core.QueueFileLogStore: b.a.a.a.a.b.ad logFile>;

     label14:
        virtualinvoke $r2.<b.a.a.a.a.b.ad: void a(byte[])>($r7);

     label15:
        $r2 = r0.<com.crashlytics.android.core.QueueFileLogStore: b.a.a.a.a.b.ad logFile>;

     label16:
        $z0 = virtualinvoke $r2.<b.a.a.a.a.b.ad: boolean b()>();

     label17:
        if $z0 != 0 goto label24;

        $r2 = r0.<com.crashlytics.android.core.QueueFileLogStore: b.a.a.a.a.b.ad logFile>;

     label18:
        $i1 = virtualinvoke $r2.<b.a.a.a.a.b.ad: int a()>();

     label19:
        $i2 = r0.<com.crashlytics.android.core.QueueFileLogStore: int maxLogSize>;

        if $i1 <= $i2 goto label24;

        $r2 = r0.<com.crashlytics.android.core.QueueFileLogStore: b.a.a.a.a.b.ad logFile>;

     label20:
        virtualinvoke $r2.<b.a.a.a.a.b.ad: void c()>();

     label21:
        goto label15;

     label22:
        $r8 := @caughtexception;

        $r9 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        interfaceinvoke $r9.<b.a.a.a.t: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "There was a problem writing to the Crashlytics log.", $r8);

        return;

     label23:
        goto label02;

     label24:
        return;

        catch java.io.IOException from label03 to label04 with label22;
        catch java.io.IOException from label05 to label06 with label22;
        catch java.io.IOException from label07 to label08 with label22;
        catch java.io.IOException from label08 to label09 with label22;
        catch java.io.IOException from label10 to label11 with label22;
        catch java.io.IOException from label12 to label13 with label22;
        catch java.io.IOException from label14 to label15 with label22;
        catch java.io.IOException from label16 to label17 with label22;
        catch java.io.IOException from label18 to label19 with label22;
        catch java.io.IOException from label20 to label21 with label22;
    }
    private void openLogFile()
    {
        com.crashlytics.android.core.QueueFileLogStore r0;
        b.a.a.a.a.b.ad $r1;
        java.io.File $r2;
        java.io.IOException $r3;
        b.a.a.a.t $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        r0 := @this: com.crashlytics.android.core.QueueFileLogStore;

        $r1 = r0.<com.crashlytics.android.core.QueueFileLogStore: b.a.a.a.a.b.ad logFile>;

        if $r1 != null goto label4;

        $r1 = new b.a.a.a.a.b.ad;

        $r2 = r0.<com.crashlytics.android.core.QueueFileLogStore: java.io.File workingFile>;

     label1:
        specialinvoke $r1.<b.a.a.a.a.b.ad: void <init>(java.io.File)>($r2);

     label2:
        r0.<com.crashlytics.android.core.QueueFileLogStore: b.a.a.a.a.b.ad logFile> = $r1;

        return;

     label3:
        $r3 := @caughtexception;

        $r4 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not open log file: ");

        $r2 = r0.<com.crashlytics.android.core.QueueFileLogStore: java.io.File workingFile>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<b.a.a.a.t: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", $r6, $r3);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public void closeLogFile()
    {
        com.crashlytics.android.core.QueueFileLogStore r0;
        b.a.a.a.a.b.ad $r1;

        r0 := @this: com.crashlytics.android.core.QueueFileLogStore;

        $r1 = r0.<com.crashlytics.android.core.QueueFileLogStore: b.a.a.a.a.b.ad logFile>;

        staticinvoke <b.a.a.a.a.b.m: void a(java.io.Closeable,java.lang.String)>($r1, "There was a problem closing the Crashlytics log file.");

        r0.<com.crashlytics.android.core.QueueFileLogStore: b.a.a.a.a.b.ad logFile> = null;

        return;
    }
    public void deleteLogFile()
    {
        com.crashlytics.android.core.QueueFileLogStore r0;
        java.io.File $r1;

        r0 := @this: com.crashlytics.android.core.QueueFileLogStore;

        virtualinvoke r0.<com.crashlytics.android.core.QueueFileLogStore: void closeLogFile()>();

        $r1 = r0.<com.crashlytics.android.core.QueueFileLogStore: java.io.File workingFile>;

        virtualinvoke $r1.<java.io.File: boolean delete()>();

        return;
    }
    public com.crashlytics.android.core.ByteString getLogAsByteString()
    {
        com.crashlytics.android.core.QueueFileLogStore r0;
        byte[] $r1;
        java.io.File $r2;
        boolean $z0;
        b.a.a.a.a.b.ad $r3;
        int[] $r4;
        int $i0;
        com.crashlytics.android.core.QueueFileLogStore$1 $r5;
        com.crashlytics.android.core.ByteString $r6;
        java.io.IOException $r7;
        b.a.a.a.t $r8;

        r0 := @this: com.crashlytics.android.core.QueueFileLogStore;

        $r2 = r0.<com.crashlytics.android.core.QueueFileLogStore: java.io.File workingFile>;

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        specialinvoke r0.<com.crashlytics.android.core.QueueFileLogStore: void openLogFile()>();

        $r3 = r0.<com.crashlytics.android.core.QueueFileLogStore: b.a.a.a.a.b.ad logFile>;

        if $r3 == null goto label5;

        $r4 = newarray (int)[1];

        $r4[0] = 0;

        $r3 = r0.<com.crashlytics.android.core.QueueFileLogStore: b.a.a.a.a.b.ad logFile>;

        $i0 = virtualinvoke $r3.<b.a.a.a.a.b.ad: int a()>();

        $r1 = newarray (byte)[$i0];

        $r3 = r0.<com.crashlytics.android.core.QueueFileLogStore: b.a.a.a.a.b.ad logFile>;

        $r5 = new com.crashlytics.android.core.QueueFileLogStore$1;

     label2:
        specialinvoke $r5.<com.crashlytics.android.core.QueueFileLogStore$1: void <init>(com.crashlytics.android.core.QueueFileLogStore,byte[],int[])>(r0, $r1, $r4);

        virtualinvoke $r3.<b.a.a.a.a.b.ad: void a(b.a.a.a.a.b.ah)>($r5);

     label3:
        $i0 = $r4[0];

        $r6 = staticinvoke <com.crashlytics.android.core.ByteString: com.crashlytics.android.core.ByteString copyFrom(byte[],int,int)>($r1, 0, $i0);

        return $r6;

     label4:
        $r7 := @caughtexception;

        $r8 = staticinvoke <b.a.a.a.f: b.a.a.a.t h()>();

        interfaceinvoke $r8.<b.a.a.a.t: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "A problem occurred while reading the Crashlytics log file.", $r7);

        goto label3;

     label5:
        return null;

        catch java.io.IOException from label2 to label3 with label4;
    }
    public void writeToLog(long, java.lang.String)
    {
        com.crashlytics.android.core.QueueFileLogStore r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: com.crashlytics.android.core.QueueFileLogStore;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.crashlytics.android.core.QueueFileLogStore: void openLogFile()>();

        specialinvoke r0.<com.crashlytics.android.core.QueueFileLogStore: void doWriteToLog(long,java.lang.String)>($l0, $r1);

        return;
    }
