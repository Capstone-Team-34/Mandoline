com.b.a.a.a.a.a.k extends java.lang.Object
static final java.nio.charset.Charset a
static final java.nio.charset.Charset b
    static void <clinit>()
    {
        java.nio.charset.Charset $r0;

        $r0 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("US-ASCII");

        <com.b.a.a.a.a.a.k: java.nio.charset.Charset a> = $r0;

        $r0 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");

        <com.b.a.a.a.a.a.k: java.nio.charset.Charset b> = $r0;

        return;
    }
    static void a(java.io.Closeable)
    {
        java.io.Closeable $r0;
        java.lang.RuntimeException $r1;
        java.lang.Exception $r2;

        $r0 := @parameter0: java.io.Closeable;

        if $r0 == null goto label5;

     label1:
        interfaceinvoke $r0.<java.io.Closeable: void close()>();

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        throw $r1;

     label4:
        $r2 := @caughtexception;

     label5:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }
    static void a(java.io.File)
    {
        java.io.File $r0;
        java.io.File[] $r1;
        java.io.IOException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        int $i0, $i1;
        boolean $z0;

        $r0 := @parameter0: java.io.File;

        $r1 = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles()>();

        if $r1 != null goto label1;

        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not a readable directory: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        $i0 = lengthof $r1;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label5;

        $r0 = $r1[$i1];

        $z0 = virtualinvoke $r0.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label3;

        staticinvoke <com.b.a.a.a.a.a.k: void a(java.io.File)>($r0);

     label3:
        $z0 = virtualinvoke $r0.<java.io.File: boolean delete()>();

        if $z0 != 0 goto label4;

        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to delete file: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label4:
        $i1 = $i1 + 1;

        goto label2;

     label5:
        return;
    }
