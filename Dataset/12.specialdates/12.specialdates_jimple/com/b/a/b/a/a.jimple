com.b.a.b.a.a extends java.io.InputStream
private final java.io.InputStream a
private final int b
    public void <init>(java.io.InputStream, int)
    {
        com.b.a.b.a.a r0;
        java.io.InputStream $r1;
        int $i0;

        r0 := @this: com.b.a.b.a.a;

        $r1 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        r0.<com.b.a.b.a.a: java.io.InputStream a> = $r1;

        r0.<com.b.a.b.a.a: int b> = $i0;

        return;
    }
    public int available()
    {
        com.b.a.b.a.a r0;
        int i0;

        r0 := @this: com.b.a.b.a.a;

        i0 = r0.<com.b.a.b.a.a: int b>;

        return i0;
    }
    public void close()
    {
        com.b.a.b.a.a r0;
        java.io.InputStream $r1;

        r0 := @this: com.b.a.b.a.a;

        $r1 = r0.<com.b.a.b.a.a: java.io.InputStream a>;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        return;
    }
    public void mark(int)
    {
        com.b.a.b.a.a r0;
        int $i0;
        java.io.InputStream $r1;

        r0 := @this: com.b.a.b.a.a;

        $i0 := @parameter0: int;

        $r1 = r0.<com.b.a.b.a.a: java.io.InputStream a>;

        virtualinvoke $r1.<java.io.InputStream: void mark(int)>($i0);

        return;
    }
    public boolean markSupported()
    {
        com.b.a.b.a.a r0;
        boolean $z0;
        java.io.InputStream $r1;

        r0 := @this: com.b.a.b.a.a;

        $r1 = r0.<com.b.a.b.a.a: java.io.InputStream a>;

        $z0 = virtualinvoke $r1.<java.io.InputStream: boolean markSupported()>();

        return $z0;
    }
    public int read()
    {
        com.b.a.b.a.a r0;
        int $i0;
        java.io.InputStream $r1;

        r0 := @this: com.b.a.b.a.a;

        $r1 = r0.<com.b.a.b.a.a: java.io.InputStream a>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        return $i0;
    }
    public int read(byte[])
    {
        com.b.a.b.a.a r0;
        byte[] $r1;
        int $i0;
        java.io.InputStream $r2;

        r0 := @this: com.b.a.b.a.a;

        $r1 := @parameter0: byte[];

        $r2 = r0.<com.b.a.b.a.a: java.io.InputStream a>;

        $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r1);

        return $i0;
    }
    public int read(byte[], int, int)
    {
        com.b.a.b.a.a r0;
        byte[] $r1;
        int $i0, $i1;
        java.io.InputStream $r2;

        r0 := @this: com.b.a.b.a.a;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<com.b.a.b.a.a: java.io.InputStream a>;

        $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, $i1);

        return $i0;
    }
    public void reset()
    {
        com.b.a.b.a.a r0;
        java.io.InputStream $r1;

        r0 := @this: com.b.a.b.a.a;

        $r1 = r0.<com.b.a.b.a.a: java.io.InputStream a>;

        virtualinvoke $r1.<java.io.InputStream: void reset()>();

        return;
    }
    public long skip(long)
    {
        com.b.a.b.a.a r0;
        long $l0;
        java.io.InputStream $r1;

        r0 := @this: com.b.a.b.a.a;

        $l0 := @parameter0: long;

        $r1 = r0.<com.b.a.b.a.a: java.io.InputStream a>;

        $l0 = virtualinvoke $r1.<java.io.InputStream: long skip(long)>($l0);

        return $l0;
    }
