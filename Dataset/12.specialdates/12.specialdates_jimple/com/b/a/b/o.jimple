com.b.a.b.o extends java.lang.Object
final com.b.a.b.j a
private java.util.concurrent.Executor b
private java.util.concurrent.Executor c
private java.util.concurrent.Executor d
private final java.util.Map e
private final java.util.Map f
private final java.util.concurrent.atomic.AtomicBoolean g
private final java.util.concurrent.atomic.AtomicBoolean h
private final java.util.concurrent.atomic.AtomicBoolean i
private final java.lang.Object j
    void <init>(com.b.a.b.j)
    {
        com.b.a.b.o r0;
        com.b.a.b.j $r1;
        java.util.HashMap $r2;
        java.util.Map $r3;
        java.util.WeakHashMap $r4;
        java.util.concurrent.atomic.AtomicBoolean $r5;
        java.lang.Object $r6;
        java.util.concurrent.Executor $r7;

        r0 := @this: com.b.a.b.o;

        $r1 := @parameter0: com.b.a.b.j;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r3 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r2);

        r0.<com.b.a.b.o: java.util.Map e> = $r3;

        $r4 = new java.util.WeakHashMap;

        specialinvoke $r4.<java.util.WeakHashMap: void <init>()>();

        r0.<com.b.a.b.o: java.util.Map f> = $r4;

        $r5 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r5.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<com.b.a.b.o: java.util.concurrent.atomic.AtomicBoolean g> = $r5;

        $r5 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r5.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<com.b.a.b.o: java.util.concurrent.atomic.AtomicBoolean h> = $r5;

        $r5 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r5.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<com.b.a.b.o: java.util.concurrent.atomic.AtomicBoolean i> = $r5;

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        r0.<com.b.a.b.o: java.lang.Object j> = $r6;

        r0.<com.b.a.b.o: com.b.a.b.j a> = $r1;

        $r7 = $r1.<com.b.a.b.j: java.util.concurrent.Executor g>;

        r0.<com.b.a.b.o: java.util.concurrent.Executor b> = $r7;

        $r7 = $r1.<com.b.a.b.j: java.util.concurrent.Executor h>;

        r0.<com.b.a.b.o: java.util.concurrent.Executor c> = $r7;

        $r7 = staticinvoke <com.b.a.b.a: java.util.concurrent.Executor a()>();

        r0.<com.b.a.b.o: java.util.concurrent.Executor d> = $r7;

        return;
    }
    static void a(com.b.a.b.o)
    {
        com.b.a.b.o $r0;

        $r0 := @parameter0: com.b.a.b.o;

        specialinvoke $r0.<com.b.a.b.o: void g()>();

        return;
    }
    static java.util.concurrent.Executor b(com.b.a.b.o)
    {
        com.b.a.b.o $r0;
        java.util.concurrent.Executor r1;

        $r0 := @parameter0: com.b.a.b.o;

        r1 = $r0.<com.b.a.b.o: java.util.concurrent.Executor c>;

        return r1;
    }
    static java.util.concurrent.Executor c(com.b.a.b.o)
    {
        com.b.a.b.o $r0;
        java.util.concurrent.Executor r1;

        $r0 := @parameter0: com.b.a.b.o;

        r1 = $r0.<com.b.a.b.o: java.util.concurrent.Executor b>;

        return r1;
    }
    private void g()
    {
        com.b.a.b.o r0;
        com.b.a.b.j $r1;
        boolean $z0;
        java.util.concurrent.Executor $r2;
        java.util.concurrent.ExecutorService $r3;

        r0 := @this: com.b.a.b.o;

        $r1 = r0.<com.b.a.b.o: com.b.a.b.j a>;

        $z0 = $r1.<com.b.a.b.j: boolean i>;

        if $z0 != 0 goto label1;

        $r2 = r0.<com.b.a.b.o: java.util.concurrent.Executor b>;

        $r3 = (java.util.concurrent.ExecutorService) $r2;

        $z0 = interfaceinvoke $r3.<java.util.concurrent.ExecutorService: boolean isShutdown()>();

        if $z0 == 0 goto label1;

        $r2 = specialinvoke r0.<com.b.a.b.o: java.util.concurrent.Executor h()>();

        r0.<com.b.a.b.o: java.util.concurrent.Executor b> = $r2;

     label1:
        $r1 = r0.<com.b.a.b.o: com.b.a.b.j a>;

        $z0 = $r1.<com.b.a.b.j: boolean j>;

        if $z0 != 0 goto label2;

        $r2 = r0.<com.b.a.b.o: java.util.concurrent.Executor c>;

        $r3 = (java.util.concurrent.ExecutorService) $r2;

        $z0 = interfaceinvoke $r3.<java.util.concurrent.ExecutorService: boolean isShutdown()>();

        if $z0 == 0 goto label2;

        $r2 = specialinvoke r0.<com.b.a.b.o: java.util.concurrent.Executor h()>();

        r0.<com.b.a.b.o: java.util.concurrent.Executor c> = $r2;

     label2:
        return;
    }
    private java.util.concurrent.Executor h()
    {
        com.b.a.b.o r0;
        java.util.concurrent.Executor $r1;
        com.b.a.b.j $r2;
        int $i0, $i1;
        com.b.a.b.a.h $r3;

        r0 := @this: com.b.a.b.o;

        $r2 = r0.<com.b.a.b.o: com.b.a.b.j a>;

        $i0 = $r2.<com.b.a.b.j: int k>;

        $r2 = r0.<com.b.a.b.o: com.b.a.b.j a>;

        $i1 = $r2.<com.b.a.b.j: int l>;

        $r2 = r0.<com.b.a.b.o: com.b.a.b.j a>;

        $r3 = $r2.<com.b.a.b.j: com.b.a.b.a.h m>;

        $r1 = staticinvoke <com.b.a.b.a: java.util.concurrent.Executor a(int,int,com.b.a.b.a.h)>($i0, $i1, $r3);

        return $r1;
    }
    java.lang.String a(com.b.a.b.e.a)
    {
        com.b.a.b.o r0;
        com.b.a.b.e.a $r1;
        java.util.Map $r2;
        int $i0;
        java.lang.Integer $r3;
        java.lang.Object $r4;
        java.lang.String $r5;

        r0 := @this: com.b.a.b.o;

        $r1 := @parameter0: com.b.a.b.e.a;

        $r2 = r0.<com.b.a.b.o: java.util.Map e>;

        $i0 = interfaceinvoke $r1.<com.b.a.b.e.a: int f()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (java.lang.String) $r4;

        return $r5;
    }
    java.util.concurrent.locks.ReentrantLock a(java.lang.String)
    {
        com.b.a.b.o r0;
        java.lang.String $r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.util.concurrent.locks.ReentrantLock $r4;

        r0 := @this: com.b.a.b.o;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.b.a.b.o: java.util.Map f>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.util.concurrent.locks.ReentrantLock) $r3;

        if $r4 != null goto label1;

        $r4 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        $r2 = r0.<com.b.a.b.o: java.util.Map f>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

     label1:
        return $r4;
    }
    void a()
    {
        com.b.a.b.o r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @this: com.b.a.b.o;

        $r1 = r0.<com.b.a.b.o: java.util.concurrent.atomic.AtomicBoolean g>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        return;
    }
    void a(com.b.a.b.e.a, java.lang.String)
    {
        com.b.a.b.o r0;
        com.b.a.b.e.a $r1;
        java.lang.String $r2;
        java.util.Map $r3;
        int $i0;
        java.lang.Integer $r4;

        r0 := @this: com.b.a.b.o;

        $r1 := @parameter0: com.b.a.b.e.a;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.b.a.b.o: java.util.Map e>;

        $i0 = interfaceinvoke $r1.<com.b.a.b.e.a: int f()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r2);

        return;
    }
    void a(com.b.a.b.r)
    {
        com.b.a.b.o r0;
        com.b.a.b.r $r1;
        java.util.concurrent.Executor $r2;
        com.b.a.b.p $r3;

        r0 := @this: com.b.a.b.o;

        $r1 := @parameter0: com.b.a.b.r;

        $r2 = r0.<com.b.a.b.o: java.util.concurrent.Executor d>;

        $r3 = new com.b.a.b.p;

        specialinvoke $r3.<com.b.a.b.p: void <init>(com.b.a.b.o,com.b.a.b.r)>(r0, $r1);

        interfaceinvoke $r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        return;
    }
    void a(com.b.a.b.w)
    {
        com.b.a.b.o r0;
        com.b.a.b.w $r1;
        java.util.concurrent.Executor $r2;

        r0 := @this: com.b.a.b.o;

        $r1 := @parameter0: com.b.a.b.w;

        specialinvoke r0.<com.b.a.b.o: void g()>();

        $r2 = r0.<com.b.a.b.o: java.util.concurrent.Executor c>;

        interfaceinvoke $r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r1);

        return;
    }
    void a(java.lang.Runnable)
    {
        com.b.a.b.o r0;
        java.lang.Runnable $r1;
        java.util.concurrent.Executor $r2;

        r0 := @this: com.b.a.b.o;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<com.b.a.b.o: java.util.concurrent.Executor d>;

        interfaceinvoke $r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r1);

        return;
    }
    void b()
    {
        com.b.a.b.o r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        java.lang.Object $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.b.a.b.o;

        $r1 = r0.<com.b.a.b.o: java.util.concurrent.atomic.AtomicBoolean g>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        $r2 = r0.<com.b.a.b.o: java.lang.Object j>;

        entermonitor $r2;

     label1:
        $r3 = r0.<com.b.a.b.o: java.lang.Object j>;

        virtualinvoke $r3.<java.lang.Object: void notifyAll()>();

        exitmonitor $r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
    void b(com.b.a.b.e.a)
    {
        com.b.a.b.o r0;
        com.b.a.b.e.a $r1;
        java.util.Map $r2;
        int $i0;
        java.lang.Integer $r3;

        r0 := @this: com.b.a.b.o;

        $r1 := @parameter0: com.b.a.b.e.a;

        $r2 = r0.<com.b.a.b.o: java.util.Map e>;

        $i0 = interfaceinvoke $r1.<com.b.a.b.e.a: int f()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r3);

        return;
    }
    java.util.concurrent.atomic.AtomicBoolean c()
    {
        com.b.a.b.o r0;
        java.util.concurrent.atomic.AtomicBoolean r1;

        r0 := @this: com.b.a.b.o;

        r1 = r0.<com.b.a.b.o: java.util.concurrent.atomic.AtomicBoolean g>;

        return r1;
    }
    java.lang.Object d()
    {
        com.b.a.b.o r0;
        java.lang.Object r1;

        r0 := @this: com.b.a.b.o;

        r1 = r0.<com.b.a.b.o: java.lang.Object j>;

        return r1;
    }
    boolean e()
    {
        com.b.a.b.o r0;
        boolean $z0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @this: com.b.a.b.o;

        $r1 = r0.<com.b.a.b.o: java.util.concurrent.atomic.AtomicBoolean h>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        return $z0;
    }
    boolean f()
    {
        com.b.a.b.o r0;
        boolean $z0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @this: com.b.a.b.o;

        $r1 = r0.<com.b.a.b.o: java.util.concurrent.atomic.AtomicBoolean i>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        return $z0;
    }
