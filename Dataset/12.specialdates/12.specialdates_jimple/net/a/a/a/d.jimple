net.a.a.a.d extends java.lang.Object
private static java.util.Map a
    static void <clinit>()
    {
        java.util.concurrent.ConcurrentHashMap $r0;

        $r0 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <net.a.a.a.d: java.util.Map a> = $r0;

        return;
    }
    public static int a(java.lang.Class, java.lang.String)
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.Map $r2, $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Integer $r5;
        int $i0;
        java.lang.reflect.Field $r6;
        java.lang.Exception $r7;
        java.lang.StringBuilder $r8, $r10;
        java.util.concurrent.ConcurrentHashMap $r9;

        $r0 := @parameter0: java.lang.Class;

        $r1 := @parameter1: java.lang.String;

        $r2 = <net.a.a.a.d: java.util.Map a>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r0);

        if $z0 != 0 goto label2;

        $r9 = new java.util.concurrent.ConcurrentHashMap;

        $r2 = $r9;

        specialinvoke $r9.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        $r3 = <net.a.a.a.d: java.util.Map a>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r2);

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (java.lang.Integer) $r4;

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        return $i0;

     label2:
        $r2 = <net.a.a.a.d: java.util.Map a>;

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        $r2 = (java.util.Map) $r4;

        goto label1;

     label3:
        $r6 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>($r1);

        $i0 = virtualinvoke $r6.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);

     label4:
        if $i0 == 0 goto label6;

     label5:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r5);

     label6:
        return $i0;

     label7:
        $r7 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to retrieve identifier: type=");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" name=");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("JodaTimeAndroid", $r1, $r7);

        return 0;

        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }
    public static java.lang.String a(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.StringBuilder $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("joda_time_android_tzdata_");

        $r0 = staticinvoke <net.a.a.a.d: java.lang.String b(java.lang.String)>($r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }
    private static java.lang.String b(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.StringBuffer $r1;
        java.io.File $r2, $r4;
        java.util.ArrayList $r3;
        int $i0, $i1;
        java.lang.Object $r5;
        java.util.Locale $r6;

        $r0 := @parameter0: java.lang.String;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r0);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

     label1:
        $r0 = virtualinvoke $r2.<java.io.File: java.lang.String getName()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r0);

        $r4 = virtualinvoke $r2.<java.io.File: java.io.File getParentFile()>();

        $r2 = $r4;

        if $r4 != null goto label1;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i0 = $i0 + -1;

     label2:
        if $i0 < 0 goto label4;

        $i1 = virtualinvoke $r1.<java.lang.StringBuffer: int length()>();

        if $i1 <= 0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_");

     label3:
        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i0);

        $r0 = (java.lang.String) $r5;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $i0 = $i0 + -1;

        goto label2;

     label4:
        $r0 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(char,char)>(45, 95);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("+", "plus");

        $r6 = <java.util.Locale: java.util.Locale US>;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r6);

        return $r0;
    }
