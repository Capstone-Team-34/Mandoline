android.support.design.widget.a extends java.lang.Object
static final android.view.animation.Interpolator a
static final android.view.animation.Interpolator b
static final android.view.animation.Interpolator c
static final android.view.animation.Interpolator d
static final android.view.animation.Interpolator e
    static void <clinit>()
    {
        android.view.animation.LinearInterpolator $r0;
        android.support.v4.j.b.b $r1;
        android.support.v4.j.b.a $r2;
        android.support.v4.j.b.c $r3;
        android.view.animation.DecelerateInterpolator $r4;

        $r0 = new android.view.animation.LinearInterpolator;

        specialinvoke $r0.<android.view.animation.LinearInterpolator: void <init>()>();

        <android.support.design.widget.a: android.view.animation.Interpolator a> = $r0;

        $r1 = new android.support.v4.j.b.b;

        specialinvoke $r1.<android.support.v4.j.b.b: void <init>()>();

        <android.support.design.widget.a: android.view.animation.Interpolator b> = $r1;

        $r2 = new android.support.v4.j.b.a;

        specialinvoke $r2.<android.support.v4.j.b.a: void <init>()>();

        <android.support.design.widget.a: android.view.animation.Interpolator c> = $r2;

        $r3 = new android.support.v4.j.b.c;

        specialinvoke $r3.<android.support.v4.j.b.c: void <init>()>();

        <android.support.design.widget.a: android.view.animation.Interpolator d> = $r3;

        $r4 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r4.<android.view.animation.DecelerateInterpolator: void <init>()>();

        <android.support.design.widget.a: android.view.animation.Interpolator e> = $r4;

        return;
    }
    static float a(float, float, float)
    {
        float $f0, $f1, $f2;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f1 = $f1 - $f0;

        $f1 = $f1 * $f2;

        $f0 = $f1 + $f0;

        return $f0;
    }
    static int a(int, int, float)
    {
        int $i0, $i1;
        float $f0, $f1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $f0 := @parameter2: float;

        $i1 = $i1 - $i0;

        $f1 = (float) $i1;

        $f0 = $f1 * $f0;

        $i1 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $i0 = $i1 + $i0;

        return $i0;
    }
