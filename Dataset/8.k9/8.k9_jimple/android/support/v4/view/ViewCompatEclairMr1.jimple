android.support.v4.view.ViewCompatEclairMr1 extends java.lang.Object
public static final java.lang.String TAG
private static java.lang.reflect.Method sChildrenDrawingOrderMethod
    void <init>()
    {
        android.support.v4.view.ViewCompatEclairMr1 r0;

        r0 := @this: android.support.v4.view.ViewCompatEclairMr1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static boolean isOpaque(android.view.View)
    {
        android.view.View $r0;
        boolean $z0;

        $r0 := @parameter0: android.view.View;

        $z0 = virtualinvoke $r0.<android.view.View: boolean isOpaque()>();

        return $z0;
    }
    public static void setChildrenDrawingOrderEnabled(android.view.ViewGroup, boolean)
    {
        android.view.ViewGroup $r0;
        boolean $z0;
        java.lang.Class $r1, $r3;
        java.lang.reflect.Method $r2;
        java.lang.Class[] $r4;
        java.lang.Object[] $r5;
        java.lang.Boolean $r6;
        java.lang.NoSuchMethodException r7;
        java.lang.IllegalAccessException r8;
        java.lang.IllegalArgumentException r9;
        java.lang.reflect.InvocationTargetException r10;

        $r0 := @parameter0: android.view.ViewGroup;

        $z0 := @parameter1: boolean;

        $r2 = <android.support.v4.view.ViewCompatEclairMr1: java.lang.reflect.Method sChildrenDrawingOrderMethod>;

        if $r2 != null goto label04;

        $r3 = class "Landroid/view/ViewGroup;";

        $r4 = newarray (java.lang.Class)[1];

        $r1 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r4[0] = $r1;

     label01:
        $r2 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("setChildrenDrawingOrderEnabled", $r4);

     label02:
        <android.support.v4.view.ViewCompatEclairMr1: java.lang.reflect.Method sChildrenDrawingOrderMethod> = $r2;

     label03:
        $r2 = <android.support.v4.view.ViewCompatEclairMr1: java.lang.reflect.Method sChildrenDrawingOrderMethod>;

        virtualinvoke $r2.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label04:
        $r2 = <android.support.v4.view.ViewCompatEclairMr1: java.lang.reflect.Method sChildrenDrawingOrderMethod>;

        $r5 = newarray (java.lang.Object)[1];

     label05:
        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

     label06:
        $r5[0] = $r6;

     label07:
        virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r5);

     label08:
        return;

     label09:
        r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewCompat", "Unable to find childrenDrawingOrderEnabled", r7);

        goto label03;

     label10:
        r8 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewCompat", "Unable to invoke childrenDrawingOrderEnabled", r8);

        return;

     label11:
        r9 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewCompat", "Unable to invoke childrenDrawingOrderEnabled", r9);

        return;

     label12:
        r10 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewCompat", "Unable to invoke childrenDrawingOrderEnabled", r10);

        return;

        catch java.lang.NoSuchMethodException from label01 to label02 with label09;
        catch java.lang.IllegalAccessException from label05 to label06 with label10;
        catch java.lang.IllegalAccessException from label07 to label08 with label10;
        catch java.lang.IllegalArgumentException from label05 to label06 with label11;
        catch java.lang.IllegalArgumentException from label07 to label08 with label11;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label12;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label12;
    }
