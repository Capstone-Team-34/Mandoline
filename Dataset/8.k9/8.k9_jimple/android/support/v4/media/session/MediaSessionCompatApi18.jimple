android.support.v4.media.session.MediaSessionCompatApi18 extends java.lang.Object
private static final long ACTION_SEEK_TO
private static final java.lang.String TAG
private static boolean sIsMbrPendingIntentSupported
    static void <clinit>()
    {
        <android.support.v4.media.session.MediaSessionCompatApi18: boolean sIsMbrPendingIntentSupported> = 1;

        return;
    }
    void <init>()
    {
        android.support.v4.media.session.MediaSessionCompatApi18 r0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompatApi18;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static java.lang.Object createPlaybackPositionUpdateListener(android.support.v4.media.session.MediaSessionCompatApi14$Callback)
    {
        android.support.v4.media.session.MediaSessionCompatApi14$Callback $r0;
        android.support.v4.media.session.MediaSessionCompatApi18$OnPlaybackPositionUpdateListener $r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompatApi14$Callback;

        $r1 = new android.support.v4.media.session.MediaSessionCompatApi18$OnPlaybackPositionUpdateListener;

        specialinvoke $r1.<android.support.v4.media.session.MediaSessionCompatApi18$OnPlaybackPositionUpdateListener: void <init>(android.support.v4.media.session.MediaSessionCompatApi14$Callback)>($r0);

        return $r1;
    }
    static int getRccTransportControlFlagsFromActions(long)
    {
        long $l0;
        byte $b1;
        int $i2;

        $l0 := @parameter0: long;

        $i2 = staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: int getRccTransportControlFlagsFromActions(long)>($l0);

        $l0 = 256L & $l0;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $i2 = $i2 | 256;

     label1:
        return $i2;
    }
    public static void registerMediaButtonEventReceiver(android.content.Context, android.app.PendingIntent, android.content.ComponentName)
    {
        android.content.Context $r0;
        android.app.PendingIntent $r1;
        android.content.ComponentName $r2;
        java.lang.NullPointerException r3;
        java.lang.Object $r4;
        android.media.AudioManager r5;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.app.PendingIntent;

        $r2 := @parameter2: android.content.ComponentName;

        $r4 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        r5 = (android.media.AudioManager) $r4;

        $z0 = <android.support.v4.media.session.MediaSessionCompatApi18: boolean sIsMbrPendingIntentSupported>;

        if $z0 == 0 goto label2;

     label1:
        virtualinvoke r5.<android.media.AudioManager: void registerMediaButtonEventReceiver(android.app.PendingIntent)>($r1);

     label2:
        $z0 = <android.support.v4.media.session.MediaSessionCompatApi18: boolean sIsMbrPendingIntentSupported>;

        if $z0 != 0 goto label4;

        virtualinvoke r5.<android.media.AudioManager: void registerMediaButtonEventReceiver(android.content.ComponentName)>($r2);

        return;

     label3:
        r3 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaSessionCompatApi18", "Unable to register media button event receiver with PendingIntent, falling back to ComponentName.");

        <android.support.v4.media.session.MediaSessionCompatApi18: boolean sIsMbrPendingIntentSupported> = 0;

        goto label2;

     label4:
        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
    }
    public static void setOnPlaybackPositionUpdateListener(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r0, $r1;
        android.media.RemoteControlClient $r2;
        android.media.RemoteControlClient$OnPlaybackPositionUpdateListener $r3;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 = (android.media.RemoteControlClient) $r0;

        $r3 = (android.media.RemoteControlClient$OnPlaybackPositionUpdateListener) $r1;

        virtualinvoke $r2.<android.media.RemoteControlClient: void setPlaybackPositionUpdateListener(android.media.RemoteControlClient$OnPlaybackPositionUpdateListener)>($r3);

        return;
    }
    public static void setState(java.lang.Object, int, long, float, long)
    {
        float $f0, $f1;
        long $l0, $l2, $l3, l5;
        java.lang.Object $r0;
        int $i1;
        byte $b4;
        android.media.RemoteControlClient $r1;

        $r0 := @parameter0: java.lang.Object;

        $i1 := @parameter1: int;

        $l2 := @parameter2: long;

        $f0 := @parameter3: float;

        $l0 := @parameter4: long;

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        if $i1 != 3 goto label2;

        $b4 = $l2 cmp 0L;

        if $b4 <= 0 goto label2;

        l5 = 0L;

        $b4 = $l0 cmp 0L;

        if $b4 <= 0 goto label1;

        l5 = $l3 - $l0;

        $b4 = $f0 cmpl 0.0F;

        if $b4 <= 0 goto label1;

        $b4 = $f0 cmpl 1.0F;

        if $b4 == 0 goto label1;

        $f1 = (float) l5;

        $f1 = $f1 * $f0;

        l5 = (long) $f1;

     label1:
        $l2 = $l2 + l5;

     label2:
        $i1 = staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: int getRccStateFromState(int)>($i1);

        $r1 = (android.media.RemoteControlClient) $r0;

        virtualinvoke $r1.<android.media.RemoteControlClient: void setPlaybackState(int,long,float)>($i1, $l2, $f0);

        return;
    }
    public static void setTransportControlFlags(java.lang.Object, long)
    {
        long $l0;
        int $i1;
        java.lang.Object $r0;
        android.media.RemoteControlClient $r1;

        $r0 := @parameter0: java.lang.Object;

        $l0 := @parameter1: long;

        $r1 = (android.media.RemoteControlClient) $r0;

        $i1 = staticinvoke <android.support.v4.media.session.MediaSessionCompatApi18: int getRccTransportControlFlagsFromActions(long)>($l0);

        virtualinvoke $r1.<android.media.RemoteControlClient: void setTransportControlFlags(int)>($i1);

        return;
    }
    public static void unregisterMediaButtonEventReceiver(android.content.Context, android.app.PendingIntent, android.content.ComponentName)
    {
        android.content.Context $r0;
        android.app.PendingIntent $r1;
        android.content.ComponentName $r2;
        java.lang.Object $r3;
        android.media.AudioManager r4;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.app.PendingIntent;

        $r2 := @parameter2: android.content.ComponentName;

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        r4 = (android.media.AudioManager) $r3;

        $z0 = <android.support.v4.media.session.MediaSessionCompatApi18: boolean sIsMbrPendingIntentSupported>;

        if $z0 == 0 goto label1;

        virtualinvoke r4.<android.media.AudioManager: void unregisterMediaButtonEventReceiver(android.app.PendingIntent)>($r1);

        return;

     label1:
        virtualinvoke r4.<android.media.AudioManager: void unregisterMediaButtonEventReceiver(android.content.ComponentName)>($r2);

        return;
    }
