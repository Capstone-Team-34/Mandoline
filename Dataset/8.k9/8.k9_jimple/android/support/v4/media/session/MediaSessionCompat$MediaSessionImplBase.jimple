android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase extends java.lang.Object implements android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl
private final android.media.AudioManager mAudioManager
private android.support.v4.media.session.MediaSessionCompat$Callback mCallback
private final android.content.ComponentName mComponentName
private final android.content.Context mContext
private final android.os.RemoteCallbackList mControllerCallbacks
private boolean mDestroyed
private android.os.Bundle mExtras
private int mFlags
private final android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler mHandler
private boolean mIsActive
private boolean mIsMbrRegistered
private boolean mIsRccRegistered
private int mLocalStream
private final java.lang.Object mLock
private final android.app.PendingIntent mMediaButtonEventReceiver
private android.support.v4.media.MediaMetadataCompat mMetadata
private final java.lang.String mPackageName
private java.util.List mQueue
private java.lang.CharSequence mQueueTitle
private int mRatingType
private final java.lang.Object mRccObj
private android.app.PendingIntent mSessionActivity
private android.support.v4.media.session.PlaybackStateCompat mState
private final android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub mStub
private final java.lang.String mTag
private final android.support.v4.media.session.MediaSessionCompat$Token mToken
private android.support.v4.media.VolumeProviderCompat$Callback mVolumeCallback
private android.support.v4.media.VolumeProviderCompat mVolumeProvider
private int mVolumeType
    public void <init>(android.content.Context, java.lang.String, android.content.ComponentName, android.app.PendingIntent)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.content.Context $r1;
        java.lang.String $r2, $r9;
        android.content.ComponentName $r3;
        android.app.PendingIntent $r4;
        java.lang.Object $r5;
        android.os.RemoteCallbackList $r6;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1 $r7;
        java.lang.IllegalArgumentException $r8;
        android.media.AudioManager $r10;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub $r11;
        android.support.v4.media.session.MediaSessionCompat$Token $r12;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler $r13;
        android.os.Looper $r14;
        int $i0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.content.ComponentName;

        $r4 := @parameter3: android.app.PendingIntent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock> = $r5;

        $r6 = new android.os.RemoteCallbackList;

        specialinvoke $r6.<android.os.RemoteCallbackList: void <init>()>();

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks> = $r6;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mDestroyed> = 0;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive> = 0;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered> = 0;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered> = 0;

        $r7 = new android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1;

        specialinvoke $r7.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1: void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)>(r0);

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat$Callback mVolumeCallback> = $r7;

        if $r3 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("MediaButtonReceiver component may not be null.");

        throw $r8;

     label1:
        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext> = $r1;

        $r9 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.String mPackageName> = $r9;

        $r5 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        $r10 = (android.media.AudioManager) $r5;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager> = $r10;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.String mTag> = $r2;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.ComponentName mComponentName> = $r3;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.app.PendingIntent mMediaButtonEventReceiver> = $r4;

        $r11 = new android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub;

        specialinvoke $r11.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub: void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)>(r0);

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub mStub> = $r11;

        $r12 = new android.support.v4.media.session.MediaSessionCompat$Token;

        $r11 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub mStub>;

        specialinvoke $r12.<android.support.v4.media.session.MediaSessionCompat$Token: void <init>(java.lang.Object)>($r11);

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$Token mToken> = $r12;

        $r13 = new android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler;

        $r14 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        specialinvoke $r13.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler: void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,android.os.Looper)>(r0, $r14);

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler mHandler> = $r13;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mRatingType> = 0;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType> = 1;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream> = 3;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 14 goto label2;

        $r5 = staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: java.lang.Object createRemoteControlClient(android.app.PendingIntent)>($r4);

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj> = $r5;

        return;

     label2:
        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj> = null;

        return;
    }
    static boolean access$1000(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        boolean z0;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        z0 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mDestroyed>;

        return z0;
    }
    static android.os.RemoteCallbackList access$1100(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.os.RemoteCallbackList r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        return r1;
    }
    static java.lang.String access$1200(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        java.lang.String r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.String mPackageName>;

        return r1;
    }
    static java.lang.String access$1300(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        java.lang.String r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.String mTag>;

        return r1;
    }
    static java.lang.Object access$1400(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        java.lang.Object r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;

        return r1;
    }
    static android.app.PendingIntent access$1500(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.app.PendingIntent r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.app.PendingIntent mSessionActivity>;

        return r1;
    }
    static android.media.AudioManager access$1600(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.media.AudioManager r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;

        return r1;
    }
    static void access$1700(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase, int, int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        int $i0, $i1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void adjustVolume(int,int)>($i0, $i1);

        return;
    }
    static void access$1800(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase, int, int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        int $i0, $i1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void setVolumeTo(int,int)>($i0, $i1);

        return;
    }
    static android.support.v4.media.MediaMetadataCompat access$1900(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.MediaMetadataCompat r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.MediaMetadataCompat mMetadata>;

        return r1;
    }
    static android.support.v4.media.session.PlaybackStateCompat access$2000(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.session.PlaybackStateCompat $r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 = specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.PlaybackStateCompat getStateWithUpdatedPosition()>();

        return $r1;
    }
    static java.util.List access$2100(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        java.util.List r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.util.List mQueue>;

        return r1;
    }
    static java.lang.CharSequence access$2200(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        java.lang.CharSequence r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.CharSequence mQueueTitle>;

        return r1;
    }
    static android.os.Bundle access$2300(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.os.Bundle r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.Bundle mExtras>;

        return r1;
    }
    static int access$2400(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        int i0;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        i0 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mRatingType>;

        return i0;
    }
    static android.support.v4.media.session.MediaSessionCompat$Callback access$2500(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.session.MediaSessionCompat$Callback r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$Callback mCallback>;

        return r1;
    }
    static android.support.v4.media.session.PlaybackStateCompat access$2600(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.session.PlaybackStateCompat r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.PlaybackStateCompat mState>;

        return r1;
    }
    static android.support.v4.media.VolumeProviderCompat access$300(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.VolumeProviderCompat r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

        return r1;
    }
    static int access$400(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        int i0;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        i0 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType>;

        return i0;
    }
    static int access$500(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        int i0;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        i0 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;

        return i0;
    }
    static void access$600(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase, android.support.v4.media.session.ParcelableVolumeInfo)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.session.ParcelableVolumeInfo $r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter1: android.support.v4.media.session.ParcelableVolumeInfo;

        specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)>($r1);

        return;
    }
    static android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler access$800(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler mHandler>;

        return r1;
    }
    static int access$900(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        int i0;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        i0 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mFlags>;

        return i0;
    }
    private void adjustVolume(int, int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        int $i0, $i1, $i2;
        android.support.v4.media.VolumeProviderCompat $r1;
        android.media.AudioManager $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType>;

        if $i2 != 2 goto label1;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

        if $r1 == null goto label2;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

        virtualinvoke $r1.<android.support.v4.media.VolumeProviderCompat: void onAdjustVolume(int)>($i0);

        return;

     label1:
        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;

        $i2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;

        virtualinvoke $r2.<android.media.AudioManager: void adjustStreamVolume(int,int,int)>($i2, $i0, $i1);

     label2:
        return;
    }
    private android.support.v4.media.session.PlaybackStateCompat getStateWithUpdatedPosition()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.support.v4.media.session.PlaybackStateCompat$Builder r1;
        long l0, $l2, $l3, $l5;
        java.lang.Object $r2;
        android.support.v4.media.session.PlaybackStateCompat r3, r5;
        android.support.v4.media.MediaMetadataCompat $r4;
        boolean $z0;
        int $i1;
        byte $b4;
        float $f0, $f1;
        java.lang.Throwable $r6;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        l0 = -1L;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;

        entermonitor $r2;

     label01:
        r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.PlaybackStateCompat mState>;

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.MediaMetadataCompat mMetadata>;

        if $r4 == null goto label02;

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.MediaMetadataCompat mMetadata>;

        $z0 = virtualinvoke $r4.<android.support.v4.media.MediaMetadataCompat: boolean containsKey(java.lang.String)>("android.media.metadata.DURATION");

        if $z0 == 0 goto label02;

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.MediaMetadataCompat mMetadata>;

        l0 = virtualinvoke $r4.<android.support.v4.media.MediaMetadataCompat: long getLong(java.lang.String)>("android.media.metadata.DURATION");

     label02:
        exitmonitor $r2;

     label03:
        r5 = null;

        if r3 == null goto label06;

        $i1 = virtualinvoke r3.<android.support.v4.media.session.PlaybackStateCompat: int getState()>();

        if $i1 == 3 goto label04;

        $i1 = virtualinvoke r3.<android.support.v4.media.session.PlaybackStateCompat: int getState()>();

        if $i1 == 4 goto label04;

        $i1 = virtualinvoke r3.<android.support.v4.media.session.PlaybackStateCompat: int getState()>();

        if $i1 != 5 goto label06;

     label04:
        $l2 = virtualinvoke r3.<android.support.v4.media.session.PlaybackStateCompat: long getLastPositionUpdateTime()>();

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $b4 = $l2 cmp 0L;

        if $b4 <= 0 goto label06;

        $f0 = virtualinvoke r3.<android.support.v4.media.session.PlaybackStateCompat: float getPlaybackSpeed()>();

        $l2 = $l3 - $l2;

        $f1 = (float) $l2;

        $f0 = $f0 * $f1;

        $l2 = (long) $f0;

        $l5 = virtualinvoke r3.<android.support.v4.media.session.PlaybackStateCompat: long getPosition()>();

        $l2 = $l2 + $l5;

        $b4 = l0 cmp 0L;

        if $b4 < 0 goto label10;

        $b4 = $l2 cmp l0;

        if $b4 <= 0 goto label10;

        $l2 = l0;

     label05:
        r1 = new android.support.v4.media.session.PlaybackStateCompat$Builder;

        specialinvoke r1.<android.support.v4.media.session.PlaybackStateCompat$Builder: void <init>(android.support.v4.media.session.PlaybackStateCompat)>(r3);

        $i1 = virtualinvoke r3.<android.support.v4.media.session.PlaybackStateCompat: int getState()>();

        $f0 = virtualinvoke r3.<android.support.v4.media.session.PlaybackStateCompat: float getPlaybackSpeed()>();

        virtualinvoke r1.<android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setState(int,long,float,long)>($i1, $l2, $f0, $l3);

        r5 = virtualinvoke r1.<android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat build()>();

     label06:
        if r5 != null goto label11;

        return r3;

     label07:
        $r6 := @caughtexception;

     label08:
        exitmonitor $r2;

     label09:
        throw $r6;

     label10:
        $b4 = $l2 cmp 0L;

        if $b4 >= 0 goto label05;

        $l2 = 0L;

        goto label05;

     label11:
        return r5;

        catch java.lang.Throwable from label01 to label03 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }
    private void sendEvent(java.lang.String, android.os.Bundle)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        java.lang.String $r1;
        android.os.Bundle $r2;
        android.os.RemoteCallbackList $r3;
        int $i0;
        android.os.IInterface $r4;
        android.support.v4.media.session.IMediaControllerCallback r5;
        android.os.RemoteException $r6;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Bundle;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r3.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label4;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r4 = virtualinvoke $r3.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);

        r5 = (android.support.v4.media.session.IMediaControllerCallback) $r4;

     label2:
        interfaceinvoke r5.<android.support.v4.media.session.IMediaControllerCallback: void onEvent(java.lang.String,android.os.Bundle)>($r1, $r2);

     label3:
        $i0 = $i0 + -1;

        goto label1;

     label4:
        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r3.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r6 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }
    private void sendMetadata(android.support.v4.media.MediaMetadataCompat)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.support.v4.media.MediaMetadataCompat $r1;
        android.os.RemoteCallbackList $r2;
        int $i0;
        android.os.IInterface $r3;
        android.support.v4.media.session.IMediaControllerCallback r4;
        android.os.RemoteException $r5;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.support.v4.media.MediaMetadataCompat;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r2.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label4;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r3 = virtualinvoke $r2.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);

        r4 = (android.support.v4.media.session.IMediaControllerCallback) $r3;

     label2:
        interfaceinvoke r4.<android.support.v4.media.session.IMediaControllerCallback: void onMetadataChanged(android.support.v4.media.MediaMetadataCompat)>($r1);

     label3:
        $i0 = $i0 + -1;

        goto label1;

     label4:
        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r5 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }
    private void sendQueue(java.util.List)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        java.util.List r1;
        android.os.RemoteCallbackList $r2;
        int $i0;
        android.os.IInterface $r3;
        android.support.v4.media.session.IMediaControllerCallback r4;
        android.os.RemoteException $r5;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r2.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label4;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r3 = virtualinvoke $r2.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);

        r4 = (android.support.v4.media.session.IMediaControllerCallback) $r3;

     label2:
        interfaceinvoke r4.<android.support.v4.media.session.IMediaControllerCallback: void onQueueChanged(java.util.List)>(r1);

     label3:
        $i0 = $i0 + -1;

        goto label1;

     label4:
        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r5 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }
    private void sendQueueTitle(java.lang.CharSequence)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        java.lang.CharSequence $r1;
        android.os.RemoteCallbackList $r2;
        int $i0;
        android.os.IInterface $r3;
        android.support.v4.media.session.IMediaControllerCallback r4;
        android.os.RemoteException $r5;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r2.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label4;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r3 = virtualinvoke $r2.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);

        r4 = (android.support.v4.media.session.IMediaControllerCallback) $r3;

     label2:
        interfaceinvoke r4.<android.support.v4.media.session.IMediaControllerCallback: void onQueueTitleChanged(java.lang.CharSequence)>($r1);

     label3:
        $i0 = $i0 + -1;

        goto label1;

     label4:
        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r5 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }
    private void sendSessionDestroyed()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.os.RemoteCallbackList $r1;
        int $i0;
        android.os.IInterface $r2;
        android.support.v4.media.session.IMediaControllerCallback r3;
        android.os.RemoteException $r4;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r1.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label4;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r2 = virtualinvoke $r1.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);

        r3 = (android.support.v4.media.session.IMediaControllerCallback) $r2;

     label2:
        interfaceinvoke r3.<android.support.v4.media.session.IMediaControllerCallback: void onSessionDestroyed()>();

     label3:
        $i0 = $i0 + -1;

        goto label1;

     label4:
        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r1.<android.os.RemoteCallbackList: void finishBroadcast()>();

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r1.<android.os.RemoteCallbackList: void kill()>();

        return;

     label5:
        $r4 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }
    private void sendState(android.support.v4.media.session.PlaybackStateCompat)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.support.v4.media.session.PlaybackStateCompat $r1;
        android.os.RemoteCallbackList $r2;
        int $i0;
        android.os.IInterface $r3;
        android.support.v4.media.session.IMediaControllerCallback r4;
        android.os.RemoteException $r5;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.support.v4.media.session.PlaybackStateCompat;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r2.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label4;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r3 = virtualinvoke $r2.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);

        r4 = (android.support.v4.media.session.IMediaControllerCallback) $r3;

     label2:
        interfaceinvoke r4.<android.support.v4.media.session.IMediaControllerCallback: void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)>($r1);

     label3:
        $i0 = $i0 + -1;

        goto label1;

     label4:
        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r5 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }
    private void sendVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.support.v4.media.session.ParcelableVolumeInfo $r1;
        android.os.RemoteCallbackList $r2;
        int $i0;
        android.os.IInterface $r3;
        android.support.v4.media.session.IMediaControllerCallback r4;
        android.os.RemoteException $r5;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.support.v4.media.session.ParcelableVolumeInfo;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r2.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label4;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r3 = virtualinvoke $r2.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);

        r4 = (android.support.v4.media.session.IMediaControllerCallback) $r3;

     label2:
        interfaceinvoke r4.<android.support.v4.media.session.IMediaControllerCallback: void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)>($r1);

     label3:
        $i0 = $i0 + -1;

        goto label1;

     label4:
        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r5 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }
    private void setVolumeTo(int, int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        int $i0, $i1, $i2;
        android.support.v4.media.VolumeProviderCompat $r1;
        android.media.AudioManager $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType>;

        if $i2 != 2 goto label1;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

        if $r1 == null goto label2;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

        virtualinvoke $r1.<android.support.v4.media.VolumeProviderCompat: void onSetVolumeTo(int)>($i0);

        return;

     label1:
        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;

        $i2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;

        virtualinvoke $r2.<android.media.AudioManager: void setStreamVolume(int,int,int)>($i2, $i0, $i1);

     label2:
        return;
    }
    private boolean update()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        boolean $z0;
        int $i0;
        android.content.Context $r1;
        android.app.PendingIntent $r2;
        android.content.ComponentName $r3;
        java.lang.Object $r4;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $z0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive>;

        if $z0 == 0 goto label08;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 8 goto label02;

        $z0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered>;

        if $z0 != 0 goto label04;

        $i0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mFlags>;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label04;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 18 goto label03;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext>;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.app.PendingIntent mMediaButtonEventReceiver>;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.ComponentName mComponentName>;

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi18: void registerMediaButtonEventReceiver(android.content.Context,android.app.PendingIntent,android.content.ComponentName)>($r1, $r2, $r3);

     label01:
        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered> = 1;

     label02:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 14 goto label12;

        $z0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered>;

        if $z0 != 0 goto label07;

        $i0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mFlags>;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label07;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext>;

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: void registerRemoteControlClient(android.content.Context,java.lang.Object)>($r1, $r4);

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered> = 1;

        return 1;

     label03:
        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext>;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.ComponentName mComponentName>;

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi8: void registerMediaButtonEventReceiver(android.content.Context,android.content.ComponentName)>($r1, $r3);

        goto label01;

     label04:
        $z0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered>;

        if $z0 == 0 goto label02;

        $i0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mFlags>;

        $i0 = $i0 & 1;

        if $i0 != 0 goto label02;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 18 goto label06;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext>;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.app.PendingIntent mMediaButtonEventReceiver>;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.ComponentName mComponentName>;

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi18: void unregisterMediaButtonEventReceiver(android.content.Context,android.app.PendingIntent,android.content.ComponentName)>($r1, $r2, $r3);

     label05:
        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered> = 0;

        goto label02;

     label06:
        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext>;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.ComponentName mComponentName>;

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi8: void unregisterMediaButtonEventReceiver(android.content.Context,android.content.ComponentName)>($r1, $r3);

        goto label05;

     label07:
        $z0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered>;

        if $z0 == 0 goto label12;

        $i0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mFlags>;

        $i0 = $i0 & 2;

        if $i0 != 0 goto label12;

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: void setState(java.lang.Object,int)>($r4, 0);

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext>;

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: void unregisterRemoteControlClient(android.content.Context,java.lang.Object)>($r1, $r4);

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered> = 0;

        return 0;

     label08:
        $z0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered>;

        if $z0 == 0 goto label10;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 18 goto label11;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext>;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.app.PendingIntent mMediaButtonEventReceiver>;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.ComponentName mComponentName>;

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi18: void unregisterMediaButtonEventReceiver(android.content.Context,android.app.PendingIntent,android.content.ComponentName)>($r1, $r2, $r3);

     label09:
        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered> = 0;

     label10:
        $z0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered>;

        if $z0 == 0 goto label12;

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: void setState(java.lang.Object,int)>($r4, 0);

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext>;

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: void unregisterRemoteControlClient(android.content.Context,java.lang.Object)>($r1, $r4);

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered> = 0;

        return 0;

     label11:
        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext>;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.ComponentName mComponentName>;

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi8: void unregisterMediaButtonEventReceiver(android.content.Context,android.content.ComponentName)>($r1, $r3);

        goto label09;

     label12:
        return 0;
    }
    public java.lang.Object getMediaSession()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        return null;
    }
    public java.lang.Object getRemoteControlClient()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        java.lang.Object r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

        return r1;
    }
    public android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.support.v4.media.session.MediaSessionCompat$Token r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$Token mToken>;

        return r1;
    }
    public boolean isActive()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        boolean z0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        z0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive>;

        return z0;
    }
    public void release()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive> = 0;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mDestroyed> = 1;

        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean update()>();

        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendSessionDestroyed()>();

        return;
    }
    public void sendSessionEvent(java.lang.String, android.os.Bundle)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        java.lang.String $r1;
        android.os.Bundle $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Bundle;

        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendEvent(java.lang.String,android.os.Bundle)>($r1, $r2);

        return;
    }
    public void setActive(boolean)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        boolean $z0, $z1;
        android.support.v4.media.MediaMetadataCompat $r1;
        android.support.v4.media.session.PlaybackStateCompat $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $z0 := @parameter0: boolean;

        $z1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive>;

        if $z0 != $z1 goto label1;

        return;

     label1:
        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive> = $z0;

        $z0 = specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean update()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.MediaMetadataCompat mMetadata>;

        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void setMetadata(android.support.v4.media.MediaMetadataCompat)>($r1);

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.PlaybackStateCompat mState>;

        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)>($r2);

     label2:
        return;
    }
    public void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback, android.os.Handler)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.support.v4.media.session.MediaSessionCompat$Callback $r1, $r4;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$2 r2;
        android.os.Handler r3;
        int $i0;
        java.lang.Object $r5, $r6;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.support.v4.media.session.MediaSessionCompat$Callback;

        r3 := @parameter1: android.os.Handler;

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$Callback mCallback>;

        if $r1 != $r4 goto label1;

        return;

     label1:
        if $r1 == null goto label2;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 18 goto label5;

     label2:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 18 goto label3;

        $r5 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi18: void setOnPlaybackPositionUpdateListener(java.lang.Object,java.lang.Object)>($r5, null);

     label3:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label4;

        $r5 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi19: void setOnMetadataUpdateListener(java.lang.Object,java.lang.Object)>($r5, null);

     label4:
        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$Callback mCallback> = $r1;

        return;

     label5:
        if r3 != null goto label6;

        r3 = new android.os.Handler;

        specialinvoke r3.<android.os.Handler: void <init>()>();

     label6:
        r2 = new android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$2;

        specialinvoke r2.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$2: void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,android.support.v4.media.session.MediaSessionCompat$Callback)>(r0, $r1);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 18 goto label7;

        $r5 = staticinvoke <android.support.v4.media.session.MediaSessionCompatApi18: java.lang.Object createPlaybackPositionUpdateListener(android.support.v4.media.session.MediaSessionCompatApi14$Callback)>(r2);

        $r6 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi18: void setOnPlaybackPositionUpdateListener(java.lang.Object,java.lang.Object)>($r6, $r5);

     label7:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label4;

        $r5 = staticinvoke <android.support.v4.media.session.MediaSessionCompatApi19: java.lang.Object createMetadataUpdateListener(android.support.v4.media.session.MediaSessionCompatApi14$Callback)>(r2);

        $r6 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi19: void setOnMetadataUpdateListener(java.lang.Object,java.lang.Object)>($r6, $r5);

        goto label4;
    }
    public void setExtras(android.os.Bundle)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.os.Bundle $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.os.Bundle;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.Bundle mExtras> = $r1;

        return;
    }
    public void setFlags(int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        int $i0;
        java.lang.Throwable $r1;
        java.lang.Object $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;

        entermonitor $r2;

     label1:
        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mFlags> = $i0;

        exitmonitor $r2;

     label2:
        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean update()>();

        return;

     label3:
        $r1 := @caughtexception;

     label4:
        exitmonitor $r2;

     label5:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
    public void setMediaButtonReceiver(android.app.PendingIntent)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.app.PendingIntent $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.app.PendingIntent;

        return;
    }
    public void setMetadata(android.support.v4.media.MediaMetadataCompat)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.support.v4.media.MediaMetadataCompat $r1;
        android.os.Bundle $r2;
        java.lang.Object $r3;
        boolean $z0;
        java.lang.Throwable $r4;
        int $i0;
        android.support.v4.media.session.PlaybackStateCompat $r5;
        long $l1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.support.v4.media.MediaMetadataCompat;

        $r2 = null;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;

        entermonitor $r3;

     label01:
        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.MediaMetadataCompat mMetadata> = $r1;

        exitmonitor $r3;

     label02:
        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendMetadata(android.support.v4.media.MediaMetadataCompat)>($r1);

        $z0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive>;

        if $z0 != 0 goto label06;

        return;

     label03:
        $r4 := @caughtexception;

     label04:
        exitmonitor $r3;

     label05:
        throw $r4;

     label06:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label11;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

        if $r1 != null goto label09;

     label07:
        $r5 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.PlaybackStateCompat mState>;

        if $r5 != null goto label10;

        $l1 = 0L;

     label08:
        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi19: void setMetadata(java.lang.Object,android.os.Bundle,long)>($r3, $r2, $l1);

        return;

     label09:
        $r2 = virtualinvoke $r1.<android.support.v4.media.MediaMetadataCompat: android.os.Bundle getBundle()>();

        goto label07;

     label10:
        $r5 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.PlaybackStateCompat mState>;

        $l1 = virtualinvoke $r5.<android.support.v4.media.session.PlaybackStateCompat: long getActions()>();

        goto label08;

     label11:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 14 goto label14;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

        if $r1 != null goto label13;

     label12:
        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: void setMetadata(java.lang.Object,android.os.Bundle)>($r3, $r2);

        return;

     label13:
        $r2 = virtualinvoke $r1.<android.support.v4.media.MediaMetadataCompat: android.os.Bundle getBundle()>();

        goto label12;

     label14:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label04 to label05 with label03;
    }
    public void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.support.v4.media.session.PlaybackStateCompat $r1;
        java.lang.Object $r2;
        boolean $z0;
        java.lang.Throwable $r3;
        int $i0;
        long $l1, $l2;
        float $f0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.support.v4.media.session.PlaybackStateCompat;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;

        entermonitor $r2;

     label01:
        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.PlaybackStateCompat mState> = $r1;

        exitmonitor $r2;

     label02:
        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendState(android.support.v4.media.session.PlaybackStateCompat)>($r1);

        $z0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive>;

        if $z0 != 0 goto label06;

        return;

     label03:
        $r3 := @caughtexception;

     label04:
        exitmonitor $r2;

     label05:
        throw $r3;

     label06:
        if $r1 != null goto label07;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 14 goto label12;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: void setState(java.lang.Object,int)>($r2, 0);

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: void setTransportControlFlags(java.lang.Object,long)>($r2, 0L);

        return;

     label07:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 18 goto label09;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

        $i0 = virtualinvoke $r1.<android.support.v4.media.session.PlaybackStateCompat: int getState()>();

        $l1 = virtualinvoke $r1.<android.support.v4.media.session.PlaybackStateCompat: long getPosition()>();

        $f0 = virtualinvoke $r1.<android.support.v4.media.session.PlaybackStateCompat: float getPlaybackSpeed()>();

        $l2 = virtualinvoke $r1.<android.support.v4.media.session.PlaybackStateCompat: long getLastPositionUpdateTime()>();

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi18: void setState(java.lang.Object,int,long,float,long)>($r2, $i0, $l1, $f0, $l2);

     label08:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label10;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

        $l1 = virtualinvoke $r1.<android.support.v4.media.session.PlaybackStateCompat: long getActions()>();

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi19: void setTransportControlFlags(java.lang.Object,long)>($r2, $l1);

        return;

     label09:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 14 goto label08;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

        $i0 = virtualinvoke $r1.<android.support.v4.media.session.PlaybackStateCompat: int getState()>();

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: void setState(java.lang.Object,int)>($r2, $i0);

        goto label08;

     label10:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 18 goto label11;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

        $l1 = virtualinvoke $r1.<android.support.v4.media.session.PlaybackStateCompat: long getActions()>();

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi18: void setTransportControlFlags(java.lang.Object,long)>($r2, $l1);

        return;

     label11:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 14 goto label12;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

        $l1 = virtualinvoke $r1.<android.support.v4.media.session.PlaybackStateCompat: long getActions()>();

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: void setTransportControlFlags(java.lang.Object,long)>($r2, $l1);

     label12:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label04 to label05 with label03;
    }
    public void setPlaybackToLocal(int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        int $i0, $i1, $i2, $i3;
        android.support.v4.media.session.ParcelableVolumeInfo r1;
        android.support.v4.media.VolumeProviderCompat $r2;
        android.media.AudioManager $r3;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

        if $r2 == null goto label1;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

        virtualinvoke $r2.<android.support.v4.media.VolumeProviderCompat: void setCallback(android.support.v4.media.VolumeProviderCompat$Callback)>(null);

     label1:
        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType> = 1;

        r1 = new android.support.v4.media.session.ParcelableVolumeInfo;

        $i0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType>;

        $i2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;

        $i3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;

        $i3 = virtualinvoke $r3.<android.media.AudioManager: int getStreamMaxVolume(int)>($i3);

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;

        $i1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;

        $i1 = virtualinvoke $r3.<android.media.AudioManager: int getStreamVolume(int)>($i1);

        specialinvoke r1.<android.support.v4.media.session.ParcelableVolumeInfo: void <init>(int,int,int,int,int)>($i0, $i2, 2, $i3, $i1);

        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)>(r1);

        return;
    }
    public void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.support.v4.media.VolumeProviderCompat $r1, $r4;
        android.support.v4.media.session.ParcelableVolumeInfo r2;
        java.lang.IllegalArgumentException $r3;
        int $i0, $i1, $i2, $i3, $i4;
        android.support.v4.media.VolumeProviderCompat$Callback $r5;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.support.v4.media.VolumeProviderCompat;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("volumeProvider may not be null");

        throw $r3;

     label1:
        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

        if $r4 == null goto label2;

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

        virtualinvoke $r4.<android.support.v4.media.VolumeProviderCompat: void setCallback(android.support.v4.media.VolumeProviderCompat$Callback)>(null);

     label2:
        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType> = 2;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider> = $r1;

        r2 = new android.support.v4.media.session.ParcelableVolumeInfo;

        $i0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType>;

        $i1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

        $i2 = virtualinvoke $r4.<android.support.v4.media.VolumeProviderCompat: int getVolumeControl()>();

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

        $i3 = virtualinvoke $r4.<android.support.v4.media.VolumeProviderCompat: int getMaxVolume()>();

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

        $i4 = virtualinvoke $r4.<android.support.v4.media.VolumeProviderCompat: int getCurrentVolume()>();

        specialinvoke r2.<android.support.v4.media.session.ParcelableVolumeInfo: void <init>(int,int,int,int,int)>($i0, $i1, $i2, $i3, $i4);

        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)>(r2);

        $r5 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat$Callback mVolumeCallback>;

        virtualinvoke $r1.<android.support.v4.media.VolumeProviderCompat: void setCallback(android.support.v4.media.VolumeProviderCompat$Callback)>($r5);

        return;
    }
    public void setQueue(java.util.List)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        java.util.List r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 := @parameter0: java.util.List;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.util.List mQueue> = r1;

        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendQueue(java.util.List)>(r1);

        return;
    }
    public void setQueueTitle(java.lang.CharSequence)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: java.lang.CharSequence;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.CharSequence mQueueTitle> = $r1;

        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendQueueTitle(java.lang.CharSequence)>($r1);

        return;
    }
    public void setRatingType(int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        int $i0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mRatingType> = $i0;

        return;
    }
    public void setSessionActivity(android.app.PendingIntent)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.app.PendingIntent $r1;
        java.lang.Throwable $r2;
        java.lang.Object $r3;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.app.PendingIntent;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;

        entermonitor $r3;

     label1:
        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.app.PendingIntent mSessionActivity> = $r1;

        exitmonitor $r3;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r3;

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
