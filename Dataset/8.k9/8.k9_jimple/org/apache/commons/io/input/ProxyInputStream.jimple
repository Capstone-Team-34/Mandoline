org.apache.commons.io.input.ProxyInputStream extends java.io.FilterInputStream
    public void <init>(java.io.InputStream)
    {
        org.apache.commons.io.input.ProxyInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.commons.io.input.ProxyInputStream;

        $r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>($r1);

        return;
    }
    protected void afterRead(int) throws java.io.IOException
    {
        org.apache.commons.io.input.ProxyInputStream r0;
        int $i0;

        r0 := @this: org.apache.commons.io.input.ProxyInputStream;

        $i0 := @parameter0: int;

        return;
    }
    public int available() throws java.io.IOException
    {
        org.apache.commons.io.input.ProxyInputStream r0;
        java.io.IOException r1;
        int $i0;

        r0 := @this: org.apache.commons.io.input.ProxyInputStream;

     label1:
        $i0 = specialinvoke r0.<java.io.FilterInputStream: int available()>();

     label2:
        return $i0;

     label3:
        r1 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.io.input.ProxyInputStream: void handleIOException(java.io.IOException)>(r1);

        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }
    protected void beforeRead(int) throws java.io.IOException
    {
        org.apache.commons.io.input.ProxyInputStream r0;
        int $i0;

        r0 := @this: org.apache.commons.io.input.ProxyInputStream;

        $i0 := @parameter0: int;

        return;
    }
    public void close() throws java.io.IOException
    {
        org.apache.commons.io.input.ProxyInputStream r0;
        java.io.IOException r1;
        java.io.InputStream $r2;

        r0 := @this: org.apache.commons.io.input.ProxyInputStream;

        $r2 = r0.<org.apache.commons.io.input.ProxyInputStream: java.io.InputStream in>;

     label1:
        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label2:
        return;

     label3:
        r1 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.io.input.ProxyInputStream: void handleIOException(java.io.IOException)>(r1);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
    protected void handleIOException(java.io.IOException) throws java.io.IOException
    {
        org.apache.commons.io.input.ProxyInputStream r0;
        java.io.IOException $r1;

        r0 := @this: org.apache.commons.io.input.ProxyInputStream;

        $r1 := @parameter0: java.io.IOException;

        throw $r1;
    }
    public void mark(int)
    {
        org.apache.commons.io.input.ProxyInputStream r0;
        int $i0;
        java.io.InputStream $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.io.input.ProxyInputStream;

        $i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $r1 = r0.<org.apache.commons.io.input.ProxyInputStream: java.io.InputStream in>;

        virtualinvoke $r1.<java.io.InputStream: void mark(int)>($i0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public boolean markSupported()
    {
        org.apache.commons.io.input.ProxyInputStream r0;
        boolean $z0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.commons.io.input.ProxyInputStream;

        $r1 = r0.<org.apache.commons.io.input.ProxyInputStream: java.io.InputStream in>;

        $z0 = virtualinvoke $r1.<java.io.InputStream: boolean markSupported()>();

        return $z0;
    }
    public int read() throws java.io.IOException
    {
        org.apache.commons.io.input.ProxyInputStream r0;
        java.io.IOException r1;
        int $i0;
        byte $b1;
        java.io.InputStream $r2;

        r0 := @this: org.apache.commons.io.input.ProxyInputStream;

        $b1 = 1;

     label1:
        virtualinvoke r0.<org.apache.commons.io.input.ProxyInputStream: void beforeRead(int)>(1);

     label2:
        $r2 = r0.<org.apache.commons.io.input.ProxyInputStream: java.io.InputStream in>;

     label3:
        $i0 = virtualinvoke $r2.<java.io.InputStream: int read()>();

     label4:
        if $i0 == -1 goto label7;

     label5:
        virtualinvoke r0.<org.apache.commons.io.input.ProxyInputStream: void afterRead(int)>($b1);

     label6:
        return $i0;

     label7:
        $b1 = -1;

        goto label5;

     label8:
        r1 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.io.input.ProxyInputStream: void handleIOException(java.io.IOException)>(r1);

        return -1;

        catch java.io.IOException from label1 to label2 with label8;
        catch java.io.IOException from label3 to label4 with label8;
        catch java.io.IOException from label5 to label6 with label8;
    }
    public int read(byte[]) throws java.io.IOException
    {
        org.apache.commons.io.input.ProxyInputStream r0;
        byte[] $r1;
        java.io.IOException r2;
        int $i0;
        java.io.InputStream $r3;

        r0 := @this: org.apache.commons.io.input.ProxyInputStream;

        $r1 := @parameter0: byte[];

        if $r1 == null goto label5;

        $i0 = lengthof $r1;

     label1:
        virtualinvoke r0.<org.apache.commons.io.input.ProxyInputStream: void beforeRead(int)>($i0);

     label2:
        $r3 = r0.<org.apache.commons.io.input.ProxyInputStream: java.io.InputStream in>;

     label3:
        $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[])>($r1);

        virtualinvoke r0.<org.apache.commons.io.input.ProxyInputStream: void afterRead(int)>($i0);

     label4:
        return $i0;

     label5:
        $i0 = 0;

        goto label1;

     label6:
        r2 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.io.input.ProxyInputStream: void handleIOException(java.io.IOException)>(r2);

        return -1;

        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.IOException from label3 to label4 with label6;
    }
    public int read(byte[], int, int) throws java.io.IOException
    {
        org.apache.commons.io.input.ProxyInputStream r0;
        byte[] $r1;
        int $i0, $i1;
        java.io.IOException r2;
        java.io.InputStream $r3;

        r0 := @this: org.apache.commons.io.input.ProxyInputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

     label1:
        virtualinvoke r0.<org.apache.commons.io.input.ProxyInputStream: void beforeRead(int)>($i1);

     label2:
        $r3 = r0.<org.apache.commons.io.input.ProxyInputStream: java.io.InputStream in>;

     label3:
        $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, $i1);

        virtualinvoke r0.<org.apache.commons.io.input.ProxyInputStream: void afterRead(int)>($i0);

     label4:
        return $i0;

     label5:
        r2 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.io.input.ProxyInputStream: void handleIOException(java.io.IOException)>(r2);

        return -1;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }
    public void reset() throws java.io.IOException
    {
        org.apache.commons.io.input.ProxyInputStream r0;
        java.io.IOException r1;
        java.io.InputStream $r2;
        java.lang.Throwable $r3;

        r0 := @this: org.apache.commons.io.input.ProxyInputStream;

        entermonitor r0;

     label1:
        $r2 = r0.<org.apache.commons.io.input.ProxyInputStream: java.io.InputStream in>;

     label2:
        virtualinvoke $r2.<java.io.InputStream: void reset()>();

     label3:
        exitmonitor r0;

        return;

     label4:
        r1 := @caughtexception;

     label5:
        virtualinvoke r0.<org.apache.commons.io.input.ProxyInputStream: void handleIOException(java.io.IOException)>(r1);

     label6:
        goto label3;

     label7:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.io.IOException from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }
    public long skip(long) throws java.io.IOException
    {
        org.apache.commons.io.input.ProxyInputStream r0;
        long $l0;
        java.io.IOException r1;
        java.io.InputStream $r2;

        r0 := @this: org.apache.commons.io.input.ProxyInputStream;

        $l0 := @parameter0: long;

        $r2 = r0.<org.apache.commons.io.input.ProxyInputStream: java.io.InputStream in>;

     label1:
        $l0 = virtualinvoke $r2.<java.io.InputStream: long skip(long)>($l0);

     label2:
        return $l0;

     label3:
        r1 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.io.input.ProxyInputStream: void handleIOException(java.io.IOException)>(r1);

        return 0L;

        catch java.io.IOException from label1 to label2 with label3;
    }
