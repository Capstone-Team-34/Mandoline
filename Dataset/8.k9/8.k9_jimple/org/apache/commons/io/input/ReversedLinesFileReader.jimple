org.apache.commons.io.input.ReversedLinesFileReader extends java.lang.Object implements java.io.Closeable
private final int avoidNewlineSplitBufferSize
private final int blockSize
private final int byteDecrement
private org.apache.commons.io.input.ReversedLinesFileReader$FilePart currentFilePart
private final java.nio.charset.Charset encoding
private final byte[][] newLineSequences
private final java.io.RandomAccessFile randomAccessFile
private final long totalBlockCount
private final long totalByteLength
private boolean trailingNewlineOfFileSkipped
    public void <init>(java.io.File) throws java.io.IOException
    {
        org.apache.commons.io.input.ReversedLinesFileReader r0;
        java.io.File $r1;
        java.nio.charset.Charset $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.io.input.ReversedLinesFileReader;

        $r1 := @parameter0: java.io.File;

        $r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();

        $r3 = virtualinvoke $r2.<java.nio.charset.Charset: java.lang.String toString()>();

        specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.lang.String)>($r1, 4096, $r3);

        return;
    }
    public void <init>(java.io.File, int, java.lang.String) throws java.io.IOException
    {
        org.apache.commons.io.input.ReversedLinesFileReader r0;
        java.io.File $r1;
        int $i0;
        java.lang.String $r2;
        java.nio.charset.Charset $r3;

        r0 := @this: org.apache.commons.io.input.ReversedLinesFileReader;

        $r1 := @parameter0: java.io.File;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        $r3 = staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.lang.String)>($r2);

        specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.nio.charset.Charset)>($r1, $i0, $r3);

        return;
    }
    public void <init>(java.io.File, int, java.nio.charset.Charset) throws java.io.IOException
    {
        org.apache.commons.io.input.ReversedLinesFileReader r0;
        java.io.File $r1;
        int $i0, i3;
        java.nio.charset.Charset $r2, $r5, $r10;
        java.io.RandomAccessFile $r3;
        long $l1, $l2;
        org.apache.commons.io.input.ReversedLinesFileReader$FilePart $r4;
        java.nio.charset.CharsetEncoder $r6;
        float $f0;
        byte $b4;
        byte[][] $r7;
        java.lang.String $r8;
        byte[] $r9;
        java.io.UnsupportedEncodingException $r11;
        java.lang.StringBuilder $r12;

        r0 := @this: org.apache.commons.io.input.ReversedLinesFileReader;

        $r1 := @parameter0: java.io.File;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.nio.charset.Charset;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.io.input.ReversedLinesFileReader: boolean trailingNewlineOfFileSkipped> = 0;

        r0.<org.apache.commons.io.input.ReversedLinesFileReader: int blockSize> = $i0;

        r0.<org.apache.commons.io.input.ReversedLinesFileReader: java.nio.charset.Charset encoding> = $r2;

        $r3 = new java.io.RandomAccessFile;

        specialinvoke $r3.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r1, "r");

        r0.<org.apache.commons.io.input.ReversedLinesFileReader: java.io.RandomAccessFile randomAccessFile> = $r3;

        $r3 = r0.<org.apache.commons.io.input.ReversedLinesFileReader: java.io.RandomAccessFile randomAccessFile>;

        $l1 = virtualinvoke $r3.<java.io.RandomAccessFile: long length()>();

        r0.<org.apache.commons.io.input.ReversedLinesFileReader: long totalByteLength> = $l1;

        $l1 = r0.<org.apache.commons.io.input.ReversedLinesFileReader: long totalByteLength>;

        $l2 = (long) $i0;

        $l1 = $l1 % $l2;

        i3 = (int) $l1;

        if i3 <= 0 goto label3;

        $l1 = r0.<org.apache.commons.io.input.ReversedLinesFileReader: long totalByteLength>;

        $l2 = (long) $i0;

        $l1 = $l1 / $l2;

        $l1 = $l1 + 1L;

        r0.<org.apache.commons.io.input.ReversedLinesFileReader: long totalBlockCount> = $l1;

     label1:
        $r4 = new org.apache.commons.io.input.ReversedLinesFileReader$FilePart;

        $l1 = r0.<org.apache.commons.io.input.ReversedLinesFileReader: long totalBlockCount>;

        specialinvoke $r4.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: void <init>(org.apache.commons.io.input.ReversedLinesFileReader,long,int,byte[],org.apache.commons.io.input.ReversedLinesFileReader$1)>(r0, $l1, i3, null, null);

        r0.<org.apache.commons.io.input.ReversedLinesFileReader: org.apache.commons.io.input.ReversedLinesFileReader$FilePart currentFilePart> = $r4;

        $r5 = staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>($r2);

        $r6 = virtualinvoke $r5.<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>();

        $f0 = virtualinvoke $r6.<java.nio.charset.CharsetEncoder: float maxBytesPerChar()>();

        $b4 = $f0 cmpl 1.0F;

        if $b4 != 0 goto label4;

        r0.<org.apache.commons.io.input.ReversedLinesFileReader: int byteDecrement> = 1;

     label2:
        $r7 = newarray (byte[])[3];

        $r8 = "\r\n";

        $r9 = virtualinvoke $r8.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        $r7[0] = $r9;

        $r8 = "\n";

        $r9 = virtualinvoke $r8.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        $r7[1] = $r9;

        $r8 = "\r";

        $r9 = virtualinvoke $r8.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        $r7[2] = $r9;

        r0.<org.apache.commons.io.input.ReversedLinesFileReader: byte[][] newLineSequences> = $r7;

        $r7 = r0.<org.apache.commons.io.input.ReversedLinesFileReader: byte[][] newLineSequences>;

        $r9 = $r7[0];

        $i0 = lengthof $r9;

        r0.<org.apache.commons.io.input.ReversedLinesFileReader: int avoidNewlineSplitBufferSize> = $i0;

        return;

     label3:
        $l1 = r0.<org.apache.commons.io.input.ReversedLinesFileReader: long totalByteLength>;

        $l2 = (long) $i0;

        $l1 = $l1 / $l2;

        r0.<org.apache.commons.io.input.ReversedLinesFileReader: long totalBlockCount> = $l1;

        $l1 = r0.<org.apache.commons.io.input.ReversedLinesFileReader: long totalByteLength>;

        $b4 = $l1 cmp 0L;

        if $b4 <= 0 goto label1;

        i3 = $i0;

        goto label1;

     label4:
        $r10 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");

        if $r5 != $r10 goto label5;

        r0.<org.apache.commons.io.input.ReversedLinesFileReader: int byteDecrement> = 1;

        goto label2;

     label5:
        $r10 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("Shift_JIS");

        if $r5 != $r10 goto label6;

        r0.<org.apache.commons.io.input.ReversedLinesFileReader: int byteDecrement> = 1;

        goto label2;

     label6:
        $r10 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-16BE");

        if $r5 == $r10 goto label7;

        $r10 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-16LE");

        if $r5 != $r10 goto label8;

     label7:
        r0.<org.apache.commons.io.input.ReversedLinesFileReader: int byteDecrement> = 2;

        goto label2;

     label8:
        $r10 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-16");

        if $r5 != $r10 goto label9;

        $r11 = new java.io.UnsupportedEncodingException;

        specialinvoke $r11.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>("For UTF-16, you need to specify the byte order (use UTF-16BE or UTF-16LE)");

        throw $r11;

     label9:
        $r11 = new java.io.UnsupportedEncodingException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Encoding ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not supported yet (feel free to submit a patch)");

        $r8 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>($r8);

        throw $r11;
    }
    static int access$300(org.apache.commons.io.input.ReversedLinesFileReader)
    {
        org.apache.commons.io.input.ReversedLinesFileReader $r0;
        int i0;

        $r0 := @parameter0: org.apache.commons.io.input.ReversedLinesFileReader;

        i0 = $r0.<org.apache.commons.io.input.ReversedLinesFileReader: int blockSize>;

        return i0;
    }
    static java.io.RandomAccessFile access$400(org.apache.commons.io.input.ReversedLinesFileReader)
    {
        org.apache.commons.io.input.ReversedLinesFileReader $r0;
        java.io.RandomAccessFile r1;

        $r0 := @parameter0: org.apache.commons.io.input.ReversedLinesFileReader;

        r1 = $r0.<org.apache.commons.io.input.ReversedLinesFileReader: java.io.RandomAccessFile randomAccessFile>;

        return r1;
    }
    static java.nio.charset.Charset access$500(org.apache.commons.io.input.ReversedLinesFileReader)
    {
        org.apache.commons.io.input.ReversedLinesFileReader $r0;
        java.nio.charset.Charset r1;

        $r0 := @parameter0: org.apache.commons.io.input.ReversedLinesFileReader;

        r1 = $r0.<org.apache.commons.io.input.ReversedLinesFileReader: java.nio.charset.Charset encoding>;

        return r1;
    }
    static int access$600(org.apache.commons.io.input.ReversedLinesFileReader)
    {
        org.apache.commons.io.input.ReversedLinesFileReader $r0;
        int i0;

        $r0 := @parameter0: org.apache.commons.io.input.ReversedLinesFileReader;

        i0 = $r0.<org.apache.commons.io.input.ReversedLinesFileReader: int avoidNewlineSplitBufferSize>;

        return i0;
    }
    static int access$700(org.apache.commons.io.input.ReversedLinesFileReader)
    {
        org.apache.commons.io.input.ReversedLinesFileReader $r0;
        int i0;

        $r0 := @parameter0: org.apache.commons.io.input.ReversedLinesFileReader;

        i0 = $r0.<org.apache.commons.io.input.ReversedLinesFileReader: int byteDecrement>;

        return i0;
    }
    static byte[][] access$800(org.apache.commons.io.input.ReversedLinesFileReader)
    {
        org.apache.commons.io.input.ReversedLinesFileReader $r0;
        byte[][] r1;

        $r0 := @parameter0: org.apache.commons.io.input.ReversedLinesFileReader;

        r1 = $r0.<org.apache.commons.io.input.ReversedLinesFileReader: byte[][] newLineSequences>;

        return r1;
    }
    public void close() throws java.io.IOException
    {
        org.apache.commons.io.input.ReversedLinesFileReader r0;
        java.io.RandomAccessFile $r1;

        r0 := @this: org.apache.commons.io.input.ReversedLinesFileReader;

        $r1 = r0.<org.apache.commons.io.input.ReversedLinesFileReader: java.io.RandomAccessFile randomAccessFile>;

        virtualinvoke $r1.<java.io.RandomAccessFile: void close()>();

        return;
    }
    public java.lang.String readLine() throws java.io.IOException
    {
        org.apache.commons.io.input.ReversedLinesFileReader r0;
        org.apache.commons.io.input.ReversedLinesFileReader$FilePart $r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.commons.io.input.ReversedLinesFileReader;

        $r1 = r0.<org.apache.commons.io.input.ReversedLinesFileReader: org.apache.commons.io.input.ReversedLinesFileReader$FilePart currentFilePart>;

        $r2 = staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String access$100(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>($r1);

     label1:
        if $r2 != null goto label2;

        $r1 = r0.<org.apache.commons.io.input.ReversedLinesFileReader: org.apache.commons.io.input.ReversedLinesFileReader$FilePart currentFilePart>;

        $r1 = staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart access$200(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>($r1);

        r0.<org.apache.commons.io.input.ReversedLinesFileReader: org.apache.commons.io.input.ReversedLinesFileReader$FilePart currentFilePart> = $r1;

        $r1 = r0.<org.apache.commons.io.input.ReversedLinesFileReader: org.apache.commons.io.input.ReversedLinesFileReader$FilePart currentFilePart>;

        if $r1 == null goto label2;

        $r1 = r0.<org.apache.commons.io.input.ReversedLinesFileReader: org.apache.commons.io.input.ReversedLinesFileReader$FilePart currentFilePart>;

        $r2 = staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String access$100(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>($r1);

        goto label1;

     label2:
        $r3 = "";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

        $z0 = r0.<org.apache.commons.io.input.ReversedLinesFileReader: boolean trailingNewlineOfFileSkipped>;

        if $z0 != 0 goto label3;

        r0.<org.apache.commons.io.input.ReversedLinesFileReader: boolean trailingNewlineOfFileSkipped> = 1;

        $r2 = virtualinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader: java.lang.String readLine()>();

     label3:
        return $r2;
    }
