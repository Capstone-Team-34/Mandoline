org.apache.commons.io.input.NullReader extends java.io.Reader
private boolean eof
private long mark
private final boolean markSupported
private long position
private long readlimit
private final long size
private final boolean throwEofException
    public void <init>(long)
    {
        org.apache.commons.io.input.NullReader r0;
        long $l0;

        r0 := @this: org.apache.commons.io.input.NullReader;

        $l0 := @parameter0: long;

        specialinvoke r0.<org.apache.commons.io.input.NullReader: void <init>(long,boolean,boolean)>($l0, 1, 0);

        return;
    }
    public void <init>(long, boolean, boolean)
    {
        org.apache.commons.io.input.NullReader r0;
        long $l0;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.io.input.NullReader;

        $l0 := @parameter0: long;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        specialinvoke r0.<java.io.Reader: void <init>()>();

        r0.<org.apache.commons.io.input.NullReader: long mark> = -1L;

        r0.<org.apache.commons.io.input.NullReader: long size> = $l0;

        r0.<org.apache.commons.io.input.NullReader: boolean markSupported> = $z0;

        r0.<org.apache.commons.io.input.NullReader: boolean throwEofException> = $z1;

        return;
    }
    private int doEndOfFile() throws java.io.EOFException
    {
        org.apache.commons.io.input.NullReader r0;
        boolean $z0;
        java.io.EOFException $r1;

        r0 := @this: org.apache.commons.io.input.NullReader;

        r0.<org.apache.commons.io.input.NullReader: boolean eof> = 1;

        $z0 = r0.<org.apache.commons.io.input.NullReader: boolean throwEofException>;

        if $z0 == 0 goto label1;

        $r1 = new java.io.EOFException;

        specialinvoke $r1.<java.io.EOFException: void <init>()>();

        throw $r1;

     label1:
        return -1;
    }
    public void close() throws java.io.IOException
    {
        org.apache.commons.io.input.NullReader r0;

        r0 := @this: org.apache.commons.io.input.NullReader;

        r0.<org.apache.commons.io.input.NullReader: boolean eof> = 0;

        r0.<org.apache.commons.io.input.NullReader: long position> = 0L;

        r0.<org.apache.commons.io.input.NullReader: long mark> = -1L;

        return;
    }
    public long getPosition()
    {
        org.apache.commons.io.input.NullReader r0;
        long l0;

        r0 := @this: org.apache.commons.io.input.NullReader;

        l0 = r0.<org.apache.commons.io.input.NullReader: long position>;

        return l0;
    }
    public long getSize()
    {
        org.apache.commons.io.input.NullReader r0;
        long l0;

        r0 := @this: org.apache.commons.io.input.NullReader;

        l0 = r0.<org.apache.commons.io.input.NullReader: long size>;

        return l0;
    }
    public void mark(int)
    {
        org.apache.commons.io.input.NullReader r0;
        int $i0;
        boolean $z0;
        java.lang.UnsupportedOperationException $r1;
        java.lang.Throwable $r2;
        long $l1;

        r0 := @this: org.apache.commons.io.input.NullReader;

        $i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $z0 = r0.<org.apache.commons.io.input.NullReader: boolean markSupported>;

        if $z0 != 0 goto label3;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Mark not supported");

        throw $r1;

     label2:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

     label3:
        $l1 = r0.<org.apache.commons.io.input.NullReader: long position>;

        r0.<org.apache.commons.io.input.NullReader: long mark> = $l1;

        $l1 = (long) $i0;

        r0.<org.apache.commons.io.input.NullReader: long readlimit> = $l1;

     label4:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }
    public boolean markSupported()
    {
        org.apache.commons.io.input.NullReader r0;
        boolean z0;

        r0 := @this: org.apache.commons.io.input.NullReader;

        z0 = r0.<org.apache.commons.io.input.NullReader: boolean markSupported>;

        return z0;
    }
    protected int processChar()
    {
        org.apache.commons.io.input.NullReader r0;

        r0 := @this: org.apache.commons.io.input.NullReader;

        return 0;
    }
    protected void processChars(char[], int, int)
    {
        org.apache.commons.io.input.NullReader r0;
        char[] $r1;
        int $i0, $i1;

        r0 := @this: org.apache.commons.io.input.NullReader;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        return;
    }
    public int read() throws java.io.IOException
    {
        org.apache.commons.io.input.NullReader r0;
        boolean $z0;
        java.io.IOException $r1;
        long $l0, $l1;
        byte $b2;
        int $i3;

        r0 := @this: org.apache.commons.io.input.NullReader;

        $z0 = r0.<org.apache.commons.io.input.NullReader: boolean eof>;

        if $z0 == 0 goto label1;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Read after end of file");

        throw $r1;

     label1:
        $l0 = r0.<org.apache.commons.io.input.NullReader: long position>;

        $l1 = r0.<org.apache.commons.io.input.NullReader: long size>;

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label2;

        $i3 = specialinvoke r0.<org.apache.commons.io.input.NullReader: int doEndOfFile()>();

        return $i3;

     label2:
        $l0 = r0.<org.apache.commons.io.input.NullReader: long position>;

        $l0 = $l0 + 1L;

        r0.<org.apache.commons.io.input.NullReader: long position> = $l0;

        $i3 = virtualinvoke r0.<org.apache.commons.io.input.NullReader: int processChar()>();

        return $i3;
    }
    public int read(char[]) throws java.io.IOException
    {
        org.apache.commons.io.input.NullReader r0;
        char[] $r1;
        int $i0;

        r0 := @this: org.apache.commons.io.input.NullReader;

        $r1 := @parameter0: char[];

        $i0 = lengthof $r1;

        $i0 = virtualinvoke r0.<org.apache.commons.io.input.NullReader: int read(char[],int,int)>($r1, 0, $i0);

        return $i0;
    }
    public int read(char[], int, int) throws java.io.IOException
    {
        org.apache.commons.io.input.NullReader r0;
        char[] $r1;
        int $i0, $i1, i5;
        boolean $z0;
        java.io.IOException $r2;
        long $l2, $l3;
        byte $b4;

        r0 := @this: org.apache.commons.io.input.NullReader;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = r0.<org.apache.commons.io.input.NullReader: boolean eof>;

        if $z0 == 0 goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("Read after end of file");

        throw $r2;

     label1:
        $l2 = r0.<org.apache.commons.io.input.NullReader: long position>;

        $l3 = r0.<org.apache.commons.io.input.NullReader: long size>;

        $b4 = $l2 cmp $l3;

        if $b4 != 0 goto label2;

        $i0 = specialinvoke r0.<org.apache.commons.io.input.NullReader: int doEndOfFile()>();

        return $i0;

     label2:
        $l2 = r0.<org.apache.commons.io.input.NullReader: long position>;

        $l3 = (long) $i1;

        $l2 = $l2 + $l3;

        r0.<org.apache.commons.io.input.NullReader: long position> = $l2;

        i5 = $i1;

        $l2 = r0.<org.apache.commons.io.input.NullReader: long position>;

        $l3 = r0.<org.apache.commons.io.input.NullReader: long size>;

        $b4 = $l2 cmp $l3;

        if $b4 <= 0 goto label3;

        $l2 = r0.<org.apache.commons.io.input.NullReader: long position>;

        $l3 = r0.<org.apache.commons.io.input.NullReader: long size>;

        $l2 = $l2 - $l3;

        i5 = (int) $l2;

        i5 = $i1 - i5;

        $l2 = r0.<org.apache.commons.io.input.NullReader: long size>;

        r0.<org.apache.commons.io.input.NullReader: long position> = $l2;

     label3:
        virtualinvoke r0.<org.apache.commons.io.input.NullReader: void processChars(char[],int,int)>($r1, $i0, i5);

        return i5;
    }
    public void reset() throws java.io.IOException
    {
        org.apache.commons.io.input.NullReader r0;
        long $l0, $l1, $l3;
        boolean $z0;
        java.lang.UnsupportedOperationException $r1;
        java.lang.Throwable $r2;
        byte $b2;
        java.io.IOException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.commons.io.input.NullReader;

        entermonitor r0;

     label1:
        $z0 = r0.<org.apache.commons.io.input.NullReader: boolean markSupported>;

        if $z0 != 0 goto label3;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Mark not supported");

        throw $r1;

     label2:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

     label3:
        $l1 = r0.<org.apache.commons.io.input.NullReader: long mark>;

        $b2 = $l1 cmp 0L;

        if $b2 >= 0 goto label4;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("No position has been marked");

        throw $r3;

     label4:
        $l1 = r0.<org.apache.commons.io.input.NullReader: long position>;

        $l3 = r0.<org.apache.commons.io.input.NullReader: long mark>;

        $l0 = r0.<org.apache.commons.io.input.NullReader: long readlimit>;

        $l0 = $l3 + $l0;

        $b2 = $l1 cmp $l0;

        if $b2 <= 0 goto label5;

        $r3 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Marked position [");

        $l1 = r0.<org.apache.commons.io.input.NullReader: long mark>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] is no longer valid - passed the read limit [");

        $l1 = r0.<org.apache.commons.io.input.NullReader: long readlimit>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label5:
        $l1 = r0.<org.apache.commons.io.input.NullReader: long mark>;

        r0.<org.apache.commons.io.input.NullReader: long position> = $l1;

        r0.<org.apache.commons.io.input.NullReader: boolean eof> = 0;

     label6:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label6 with label2;
    }
    public long skip(long) throws java.io.IOException
    {
        org.apache.commons.io.input.NullReader r0;
        long $l0, $l2, $l3;
        int $i1;
        boolean $z0;
        java.io.IOException $r1;
        byte $b4;

        r0 := @this: org.apache.commons.io.input.NullReader;

        $l0 := @parameter0: long;

        $z0 = r0.<org.apache.commons.io.input.NullReader: boolean eof>;

        if $z0 == 0 goto label1;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Skip after end of file");

        throw $r1;

     label1:
        $l2 = r0.<org.apache.commons.io.input.NullReader: long position>;

        $l3 = r0.<org.apache.commons.io.input.NullReader: long size>;

        $b4 = $l2 cmp $l3;

        if $b4 != 0 goto label2;

        $i1 = specialinvoke r0.<org.apache.commons.io.input.NullReader: int doEndOfFile()>();

        $l0 = (long) $i1;

        return $l0;

     label2:
        $l2 = r0.<org.apache.commons.io.input.NullReader: long position>;

        $l2 = $l2 + $l0;

        r0.<org.apache.commons.io.input.NullReader: long position> = $l2;

        $l2 = r0.<org.apache.commons.io.input.NullReader: long position>;

        $l3 = r0.<org.apache.commons.io.input.NullReader: long size>;

        $b4 = $l2 cmp $l3;

        if $b4 <= 0 goto label3;

        $l2 = r0.<org.apache.commons.io.input.NullReader: long position>;

        $l3 = r0.<org.apache.commons.io.input.NullReader: long size>;

        $l2 = $l2 - $l3;

        $l0 = $l0 - $l2;

        $l2 = r0.<org.apache.commons.io.input.NullReader: long size>;

        r0.<org.apache.commons.io.input.NullReader: long position> = $l2;

     label3:
        return $l0;
    }
