org.apache.commons.io.input.Tailer extends java.lang.Object implements java.lang.Runnable
private static final int DEFAULT_BUFSIZE
private static final int DEFAULT_DELAY_MILLIS
private static final java.lang.String RAF_MODE
private final long delayMillis
private final boolean end
private final java.io.File file
private final byte[] inbuf
private final org.apache.commons.io.input.TailerListener listener
private final boolean reOpen
private volatile boolean run
    public void <init>(java.io.File, org.apache.commons.io.input.TailerListener)
    {
        org.apache.commons.io.input.Tailer r0;
        java.io.File $r1;
        org.apache.commons.io.input.TailerListener $r2;

        r0 := @this: org.apache.commons.io.input.Tailer;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: org.apache.commons.io.input.TailerListener;

        specialinvoke r0.<org.apache.commons.io.input.Tailer: void <init>(java.io.File,org.apache.commons.io.input.TailerListener,long)>($r1, $r2, 1000L);

        return;
    }
    public void <init>(java.io.File, org.apache.commons.io.input.TailerListener, long)
    {
        org.apache.commons.io.input.Tailer r0;
        java.io.File $r1;
        org.apache.commons.io.input.TailerListener $r2;
        long $l0;

        r0 := @this: org.apache.commons.io.input.Tailer;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: org.apache.commons.io.input.TailerListener;

        $l0 := @parameter2: long;

        specialinvoke r0.<org.apache.commons.io.input.Tailer: void <init>(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean)>($r1, $r2, $l0, 0);

        return;
    }
    public void <init>(java.io.File, org.apache.commons.io.input.TailerListener, long, boolean)
    {
        org.apache.commons.io.input.Tailer r0;
        java.io.File $r1;
        org.apache.commons.io.input.TailerListener $r2;
        long $l0;
        boolean $z0;

        r0 := @this: org.apache.commons.io.input.Tailer;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: org.apache.commons.io.input.TailerListener;

        $l0 := @parameter2: long;

        $z0 := @parameter3: boolean;

        specialinvoke r0.<org.apache.commons.io.input.Tailer: void <init>(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,int)>($r1, $r2, $l0, $z0, 4096);

        return;
    }
    public void <init>(java.io.File, org.apache.commons.io.input.TailerListener, long, boolean, int)
    {
        org.apache.commons.io.input.Tailer r0;
        java.io.File $r1;
        org.apache.commons.io.input.TailerListener $r2;
        long $l0;
        boolean $z0;
        int $i1;

        r0 := @this: org.apache.commons.io.input.Tailer;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: org.apache.commons.io.input.TailerListener;

        $l0 := @parameter2: long;

        $z0 := @parameter3: boolean;

        $i1 := @parameter4: int;

        specialinvoke r0.<org.apache.commons.io.input.Tailer: void <init>(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int)>($r1, $r2, $l0, $z0, 0, $i1);

        return;
    }
    public void <init>(java.io.File, org.apache.commons.io.input.TailerListener, long, boolean, boolean)
    {
        org.apache.commons.io.input.Tailer r0;
        java.io.File $r1;
        org.apache.commons.io.input.TailerListener $r2;
        long $l0;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.io.input.Tailer;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: org.apache.commons.io.input.TailerListener;

        $l0 := @parameter2: long;

        $z0 := @parameter3: boolean;

        $z1 := @parameter4: boolean;

        specialinvoke r0.<org.apache.commons.io.input.Tailer: void <init>(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int)>($r1, $r2, $l0, $z0, $z1, 4096);

        return;
    }
    public void <init>(java.io.File, org.apache.commons.io.input.TailerListener, long, boolean, boolean, int)
    {
        org.apache.commons.io.input.Tailer r0;
        java.io.File $r1;
        org.apache.commons.io.input.TailerListener $r2;
        long $l0;
        boolean $z0, $z1;
        int $i1;
        byte[] $r3;

        r0 := @this: org.apache.commons.io.input.Tailer;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: org.apache.commons.io.input.TailerListener;

        $l0 := @parameter2: long;

        $z0 := @parameter3: boolean;

        $z1 := @parameter4: boolean;

        $i1 := @parameter5: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.io.input.Tailer: boolean run> = 1;

        r0.<org.apache.commons.io.input.Tailer: java.io.File file> = $r1;

        r0.<org.apache.commons.io.input.Tailer: long delayMillis> = $l0;

        r0.<org.apache.commons.io.input.Tailer: boolean end> = $z0;

        $r3 = newarray (byte)[$i1];

        r0.<org.apache.commons.io.input.Tailer: byte[] inbuf> = $r3;

        r0.<org.apache.commons.io.input.Tailer: org.apache.commons.io.input.TailerListener listener> = $r2;

        interfaceinvoke $r2.<org.apache.commons.io.input.TailerListener: void init(org.apache.commons.io.input.Tailer)>(r0);

        r0.<org.apache.commons.io.input.Tailer: boolean reOpen> = $z1;

        return;
    }
    public static org.apache.commons.io.input.Tailer create(java.io.File, org.apache.commons.io.input.TailerListener)
    {
        java.io.File $r0;
        org.apache.commons.io.input.TailerListener $r1;
        org.apache.commons.io.input.Tailer $r2;

        $r0 := @parameter0: java.io.File;

        $r1 := @parameter1: org.apache.commons.io.input.TailerListener;

        $r2 = staticinvoke <org.apache.commons.io.input.Tailer: org.apache.commons.io.input.Tailer create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean)>($r0, $r1, 1000L, 0);

        return $r2;
    }
    public static org.apache.commons.io.input.Tailer create(java.io.File, org.apache.commons.io.input.TailerListener, long)
    {
        java.io.File $r0;
        org.apache.commons.io.input.TailerListener $r1;
        long $l0;
        org.apache.commons.io.input.Tailer $r2;

        $r0 := @parameter0: java.io.File;

        $r1 := @parameter1: org.apache.commons.io.input.TailerListener;

        $l0 := @parameter2: long;

        $r2 = staticinvoke <org.apache.commons.io.input.Tailer: org.apache.commons.io.input.Tailer create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean)>($r0, $r1, $l0, 0);

        return $r2;
    }
    public static org.apache.commons.io.input.Tailer create(java.io.File, org.apache.commons.io.input.TailerListener, long, boolean)
    {
        java.io.File $r0;
        org.apache.commons.io.input.TailerListener $r1;
        long $l0;
        boolean $z0;
        org.apache.commons.io.input.Tailer $r2;

        $r0 := @parameter0: java.io.File;

        $r1 := @parameter1: org.apache.commons.io.input.TailerListener;

        $l0 := @parameter2: long;

        $z0 := @parameter3: boolean;

        $r2 = staticinvoke <org.apache.commons.io.input.Tailer: org.apache.commons.io.input.Tailer create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,int)>($r0, $r1, $l0, $z0, 4096);

        return $r2;
    }
    public static org.apache.commons.io.input.Tailer create(java.io.File, org.apache.commons.io.input.TailerListener, long, boolean, int)
    {
        java.io.File $r0;
        org.apache.commons.io.input.TailerListener $r1;
        long $l0;
        boolean $z0;
        int $i1;
        java.lang.Thread r2;
        org.apache.commons.io.input.Tailer r3;

        $r0 := @parameter0: java.io.File;

        $r1 := @parameter1: org.apache.commons.io.input.TailerListener;

        $l0 := @parameter2: long;

        $z0 := @parameter3: boolean;

        $i1 := @parameter4: int;

        r3 = new org.apache.commons.io.input.Tailer;

        specialinvoke r3.<org.apache.commons.io.input.Tailer: void <init>(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,int)>($r0, $r1, $l0, $z0, $i1);

        r2 = new java.lang.Thread;

        specialinvoke r2.<java.lang.Thread: void <init>(java.lang.Runnable)>(r3);

        virtualinvoke r2.<java.lang.Thread: void setDaemon(boolean)>(1);

        virtualinvoke r2.<java.lang.Thread: void start()>();

        return r3;
    }
    public static org.apache.commons.io.input.Tailer create(java.io.File, org.apache.commons.io.input.TailerListener, long, boolean, boolean)
    {
        java.io.File $r0;
        org.apache.commons.io.input.TailerListener $r1;
        long $l0;
        boolean $z0, $z1;
        org.apache.commons.io.input.Tailer $r2;

        $r0 := @parameter0: java.io.File;

        $r1 := @parameter1: org.apache.commons.io.input.TailerListener;

        $l0 := @parameter2: long;

        $z0 := @parameter3: boolean;

        $z1 := @parameter4: boolean;

        $r2 = staticinvoke <org.apache.commons.io.input.Tailer: org.apache.commons.io.input.Tailer create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int)>($r0, $r1, $l0, $z0, $z1, 4096);

        return $r2;
    }
    public static org.apache.commons.io.input.Tailer create(java.io.File, org.apache.commons.io.input.TailerListener, long, boolean, boolean, int)
    {
        java.io.File $r0;
        org.apache.commons.io.input.TailerListener $r1;
        long $l0;
        boolean $z0, $z1;
        int $i1;
        java.lang.Thread r2;
        org.apache.commons.io.input.Tailer r3;

        $r0 := @parameter0: java.io.File;

        $r1 := @parameter1: org.apache.commons.io.input.TailerListener;

        $l0 := @parameter2: long;

        $z0 := @parameter3: boolean;

        $z1 := @parameter4: boolean;

        $i1 := @parameter5: int;

        r3 = new org.apache.commons.io.input.Tailer;

        specialinvoke r3.<org.apache.commons.io.input.Tailer: void <init>(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int)>($r0, $r1, $l0, $z0, $z1, $i1);

        r2 = new java.lang.Thread;

        specialinvoke r2.<java.lang.Thread: void <init>(java.lang.Runnable)>(r3);

        virtualinvoke r2.<java.lang.Thread: void setDaemon(boolean)>(1);

        virtualinvoke r2.<java.lang.Thread: void start()>();

        return r3;
    }
    private long readLines(java.io.RandomAccessFile) throws java.io.IOException
    {
        org.apache.commons.io.input.Tailer r0;
        java.io.RandomAccessFile $r1;
        byte b0;
        java.lang.StringBuilder r2;
        long $l1, l2;
        boolean z0, $z1;
        byte[] $r3;
        int $i3, i4;
        org.apache.commons.io.input.TailerListener $r4;
        java.lang.String $r5;
        char $c5;

        r0 := @this: org.apache.commons.io.input.Tailer;

        $r1 := @parameter0: java.io.RandomAccessFile;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        $l1 = virtualinvoke $r1.<java.io.RandomAccessFile: long getFilePointer()>();

        l2 = $l1;

        z0 = 0;

     label01:
        $z1 = r0.<org.apache.commons.io.input.Tailer: boolean run>;

        if $z1 == 0 goto label10;

        $r3 = r0.<org.apache.commons.io.input.Tailer: byte[] inbuf>;

        $i3 = virtualinvoke $r1.<java.io.RandomAccessFile: int read(byte[])>($r3);

        if $i3 == -1 goto label10;

        i4 = 0;

     label02:
        if i4 >= $i3 goto label09;

        $r3 = r0.<org.apache.commons.io.input.Tailer: byte[] inbuf>;

        b0 = $r3[i4];

        lookupswitch(b0)
        {
            case 10: goto label06;
            case 11: goto label03;
            case 12: goto label03;
            case 13: goto label07;
            default: goto label03;
        };

     label03:
        if z0 == 0 goto label04;

        z0 = 0;

        $r4 = r0.<org.apache.commons.io.input.Tailer: org.apache.commons.io.input.TailerListener listener>;

        $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<org.apache.commons.io.input.TailerListener: void handle(java.lang.String)>($r5);

        virtualinvoke r2.<java.lang.StringBuilder: void setLength(int)>(0);

        $l1 = (long) i4;

        $l1 = $l1 + l2;

        $l1 = $l1 + 1L;

     label04:
        $c5 = (char) b0;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

     label05:
        i4 = i4 + 1;

        goto label02;

     label06:
        z0 = 0;

        $r4 = r0.<org.apache.commons.io.input.Tailer: org.apache.commons.io.input.TailerListener listener>;

        $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<org.apache.commons.io.input.TailerListener: void handle(java.lang.String)>($r5);

        virtualinvoke r2.<java.lang.StringBuilder: void setLength(int)>(0);

        $l1 = (long) i4;

        $l1 = $l1 + l2;

        $l1 = $l1 + 1L;

        goto label05;

     label07:
        if z0 == 0 goto label08;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(13);

     label08:
        z0 = 1;

        goto label05;

     label09:
        l2 = virtualinvoke $r1.<java.io.RandomAccessFile: long getFilePointer()>();

        goto label01;

     label10:
        virtualinvoke $r1.<java.io.RandomAccessFile: void seek(long)>($l1);

        return $l1;
    }
    public long getDelay()
    {
        org.apache.commons.io.input.Tailer r0;
        long l0;

        r0 := @this: org.apache.commons.io.input.Tailer;

        l0 = r0.<org.apache.commons.io.input.Tailer: long delayMillis>;

        return l0;
    }
    public java.io.File getFile()
    {
        org.apache.commons.io.input.Tailer r0;
        java.io.File r1;

        r0 := @this: org.apache.commons.io.input.Tailer;

        r1 = r0.<org.apache.commons.io.input.Tailer: java.io.File file>;

        return r1;
    }
    public void run()
    {
        org.apache.commons.io.input.Tailer r0;
        long l0, l1, $l2;
        java.io.RandomAccessFile r1, r2;
        boolean $z0;
        java.io.File $r3;
        java.io.FileNotFoundException r4, r7, r11;
        org.apache.commons.io.input.TailerListener $r5;
        java.lang.InterruptedException $r6, $r10;
        byte $b3;
        java.lang.Exception r8;
        java.lang.Throwable $r9;

        r0 := @this: org.apache.commons.io.input.Tailer;

        l0 = 0L;

        l1 = 0L;

        r1 = null;

     label01:
        $z0 = r0.<org.apache.commons.io.input.Tailer: boolean run>;

     label02:
        if $z0 == 0 goto label21;

        if r1 != null goto label21;

     label03:
        r2 = new java.io.RandomAccessFile;

     label04:
        $r3 = r0.<org.apache.commons.io.input.Tailer: java.io.File file>;

     label05:
        specialinvoke r2.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r3, "r");

     label06:
        if r2 != null goto label14;

     label07:
        $l2 = r0.<org.apache.commons.io.input.Tailer: long delayMillis>;

     label08:
        staticinvoke <java.lang.Thread: void sleep(long)>($l2);

     label09:
        r1 = r2;

        goto label01;

     label10:
        r4 := @caughtexception;

     label11:
        $r5 = r0.<org.apache.commons.io.input.Tailer: org.apache.commons.io.input.TailerListener listener>;

        interfaceinvoke $r5.<org.apache.commons.io.input.TailerListener: void fileNotFound()>();

     label12:
        r2 = r1;

        goto label06;

     label13:
        $r6 := @caughtexception;

        r1 = r2;

        goto label01;

     label14:
        $z0 = r0.<org.apache.commons.io.input.Tailer: boolean end>;

     label15:
        if $z0 == 0 goto label20;

     label16:
        $r3 = r0.<org.apache.commons.io.input.Tailer: java.io.File file>;

        l1 = virtualinvoke $r3.<java.io.File: long length()>();

     label17:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label18:
        virtualinvoke r2.<java.io.RandomAccessFile: void seek(long)>(l1);

     label19:
        r1 = r2;

        goto label01;

     label20:
        l1 = 0L;

        goto label17;

     label21:
        $z0 = r0.<org.apache.commons.io.input.Tailer: boolean run>;

     label22:
        if $z0 == 0 goto label55;

     label23:
        $r3 = r0.<org.apache.commons.io.input.Tailer: java.io.File file>;

        $z0 = staticinvoke <org.apache.commons.io.FileUtils: boolean isFileNewer(java.io.File,long)>($r3, l0);

        $r3 = r0.<org.apache.commons.io.input.Tailer: java.io.File file>;

        $l2 = virtualinvoke $r3.<java.io.File: long length()>();

     label24:
        $b3 = $l2 cmp l1;

        if $b3 >= 0 goto label35;

     label25:
        $r5 = r0.<org.apache.commons.io.input.Tailer: org.apache.commons.io.input.TailerListener listener>;

        interfaceinvoke $r5.<org.apache.commons.io.input.TailerListener: void fileRotated()>();

     label26:
        r2 = new java.io.RandomAccessFile;

     label27:
        $r3 = r0.<org.apache.commons.io.input.Tailer: java.io.File file>;

     label28:
        specialinvoke r2.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r3, "r");

     label29:
        l1 = 0L;

     label30:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.Closeable)>(r1);

     label31:
        r1 = r2;

        goto label21;

     label32:
        r7 := @caughtexception;

        r2 = r1;

     label33:
        $r5 = r0.<org.apache.commons.io.input.Tailer: org.apache.commons.io.input.TailerListener listener>;

        interfaceinvoke $r5.<org.apache.commons.io.input.TailerListener: void fileNotFound()>();

     label34:
        r1 = r2;

        goto label21;

     label35:
        $b3 = $l2 cmp l1;

        if $b3 <= 0 goto label51;

     label36:
        l1 = specialinvoke r0.<org.apache.commons.io.input.Tailer: long readLines(java.io.RandomAccessFile)>(r1);

     label37:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label38:
        $z0 = r0.<org.apache.commons.io.input.Tailer: boolean reOpen>;

     label39:
        if $z0 == 0 goto label41;

     label40:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.Closeable)>(r1);

     label41:
        $l2 = r0.<org.apache.commons.io.input.Tailer: long delayMillis>;

     label42:
        staticinvoke <java.lang.Thread: void sleep(long)>($l2);

     label43:
        $z0 = r0.<org.apache.commons.io.input.Tailer: boolean run>;

     label44:
        if $z0 == 0 goto label65;

     label45:
        $z0 = r0.<org.apache.commons.io.input.Tailer: boolean reOpen>;

     label46:
        if $z0 == 0 goto label65;

     label47:
        r2 = new java.io.RandomAccessFile;

     label48:
        $r3 = r0.<org.apache.commons.io.input.Tailer: java.io.File file>;

        specialinvoke r2.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r3, "r");

     label49:
        virtualinvoke r2.<java.io.RandomAccessFile: void seek(long)>(l1);

     label50:
        r1 = r2;

        goto label21;

     label51:
        if $z0 == 0 goto label38;

     label52:
        virtualinvoke r1.<java.io.RandomAccessFile: void seek(long)>(0L);

        l1 = specialinvoke r0.<org.apache.commons.io.input.Tailer: long readLines(java.io.RandomAccessFile)>(r1);

     label53:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label54:
        goto label38;

     label55:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.Closeable)>(r1);

        return;

     label56:
        r8 := @caughtexception;

        r2 = r1;

     label57:
        $r5 = r0.<org.apache.commons.io.input.Tailer: org.apache.commons.io.input.TailerListener listener>;

        interfaceinvoke $r5.<org.apache.commons.io.input.TailerListener: void handle(java.lang.Exception)>(r8);

     label58:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.Closeable)>(r2);

        return;

     label59:
        $r9 := @caughtexception;

        r2 = r1;

     label60:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.Closeable)>(r2);

        throw $r9;

     label61:
        $r9 := @caughtexception;

        goto label60;

     label62:
        r8 := @caughtexception;

        goto label57;

     label63:
        $r10 := @caughtexception;

        goto label43;

     label64:
        r11 := @caughtexception;

        goto label33;

     label65:
        r2 = r1;

        goto label50;

        catch java.lang.Exception from label01 to label02 with label56;
        catch java.lang.Throwable from label01 to label02 with label59;
        catch java.io.FileNotFoundException from label05 to label06 with label10;
        catch java.lang.Exception from label04 to label06 with label56;
        catch java.lang.Throwable from label03 to label06 with label59;
        catch java.lang.InterruptedException from label08 to label09 with label13;
        catch java.lang.Exception from label07 to label09 with label62;
        catch java.lang.Throwable from label07 to label09 with label61;
        catch java.lang.Exception from label11 to label12 with label56;
        catch java.lang.Throwable from label11 to label12 with label59;
        catch java.lang.Exception from label14 to label15 with label62;
        catch java.lang.Exception from label16 to label17 with label62;
        catch java.lang.Exception from label17 to label18 with label62;
        catch java.lang.Exception from label18 to label19 with label62;
        catch java.lang.Throwable from label14 to label15 with label61;
        catch java.lang.Throwable from label16 to label17 with label61;
        catch java.lang.Throwable from label17 to label18 with label61;
        catch java.lang.Throwable from label18 to label19 with label61;
        catch java.lang.Exception from label21 to label22 with label56;
        catch java.lang.Exception from label23 to label24 with label56;
        catch java.lang.Exception from label25 to label26 with label56;
        catch java.lang.Throwable from label21 to label22 with label59;
        catch java.lang.Throwable from label23 to label24 with label59;
        catch java.lang.Throwable from label25 to label26 with label59;
        catch java.io.FileNotFoundException from label28 to label29 with label32;
        catch java.lang.Exception from label27 to label29 with label56;
        catch java.lang.Throwable from label26 to label29 with label59;
        catch java.io.FileNotFoundException from label30 to label31 with label64;
        catch java.lang.Exception from label30 to label31 with label62;
        catch java.lang.Throwable from label30 to label31 with label61;
        catch java.lang.Exception from label33 to label34 with label62;
        catch java.lang.Throwable from label33 to label34 with label61;
        catch java.lang.Exception from label36 to label37 with label56;
        catch java.lang.Exception from label37 to label38 with label56;
        catch java.lang.Exception from label38 to label39 with label56;
        catch java.lang.Exception from label40 to label41 with label56;
        catch java.lang.Throwable from label36 to label37 with label59;
        catch java.lang.Throwable from label37 to label38 with label59;
        catch java.lang.Throwable from label38 to label39 with label59;
        catch java.lang.Throwable from label40 to label41 with label59;
        catch java.lang.InterruptedException from label42 to label43 with label63;
        catch java.lang.Exception from label41 to label43 with label56;
        catch java.lang.Throwable from label41 to label43 with label59;
        catch java.lang.Exception from label43 to label44 with label56;
        catch java.lang.Exception from label45 to label46 with label56;
        catch java.lang.Exception from label48 to label49 with label56;
        catch java.lang.Throwable from label43 to label44 with label59;
        catch java.lang.Throwable from label45 to label46 with label59;
        catch java.lang.Throwable from label47 to label49 with label59;
        catch java.lang.Exception from label49 to label50 with label62;
        catch java.lang.Throwable from label49 to label50 with label61;
        catch java.lang.Exception from label52 to label53 with label56;
        catch java.lang.Exception from label53 to label54 with label56;
        catch java.lang.Throwable from label52 to label53 with label59;
        catch java.lang.Throwable from label53 to label54 with label59;
        catch java.lang.Throwable from label57 to label58 with label61;
    }
    public void stop()
    {
        org.apache.commons.io.input.Tailer r0;

        r0 := @this: org.apache.commons.io.input.Tailer;

        r0.<org.apache.commons.io.input.Tailer: boolean run> = 0;

        return;
    }
