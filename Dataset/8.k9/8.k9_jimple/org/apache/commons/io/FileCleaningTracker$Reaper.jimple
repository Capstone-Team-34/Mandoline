org.apache.commons.io.FileCleaningTracker$Reaper extends java.lang.Thread
final org.apache.commons.io.FileCleaningTracker this$0
    void <init>(org.apache.commons.io.FileCleaningTracker)
    {
        org.apache.commons.io.FileCleaningTracker$Reaper r0;
        org.apache.commons.io.FileCleaningTracker $r1;

        r0 := @this: org.apache.commons.io.FileCleaningTracker$Reaper;

        $r1 := @parameter0: org.apache.commons.io.FileCleaningTracker;

        r0.<org.apache.commons.io.FileCleaningTracker$Reaper: org.apache.commons.io.FileCleaningTracker this$0> = $r1;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>("File Reaper");

        virtualinvoke r0.<org.apache.commons.io.FileCleaningTracker$Reaper: void setPriority(int)>(10);

        virtualinvoke r0.<org.apache.commons.io.FileCleaningTracker$Reaper: void setDaemon(boolean)>(1);

        return;
    }
    public void run()
    {
        org.apache.commons.io.FileCleaningTracker$Reaper r0;
        java.lang.InterruptedException r1;
        org.apache.commons.io.FileCleaningTracker $r2;
        boolean $z0;
        java.util.Collection $r3;
        int $i0;
        java.lang.ref.ReferenceQueue $r4;
        java.lang.ref.Reference $r5;
        org.apache.commons.io.FileCleaningTracker$Tracker r6;
        java.util.List $r7;
        java.lang.String $r8;

        r0 := @this: org.apache.commons.io.FileCleaningTracker$Reaper;

     label01:
        $r2 = r0.<org.apache.commons.io.FileCleaningTracker$Reaper: org.apache.commons.io.FileCleaningTracker this$0>;

        $z0 = $r2.<org.apache.commons.io.FileCleaningTracker: boolean exitWhenFinished>;

        if $z0 == 0 goto label02;

        $r2 = r0.<org.apache.commons.io.FileCleaningTracker$Reaper: org.apache.commons.io.FileCleaningTracker this$0>;

        $r3 = $r2.<org.apache.commons.io.FileCleaningTracker: java.util.Collection trackers>;

        $i0 = interfaceinvoke $r3.<java.util.Collection: int size()>();

        if $i0 <= 0 goto label11;

     label02:
        $r2 = r0.<org.apache.commons.io.FileCleaningTracker$Reaper: org.apache.commons.io.FileCleaningTracker this$0>;

        $r4 = $r2.<org.apache.commons.io.FileCleaningTracker: java.lang.ref.ReferenceQueue q>;

     label03:
        $r5 = virtualinvoke $r4.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference remove()>();

     label04:
        r6 = (org.apache.commons.io.FileCleaningTracker$Tracker) $r5;

        $r2 = r0.<org.apache.commons.io.FileCleaningTracker$Reaper: org.apache.commons.io.FileCleaningTracker this$0>;

        $r3 = $r2.<org.apache.commons.io.FileCleaningTracker: java.util.Collection trackers>;

     label05:
        interfaceinvoke $r3.<java.util.Collection: boolean remove(java.lang.Object)>(r6);

        $z0 = virtualinvoke r6.<org.apache.commons.io.FileCleaningTracker$Tracker: boolean delete()>();

     label06:
        if $z0 != 0 goto label08;

        $r2 = r0.<org.apache.commons.io.FileCleaningTracker$Reaper: org.apache.commons.io.FileCleaningTracker this$0>;

        $r7 = $r2.<org.apache.commons.io.FileCleaningTracker: java.util.List deleteFailures>;

     label07:
        $r8 = virtualinvoke r6.<org.apache.commons.io.FileCleaningTracker$Tracker: java.lang.String getPath()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r8);

     label08:
        virtualinvoke r6.<org.apache.commons.io.FileCleaningTracker$Tracker: void clear()>();

     label09:
        goto label01;

     label10:
        r1 := @caughtexception;

        goto label01;

     label11:
        return;

        catch java.lang.InterruptedException from label03 to label04 with label10;
        catch java.lang.InterruptedException from label05 to label06 with label10;
        catch java.lang.InterruptedException from label07 to label09 with label10;
    }
