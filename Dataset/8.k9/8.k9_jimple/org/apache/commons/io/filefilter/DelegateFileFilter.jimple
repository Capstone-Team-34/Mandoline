org.apache.commons.io.filefilter.DelegateFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable
private final java.io.FileFilter fileFilter
private final java.io.FilenameFilter filenameFilter
    public void <init>(java.io.FileFilter)
    {
        org.apache.commons.io.filefilter.DelegateFileFilter r0;
        java.io.FileFilter $r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.commons.io.filefilter.DelegateFileFilter;

        $r1 := @parameter0: java.io.FileFilter;

        specialinvoke r0.<org.apache.commons.io.filefilter.AbstractFileFilter: void <init>()>();

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The FileFilter must not be null");

        throw $r2;

     label1:
        r0.<org.apache.commons.io.filefilter.DelegateFileFilter: java.io.FileFilter fileFilter> = $r1;

        r0.<org.apache.commons.io.filefilter.DelegateFileFilter: java.io.FilenameFilter filenameFilter> = null;

        return;
    }
    public void <init>(java.io.FilenameFilter)
    {
        org.apache.commons.io.filefilter.DelegateFileFilter r0;
        java.io.FilenameFilter $r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.commons.io.filefilter.DelegateFileFilter;

        $r1 := @parameter0: java.io.FilenameFilter;

        specialinvoke r0.<org.apache.commons.io.filefilter.AbstractFileFilter: void <init>()>();

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The FilenameFilter must not be null");

        throw $r2;

     label1:
        r0.<org.apache.commons.io.filefilter.DelegateFileFilter: java.io.FilenameFilter filenameFilter> = $r1;

        r0.<org.apache.commons.io.filefilter.DelegateFileFilter: java.io.FileFilter fileFilter> = null;

        return;
    }
    public boolean accept(java.io.File)
    {
        org.apache.commons.io.filefilter.DelegateFileFilter r0;
        java.io.File $r1;
        java.io.FileFilter $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.io.filefilter.DelegateFileFilter;

        $r1 := @parameter0: java.io.File;

        $r2 = r0.<org.apache.commons.io.filefilter.DelegateFileFilter: java.io.FileFilter fileFilter>;

        if $r2 == null goto label1;

        $r2 = r0.<org.apache.commons.io.filefilter.DelegateFileFilter: java.io.FileFilter fileFilter>;

        $z0 = interfaceinvoke $r2.<java.io.FileFilter: boolean accept(java.io.File)>($r1);

        return $z0;

     label1:
        $z0 = specialinvoke r0.<org.apache.commons.io.filefilter.AbstractFileFilter: boolean accept(java.io.File)>($r1);

        return $z0;
    }
    public boolean accept(java.io.File, java.lang.String)
    {
        org.apache.commons.io.filefilter.DelegateFileFilter r0;
        java.io.File $r1;
        java.lang.String $r2;
        java.io.FilenameFilter $r3;
        boolean $z0;

        r0 := @this: org.apache.commons.io.filefilter.DelegateFileFilter;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.commons.io.filefilter.DelegateFileFilter: java.io.FilenameFilter filenameFilter>;

        if $r3 == null goto label1;

        $r3 = r0.<org.apache.commons.io.filefilter.DelegateFileFilter: java.io.FilenameFilter filenameFilter>;

        $z0 = interfaceinvoke $r3.<java.io.FilenameFilter: boolean accept(java.io.File,java.lang.String)>($r1, $r2);

        return $z0;

     label1:
        $z0 = specialinvoke r0.<org.apache.commons.io.filefilter.AbstractFileFilter: boolean accept(java.io.File,java.lang.String)>($r1, $r2);

        return $z0;
    }
    public java.lang.String toString()
    {
        org.apache.commons.io.filefilter.DelegateFileFilter r0;
        java.io.FileFilter $r1;
        java.lang.String $r2, $r4;
        java.lang.StringBuilder $r3;
        java.io.FilenameFilter $r5;

        r0 := @this: org.apache.commons.io.filefilter.DelegateFileFilter;

        $r1 = r0.<org.apache.commons.io.filefilter.DelegateFileFilter: java.io.FileFilter fileFilter>;

        if $r1 == null goto label2;

        $r1 = r0.<org.apache.commons.io.filefilter.DelegateFileFilter: java.io.FileFilter fileFilter>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = specialinvoke r0.<org.apache.commons.io.filefilter.AbstractFileFilter: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label2:
        $r5 = r0.<org.apache.commons.io.filefilter.DelegateFileFilter: java.io.FilenameFilter filenameFilter>;

        $r2 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        goto label1;
    }
