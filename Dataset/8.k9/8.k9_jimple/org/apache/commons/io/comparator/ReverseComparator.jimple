org.apache.commons.io.comparator.ReverseComparator extends org.apache.commons.io.comparator.AbstractFileComparator implements java.io.Serializable
private final java.util.Comparator delegate
    public void <init>(java.util.Comparator)
    {
        org.apache.commons.io.comparator.ReverseComparator r0;
        java.util.Comparator r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.commons.io.comparator.ReverseComparator;

        r1 := @parameter0: java.util.Comparator;

        specialinvoke r0.<org.apache.commons.io.comparator.AbstractFileComparator: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Delegate comparator is missing");

        throw $r2;

     label1:
        r0.<org.apache.commons.io.comparator.ReverseComparator: java.util.Comparator delegate> = r1;

        return;
    }
    public int compare(java.io.File, java.io.File)
    {
        org.apache.commons.io.comparator.ReverseComparator r0;
        java.io.File $r1, $r2;
        int $i0;
        java.util.Comparator $r3;

        r0 := @this: org.apache.commons.io.comparator.ReverseComparator;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.io.File;

        $r3 = r0.<org.apache.commons.io.comparator.ReverseComparator: java.util.Comparator delegate>;

        $i0 = interfaceinvoke $r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r2, $r1);

        return $i0;
    }
    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.io.comparator.ReverseComparator r0;
        int $i0;
        java.lang.Object $r1, $r2;
        java.io.File $r3, $r4;

        r0 := @this: org.apache.commons.io.comparator.ReverseComparator;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (java.io.File) $r1;

        $r4 = (java.io.File) $r2;

        $i0 = virtualinvoke r0.<org.apache.commons.io.comparator.ReverseComparator: int compare(java.io.File,java.io.File)>($r3, $r4);

        return $i0;
    }
    public java.lang.String toString()
    {
        org.apache.commons.io.comparator.ReverseComparator r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        java.util.Comparator $r3;

        r0 := @this: org.apache.commons.io.comparator.ReverseComparator;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.commons.io.comparator.AbstractFileComparator: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r3 = r0.<org.apache.commons.io.comparator.ReverseComparator: java.util.Comparator delegate>;

        $r2 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
