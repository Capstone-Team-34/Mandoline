org.apache.commons.io.comparator.CompositeFileComparator extends org.apache.commons.io.comparator.AbstractFileComparator implements java.io.Serializable
private static final java.util.Comparator[] NO_COMPARATORS
private final java.util.Comparator[] delegates
    static void <clinit>()
    {
        java.util.Comparator[] $r0;

        $r0 = newarray (java.util.Comparator)[0];

        <org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] NO_COMPARATORS> = $r0;

        return;
    }
    public void <init>(java.lang.Iterable)
    {
        org.apache.commons.io.comparator.CompositeFileComparator r0;
        java.lang.Iterable r1;
        java.util.ArrayList r2;
        java.util.Comparator[] $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.util.Comparator r6;
        int $i0;
        java.lang.Object[] $r7;

        r0 := @this: org.apache.commons.io.comparator.CompositeFileComparator;

        r1 := @parameter0: java.lang.Iterable;

        specialinvoke r0.<org.apache.commons.io.comparator.AbstractFileComparator: void <init>()>();

        if r1 != null goto label1;

        $r3 = <org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] NO_COMPARATORS>;

        r0.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates> = $r3;

        return;

     label1:
        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r4 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Comparator) $r5;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r6);

        goto label2;

     label3:
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $r3 = newarray (java.util.Comparator)[$i0];

        $r7 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r3 = (java.util.Comparator[]) $r7;

        r0.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates> = $r3;

        return;
    }
    public transient void <init>(java.util.Comparator[])
    {
        org.apache.commons.io.comparator.CompositeFileComparator r0;
        java.util.Comparator[] r1, $r2;
        int $i0;

        r0 := @this: org.apache.commons.io.comparator.CompositeFileComparator;

        r1 := @parameter0: java.util.Comparator[];

        specialinvoke r0.<org.apache.commons.io.comparator.AbstractFileComparator: void <init>()>();

        if r1 != null goto label1;

        r1 = <org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] NO_COMPARATORS>;

        r0.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates> = r1;

        return;

     label1:
        $i0 = lengthof r1;

        $r2 = newarray (java.util.Comparator)[$i0];

        r0.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates> = $r2;

        $r2 = r0.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates>;

        $i0 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r2, 0, $i0);

        return;
    }
    public int compare(java.io.File, java.io.File)
    {
        org.apache.commons.io.comparator.CompositeFileComparator r0;
        java.io.File $r1, $r2;
        java.util.Comparator[] r3;
        java.util.Comparator r4;
        int i0, $i1, i2, i3;

        r0 := @this: org.apache.commons.io.comparator.CompositeFileComparator;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.io.File;

        i2 = 0;

        r3 = r0.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates>;

        i0 = lengthof r3;

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        r4 = r3[i3];

        $i1 = interfaceinvoke r4.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r1, $r2);

        i2 = $i1;

        if $i1 == 0 goto label2;

        return $i1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return i2;
    }
    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.io.comparator.CompositeFileComparator r0;
        int $i0;
        java.lang.Object $r1, $r2;
        java.io.File $r3, $r4;

        r0 := @this: org.apache.commons.io.comparator.CompositeFileComparator;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (java.io.File) $r1;

        $r4 = (java.io.File) $r2;

        $i0 = virtualinvoke r0.<org.apache.commons.io.comparator.CompositeFileComparator: int compare(java.io.File,java.io.File)>($r3, $r4);

        return $i0;
    }
    public volatile java.util.List sort(java.util.List)
    {
        org.apache.commons.io.comparator.CompositeFileComparator r0;
        java.util.List $r1;

        r0 := @this: org.apache.commons.io.comparator.CompositeFileComparator;

        $r1 := @parameter0: java.util.List;

        $r1 = specialinvoke r0.<org.apache.commons.io.comparator.AbstractFileComparator: java.util.List sort(java.util.List)>($r1);

        return $r1;
    }
    public volatile java.io.File[] sort(java.io.File[])
    {
        org.apache.commons.io.comparator.CompositeFileComparator r0;
        java.io.File[] $r1;

        r0 := @this: org.apache.commons.io.comparator.CompositeFileComparator;

        $r1 := @parameter0: java.io.File[];

        $r1 = specialinvoke r0.<org.apache.commons.io.comparator.AbstractFileComparator: java.io.File[] sort(java.io.File[])>($r1);

        return $r1;
    }
    public java.lang.String toString()
    {
        org.apache.commons.io.comparator.CompositeFileComparator r0;
        java.lang.StringBuilder r1;
        java.lang.String $r2;
        int i0, $i1;
        java.util.Comparator[] $r3;
        java.util.Comparator $r4;

        r0 := @this: org.apache.commons.io.comparator.CompositeFileComparator;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.commons.io.comparator.AbstractFileComparator: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        i0 = 0;

     label1:
        $r3 = r0.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates>;

        $i1 = lengthof $r3;

        if i0 >= $i1 goto label3;

        if i0 <= 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label2:
        $r3 = r0.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates>;

        $r4 = $r3[i0];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        i0 = i0 + 1;

        goto label1;

     label3:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
