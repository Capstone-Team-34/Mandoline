org.apache.commons.io.output.ProxyWriter extends java.io.FilterWriter
    public void <init>(java.io.Writer)
    {
        org.apache.commons.io.output.ProxyWriter r0;
        java.io.Writer $r1;

        r0 := @this: org.apache.commons.io.output.ProxyWriter;

        $r1 := @parameter0: java.io.Writer;

        specialinvoke r0.<java.io.FilterWriter: void <init>(java.io.Writer)>($r1);

        return;
    }
    protected void afterWrite(int) throws java.io.IOException
    {
        org.apache.commons.io.output.ProxyWriter r0;
        int $i0;

        r0 := @this: org.apache.commons.io.output.ProxyWriter;

        $i0 := @parameter0: int;

        return;
    }
    public java.io.Writer append(char) throws java.io.IOException
    {
        org.apache.commons.io.output.ProxyWriter r0;
        char $c0;
        java.io.IOException r1;
        java.io.Writer $r2;

        r0 := @this: org.apache.commons.io.output.ProxyWriter;

        $c0 := @parameter0: char;

     label1:
        virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void beforeWrite(int)>(1);

     label2:
        $r2 = r0.<org.apache.commons.io.output.ProxyWriter: java.io.Writer out>;

     label3:
        virtualinvoke $r2.<java.io.Writer: java.io.Writer append(char)>($c0);

        virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void afterWrite(int)>(1);

     label4:
        return r0;

     label5:
        r1 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>(r1);

        return r0;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }
    public java.io.Writer append(java.lang.CharSequence) throws java.io.IOException
    {
        org.apache.commons.io.output.ProxyWriter r0;
        java.lang.CharSequence $r1;
        java.io.IOException r2;
        java.io.Writer $r3;
        int $i0;

        r0 := @this: org.apache.commons.io.output.ProxyWriter;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 = 0;

        if $r1 == null goto label2;

     label1:
        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

     label2:
        virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void beforeWrite(int)>($i0);

     label3:
        $r3 = r0.<org.apache.commons.io.output.ProxyWriter: java.io.Writer out>;

     label4:
        virtualinvoke $r3.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>($r1);

        virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void afterWrite(int)>($i0);

     label5:
        return r0;

     label6:
        r2 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>(r2);

        return r0;

        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.IOException from label2 to label3 with label6;
        catch java.io.IOException from label4 to label5 with label6;
    }
    public java.io.Writer append(java.lang.CharSequence, int, int) throws java.io.IOException
    {
        org.apache.commons.io.output.ProxyWriter r0;
        java.lang.CharSequence $r1;
        int $i0, $i1, $i2;
        java.io.IOException r2;
        java.io.Writer $r3;

        r0 := @this: org.apache.commons.io.output.ProxyWriter;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = $i1 - $i0;

     label1:
        virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void beforeWrite(int)>($i2);

     label2:
        $r3 = r0.<org.apache.commons.io.output.ProxyWriter: java.io.Writer out>;

     label3:
        virtualinvoke $r3.<java.io.Writer: java.io.Writer append(java.lang.CharSequence,int,int)>($r1, $i0, $i1);

     label4:
        $i0 = $i1 - $i0;

     label5:
        virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void afterWrite(int)>($i0);

     label6:
        return r0;

     label7:
        r2 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>(r2);

        return r0;

        catch java.io.IOException from label1 to label2 with label7;
        catch java.io.IOException from label3 to label4 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }
    public volatile java.lang.Appendable append(char) throws java.io.IOException
    {
        org.apache.commons.io.output.ProxyWriter r0;
        char $c0;
        java.io.Writer $r1;

        r0 := @this: org.apache.commons.io.output.ProxyWriter;

        $c0 := @parameter0: char;

        $r1 = virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: java.io.Writer append(char)>($c0);

        return $r1;
    }
    public volatile java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException
    {
        org.apache.commons.io.output.ProxyWriter r0;
        java.lang.CharSequence $r1;
        java.io.Writer $r2;

        r0 := @this: org.apache.commons.io.output.ProxyWriter;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: java.io.Writer append(java.lang.CharSequence)>($r1);

        return $r2;
    }
    public volatile java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException
    {
        org.apache.commons.io.output.ProxyWriter r0;
        java.lang.CharSequence $r1;
        int $i0, $i1;
        java.io.Writer $r2;

        r0 := @this: org.apache.commons.io.output.ProxyWriter;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: java.io.Writer append(java.lang.CharSequence,int,int)>($r1, $i0, $i1);

        return $r2;
    }
    protected void beforeWrite(int) throws java.io.IOException
    {
        org.apache.commons.io.output.ProxyWriter r0;
        int $i0;

        r0 := @this: org.apache.commons.io.output.ProxyWriter;

        $i0 := @parameter0: int;

        return;
    }
    public void close() throws java.io.IOException
    {
        org.apache.commons.io.output.ProxyWriter r0;
        java.io.IOException r1;
        java.io.Writer $r2;

        r0 := @this: org.apache.commons.io.output.ProxyWriter;

        $r2 = r0.<org.apache.commons.io.output.ProxyWriter: java.io.Writer out>;

     label1:
        virtualinvoke $r2.<java.io.Writer: void close()>();

     label2:
        return;

     label3:
        r1 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>(r1);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public void flush() throws java.io.IOException
    {
        org.apache.commons.io.output.ProxyWriter r0;
        java.io.IOException r1;
        java.io.Writer $r2;

        r0 := @this: org.apache.commons.io.output.ProxyWriter;

        $r2 = r0.<org.apache.commons.io.output.ProxyWriter: java.io.Writer out>;

     label1:
        virtualinvoke $r2.<java.io.Writer: void flush()>();

     label2:
        return;

     label3:
        r1 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>(r1);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
    protected void handleIOException(java.io.IOException) throws java.io.IOException
    {
        org.apache.commons.io.output.ProxyWriter r0;
        java.io.IOException $r1;

        r0 := @this: org.apache.commons.io.output.ProxyWriter;

        $r1 := @parameter0: java.io.IOException;

        throw $r1;
    }
    public void write(int) throws java.io.IOException
    {
        org.apache.commons.io.output.ProxyWriter r0;
        int $i0;
        java.io.IOException r1;
        java.io.Writer $r2;

        r0 := @this: org.apache.commons.io.output.ProxyWriter;

        $i0 := @parameter0: int;

     label1:
        virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void beforeWrite(int)>(1);

     label2:
        $r2 = r0.<org.apache.commons.io.output.ProxyWriter: java.io.Writer out>;

     label3:
        virtualinvoke $r2.<java.io.Writer: void write(int)>($i0);

        virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void afterWrite(int)>(1);

     label4:
        return;

     label5:
        r1 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>(r1);

        return;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }
    public void write(java.lang.String) throws java.io.IOException
    {
        org.apache.commons.io.output.ProxyWriter r0;
        java.lang.String $r1;
        java.io.IOException r2;
        java.io.Writer $r3;
        int $i0;

        r0 := @this: org.apache.commons.io.output.ProxyWriter;

        $r1 := @parameter0: java.lang.String;

        $i0 = 0;

        if $r1 == null goto label2;

     label1:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

     label2:
        virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void beforeWrite(int)>($i0);

     label3:
        $r3 = r0.<org.apache.commons.io.output.ProxyWriter: java.io.Writer out>;

     label4:
        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>($r1);

        virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void afterWrite(int)>($i0);

     label5:
        return;

     label6:
        r2 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>(r2);

        return;

        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.IOException from label2 to label3 with label6;
        catch java.io.IOException from label4 to label5 with label6;
    }
    public void write(java.lang.String, int, int) throws java.io.IOException
    {
        org.apache.commons.io.output.ProxyWriter r0;
        java.lang.String $r1;
        int $i0, $i1;
        java.io.IOException r2;
        java.io.Writer $r3;

        r0 := @this: org.apache.commons.io.output.ProxyWriter;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

     label1:
        virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void beforeWrite(int)>($i1);

     label2:
        $r3 = r0.<org.apache.commons.io.output.ProxyWriter: java.io.Writer out>;

     label3:
        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String,int,int)>($r1, $i0, $i1);

        virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void afterWrite(int)>($i1);

     label4:
        return;

     label5:
        r2 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>(r2);

        return;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }
    public void write(char[]) throws java.io.IOException
    {
        org.apache.commons.io.output.ProxyWriter r0;
        char[] $r1;
        java.io.IOException r2;
        java.io.Writer $r3;
        int i0;

        r0 := @this: org.apache.commons.io.output.ProxyWriter;

        $r1 := @parameter0: char[];

        i0 = 0;

        if $r1 == null goto label1;

        i0 = lengthof $r1;

     label1:
        virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void beforeWrite(int)>(i0);

     label2:
        $r3 = r0.<org.apache.commons.io.output.ProxyWriter: java.io.Writer out>;

     label3:
        virtualinvoke $r3.<java.io.Writer: void write(char[])>($r1);

        virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void afterWrite(int)>(i0);

     label4:
        return;

     label5:
        r2 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>(r2);

        return;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }
    public void write(char[], int, int) throws java.io.IOException
    {
        org.apache.commons.io.output.ProxyWriter r0;
        char[] $r1;
        int $i0, $i1;
        java.io.IOException r2;
        java.io.Writer $r3;

        r0 := @this: org.apache.commons.io.output.ProxyWriter;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

     label1:
        virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void beforeWrite(int)>($i1);

     label2:
        $r3 = r0.<org.apache.commons.io.output.ProxyWriter: java.io.Writer out>;

     label3:
        virtualinvoke $r3.<java.io.Writer: void write(char[],int,int)>($r1, $i0, $i1);

        virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void afterWrite(int)>($i1);

     label4:
        return;

     label5:
        r2 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>(r2);

        return;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }
