org.apache.commons.io.output.ProxyOutputStream extends java.io.FilterOutputStream
    public void <init>(java.io.OutputStream)
    {
        org.apache.commons.io.output.ProxyOutputStream r0;
        java.io.OutputStream $r1;

        r0 := @this: org.apache.commons.io.output.ProxyOutputStream;

        $r1 := @parameter0: java.io.OutputStream;

        specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>($r1);

        return;
    }
    protected void afterWrite(int) throws java.io.IOException
    {
        org.apache.commons.io.output.ProxyOutputStream r0;
        int $i0;

        r0 := @this: org.apache.commons.io.output.ProxyOutputStream;

        $i0 := @parameter0: int;

        return;
    }
    protected void beforeWrite(int) throws java.io.IOException
    {
        org.apache.commons.io.output.ProxyOutputStream r0;
        int $i0;

        r0 := @this: org.apache.commons.io.output.ProxyOutputStream;

        $i0 := @parameter0: int;

        return;
    }
    public void close() throws java.io.IOException
    {
        org.apache.commons.io.output.ProxyOutputStream r0;
        java.io.IOException r1;
        java.io.OutputStream $r2;

        r0 := @this: org.apache.commons.io.output.ProxyOutputStream;

        $r2 = r0.<org.apache.commons.io.output.ProxyOutputStream: java.io.OutputStream out>;

     label1:
        virtualinvoke $r2.<java.io.OutputStream: void close()>();

     label2:
        return;

     label3:
        r1 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>(r1);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public void flush() throws java.io.IOException
    {
        org.apache.commons.io.output.ProxyOutputStream r0;
        java.io.IOException r1;
        java.io.OutputStream $r2;

        r0 := @this: org.apache.commons.io.output.ProxyOutputStream;

        $r2 = r0.<org.apache.commons.io.output.ProxyOutputStream: java.io.OutputStream out>;

     label1:
        virtualinvoke $r2.<java.io.OutputStream: void flush()>();

     label2:
        return;

     label3:
        r1 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>(r1);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
    protected void handleIOException(java.io.IOException) throws java.io.IOException
    {
        org.apache.commons.io.output.ProxyOutputStream r0;
        java.io.IOException $r1;

        r0 := @this: org.apache.commons.io.output.ProxyOutputStream;

        $r1 := @parameter0: java.io.IOException;

        throw $r1;
    }
    public void write(int) throws java.io.IOException
    {
        org.apache.commons.io.output.ProxyOutputStream r0;
        int $i0;
        java.io.IOException r1;
        java.io.OutputStream $r2;

        r0 := @this: org.apache.commons.io.output.ProxyOutputStream;

        $i0 := @parameter0: int;

     label1:
        virtualinvoke r0.<org.apache.commons.io.output.ProxyOutputStream: void beforeWrite(int)>(1);

     label2:
        $r2 = r0.<org.apache.commons.io.output.ProxyOutputStream: java.io.OutputStream out>;

     label3:
        virtualinvoke $r2.<java.io.OutputStream: void write(int)>($i0);

        virtualinvoke r0.<org.apache.commons.io.output.ProxyOutputStream: void afterWrite(int)>(1);

     label4:
        return;

     label5:
        r1 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>(r1);

        return;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }
    public void write(byte[]) throws java.io.IOException
    {
        org.apache.commons.io.output.ProxyOutputStream r0;
        byte[] $r1;
        java.io.IOException r2;
        java.io.OutputStream $r3;
        int i0;

        r0 := @this: org.apache.commons.io.output.ProxyOutputStream;

        $r1 := @parameter0: byte[];

        if $r1 == null goto label5;

        i0 = lengthof $r1;

     label1:
        virtualinvoke r0.<org.apache.commons.io.output.ProxyOutputStream: void beforeWrite(int)>(i0);

     label2:
        $r3 = r0.<org.apache.commons.io.output.ProxyOutputStream: java.io.OutputStream out>;

     label3:
        virtualinvoke $r3.<java.io.OutputStream: void write(byte[])>($r1);

        virtualinvoke r0.<org.apache.commons.io.output.ProxyOutputStream: void afterWrite(int)>(i0);

     label4:
        return;

     label5:
        i0 = 0;

        goto label1;

     label6:
        r2 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>(r2);

        return;

        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.IOException from label3 to label4 with label6;
    }
    public void write(byte[], int, int) throws java.io.IOException
    {
        org.apache.commons.io.output.ProxyOutputStream r0;
        byte[] $r1;
        int $i0, $i1;
        java.io.IOException r2;
        java.io.OutputStream $r3;

        r0 := @this: org.apache.commons.io.output.ProxyOutputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

     label1:
        virtualinvoke r0.<org.apache.commons.io.output.ProxyOutputStream: void beforeWrite(int)>($i1);

     label2:
        $r3 = r0.<org.apache.commons.io.output.ProxyOutputStream: java.io.OutputStream out>;

     label3:
        virtualinvoke $r3.<java.io.OutputStream: void write(byte[],int,int)>($r1, $i0, $i1);

        virtualinvoke r0.<org.apache.commons.io.output.ProxyOutputStream: void afterWrite(int)>($i1);

     label4:
        return;

     label5:
        r2 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>(r2);

        return;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }
