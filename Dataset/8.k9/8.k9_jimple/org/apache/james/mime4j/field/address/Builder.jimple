org.apache.james.mime4j.field.address.Builder extends java.lang.Object
private static org.apache.james.mime4j.field.address.Builder singleton
    static void <clinit>()
    {
        org.apache.james.mime4j.field.address.Builder $r0;

        $r0 = new org.apache.james.mime4j.field.address.Builder;

        specialinvoke $r0.<org.apache.james.mime4j.field.address.Builder: void <init>()>();

        <org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Builder singleton> = $r0;

        return;
    }
    void <init>()
    {
        org.apache.james.mime4j.field.address.Builder r0;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private void addSpecials(java.lang.StringBuilder, org.apache.james.mime4j.field.address.Token)
    {
        org.apache.james.mime4j.field.address.Builder r0;
        java.lang.StringBuilder $r1;
        org.apache.james.mime4j.field.address.Token $r2, $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        $r1 := @parameter0: java.lang.StringBuilder;

        $r2 := @parameter1: org.apache.james.mime4j.field.address.Token;

        if $r2 == null goto label1;

        $r3 = $r2.<org.apache.james.mime4j.field.address.Token: org.apache.james.mime4j.field.address.Token specialToken>;

        specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: void addSpecials(java.lang.StringBuilder,org.apache.james.mime4j.field.address.Token)>($r1, $r3);

        $r4 = $r2.<org.apache.james.mime4j.field.address.Token: java.lang.String image>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

     label1:
        return;
    }
    private org.apache.james.mime4j.dom.address.Mailbox buildAddrSpec(org.apache.james.mime4j.dom.address.DomainList, org.apache.james.mime4j.field.address.ASTaddr_spec)
    {
        org.apache.james.mime4j.field.address.Builder r0;
        org.apache.james.mime4j.dom.address.DomainList $r1;
        org.apache.james.mime4j.field.address.ASTaddr_spec $r2;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator r3;
        org.apache.james.mime4j.field.address.Node $r4;
        org.apache.james.mime4j.field.address.ASTlocal_part $r5;
        java.lang.String $r6, $r8;
        org.apache.james.mime4j.field.address.ASTdomain $r7;
        org.apache.james.mime4j.dom.address.Mailbox $r9;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        $r1 := @parameter0: org.apache.james.mime4j.dom.address.DomainList;

        $r2 := @parameter1: org.apache.james.mime4j.field.address.ASTaddr_spec;

        r3 = new org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        specialinvoke r3.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: void <init>(org.apache.james.mime4j.field.address.SimpleNode)>($r2);

        $r4 = virtualinvoke r3.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.Node next()>();

        $r5 = (org.apache.james.mime4j.field.address.ASTlocal_part) $r4;

        $r6 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: java.lang.String buildString(org.apache.james.mime4j.field.address.SimpleNode,boolean)>($r5, 1);

        $r4 = virtualinvoke r3.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.Node next()>();

        $r7 = (org.apache.james.mime4j.field.address.ASTdomain) $r4;

        $r8 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: java.lang.String buildString(org.apache.james.mime4j.field.address.SimpleNode,boolean)>($r7, 1);

        $r9 = new org.apache.james.mime4j.dom.address.Mailbox;

        specialinvoke $r9.<org.apache.james.mime4j.dom.address.Mailbox: void <init>(org.apache.james.mime4j.dom.address.DomainList,java.lang.String,java.lang.String)>($r1, $r6, $r8);

        return $r9;
    }
    private org.apache.james.mime4j.dom.address.Mailbox buildAddrSpec(org.apache.james.mime4j.field.address.ASTaddr_spec)
    {
        org.apache.james.mime4j.field.address.Builder r0;
        org.apache.james.mime4j.field.address.ASTaddr_spec $r1;
        org.apache.james.mime4j.dom.address.Mailbox $r2;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        $r1 := @parameter0: org.apache.james.mime4j.field.address.ASTaddr_spec;

        $r2 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.dom.address.Mailbox buildAddrSpec(org.apache.james.mime4j.dom.address.DomainList,org.apache.james.mime4j.field.address.ASTaddr_spec)>(null, $r1);

        return $r2;
    }
    private org.apache.james.mime4j.dom.address.Mailbox buildAngleAddr(org.apache.james.mime4j.field.address.ASTangle_addr) throws org.apache.james.mime4j.field.address.ParseException
    {
        org.apache.james.mime4j.field.address.Builder r0;
        org.apache.james.mime4j.field.address.ASTangle_addr $r1;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator r2;
        org.apache.james.mime4j.dom.address.DomainList r3;
        org.apache.james.mime4j.field.address.Node $r4, r5;
        boolean $z0;
        org.apache.james.mime4j.field.address.ASTroute r6;
        org.apache.james.mime4j.field.address.ASTaddr_spec r7;
        org.apache.james.mime4j.dom.address.Mailbox $r8;
        org.apache.james.mime4j.field.address.ParseException $r9;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        $r1 := @parameter0: org.apache.james.mime4j.field.address.ASTangle_addr;

        r2 = new org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        specialinvoke r2.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: void <init>(org.apache.james.mime4j.field.address.SimpleNode)>($r1);

        r3 = null;

        $r4 = virtualinvoke r2.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.Node next()>();

        r5 = $r4;

        $z0 = $r4 instanceof org.apache.james.mime4j.field.address.ASTroute;

        if $z0 == 0 goto label2;

        r6 = (org.apache.james.mime4j.field.address.ASTroute) $r4;

        r3 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.dom.address.DomainList buildRoute(org.apache.james.mime4j.field.address.ASTroute)>(r6);

        r5 = virtualinvoke r2.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.Node next()>();

     label1:
        $z0 = r5 instanceof org.apache.james.mime4j.field.address.ASTaddr_spec;

        if $z0 == 0 goto label3;

        r7 = (org.apache.james.mime4j.field.address.ASTaddr_spec) r5;

        $r8 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.dom.address.Mailbox buildAddrSpec(org.apache.james.mime4j.dom.address.DomainList,org.apache.james.mime4j.field.address.ASTaddr_spec)>(r3, r7);

        return $r8;

     label2:
        $z0 = $r4 instanceof org.apache.james.mime4j.field.address.ASTaddr_spec;

        if $z0 != 0 goto label1;

        $r9 = new org.apache.james.mime4j.field.address.ParseException;

        specialinvoke $r9.<org.apache.james.mime4j.field.address.ParseException: void <init>()>();

        throw $r9;

     label3:
        $r9 = new org.apache.james.mime4j.field.address.ParseException;

        specialinvoke $r9.<org.apache.james.mime4j.field.address.ParseException: void <init>()>();

        throw $r9;
    }
    private org.apache.james.mime4j.dom.address.MailboxList buildGroupBody(org.apache.james.mime4j.field.address.ASTgroup_body, org.apache.james.mime4j.codec.DecodeMonitor) throws org.apache.james.mime4j.field.address.ParseException
    {
        org.apache.james.mime4j.field.address.Builder r0;
        org.apache.james.mime4j.field.address.ASTgroup_body $r1;
        org.apache.james.mime4j.codec.DecodeMonitor $r2;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator r3;
        java.util.ArrayList r4;
        boolean $z0;
        org.apache.james.mime4j.field.address.Node $r5;
        org.apache.james.mime4j.field.address.ASTmailbox r6;
        org.apache.james.mime4j.dom.address.Mailbox $r7;
        org.apache.james.mime4j.field.address.ParseException $r8;
        org.apache.james.mime4j.dom.address.MailboxList $r9;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        $r1 := @parameter0: org.apache.james.mime4j.field.address.ASTgroup_body;

        $r2 := @parameter1: org.apache.james.mime4j.codec.DecodeMonitor;

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

        r3 = new org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        specialinvoke r3.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: void <init>(org.apache.james.mime4j.field.address.SimpleNode)>($r1);

     label1:
        $z0 = virtualinvoke r3.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = virtualinvoke r3.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.Node next()>();

        $z0 = $r5 instanceof org.apache.james.mime4j.field.address.ASTmailbox;

        if $z0 == 0 goto label2;

        r6 = (org.apache.james.mime4j.field.address.ASTmailbox) $r5;

        $r7 = virtualinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.dom.address.Mailbox buildMailbox(org.apache.james.mime4j.field.address.ASTmailbox,org.apache.james.mime4j.codec.DecodeMonitor)>(r6, $r2);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        $r8 = new org.apache.james.mime4j.field.address.ParseException;

        specialinvoke $r8.<org.apache.james.mime4j.field.address.ParseException: void <init>()>();

        throw $r8;

     label3:
        $r9 = new org.apache.james.mime4j.dom.address.MailboxList;

        specialinvoke $r9.<org.apache.james.mime4j.dom.address.MailboxList: void <init>(java.util.List,boolean)>(r4, 1);

        return $r9;
    }
    private org.apache.james.mime4j.dom.address.Mailbox buildNameAddr(org.apache.james.mime4j.field.address.ASTname_addr, org.apache.james.mime4j.codec.DecodeMonitor) throws org.apache.james.mime4j.field.address.ParseException
    {
        org.apache.james.mime4j.field.address.Builder r0;
        org.apache.james.mime4j.field.address.ASTname_addr $r1;
        org.apache.james.mime4j.codec.DecodeMonitor $r2;
        java.lang.IllegalArgumentException r3;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator r4;
        org.apache.james.mime4j.field.address.Node $r5;
        boolean $z0;
        org.apache.james.mime4j.field.address.ASTphrase r6;
        java.lang.String $r7, $r12, $r13;
        org.apache.james.mime4j.field.address.ASTangle_addr r8;
        org.apache.james.mime4j.dom.address.Mailbox $r9, $r10;
        org.apache.james.mime4j.dom.address.DomainList $r11;
        org.apache.james.mime4j.field.address.ParseException $r14;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        $r1 := @parameter0: org.apache.james.mime4j.field.address.ASTname_addr;

        $r2 := @parameter1: org.apache.james.mime4j.codec.DecodeMonitor;

        r4 = new org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        specialinvoke r4.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: void <init>(org.apache.james.mime4j.field.address.SimpleNode)>($r1);

        $r5 = virtualinvoke r4.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.Node next()>();

        $z0 = $r5 instanceof org.apache.james.mime4j.field.address.ASTphrase;

        if $z0 == 0 goto label3;

        r6 = (org.apache.james.mime4j.field.address.ASTphrase) $r5;

        $r7 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: java.lang.String buildString(org.apache.james.mime4j.field.address.SimpleNode,boolean)>(r6, 0);

        $r5 = virtualinvoke r4.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.Node next()>();

        $z0 = $r5 instanceof org.apache.james.mime4j.field.address.ASTangle_addr;

        if $z0 == 0 goto label5;

     label1:
        $r7 = staticinvoke <org.apache.james.mime4j.codec.DecoderUtil: java.lang.String decodeEncodedWords(java.lang.String,org.apache.james.mime4j.codec.DecodeMonitor)>($r7, $r2);

     label2:
        r8 = (org.apache.james.mime4j.field.address.ASTangle_addr) $r5;

        $r9 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.dom.address.Mailbox buildAngleAddr(org.apache.james.mime4j.field.address.ASTangle_addr)>(r8);

        $r10 = new org.apache.james.mime4j.dom.address.Mailbox;

        $r11 = virtualinvoke $r9.<org.apache.james.mime4j.dom.address.Mailbox: org.apache.james.mime4j.dom.address.DomainList getRoute()>();

        $r12 = virtualinvoke $r9.<org.apache.james.mime4j.dom.address.Mailbox: java.lang.String getLocalPart()>();

        $r13 = virtualinvoke $r9.<org.apache.james.mime4j.dom.address.Mailbox: java.lang.String getDomain()>();

        specialinvoke $r10.<org.apache.james.mime4j.dom.address.Mailbox: void <init>(java.lang.String,org.apache.james.mime4j.dom.address.DomainList,java.lang.String,java.lang.String)>($r7, $r11, $r12, $r13);

        return $r10;

     label3:
        $r14 = new org.apache.james.mime4j.field.address.ParseException;

        specialinvoke $r14.<org.apache.james.mime4j.field.address.ParseException: void <init>()>();

        throw $r14;

     label4:
        r3 := @caughtexception;

        $r14 = new org.apache.james.mime4j.field.address.ParseException;

        $r7 = virtualinvoke r3.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        specialinvoke $r14.<org.apache.james.mime4j.field.address.ParseException: void <init>(java.lang.String)>($r7);

        throw $r14;

     label5:
        $r14 = new org.apache.james.mime4j.field.address.ParseException;

        specialinvoke $r14.<org.apache.james.mime4j.field.address.ParseException: void <init>()>();

        throw $r14;

        catch java.lang.IllegalArgumentException from label1 to label2 with label4;
    }
    private org.apache.james.mime4j.dom.address.DomainList buildRoute(org.apache.james.mime4j.field.address.ASTroute) throws org.apache.james.mime4j.field.address.ParseException
    {
        org.apache.james.mime4j.field.address.Builder r0;
        org.apache.james.mime4j.field.address.ASTroute $r1;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator r2;
        java.util.ArrayList r3;
        int $i0;
        boolean $z0;
        org.apache.james.mime4j.field.address.Node $r4;
        org.apache.james.mime4j.field.address.ASTdomain r5;
        java.lang.String $r6;
        org.apache.james.mime4j.field.address.ParseException $r7;
        org.apache.james.mime4j.dom.address.DomainList $r8;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        $r1 := @parameter0: org.apache.james.mime4j.field.address.ASTroute;

        r3 = new java.util.ArrayList;

        $i0 = virtualinvoke $r1.<org.apache.james.mime4j.field.address.ASTroute: int jjtGetNumChildren()>();

        specialinvoke r3.<java.util.ArrayList: void <init>(int)>($i0);

        r2 = new org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        specialinvoke r2.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: void <init>(org.apache.james.mime4j.field.address.SimpleNode)>($r1);

     label1:
        $z0 = virtualinvoke r2.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = virtualinvoke r2.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.Node next()>();

        $z0 = $r4 instanceof org.apache.james.mime4j.field.address.ASTdomain;

        if $z0 == 0 goto label2;

        r5 = (org.apache.james.mime4j.field.address.ASTdomain) $r4;

        $r6 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: java.lang.String buildString(org.apache.james.mime4j.field.address.SimpleNode,boolean)>(r5, 1);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        $r7 = new org.apache.james.mime4j.field.address.ParseException;

        specialinvoke $r7.<org.apache.james.mime4j.field.address.ParseException: void <init>()>();

        throw $r7;

     label3:
        $r8 = new org.apache.james.mime4j.dom.address.DomainList;

        specialinvoke $r8.<org.apache.james.mime4j.dom.address.DomainList: void <init>(java.util.List,boolean)>(r3, 1);

        return $r8;
    }
    private java.lang.String buildString(org.apache.james.mime4j.field.address.SimpleNode, boolean)
    {
        org.apache.james.mime4j.field.address.Builder r0;
        org.apache.james.mime4j.field.address.SimpleNode $r1;
        boolean $z0;
        java.lang.StringBuilder r2;
        org.apache.james.mime4j.field.address.Token r3, r5, $r6;
        java.lang.String $r4;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        $r1 := @parameter0: org.apache.james.mime4j.field.address.SimpleNode;

        $z0 := @parameter1: boolean;

        r5 = $r1.<org.apache.james.mime4j.field.address.SimpleNode: org.apache.james.mime4j.field.address.Token firstToken>;

        r3 = $r1.<org.apache.james.mime4j.field.address.SimpleNode: org.apache.james.mime4j.field.address.Token lastToken>;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

     label1:
        if r5 == r3 goto label2;

        $r4 = r5.<org.apache.james.mime4j.field.address.Token: java.lang.String image>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        r5 = r5.<org.apache.james.mime4j.field.address.Token: org.apache.james.mime4j.field.address.Token next>;

        if $z0 != 0 goto label1;

        $r6 = r5.<org.apache.james.mime4j.field.address.Token: org.apache.james.mime4j.field.address.Token specialToken>;

        specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: void addSpecials(java.lang.StringBuilder,org.apache.james.mime4j.field.address.Token)>(r2, $r6);

        goto label1;

     label2:
        $r4 = r3.<org.apache.james.mime4j.field.address.Token: java.lang.String image>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
    public static org.apache.james.mime4j.field.address.Builder getInstance()
    {
        org.apache.james.mime4j.field.address.Builder r0;

        r0 = <org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Builder singleton>;

        return r0;
    }
    public org.apache.james.mime4j.dom.address.Address buildAddress(org.apache.james.mime4j.field.address.ASTaddress, org.apache.james.mime4j.codec.DecodeMonitor) throws org.apache.james.mime4j.field.address.ParseException
    {
        org.apache.james.mime4j.field.address.Builder r0;
        org.apache.james.mime4j.field.address.ASTaddress $r1;
        org.apache.james.mime4j.codec.DecodeMonitor $r2;
        java.lang.IllegalArgumentException r3;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator r4;
        org.apache.james.mime4j.field.address.Node $r5;
        boolean $z0;
        org.apache.james.mime4j.field.address.ASTaddr_spec r6;
        org.apache.james.mime4j.dom.address.Mailbox $r7, $r14;
        org.apache.james.mime4j.field.address.ASTangle_addr r8;
        org.apache.james.mime4j.field.address.ASTphrase r9;
        java.lang.String $r10, $r16, $r17;
        org.apache.james.mime4j.dom.address.Group $r11;
        org.apache.james.mime4j.field.address.ASTgroup_body r12;
        org.apache.james.mime4j.dom.address.MailboxList $r13;
        org.apache.james.mime4j.dom.address.DomainList $r15;
        org.apache.james.mime4j.field.address.ParseException $r18;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        $r1 := @parameter0: org.apache.james.mime4j.field.address.ASTaddress;

        $r2 := @parameter1: org.apache.james.mime4j.codec.DecodeMonitor;

        r4 = new org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        specialinvoke r4.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: void <init>(org.apache.james.mime4j.field.address.SimpleNode)>($r1);

        $r5 = virtualinvoke r4.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.Node next()>();

        $z0 = $r5 instanceof org.apache.james.mime4j.field.address.ASTaddr_spec;

        if $z0 == 0 goto label1;

        r6 = (org.apache.james.mime4j.field.address.ASTaddr_spec) $r5;

        $r7 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.dom.address.Mailbox buildAddrSpec(org.apache.james.mime4j.field.address.ASTaddr_spec)>(r6);

        return $r7;

     label1:
        $z0 = $r5 instanceof org.apache.james.mime4j.field.address.ASTangle_addr;

        if $z0 == 0 goto label2;

        r8 = (org.apache.james.mime4j.field.address.ASTangle_addr) $r5;

        $r7 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.dom.address.Mailbox buildAngleAddr(org.apache.james.mime4j.field.address.ASTangle_addr)>(r8);

        return $r7;

     label2:
        $z0 = $r5 instanceof org.apache.james.mime4j.field.address.ASTphrase;

        if $z0 == 0 goto label8;

        r9 = (org.apache.james.mime4j.field.address.ASTphrase) $r5;

        $r10 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: java.lang.String buildString(org.apache.james.mime4j.field.address.SimpleNode,boolean)>(r9, 0);

        $r5 = virtualinvoke r4.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.Node next()>();

        $z0 = $r5 instanceof org.apache.james.mime4j.field.address.ASTgroup_body;

        if $z0 == 0 goto label3;

        $r11 = new org.apache.james.mime4j.dom.address.Group;

        r12 = (org.apache.james.mime4j.field.address.ASTgroup_body) $r5;

        $r13 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.dom.address.MailboxList buildGroupBody(org.apache.james.mime4j.field.address.ASTgroup_body,org.apache.james.mime4j.codec.DecodeMonitor)>(r12, $r2);

        specialinvoke $r11.<org.apache.james.mime4j.dom.address.Group: void <init>(java.lang.String,org.apache.james.mime4j.dom.address.MailboxList)>($r10, $r13);

        return $r11;

     label3:
        $z0 = $r5 instanceof org.apache.james.mime4j.field.address.ASTangle_addr;

        if $z0 == 0 goto label7;

     label4:
        $r10 = staticinvoke <org.apache.james.mime4j.codec.DecoderUtil: java.lang.String decodeEncodedWords(java.lang.String,org.apache.james.mime4j.codec.DecodeMonitor)>($r10, $r2);

     label5:
        r8 = (org.apache.james.mime4j.field.address.ASTangle_addr) $r5;

        $r7 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.dom.address.Mailbox buildAngleAddr(org.apache.james.mime4j.field.address.ASTangle_addr)>(r8);

        $r14 = new org.apache.james.mime4j.dom.address.Mailbox;

        $r15 = virtualinvoke $r7.<org.apache.james.mime4j.dom.address.Mailbox: org.apache.james.mime4j.dom.address.DomainList getRoute()>();

        $r16 = virtualinvoke $r7.<org.apache.james.mime4j.dom.address.Mailbox: java.lang.String getLocalPart()>();

        $r17 = virtualinvoke $r7.<org.apache.james.mime4j.dom.address.Mailbox: java.lang.String getDomain()>();

        specialinvoke $r14.<org.apache.james.mime4j.dom.address.Mailbox: void <init>(java.lang.String,org.apache.james.mime4j.dom.address.DomainList,java.lang.String,java.lang.String)>($r10, $r15, $r16, $r17);

        return $r14;

     label6:
        r3 := @caughtexception;

        $r18 = new org.apache.james.mime4j.field.address.ParseException;

        $r10 = virtualinvoke r3.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        specialinvoke $r18.<org.apache.james.mime4j.field.address.ParseException: void <init>(java.lang.String)>($r10);

        throw $r18;

     label7:
        $r18 = new org.apache.james.mime4j.field.address.ParseException;

        specialinvoke $r18.<org.apache.james.mime4j.field.address.ParseException: void <init>()>();

        throw $r18;

     label8:
        $r18 = new org.apache.james.mime4j.field.address.ParseException;

        specialinvoke $r18.<org.apache.james.mime4j.field.address.ParseException: void <init>()>();

        throw $r18;

        catch java.lang.IllegalArgumentException from label4 to label5 with label6;
    }
    public org.apache.james.mime4j.dom.address.AddressList buildAddressList(org.apache.james.mime4j.field.address.ASTaddress_list, org.apache.james.mime4j.codec.DecodeMonitor) throws org.apache.james.mime4j.field.address.ParseException
    {
        org.apache.james.mime4j.field.address.Builder r0;
        org.apache.james.mime4j.field.address.ASTaddress_list $r1;
        org.apache.james.mime4j.codec.DecodeMonitor $r2;
        java.util.ArrayList r3;
        int i0, $i1;
        org.apache.james.mime4j.field.address.Node $r4;
        org.apache.james.mime4j.field.address.ASTaddress r5;
        org.apache.james.mime4j.dom.address.Address $r6;
        org.apache.james.mime4j.dom.address.AddressList $r7;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        $r1 := @parameter0: org.apache.james.mime4j.field.address.ASTaddress_list;

        $r2 := @parameter1: org.apache.james.mime4j.codec.DecodeMonitor;

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        i0 = 0;

     label1:
        $i1 = virtualinvoke $r1.<org.apache.james.mime4j.field.address.ASTaddress_list: int jjtGetNumChildren()>();

        if i0 >= $i1 goto label2;

        $r4 = virtualinvoke $r1.<org.apache.james.mime4j.field.address.ASTaddress_list: org.apache.james.mime4j.field.address.Node jjtGetChild(int)>(i0);

        r5 = (org.apache.james.mime4j.field.address.ASTaddress) $r4;

        $r6 = virtualinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.dom.address.Address buildAddress(org.apache.james.mime4j.field.address.ASTaddress,org.apache.james.mime4j.codec.DecodeMonitor)>(r5, $r2);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r6);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r7 = new org.apache.james.mime4j.dom.address.AddressList;

        specialinvoke $r7.<org.apache.james.mime4j.dom.address.AddressList: void <init>(java.util.List,boolean)>(r3, 1);

        return $r7;
    }
    public org.apache.james.mime4j.dom.address.Mailbox buildMailbox(org.apache.james.mime4j.field.address.ASTmailbox, org.apache.james.mime4j.codec.DecodeMonitor) throws org.apache.james.mime4j.field.address.ParseException
    {
        org.apache.james.mime4j.field.address.Builder r0;
        org.apache.james.mime4j.field.address.ASTmailbox $r1;
        org.apache.james.mime4j.codec.DecodeMonitor $r2;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator r3;
        org.apache.james.mime4j.field.address.Node $r4;
        boolean $z0;
        org.apache.james.mime4j.field.address.ASTaddr_spec r5;
        org.apache.james.mime4j.dom.address.Mailbox $r6;
        org.apache.james.mime4j.field.address.ASTangle_addr r7;
        org.apache.james.mime4j.field.address.ASTname_addr r8;
        org.apache.james.mime4j.field.address.ParseException $r9;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        $r1 := @parameter0: org.apache.james.mime4j.field.address.ASTmailbox;

        $r2 := @parameter1: org.apache.james.mime4j.codec.DecodeMonitor;

        r3 = new org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        specialinvoke r3.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: void <init>(org.apache.james.mime4j.field.address.SimpleNode)>($r1);

        $r4 = virtualinvoke r3.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.Node next()>();

        $z0 = $r4 instanceof org.apache.james.mime4j.field.address.ASTaddr_spec;

        if $z0 == 0 goto label1;

        r5 = (org.apache.james.mime4j.field.address.ASTaddr_spec) $r4;

        $r6 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.dom.address.Mailbox buildAddrSpec(org.apache.james.mime4j.field.address.ASTaddr_spec)>(r5);

        return $r6;

     label1:
        $z0 = $r4 instanceof org.apache.james.mime4j.field.address.ASTangle_addr;

        if $z0 == 0 goto label2;

        r7 = (org.apache.james.mime4j.field.address.ASTangle_addr) $r4;

        $r6 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.dom.address.Mailbox buildAngleAddr(org.apache.james.mime4j.field.address.ASTangle_addr)>(r7);

        return $r6;

     label2:
        $z0 = $r4 instanceof org.apache.james.mime4j.field.address.ASTname_addr;

        if $z0 == 0 goto label3;

        r8 = (org.apache.james.mime4j.field.address.ASTname_addr) $r4;

        $r6 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.dom.address.Mailbox buildNameAddr(org.apache.james.mime4j.field.address.ASTname_addr,org.apache.james.mime4j.codec.DecodeMonitor)>(r8, $r2);

        return $r6;

     label3:
        $r9 = new org.apache.james.mime4j.field.address.ParseException;

        specialinvoke $r9.<org.apache.james.mime4j.field.address.ParseException: void <init>()>();

        throw $r9;
    }
