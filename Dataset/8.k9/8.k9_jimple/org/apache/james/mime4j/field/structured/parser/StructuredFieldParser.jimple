org.apache.james.mime4j.field.structured.parser.StructuredFieldParser extends java.lang.Object implements org.apache.james.mime4j.field.structured.parser.StructuredFieldParserConstants
private static int[] jj_la1_0
private java.util.List jj_expentries
private int[] jj_expentry
private int jj_gen
org.apache.james.mime4j.field.structured.parser.SimpleCharStream jj_input_stream
private int jj_kind
private final int[] jj_la1
public org.apache.james.mime4j.field.structured.parser.Token jj_nt
private int jj_ntk
private boolean preserveFolding
public org.apache.james.mime4j.field.structured.parser.Token token
public org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager token_source
    static void <clinit>()
    {
        staticinvoke <org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: void jj_la1_init_0()>();

        return;
    }
    public void <init>(java.io.InputStream)
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        $r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: void <init>(java.io.InputStream,java.lang.String)>($r1, null);

        return;
    }
    public void <init>(java.io.InputStream, java.lang.String)
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        java.io.InputStream $r1;
        java.lang.String $r2;
        java.io.UnsupportedEncodingException r3;
        int[] $r4;
        java.util.ArrayList $r5;
        org.apache.james.mime4j.field.structured.parser.SimpleCharStream $r6;
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager $r7;
        org.apache.james.mime4j.field.structured.parser.Token $r8;
        int i0;
        java.lang.RuntimeException $r9;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: boolean preserveFolding> = 0;

        $r4 = newarray (int)[2];

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_la1> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: java.util.List jj_expentries> = $r5;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_kind> = -1;

        $r6 = new org.apache.james.mime4j.field.structured.parser.SimpleCharStream;

     label1:
        specialinvoke $r6.<org.apache.james.mime4j.field.structured.parser.SimpleCharStream: void <init>(java.io.InputStream,java.lang.String,int,int)>($r1, $r2, 1, 1);

     label2:
        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.SimpleCharStream jj_input_stream> = $r6;

        $r7 = new org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager;

        $r6 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.SimpleCharStream jj_input_stream>;

        specialinvoke $r7.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager: void <init>(org.apache.james.mime4j.field.structured.parser.SimpleCharStream)>($r6);

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager token_source> = $r7;

        $r8 = new org.apache.james.mime4j.field.structured.parser.Token;

        specialinvoke $r8.<org.apache.james.mime4j.field.structured.parser.Token: void <init>()>();

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token> = $r8;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_ntk> = -1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_gen> = 0;

        i0 = 0;

     label3:
        if i0 >= 2 goto label5;

        $r4 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_la1>;

        $r4[i0] = -1;

        i0 = i0 + 1;

        goto label3;

     label4:
        r3 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r3);

        throw $r9;

     label5:
        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label4;
    }
    public void <init>(java.io.Reader)
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        java.io.Reader $r1;
        int[] $r2;
        java.util.ArrayList $r3;
        org.apache.james.mime4j.field.structured.parser.SimpleCharStream $r4;
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager $r5;
        org.apache.james.mime4j.field.structured.parser.Token $r6;
        int i0;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        $r1 := @parameter0: java.io.Reader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: boolean preserveFolding> = 0;

        $r2 = newarray (int)[2];

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_la1> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: java.util.List jj_expentries> = $r3;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_kind> = -1;

        $r4 = new org.apache.james.mime4j.field.structured.parser.SimpleCharStream;

        specialinvoke $r4.<org.apache.james.mime4j.field.structured.parser.SimpleCharStream: void <init>(java.io.Reader,int,int)>($r1, 1, 1);

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.SimpleCharStream jj_input_stream> = $r4;

        $r5 = new org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager;

        $r4 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.SimpleCharStream jj_input_stream>;

        specialinvoke $r5.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager: void <init>(org.apache.james.mime4j.field.structured.parser.SimpleCharStream)>($r4);

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager token_source> = $r5;

        $r6 = new org.apache.james.mime4j.field.structured.parser.Token;

        specialinvoke $r6.<org.apache.james.mime4j.field.structured.parser.Token: void <init>()>();

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token> = $r6;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_ntk> = -1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_gen> = 0;

        i0 = 0;

     label1:
        if i0 >= 2 goto label2;

        $r2 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_la1>;

        $r2[i0] = -1;

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }
    public void <init>(org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager)
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager $r1;
        int[] $r2;
        java.util.ArrayList $r3;
        org.apache.james.mime4j.field.structured.parser.Token $r4;
        int i0;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        $r1 := @parameter0: org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: boolean preserveFolding> = 0;

        $r2 = newarray (int)[2];

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_la1> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: java.util.List jj_expentries> = $r3;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_kind> = -1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager token_source> = $r1;

        $r4 = new org.apache.james.mime4j.field.structured.parser.Token;

        specialinvoke $r4.<org.apache.james.mime4j.field.structured.parser.Token: void <init>()>();

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token> = $r4;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_ntk> = -1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_gen> = 0;

        i0 = 0;

     label1:
        if i0 >= 2 goto label2;

        $r2 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_la1>;

        $r2[i0] = -1;

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }
    private final java.lang.String doParse() throws org.apache.james.mime4j.field.structured.parser.ParseException
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        java.lang.StringBuffer r1;
        boolean z0, z1, $z2;
        int $i0;
        int[] $r2;
        java.lang.String $r3;
        org.apache.james.mime4j.field.structured.parser.ParseException $r4;
        org.apache.james.mime4j.field.structured.parser.Token $r5;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        r1 = new java.lang.StringBuffer;

        specialinvoke r1.<java.lang.StringBuffer: void <init>(int)>(50);

        z0 = 0;

        z1 = 1;

     label01:
        $i0 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_ntk>;

        if $i0 != -1 goto label04;

        $i0 = specialinvoke r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_ntk()>();

     label02:
        lookupswitch($i0)
        {
            case 11: goto label05;
            case 12: goto label05;
            case 13: goto label05;
            case 14: goto label05;
            case 15: goto label05;
            default: goto label03;
        };

     label03:
        $r2 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_la1>;

        $i0 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_gen>;

        $r2[0] = $i0;

        $r3 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;

     label04:
        $i0 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_ntk>;

        goto label02;

     label05:
        $i0 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_ntk>;

        if $i0 != -1 goto label08;

        $i0 = specialinvoke r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_ntk()>();

     label06:
        lookupswitch($i0)
        {
            case 11: goto label12;
            case 12: goto label16;
            case 13: goto label13;
            case 14: goto label17;
            case 15: goto label09;
            default: goto label07;
        };

     label07:
        $r2 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_la1>;

        $i0 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_gen>;

        $r2[1] = $i0;

        specialinvoke r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token jj_consume_token(int)>(-1);

        $r4 = new org.apache.james.mime4j.field.structured.parser.ParseException;

        specialinvoke $r4.<org.apache.james.mime4j.field.structured.parser.ParseException: void <init>()>();

        throw $r4;

     label08:
        $i0 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_ntk>;

        goto label06;

     label09:
        $r5 = specialinvoke r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token jj_consume_token(int)>(15);

        if z1 == 0 goto label11;

        z1 = 0;

     label10:
        $r3 = $r5.<org.apache.james.mime4j.field.structured.parser.Token: java.lang.String image>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        goto label01;

     label11:
        if z0 == 0 goto label10;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        z0 = 0;

        goto label10;

     label12:
        $r5 = specialinvoke r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token jj_consume_token(int)>(11);

        $r3 = $r5.<org.apache.james.mime4j.field.structured.parser.Token: java.lang.String image>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        goto label01;

     label13:
        $r5 = specialinvoke r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token jj_consume_token(int)>(13);

        if z1 == 0 goto label15;

        z1 = 0;

     label14:
        $r3 = $r5.<org.apache.james.mime4j.field.structured.parser.Token: java.lang.String image>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        goto label01;

     label15:
        if z0 == 0 goto label14;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        z0 = 0;

        goto label14;

     label16:
        specialinvoke r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token jj_consume_token(int)>(12);

        $z2 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: boolean preserveFolding>;

        if $z2 == 0 goto label01;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\r\n");

        goto label01;

     label17:
        specialinvoke r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token jj_consume_token(int)>(14);

        z0 = 1;

        goto label01;
    }
    private org.apache.james.mime4j.field.structured.parser.Token jj_consume_token(int) throws org.apache.james.mime4j.field.structured.parser.ParseException
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        int $i0, $i1;
        org.apache.james.mime4j.field.structured.parser.Token r1, $r2, $r4;
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager $r3;
        org.apache.james.mime4j.field.structured.parser.ParseException $r5;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        $i0 := @parameter0: int;

        r1 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token>;

        $r2 = r1.<org.apache.james.mime4j.field.structured.parser.Token: org.apache.james.mime4j.field.structured.parser.Token next>;

        if $r2 == null goto label2;

        $r2 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token>;

        $r2 = $r2.<org.apache.james.mime4j.field.structured.parser.Token: org.apache.james.mime4j.field.structured.parser.Token next>;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token> = $r2;

     label1:
        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_ntk> = -1;

        $r2 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token>;

        $i1 = $r2.<org.apache.james.mime4j.field.structured.parser.Token: int kind>;

        if $i1 != $i0 goto label3;

        $i0 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_gen>;

        $i0 = $i0 + 1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_gen> = $i0;

        r1 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token>;

        return r1;

     label2:
        $r2 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token>;

        $r3 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager token_source>;

        $r4 = virtualinvoke $r3.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager: org.apache.james.mime4j.field.structured.parser.Token getNextToken()>();

        $r2.<org.apache.james.mime4j.field.structured.parser.Token: org.apache.james.mime4j.field.structured.parser.Token next> = $r4;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token> = $r4;

        goto label1;

     label3:
        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token> = r1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_kind> = $i0;

        $r5 = virtualinvoke r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.ParseException generateParseException()>();

        throw $r5;
    }
    private static void jj_la1_init_0()
    {
        int[] $r0;

        $r0 = newarray (int)[2];

        $r0[0] = 63488;

        $r0[1] = 63488;

        <org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_la1_0> = $r0;

        return;
    }
    private int jj_ntk()
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        org.apache.james.mime4j.field.structured.parser.Token $r1, $r2;
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager $r3;
        int $i0;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        $r1 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token>;

        $r1 = $r1.<org.apache.james.mime4j.field.structured.parser.Token: org.apache.james.mime4j.field.structured.parser.Token next>;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token jj_nt> = $r1;

        if $r1 != null goto label1;

        $r2 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token>;

        $r3 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager token_source>;

        $r1 = virtualinvoke $r3.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager: org.apache.james.mime4j.field.structured.parser.Token getNextToken()>();

        $r2.<org.apache.james.mime4j.field.structured.parser.Token: org.apache.james.mime4j.field.structured.parser.Token next> = $r1;

        $i0 = $r1.<org.apache.james.mime4j.field.structured.parser.Token: int kind>;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_ntk> = $i0;

        return $i0;

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token jj_nt>;

        $i0 = $r1.<org.apache.james.mime4j.field.structured.parser.Token: int kind>;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_ntk> = $i0;

        return $i0;
    }
    public void ReInit(java.io.InputStream)
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        $r1 := @parameter0: java.io.InputStream;

        virtualinvoke r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: void ReInit(java.io.InputStream,java.lang.String)>($r1, null);

        return;
    }
    public void ReInit(java.io.InputStream, java.lang.String)
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        java.io.InputStream $r1;
        java.lang.String $r2;
        java.io.UnsupportedEncodingException r3;
        org.apache.james.mime4j.field.structured.parser.SimpleCharStream $r4;
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager $r5;
        org.apache.james.mime4j.field.structured.parser.Token $r6;
        int i0;
        int[] $r7;
        java.lang.RuntimeException $r8;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.lang.String;

        $r4 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.SimpleCharStream jj_input_stream>;

     label1:
        virtualinvoke $r4.<org.apache.james.mime4j.field.structured.parser.SimpleCharStream: void ReInit(java.io.InputStream,java.lang.String,int,int)>($r1, $r2, 1, 1);

     label2:
        $r5 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager token_source>;

        $r4 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.SimpleCharStream jj_input_stream>;

        virtualinvoke $r5.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager: void ReInit(org.apache.james.mime4j.field.structured.parser.SimpleCharStream)>($r4);

        $r6 = new org.apache.james.mime4j.field.structured.parser.Token;

        specialinvoke $r6.<org.apache.james.mime4j.field.structured.parser.Token: void <init>()>();

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token> = $r6;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_ntk> = -1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_gen> = 0;

        i0 = 0;

     label3:
        if i0 >= 2 goto label5;

        $r7 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_la1>;

        $r7[i0] = -1;

        i0 = i0 + 1;

        goto label3;

     label4:
        r3 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r3);

        throw $r8;

     label5:
        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label4;
    }
    public void ReInit(java.io.Reader)
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        java.io.Reader $r1;
        org.apache.james.mime4j.field.structured.parser.SimpleCharStream $r2;
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager $r3;
        org.apache.james.mime4j.field.structured.parser.Token $r4;
        int i0;
        int[] $r5;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        $r1 := @parameter0: java.io.Reader;

        $r2 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.SimpleCharStream jj_input_stream>;

        virtualinvoke $r2.<org.apache.james.mime4j.field.structured.parser.SimpleCharStream: void ReInit(java.io.Reader,int,int)>($r1, 1, 1);

        $r3 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager token_source>;

        $r2 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.SimpleCharStream jj_input_stream>;

        virtualinvoke $r3.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager: void ReInit(org.apache.james.mime4j.field.structured.parser.SimpleCharStream)>($r2);

        $r4 = new org.apache.james.mime4j.field.structured.parser.Token;

        specialinvoke $r4.<org.apache.james.mime4j.field.structured.parser.Token: void <init>()>();

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token> = $r4;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_ntk> = -1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_gen> = 0;

        i0 = 0;

     label1:
        if i0 >= 2 goto label2;

        $r5 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_la1>;

        $r5[i0] = -1;

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }
    public void ReInit(org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager)
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager $r1;
        org.apache.james.mime4j.field.structured.parser.Token $r2;
        int i0;
        int[] $r3;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        $r1 := @parameter0: org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager token_source> = $r1;

        $r2 = new org.apache.james.mime4j.field.structured.parser.Token;

        specialinvoke $r2.<org.apache.james.mime4j.field.structured.parser.Token: void <init>()>();

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token> = $r2;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_ntk> = -1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_gen> = 0;

        i0 = 0;

     label1:
        if i0 >= 2 goto label2;

        $r3 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_la1>;

        $r3[i0] = -1;

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }
    public final void disable_tracing()
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        return;
    }
    public final void enable_tracing()
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        return;
    }
    public org.apache.james.mime4j.field.structured.parser.ParseException generateParseException()
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        int[][] r1;
        boolean[] r2;
        java.util.List $r3;
        int $i0, $i1, $i2, $i3;
        int[] $r4;
        boolean $z0;
        java.lang.Object $r5;
        org.apache.james.mime4j.field.structured.parser.ParseException $r6;
        org.apache.james.mime4j.field.structured.parser.Token $r7;
        java.lang.String[] $r8;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        $r3 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: java.util.List jj_expentries>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        r2 = newarray (boolean)[18];

        $i0 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_kind>;

        if $i0 < 0 goto label01;

        $i0 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_kind>;

        r2[$i0] = 1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_kind> = -1;

     label01:
        $i0 = 0;

     label02:
        if $i0 >= 2 goto label06;

        $r4 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_la1>;

        $i1 = $r4[$i0];

        $i2 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_gen>;

        if $i1 != $i2 goto label05;

        $i1 = 0;

     label03:
        if $i1 >= 32 goto label05;

        $r4 = <org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_la1_0>;

        $i2 = $r4[$i0];

        $i3 = 1 << $i1;

        $i2 = $i2 & $i3;

        if $i2 == 0 goto label04;

        r2[$i1] = 1;

     label04:
        $i1 = $i1 + 1;

        goto label03;

     label05:
        $i0 = $i0 + 1;

        goto label02;

     label06:
        $i0 = 0;

     label07:
        if $i0 >= 18 goto label09;

        $z0 = r2[$i0];

        if $z0 == 0 goto label08;

        $r4 = newarray (int)[1];

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_expentry> = $r4;

        $r4 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_expentry>;

        $r4[0] = $i0;

        $r3 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: java.util.List jj_expentries>;

        $r4 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int[] jj_expentry>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

     label08:
        $i0 = $i0 + 1;

        goto label07;

     label09:
        $r3 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: java.util.List jj_expentries>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        r1 = newarray (int[])[$i0];

        $i0 = 0;

     label10:
        $r3 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: java.util.List jj_expentries>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 >= $i1 goto label11;

        $r3 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: java.util.List jj_expentries>;

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (int[]) $r5;

        r1[$i0] = $r4;

        $i0 = $i0 + 1;

        goto label10;

     label11:
        $r6 = new org.apache.james.mime4j.field.structured.parser.ParseException;

        $r7 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token>;

        $r8 = <org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: java.lang.String[] tokenImage>;

        specialinvoke $r6.<org.apache.james.mime4j.field.structured.parser.ParseException: void <init>(org.apache.james.mime4j.field.structured.parser.Token,int[][],java.lang.String[])>($r7, r1, $r8);

        return $r6;
    }
    public final org.apache.james.mime4j.field.structured.parser.Token getNextToken()
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        org.apache.james.mime4j.field.structured.parser.Token $r1, $r2;
        int $i0;
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager $r3;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        $r1 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token>;

        $r1 = $r1.<org.apache.james.mime4j.field.structured.parser.Token: org.apache.james.mime4j.field.structured.parser.Token next>;

        if $r1 == null goto label2;

        $r1 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token>;

        $r1 = $r1.<org.apache.james.mime4j.field.structured.parser.Token: org.apache.james.mime4j.field.structured.parser.Token next>;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token> = $r1;

     label1:
        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_ntk> = -1;

        $i0 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_gen>;

        $i0 = $i0 + 1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: int jj_gen> = $i0;

        $r1 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token>;

        return $r1;

     label2:
        $r2 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token>;

        $r3 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager token_source>;

        $r1 = virtualinvoke $r3.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager: org.apache.james.mime4j.field.structured.parser.Token getNextToken()>();

        $r2.<org.apache.james.mime4j.field.structured.parser.Token: org.apache.james.mime4j.field.structured.parser.Token next> = $r1;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token> = $r1;

        goto label1;
    }
    public final org.apache.james.mime4j.field.structured.parser.Token getToken(int)
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        int $i0, i1;
        org.apache.james.mime4j.field.structured.parser.Token $r1, r2, r3;
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager $r4;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        $i0 := @parameter0: int;

        i1 = 0;

        r2 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.Token token>;

     label1:
        if i1 >= $i0 goto label4;

        $r1 = r2.<org.apache.james.mime4j.field.structured.parser.Token: org.apache.james.mime4j.field.structured.parser.Token next>;

        if $r1 == null goto label3;

        r3 = r2.<org.apache.james.mime4j.field.structured.parser.Token: org.apache.james.mime4j.field.structured.parser.Token next>;

     label2:
        i1 = i1 + 1;

        r2 = r3;

        goto label1;

     label3:
        $r4 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager token_source>;

        $r1 = virtualinvoke $r4.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager: org.apache.james.mime4j.field.structured.parser.Token getNextToken()>();

        r3 = $r1;

        r2.<org.apache.james.mime4j.field.structured.parser.Token: org.apache.james.mime4j.field.structured.parser.Token next> = $r1;

        goto label2;

     label4:
        return r2;
    }
    public boolean isFoldingPreserved()
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        boolean z0;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        z0 = r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: boolean preserveFolding>;

        return z0;
    }
    public java.lang.String parse() throws org.apache.james.mime4j.field.structured.parser.ParseException
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        org.apache.james.mime4j.field.structured.parser.TokenMgrError r1;
        java.lang.String $r2;
        org.apache.james.mime4j.field.structured.parser.ParseException $r3;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

     label1:
        $r2 = specialinvoke r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: java.lang.String doParse()>();

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $r3 = new org.apache.james.mime4j.field.structured.parser.ParseException;

        specialinvoke $r3.<org.apache.james.mime4j.field.structured.parser.ParseException: void <init>(java.lang.Throwable)>(r1);

        throw $r3;

        catch org.apache.james.mime4j.field.structured.parser.TokenMgrError from label1 to label2 with label3;
    }
    public void setFoldingPreserved(boolean)
    {
        org.apache.james.mime4j.field.structured.parser.StructuredFieldParser r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.StructuredFieldParser;

        $z0 := @parameter0: boolean;

        r0.<org.apache.james.mime4j.field.structured.parser.StructuredFieldParser: boolean preserveFolding> = $z0;

        return;
    }
