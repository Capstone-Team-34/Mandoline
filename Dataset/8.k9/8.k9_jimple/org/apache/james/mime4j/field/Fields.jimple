org.apache.james.mime4j.field.Fields extends java.lang.Object
private static final java.util.regex.Pattern FIELD_NAME_PATTERN
    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[\\x21-\\x39\\x3b-\\x7e]+");

        <org.apache.james.mime4j.field.Fields: java.util.regex.Pattern FIELD_NAME_PATTERN> = $r0;

        return;
    }
    private void <init>()
    {
        org.apache.james.mime4j.field.Fields r0;

        r0 := @this: org.apache.james.mime4j.field.Fields;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static org.apache.james.mime4j.dom.field.AddressListField addressList(java.lang.String, java.lang.Iterable)
    {
        java.lang.String $r0;
        java.lang.Iterable r1;
        org.apache.james.mime4j.dom.field.AddressListField $r2;

        $r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Iterable;

        staticinvoke <org.apache.james.mime4j.field.Fields: void checkValidFieldName(java.lang.String)>($r0);

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.AddressListField addressList0(java.lang.String,java.lang.Iterable)>($r0, r1);

        return $r2;
    }
    private static org.apache.james.mime4j.dom.field.AddressListField addressList0(java.lang.String, java.lang.Iterable)
    {
        java.lang.String $r0, $r2;
        java.lang.Iterable r1;
        org.apache.james.mime4j.dom.FieldParser $r3;
        org.apache.james.mime4j.dom.field.ParsedField $r4;
        org.apache.james.mime4j.dom.field.AddressListField $r5;

        $r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Iterable;

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: java.lang.String encodeAddresses(java.lang.Iterable)>(r1);

        $r3 = <org.apache.james.mime4j.field.AddressListFieldImpl: org.apache.james.mime4j.dom.FieldParser PARSER>;

        $r4 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.dom.FieldParser,java.lang.String,java.lang.String)>($r3, $r0, $r2);

        $r5 = (org.apache.james.mime4j.dom.field.AddressListField) $r4;

        return $r5;
    }
    public static org.apache.james.mime4j.dom.field.AddressListField bcc(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        org.apache.james.mime4j.dom.field.AddressListField $r1;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.AddressListField addressList0(java.lang.String,java.lang.Iterable)>("Bcc", r0);

        return $r1;
    }
    public static org.apache.james.mime4j.dom.field.AddressListField bcc(org.apache.james.mime4j.dom.address.Address)
    {
        org.apache.james.mime4j.dom.address.Address $r0;
        java.util.Set $r1;
        org.apache.james.mime4j.dom.field.AddressListField $r2;

        $r0 := @parameter0: org.apache.james.mime4j.dom.address.Address;

        $r1 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r0);

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.AddressListField addressList0(java.lang.String,java.lang.Iterable)>("Bcc", $r1);

        return $r2;
    }
    public static transient org.apache.james.mime4j.dom.field.AddressListField bcc(org.apache.james.mime4j.dom.address.Address[])
    {
        org.apache.james.mime4j.dom.address.Address[] $r0;
        java.util.List $r1;
        org.apache.james.mime4j.dom.field.AddressListField $r2;

        $r0 := @parameter0: org.apache.james.mime4j.dom.address.Address[];

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.AddressListField addressList0(java.lang.String,java.lang.Iterable)>("Bcc", $r1);

        return $r2;
    }
    public static org.apache.james.mime4j.dom.field.AddressListField cc(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        org.apache.james.mime4j.dom.field.AddressListField $r1;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.AddressListField addressList0(java.lang.String,java.lang.Iterable)>("Cc", r0);

        return $r1;
    }
    public static org.apache.james.mime4j.dom.field.AddressListField cc(org.apache.james.mime4j.dom.address.Address)
    {
        org.apache.james.mime4j.dom.address.Address $r0;
        java.util.Set $r1;
        org.apache.james.mime4j.dom.field.AddressListField $r2;

        $r0 := @parameter0: org.apache.james.mime4j.dom.address.Address;

        $r1 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r0);

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.AddressListField addressList0(java.lang.String,java.lang.Iterable)>("Cc", $r1);

        return $r2;
    }
    public static transient org.apache.james.mime4j.dom.field.AddressListField cc(org.apache.james.mime4j.dom.address.Address[])
    {
        org.apache.james.mime4j.dom.address.Address[] $r0;
        java.util.List $r1;
        org.apache.james.mime4j.dom.field.AddressListField $r2;

        $r0 := @parameter0: org.apache.james.mime4j.dom.address.Address[];

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.AddressListField addressList0(java.lang.String,java.lang.Iterable)>("Cc", $r1);

        return $r2;
    }
    private static void checkValidFieldName(java.lang.String)
    {
        java.lang.String $r0;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.james.mime4j.field.Fields: java.util.regex.Pattern FIELD_NAME_PATTERN>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean matches()>();

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid field name");

        throw $r3;

     label1:
        return;
    }
    public static org.apache.james.mime4j.dom.field.ContentDispositionField contentDisposition(java.lang.String)
    {
        java.lang.String $r0;
        org.apache.james.mime4j.dom.field.ParsedField $r1;
        org.apache.james.mime4j.dom.FieldParser $r2;
        org.apache.james.mime4j.dom.field.ContentDispositionField $r3;

        $r0 := @parameter0: java.lang.String;

        $r2 = <org.apache.james.mime4j.field.ContentDispositionFieldImpl: org.apache.james.mime4j.dom.FieldParser PARSER>;

        $r1 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.dom.FieldParser,java.lang.String,java.lang.String)>($r2, "Content-Disposition", $r0);

        $r3 = (org.apache.james.mime4j.dom.field.ContentDispositionField) $r1;

        return $r3;
    }
    public static org.apache.james.mime4j.dom.field.ContentDispositionField contentDisposition(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        org.apache.james.mime4j.dom.field.ContentDispositionField $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ContentDispositionField contentDisposition(java.lang.String,java.lang.String,long,java.util.Date,java.util.Date,java.util.Date)>($r0, $r1, -1L, null, null, null);

        return $r2;
    }
    public static org.apache.james.mime4j.dom.field.ContentDispositionField contentDisposition(java.lang.String, java.lang.String, long)
    {
        java.lang.String $r0, $r1;
        long $l0;
        org.apache.james.mime4j.dom.field.ContentDispositionField $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ContentDispositionField contentDisposition(java.lang.String,java.lang.String,long,java.util.Date,java.util.Date,java.util.Date)>($r0, $r1, $l0, null, null, null);

        return $r2;
    }
    public static org.apache.james.mime4j.dom.field.ContentDispositionField contentDisposition(java.lang.String, java.lang.String, long, java.util.Date, java.util.Date, java.util.Date)
    {
        java.lang.String $r0, $r1;
        long $l0;
        java.util.Date $r2, $r3, $r4;
        java.util.HashMap r5;
        byte $b1;
        org.apache.james.mime4j.dom.field.ContentDispositionField $r6;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        $r2 := @parameter3: java.util.Date;

        $r3 := @parameter4: java.util.Date;

        $r4 := @parameter5: java.util.Date;

        r5 = new java.util.HashMap;

        specialinvoke r5.<java.util.HashMap: void <init>()>();

        if $r1 == null goto label1;

        interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("filename", $r1);

     label1:
        $b1 = $l0 cmp 0L;

        if $b1 < 0 goto label2;

        $r1 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("size", $r1);

     label2:
        if $r2 == null goto label3;

        $r1 = staticinvoke <org.apache.james.mime4j.util.MimeUtil: java.lang.String formatDate(java.util.Date,java.util.TimeZone)>($r2, null);

        interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("creation-date", $r1);

     label3:
        if $r3 == null goto label4;

        $r1 = staticinvoke <org.apache.james.mime4j.util.MimeUtil: java.lang.String formatDate(java.util.Date,java.util.TimeZone)>($r3, null);

        interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("modification-date", $r1);

     label4:
        if $r4 == null goto label5;

        $r1 = staticinvoke <org.apache.james.mime4j.util.MimeUtil: java.lang.String formatDate(java.util.Date,java.util.TimeZone)>($r4, null);

        interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("read-date", $r1);

     label5:
        $r6 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ContentDispositionField contentDisposition(java.lang.String,java.util.Map)>($r0, r5);

        return $r6;
    }
    public static org.apache.james.mime4j.dom.field.ContentDispositionField contentDisposition(java.lang.String, java.util.Map)
    {
        java.lang.String $r0, $r11;
        java.util.Map r1;
        java.lang.StringBuilder r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        org.apache.james.mime4j.dom.FieldParser $r4;
        org.apache.james.mime4j.dom.field.ParsedField $r5;
        org.apache.james.mime4j.dom.field.ContentDispositionField $r6;
        java.util.Set $r7;
        java.util.Iterator $r8;
        java.lang.Object $r9;
        java.util.Map$Entry r10;

        $r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Map;

        $z0 = staticinvoke <org.apache.james.mime4j.field.Fields: boolean isValidDispositionType(java.lang.String)>($r0);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label1:
        if r1 == null goto label2;

        $z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label3;

     label2:
        $r4 = <org.apache.james.mime4j.field.ContentDispositionFieldImpl: org.apache.james.mime4j.dom.FieldParser PARSER>;

        $r5 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.dom.FieldParser,java.lang.String,java.lang.String)>($r4, "Content-Disposition", $r0);

        $r6 = (org.apache.james.mime4j.dom.field.ContentDispositionField) $r5;

        return $r6;

     label3:
        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        $r7 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.util.Map$Entry) $r9;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r9 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r0 = (java.lang.String) $r9;

        $r9 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = (java.lang.String) $r9;

        $r0 = staticinvoke <org.apache.james.mime4j.codec.EncoderUtil: java.lang.String encodeHeaderParameter(java.lang.String,java.lang.String)>($r0, $r11);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        goto label4;

     label5:
        $r0 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ContentDispositionField contentDisposition(java.lang.String)>($r0);

        return $r6;
    }
    public static org.apache.james.mime4j.dom.field.ContentTransferEncodingField contentTransferEncoding(java.lang.String)
    {
        java.lang.String $r0;
        org.apache.james.mime4j.dom.field.ParsedField $r1;
        org.apache.james.mime4j.dom.FieldParser $r2;
        org.apache.james.mime4j.dom.field.ContentTransferEncodingField $r3;

        $r0 := @parameter0: java.lang.String;

        $r2 = <org.apache.james.mime4j.field.ContentTransferEncodingFieldImpl: org.apache.james.mime4j.dom.FieldParser PARSER>;

        $r1 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.dom.FieldParser,java.lang.String,java.lang.String)>($r2, "Content-Transfer-Encoding", $r0);

        $r3 = (org.apache.james.mime4j.dom.field.ContentTransferEncodingField) $r1;

        return $r3;
    }
    public static org.apache.james.mime4j.dom.field.ContentTypeField contentType(java.lang.String)
    {
        java.lang.String $r0;
        org.apache.james.mime4j.dom.field.ParsedField $r1;
        org.apache.james.mime4j.dom.FieldParser $r2;
        org.apache.james.mime4j.dom.field.ContentTypeField $r3;

        $r0 := @parameter0: java.lang.String;

        $r2 = <org.apache.james.mime4j.field.ContentTypeFieldImpl: org.apache.james.mime4j.dom.FieldParser PARSER>;

        $r1 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.dom.FieldParser,java.lang.String,java.lang.String)>($r2, "Content-Type", $r0);

        $r3 = (org.apache.james.mime4j.dom.field.ContentTypeField) $r1;

        return $r3;
    }
    public static org.apache.james.mime4j.dom.field.ContentTypeField contentType(java.lang.String, java.util.Map)
    {
        java.lang.String $r0, $r11;
        java.util.Map r1;
        java.lang.StringBuilder r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        org.apache.james.mime4j.dom.FieldParser $r4;
        org.apache.james.mime4j.dom.field.ParsedField $r5;
        org.apache.james.mime4j.dom.field.ContentTypeField $r6;
        java.util.Set $r7;
        java.util.Iterator $r8;
        java.lang.Object $r9;
        java.util.Map$Entry r10;

        $r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Map;

        $z0 = staticinvoke <org.apache.james.mime4j.field.Fields: boolean isValidMimeType(java.lang.String)>($r0);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label1:
        if r1 == null goto label2;

        $z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label3;

     label2:
        $r4 = <org.apache.james.mime4j.field.ContentTypeFieldImpl: org.apache.james.mime4j.dom.FieldParser PARSER>;

        $r5 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.dom.FieldParser,java.lang.String,java.lang.String)>($r4, "Content-Type", $r0);

        $r6 = (org.apache.james.mime4j.dom.field.ContentTypeField) $r5;

        return $r6;

     label3:
        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        $r7 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.util.Map$Entry) $r9;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r9 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r0 = (java.lang.String) $r9;

        $r9 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = (java.lang.String) $r9;

        $r0 = staticinvoke <org.apache.james.mime4j.codec.EncoderUtil: java.lang.String encodeHeaderParameter(java.lang.String,java.lang.String)>($r0, $r11);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        goto label4;

     label5:
        $r0 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ContentTypeField contentType(java.lang.String)>($r0);

        return $r6;
    }
    public static org.apache.james.mime4j.dom.field.DateTimeField date(java.lang.String, java.util.Date)
    {
        java.lang.String $r0;
        java.util.Date $r1;
        org.apache.james.mime4j.dom.field.DateTimeField $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.Date;

        staticinvoke <org.apache.james.mime4j.field.Fields: void checkValidFieldName(java.lang.String)>($r0);

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.DateTimeField date0(java.lang.String,java.util.Date,java.util.TimeZone)>($r0, $r1, null);

        return $r2;
    }
    public static org.apache.james.mime4j.dom.field.DateTimeField date(java.lang.String, java.util.Date, java.util.TimeZone)
    {
        java.lang.String $r0;
        java.util.Date $r1;
        java.util.TimeZone $r2;
        org.apache.james.mime4j.dom.field.DateTimeField $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.Date;

        $r2 := @parameter2: java.util.TimeZone;

        staticinvoke <org.apache.james.mime4j.field.Fields: void checkValidFieldName(java.lang.String)>($r0);

        $r3 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.DateTimeField date0(java.lang.String,java.util.Date,java.util.TimeZone)>($r0, $r1, $r2);

        return $r3;
    }
    public static org.apache.james.mime4j.dom.field.DateTimeField date(java.util.Date)
    {
        java.util.Date $r0;
        org.apache.james.mime4j.dom.field.DateTimeField $r1;

        $r0 := @parameter0: java.util.Date;

        $r1 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.DateTimeField date0(java.lang.String,java.util.Date,java.util.TimeZone)>("Date", $r0, null);

        return $r1;
    }
    private static org.apache.james.mime4j.dom.field.DateTimeField date0(java.lang.String, java.util.Date, java.util.TimeZone)
    {
        java.lang.String $r0, $r3;
        java.util.Date $r1;
        java.util.TimeZone $r2;
        org.apache.james.mime4j.dom.FieldParser $r4;
        org.apache.james.mime4j.dom.field.ParsedField $r5;
        org.apache.james.mime4j.dom.field.DateTimeField $r6;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.Date;

        $r2 := @parameter2: java.util.TimeZone;

        $r3 = staticinvoke <org.apache.james.mime4j.util.MimeUtil: java.lang.String formatDate(java.util.Date,java.util.TimeZone)>($r1, $r2);

        $r4 = <org.apache.james.mime4j.field.DateTimeFieldImpl: org.apache.james.mime4j.dom.FieldParser PARSER>;

        $r5 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.dom.FieldParser,java.lang.String,java.lang.String)>($r4, $r0, $r3);

        $r6 = (org.apache.james.mime4j.dom.field.DateTimeField) $r5;

        return $r6;
    }
    private static java.lang.String encodeAddresses(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        java.lang.StringBuilder r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.apache.james.mime4j.dom.address.Address r4;
        int $i0;
        org.apache.james.mime4j.field.address.AddressFormatter $r5;
        java.lang.String $r6;

        r0 := @parameter0: java.lang.Iterable;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.james.mime4j.dom.address.Address) $r3;

        $i0 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        $r5 = <org.apache.james.mime4j.field.address.AddressFormatter: org.apache.james.mime4j.field.address.AddressFormatter DEFAULT>;

        virtualinvoke $r5.<org.apache.james.mime4j.field.address.AddressFormatter: void encode(java.lang.StringBuilder,org.apache.james.mime4j.dom.address.Address)>(r1, r4);

        goto label1;

     label3:
        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
    public static org.apache.james.mime4j.dom.field.MailboxListField 'from'(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        org.apache.james.mime4j.dom.field.MailboxListField $r1;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.MailboxListField mailboxList0(java.lang.String,java.lang.Iterable)>("From", r0);

        return $r1;
    }
    public static org.apache.james.mime4j.dom.field.MailboxListField 'from'(org.apache.james.mime4j.dom.address.Mailbox)
    {
        org.apache.james.mime4j.dom.address.Mailbox $r0;
        java.util.Set $r1;
        org.apache.james.mime4j.dom.field.MailboxListField $r2;

        $r0 := @parameter0: org.apache.james.mime4j.dom.address.Mailbox;

        $r1 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r0);

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.MailboxListField mailboxList0(java.lang.String,java.lang.Iterable)>("From", $r1);

        return $r2;
    }
    public static transient org.apache.james.mime4j.dom.field.MailboxListField 'from'(org.apache.james.mime4j.dom.address.Mailbox[])
    {
        org.apache.james.mime4j.dom.address.Mailbox[] $r0;
        java.util.List $r1;
        org.apache.james.mime4j.dom.field.MailboxListField $r2;

        $r0 := @parameter0: org.apache.james.mime4j.dom.address.Mailbox[];

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.MailboxListField mailboxList0(java.lang.String,java.lang.Iterable)>("From", $r1);

        return $r2;
    }
    private static boolean isValidDispositionType(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return 0;

     label1:
        $z0 = staticinvoke <org.apache.james.mime4j.codec.EncoderUtil: boolean isToken(java.lang.String)>($r0);

        return $z0;
    }
    private static boolean isValidMimeType(java.lang.String)
    {
        java.lang.String $r0, $r1;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(47);

        if $i0 == -1 goto label2;

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i0 = $i0 + 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        $z0 = staticinvoke <org.apache.james.mime4j.codec.EncoderUtil: boolean isToken(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        $z0 = staticinvoke <org.apache.james.mime4j.codec.EncoderUtil: boolean isToken(java.lang.String)>($r0);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }
    public static org.apache.james.mime4j.dom.field.MailboxField mailbox(java.lang.String, org.apache.james.mime4j.dom.address.Mailbox)
    {
        java.lang.String $r0;
        org.apache.james.mime4j.dom.address.Mailbox $r1;
        org.apache.james.mime4j.dom.field.MailboxField $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: org.apache.james.mime4j.dom.address.Mailbox;

        staticinvoke <org.apache.james.mime4j.field.Fields: void checkValidFieldName(java.lang.String)>($r0);

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.MailboxField mailbox0(java.lang.String,org.apache.james.mime4j.dom.address.Mailbox)>($r0, $r1);

        return $r2;
    }
    private static org.apache.james.mime4j.dom.field.MailboxField mailbox0(java.lang.String, org.apache.james.mime4j.dom.address.Mailbox)
    {
        java.lang.String $r0, $r3;
        org.apache.james.mime4j.dom.address.Mailbox $r1;
        java.util.Set $r2;
        org.apache.james.mime4j.dom.FieldParser $r4;
        org.apache.james.mime4j.dom.field.ParsedField $r5;
        org.apache.james.mime4j.dom.field.MailboxField $r6;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: org.apache.james.mime4j.dom.address.Mailbox;

        $r2 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r1);

        $r3 = staticinvoke <org.apache.james.mime4j.field.Fields: java.lang.String encodeAddresses(java.lang.Iterable)>($r2);

        $r4 = <org.apache.james.mime4j.field.MailboxFieldImpl: org.apache.james.mime4j.dom.FieldParser PARSER>;

        $r5 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.dom.FieldParser,java.lang.String,java.lang.String)>($r4, $r0, $r3);

        $r6 = (org.apache.james.mime4j.dom.field.MailboxField) $r5;

        return $r6;
    }
    public static org.apache.james.mime4j.dom.field.MailboxListField mailboxList(java.lang.String, java.lang.Iterable)
    {
        java.lang.String $r0;
        java.lang.Iterable r1;
        org.apache.james.mime4j.dom.field.MailboxListField $r2;

        $r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Iterable;

        staticinvoke <org.apache.james.mime4j.field.Fields: void checkValidFieldName(java.lang.String)>($r0);

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.MailboxListField mailboxList0(java.lang.String,java.lang.Iterable)>($r0, r1);

        return $r2;
    }
    private static org.apache.james.mime4j.dom.field.MailboxListField mailboxList0(java.lang.String, java.lang.Iterable)
    {
        java.lang.String $r0, $r2;
        java.lang.Iterable r1;
        org.apache.james.mime4j.dom.FieldParser $r3;
        org.apache.james.mime4j.dom.field.ParsedField $r4;
        org.apache.james.mime4j.dom.field.MailboxListField $r5;

        $r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Iterable;

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: java.lang.String encodeAddresses(java.lang.Iterable)>(r1);

        $r3 = <org.apache.james.mime4j.field.MailboxListFieldImpl: org.apache.james.mime4j.dom.FieldParser PARSER>;

        $r4 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.dom.FieldParser,java.lang.String,java.lang.String)>($r3, $r0, $r2);

        $r5 = (org.apache.james.mime4j.dom.field.MailboxListField) $r4;

        return $r5;
    }
    public static org.apache.james.mime4j.dom.field.UnstructuredField messageId(java.lang.String)
    {
        java.lang.String $r0;
        org.apache.james.mime4j.dom.FieldParser $r1;
        org.apache.james.mime4j.dom.field.ParsedField $r2;
        org.apache.james.mime4j.dom.field.UnstructuredField $r3;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <org.apache.james.mime4j.util.MimeUtil: java.lang.String createUniqueMessageId(java.lang.String)>($r0);

        $r1 = <org.apache.james.mime4j.field.UnstructuredFieldImpl: org.apache.james.mime4j.dom.FieldParser PARSER>;

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.dom.FieldParser,java.lang.String,java.lang.String)>($r1, "Message-ID", $r0);

        $r3 = (org.apache.james.mime4j.dom.field.UnstructuredField) $r2;

        return $r3;
    }
    private static org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.dom.FieldParser, java.lang.String, java.lang.String)
    {
        org.apache.james.mime4j.dom.FieldParser r0;
        java.lang.String $r1, $r2;
        org.apache.james.mime4j.stream.RawField r3;
        org.apache.james.mime4j.dom.field.ParsedField $r4;
        org.apache.james.mime4j.codec.DecodeMonitor $r5;

        r0 := @parameter0: org.apache.james.mime4j.dom.FieldParser;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        r3 = new org.apache.james.mime4j.stream.RawField;

        specialinvoke r3.<org.apache.james.mime4j.stream.RawField: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        $r5 = <org.apache.james.mime4j.codec.DecodeMonitor: org.apache.james.mime4j.codec.DecodeMonitor SILENT>;

        $r4 = interfaceinvoke r0.<org.apache.james.mime4j.dom.FieldParser: org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor)>(r3, $r5);

        return $r4;
    }
    public static org.apache.james.mime4j.dom.field.AddressListField replyTo(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        org.apache.james.mime4j.dom.field.AddressListField $r1;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.AddressListField addressList0(java.lang.String,java.lang.Iterable)>("Reply-To", r0);

        return $r1;
    }
    public static org.apache.james.mime4j.dom.field.AddressListField replyTo(org.apache.james.mime4j.dom.address.Address)
    {
        org.apache.james.mime4j.dom.address.Address $r0;
        java.util.Set $r1;
        org.apache.james.mime4j.dom.field.AddressListField $r2;

        $r0 := @parameter0: org.apache.james.mime4j.dom.address.Address;

        $r1 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r0);

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.AddressListField addressList0(java.lang.String,java.lang.Iterable)>("Reply-To", $r1);

        return $r2;
    }
    public static transient org.apache.james.mime4j.dom.field.AddressListField replyTo(org.apache.james.mime4j.dom.address.Address[])
    {
        org.apache.james.mime4j.dom.address.Address[] $r0;
        java.util.List $r1;
        org.apache.james.mime4j.dom.field.AddressListField $r2;

        $r0 := @parameter0: org.apache.james.mime4j.dom.address.Address[];

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.AddressListField addressList0(java.lang.String,java.lang.Iterable)>("Reply-To", $r1);

        return $r2;
    }
    public static org.apache.james.mime4j.dom.field.MailboxField sender(org.apache.james.mime4j.dom.address.Mailbox)
    {
        org.apache.james.mime4j.dom.address.Mailbox $r0;
        org.apache.james.mime4j.dom.field.MailboxField $r1;

        $r0 := @parameter0: org.apache.james.mime4j.dom.address.Mailbox;

        $r1 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.MailboxField mailbox0(java.lang.String,org.apache.james.mime4j.dom.address.Mailbox)>("Sender", $r0);

        return $r1;
    }
    public static org.apache.james.mime4j.dom.field.UnstructuredField subject(java.lang.String)
    {
        java.lang.String $r0, $r1;
        int i0;
        org.apache.james.mime4j.codec.EncoderUtil$Usage $r2;
        org.apache.james.mime4j.dom.FieldParser $r3;
        org.apache.james.mime4j.dom.field.ParsedField $r4;
        org.apache.james.mime4j.dom.field.UnstructuredField $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 = "Subject";

        i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        i0 = i0 + 2;

        $r2 = <org.apache.james.mime4j.codec.EncoderUtil$Usage: org.apache.james.mime4j.codec.EncoderUtil$Usage TEXT_TOKEN>;

        $r0 = staticinvoke <org.apache.james.mime4j.codec.EncoderUtil: java.lang.String encodeIfNecessary(java.lang.String,org.apache.james.mime4j.codec.EncoderUtil$Usage,int)>($r0, $r2, i0);

        $r3 = <org.apache.james.mime4j.field.UnstructuredFieldImpl: org.apache.james.mime4j.dom.FieldParser PARSER>;

        $r4 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.dom.FieldParser,java.lang.String,java.lang.String)>($r3, "Subject", $r0);

        $r5 = (org.apache.james.mime4j.dom.field.UnstructuredField) $r4;

        return $r5;
    }
    public static org.apache.james.mime4j.dom.field.AddressListField 'to'(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        org.apache.james.mime4j.dom.field.AddressListField $r1;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.AddressListField addressList0(java.lang.String,java.lang.Iterable)>("To", r0);

        return $r1;
    }
    public static org.apache.james.mime4j.dom.field.AddressListField 'to'(org.apache.james.mime4j.dom.address.Address)
    {
        org.apache.james.mime4j.dom.address.Address $r0;
        java.util.Set $r1;
        org.apache.james.mime4j.dom.field.AddressListField $r2;

        $r0 := @parameter0: org.apache.james.mime4j.dom.address.Address;

        $r1 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r0);

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.AddressListField addressList0(java.lang.String,java.lang.Iterable)>("To", $r1);

        return $r2;
    }
    public static transient org.apache.james.mime4j.dom.field.AddressListField 'to'(org.apache.james.mime4j.dom.address.Address[])
    {
        org.apache.james.mime4j.dom.address.Address[] $r0;
        java.util.List $r1;
        org.apache.james.mime4j.dom.field.AddressListField $r2;

        $r0 := @parameter0: org.apache.james.mime4j.dom.address.Address[];

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.AddressListField addressList0(java.lang.String,java.lang.Iterable)>("To", $r1);

        return $r2;
    }
