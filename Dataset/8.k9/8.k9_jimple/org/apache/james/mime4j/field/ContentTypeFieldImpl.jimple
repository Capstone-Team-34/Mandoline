org.apache.james.mime4j.field.ContentTypeFieldImpl extends org.apache.james.mime4j.field.AbstractField implements org.apache.james.mime4j.dom.field.ContentTypeField
public static final org.apache.james.mime4j.dom.FieldParser PARSER
private java.lang.String mediaType
private java.lang.String mimeType
private java.util.Map parameters
private org.apache.james.mime4j.field.contenttype.parser.ParseException parseException
private boolean parsed
private java.lang.String subType
    static void <clinit>()
    {
        org.apache.james.mime4j.field.ContentTypeFieldImpl$1 $r0;

        $r0 = new org.apache.james.mime4j.field.ContentTypeFieldImpl$1;

        specialinvoke $r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl$1: void <init>()>();

        <org.apache.james.mime4j.field.ContentTypeFieldImpl: org.apache.james.mime4j.dom.FieldParser PARSER> = $r0;

        return;
    }
    void <init>(org.apache.james.mime4j.stream.Field, org.apache.james.mime4j.codec.DecodeMonitor)
    {
        org.apache.james.mime4j.field.ContentTypeFieldImpl r0;
        org.apache.james.mime4j.stream.Field $r1;
        org.apache.james.mime4j.codec.DecodeMonitor $r2;
        java.util.HashMap $r3;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldImpl;

        $r1 := @parameter0: org.apache.james.mime4j.stream.Field;

        $r2 := @parameter1: org.apache.james.mime4j.codec.DecodeMonitor;

        specialinvoke r0.<org.apache.james.mime4j.field.AbstractField: void <init>(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor)>($r1, $r2);

        r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: boolean parsed> = 0;

        r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: java.lang.String mimeType> = null;

        r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: java.lang.String mediaType> = null;

        r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: java.lang.String subType> = null;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: java.util.Map parameters> = $r3;

        return;
    }
    public static java.lang.String getCharset(org.apache.james.mime4j.dom.field.ContentTypeField)
    {
        org.apache.james.mime4j.dom.field.ContentTypeField $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @parameter0: org.apache.james.mime4j.dom.field.ContentTypeField;

        if $r0 == null goto label1;

        $r1 = interfaceinvoke $r0.<org.apache.james.mime4j.dom.field.ContentTypeField: java.lang.String getCharset()>();

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        return $r1;

     label1:
        return "us-ascii";
    }
    public static java.lang.String getMimeType(org.apache.james.mime4j.dom.field.ContentTypeField, org.apache.james.mime4j.dom.field.ContentTypeField)
    {
        org.apache.james.mime4j.dom.field.ContentTypeField $r0, $r1;
        java.lang.String $r2;
        boolean $z0;

        $r0 := @parameter0: org.apache.james.mime4j.dom.field.ContentTypeField;

        $r1 := @parameter1: org.apache.james.mime4j.dom.field.ContentTypeField;

        if $r0 == null goto label1;

        $r2 = interfaceinvoke $r0.<org.apache.james.mime4j.dom.field.ContentTypeField: java.lang.String getMimeType()>();

        if $r2 == null goto label1;

        $z0 = interfaceinvoke $r0.<org.apache.james.mime4j.dom.field.ContentTypeField: boolean isMultipart()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r0.<org.apache.james.mime4j.dom.field.ContentTypeField: java.lang.String getBoundary()>();

        if $r2 != null goto label3;

     label1:
        if $r1 == null goto label2;

        $z0 = interfaceinvoke $r1.<org.apache.james.mime4j.dom.field.ContentTypeField: boolean isMimeType(java.lang.String)>("multipart/digest");

        if $z0 == 0 goto label2;

        return "message/rfc822";

     label2:
        return "text/plain";

     label3:
        $r2 = interfaceinvoke $r0.<org.apache.james.mime4j.dom.field.ContentTypeField: java.lang.String getMimeType()>();

        return $r2;
    }
    private void parse()
    {
        org.apache.james.mime4j.field.ContentTypeFieldImpl r0;
        org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser r1;
        java.lang.String $r2, r8;
        java.io.StringReader $r3;
        java.lang.StringBuilder $r4;
        java.util.List $r5, $r6;
        int $i0, $i1;
        java.lang.Object $r7;
        java.util.Map $r9;
        org.apache.james.mime4j.field.contenttype.parser.ParseException r10;
        org.apache.james.mime4j.field.contenttype.parser.TokenMgrError r11;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldImpl;

        $r2 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: java.lang.String getBody()>();

        r1 = new org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser;

        $r3 = new java.io.StringReader;

        specialinvoke $r3.<java.io.StringReader: void <init>(java.lang.String)>($r2);

        specialinvoke r1.<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: void <init>(java.io.Reader)>($r3);

     label1:
        virtualinvoke r1.<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: void parseAll()>();

     label2:
        $r2 = virtualinvoke r1.<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: java.lang.String getType()>();

        r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: java.lang.String mediaType> = $r2;

        $r2 = virtualinvoke r1.<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: java.lang.String getSubType()>();

        r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: java.lang.String subType> = $r2;

        $r2 = r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: java.lang.String mediaType>;

        if $r2 == null goto label6;

        $r2 = r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: java.lang.String subType>;

        if $r2 == null goto label6;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: java.lang.String mediaType>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r2 = r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: java.lang.String subType>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: java.lang.String mimeType> = $r2;

        $r5 = virtualinvoke r1.<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: java.util.List getParamNames()>();

        $r6 = virtualinvoke r1.<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: java.util.List getParamValues()>();

        if $r5 == null goto label6;

        if $r6 == null goto label6;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label6;

        $r7 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i1);

        $r2 = (java.lang.String) $r7;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i1);

        r8 = (java.lang.String) $r7;

        $r9 = r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: java.util.Map parameters>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r8);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        r10 := @caughtexception;

        r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: org.apache.james.mime4j.field.contenttype.parser.ParseException parseException> = r10;

        goto label2;

     label5:
        r11 := @caughtexception;

        r10 = new org.apache.james.mime4j.field.contenttype.parser.ParseException;

        $r2 = virtualinvoke r11.<org.apache.james.mime4j.field.contenttype.parser.TokenMgrError: java.lang.String getMessage()>();

        specialinvoke r10.<org.apache.james.mime4j.field.contenttype.parser.ParseException: void <init>(java.lang.String)>($r2);

        r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: org.apache.james.mime4j.field.contenttype.parser.ParseException parseException> = r10;

        goto label2;

     label6:
        r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: boolean parsed> = 1;

        return;

        catch org.apache.james.mime4j.field.contenttype.parser.ParseException from label1 to label2 with label4;
        catch org.apache.james.mime4j.field.contenttype.parser.TokenMgrError from label1 to label2 with label5;
    }
    public java.lang.String getBoundary()
    {
        org.apache.james.mime4j.field.ContentTypeFieldImpl r0;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldImpl;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: java.lang.String getParameter(java.lang.String)>("boundary");

        return $r1;
    }
    public java.lang.String getCharset()
    {
        org.apache.james.mime4j.field.ContentTypeFieldImpl r0;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldImpl;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: java.lang.String getParameter(java.lang.String)>("charset");

        return $r1;
    }
    public java.lang.String getMediaType()
    {
        org.apache.james.mime4j.field.ContentTypeFieldImpl r0;
        boolean $z0;
        java.lang.String r1;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: void parse()>();

     label1:
        r1 = r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: java.lang.String mediaType>;

        return r1;
    }
    public java.lang.String getMimeType()
    {
        org.apache.james.mime4j.field.ContentTypeFieldImpl r0;
        boolean $z0;
        java.lang.String r1;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: void parse()>();

     label1:
        r1 = r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: java.lang.String mimeType>;

        return r1;
    }
    public java.lang.String getParameter(java.lang.String)
    {
        org.apache.james.mime4j.field.ContentTypeFieldImpl r0;
        java.lang.String $r1;
        boolean $z0;
        java.util.Map $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldImpl;

        $r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: void parse()>();

     label1:
        $r2 = r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: java.util.Map parameters>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r1 = (java.lang.String) $r3;

        return $r1;
    }
    public java.util.Map getParameters()
    {
        org.apache.james.mime4j.field.ContentTypeFieldImpl r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: void parse()>();

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: java.util.Map parameters>;

        $r1 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r1;
    }
    public volatile org.apache.james.mime4j.dom.field.ParseException getParseException()
    {
        org.apache.james.mime4j.field.ContentTypeFieldImpl r0;
        org.apache.james.mime4j.field.contenttype.parser.ParseException $r1;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldImpl;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: org.apache.james.mime4j.field.contenttype.parser.ParseException getParseException()>();

        return $r1;
    }
    public org.apache.james.mime4j.field.contenttype.parser.ParseException getParseException()
    {
        org.apache.james.mime4j.field.ContentTypeFieldImpl r0;
        boolean $z0;
        org.apache.james.mime4j.field.contenttype.parser.ParseException r1;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: void parse()>();

     label1:
        r1 = r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: org.apache.james.mime4j.field.contenttype.parser.ParseException parseException>;

        return r1;
    }
    public java.lang.String getSubType()
    {
        org.apache.james.mime4j.field.ContentTypeFieldImpl r0;
        boolean $z0;
        java.lang.String r1;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: void parse()>();

     label1:
        r1 = r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: java.lang.String subType>;

        return r1;
    }
    public boolean isMimeType(java.lang.String)
    {
        org.apache.james.mime4j.field.ContentTypeFieldImpl r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldImpl;

        $r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: void parse()>();

     label1:
        $r2 = r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: java.lang.String mimeType>;

        if $r2 == null goto label2;

        $r2 = r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: java.lang.String mimeType>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }
    public boolean isMultipart()
    {
        org.apache.james.mime4j.field.ContentTypeFieldImpl r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: void parse()>();

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: java.lang.String mimeType>;

        if $r1 == null goto label2;

        $r1 = r0.<org.apache.james.mime4j.field.ContentTypeFieldImpl: java.lang.String mimeType>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("multipart/");

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }
