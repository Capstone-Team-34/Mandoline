org.apache.james.mime4j.field.structured.parser.ParseException extends org.apache.james.mime4j.dom.field.ParseException
private static final long serialVersionUID
public org.apache.james.mime4j.field.structured.parser.Token currentToken
protected java.lang.String eol
public int[][] expectedTokenSequences
protected boolean specialConstructor
public java.lang.String[] tokenImage
    public void <init>()
    {
        org.apache.james.mime4j.field.structured.parser.ParseException r0;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.ParseException;

        specialinvoke r0.<org.apache.james.mime4j.dom.field.ParseException: void <init>(java.lang.String)>("Cannot parse field");

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("line.separator", "\n");

        r0.<org.apache.james.mime4j.field.structured.parser.ParseException: java.lang.String eol> = $r1;

        r0.<org.apache.james.mime4j.field.structured.parser.ParseException: boolean specialConstructor> = 0;

        return;
    }
    public void <init>(java.lang.String)
    {
        org.apache.james.mime4j.field.structured.parser.ParseException r0;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.ParseException;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.james.mime4j.dom.field.ParseException: void <init>(java.lang.String)>($r1);

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("line.separator", "\n");

        r0.<org.apache.james.mime4j.field.structured.parser.ParseException: java.lang.String eol> = $r1;

        r0.<org.apache.james.mime4j.field.structured.parser.ParseException: boolean specialConstructor> = 0;

        return;
    }
    public void <init>(java.lang.Throwable)
    {
        org.apache.james.mime4j.field.structured.parser.ParseException r0;
        java.lang.Throwable $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.ParseException;

        $r1 := @parameter0: java.lang.Throwable;

        specialinvoke r0.<org.apache.james.mime4j.dom.field.ParseException: void <init>(java.lang.Throwable)>($r1);

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("line.separator", "\n");

        r0.<org.apache.james.mime4j.field.structured.parser.ParseException: java.lang.String eol> = $r2;

        r0.<org.apache.james.mime4j.field.structured.parser.ParseException: boolean specialConstructor> = 0;

        return;
    }
    public void <init>(org.apache.james.mime4j.field.structured.parser.Token, int[][], java.lang.String[])
    {
        org.apache.james.mime4j.field.structured.parser.ParseException r0;
        org.apache.james.mime4j.field.structured.parser.Token $r1;
        int[][] $r2;
        java.lang.String[] $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.ParseException;

        $r1 := @parameter0: org.apache.james.mime4j.field.structured.parser.Token;

        $r2 := @parameter1: int[][];

        $r3 := @parameter2: java.lang.String[];

        specialinvoke r0.<org.apache.james.mime4j.dom.field.ParseException: void <init>(java.lang.String)>("");

        $r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("line.separator", "\n");

        r0.<org.apache.james.mime4j.field.structured.parser.ParseException: java.lang.String eol> = $r4;

        r0.<org.apache.james.mime4j.field.structured.parser.ParseException: boolean specialConstructor> = 1;

        r0.<org.apache.james.mime4j.field.structured.parser.ParseException: org.apache.james.mime4j.field.structured.parser.Token currentToken> = $r1;

        r0.<org.apache.james.mime4j.field.structured.parser.ParseException: int[][] expectedTokenSequences> = $r2;

        r0.<org.apache.james.mime4j.field.structured.parser.ParseException: java.lang.String[] tokenImage> = $r3;

        return;
    }
    protected java.lang.String add_escapes(java.lang.String)
    {
        org.apache.james.mime4j.field.structured.parser.ParseException r0;
        java.lang.String $r1, $r4;
        java.lang.StringBuffer r2;
        int i0, $i1, $i3;
        char $c2;
        java.lang.StringBuilder $r3;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.ParseException;

        $r1 := @parameter0: java.lang.String;

        r2 = new java.lang.StringBuffer;

        specialinvoke r2.<java.lang.StringBuffer: void <init>()>();

        i0 = 0;

     label01:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i0 >= $i1 goto label14;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i0);

        lookupswitch($c2)
        {
            case 0: goto label04;
            case 8: goto label05;
            case 9: goto label06;
            case 10: goto label07;
            case 12: goto label08;
            case 13: goto label09;
            case 34: goto label10;
            case 39: goto label11;
            case 92: goto label12;
            default: goto label02;
        };

     label02:
        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i0);

        if $c2 < 32 goto label03;

        if $c2 <= 126 goto label13;

     label03:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0000");

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($c2, 16);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\u");

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i1 = $i1 + -4;

        $i3 = virtualinvoke $r4.<java.lang.String: int length()>();

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>($i1, $i3);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label04:
        i0 = i0 + 1;

        goto label01;

     label05:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\b");

        goto label04;

     label06:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\t");

        goto label04;

     label07:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\n");

        goto label04;

     label08:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\f");

        goto label04;

     label09:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\r");

        goto label04;

     label10:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\\"");

        goto label04;

     label11:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\\'");

        goto label04;

     label12:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\\\");

        goto label04;

     label13:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label04;

     label14:
        $r1 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }
    public java.lang.String getMessage()
    {
        org.apache.james.mime4j.field.structured.parser.ParseException r0;
        java.lang.StringBuffer r1, $r6;
        boolean $z0;
        java.lang.String $r2;
        int i0, i1, $i2, $i3;
        int[][] $r3;
        int[] $r4, $r7;
        java.lang.String[] $r5;
        org.apache.james.mime4j.field.structured.parser.Token $r8;
        java.lang.StringBuilder $r9;

        r0 := @this: org.apache.james.mime4j.field.structured.parser.ParseException;

        $z0 = r0.<org.apache.james.mime4j.field.structured.parser.ParseException: boolean specialConstructor>;

        if $z0 != 0 goto label01;

        $r2 = specialinvoke r0.<org.apache.james.mime4j.dom.field.ParseException: java.lang.String getMessage()>();

        return $r2;

     label01:
        r1 = new java.lang.StringBuffer;

        specialinvoke r1.<java.lang.StringBuffer: void <init>()>();

        i0 = 0;

        i1 = 0;

     label02:
        $r3 = r0.<org.apache.james.mime4j.field.structured.parser.ParseException: int[][] expectedTokenSequences>;

        $i2 = lengthof $r3;

        if i1 >= $i2 goto label07;

        $r3 = r0.<org.apache.james.mime4j.field.structured.parser.ParseException: int[][] expectedTokenSequences>;

        $r4 = $r3[i1];

        $i2 = lengthof $r4;

        if i0 >= $i2 goto label03;

        $r3 = r0.<org.apache.james.mime4j.field.structured.parser.ParseException: int[][] expectedTokenSequences>;

        $r4 = $r3[i1];

        i0 = lengthof $r4;

     label03:
        $i2 = 0;

     label04:
        $r3 = r0.<org.apache.james.mime4j.field.structured.parser.ParseException: int[][] expectedTokenSequences>;

        $r4 = $r3[i1];

        $i3 = lengthof $r4;

        if $i2 >= $i3 goto label05;

        $r5 = r0.<org.apache.james.mime4j.field.structured.parser.ParseException: java.lang.String[] tokenImage>;

        $r3 = r0.<org.apache.james.mime4j.field.structured.parser.ParseException: int[][] expectedTokenSequences>;

        $r4 = $r3[i1];

        $i3 = $r4[$i2];

        $r2 = $r5[$i3];

        $r6 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $i2 = $i2 + 1;

        goto label04;

     label05:
        $r3 = r0.<org.apache.james.mime4j.field.structured.parser.ParseException: int[][] expectedTokenSequences>;

        $r4 = $r3[i1];

        $r3 = r0.<org.apache.james.mime4j.field.structured.parser.ParseException: int[][] expectedTokenSequences>;

        $r7 = $r3[i1];

        $i2 = lengthof $r7;

        $i2 = $i2 + -1;

        $i2 = $r4[$i2];

        if $i2 == 0 goto label06;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("...");

     label06:
        $r2 = r0.<org.apache.james.mime4j.field.structured.parser.ParseException: java.lang.String eol>;

        $r6 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    ");

        i1 = i1 + 1;

        goto label02;

     label07:
        $r2 = "Encountered \"";

        $r8 = r0.<org.apache.james.mime4j.field.structured.parser.ParseException: org.apache.james.mime4j.field.structured.parser.Token currentToken>;

        $r8 = $r8.<org.apache.james.mime4j.field.structured.parser.Token: org.apache.james.mime4j.field.structured.parser.Token next>;

        i1 = 0;

     label08:
        if i1 >= i0 goto label10;

        if i1 == 0 goto label09;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        $i2 = $r8.<org.apache.james.mime4j.field.structured.parser.Token: int kind>;

        if $i2 != 0 goto label12;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = r0.<org.apache.james.mime4j.field.structured.parser.ParseException: java.lang.String[] tokenImage>;

        $r2 = $r5[0];

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label10:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" at line ");

        $r8 = r0.<org.apache.james.mime4j.field.structured.parser.ParseException: org.apache.james.mime4j.field.structured.parser.Token currentToken>;

        $r8 = $r8.<org.apache.james.mime4j.field.structured.parser.Token: org.apache.james.mime4j.field.structured.parser.Token next>;

        i0 = $r8.<org.apache.james.mime4j.field.structured.parser.Token: int beginLine>;

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", column ");

        $r8 = r0.<org.apache.james.mime4j.field.structured.parser.ParseException: org.apache.james.mime4j.field.structured.parser.Token currentToken>;

        $r8 = $r8.<org.apache.james.mime4j.field.structured.parser.Token: org.apache.james.mime4j.field.structured.parser.Token next>;

        i0 = $r8.<org.apache.james.mime4j.field.structured.parser.Token: int beginColumn>;

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r2 = r0.<org.apache.james.mime4j.field.structured.parser.ParseException: java.lang.String eol>;

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = r0.<org.apache.james.mime4j.field.structured.parser.ParseException: int[][] expectedTokenSequences>;

        i0 = lengthof $r3;

        if i0 != 1 goto label13;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Was expecting:");

        $r2 = r0.<org.apache.james.mime4j.field.structured.parser.ParseException: java.lang.String eol>;

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label12:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = $r8.<org.apache.james.mime4j.field.structured.parser.Token: java.lang.String image>;

        $r2 = virtualinvoke r0.<org.apache.james.mime4j.field.structured.parser.ParseException: java.lang.String add_escapes(java.lang.String)>($r2);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = $r8.<org.apache.james.mime4j.field.structured.parser.Token: org.apache.james.mime4j.field.structured.parser.Token next>;

        i1 = i1 + 1;

        goto label08;

     label13:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Was expecting one of:");

        $r2 = r0.<org.apache.james.mime4j.field.structured.parser.ParseException: java.lang.String eol>;

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label11;
    }
