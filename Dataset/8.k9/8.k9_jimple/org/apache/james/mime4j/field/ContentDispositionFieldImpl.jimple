org.apache.james.mime4j.field.ContentDispositionFieldImpl extends org.apache.james.mime4j.field.AbstractField implements org.apache.james.mime4j.dom.field.ContentDispositionField
public static final org.apache.james.mime4j.dom.FieldParser PARSER
private java.util.Date creationDate
private boolean creationDateParsed
private java.lang.String dispositionType
private java.util.Date modificationDate
private boolean modificationDateParsed
private java.util.Map parameters
private org.apache.james.mime4j.field.contentdisposition.parser.ParseException parseException
private boolean parsed
private java.util.Date readDate
private boolean readDateParsed
    static void <clinit>()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldImpl$1 $r0;

        $r0 = new org.apache.james.mime4j.field.ContentDispositionFieldImpl$1;

        specialinvoke $r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl$1: void <init>()>();

        <org.apache.james.mime4j.field.ContentDispositionFieldImpl: org.apache.james.mime4j.dom.FieldParser PARSER> = $r0;

        return;
    }
    void <init>(org.apache.james.mime4j.stream.Field, org.apache.james.mime4j.codec.DecodeMonitor)
    {
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;
        org.apache.james.mime4j.stream.Field $r1;
        org.apache.james.mime4j.codec.DecodeMonitor $r2;
        java.util.HashMap $r3;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        $r1 := @parameter0: org.apache.james.mime4j.stream.Field;

        $r2 := @parameter1: org.apache.james.mime4j.codec.DecodeMonitor;

        specialinvoke r0.<org.apache.james.mime4j.field.AbstractField: void <init>(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor)>($r1, $r2);

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: boolean parsed> = 0;

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.lang.String dispositionType> = "";

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.util.Map parameters> = $r3;

        return;
    }
    private void parse()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;
        org.apache.james.mime4j.field.contentdisposition.parser.ContentDispositionParser r1;
        java.lang.String $r2, r8;
        java.io.StringReader $r3;
        java.util.Locale $r4;
        java.util.List $r5, $r6;
        int $i0, $i1;
        java.lang.Object $r7;
        java.util.Map $r9;
        org.apache.james.mime4j.field.contentdisposition.parser.ParseException r10;
        org.apache.james.mime4j.field.contentdisposition.parser.TokenMgrError r11;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        $r2 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.lang.String getBody()>();

        r1 = new org.apache.james.mime4j.field.contentdisposition.parser.ContentDispositionParser;

        $r3 = new java.io.StringReader;

        specialinvoke $r3.<java.io.StringReader: void <init>(java.lang.String)>($r2);

        specialinvoke r1.<org.apache.james.mime4j.field.contentdisposition.parser.ContentDispositionParser: void <init>(java.io.Reader)>($r3);

     label1:
        virtualinvoke r1.<org.apache.james.mime4j.field.contentdisposition.parser.ContentDispositionParser: void parseAll()>();

     label2:
        $r2 = virtualinvoke r1.<org.apache.james.mime4j.field.contentdisposition.parser.ContentDispositionParser: java.lang.String getDispositionType()>();

        if $r2 == null goto label6;

        $r4 = <java.util.Locale: java.util.Locale US>;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r4);

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.lang.String dispositionType> = $r2;

        $r5 = virtualinvoke r1.<org.apache.james.mime4j.field.contentdisposition.parser.ContentDispositionParser: java.util.List getParamNames()>();

        $r6 = virtualinvoke r1.<org.apache.james.mime4j.field.contentdisposition.parser.ContentDispositionParser: java.util.List getParamValues()>();

        if $r5 == null goto label6;

        if $r6 == null goto label6;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label6;

        $r7 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i1);

        $r2 = (java.lang.String) $r7;

        $r4 = <java.util.Locale: java.util.Locale US>;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r4);

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i1);

        r8 = (java.lang.String) $r7;

        $r9 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.util.Map parameters>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r8);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        r10 := @caughtexception;

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: org.apache.james.mime4j.field.contentdisposition.parser.ParseException parseException> = r10;

        goto label2;

     label5:
        r11 := @caughtexception;

        r10 = new org.apache.james.mime4j.field.contentdisposition.parser.ParseException;

        $r2 = virtualinvoke r11.<org.apache.james.mime4j.field.contentdisposition.parser.TokenMgrError: java.lang.String getMessage()>();

        specialinvoke r10.<org.apache.james.mime4j.field.contentdisposition.parser.ParseException: void <init>(java.lang.String)>($r2);

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: org.apache.james.mime4j.field.contentdisposition.parser.ParseException parseException> = r10;

        goto label2;

     label6:
        r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: boolean parsed> = 1;

        return;

        catch org.apache.james.mime4j.field.contentdisposition.parser.ParseException from label1 to label2 with label4;
        catch org.apache.james.mime4j.field.contentdisposition.parser.TokenMgrError from label1 to label2 with label5;
    }
    private java.util.Date parseDate(java.lang.String)
    {
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;
        java.lang.String $r1, $r2;
        org.apache.james.mime4j.codec.DecodeMonitor $r3;
        java.lang.StringBuilder $r4;
        org.apache.james.mime4j.field.datetime.parser.DateTimeParser $r5;
        java.io.StringReader $r6;
        org.apache.james.mime4j.dom.datetime.DateTime $r7;
        java.util.Date $r8;
        org.apache.james.mime4j.field.datetime.parser.ParseException r9;
        boolean $z0;
        org.apache.james.mime4j.field.contentdisposition.parser.TokenMgrError r10;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.lang.String getParameter(java.lang.String)>($r1);

        if $r2 != null goto label1;

        $r3 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: org.apache.james.mime4j.codec.DecodeMonitor monitor>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parsing ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" null");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<org.apache.james.mime4j.codec.DecodeMonitor: boolean warn(java.lang.String,java.lang.String)>($r1, "returning null");

        return null;

     label1:
        $r5 = new org.apache.james.mime4j.field.datetime.parser.DateTimeParser;

        $r6 = new java.io.StringReader;

     label2:
        specialinvoke $r6.<java.io.StringReader: void <init>(java.lang.String)>($r2);

        specialinvoke $r5.<org.apache.james.mime4j.field.datetime.parser.DateTimeParser: void <init>(java.io.Reader)>($r6);

        $r7 = virtualinvoke $r5.<org.apache.james.mime4j.field.datetime.parser.DateTimeParser: org.apache.james.mime4j.dom.datetime.DateTime parseAll()>();

        $r8 = virtualinvoke $r7.<org.apache.james.mime4j.dom.datetime.DateTime: java.util.Date getDate()>();

     label3:
        return $r8;

     label4:
        r9 := @caughtexception;

        $r3 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: org.apache.james.mime4j.codec.DecodeMonitor monitor>;

        $z0 = virtualinvoke $r3.<org.apache.james.mime4j.codec.DecodeMonitor: boolean isListening()>();

        if $z0 == 0 goto label6;

        $r3 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: org.apache.james.mime4j.codec.DecodeMonitor monitor>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" parameter is invalid: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" parameter is ignored");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<org.apache.james.mime4j.codec.DecodeMonitor: boolean warn(java.lang.String,java.lang.String)>($r2, $r1);

        return null;

     label5:
        r10 := @caughtexception;

        $r3 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: org.apache.james.mime4j.codec.DecodeMonitor monitor>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" parameter is invalid: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parameter is ignored");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<org.apache.james.mime4j.codec.DecodeMonitor: boolean warn(java.lang.String,java.lang.String)>($r2, $r1);

     label6:
        return null;

        catch org.apache.james.mime4j.field.datetime.parser.ParseException from label2 to label3 with label4;
        catch org.apache.james.mime4j.field.contentdisposition.parser.TokenMgrError from label1 to label3 with label5;
    }
    public java.util.Date getCreationDate()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;
        java.util.Date $r1;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: boolean creationDateParsed>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.util.Date parseDate(java.lang.String)>("creation-date");

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.util.Date creationDate> = $r1;

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: boolean creationDateParsed> = 1;

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.util.Date creationDate>;

        return $r1;
    }
    public java.lang.String getDispositionType()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;
        boolean $z0;
        java.lang.String r1;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: void parse()>();

     label1:
        r1 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.lang.String dispositionType>;

        return r1;
    }
    public java.lang.String getFilename()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.lang.String getParameter(java.lang.String)>("filename");

        return $r1;
    }
    public java.util.Date getModificationDate()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;
        java.util.Date $r1;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: boolean modificationDateParsed>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.util.Date parseDate(java.lang.String)>("modification-date");

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.util.Date modificationDate> = $r1;

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: boolean modificationDateParsed> = 1;

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.util.Date modificationDate>;

        return $r1;
    }
    public java.lang.String getParameter(java.lang.String)
    {
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;
        java.lang.String $r1;
        boolean $z0;
        java.util.Map $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        $r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: void parse()>();

     label1:
        $r2 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.util.Map parameters>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r1 = (java.lang.String) $r3;

        return $r1;
    }
    public java.util.Map getParameters()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: void parse()>();

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.util.Map parameters>;

        $r1 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r1;
    }
    public volatile org.apache.james.mime4j.dom.field.ParseException getParseException()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;
        org.apache.james.mime4j.field.contentdisposition.parser.ParseException $r1;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: org.apache.james.mime4j.field.contentdisposition.parser.ParseException getParseException()>();

        return $r1;
    }
    public org.apache.james.mime4j.field.contentdisposition.parser.ParseException getParseException()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;
        boolean $z0;
        org.apache.james.mime4j.field.contentdisposition.parser.ParseException r1;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: void parse()>();

     label1:
        r1 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: org.apache.james.mime4j.field.contentdisposition.parser.ParseException parseException>;

        return r1;
    }
    public java.util.Date getReadDate()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;
        java.util.Date $r1;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: boolean readDateParsed>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.util.Date parseDate(java.lang.String)>("read-date");

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.util.Date readDate> = $r1;

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: boolean readDateParsed> = 1;

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.util.Date readDate>;

        return $r1;
    }
    public long getSize()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;
        java.lang.NumberFormatException r1;
        java.lang.String $r2;
        long $l0, l1;
        byte $b2;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        $r2 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.lang.String getParameter(java.lang.String)>("size");

        if $r2 != null goto label1;

        return -1L;

     label1:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r2);

     label2:
        l1 = $l0;

        $b2 = $l0 cmp 0L;

        if $b2 >= 0 goto label3;

        l1 = -1L;

     label3:
        return l1;

     label4:
        r1 := @caughtexception;

        return -1L;

        catch java.lang.NumberFormatException from label1 to label2 with label4;
    }
    public boolean isAttachment()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: void parse()>();

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.lang.String dispositionType>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("attachment");

        return $z0;
    }
    public boolean isDispositionType(java.lang.String)
    {
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        $r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: void parse()>();

     label1:
        $r2 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.lang.String dispositionType>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        return $z0;
    }
    public boolean isInline()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: void parse()>();

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.lang.String dispositionType>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("inline");

        return $z0;
    }
