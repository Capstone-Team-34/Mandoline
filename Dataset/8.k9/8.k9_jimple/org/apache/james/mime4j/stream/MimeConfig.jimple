org.apache.james.mime4j.stream.MimeConfig extends java.lang.Object implements java.lang.Cloneable
private boolean countLineNumbers
private java.lang.String headlessParsing
private boolean malformedHeaderStartsBody
private long maxContentLen
private int maxHeaderCount
private int maxHeaderLen
private int maxLineLen
private boolean strictParsing
    public void <init>()
    {
        org.apache.james.mime4j.stream.MimeConfig r0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.james.mime4j.stream.MimeConfig: boolean strictParsing> = 0;

        r0.<org.apache.james.mime4j.stream.MimeConfig: boolean countLineNumbers> = 0;

        r0.<org.apache.james.mime4j.stream.MimeConfig: boolean malformedHeaderStartsBody> = 0;

        r0.<org.apache.james.mime4j.stream.MimeConfig: int maxLineLen> = 1000;

        r0.<org.apache.james.mime4j.stream.MimeConfig: int maxHeaderCount> = 1000;

        r0.<org.apache.james.mime4j.stream.MimeConfig: int maxHeaderLen> = 10000;

        r0.<org.apache.james.mime4j.stream.MimeConfig: long maxContentLen> = -1L;

        r0.<org.apache.james.mime4j.stream.MimeConfig: java.lang.String headlessParsing> = null;

        return;
    }
    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.james.mime4j.stream.MimeConfig r0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        r0 = virtualinvoke r0.<org.apache.james.mime4j.stream.MimeConfig: org.apache.james.mime4j.stream.MimeConfig clone()>();

        return r0;
    }
    public org.apache.james.mime4j.stream.MimeConfig clone()
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        java.lang.CloneNotSupportedException r1;
        java.lang.Object $r2;
        java.lang.InternalError $r3;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

     label1:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

     label2:
        r0 = (org.apache.james.mime4j.stream.MimeConfig) $r2;

        return r0;

     label3:
        r1 := @caughtexception;

        $r3 = new java.lang.InternalError;

        specialinvoke $r3.<java.lang.InternalError: void <init>()>();

        throw $r3;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }
    public java.lang.String getHeadlessParsing()
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        java.lang.String r1;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        r1 = r0.<org.apache.james.mime4j.stream.MimeConfig: java.lang.String headlessParsing>;

        return r1;
    }
    public long getMaxContentLen()
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        long l0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        l0 = r0.<org.apache.james.mime4j.stream.MimeConfig: long maxContentLen>;

        return l0;
    }
    public int getMaxHeaderCount()
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        int i0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        i0 = r0.<org.apache.james.mime4j.stream.MimeConfig: int maxHeaderCount>;

        return i0;
    }
    public int getMaxHeaderLen()
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        int i0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        i0 = r0.<org.apache.james.mime4j.stream.MimeConfig: int maxHeaderLen>;

        return i0;
    }
    public int getMaxLineLen()
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        int i0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        i0 = r0.<org.apache.james.mime4j.stream.MimeConfig: int maxLineLen>;

        return i0;
    }
    public boolean isCountLineNumbers()
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        boolean z0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        z0 = r0.<org.apache.james.mime4j.stream.MimeConfig: boolean countLineNumbers>;

        return z0;
    }
    public boolean isMalformedHeaderStartsBody()
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        boolean z0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        z0 = r0.<org.apache.james.mime4j.stream.MimeConfig: boolean malformedHeaderStartsBody>;

        return z0;
    }
    public boolean isStrictParsing()
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        boolean z0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        z0 = r0.<org.apache.james.mime4j.stream.MimeConfig: boolean strictParsing>;

        return z0;
    }
    public void setCountLineNumbers(boolean)
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        $z0 := @parameter0: boolean;

        r0.<org.apache.james.mime4j.stream.MimeConfig: boolean countLineNumbers> = $z0;

        return;
    }
    public void setHeadlessParsing(java.lang.String)
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        $r1 := @parameter0: java.lang.String;

        r0.<org.apache.james.mime4j.stream.MimeConfig: java.lang.String headlessParsing> = $r1;

        return;
    }
    public void setMalformedHeaderStartsBody(boolean)
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        $z0 := @parameter0: boolean;

        r0.<org.apache.james.mime4j.stream.MimeConfig: boolean malformedHeaderStartsBody> = $z0;

        return;
    }
    public void setMaxContentLen(long)
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        long $l0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        $l0 := @parameter0: long;

        r0.<org.apache.james.mime4j.stream.MimeConfig: long maxContentLen> = $l0;

        return;
    }
    public void setMaxHeaderCount(int)
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        int $i0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        $i0 := @parameter0: int;

        r0.<org.apache.james.mime4j.stream.MimeConfig: int maxHeaderCount> = $i0;

        return;
    }
    public void setMaxHeaderLen(int)
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        int $i0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        $i0 := @parameter0: int;

        r0.<org.apache.james.mime4j.stream.MimeConfig: int maxHeaderLen> = $i0;

        return;
    }
    public void setMaxLineLen(int)
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        int $i0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        $i0 := @parameter0: int;

        r0.<org.apache.james.mime4j.stream.MimeConfig: int maxLineLen> = $i0;

        return;
    }
    public void setStrictParsing(boolean)
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        $z0 := @parameter0: boolean;

        r0.<org.apache.james.mime4j.stream.MimeConfig: boolean strictParsing> = $z0;

        return;
    }
    public java.lang.String toString()
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        long $l0;
        java.lang.StringBuilder $r1;
        boolean $z0;
        int $i1;
        java.lang.String $r2;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[strict parsing: ");

        $z0 = r0.<org.apache.james.mime4j.stream.MimeConfig: boolean strictParsing>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", max line length: ");

        $i1 = r0.<org.apache.james.mime4j.stream.MimeConfig: int maxLineLen>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", max header count: ");

        $i1 = r0.<org.apache.james.mime4j.stream.MimeConfig: int maxHeaderCount>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", max content length: ");

        $l0 = r0.<org.apache.james.mime4j.stream.MimeConfig: long maxContentLen>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", count line numbers: ");

        $z0 = r0.<org.apache.james.mime4j.stream.MimeConfig: boolean countLineNumbers>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
