org.apache.james.mime4j.stream.ParserCursor extends java.lang.Object
private final int lowerBound
private int pos
private final int upperBound
    public void <init>(int, int)
    {
        org.apache.james.mime4j.stream.ParserCursor r0;
        int $i0, $i1;
        java.lang.IndexOutOfBoundsException $r1;

        r0 := @this: org.apache.james.mime4j.stream.ParserCursor;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $i0 >= 0 goto label1;

        $r1 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>("Lower bound cannot be negative");

        throw $r1;

     label1:
        if $i0 <= $i1 goto label2;

        $r1 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>("Lower bound cannot be greater then upper bound");

        throw $r1;

     label2:
        r0.<org.apache.james.mime4j.stream.ParserCursor: int lowerBound> = $i0;

        r0.<org.apache.james.mime4j.stream.ParserCursor: int upperBound> = $i1;

        r0.<org.apache.james.mime4j.stream.ParserCursor: int pos> = $i0;

        return;
    }
    public boolean atEnd()
    {
        org.apache.james.mime4j.stream.ParserCursor r0;
        int $i0, $i1;

        r0 := @this: org.apache.james.mime4j.stream.ParserCursor;

        $i1 = r0.<org.apache.james.mime4j.stream.ParserCursor: int pos>;

        $i0 = r0.<org.apache.james.mime4j.stream.ParserCursor: int upperBound>;

        if $i1 < $i0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public int getLowerBound()
    {
        org.apache.james.mime4j.stream.ParserCursor r0;
        int i0;

        r0 := @this: org.apache.james.mime4j.stream.ParserCursor;

        i0 = r0.<org.apache.james.mime4j.stream.ParserCursor: int lowerBound>;

        return i0;
    }
    public int getPos()
    {
        org.apache.james.mime4j.stream.ParserCursor r0;
        int i0;

        r0 := @this: org.apache.james.mime4j.stream.ParserCursor;

        i0 = r0.<org.apache.james.mime4j.stream.ParserCursor: int pos>;

        return i0;
    }
    public int getUpperBound()
    {
        org.apache.james.mime4j.stream.ParserCursor r0;
        int i0;

        r0 := @this: org.apache.james.mime4j.stream.ParserCursor;

        i0 = r0.<org.apache.james.mime4j.stream.ParserCursor: int upperBound>;

        return i0;
    }
    public java.lang.String toString()
    {
        org.apache.james.mime4j.stream.ParserCursor r0;
        java.lang.StringBuilder r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: org.apache.james.mime4j.stream.ParserCursor;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $i0 = r0.<org.apache.james.mime4j.stream.ParserCursor: int lowerBound>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);

        $i0 = r0.<org.apache.james.mime4j.stream.ParserCursor: int pos>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);

        $i0 = r0.<org.apache.james.mime4j.stream.ParserCursor: int upperBound>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
    public void updatePos(int)
    {
        org.apache.james.mime4j.stream.ParserCursor r0;
        int $i0, $i1;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.james.mime4j.stream.ParserCursor;

        $i0 := @parameter0: int;

        $i1 = r0.<org.apache.james.mime4j.stream.ParserCursor: int lowerBound>;

        if $i0 >= $i1 goto label1;

        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pos: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" < lowerBound: ");

        $i0 = r0.<org.apache.james.mime4j.stream.ParserCursor: int lowerBound>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        $i1 = r0.<org.apache.james.mime4j.stream.ParserCursor: int upperBound>;

        if $i0 <= $i1 goto label2;

        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pos: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" > upperBound: ");

        $i0 = r0.<org.apache.james.mime4j.stream.ParserCursor: int upperBound>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label2:
        r0.<org.apache.james.mime4j.stream.ParserCursor: int pos> = $i0;

        return;
    }
