org.apache.james.mime4j.stream.DefaultFieldBuilder extends java.lang.Object implements org.apache.james.mime4j.stream.FieldBuilder
private static final java.util.BitSet FIELD_CHARS
private final org.apache.james.mime4j.util.ByteArrayBuffer buf
private final int maxlen
    static void <clinit>()
    {
        java.util.BitSet $r0;
        int i0;

        $r0 = new java.util.BitSet;

        specialinvoke $r0.<java.util.BitSet: void <init>()>();

        <org.apache.james.mime4j.stream.DefaultFieldBuilder: java.util.BitSet FIELD_CHARS> = $r0;

        i0 = 33;

     label1:
        if i0 > 57 goto label2;

        $r0 = <org.apache.james.mime4j.stream.DefaultFieldBuilder: java.util.BitSet FIELD_CHARS>;

        virtualinvoke $r0.<java.util.BitSet: void set(int)>(i0);

        i0 = i0 + 1;

        goto label1;

     label2:
        i0 = 59;

     label3:
        if i0 > 126 goto label4;

        $r0 = <org.apache.james.mime4j.stream.DefaultFieldBuilder: java.util.BitSet FIELD_CHARS>;

        virtualinvoke $r0.<java.util.BitSet: void set(int)>(i0);

        i0 = i0 + 1;

        goto label3;

     label4:
        return;
    }
    public void <init>(int)
    {
        org.apache.james.mime4j.stream.DefaultFieldBuilder r0;
        int $i0;
        org.apache.james.mime4j.util.ByteArrayBuffer $r1;

        r0 := @this: org.apache.james.mime4j.stream.DefaultFieldBuilder;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.james.mime4j.util.ByteArrayBuffer;

        specialinvoke $r1.<org.apache.james.mime4j.util.ByteArrayBuffer: void <init>(int)>(1024);

        r0.<org.apache.james.mime4j.stream.DefaultFieldBuilder: org.apache.james.mime4j.util.ByteArrayBuffer buf> = $r1;

        r0.<org.apache.james.mime4j.stream.DefaultFieldBuilder: int maxlen> = $i0;

        return;
    }
    public void append(org.apache.james.mime4j.util.ByteArrayBuffer) throws org.apache.james.mime4j.io.MaxHeaderLengthLimitException
    {
        org.apache.james.mime4j.stream.DefaultFieldBuilder r0;
        org.apache.james.mime4j.util.ByteArrayBuffer $r1, $r2;
        int $i0, $i1;
        org.apache.james.mime4j.io.MaxHeaderLengthLimitException $r3;
        byte[] $r4;

        r0 := @this: org.apache.james.mime4j.stream.DefaultFieldBuilder;

        $r1 := @parameter0: org.apache.james.mime4j.util.ByteArrayBuffer;

        if $r1 != null goto label1;

        return;

     label1:
        $i0 = virtualinvoke $r1.<org.apache.james.mime4j.util.ByteArrayBuffer: int length()>();

        $i1 = r0.<org.apache.james.mime4j.stream.DefaultFieldBuilder: int maxlen>;

        if $i1 <= 0 goto label2;

        $r2 = r0.<org.apache.james.mime4j.stream.DefaultFieldBuilder: org.apache.james.mime4j.util.ByteArrayBuffer buf>;

        $i1 = virtualinvoke $r2.<org.apache.james.mime4j.util.ByteArrayBuffer: int length()>();

        $i0 = $i1 + $i0;

        $i1 = r0.<org.apache.james.mime4j.stream.DefaultFieldBuilder: int maxlen>;

        if $i0 < $i1 goto label2;

        $r3 = new org.apache.james.mime4j.io.MaxHeaderLengthLimitException;

        specialinvoke $r3.<org.apache.james.mime4j.io.MaxHeaderLengthLimitException: void <init>(java.lang.String)>("Maximum header length limit exceeded");

        throw $r3;

     label2:
        $r2 = r0.<org.apache.james.mime4j.stream.DefaultFieldBuilder: org.apache.james.mime4j.util.ByteArrayBuffer buf>;

        $r4 = virtualinvoke $r1.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer()>();

        $i0 = virtualinvoke $r1.<org.apache.james.mime4j.util.ByteArrayBuffer: int length()>();

        virtualinvoke $r2.<org.apache.james.mime4j.util.ByteArrayBuffer: void append(byte[],int,int)>($r4, 0, $i0);

        return;
    }
    public org.apache.james.mime4j.stream.RawField build() throws org.apache.james.mime4j.MimeException
    {
        org.apache.james.mime4j.stream.DefaultFieldBuilder r0;
        org.apache.james.mime4j.util.ByteArrayBuffer r1, $r2;
        int $i0, i1, $i2;
        byte $b3;
        byte[] $r3;
        org.apache.james.mime4j.stream.RawFieldParser $r4;
        org.apache.james.mime4j.stream.RawField $r5;
        java.lang.String $r6;
        char $c4;
        java.util.BitSet $r7;
        boolean $z0;
        org.apache.james.mime4j.MimeException $r8;
        java.lang.StringBuilder $r9;

        r0 := @this: org.apache.james.mime4j.stream.DefaultFieldBuilder;

        r1 = r0.<org.apache.james.mime4j.stream.DefaultFieldBuilder: org.apache.james.mime4j.util.ByteArrayBuffer buf>;

        $i0 = virtualinvoke r1.<org.apache.james.mime4j.util.ByteArrayBuffer: int length()>();

        i1 = $i0;

        if $i0 <= 0 goto label2;

        r1 = r0.<org.apache.james.mime4j.stream.DefaultFieldBuilder: org.apache.james.mime4j.util.ByteArrayBuffer buf>;

        $i2 = $i0 + -1;

        $b3 = virtualinvoke r1.<org.apache.james.mime4j.util.ByteArrayBuffer: byte byteAt(int)>($i2);

        if $b3 != 10 goto label1;

        i1 = $i0 + -1;

     label1:
        r1 = r0.<org.apache.james.mime4j.stream.DefaultFieldBuilder: org.apache.james.mime4j.util.ByteArrayBuffer buf>;

        $i0 = i1 + -1;

        $b3 = virtualinvoke r1.<org.apache.james.mime4j.util.ByteArrayBuffer: byte byteAt(int)>($i0);

        if $b3 != 13 goto label2;

        i1 = i1 + -1;

     label2:
        r1 = new org.apache.james.mime4j.util.ByteArrayBuffer;

        $r2 = r0.<org.apache.james.mime4j.stream.DefaultFieldBuilder: org.apache.james.mime4j.util.ByteArrayBuffer buf>;

        $r3 = virtualinvoke $r2.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer()>();

        specialinvoke r1.<org.apache.james.mime4j.util.ByteArrayBuffer: void <init>(byte[],int,boolean)>($r3, i1, 0);

        $r4 = <org.apache.james.mime4j.stream.RawFieldParser: org.apache.james.mime4j.stream.RawFieldParser DEFAULT>;

        $r5 = virtualinvoke $r4.<org.apache.james.mime4j.stream.RawFieldParser: org.apache.james.mime4j.stream.RawField parseField(org.apache.james.mime4j.util.ByteSequence)>(r1);

        $r6 = virtualinvoke $r5.<org.apache.james.mime4j.stream.RawField: java.lang.String getName()>();

        i1 = 0;

     label3:
        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        if i1 >= $i0 goto label5;

        $c4 = virtualinvoke $r6.<java.lang.String: char charAt(int)>(i1);

        $r7 = <org.apache.james.mime4j.stream.DefaultFieldBuilder: java.util.BitSet FIELD_CHARS>;

        $z0 = virtualinvoke $r7.<java.util.BitSet: boolean get(int)>($c4);

        if $z0 != 0 goto label4;

        $r8 = new org.apache.james.mime4j.MimeException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MIME field name contains illegal characters: ");

        $r6 = virtualinvoke $r5.<org.apache.james.mime4j.stream.RawField: java.lang.String getName()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.apache.james.mime4j.MimeException: void <init>(java.lang.String)>($r6);

        throw $r8;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return $r5;
    }
    public org.apache.james.mime4j.util.ByteArrayBuffer getRaw()
    {
        org.apache.james.mime4j.stream.DefaultFieldBuilder r0;
        org.apache.james.mime4j.util.ByteArrayBuffer r1;

        r0 := @this: org.apache.james.mime4j.stream.DefaultFieldBuilder;

        r1 = r0.<org.apache.james.mime4j.stream.DefaultFieldBuilder: org.apache.james.mime4j.util.ByteArrayBuffer buf>;

        return r1;
    }
    public void reset()
    {
        org.apache.james.mime4j.stream.DefaultFieldBuilder r0;
        org.apache.james.mime4j.util.ByteArrayBuffer $r1;

        r0 := @this: org.apache.james.mime4j.stream.DefaultFieldBuilder;

        $r1 = r0.<org.apache.james.mime4j.stream.DefaultFieldBuilder: org.apache.james.mime4j.util.ByteArrayBuffer buf>;

        virtualinvoke $r1.<org.apache.james.mime4j.util.ByteArrayBuffer: void clear()>();

        return;
    }
