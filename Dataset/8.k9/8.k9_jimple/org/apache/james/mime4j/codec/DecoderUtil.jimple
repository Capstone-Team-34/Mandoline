org.apache.james.mime4j.codec.DecoderUtil extends java.lang.Object
private static final java.util.regex.Pattern PATTERN_ENCODED_WORD
    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("(.*?)=\\?(.+?)\\?(\\w)\\?(.+?)\\?=", 32);

        <org.apache.james.mime4j.codec.DecoderUtil: java.util.regex.Pattern PATTERN_ENCODED_WORD> = $r0;

        return;
    }
    public void <init>()
    {
        org.apache.james.mime4j.codec.DecoderUtil r0;

        r0 := @this: org.apache.james.mime4j.codec.DecoderUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    static java.lang.String decodeB(java.lang.String, java.lang.String, org.apache.james.mime4j.codec.DecodeMonitor) throws java.io.UnsupportedEncodingException
    {
        java.lang.String $r0, $r1;
        org.apache.james.mime4j.codec.DecodeMonitor $r2;
        byte[] $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: org.apache.james.mime4j.codec.DecodeMonitor;

        $r3 = staticinvoke <org.apache.james.mime4j.codec.DecoderUtil: byte[] decodeBase64(java.lang.String,org.apache.james.mime4j.codec.DecodeMonitor)>($r0, $r2);

        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(byte[],java.lang.String)>($r3, $r1);

        return $r0;
    }
    private static byte[] decodeBase64(java.lang.String, org.apache.james.mime4j.codec.DecodeMonitor)
    {
        java.lang.String $r0;
        org.apache.james.mime4j.codec.DecodeMonitor $r1;
        java.io.ByteArrayOutputStream r2;
        java.io.IOException r3;
        org.apache.james.mime4j.codec.Base64InputStream r4;
        byte[] $r5;
        java.io.ByteArrayInputStream $r6;
        int $i0;
        java.lang.IllegalStateException $r7;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: org.apache.james.mime4j.codec.DecodeMonitor;

        r2 = new java.io.ByteArrayOutputStream;

        specialinvoke r2.<java.io.ByteArrayOutputStream: void <init>()>();

     label1:
        $r5 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("US-ASCII");

     label2:
        r4 = new org.apache.james.mime4j.codec.Base64InputStream;

        $r6 = new java.io.ByteArrayInputStream;

     label3:
        specialinvoke $r6.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5);

        specialinvoke r4.<org.apache.james.mime4j.codec.Base64InputStream: void <init>(java.io.InputStream,org.apache.james.mime4j.codec.DecodeMonitor)>($r6, $r1);

     label4:
        $i0 = virtualinvoke r4.<org.apache.james.mime4j.codec.Base64InputStream: int read()>();

     label5:
        if $i0 == -1 goto label9;

     label6:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>($i0);

     label7:
        goto label4;

     label8:
        r3 := @caughtexception;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(r3);

        throw $r7;

     label9:
        $r5 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r5;

        catch java.io.IOException from label1 to label2 with label8;
        catch java.io.IOException from label3 to label5 with label8;
        catch java.io.IOException from label6 to label7 with label8;
    }
    static java.lang.String decodeEncodedWords(java.lang.String)
    {
        java.lang.String $r0;
        org.apache.james.mime4j.codec.DecodeMonitor $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.james.mime4j.codec.DecodeMonitor: org.apache.james.mime4j.codec.DecodeMonitor SILENT>;

        $r0 = staticinvoke <org.apache.james.mime4j.codec.DecoderUtil: java.lang.String decodeEncodedWords(java.lang.String,org.apache.james.mime4j.codec.DecodeMonitor)>($r0, $r1);

        return $r0;
    }
    public static java.lang.String decodeEncodedWords(java.lang.String, org.apache.james.mime4j.codec.DecodeMonitor) throws java.lang.IllegalArgumentException
    {
        org.apache.james.mime4j.codec.DecodeMonitor $r0;
        java.lang.StringBuilder r1;
        java.lang.String r2, $r5, $r6, $r7, $r8;
        int i0;
        boolean z0, $z1;
        java.util.regex.Pattern $r3;
        java.util.regex.Matcher $r4;

        r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: org.apache.james.mime4j.codec.DecodeMonitor;

        i0 = 0;

        z0 = 0;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = <org.apache.james.mime4j.codec.DecoderUtil: java.util.regex.Pattern PATTERN_ENCODED_WORD>;

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r2);

     label1:
        $z1 = virtualinvoke $r4.<java.util.regex.Matcher: boolean find()>();

        if $z1 == 0 goto label7;

        $r5 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r6 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $r7 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        $r8 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        $r6 = staticinvoke <org.apache.james.mime4j.codec.DecoderUtil: java.lang.String tryDecodeEncodedWord(java.lang.String,java.lang.String,java.lang.String,org.apache.james.mime4j.codec.DecodeMonitor)>($r6, $r7, $r8, $r0);

        if $r6 != null goto label3;

        $r5 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String group(int)>(0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

     label2:
        i0 = virtualinvoke $r4.<java.util.regex.Matcher: int end()>();

        if $r6 == null goto label6;

        z0 = 1;

        goto label1;

     label3:
        if z0 == 0 goto label4;

        z0 = staticinvoke <org.apache.james.mime4j.util.CharsetUtil: boolean isWhitespace(java.lang.String)>($r5);

        if z0 != 0 goto label5;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

     label5:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        goto label2;

     label6:
        z0 = 0;

        goto label1;

     label7:
        if i0 != 0 goto label8;

        return r2;

     label8:
        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return r2;
    }
    static java.lang.String decodeQ(java.lang.String, java.lang.String, org.apache.james.mime4j.codec.DecodeMonitor) throws java.io.UnsupportedEncodingException
    {
        java.lang.String $r0, $r2;
        org.apache.james.mime4j.codec.DecodeMonitor $r1;
        byte[] $r3;

        $r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: org.apache.james.mime4j.codec.DecodeMonitor;

        $r2 = staticinvoke <org.apache.james.mime4j.codec.DecoderUtil: java.lang.String replaceUnderscores(java.lang.String)>($r2);

        $r3 = staticinvoke <org.apache.james.mime4j.codec.DecoderUtil: byte[] decodeQuotedPrintable(java.lang.String,org.apache.james.mime4j.codec.DecodeMonitor)>($r2, $r1);

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>($r3, $r0);

        return $r2;
    }
    private static byte[] decodeQuotedPrintable(java.lang.String, org.apache.james.mime4j.codec.DecodeMonitor)
    {
        java.lang.String $r0;
        org.apache.james.mime4j.codec.DecodeMonitor $r1;
        java.io.ByteArrayOutputStream r2;
        java.io.IOException r3;
        org.apache.james.mime4j.codec.QuotedPrintableInputStream r4;
        byte[] $r5;
        java.io.ByteArrayInputStream $r6;
        int $i0;
        java.lang.IllegalStateException $r7;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: org.apache.james.mime4j.codec.DecodeMonitor;

        r2 = new java.io.ByteArrayOutputStream;

        specialinvoke r2.<java.io.ByteArrayOutputStream: void <init>()>();

     label1:
        $r5 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("US-ASCII");

     label2:
        r4 = new org.apache.james.mime4j.codec.QuotedPrintableInputStream;

        $r6 = new java.io.ByteArrayInputStream;

     label3:
        specialinvoke $r6.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5);

        specialinvoke r4.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: void <init>(java.io.InputStream,org.apache.james.mime4j.codec.DecodeMonitor)>($r6, $r1);

     label4:
        $i0 = virtualinvoke r4.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: int read()>();

     label5:
        if $i0 == -1 goto label9;

     label6:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>($i0);

     label7:
        goto label4;

     label8:
        r3 := @caughtexception;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(r3);

        throw $r7;

     label9:
        $r5 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r5;

        catch java.io.IOException from label1 to label2 with label8;
        catch java.io.IOException from label3 to label5 with label8;
        catch java.io.IOException from label6 to label7 with label8;
    }
    private static transient void monitor(org.apache.james.mime4j.codec.DecodeMonitor, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String[]) throws java.lang.IllegalArgumentException
    {
        org.apache.james.mime4j.codec.DecodeMonitor $r0;
        java.lang.String $r1, $r2, $r3, $r4;
        java.lang.String[] $r5;
        int i0, i1;
        java.lang.StringBuilder r6;
        boolean $z0;
        java.lang.IllegalArgumentException $r7;

        $r0 := @parameter0: org.apache.james.mime4j.codec.DecodeMonitor;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: java.lang.String;

        $r5 := @parameter5: java.lang.String[];

        $z0 = virtualinvoke $r0.<org.apache.james.mime4j.codec.DecodeMonitor: boolean isListening()>();

        if $z0 == 0 goto label3;

        $r2 = staticinvoke <org.apache.james.mime4j.codec.DecoderUtil: java.lang.String recombine(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        r6 = new java.lang.StringBuilder;

        specialinvoke r6.<java.lang.StringBuilder: void <init>()>();

        i0 = lengthof $r5;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r1 = $r5[i1];

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r1 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke $r0.<org.apache.james.mime4j.codec.DecodeMonitor: boolean warn(java.lang.String,java.lang.String)>($r1, $r4);

        if $z0 == 0 goto label3;

        $r7 = new java.lang.IllegalArgumentException;

        $r1 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r7;

     label3:
        return;
    }
    private static java.lang.String recombine(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2;
        java.lang.StringBuilder $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=?");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?=");

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }
    private static java.lang.String replaceUnderscores(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.StringBuilder r1;
        int i0, $i1;
        char $c2;

        $r0 := @parameter0: java.lang.String;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>(int)>(128);

        i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if i0 >= $i1 goto label4;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i0);

        if $c2 != 95 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=20");

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        goto label2;

     label4:
        $r0 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }
    private static java.lang.String tryDecodeEncodedWord(java.lang.String, java.lang.String, java.lang.String, org.apache.james.mime4j.codec.DecodeMonitor)
    {
        java.lang.String $r0, $r1, $r2, $r6;
        org.apache.james.mime4j.codec.DecodeMonitor $r3;
        java.nio.charset.Charset $r4;
        java.lang.String[] $r5;
        int $i0;
        boolean $z0;
        java.io.UnsupportedEncodingException r7;
        java.lang.RuntimeException r8;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: org.apache.james.mime4j.codec.DecodeMonitor;

        $r4 = staticinvoke <org.apache.james.mime4j.util.CharsetUtil: java.nio.charset.Charset lookup(java.lang.String)>($r0);

        if $r4 != null goto label01;

        $r5 = newarray (java.lang.String)[3];

        $r5[0] = "Mime charser \'";

        $r5[1] = $r0;

        $r5[2] = "\' doesn\'t have a corresponding Java charset";

        staticinvoke <org.apache.james.mime4j.codec.DecoderUtil: void monitor(org.apache.james.mime4j.codec.DecodeMonitor,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($r3, $r0, $r1, $r2, "leaving word encoded", $r5);

        return null;

     label01:
        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = "Missing encoded text in encoded word";

        staticinvoke <org.apache.james.mime4j.codec.DecoderUtil: void monitor(org.apache.james.mime4j.codec.DecodeMonitor,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($r3, $r0, $r1, $r2, "leaving word encoded", $r5);

        return null;

     label02:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Q");

     label03:
        if $z0 == 0 goto label06;

     label04:
        $r6 = virtualinvoke $r4.<java.nio.charset.Charset: java.lang.String name()>();

        $r6 = staticinvoke <org.apache.james.mime4j.codec.DecoderUtil: java.lang.String decodeQ(java.lang.String,java.lang.String,org.apache.james.mime4j.codec.DecodeMonitor)>($r2, $r6, $r3);

     label05:
        return $r6;

     label06:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("B");

     label07:
        if $z0 == 0 goto label10;

     label08:
        $r6 = virtualinvoke $r4.<java.nio.charset.Charset: java.lang.String name()>();

        $r6 = staticinvoke <org.apache.james.mime4j.codec.DecoderUtil: java.lang.String decodeB(java.lang.String,java.lang.String,org.apache.james.mime4j.codec.DecodeMonitor)>($r2, $r6, $r3);

     label09:
        return $r6;

     label10:
        $r5 = newarray (java.lang.String)[1];

        $r5[0] = "Warning: Unknown encoding in encoded word";

     label11:
        staticinvoke <org.apache.james.mime4j.codec.DecoderUtil: void monitor(org.apache.james.mime4j.codec.DecodeMonitor,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($r3, $r0, $r1, $r2, "leaving word encoded", $r5);

     label12:
        return null;

     label13:
        r7 := @caughtexception;

        $r5 = newarray (java.lang.String)[3];

        $r5[0] = "Unsupported encoding (";

        $r6 = virtualinvoke r7.<java.io.UnsupportedEncodingException: java.lang.String getMessage()>();

        $r5[1] = $r6;

        $r5[2] = ") in encoded word";

        staticinvoke <org.apache.james.mime4j.codec.DecoderUtil: void monitor(org.apache.james.mime4j.codec.DecodeMonitor,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($r3, $r0, $r1, $r2, "leaving word encoded", $r5);

        return null;

     label14:
        r8 := @caughtexception;

        $r5 = newarray (java.lang.String)[3];

        $r5[0] = "Could not decode (";

        $r6 = virtualinvoke r8.<java.lang.RuntimeException: java.lang.String getMessage()>();

        $r5[1] = $r6;

        $r5[2] = ") encoded word";

        staticinvoke <org.apache.james.mime4j.codec.DecoderUtil: void monitor(org.apache.james.mime4j.codec.DecodeMonitor,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($r3, $r0, $r1, $r2, "leaving word encoded", $r5);

        return null;

        catch java.io.UnsupportedEncodingException from label02 to label03 with label13;
        catch java.io.UnsupportedEncodingException from label04 to label05 with label13;
        catch java.io.UnsupportedEncodingException from label06 to label07 with label13;
        catch java.io.UnsupportedEncodingException from label08 to label09 with label13;
        catch java.io.UnsupportedEncodingException from label11 to label12 with label13;
        catch java.lang.RuntimeException from label02 to label03 with label14;
        catch java.lang.RuntimeException from label04 to label05 with label14;
        catch java.lang.RuntimeException from label06 to label07 with label14;
        catch java.lang.RuntimeException from label08 to label09 with label14;
        catch java.lang.RuntimeException from label10 to label12 with label14;
    }
