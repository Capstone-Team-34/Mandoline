org.apache.james.mime4j.message.EntityBuilder extends java.lang.Object implements org.apache.james.mime4j.parser.ContentHandler
private final org.apache.james.mime4j.message.BodyFactory bodyFactory
private final org.apache.james.mime4j.dom.Entity entity
private final java.util.Stack stack
    void <init>(org.apache.james.mime4j.dom.Entity, org.apache.james.mime4j.message.BodyFactory)
    {
        org.apache.james.mime4j.message.EntityBuilder r0;
        org.apache.james.mime4j.dom.Entity $r1;
        org.apache.james.mime4j.message.BodyFactory $r2;
        java.util.Stack $r3;

        r0 := @this: org.apache.james.mime4j.message.EntityBuilder;

        $r1 := @parameter0: org.apache.james.mime4j.dom.Entity;

        $r2 := @parameter1: org.apache.james.mime4j.message.BodyFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.james.mime4j.message.EntityBuilder: org.apache.james.mime4j.dom.Entity entity> = $r1;

        r0.<org.apache.james.mime4j.message.EntityBuilder: org.apache.james.mime4j.message.BodyFactory bodyFactory> = $r2;

        $r3 = new java.util.Stack;

        specialinvoke $r3.<java.util.Stack: void <init>()>();

        r0.<org.apache.james.mime4j.message.EntityBuilder: java.util.Stack stack> = $r3;

        return;
    }
    private void expect(java.lang.Class)
    {
        org.apache.james.mime4j.message.EntityBuilder r0;
        java.lang.Class r1;
        java.util.Stack $r2;
        java.lang.Object $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        r0 := @this: org.apache.james.mime4j.message.EntityBuilder;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.apache.james.mime4j.message.EntityBuilder: java.util.Stack stack>;

        $r3 = virtualinvoke $r2.<java.util.Stack: java.lang.Object peek()>();

        $z0 = virtualinvoke r1.<java.lang.Class: boolean isInstance(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Internal stack error: Expected \'");

        $r6 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' found \'");

        $r2 = r0.<org.apache.james.mime4j.message.EntityBuilder: java.util.Stack stack>;

        $r3 = virtualinvoke $r2.<java.util.Stack: java.lang.Object peek()>();

        r1 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label1:
        return;
    }
    private static org.apache.james.mime4j.util.ByteSequence loadStream(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        org.apache.james.mime4j.util.ByteArrayBuffer r1;
        int $i0;

        $r0 := @parameter0: java.io.InputStream;

        r1 = new org.apache.james.mime4j.util.ByteArrayBuffer;

        specialinvoke r1.<org.apache.james.mime4j.util.ByteArrayBuffer: void <init>(int)>(64);

     label1:
        $i0 = virtualinvoke $r0.<java.io.InputStream: int read()>();

        if $i0 == -1 goto label2;

        virtualinvoke r1.<org.apache.james.mime4j.util.ByteArrayBuffer: void append(int)>($i0);

        goto label1;

     label2:
        return r1;
    }
    public void body(org.apache.james.mime4j.stream.BodyDescriptor, java.io.InputStream) throws org.apache.james.mime4j.MimeException, java.io.IOException
    {
        org.apache.james.mime4j.message.EntityBuilder r0;
        org.apache.james.mime4j.stream.BodyDescriptor $r1;
        java.io.InputStream $r2;
        java.lang.String $r3;
        boolean $z0;
        org.apache.james.mime4j.message.BodyFactory $r4;
        org.apache.james.mime4j.dom.SingleBody r5;
        java.util.Stack $r6;
        java.lang.Object $r7;
        org.apache.james.mime4j.dom.Entity r8;

        r0 := @this: org.apache.james.mime4j.message.EntityBuilder;

        $r1 := @parameter0: org.apache.james.mime4j.stream.BodyDescriptor;

        $r2 := @parameter1: java.io.InputStream;

        specialinvoke r0.<org.apache.james.mime4j.message.EntityBuilder: void expect(java.lang.Class)>(class "Lorg/apache/james/mime4j/dom/Entity;");

        $r3 = interfaceinvoke $r1.<org.apache.james.mime4j.stream.BodyDescriptor: java.lang.String getMimeType()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("text/");

        if $z0 == 0 goto label2;

        $r4 = r0.<org.apache.james.mime4j.message.EntityBuilder: org.apache.james.mime4j.message.BodyFactory bodyFactory>;

        $r3 = interfaceinvoke $r1.<org.apache.james.mime4j.stream.BodyDescriptor: java.lang.String getCharset()>();

        r5 = interfaceinvoke $r4.<org.apache.james.mime4j.message.BodyFactory: org.apache.james.mime4j.dom.TextBody textBody(java.io.InputStream,java.lang.String)>($r2, $r3);

     label1:
        $r6 = r0.<org.apache.james.mime4j.message.EntityBuilder: java.util.Stack stack>;

        $r7 = virtualinvoke $r6.<java.util.Stack: java.lang.Object peek()>();

        r8 = (org.apache.james.mime4j.dom.Entity) $r7;

        interfaceinvoke r8.<org.apache.james.mime4j.dom.Entity: void setBody(org.apache.james.mime4j.dom.Body)>(r5);

        return;

     label2:
        $r4 = r0.<org.apache.james.mime4j.message.EntityBuilder: org.apache.james.mime4j.message.BodyFactory bodyFactory>;

        r5 = interfaceinvoke $r4.<org.apache.james.mime4j.message.BodyFactory: org.apache.james.mime4j.dom.BinaryBody binaryBody(java.io.InputStream)>($r2);

        goto label1;
    }
    public void endBodyPart() throws org.apache.james.mime4j.MimeException
    {
        org.apache.james.mime4j.message.EntityBuilder r0;
        java.util.Stack $r1;

        r0 := @this: org.apache.james.mime4j.message.EntityBuilder;

        specialinvoke r0.<org.apache.james.mime4j.message.EntityBuilder: void expect(java.lang.Class)>(class "Lorg/apache/james/mime4j/message/BodyPart;");

        $r1 = r0.<org.apache.james.mime4j.message.EntityBuilder: java.util.Stack stack>;

        virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        return;
    }
    public void endHeader() throws org.apache.james.mime4j.MimeException
    {
        org.apache.james.mime4j.message.EntityBuilder r0;
        java.util.Stack $r1;
        java.lang.Object $r2;
        org.apache.james.mime4j.dom.Header r3;
        org.apache.james.mime4j.dom.Entity $r4;

        r0 := @this: org.apache.james.mime4j.message.EntityBuilder;

        specialinvoke r0.<org.apache.james.mime4j.message.EntityBuilder: void expect(java.lang.Class)>(class "Lorg/apache/james/mime4j/dom/Header;");

        $r1 = r0.<org.apache.james.mime4j.message.EntityBuilder: java.util.Stack stack>;

        $r2 = virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        r3 = (org.apache.james.mime4j.dom.Header) $r2;

        specialinvoke r0.<org.apache.james.mime4j.message.EntityBuilder: void expect(java.lang.Class)>(class "Lorg/apache/james/mime4j/dom/Entity;");

        $r1 = r0.<org.apache.james.mime4j.message.EntityBuilder: java.util.Stack stack>;

        $r2 = virtualinvoke $r1.<java.util.Stack: java.lang.Object peek()>();

        $r4 = (org.apache.james.mime4j.dom.Entity) $r2;

        interfaceinvoke $r4.<org.apache.james.mime4j.dom.Entity: void setHeader(org.apache.james.mime4j.dom.Header)>(r3);

        return;
    }
    public void endMessage() throws org.apache.james.mime4j.MimeException
    {
        org.apache.james.mime4j.message.EntityBuilder r0;
        java.util.Stack $r1;

        r0 := @this: org.apache.james.mime4j.message.EntityBuilder;

        specialinvoke r0.<org.apache.james.mime4j.message.EntityBuilder: void expect(java.lang.Class)>(class "Lorg/apache/james/mime4j/dom/Message;");

        $r1 = r0.<org.apache.james.mime4j.message.EntityBuilder: java.util.Stack stack>;

        virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        return;
    }
    public void endMultipart() throws org.apache.james.mime4j.MimeException
    {
        org.apache.james.mime4j.message.EntityBuilder r0;
        java.util.Stack $r1;

        r0 := @this: org.apache.james.mime4j.message.EntityBuilder;

        $r1 = r0.<org.apache.james.mime4j.message.EntityBuilder: java.util.Stack stack>;

        virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        return;
    }
    public void epilogue(java.io.InputStream) throws org.apache.james.mime4j.MimeException, java.io.IOException
    {
        org.apache.james.mime4j.message.EntityBuilder r0;
        java.io.InputStream $r1;
        org.apache.james.mime4j.util.ByteSequence $r2;
        java.util.Stack $r3;
        java.lang.Object $r4;
        org.apache.james.mime4j.message.MultipartImpl $r5;

        r0 := @this: org.apache.james.mime4j.message.EntityBuilder;

        $r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<org.apache.james.mime4j.message.EntityBuilder: void expect(java.lang.Class)>(class "Lorg/apache/james/mime4j/message/MultipartImpl;");

        $r2 = staticinvoke <org.apache.james.mime4j.message.EntityBuilder: org.apache.james.mime4j.util.ByteSequence loadStream(java.io.InputStream)>($r1);

        $r3 = r0.<org.apache.james.mime4j.message.EntityBuilder: java.util.Stack stack>;

        $r4 = virtualinvoke $r3.<java.util.Stack: java.lang.Object peek()>();

        $r5 = (org.apache.james.mime4j.message.MultipartImpl) $r4;

        virtualinvoke $r5.<org.apache.james.mime4j.message.MultipartImpl: void setEpilogueRaw(org.apache.james.mime4j.util.ByteSequence)>($r2);

        return;
    }
    public void field(org.apache.james.mime4j.stream.Field) throws org.apache.james.mime4j.MimeException
    {
        org.apache.james.mime4j.message.EntityBuilder r0;
        org.apache.james.mime4j.stream.Field $r1;
        java.lang.Object $r2;
        java.util.Stack $r3;
        org.apache.james.mime4j.dom.Header $r4;

        r0 := @this: org.apache.james.mime4j.message.EntityBuilder;

        $r1 := @parameter0: org.apache.james.mime4j.stream.Field;

        specialinvoke r0.<org.apache.james.mime4j.message.EntityBuilder: void expect(java.lang.Class)>(class "Lorg/apache/james/mime4j/dom/Header;");

        $r3 = r0.<org.apache.james.mime4j.message.EntityBuilder: java.util.Stack stack>;

        $r2 = virtualinvoke $r3.<java.util.Stack: java.lang.Object peek()>();

        $r4 = (org.apache.james.mime4j.dom.Header) $r2;

        interfaceinvoke $r4.<org.apache.james.mime4j.dom.Header: void addField(org.apache.james.mime4j.stream.Field)>($r1);

        return;
    }
    public void preamble(java.io.InputStream) throws org.apache.james.mime4j.MimeException, java.io.IOException
    {
        org.apache.james.mime4j.message.EntityBuilder r0;
        java.io.InputStream $r1;
        org.apache.james.mime4j.util.ByteSequence $r2;
        java.util.Stack $r3;
        java.lang.Object $r4;
        org.apache.james.mime4j.message.MultipartImpl $r5;

        r0 := @this: org.apache.james.mime4j.message.EntityBuilder;

        $r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<org.apache.james.mime4j.message.EntityBuilder: void expect(java.lang.Class)>(class "Lorg/apache/james/mime4j/message/MultipartImpl;");

        $r2 = staticinvoke <org.apache.james.mime4j.message.EntityBuilder: org.apache.james.mime4j.util.ByteSequence loadStream(java.io.InputStream)>($r1);

        $r3 = r0.<org.apache.james.mime4j.message.EntityBuilder: java.util.Stack stack>;

        $r4 = virtualinvoke $r3.<java.util.Stack: java.lang.Object peek()>();

        $r5 = (org.apache.james.mime4j.message.MultipartImpl) $r4;

        virtualinvoke $r5.<org.apache.james.mime4j.message.MultipartImpl: void setPreambleRaw(org.apache.james.mime4j.util.ByteSequence)>($r2);

        return;
    }
    public void raw(java.io.InputStream) throws org.apache.james.mime4j.MimeException, java.io.IOException
    {
        org.apache.james.mime4j.message.EntityBuilder r0;
        java.io.InputStream $r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.james.mime4j.message.EntityBuilder;

        $r1 := @parameter0: java.io.InputStream;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Not supported");

        throw $r2;
    }
    public void startBodyPart() throws org.apache.james.mime4j.MimeException
    {
        org.apache.james.mime4j.message.EntityBuilder r0;
        org.apache.james.mime4j.message.BodyPart r1;
        java.lang.Object $r2;
        java.util.Stack $r3;
        org.apache.james.mime4j.dom.Multipart $r4;

        r0 := @this: org.apache.james.mime4j.message.EntityBuilder;

        specialinvoke r0.<org.apache.james.mime4j.message.EntityBuilder: void expect(java.lang.Class)>(class "Lorg/apache/james/mime4j/dom/Multipart;");

        r1 = new org.apache.james.mime4j.message.BodyPart;

        specialinvoke r1.<org.apache.james.mime4j.message.BodyPart: void <init>()>();

        $r3 = r0.<org.apache.james.mime4j.message.EntityBuilder: java.util.Stack stack>;

        $r2 = virtualinvoke $r3.<java.util.Stack: java.lang.Object peek()>();

        $r4 = (org.apache.james.mime4j.dom.Multipart) $r2;

        interfaceinvoke $r4.<org.apache.james.mime4j.dom.Multipart: void addBodyPart(org.apache.james.mime4j.dom.Entity)>(r1);

        $r3 = r0.<org.apache.james.mime4j.message.EntityBuilder: java.util.Stack stack>;

        virtualinvoke $r3.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r1);

        return;
    }
    public void startHeader() throws org.apache.james.mime4j.MimeException
    {
        org.apache.james.mime4j.message.EntityBuilder r0;
        java.util.Stack $r1;
        org.apache.james.mime4j.message.HeaderImpl $r2;

        r0 := @this: org.apache.james.mime4j.message.EntityBuilder;

        $r1 = r0.<org.apache.james.mime4j.message.EntityBuilder: java.util.Stack stack>;

        $r2 = new org.apache.james.mime4j.message.HeaderImpl;

        specialinvoke $r2.<org.apache.james.mime4j.message.HeaderImpl: void <init>()>();

        virtualinvoke $r1.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r2);

        return;
    }
    public void startMessage() throws org.apache.james.mime4j.MimeException
    {
        org.apache.james.mime4j.message.EntityBuilder r0;
        org.apache.james.mime4j.message.MessageImpl r1;
        org.apache.james.mime4j.dom.Entity $r2;
        java.util.Stack $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: org.apache.james.mime4j.message.EntityBuilder;

        $r3 = r0.<org.apache.james.mime4j.message.EntityBuilder: java.util.Stack stack>;

        $z0 = virtualinvoke $r3.<java.util.Stack: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.james.mime4j.message.EntityBuilder: java.util.Stack stack>;

        $r2 = r0.<org.apache.james.mime4j.message.EntityBuilder: org.apache.james.mime4j.dom.Entity entity>;

        virtualinvoke $r3.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r2);

        return;

     label1:
        specialinvoke r0.<org.apache.james.mime4j.message.EntityBuilder: void expect(java.lang.Class)>(class "Lorg/apache/james/mime4j/dom/Entity;");

        r1 = new org.apache.james.mime4j.message.MessageImpl;

        specialinvoke r1.<org.apache.james.mime4j.message.MessageImpl: void <init>()>();

        $r3 = r0.<org.apache.james.mime4j.message.EntityBuilder: java.util.Stack stack>;

        $r4 = virtualinvoke $r3.<java.util.Stack: java.lang.Object peek()>();

        $r2 = (org.apache.james.mime4j.dom.Entity) $r4;

        interfaceinvoke $r2.<org.apache.james.mime4j.dom.Entity: void setBody(org.apache.james.mime4j.dom.Body)>(r1);

        $r3 = r0.<org.apache.james.mime4j.message.EntityBuilder: java.util.Stack stack>;

        virtualinvoke $r3.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r1);

        return;
    }
    public void startMultipart(org.apache.james.mime4j.stream.BodyDescriptor) throws org.apache.james.mime4j.MimeException
    {
        org.apache.james.mime4j.message.EntityBuilder r0;
        org.apache.james.mime4j.stream.BodyDescriptor $r1;
        org.apache.james.mime4j.message.MultipartImpl r2;
        java.util.Stack $r3;
        java.lang.Object $r4;
        org.apache.james.mime4j.dom.Entity r5;
        java.lang.String $r6;

        r0 := @this: org.apache.james.mime4j.message.EntityBuilder;

        $r1 := @parameter0: org.apache.james.mime4j.stream.BodyDescriptor;

        specialinvoke r0.<org.apache.james.mime4j.message.EntityBuilder: void expect(java.lang.Class)>(class "Lorg/apache/james/mime4j/dom/Entity;");

        $r3 = r0.<org.apache.james.mime4j.message.EntityBuilder: java.util.Stack stack>;

        $r4 = virtualinvoke $r3.<java.util.Stack: java.lang.Object peek()>();

        r5 = (org.apache.james.mime4j.dom.Entity) $r4;

        $r6 = interfaceinvoke $r1.<org.apache.james.mime4j.stream.BodyDescriptor: java.lang.String getSubType()>();

        r2 = new org.apache.james.mime4j.message.MultipartImpl;

        specialinvoke r2.<org.apache.james.mime4j.message.MultipartImpl: void <init>(java.lang.String)>($r6);

        interfaceinvoke r5.<org.apache.james.mime4j.dom.Entity: void setBody(org.apache.james.mime4j.dom.Body)>(r2);

        $r3 = r0.<org.apache.james.mime4j.message.EntityBuilder: java.util.Stack stack>;

        virtualinvoke $r3.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r2);

        return;
    }
