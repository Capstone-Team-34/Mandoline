org.apache.james.mime4j.message.DefaultMessageWriter extends java.lang.Object implements org.apache.james.mime4j.dom.MessageWriter
private static final byte[] CRLF
private static final byte[] DASHES
    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[2];

        $r0[0] = 13;

        $r0[1] = 10;

        <org.apache.james.mime4j.message.DefaultMessageWriter: byte[] CRLF> = $r0;

        $r0 = newarray (byte)[2];

        $r0[0] = 45;

        $r0[1] = 45;

        <org.apache.james.mime4j.message.DefaultMessageWriter: byte[] DASHES> = $r0;

        return;
    }
    public void <init>()
    {
        org.apache.james.mime4j.message.DefaultMessageWriter r0;

        r0 := @this: org.apache.james.mime4j.message.DefaultMessageWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private org.apache.james.mime4j.util.ByteSequence getBoundary(org.apache.james.mime4j.dom.field.ContentTypeField)
    {
        org.apache.james.mime4j.message.DefaultMessageWriter r0;
        org.apache.james.mime4j.dom.field.ContentTypeField $r1;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4;
        org.apache.james.mime4j.util.ByteSequence $r5;

        r0 := @this: org.apache.james.mime4j.message.DefaultMessageWriter;

        $r1 := @parameter0: org.apache.james.mime4j.dom.field.ContentTypeField;

        $r2 = interfaceinvoke $r1.<org.apache.james.mime4j.dom.field.ContentTypeField: java.lang.String getBoundary()>();

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Multipart boundary not specified. Mime-Type: ");

        $r2 = interfaceinvoke $r1.<org.apache.james.mime4j.dom.field.ContentTypeField: java.lang.String getMimeType()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Raw: ");

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r3;

     label1:
        $r5 = staticinvoke <org.apache.james.mime4j.util.ContentUtil: org.apache.james.mime4j.util.ByteSequence encode(java.lang.String)>($r2);

        return $r5;
    }
    private org.apache.james.mime4j.dom.field.ContentTypeField getContentType(org.apache.james.mime4j.dom.Multipart)
    {
        org.apache.james.mime4j.message.DefaultMessageWriter r0;
        org.apache.james.mime4j.dom.Multipart $r1;
        org.apache.james.mime4j.dom.Entity $r2;
        java.lang.IllegalArgumentException $r3;
        org.apache.james.mime4j.dom.Header $r4;
        org.apache.james.mime4j.stream.Field $r5;
        org.apache.james.mime4j.dom.field.ContentTypeField r6;

        r0 := @this: org.apache.james.mime4j.message.DefaultMessageWriter;

        $r1 := @parameter0: org.apache.james.mime4j.dom.Multipart;

        $r2 = interfaceinvoke $r1.<org.apache.james.mime4j.dom.Multipart: org.apache.james.mime4j.dom.Entity getParent()>();

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Missing parent entity in multipart");

        throw $r3;

     label1:
        $r4 = interfaceinvoke $r2.<org.apache.james.mime4j.dom.Entity: org.apache.james.mime4j.dom.Header getHeader()>();

        if $r4 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Missing header in parent entity");

        throw $r3;

     label2:
        $r5 = interfaceinvoke $r4.<org.apache.james.mime4j.dom.Header: org.apache.james.mime4j.stream.Field getField(java.lang.String)>("Content-Type");

        r6 = (org.apache.james.mime4j.dom.field.ContentTypeField) $r5;

        if r6 != null goto label3;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Content-Type field not specified");

        throw $r3;

     label3:
        return r6;
    }
    private void writeBytes(org.apache.james.mime4j.util.ByteSequence, java.io.OutputStream) throws java.io.IOException
    {
        org.apache.james.mime4j.message.DefaultMessageWriter r0;
        org.apache.james.mime4j.util.ByteSequence $r1;
        java.io.OutputStream $r2;
        boolean $z0;
        org.apache.james.mime4j.util.ByteArrayBuffer r3;
        byte[] $r4;
        int $i0;

        r0 := @this: org.apache.james.mime4j.message.DefaultMessageWriter;

        $r1 := @parameter0: org.apache.james.mime4j.util.ByteSequence;

        $r2 := @parameter1: java.io.OutputStream;

        $z0 = $r1 instanceof org.apache.james.mime4j.util.ByteArrayBuffer;

        if $z0 == 0 goto label1;

        r3 = (org.apache.james.mime4j.util.ByteArrayBuffer) $r1;

        $r4 = virtualinvoke r3.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer()>();

        $i0 = virtualinvoke r3.<org.apache.james.mime4j.util.ByteArrayBuffer: int length()>();

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i0);

        return;

     label1:
        $r4 = interfaceinvoke $r1.<org.apache.james.mime4j.util.ByteSequence: byte[] toByteArray()>();

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r4);

        return;
    }
    protected java.io.OutputStream encodeStream(java.io.OutputStream, java.lang.String, boolean) throws java.io.IOException
    {
        org.apache.james.mime4j.message.DefaultMessageWriter r0;
        java.lang.String $r1;
        boolean $z0, $z1;
        java.io.OutputStream r2;

        r0 := @this: org.apache.james.mime4j.message.DefaultMessageWriter;

        r2 := @parameter0: java.io.OutputStream;

        $r1 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $z1 = staticinvoke <org.apache.james.mime4j.util.MimeUtil: boolean isBase64Encoding(java.lang.String)>($r1);

        if $z1 == 0 goto label1;

        r2 = staticinvoke <org.apache.james.mime4j.codec.CodecUtil: java.io.OutputStream wrapBase64(java.io.OutputStream)>(r2);

        return r2;

     label1:
        $z1 = staticinvoke <org.apache.james.mime4j.util.MimeUtil: boolean isQuotedPrintableEncoded(java.lang.String)>($r1);

        if $z1 == 0 goto label2;

        r2 = staticinvoke <org.apache.james.mime4j.codec.CodecUtil: java.io.OutputStream wrapQuotedPrintable(java.io.OutputStream,boolean)>(r2, $z0);

     label2:
        return r2;
    }
    public void writeBody(org.apache.james.mime4j.dom.Body, java.io.OutputStream) throws java.io.IOException
    {
        org.apache.james.mime4j.message.DefaultMessageWriter r0;
        java.io.OutputStream $r1;
        org.apache.james.mime4j.dom.Body r2;
        boolean $z0;
        org.apache.james.mime4j.dom.Message r3;
        org.apache.james.mime4j.dom.Multipart r4;
        org.apache.james.mime4j.dom.SingleBody r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: org.apache.james.mime4j.message.DefaultMessageWriter;

        r2 := @parameter0: org.apache.james.mime4j.dom.Body;

        $r1 := @parameter1: java.io.OutputStream;

        $z0 = r2 instanceof org.apache.james.mime4j.dom.Message;

        if $z0 == 0 goto label1;

        r3 = (org.apache.james.mime4j.dom.Message) r2;

        virtualinvoke r0.<org.apache.james.mime4j.message.DefaultMessageWriter: void writeEntity(org.apache.james.mime4j.dom.Entity,java.io.OutputStream)>(r3, $r1);

        return;

     label1:
        $z0 = r2 instanceof org.apache.james.mime4j.dom.Multipart;

        if $z0 == 0 goto label2;

        r4 = (org.apache.james.mime4j.dom.Multipart) r2;

        virtualinvoke r0.<org.apache.james.mime4j.message.DefaultMessageWriter: void writeMultipart(org.apache.james.mime4j.dom.Multipart,java.io.OutputStream)>(r4, $r1);

        return;

     label2:
        $z0 = r2 instanceof org.apache.james.mime4j.dom.SingleBody;

        if $z0 == 0 goto label3;

        r5 = (org.apache.james.mime4j.dom.SingleBody) r2;

        virtualinvoke r5.<org.apache.james.mime4j.dom.SingleBody: void writeTo(java.io.OutputStream)>($r1);

        return;

     label3:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported body class");

        throw $r6;
    }
    public void writeEntity(org.apache.james.mime4j.dom.Entity, java.io.OutputStream) throws java.io.IOException
    {
        org.apache.james.mime4j.message.DefaultMessageWriter r0;
        org.apache.james.mime4j.dom.Entity $r1;
        java.io.OutputStream $r2, $r7;
        boolean z0;
        org.apache.james.mime4j.dom.Header $r3;
        java.lang.IllegalArgumentException $r4;
        org.apache.james.mime4j.dom.Body $r5;
        java.lang.String $r6;

        r0 := @this: org.apache.james.mime4j.message.DefaultMessageWriter;

        $r1 := @parameter0: org.apache.james.mime4j.dom.Entity;

        $r2 := @parameter1: java.io.OutputStream;

        $r3 = interfaceinvoke $r1.<org.apache.james.mime4j.dom.Entity: org.apache.james.mime4j.dom.Header getHeader()>();

        if $r3 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Missing header");

        throw $r4;

     label1:
        virtualinvoke r0.<org.apache.james.mime4j.message.DefaultMessageWriter: void writeHeader(org.apache.james.mime4j.dom.Header,java.io.OutputStream)>($r3, $r2);

        $r5 = interfaceinvoke $r1.<org.apache.james.mime4j.dom.Entity: org.apache.james.mime4j.dom.Body getBody()>();

        if $r5 != null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Missing body");

        throw $r4;

     label2:
        z0 = $r5 instanceof org.apache.james.mime4j.dom.BinaryBody;

        $r6 = interfaceinvoke $r1.<org.apache.james.mime4j.dom.Entity: java.lang.String getContentTransferEncoding()>();

        $r7 = virtualinvoke r0.<org.apache.james.mime4j.message.DefaultMessageWriter: java.io.OutputStream encodeStream(java.io.OutputStream,java.lang.String,boolean)>($r2, $r6, z0);

        virtualinvoke r0.<org.apache.james.mime4j.message.DefaultMessageWriter: void writeBody(org.apache.james.mime4j.dom.Body,java.io.OutputStream)>($r5, $r7);

        if $r7 == $r2 goto label3;

        virtualinvoke $r7.<java.io.OutputStream: void close()>();

     label3:
        return;
    }
    public void writeField(org.apache.james.mime4j.stream.Field, java.io.OutputStream) throws java.io.IOException
    {
        org.apache.james.mime4j.message.DefaultMessageWriter r0;
        org.apache.james.mime4j.stream.Field $r1;
        java.io.OutputStream $r2;
        java.lang.StringBuilder r3;
        org.apache.james.mime4j.util.ByteSequence $r4, r5;
        java.lang.String $r6;
        byte[] $r7;

        r0 := @this: org.apache.james.mime4j.message.DefaultMessageWriter;

        $r1 := @parameter0: org.apache.james.mime4j.stream.Field;

        $r2 := @parameter1: java.io.OutputStream;

        $r4 = interfaceinvoke $r1.<org.apache.james.mime4j.stream.Field: org.apache.james.mime4j.util.ByteSequence getRaw()>();

        r5 = $r4;

        if $r4 != null goto label2;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        $r6 = interfaceinvoke $r1.<org.apache.james.mime4j.stream.Field: java.lang.String getName()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r6 = interfaceinvoke $r1.<org.apache.james.mime4j.stream.Field: java.lang.String getBody()>();

        if $r6 == null goto label1;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label1:
        $r6 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = staticinvoke <org.apache.james.mime4j.util.MimeUtil: java.lang.String fold(java.lang.String,int)>($r6, 0);

        r5 = staticinvoke <org.apache.james.mime4j.util.ContentUtil: org.apache.james.mime4j.util.ByteSequence encode(java.lang.String)>($r6);

     label2:
        specialinvoke r0.<org.apache.james.mime4j.message.DefaultMessageWriter: void writeBytes(org.apache.james.mime4j.util.ByteSequence,java.io.OutputStream)>(r5, $r2);

        $r7 = <org.apache.james.mime4j.message.DefaultMessageWriter: byte[] CRLF>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r7);

        return;
    }
    public void writeHeader(org.apache.james.mime4j.dom.Header, java.io.OutputStream) throws java.io.IOException
    {
        org.apache.james.mime4j.message.DefaultMessageWriter r0;
        org.apache.james.mime4j.dom.Header $r1;
        java.io.OutputStream $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.apache.james.mime4j.stream.Field r5;
        byte[] $r6;

        r0 := @this: org.apache.james.mime4j.message.DefaultMessageWriter;

        $r1 := @parameter0: org.apache.james.mime4j.dom.Header;

        $r2 := @parameter1: java.io.OutputStream;

        $r3 = interfaceinvoke $r1.<org.apache.james.mime4j.dom.Header: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.james.mime4j.stream.Field) $r4;

        virtualinvoke r0.<org.apache.james.mime4j.message.DefaultMessageWriter: void writeField(org.apache.james.mime4j.stream.Field,java.io.OutputStream)>(r5, $r2);

        goto label1;

     label2:
        $r6 = <org.apache.james.mime4j.message.DefaultMessageWriter: byte[] CRLF>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r6);

        return;
    }
    public void writeMessage(org.apache.james.mime4j.dom.Message, java.io.OutputStream) throws java.io.IOException
    {
        org.apache.james.mime4j.message.DefaultMessageWriter r0;
        org.apache.james.mime4j.dom.Message $r1;
        java.io.OutputStream $r2;

        r0 := @this: org.apache.james.mime4j.message.DefaultMessageWriter;

        $r1 := @parameter0: org.apache.james.mime4j.dom.Message;

        $r2 := @parameter1: java.io.OutputStream;

        virtualinvoke r0.<org.apache.james.mime4j.message.DefaultMessageWriter: void writeEntity(org.apache.james.mime4j.dom.Entity,java.io.OutputStream)>($r1, $r2);

        return;
    }
    public void writeMultipart(org.apache.james.mime4j.dom.Multipart, java.io.OutputStream) throws java.io.IOException
    {
        org.apache.james.mime4j.message.DefaultMessageWriter r0;
        org.apache.james.mime4j.dom.Multipart $r1;
        java.io.OutputStream $r2;
        org.apache.james.mime4j.dom.field.ContentTypeField $r3;
        org.apache.james.mime4j.util.ByteSequence $r4, $r6, $r7;
        boolean $z0;
        org.apache.james.mime4j.message.MultipartImpl $r5;
        byte[] $r8;
        java.util.List $r9;
        java.util.Iterator $r10;
        java.lang.Object $r11;
        org.apache.james.mime4j.dom.Entity r12;
        java.lang.String $r13;

        r0 := @this: org.apache.james.mime4j.message.DefaultMessageWriter;

        $r1 := @parameter0: org.apache.james.mime4j.dom.Multipart;

        $r2 := @parameter1: java.io.OutputStream;

        $r3 = specialinvoke r0.<org.apache.james.mime4j.message.DefaultMessageWriter: org.apache.james.mime4j.dom.field.ContentTypeField getContentType(org.apache.james.mime4j.dom.Multipart)>($r1);

        $r4 = specialinvoke r0.<org.apache.james.mime4j.message.DefaultMessageWriter: org.apache.james.mime4j.util.ByteSequence getBoundary(org.apache.james.mime4j.dom.field.ContentTypeField)>($r3);

        $z0 = $r1 instanceof org.apache.james.mime4j.message.MultipartImpl;

        if $z0 == 0 goto label4;

        $r5 = (org.apache.james.mime4j.message.MultipartImpl) $r1;

        $r6 = virtualinvoke $r5.<org.apache.james.mime4j.message.MultipartImpl: org.apache.james.mime4j.util.ByteSequence getPreambleRaw()>();

        $r5 = (org.apache.james.mime4j.message.MultipartImpl) $r1;

        $r7 = virtualinvoke $r5.<org.apache.james.mime4j.message.MultipartImpl: org.apache.james.mime4j.util.ByteSequence getEpilogueRaw()>();

     label1:
        if $r6 == null goto label2;

        specialinvoke r0.<org.apache.james.mime4j.message.DefaultMessageWriter: void writeBytes(org.apache.james.mime4j.util.ByteSequence,java.io.OutputStream)>($r6, $r2);

        $r8 = <org.apache.james.mime4j.message.DefaultMessageWriter: byte[] CRLF>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r8);

     label2:
        $r9 = interfaceinvoke $r1.<org.apache.james.mime4j.dom.Multipart: java.util.List getBodyParts()>();

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.apache.james.mime4j.dom.Entity) $r11;

        $r8 = <org.apache.james.mime4j.message.DefaultMessageWriter: byte[] DASHES>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r8);

        specialinvoke r0.<org.apache.james.mime4j.message.DefaultMessageWriter: void writeBytes(org.apache.james.mime4j.util.ByteSequence,java.io.OutputStream)>($r4, $r2);

        $r8 = <org.apache.james.mime4j.message.DefaultMessageWriter: byte[] CRLF>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r8);

        virtualinvoke r0.<org.apache.james.mime4j.message.DefaultMessageWriter: void writeEntity(org.apache.james.mime4j.dom.Entity,java.io.OutputStream)>(r12, $r2);

        $r8 = <org.apache.james.mime4j.message.DefaultMessageWriter: byte[] CRLF>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r8);

        goto label3;

     label4:
        $r13 = interfaceinvoke $r1.<org.apache.james.mime4j.dom.Multipart: java.lang.String getPreamble()>();

        if $r13 == null goto label6;

        $r13 = interfaceinvoke $r1.<org.apache.james.mime4j.dom.Multipart: java.lang.String getPreamble()>();

        $r6 = staticinvoke <org.apache.james.mime4j.util.ContentUtil: org.apache.james.mime4j.util.ByteSequence encode(java.lang.String)>($r13);

     label5:
        $r13 = interfaceinvoke $r1.<org.apache.james.mime4j.dom.Multipart: java.lang.String getEpilogue()>();

        if $r13 == null goto label7;

        $r13 = interfaceinvoke $r1.<org.apache.james.mime4j.dom.Multipart: java.lang.String getEpilogue()>();

        $r7 = staticinvoke <org.apache.james.mime4j.util.ContentUtil: org.apache.james.mime4j.util.ByteSequence encode(java.lang.String)>($r13);

        goto label1;

     label6:
        $r6 = null;

        goto label5;

     label7:
        $r7 = null;

        goto label1;

     label8:
        $r8 = <org.apache.james.mime4j.message.DefaultMessageWriter: byte[] DASHES>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r8);

        specialinvoke r0.<org.apache.james.mime4j.message.DefaultMessageWriter: void writeBytes(org.apache.james.mime4j.util.ByteSequence,java.io.OutputStream)>($r4, $r2);

        $r8 = <org.apache.james.mime4j.message.DefaultMessageWriter: byte[] DASHES>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r8);

        $r8 = <org.apache.james.mime4j.message.DefaultMessageWriter: byte[] CRLF>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r8);

        if $r7 == null goto label9;

        specialinvoke r0.<org.apache.james.mime4j.message.DefaultMessageWriter: void writeBytes(org.apache.james.mime4j.util.ByteSequence,java.io.OutputStream)>($r7, $r2);

     label9:
        return;
    }
