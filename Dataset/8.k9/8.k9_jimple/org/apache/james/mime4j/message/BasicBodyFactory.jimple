org.apache.james.mime4j.message.BasicBodyFactory extends java.lang.Object implements org.apache.james.mime4j.message.BodyFactory
    public void <init>()
    {
        org.apache.james.mime4j.message.BasicBodyFactory r0;

        r0 := @this: org.apache.james.mime4j.message.BasicBodyFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private static byte[] bufferContent(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        java.io.ByteArrayOutputStream r1;
        byte[] r2;
        java.lang.IllegalArgumentException $r3;
        int $i0;

        $r0 := @parameter0: java.io.InputStream;

        if $r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Input stream may not be null");

        throw $r3;

     label1:
        r1 = new java.io.ByteArrayOutputStream;

        specialinvoke r1.<java.io.ByteArrayOutputStream: void <init>()>();

        r2 = newarray (byte)[2048];

     label2:
        $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>(r2);

        if $i0 == -1 goto label3;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r2, 0, $i0);

        goto label2;

     label3:
        r2 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return r2;
    }
    public org.apache.james.mime4j.dom.BinaryBody binaryBody(java.io.InputStream) throws java.io.IOException
    {
        org.apache.james.mime4j.message.BasicBodyFactory r0;
        java.io.InputStream $r1;
        org.apache.james.mime4j.message.BasicBinaryBody $r2;
        byte[] $r3;

        r0 := @this: org.apache.james.mime4j.message.BasicBodyFactory;

        $r1 := @parameter0: java.io.InputStream;

        $r2 = new org.apache.james.mime4j.message.BasicBinaryBody;

        $r3 = staticinvoke <org.apache.james.mime4j.message.BasicBodyFactory: byte[] bufferContent(java.io.InputStream)>($r1);

        specialinvoke $r2.<org.apache.james.mime4j.message.BasicBinaryBody: void <init>(byte[])>($r3);

        return $r2;
    }
    public org.apache.james.mime4j.dom.BinaryBody binaryBody(byte[])
    {
        org.apache.james.mime4j.message.BasicBodyFactory r0;
        byte[] $r1;
        org.apache.james.mime4j.message.BasicBinaryBody $r2;

        r0 := @this: org.apache.james.mime4j.message.BasicBodyFactory;

        $r1 := @parameter0: byte[];

        $r2 = new org.apache.james.mime4j.message.BasicBinaryBody;

        specialinvoke $r2.<org.apache.james.mime4j.message.BasicBinaryBody: void <init>(byte[])>($r1);

        return $r2;
    }
    public org.apache.james.mime4j.dom.TextBody textBody(java.io.InputStream, java.lang.String) throws java.io.IOException
    {
        org.apache.james.mime4j.message.BasicBodyFactory r0;
        java.io.InputStream $r1;
        java.lang.String $r2;
        org.apache.james.mime4j.message.BasicTextBody $r3;
        byte[] $r4;

        r0 := @this: org.apache.james.mime4j.message.BasicBodyFactory;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.lang.String;

        $r3 = new org.apache.james.mime4j.message.BasicTextBody;

        $r4 = staticinvoke <org.apache.james.mime4j.message.BasicBodyFactory: byte[] bufferContent(java.io.InputStream)>($r1);

        specialinvoke $r3.<org.apache.james.mime4j.message.BasicTextBody: void <init>(byte[],java.lang.String)>($r4, $r2);

        return $r3;
    }
    public org.apache.james.mime4j.dom.TextBody textBody(java.lang.String)
    {
        org.apache.james.mime4j.message.BasicBodyFactory r0;
        java.lang.String $r1;
        org.apache.james.mime4j.dom.TextBody $r2;
        java.nio.charset.Charset $r3;

        r0 := @this: org.apache.james.mime4j.message.BasicBodyFactory;

        $r1 := @parameter0: java.lang.String;

        $r3 = <org.apache.james.mime4j.util.CharsetUtil: java.nio.charset.Charset DEFAULT_CHARSET>;

        $r2 = virtualinvoke r0.<org.apache.james.mime4j.message.BasicBodyFactory: org.apache.james.mime4j.dom.TextBody textBody(java.lang.String,java.nio.charset.Charset)>($r1, $r3);

        return $r2;
    }
    public org.apache.james.mime4j.dom.TextBody textBody(java.lang.String, java.lang.String) throws java.io.UnsupportedEncodingException
    {
        org.apache.james.mime4j.message.BasicBodyFactory r0;
        java.lang.String $r1, $r2;
        java.nio.charset.UnsupportedCharsetException r3;
        java.lang.IllegalArgumentException $r4;
        java.nio.charset.Charset $r5;
        org.apache.james.mime4j.message.StringBody $r6;
        java.io.UnsupportedEncodingException $r7;

        r0 := @this: org.apache.james.mime4j.message.BasicBodyFactory;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Text may not be null");

        throw $r4;

     label1:
        $r5 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r2);

        $r6 = new org.apache.james.mime4j.message.StringBody;

     label2:
        specialinvoke $r6.<org.apache.james.mime4j.message.StringBody: void <init>(java.lang.String,java.nio.charset.Charset)>($r1, $r5);

     label3:
        return $r6;

     label4:
        r3 := @caughtexception;

        $r7 = new java.io.UnsupportedEncodingException;

        $r1 = virtualinvoke r3.<java.nio.charset.UnsupportedCharsetException: java.lang.String getMessage()>();

        specialinvoke $r7.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>($r1);

        throw $r7;

        catch java.nio.charset.UnsupportedCharsetException from label2 to label3 with label4;
    }
    public org.apache.james.mime4j.dom.TextBody textBody(java.lang.String, java.nio.charset.Charset)
    {
        org.apache.james.mime4j.message.BasicBodyFactory r0;
        java.lang.String $r1;
        java.nio.charset.Charset $r2;
        java.lang.IllegalArgumentException $r3;
        org.apache.james.mime4j.message.StringBody $r4;

        r0 := @this: org.apache.james.mime4j.message.BasicBodyFactory;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.nio.charset.Charset;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Text may not be null");

        throw $r3;

     label1:
        $r4 = new org.apache.james.mime4j.message.StringBody;

        specialinvoke $r4.<org.apache.james.mime4j.message.StringBody: void <init>(java.lang.String,java.nio.charset.Charset)>($r1, $r2);

        return $r4;
    }
