org.apache.james.mime4j.io.BufferedLineReaderInputStream extends org.apache.james.mime4j.io.LineReaderInputStream
private byte[] buffer
private int buflen
private int bufpos
private final int maxLineLen
private byte[] origBuffer
private int origBuflen
private int origBufpos
boolean tempBuffer
private boolean truncated
    public void <init>(java.io.InputStream, int)
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        java.io.InputStream $r1;
        int $i0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $r1 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

        specialinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: void <init>(java.io.InputStream,int,int)>($r1, $i0, -1);

        return;
    }
    public void <init>(java.io.InputStream, int, int)
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        java.io.InputStream $r1;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r2;
        byte[] $r3;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $r1 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke r0.<org.apache.james.mime4j.io.LineReaderInputStream: void <init>(java.io.InputStream)>($r1);

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean tempBuffer> = 0;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Input stream may not be null");

        throw $r2;

     label1:
        if $i0 > 0 goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Buffer size may not be negative or zero");

        throw $r2;

     label2:
        $r3 = newarray (byte)[$i0];

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer> = $r3;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos> = 0;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen> = 0;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int maxLineLen> = $i1;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean truncated> = 0;

        return;
    }
    private int bufferLen()
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        int $i0, $i1;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $i1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $i0 = $i1 - $i0;

        return $i0;
    }
    private void clear()
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos> = 0;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen> = 0;

        return;
    }
    private void expand(int)
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        int $i0, $i1, $i2;
        byte[] r1, $r2;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $i0 := @parameter0: int;

        r1 = newarray (byte)[$i0];

        $i2 = specialinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufferLen()>();

        if $i2 <= 0 goto label1;

        $r2 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $i1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i0, r1, $i1, $i2);

     label1:
        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer> = r1;

        return;
    }
    protected byte[] buf()
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        byte[] r1;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        r1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        return r1;
    }
    public int byteAt(int)
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        int $i0, $i1;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        byte[] $r4;
        byte $b2;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $i0 := @parameter0: int;

        $i1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        if $i0 < $i1 goto label1;

        $i1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        if $i0 <= $i1 goto label2;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("looking for ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label2:
        $r4 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $b2 = $r4[$i0];

        $i0 = $b2 & 255;

        return $i0;
    }
    public int capacity()
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        byte[] $r1;
        int $i0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $r1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $i0 = lengthof $r1;

        return $i0;
    }
    public void ensureCapacity(int)
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        int $i0, $i1;
        byte[] $r1;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $i0 := @parameter0: int;

        $r1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $i1 = lengthof $r1;

        if $i0 <= $i1 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: void expand(int)>($i0);

     label1:
        return;
    }
    public int fillBuffer() throws java.io.IOException
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        int i0, $i1;
        byte[] $r1, $r3;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        java.io.InputStream $r4;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $z0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean tempBuffer>;

        if $z0 == 0 goto label2;

        i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $i1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        if i0 == $i1 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("unread only works when a buffer is fully read before the next refill is asked!");

        throw $r2;

     label1:
        $r1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] origBuffer>;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer> = $r1;

        i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int origBuflen>;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen> = i0;

        i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int origBufpos>;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos> = i0;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean tempBuffer> = 0;

        i0 = specialinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufferLen()>();

        return i0;

     label2:
        i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        if i0 <= 0 goto label4;

        i0 = specialinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufferLen()>();

        if i0 <= 0 goto label3;

        $r3 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $i1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $r1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i1, $r1, 0, i0);

     label3:
        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos> = 0;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen> = i0;

     label4:
        i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        $r1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $i1 = lengthof $r1;

        $i1 = $i1 - i0;

        $r4 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: java.io.InputStream in>;

        $r1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $i1 = virtualinvoke $r4.<java.io.InputStream: int read(byte[],int,int)>($r1, i0, $i1);

        if $i1 != -1 goto label5;

        return -1;

     label5:
        i0 = i0 + $i1;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen> = i0;

        return $i1;
    }
    public boolean hasBufferedData()
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        int $i0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $i0 = specialinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufferLen()>();

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public int indexOf(byte)
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        byte $b0;
        int $i1, $i2;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $b0 := @parameter0: byte;

        $i1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $i2 = specialinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufferLen()>();

        $i1 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int indexOf(byte,int,int)>($b0, $i1, $i2);

        return $i1;
    }
    public int indexOf(byte, int, int)
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        byte $b0, $b5;
        int $i1, $i2, $i3, $i4;
        java.lang.IndexOutOfBoundsException $r1;
        byte[] $r2;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $b0 := @parameter0: byte;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        if $i1 < $i3 goto label1;

        if $i2 < 0 goto label1;

        $i4 = $i1 + $i2;

        $i3 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        if $i4 <= $i3 goto label2;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r1;

     label2:
        $i3 = $i1;

     label3:
        $i4 = $i1 + $i2;

        if $i3 >= $i4 goto label5;

        $r2 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $b5 = $r2[$i3];

        if $b5 != $b0 goto label4;

        return $i3;

     label4:
        $i3 = $i3 + 1;

        goto label3;

     label5:
        return -1;
    }
    public int indexOf(byte[])
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        byte[] $r1;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $r1 := @parameter0: byte[];

        $i1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $i2 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $i0 = $i2 - $i0;

        $i1 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int indexOf(byte[],int,int)>($r1, $i1, $i0);

        return $i1;
    }
    public int indexOf(byte[], int, int)
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        byte[] $r1, $r7;
        int $i0, $i1, i2, $i3, $i5, $i6;
        int[] r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.IndexOutOfBoundsException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        byte $b4, $b7;
        boolean z0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $r1 != null goto label01;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Pattern may not be null");

        throw $r3;

     label01:
        $i3 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        if $i0 < $i3 goto label02;

        if $i1 < 0 goto label02;

        $i3 = $i0 + $i1;

        i2 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        if $i3 <= i2 goto label03;

     label02:
        $r4 = new java.lang.IndexOutOfBoundsException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("looking for ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label03:
        $i3 = lengthof $r1;

        if $i1 >= $i3 goto label04;

        return -1;

     label04:
        r2 = newarray (int)[256];

        $i3 = 0;

     label05:
        i2 = lengthof r2;

        if $i3 >= i2 goto label06;

        i2 = lengthof $r1;

        i2 = i2 + 1;

        r2[$i3] = i2;

        $i3 = $i3 + 1;

        goto label05;

     label06:
        $i3 = 0;

     label07:
        i2 = lengthof $r1;

        if $i3 >= i2 goto label08;

        $b4 = $r1[$i3];

        i2 = $b4 & 255;

        $i5 = lengthof $r1;

        $i5 = $i5 - $i3;

        r2[i2] = $i5;

        $i3 = $i3 + 1;

        goto label07;

     label08:
        $i3 = 0;

     label09:
        i2 = lengthof $r1;

        i2 = $i1 - i2;

        if $i3 > i2 goto label12;

        i2 = $i0 + $i3;

        z0 = 1;

        $i5 = 0;

     label10:
        $i6 = lengthof $r1;

        if $i5 >= $i6 goto label11;

        $r7 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $i6 = i2 + $i5;

        $b4 = $r7[$i6];

        $b7 = $r1[$i5];

        if $b4 == $b7 goto label13;

        z0 = 0;

     label11:
        if z0 != 0 goto label15;

        $i5 = lengthof $r1;

        i2 = i2 + $i5;

        $r7 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $i5 = lengthof $r7;

        if i2 < $i5 goto label14;

     label12:
        return -1;

     label13:
        $i5 = $i5 + 1;

        goto label10;

     label14:
        $r7 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $b4 = $r7[i2];

        i2 = $b4 & 255;

        i2 = r2[i2];

        $i3 = $i3 + i2;

        goto label09;

     label15:
        return i2;
    }
    protected int length()
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        int $i0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $i0 = specialinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufferLen()>();

        return $i0;
    }
    protected int limit()
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        int i0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        return i0;
    }
    public boolean markSupported()
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        return 0;
    }
    protected int pos()
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        int i0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        return i0;
    }
    public int read() throws java.io.IOException
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        int $i0, $i1;
        boolean $z0;
        byte[] $r1;
        byte $b2;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $z0 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean readAllowed()>();

        if $z0 != 0 goto label1;

        return -1;

     label1:
        $z0 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean hasBufferedData()>();

        if $z0 != 0 goto label2;

        $i0 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int fillBuffer()>();

        if $i0 != -1 goto label1;

        return -1;

     label2:
        $r1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $i1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $i0 = $i1 + 1;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos> = $i0;

        $b2 = $r1[$i1];

        $i0 = $b2 & 255;

        return $i0;
    }
    public int read(byte[]) throws java.io.IOException
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        byte[] $r1;
        boolean $z0;
        int $i0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $r1 := @parameter0: byte[];

        $z0 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean readAllowed()>();

        if $z0 != 0 goto label1;

        return -1;

     label1:
        if $r1 == null goto label2;

        $i0 = lengthof $r1;

        $i0 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int read(byte[],int,int)>($r1, 0, $i0);

        return $i0;

     label2:
        return 0;
    }
    public int read(byte[], int, int) throws java.io.IOException
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean readAllowed()>();

        if $z0 != 0 goto label1;

        return -1;

     label1:
        if $r1 != null goto label2;

        return 0;

     label2:
        $z0 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean hasBufferedData()>();

        if $z0 != 0 goto label3;

        $i2 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int fillBuffer()>();

        if $i2 != -1 goto label2;

        return -1;

     label3:
        $i3 = specialinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufferLen()>();

        $i2 = $i3;

        if $i3 <= $i1 goto label4;

        $i2 = $i1;

     label4:
        $r2 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $i1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i1, $r1, $i0, $i2);

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $i0 = $i0 + $i2;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos> = $i0;

        return $i2;
    }
    protected boolean readAllowed()
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $z0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean truncated>;

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public int readLine(org.apache.james.mime4j.util.ByteArrayBuffer) throws org.apache.james.mime4j.io.MaxLineLimitException, java.io.IOException
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        org.apache.james.mime4j.util.ByteArrayBuffer $r1;
        java.lang.IllegalArgumentException $r2;
        boolean $z0, $z1;
        int i0, i1, $i2, $i3;
        byte[] $r3;
        org.apache.james.mime4j.io.MaxLineLimitException $r4;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $r1 := @parameter0: org.apache.james.mime4j.util.ByteArrayBuffer;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Buffer may not be null");

        throw $r2;

     label1:
        $z0 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean readAllowed()>();

        if $z0 != 0 goto label2;

        return -1;

     label2:
        i0 = 0;

        $z0 = 0;

        i1 = 0;

     label3:
        if $z0 != 0 goto label4;

        $z1 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean hasBufferedData()>();

        if $z1 != 0 goto label5;

        $i2 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int fillBuffer()>();

        i1 = $i2;

        if $i2 != -1 goto label5;

     label4:
        if i0 != 0 goto label9;

        if i1 != -1 goto label9;

        return -1;

     label5:
        $i2 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int indexOf(byte)>(10);

        if $i2 == -1 goto label8;

        $z0 = 1;

        $i2 = $i2 + 1;

        $i3 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int pos()>();

        $i2 = $i2 - $i3;

     label6:
        if $i2 <= 0 goto label7;

        $r3 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buf()>();

        $i3 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int pos()>();

        virtualinvoke $r1.<org.apache.james.mime4j.util.ByteArrayBuffer: void append(byte[],int,int)>($r3, $i3, $i2);

        virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int skip(int)>($i2);

        i0 = i0 + $i2;

     label7:
        $i2 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int maxLineLen>;

        if $i2 <= 0 goto label3;

        $i2 = virtualinvoke $r1.<org.apache.james.mime4j.util.ByteArrayBuffer: int length()>();

        $i3 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int maxLineLen>;

        if $i2 < $i3 goto label3;

        $r4 = new org.apache.james.mime4j.io.MaxLineLimitException;

        specialinvoke $r4.<org.apache.james.mime4j.io.MaxLineLimitException: void <init>(java.lang.String)>("Maximum line length limit exceeded");

        throw $r4;

     label8:
        $i2 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int length()>();

        goto label6;

     label9:
        return i0;
    }
    protected int skip(int)
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        int $i0, $i1;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $i0 := @parameter0: int;

        $i1 = specialinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufferLen()>();

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $i1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $i1 = $i1 + $i0;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos> = $i1;

        return $i0;
    }
    public java.lang.String toString()
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        java.lang.StringBuilder r1;
        java.lang.String $r2;
        int $i0, $i1;
        byte[] $r3;
        byte $b2;
        char $c3;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[pos: ");

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[limit: ");

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

     label1:
        $i1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        if $i0 >= $i1 goto label2;

        $r3 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $b2 = $r3[$i0];

        $c3 = (char) $b2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $z0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean tempBuffer>;

        if $z0 == 0 goto label5;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-ORIG[pos: ");

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int origBufpos>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[limit: ");

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int origBuflen>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int origBufpos>;

     label3:
        $i1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int origBuflen>;

        if $i0 >= $i1 goto label4;

        $r3 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] origBuffer>;

        $b2 = $r3[$i0];

        $c3 = (char) $b2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $i0 = $i0 + 1;

        goto label3;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

     label5:
        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
    public void truncate()
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        specialinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: void clear()>();

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean truncated> = 1;

        return;
    }
    public boolean unread(org.apache.james.mime4j.util.ByteArrayBuffer)
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        org.apache.james.mime4j.util.ByteArrayBuffer $r1;
        boolean $z0;
        byte[] $r2;
        int $i0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $r1 := @parameter0: org.apache.james.mime4j.util.ByteArrayBuffer;

        $z0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean tempBuffer>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] origBuffer> = $r2;

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int origBuflen> = $i0;

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int origBufpos> = $i0;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos> = 0;

        $i0 = virtualinvoke $r1.<org.apache.james.mime4j.util.ByteArrayBuffer: int length()>();

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen> = $i0;

        $r2 = virtualinvoke $r1.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer()>();

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer> = $r2;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean tempBuffer> = 1;

        return 1;
    }
