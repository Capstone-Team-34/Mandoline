org.htmlcleaner.BaseTokenImpl extends java.lang.Object implements org.htmlcleaner.BaseToken
private int col
private int row
    protected void <init>()
    {
        org.htmlcleaner.BaseTokenImpl r0;

        r0 := @this: org.htmlcleaner.BaseTokenImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    protected void <init>(int, int)
    {
        org.htmlcleaner.BaseTokenImpl r0;
        int $i0, $i1;

        r0 := @this: org.htmlcleaner.BaseTokenImpl;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.htmlcleaner.BaseTokenImpl: int row> = $i0;

        r0.<org.htmlcleaner.BaseTokenImpl: int col> = $i1;

        return;
    }
    public int getCol()
    {
        org.htmlcleaner.BaseTokenImpl r0;
        int i0;

        r0 := @this: org.htmlcleaner.BaseTokenImpl;

        i0 = r0.<org.htmlcleaner.BaseTokenImpl: int col>;

        return i0;
    }
    public int getRow()
    {
        org.htmlcleaner.BaseTokenImpl r0;
        int i0;

        r0 := @this: org.htmlcleaner.BaseTokenImpl;

        i0 = r0.<org.htmlcleaner.BaseTokenImpl: int row>;

        return i0;
    }
    public void setCol(int)
    {
        org.htmlcleaner.BaseTokenImpl r0;
        int $i0;

        r0 := @this: org.htmlcleaner.BaseTokenImpl;

        $i0 := @parameter0: int;

        r0.<org.htmlcleaner.BaseTokenImpl: int col> = $i0;

        return;
    }
    public void setRow(int)
    {
        org.htmlcleaner.BaseTokenImpl r0;
        int $i0;

        r0 := @this: org.htmlcleaner.BaseTokenImpl;

        $i0 := @parameter0: int;

        r0.<org.htmlcleaner.BaseTokenImpl: int row> = $i0;

        return;
    }
    public java.lang.String toString()
    {
        org.htmlcleaner.BaseTokenImpl r0;
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: org.htmlcleaner.BaseTokenImpl;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(line=");

        $i0 = virtualinvoke r0.<org.htmlcleaner.BaseTokenImpl: int getRow()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", col=");

        $i0 = virtualinvoke r0.<org.htmlcleaner.BaseTokenImpl: int getCol()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
