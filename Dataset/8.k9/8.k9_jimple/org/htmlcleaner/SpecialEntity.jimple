org.htmlcleaner.SpecialEntity extends java.lang.Object
private final java.lang.String escapedXmlString
private boolean htmlSpecialEntity
private final java.lang.String htmlString
private final int intCode
private final java.lang.String key
    public void <init>(java.lang.String, int, java.lang.String, boolean)
    {
        org.htmlcleaner.SpecialEntity r0;
        java.lang.String $r1, $r2;
        int $i0;
        boolean $z0;
        java.lang.StringBuilder $r3;
        char $c1;

        r0 := @this: org.htmlcleaner.SpecialEntity;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.htmlcleaner.SpecialEntity: java.lang.String key> = $r1;

        r0.<org.htmlcleaner.SpecialEntity: int intCode> = $i0;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        if $r2 == null goto label3;

        r0.<org.htmlcleaner.SpecialEntity: java.lang.String htmlString> = $r2;

     label1:
        if $z0 == 0 goto label4;

        $i0 = r0.<org.htmlcleaner.SpecialEntity: int intCode>;

        $c1 = (char) $i0;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c1);

        r0.<org.htmlcleaner.SpecialEntity: java.lang.String escapedXmlString> = $r1;

     label2:
        r0.<org.htmlcleaner.SpecialEntity: boolean htmlSpecialEntity> = $z0;

        return;

     label3:
        r0.<org.htmlcleaner.SpecialEntity: java.lang.String htmlString> = $r1;

        goto label1;

     label4:
        r0.<org.htmlcleaner.SpecialEntity: java.lang.String escapedXmlString> = $r1;

        goto label2;
    }
    public char charValue()
    {
        org.htmlcleaner.SpecialEntity r0;
        int $i0;
        char $c1;

        r0 := @this: org.htmlcleaner.SpecialEntity;

        $i0 = virtualinvoke r0.<org.htmlcleaner.SpecialEntity: int intValue()>();

        $c1 = (char) $i0;

        return $c1;
    }
    public java.lang.String getDecimalNCR()
    {
        org.htmlcleaner.SpecialEntity r0;
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: org.htmlcleaner.SpecialEntity;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#");

        $i0 = r0.<org.htmlcleaner.SpecialEntity: int intCode>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
    public java.lang.String getEscaped(boolean)
    {
        org.htmlcleaner.SpecialEntity r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.SpecialEntity;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<org.htmlcleaner.SpecialEntity: java.lang.String getHtmlString()>();

        return $r1;

     label1:
        $r1 = virtualinvoke r0.<org.htmlcleaner.SpecialEntity: java.lang.String getEscapedXmlString()>();

        return $r1;
    }
    public java.lang.String getEscapedValue()
    {
        org.htmlcleaner.SpecialEntity r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: org.htmlcleaner.SpecialEntity;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r2 = r0.<org.htmlcleaner.SpecialEntity: java.lang.String key>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
    public java.lang.String getEscapedXmlString()
    {
        org.htmlcleaner.SpecialEntity r0;
        java.lang.String r1;

        r0 := @this: org.htmlcleaner.SpecialEntity;

        r1 = r0.<org.htmlcleaner.SpecialEntity: java.lang.String escapedXmlString>;

        return r1;
    }
    public java.lang.String getHexNCR()
    {
        org.htmlcleaner.SpecialEntity r0;
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: org.htmlcleaner.SpecialEntity;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#x");

        $i0 = r0.<org.htmlcleaner.SpecialEntity: int intCode>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
    public java.lang.String getHtmlString()
    {
        org.htmlcleaner.SpecialEntity r0;
        java.lang.String r1;

        r0 := @this: org.htmlcleaner.SpecialEntity;

        r1 = r0.<org.htmlcleaner.SpecialEntity: java.lang.String htmlString>;

        return r1;
    }
    public java.lang.String getKey()
    {
        org.htmlcleaner.SpecialEntity r0;
        java.lang.String r1;

        r0 := @this: org.htmlcleaner.SpecialEntity;

        r1 = r0.<org.htmlcleaner.SpecialEntity: java.lang.String key>;

        return r1;
    }
    public int intValue()
    {
        org.htmlcleaner.SpecialEntity r0;
        int i0;

        r0 := @this: org.htmlcleaner.SpecialEntity;

        i0 = r0.<org.htmlcleaner.SpecialEntity: int intCode>;

        return i0;
    }
    public boolean isHtmlSpecialEntity()
    {
        org.htmlcleaner.SpecialEntity r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.SpecialEntity;

        z0 = r0.<org.htmlcleaner.SpecialEntity: boolean htmlSpecialEntity>;

        return z0;
    }
