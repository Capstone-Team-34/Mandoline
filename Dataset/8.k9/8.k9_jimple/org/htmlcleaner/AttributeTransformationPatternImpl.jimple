org.htmlcleaner.AttributeTransformationPatternImpl extends java.lang.Object implements org.htmlcleaner.AttributeTransformation
private final java.util.regex.Pattern attNamePattern
private final java.util.regex.Pattern attValuePattern
private final java.lang.String template
    public void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        org.htmlcleaner.AttributeTransformationPatternImpl r0;
        java.lang.String $r1, $r2, $r3;
        java.util.regex.Pattern $r4, $r5;

        r0 := @this: org.htmlcleaner.AttributeTransformationPatternImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = null;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $r1 != null goto label3;

        $r5 = null;

     label1:
        r0.<org.htmlcleaner.AttributeTransformationPatternImpl: java.util.regex.Pattern attNamePattern> = $r5;

        if $r2 != null goto label4;

     label2:
        r0.<org.htmlcleaner.AttributeTransformationPatternImpl: java.util.regex.Pattern attValuePattern> = $r4;

        r0.<org.htmlcleaner.AttributeTransformationPatternImpl: java.lang.String template> = $r3;

        return;

     label3:
        $r5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r1);

        goto label1;

     label4:
        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r2);

        goto label2;
    }
    public void <init>(java.util.regex.Pattern, java.util.regex.Pattern, java.lang.String)
    {
        org.htmlcleaner.AttributeTransformationPatternImpl r0;
        java.util.regex.Pattern $r1, $r2;
        java.lang.String $r3;

        r0 := @this: org.htmlcleaner.AttributeTransformationPatternImpl;

        $r1 := @parameter0: java.util.regex.Pattern;

        $r2 := @parameter1: java.util.regex.Pattern;

        $r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.htmlcleaner.AttributeTransformationPatternImpl: java.util.regex.Pattern attNamePattern> = $r1;

        r0.<org.htmlcleaner.AttributeTransformationPatternImpl: java.util.regex.Pattern attValuePattern> = $r2;

        r0.<org.htmlcleaner.AttributeTransformationPatternImpl: java.lang.String template> = $r3;

        return;
    }
    public java.lang.String getTemplate()
    {
        org.htmlcleaner.AttributeTransformationPatternImpl r0;
        java.lang.String r1;

        r0 := @this: org.htmlcleaner.AttributeTransformationPatternImpl;

        r1 = r0.<org.htmlcleaner.AttributeTransformationPatternImpl: java.lang.String template>;

        return r1;
    }
    public boolean satisfy(java.lang.String, java.lang.String)
    {
        org.htmlcleaner.AttributeTransformationPatternImpl r0;
        java.lang.String $r1, $r2;
        java.util.regex.Pattern $r3;
        java.util.regex.Matcher $r4;
        boolean $z0;

        r0 := @this: org.htmlcleaner.AttributeTransformationPatternImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.htmlcleaner.AttributeTransformationPatternImpl: java.util.regex.Pattern attNamePattern>;

        if $r3 == null goto label1;

        $r3 = r0.<org.htmlcleaner.AttributeTransformationPatternImpl: java.util.regex.Pattern attNamePattern>;

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label3;

     label1:
        $r3 = r0.<org.htmlcleaner.AttributeTransformationPatternImpl: java.util.regex.Pattern attValuePattern>;

        if $r3 == null goto label2;

        $r3 = r0.<org.htmlcleaner.AttributeTransformationPatternImpl: java.util.regex.Pattern attValuePattern>;

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r2);

        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }
