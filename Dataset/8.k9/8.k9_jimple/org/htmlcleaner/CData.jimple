org.htmlcleaner.CData extends org.htmlcleaner.ContentNode implements org.htmlcleaner.HtmlNode
public static final java.lang.String BEGIN_CDATA
public static final java.lang.String END_CDATA
public static final java.lang.String SAFE_BEGIN_CDATA
public static final java.lang.String SAFE_BEGIN_CDATA_ALT
public static final java.lang.String SAFE_END_CDATA
public static final java.lang.String SAFE_END_CDATA_ALT
    public void <init>(java.lang.String)
    {
        org.htmlcleaner.CData r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.CData;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.htmlcleaner.ContentNode: void <init>(java.lang.String)>($r1);

        return;
    }
    public java.lang.String getContent()
    {
        org.htmlcleaner.CData r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.CData;

        $r1 = virtualinvoke r0.<org.htmlcleaner.CData: java.lang.String getContentWithoutStartAndEndTokens()>();

        return $r1;
    }
    public java.lang.String getContentWithStartAndEndTokens()
    {
        org.htmlcleaner.CData r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: org.htmlcleaner.CData;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/*<![CDATA[*/");

        $r2 = r0.<org.htmlcleaner.CData: java.lang.String content>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/*]]>*/");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
    public java.lang.String getContentWithoutStartAndEndTokens()
    {
        org.htmlcleaner.CData r0;
        java.lang.String r1;

        r0 := @this: org.htmlcleaner.CData;

        r1 = r0.<org.htmlcleaner.CData: java.lang.String content>;

        return r1;
    }
    public java.lang.String toString()
    {
        org.htmlcleaner.CData r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.CData;

        $r1 = virtualinvoke r0.<org.htmlcleaner.CData: java.lang.String getContentWithStartAndEndTokens()>();

        return $r1;
    }
