org.htmlcleaner.audit.ErrorType extends java.lang.Enum
private static final org.htmlcleaner.audit.ErrorType[] $VALUES
public static final enum org.htmlcleaner.audit.ErrorType Deprecated
public static final enum org.htmlcleaner.audit.ErrorType FatalTagMissing
public static final enum org.htmlcleaner.audit.ErrorType NotAllowedTag
public static final enum org.htmlcleaner.audit.ErrorType RequiredParentMissing
public static final enum org.htmlcleaner.audit.ErrorType UnclosedTag
public static final enum org.htmlcleaner.audit.ErrorType UniqueTagDuplicated
public static final enum org.htmlcleaner.audit.ErrorType Unknown
public static final enum org.htmlcleaner.audit.ErrorType UnpermittedChild
    static void <clinit>()
    {
        org.htmlcleaner.audit.ErrorType $r0;
        org.htmlcleaner.audit.ErrorType[] $r1;

        $r0 = new org.htmlcleaner.audit.ErrorType;

        specialinvoke $r0.<org.htmlcleaner.audit.ErrorType: void <init>(java.lang.String,int)>("FatalTagMissing", 0);

        <org.htmlcleaner.audit.ErrorType: org.htmlcleaner.audit.ErrorType FatalTagMissing> = $r0;

        $r0 = new org.htmlcleaner.audit.ErrorType;

        specialinvoke $r0.<org.htmlcleaner.audit.ErrorType: void <init>(java.lang.String,int)>("NotAllowedTag", 1);

        <org.htmlcleaner.audit.ErrorType: org.htmlcleaner.audit.ErrorType NotAllowedTag> = $r0;

        $r0 = new org.htmlcleaner.audit.ErrorType;

        specialinvoke $r0.<org.htmlcleaner.audit.ErrorType: void <init>(java.lang.String,int)>("RequiredParentMissing", 2);

        <org.htmlcleaner.audit.ErrorType: org.htmlcleaner.audit.ErrorType RequiredParentMissing> = $r0;

        $r0 = new org.htmlcleaner.audit.ErrorType;

        specialinvoke $r0.<org.htmlcleaner.audit.ErrorType: void <init>(java.lang.String,int)>("UnclosedTag", 3);

        <org.htmlcleaner.audit.ErrorType: org.htmlcleaner.audit.ErrorType UnclosedTag> = $r0;

        $r0 = new org.htmlcleaner.audit.ErrorType;

        specialinvoke $r0.<org.htmlcleaner.audit.ErrorType: void <init>(java.lang.String,int)>("UniqueTagDuplicated", 4);

        <org.htmlcleaner.audit.ErrorType: org.htmlcleaner.audit.ErrorType UniqueTagDuplicated> = $r0;

        $r0 = new org.htmlcleaner.audit.ErrorType;

        specialinvoke $r0.<org.htmlcleaner.audit.ErrorType: void <init>(java.lang.String,int)>("Deprecated", 5);

        <org.htmlcleaner.audit.ErrorType: org.htmlcleaner.audit.ErrorType Deprecated> = $r0;

        $r0 = new org.htmlcleaner.audit.ErrorType;

        specialinvoke $r0.<org.htmlcleaner.audit.ErrorType: void <init>(java.lang.String,int)>("UnpermittedChild", 6);

        <org.htmlcleaner.audit.ErrorType: org.htmlcleaner.audit.ErrorType UnpermittedChild> = $r0;

        $r0 = new org.htmlcleaner.audit.ErrorType;

        specialinvoke $r0.<org.htmlcleaner.audit.ErrorType: void <init>(java.lang.String,int)>("Unknown", 7);

        <org.htmlcleaner.audit.ErrorType: org.htmlcleaner.audit.ErrorType Unknown> = $r0;

        $r1 = newarray (org.htmlcleaner.audit.ErrorType)[8];

        $r0 = <org.htmlcleaner.audit.ErrorType: org.htmlcleaner.audit.ErrorType FatalTagMissing>;

        $r1[0] = $r0;

        $r0 = <org.htmlcleaner.audit.ErrorType: org.htmlcleaner.audit.ErrorType NotAllowedTag>;

        $r1[1] = $r0;

        $r0 = <org.htmlcleaner.audit.ErrorType: org.htmlcleaner.audit.ErrorType RequiredParentMissing>;

        $r1[2] = $r0;

        $r0 = <org.htmlcleaner.audit.ErrorType: org.htmlcleaner.audit.ErrorType UnclosedTag>;

        $r1[3] = $r0;

        $r0 = <org.htmlcleaner.audit.ErrorType: org.htmlcleaner.audit.ErrorType UniqueTagDuplicated>;

        $r1[4] = $r0;

        $r0 = <org.htmlcleaner.audit.ErrorType: org.htmlcleaner.audit.ErrorType Deprecated>;

        $r1[5] = $r0;

        $r0 = <org.htmlcleaner.audit.ErrorType: org.htmlcleaner.audit.ErrorType UnpermittedChild>;

        $r1[6] = $r0;

        $r0 = <org.htmlcleaner.audit.ErrorType: org.htmlcleaner.audit.ErrorType Unknown>;

        $r1[7] = $r0;

        <org.htmlcleaner.audit.ErrorType: org.htmlcleaner.audit.ErrorType[] $VALUES> = $r1;

        return;
    }
    private void <init>(java.lang.String, int)
    {
        org.htmlcleaner.audit.ErrorType r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: org.htmlcleaner.audit.ErrorType;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }
    public static org.htmlcleaner.audit.ErrorType valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        org.htmlcleaner.audit.ErrorType $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/htmlcleaner/audit/ErrorType;", $r0);

        $r2 = (org.htmlcleaner.audit.ErrorType) $r1;

        return $r2;
    }
    public static org.htmlcleaner.audit.ErrorType[] values()
    {
        java.lang.Object $r0;
        org.htmlcleaner.audit.ErrorType[] $r1;

        $r1 = <org.htmlcleaner.audit.ErrorType: org.htmlcleaner.audit.ErrorType[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (org.htmlcleaner.audit.ErrorType[]) $r0;

        return $r1;
    }
