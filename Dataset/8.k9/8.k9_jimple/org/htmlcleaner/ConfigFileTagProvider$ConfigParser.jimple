org.htmlcleaner.ConfigFileTagProvider$ConfigParser extends org.xml.sax.helpers.DefaultHandler
private java.lang.String dependencyName
private org.htmlcleaner.TagInfo tagInfo
private java.util.Map tagInfoMap
final org.htmlcleaner.ConfigFileTagProvider this$0
    void <init>(org.htmlcleaner.ConfigFileTagProvider, java.util.Map)
    {
        org.htmlcleaner.ConfigFileTagProvider$ConfigParser r0;
        org.htmlcleaner.ConfigFileTagProvider $r1;
        java.util.Map $r2;

        r0 := @this: org.htmlcleaner.ConfigFileTagProvider$ConfigParser;

        $r1 := @parameter0: org.htmlcleaner.ConfigFileTagProvider;

        $r2 := @parameter1: java.util.Map;

        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0> = $r1;

        specialinvoke r0.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo> = null;

        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName> = null;

        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.util.Map tagInfoMap> = $r2;

        return;
    }
    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        org.htmlcleaner.ConfigFileTagProvider$ConfigParser r0;
        char[] $r1;
        int $i0, $i1;
        org.htmlcleaner.TagInfo $r2;
        java.lang.String $r3, $r4, $r5;
        boolean $z0;
        org.htmlcleaner.ConfigFileTagProvider $r6;
        java.io.PrintStream $r7;
        java.lang.StringBuilder $r8;

        r0 := @this: org.htmlcleaner.ConfigFileTagProvider$ConfigParser;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;

        if $r2 == null goto label8;

        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(char[],int,int)>($r1, $i0, $i1);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r4 = "fatal-tags";

        $r5 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        $r2 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;

        virtualinvoke $r2.<org.htmlcleaner.TagInfo: void defineFatalTags(java.lang.String)>($r3);

        $r6 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0>;

        $z0 = staticinvoke <org.htmlcleaner.ConfigFileTagProvider: boolean access$000(org.htmlcleaner.ConfigFileTagProvider)>($r6);

        if $z0 == 0 goto label8;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tagInfo.defineFatalTags(\"");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");");

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r3);

        return;

     label1:
        $r4 = "req-enclosing-tags";

        $r5 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        $r2 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;

        virtualinvoke $r2.<org.htmlcleaner.TagInfo: void defineRequiredEnclosingTags(java.lang.String)>($r3);

        $r6 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0>;

        $z0 = staticinvoke <org.htmlcleaner.ConfigFileTagProvider: boolean access$000(org.htmlcleaner.ConfigFileTagProvider)>($r6);

        if $z0 == 0 goto label8;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tagInfo.defineRequiredEnclosingTags(\"");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");");

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r3);

        return;

     label2:
        $r4 = "forbidden-tags";

        $r5 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label3;

        $r2 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;

        virtualinvoke $r2.<org.htmlcleaner.TagInfo: void defineForbiddenTags(java.lang.String)>($r3);

        $r6 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0>;

        $z0 = staticinvoke <org.htmlcleaner.ConfigFileTagProvider: boolean access$000(org.htmlcleaner.ConfigFileTagProvider)>($r6);

        if $z0 == 0 goto label8;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tagInfo.defineForbiddenTags(\"");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");");

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r3);

        return;

     label3:
        $r4 = "allowed-children-tags";

        $r5 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label4;

        $r2 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;

        virtualinvoke $r2.<org.htmlcleaner.TagInfo: void defineAllowedChildrenTags(java.lang.String)>($r3);

        $r6 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0>;

        $z0 = staticinvoke <org.htmlcleaner.ConfigFileTagProvider: boolean access$000(org.htmlcleaner.ConfigFileTagProvider)>($r6);

        if $z0 == 0 goto label8;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tagInfo.defineAllowedChildrenTags(\"");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");");

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r3);

        return;

     label4:
        $r4 = "higher-level-tags";

        $r5 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label5;

        $r2 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;

        virtualinvoke $r2.<org.htmlcleaner.TagInfo: void defineHigherLevelTags(java.lang.String)>($r3);

        $r6 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0>;

        $z0 = staticinvoke <org.htmlcleaner.ConfigFileTagProvider: boolean access$000(org.htmlcleaner.ConfigFileTagProvider)>($r6);

        if $z0 == 0 goto label8;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tagInfo.defineHigherLevelTags(\"");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");");

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r3);

        return;

     label5:
        $r4 = "close-before-copy-inside-tags";

        $r5 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label6;

        $r2 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;

        virtualinvoke $r2.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>($r3);

        $r6 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0>;

        $z0 = staticinvoke <org.htmlcleaner.ConfigFileTagProvider: boolean access$000(org.htmlcleaner.ConfigFileTagProvider)>($r6);

        if $z0 == 0 goto label8;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tagInfo.defineCloseBeforeCopyInsideTags(\"");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");");

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r3);

        return;

     label6:
        $r4 = "close-inside-copy-after-tags";

        $r5 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label7;

        $r2 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;

        virtualinvoke $r2.<org.htmlcleaner.TagInfo: void defineCloseInsideCopyAfterTags(java.lang.String)>($r3);

        $r6 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0>;

        $z0 = staticinvoke <org.htmlcleaner.ConfigFileTagProvider: boolean access$000(org.htmlcleaner.ConfigFileTagProvider)>($r6);

        if $z0 == 0 goto label8;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tagInfo.defineCloseInsideCopyAfterTags(\"");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");");

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r3);

        return;

     label7:
        $r4 = "close-before-tags";

        $r5 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label8;

        $r2 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;

        virtualinvoke $r2.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>($r3);

        $r6 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0>;

        $z0 = staticinvoke <org.htmlcleaner.ConfigFileTagProvider: boolean access$000(org.htmlcleaner.ConfigFileTagProvider)>($r6);

        if $z0 == 0 goto label8;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tagInfo.defineCloseBeforeTags(\"");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");");

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r3);

     label8:
        return;
    }
    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.htmlcleaner.ConfigFileTagProvider$ConfigParser r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;
        org.htmlcleaner.TagInfo $r4;
        java.util.Map $r5;
        org.htmlcleaner.ConfigFileTagProvider $r6;
        java.io.PrintStream $r7;
        java.lang.StringBuilder $r8;

        r0 := @this: org.htmlcleaner.ConfigFileTagProvider$ConfigParser;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r1 = "tag";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $r4 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;

        if $r4 == null goto label1;

        $r5 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.util.Map tagInfoMap>;

        $r4 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;

        $r1 = virtualinvoke $r4.<org.htmlcleaner.TagInfo: java.lang.String getName()>();

        $r4 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

        $r6 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0>;

        $z0 = staticinvoke <org.htmlcleaner.ConfigFileTagProvider: boolean access$000(org.htmlcleaner.ConfigFileTagProvider)>($r6);

        if $z0 == 0 goto label1;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("this.put(\"");

        $r4 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;

        $r1 = virtualinvoke $r4.<org.htmlcleaner.TagInfo: java.lang.String getName()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\", tagInfo);\n");

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r1);

     label1:
        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo> = null;

        return;

     label2:
        $r1 = "tags";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label3;

        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName> = null;

     label3:
        return;
    }
    public void parse(org.xml.sax.InputSource) throws javax.xml.parsers.ParserConfigurationException, org.xml.sax.SAXException, java.io.IOException
    {
        org.htmlcleaner.ConfigFileTagProvider$ConfigParser r0;
        org.xml.sax.InputSource $r1;
        javax.xml.parsers.SAXParserFactory $r2;
        javax.xml.parsers.SAXParser $r3;

        r0 := @this: org.htmlcleaner.ConfigFileTagProvider$ConfigParser;

        $r1 := @parameter0: org.xml.sax.InputSource;

        $r2 = <org.htmlcleaner.ConfigFileTagProvider: javax.xml.parsers.SAXParserFactory parserFactory>;

        $r3 = virtualinvoke $r2.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        virtualinvoke $r3.<javax.xml.parsers.SAXParser: void parse(org.xml.sax.InputSource,org.xml.sax.helpers.DefaultHandler)>($r1, r0);

        return;
    }
    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        org.htmlcleaner.ConfigFileTagProvider$ConfigParser r0;
        java.lang.String $r1, $r2, $r3, $r7, $r8, $r9;
        org.xml.sax.Attributes $r4;
        org.htmlcleaner.CloseTag $r5;
        org.htmlcleaner.Display $r6;
        boolean $z0, $z1, $z2;
        org.htmlcleaner.ContentType $r10;
        org.htmlcleaner.BelongsTo $r11;
        org.htmlcleaner.TagInfo $r12;
        org.htmlcleaner.ConfigFileTagProvider $r13;
        java.lang.StringBuilder $r14;
        java.lang.Class $r15;
        java.io.PrintStream $r16;

        r0 := @this: org.htmlcleaner.ConfigFileTagProvider$ConfigParser;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: org.xml.sax.Attributes;

        $r1 = "tag";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label13;

        $r7 = interfaceinvoke $r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("name");

        $r8 = interfaceinvoke $r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("content");

        $r9 = interfaceinvoke $r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("section");

        $r3 = interfaceinvoke $r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("deprecated");

        $r2 = interfaceinvoke $r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("unique");

        $r1 = interfaceinvoke $r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("ignore-permitted");

        $r10 = staticinvoke <org.htmlcleaner.ContentType: org.htmlcleaner.ContentType toValue(java.lang.Object)>($r8);

        $r11 = staticinvoke <org.htmlcleaner.BelongsTo: org.htmlcleaner.BelongsTo toValue(java.lang.Object)>($r9);

        $r12 = new org.htmlcleaner.TagInfo;

        if $r3 == null goto label07;

        $r8 = "true";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label07;

        $z0 = 1;

     label01:
        if $r2 == null goto label08;

        $r8 = "true";

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label08;

        $z1 = 1;

     label02:
        if $r1 == null goto label09;

        $r8 = "true";

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z2 == 0 goto label09;

        $z2 = 1;

     label03:
        $r5 = <org.htmlcleaner.CloseTag: org.htmlcleaner.CloseTag required>;

        $r6 = <org.htmlcleaner.Display: org.htmlcleaner.Display any>;

        specialinvoke $r12.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,org.htmlcleaner.ContentType,org.htmlcleaner.BelongsTo,boolean,boolean,boolean,org.htmlcleaner.CloseTag,org.htmlcleaner.Display)>($r7, $r10, $r11, $z0, $z1, $z2, $r5, $r6);

        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo> = $r12;

        $r13 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0>;

        $z0 = staticinvoke <org.htmlcleaner.ConfigFileTagProvider: boolean access$000(org.htmlcleaner.ConfigFileTagProvider)>($r13);

        if $z0 == 0 goto label14;

        $r8 = "tagInfo = new TagInfo(\"#1\", #2, #3, #4, #5, #6);";

        $r7 = virtualinvoke $r8.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("#1", $r7);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = class "Lorg/htmlcleaner/ContentType;";

        $r8 = virtualinvoke $r15.<java.lang.Class: java.lang.String getCanonicalName()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r8 = virtualinvoke $r10.<org.htmlcleaner.ContentType: java.lang.String name()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("#2", $r8);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = class "Lorg/htmlcleaner/BelongsTo;";

        $r8 = virtualinvoke $r15.<java.lang.Class: java.lang.String getCanonicalName()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r8 = virtualinvoke $r11.<org.htmlcleaner.BelongsTo: java.lang.String name()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("#3", $r8);

        if $r3 == null goto label10;

        $r8 = "true";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label10;

        $z0 = 1;

     label04:
        $r3 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z0);

        $r3 = virtualinvoke $r7.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("#4", $r3);

        if $r2 == null goto label11;

        $r7 = "true";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label11;

        $z0 = 1;

     label05:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z0);

        $r2 = virtualinvoke $r3.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("#5", $r2);

        if $r1 == null goto label12;

        $r3 = "true";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label12;

        $z0 = 1;

     label06:
        $r1 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z0);

        $r1 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("#6", $r1);

        $r16 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r1);

        return;

     label07:
        $z0 = 0;

        goto label01;

     label08:
        $z1 = 0;

        goto label02;

     label09:
        $z2 = 0;

        goto label03;

     label10:
        $z0 = 0;

        goto label04;

     label11:
        $z0 = 0;

        goto label05;

     label12:
        $z0 = 0;

        goto label06;

     label13:
        $r1 = "tags";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label14;

        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName> = $r3;

     label14:
        return;
    }
