org.htmlcleaner.SimpleHtmlSerializer extends org.htmlcleaner.HtmlSerializer
    public void <init>(org.htmlcleaner.CleanerProperties)
    {
        org.htmlcleaner.SimpleHtmlSerializer r0;
        org.htmlcleaner.CleanerProperties $r1;

        r0 := @this: org.htmlcleaner.SimpleHtmlSerializer;

        $r1 := @parameter0: org.htmlcleaner.CleanerProperties;

        specialinvoke r0.<org.htmlcleaner.HtmlSerializer: void <init>(org.htmlcleaner.CleanerProperties)>($r1);

        return;
    }
    protected void serialize(org.htmlcleaner.TagNode, java.io.Writer) throws java.io.IOException
    {
        org.htmlcleaner.SimpleHtmlSerializer r0;
        org.htmlcleaner.TagNode $r1;
        java.io.Writer $r2;
        boolean $z0;
        java.util.List $r3;
        java.util.Iterator $r4;
        java.lang.Object $r5;
        java.lang.String $r6, r7;
        org.htmlcleaner.BaseToken r8;

        r0 := @this: org.htmlcleaner.SimpleHtmlSerializer;

        $r1 := @parameter0: org.htmlcleaner.TagNode;

        $r2 := @parameter1: java.io.Writer;

        virtualinvoke r0.<org.htmlcleaner.SimpleHtmlSerializer: void serializeOpenTag(org.htmlcleaner.TagNode,java.io.Writer,boolean)>($r1, $r2, 0);

        $z0 = virtualinvoke r0.<org.htmlcleaner.SimpleHtmlSerializer: boolean isMinimizedTagSyntax(org.htmlcleaner.TagNode)>($r1);

        if $z0 != 0 goto label6;

        $r3 = virtualinvoke $r1.<org.htmlcleaner.TagNode: java.util.List getAllChildren()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $z0 = $r5 instanceof org.htmlcleaner.ContentNode;

        if $z0 == 0 goto label4;

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        r7 = $r6;

        $z0 = virtualinvoke r0.<org.htmlcleaner.SimpleHtmlSerializer: boolean dontEscape(org.htmlcleaner.TagNode)>($r1);

        if $z0 == 0 goto label3;

     label2:
        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>(r7);

        goto label1;

     label3:
        r7 = virtualinvoke r0.<org.htmlcleaner.SimpleHtmlSerializer: java.lang.String escapeText(java.lang.String)>($r6);

        goto label2;

     label4:
        $z0 = $r5 instanceof org.htmlcleaner.BaseToken;

        if $z0 == 0 goto label1;

        r8 = (org.htmlcleaner.BaseToken) $r5;

        interfaceinvoke r8.<org.htmlcleaner.BaseToken: void serialize(org.htmlcleaner.Serializer,java.io.Writer)>(r0, $r2);

        goto label1;

     label5:
        virtualinvoke r0.<org.htmlcleaner.SimpleHtmlSerializer: void serializeEndTag(org.htmlcleaner.TagNode,java.io.Writer,boolean)>($r1, $r2, 0);

     label6:
        return;
    }
