org.htmlcleaner.CompactXmlSerializer extends org.htmlcleaner.XmlSerializer
    public void <init>(org.htmlcleaner.CleanerProperties)
    {
        org.htmlcleaner.CompactXmlSerializer r0;
        org.htmlcleaner.CleanerProperties $r1;

        r0 := @this: org.htmlcleaner.CompactXmlSerializer;

        $r1 := @parameter0: org.htmlcleaner.CleanerProperties;

        specialinvoke r0.<org.htmlcleaner.XmlSerializer: void <init>(org.htmlcleaner.CleanerProperties)>($r1);

        return;
    }
    private boolean isWhitespaceString(java.lang.Object)
    {
        org.htmlcleaner.CompactXmlSerializer r0;
        java.lang.Object $r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CompactXmlSerializer;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        if $r2 == null goto label1;

        $r3 = "";

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    protected void serialize(org.htmlcleaner.TagNode, java.io.Writer) throws java.io.IOException
    {
        org.htmlcleaner.CompactXmlSerializer r0;
        org.htmlcleaner.TagNode $r1;
        java.io.Writer $r2;
        java.util.List $r3;
        boolean $z0;
        java.util.ListIterator $r4;
        java.lang.Object $r5;
        org.htmlcleaner.ContentNode r6;
        java.lang.String $r7;
        org.htmlcleaner.CommentNode r8;
        org.htmlcleaner.BaseToken r9;

        r0 := @this: org.htmlcleaner.CompactXmlSerializer;

        $r1 := @parameter0: org.htmlcleaner.TagNode;

        $r2 := @parameter1: java.io.Writer;

        virtualinvoke r0.<org.htmlcleaner.CompactXmlSerializer: void serializeOpenTag(org.htmlcleaner.TagNode,java.io.Writer,boolean)>($r1, $r2, 0);

        $r3 = virtualinvoke $r1.<org.htmlcleaner.TagNode: java.util.List getAllChildren()>();

        $z0 = virtualinvoke r0.<org.htmlcleaner.CompactXmlSerializer: boolean isMinimizedTagSyntax(org.htmlcleaner.TagNode)>($r1);

        if $z0 != 0 goto label8;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.ListIterator listIterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r5 = interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object next()>();

        if $r5 == null goto label1;

        $z0 = $r5 instanceof org.htmlcleaner.ContentNode;

        if $z0 == 0 goto label5;

        r6 = (org.htmlcleaner.ContentNode) $r5;

        $r7 = virtualinvoke r6.<org.htmlcleaner.ContentNode: java.lang.String getContent()>();

        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke r0.<org.htmlcleaner.CompactXmlSerializer: boolean dontEscape(org.htmlcleaner.TagNode)>($r1);

        if $z0 == 0 goto label4;

        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("]]>", "]]&gt;");

     label2:
        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>($r7);

        $z0 = interfaceinvoke $r4.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object next()>();

        $z0 = specialinvoke r0.<org.htmlcleaner.CompactXmlSerializer: boolean isWhitespaceString(java.lang.Object)>($r5);

        if $z0 != 0 goto label3;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("\n");

     label3:
        interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object previous()>();

        goto label1;

     label4:
        $r7 = virtualinvoke r0.<org.htmlcleaner.CompactXmlSerializer: java.lang.String escapeXml(java.lang.String)>($r7);

        goto label2;

     label5:
        $z0 = $r5 instanceof org.htmlcleaner.CommentNode;

        if $z0 == 0 goto label6;

        r8 = (org.htmlcleaner.CommentNode) $r5;

        $r7 = virtualinvoke r8.<org.htmlcleaner.CommentNode: java.lang.String getCommentedContent()>();

        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>($r7);

        goto label1;

     label6:
        r9 = (org.htmlcleaner.BaseToken) $r5;

        interfaceinvoke r9.<org.htmlcleaner.BaseToken: void serialize(org.htmlcleaner.Serializer,java.io.Writer)>(r0, $r2);

        goto label1;

     label7:
        virtualinvoke r0.<org.htmlcleaner.CompactXmlSerializer: void serializeEndTag(org.htmlcleaner.TagNode,java.io.Writer,boolean)>($r1, $r2, 0);

     label8:
        return;
    }
