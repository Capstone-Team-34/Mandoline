org.htmlcleaner.ContentNode extends org.htmlcleaner.BaseTokenImpl implements org.htmlcleaner.HtmlNode
protected final boolean blank
protected final java.lang.String content
    public void <init>(java.lang.String)
    {
        org.htmlcleaner.ContentNode r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.htmlcleaner.ContentNode;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.htmlcleaner.BaseTokenImpl: void <init>()>();

        r0.<org.htmlcleaner.ContentNode: java.lang.String content> = $r1;

        $r1 = r0.<org.htmlcleaner.ContentNode: java.lang.String content>;

        $z0 = staticinvoke <org.htmlcleaner.Utils: boolean isEmptyString(java.lang.Object)>($r1);

        r0.<org.htmlcleaner.ContentNode: boolean blank> = $z0;

        return;
    }
    public java.lang.String getContent()
    {
        org.htmlcleaner.ContentNode r0;
        java.lang.String r1;

        r0 := @this: org.htmlcleaner.ContentNode;

        r1 = r0.<org.htmlcleaner.ContentNode: java.lang.String content>;

        return r1;
    }
    public boolean isBlank()
    {
        org.htmlcleaner.ContentNode r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.ContentNode;

        z0 = r0.<org.htmlcleaner.ContentNode: boolean blank>;

        return z0;
    }
    public void serialize(org.htmlcleaner.Serializer, java.io.Writer) throws java.io.IOException
    {
        org.htmlcleaner.ContentNode r0;
        org.htmlcleaner.Serializer $r1;
        java.io.Writer $r2;
        java.lang.String $r3;

        r0 := @this: org.htmlcleaner.ContentNode;

        $r1 := @parameter0: org.htmlcleaner.Serializer;

        $r2 := @parameter1: java.io.Writer;

        $r3 = r0.<org.htmlcleaner.ContentNode: java.lang.String content>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>($r3);

        return;
    }
    public java.lang.String toString()
    {
        org.htmlcleaner.ContentNode r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.ContentNode;

        $r1 = virtualinvoke r0.<org.htmlcleaner.ContentNode: java.lang.String getContent()>();

        return $r1;
    }
