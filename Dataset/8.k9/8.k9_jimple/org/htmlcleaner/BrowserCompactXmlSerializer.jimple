org.htmlcleaner.BrowserCompactXmlSerializer extends org.htmlcleaner.XmlSerializer
private static final java.lang.String BR_TAG
private static final java.lang.String LINE_BREAK
private static final java.lang.String PRE_TAG
    public void <init>(org.htmlcleaner.CleanerProperties)
    {
        org.htmlcleaner.BrowserCompactXmlSerializer r0;
        org.htmlcleaner.CleanerProperties $r1;

        r0 := @this: org.htmlcleaner.BrowserCompactXmlSerializer;

        $r1 := @parameter0: org.htmlcleaner.CleanerProperties;

        specialinvoke r0.<org.htmlcleaner.XmlSerializer: void <init>(org.htmlcleaner.CleanerProperties)>($r1);

        return;
    }
    private boolean isContentOrInline(java.lang.Object)
    {
        org.htmlcleaner.BrowserCompactXmlSerializer r0;
        java.lang.Object r1;
        boolean $z0;
        org.htmlcleaner.CleanerProperties $r2;
        org.htmlcleaner.ITagInfoProvider $r3;
        org.htmlcleaner.TagNode r4;
        java.lang.String $r5;
        org.htmlcleaner.TagInfo $r6;
        org.htmlcleaner.Display $r7, $r8;

        r0 := @this: org.htmlcleaner.BrowserCompactXmlSerializer;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.htmlcleaner.ContentNode;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.htmlcleaner.TagNode;

        if $z0 == 0 goto label3;

        $r2 = r0.<org.htmlcleaner.BrowserCompactXmlSerializer: org.htmlcleaner.CleanerProperties props>;

        $r3 = virtualinvoke $r2.<org.htmlcleaner.CleanerProperties: org.htmlcleaner.ITagInfoProvider getTagInfoProvider()>();

        r4 = (org.htmlcleaner.TagNode) r1;

        $r5 = virtualinvoke r4.<org.htmlcleaner.TagNode: java.lang.String getName()>();

        $r6 = interfaceinvoke $r3.<org.htmlcleaner.ITagInfoProvider: org.htmlcleaner.TagInfo getTagInfo(java.lang.String)>($r5);

        if $r6 == null goto label2;

        $r7 = virtualinvoke $r6.<org.htmlcleaner.TagInfo: org.htmlcleaner.Display getDisplay()>();

        $r8 = <org.htmlcleaner.Display: org.htmlcleaner.Display inline>;

        if $r7 != $r8 goto label2;

        return 1;

     label2:
        return 0;

     label3:
        return 0;
    }
    protected void serialize(org.htmlcleaner.TagNode, java.io.Writer) throws java.io.IOException
    {
        org.htmlcleaner.BrowserCompactXmlSerializer r0;
        org.htmlcleaner.TagNode $r1;
        java.io.Writer $r2;
        java.util.ArrayList r3;
        java.util.StringTokenizer r4;
        org.htmlcleaner.CleanerProperties $r5;
        org.htmlcleaner.ITagInfoProvider $r6;
        java.lang.String $r7, $r12, r15;
        org.htmlcleaner.TagInfo $r8;
        java.util.List $r9;
        boolean $z0, $z1, z2, z3;
        java.util.ListIterator $r10;
        java.lang.Object $r11;
        org.htmlcleaner.ContentNode $r13;
        org.htmlcleaner.Display $r14;
        int $i0;
        char $c1;
        org.htmlcleaner.CommentNode r16;
        org.htmlcleaner.BaseToken r17;

        r0 := @this: org.htmlcleaner.BrowserCompactXmlSerializer;

        $r1 := @parameter0: org.htmlcleaner.TagNode;

        $r2 := @parameter1: java.io.Writer;

        virtualinvoke r0.<org.htmlcleaner.BrowserCompactXmlSerializer: void serializeOpenTag(org.htmlcleaner.TagNode,java.io.Writer,boolean)>($r1, $r2, 0);

        $r5 = r0.<org.htmlcleaner.BrowserCompactXmlSerializer: org.htmlcleaner.CleanerProperties props>;

        $r6 = virtualinvoke $r5.<org.htmlcleaner.CleanerProperties: org.htmlcleaner.ITagInfoProvider getTagInfoProvider()>();

        $r7 = virtualinvoke $r1.<org.htmlcleaner.TagNode: java.lang.String getName()>();

        $r8 = interfaceinvoke $r6.<org.htmlcleaner.ITagInfoProvider: org.htmlcleaner.TagInfo getTagInfo(java.lang.String)>($r7);

        if $r8 == null goto label12;

        $r7 = virtualinvoke $r8.<org.htmlcleaner.TagInfo: java.lang.String getName()>();

     label01:
        r3 = new java.util.ArrayList;

        $r9 = virtualinvoke $r1.<org.htmlcleaner.TagNode: java.util.List getAllChildren()>();

        specialinvoke r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r9);

        $z0 = virtualinvoke r0.<org.htmlcleaner.BrowserCompactXmlSerializer: boolean isMinimizedTagSyntax(org.htmlcleaner.TagNode)>($r1);

        if $z0 != 0 goto label29;

        $r10 = interfaceinvoke r3.<java.util.List: java.util.ListIterator listIterator()>();

     label02:
        $z0 = interfaceinvoke $r10.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label26;

        $r11 = interfaceinvoke $r10.<java.util.ListIterator: java.lang.Object next()>();

        if $r11 == null goto label02;

        $z0 = $r11 instanceof org.htmlcleaner.ContentNode;

        if $z0 == 0 goto label23;

        $r12 = "pre";

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label23;

        $r13 = (org.htmlcleaner.ContentNode) $r11;

        $r12 = virtualinvoke $r13.<org.htmlcleaner.ContentNode: java.lang.String getContent()>();

        $z0 = virtualinvoke r0.<org.htmlcleaner.BrowserCompactXmlSerializer: boolean dontEscape(org.htmlcleaner.TagNode)>($r1);

        if $z0 == 0 goto label13;

        $r12 = virtualinvoke $r12.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("]]>", "]]&gt;");

     label03:
        $r12 = virtualinvoke $r12.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("^\u00a0+", " ");

        $r12 = virtualinvoke $r12.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\u00a0+$", " ");

        if $r8 == null goto label14;

        $r14 = virtualinvoke $r8.<org.htmlcleaner.TagInfo: org.htmlcleaner.Display getDisplay()>();

        $z0 = virtualinvoke $r14.<org.htmlcleaner.Display: boolean isLeadingAndEndWhitespacesAllowed()>();

        if $z0 == 0 goto label14;

        $z0 = 1;

     label04:
        $i0 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i0 <= 0 goto label15;

        $c1 = virtualinvoke $r12.<java.lang.String: char charAt(int)>(0);

        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c1);

        if $z1 == 0 goto label15;

        z2 = 1;

     label05:
        $i0 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i0 <= 1 goto label16;

        $i0 = virtualinvoke $r12.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        $c1 = virtualinvoke $r12.<java.lang.String: char charAt(int)>($i0);

        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c1);

        if $z1 == 0 goto label16;

        $z1 = 1;

     label06:
        $r12 = virtualinvoke $r12.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i0 == 0 goto label22;

        z3 = 0;

        $i0 = interfaceinvoke r3.<java.util.List: int indexOf(java.lang.Object)>($r11);

        if $i0 < 2 goto label07;

        $i0 = $i0 + -1;

        $r11 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>($i0);

        z3 = specialinvoke r0.<org.htmlcleaner.BrowserCompactXmlSerializer: boolean isContentOrInline(java.lang.Object)>($r11);

     label07:
        if z2 == 0 goto label09;

        if $z0 != 0 goto label08;

        if z3 == 0 goto label09;

     label08:
        virtualinvoke $r2.<java.io.Writer: void write(int)>(32);

     label09:
        r4 = new java.util.StringTokenizer;

        specialinvoke r4.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>($r12, "\n", 1);

        r15 = "";

     label10:
        z2 = virtualinvoke r4.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if z2 == 0 goto label19;

        $r12 = virtualinvoke r4.<java.util.StringTokenizer: java.lang.String nextToken()>();

        z2 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if z2 == 0 goto label17;

        z2 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>("\n");

        if z2 == 0 goto label17;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("<br />");

     label11:
        r15 = $r12;

        goto label10;

     label12:
        $r7 = null;

        goto label01;

     label13:
        $r12 = virtualinvoke r0.<org.htmlcleaner.BrowserCompactXmlSerializer: java.lang.String escapeXml(java.lang.String)>($r12);

        goto label03;

     label14:
        $z0 = 0;

        goto label04;

     label15:
        z2 = 0;

        goto label05;

     label16:
        $z1 = 0;

        goto label06;

     label17:
        r15 = "\n";

        z2 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if z2 == 0 goto label18;

        virtualinvoke $r2.<java.io.Writer: void write(int)>(32);

        goto label11;

     label18:
        r15 = virtualinvoke $r12.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>(r15);

        goto label11;

     label19:
        z2 = 0;

        z3 = interfaceinvoke $r10.<java.util.ListIterator: boolean hasNext()>();

        if z3 == 0 goto label20;

        $r11 = interfaceinvoke $r10.<java.util.ListIterator: java.lang.Object next()>();

        z2 = specialinvoke r0.<org.htmlcleaner.BrowserCompactXmlSerializer: boolean isContentOrInline(java.lang.Object)>($r11);

        interfaceinvoke $r10.<java.util.ListIterator: java.lang.Object previous()>();

     label20:
        if $z1 == 0 goto label02;

        if $z0 != 0 goto label21;

        if z2 == 0 goto label02;

     label21:
        virtualinvoke $r2.<java.io.Writer: void write(int)>(32);

        goto label02;

     label22:
        interfaceinvoke $r10.<java.util.ListIterator: void remove()>();

        goto label02;

     label23:
        $z0 = $r11 instanceof org.htmlcleaner.ContentNode;

        if $z0 == 0 goto label24;

        $r13 = (org.htmlcleaner.ContentNode) $r11;

        $r12 = virtualinvoke $r13.<org.htmlcleaner.ContentNode: java.lang.String getContent()>();

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>($r12);

        goto label02;

     label24:
        $z0 = $r11 instanceof org.htmlcleaner.CommentNode;

        if $z0 == 0 goto label25;

        r16 = (org.htmlcleaner.CommentNode) $r11;

        $r12 = virtualinvoke r16.<org.htmlcleaner.CommentNode: java.lang.String getCommentedContent()>();

        $r12 = virtualinvoke $r12.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>($r12);

        goto label02;

     label25:
        r17 = (org.htmlcleaner.BaseToken) $r11;

        interfaceinvoke r17.<org.htmlcleaner.BaseToken: void serialize(org.htmlcleaner.Serializer,java.io.Writer)>(r0, $r2);

        goto label02;

     label26:
        if $r8 == null goto label28;

        $r14 = virtualinvoke $r8.<org.htmlcleaner.TagInfo: org.htmlcleaner.Display getDisplay()>();

        $z0 = virtualinvoke $r14.<org.htmlcleaner.Display: boolean isAfterTagLineBreakNeeded()>();

        if $z0 == 0 goto label28;

        $z0 = 1;

     label27:
        virtualinvoke r0.<org.htmlcleaner.BrowserCompactXmlSerializer: void serializeEndTag(org.htmlcleaner.TagNode,java.io.Writer,boolean)>($r1, $r2, $z0);

        return;

     label28:
        $z0 = 0;

        goto label27;

     label29:
        return;
    }
