org.htmlcleaner.conditional.TagNodeAttNameValueRegexCondition extends java.lang.Object implements org.htmlcleaner.conditional.ITagNodeCondition
private java.util.regex.Pattern attNameRegex
private java.util.regex.Pattern attValueRegex
    public void <init>(java.util.regex.Pattern, java.util.regex.Pattern)
    {
        org.htmlcleaner.conditional.TagNodeAttNameValueRegexCondition r0;
        java.util.regex.Pattern $r1, $r2;

        r0 := @this: org.htmlcleaner.conditional.TagNodeAttNameValueRegexCondition;

        $r1 := @parameter0: java.util.regex.Pattern;

        $r2 := @parameter1: java.util.regex.Pattern;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.htmlcleaner.conditional.TagNodeAttNameValueRegexCondition: java.util.regex.Pattern attNameRegex> = $r1;

        r0.<org.htmlcleaner.conditional.TagNodeAttNameValueRegexCondition: java.util.regex.Pattern attValueRegex> = $r2;

        return;
    }
    public boolean satisfy(org.htmlcleaner.TagNode)
    {
        org.htmlcleaner.conditional.TagNodeAttNameValueRegexCondition r0;
        org.htmlcleaner.TagNode $r1;
        java.util.Map $r2;
        java.util.Set $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.util.Map$Entry r6;
        java.util.regex.Pattern $r7;
        java.lang.CharSequence $r8;
        java.util.regex.Matcher $r9;

        r0 := @this: org.htmlcleaner.conditional.TagNodeAttNameValueRegexCondition;

        $r1 := @parameter0: org.htmlcleaner.TagNode;

        if $r1 == null goto label4;

        $r2 = virtualinvoke $r1.<org.htmlcleaner.TagNode: java.util.Map getAttributes()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = r0.<org.htmlcleaner.conditional.TagNodeAttNameValueRegexCondition: java.util.regex.Pattern attNameRegex>;

        if $r7 == null goto label2;

        $r7 = r0.<org.htmlcleaner.conditional.TagNodeAttNameValueRegexCondition: java.util.regex.Pattern attNameRegex>;

        $r5 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.CharSequence) $r5;

        $r9 = virtualinvoke $r7.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r8);

        $z0 = virtualinvoke $r9.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label1;

     label2:
        $r7 = r0.<org.htmlcleaner.conditional.TagNodeAttNameValueRegexCondition: java.util.regex.Pattern attValueRegex>;

        if $r7 == null goto label3;

        $r7 = r0.<org.htmlcleaner.conditional.TagNodeAttNameValueRegexCondition: java.util.regex.Pattern attValueRegex>;

        $r5 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = (java.lang.CharSequence) $r5;

        $r9 = virtualinvoke $r7.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r8);

        $z0 = virtualinvoke $r9.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label1;

     label3:
        return 1;

     label4:
        return 0;
    }
