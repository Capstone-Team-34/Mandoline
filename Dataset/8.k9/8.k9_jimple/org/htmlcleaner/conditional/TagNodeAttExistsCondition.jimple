org.htmlcleaner.conditional.TagNodeAttExistsCondition extends java.lang.Object implements org.htmlcleaner.conditional.ITagNodeCondition
private java.lang.String attName
    public void <init>(java.lang.String)
    {
        org.htmlcleaner.conditional.TagNodeAttExistsCondition r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.conditional.TagNodeAttExistsCondition;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.htmlcleaner.conditional.TagNodeAttExistsCondition: java.lang.String attName> = $r1;

        return;
    }
    public boolean satisfy(org.htmlcleaner.TagNode)
    {
        org.htmlcleaner.conditional.TagNodeAttExistsCondition r0;
        org.htmlcleaner.TagNode $r1;
        java.util.Map $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: org.htmlcleaner.conditional.TagNodeAttExistsCondition;

        $r1 := @parameter0: org.htmlcleaner.TagNode;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke $r1.<org.htmlcleaner.TagNode: java.util.Map getAttributes()>();

        $r3 = r0.<org.htmlcleaner.conditional.TagNodeAttExistsCondition: java.lang.String attName>;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

        return $z0;
    }
