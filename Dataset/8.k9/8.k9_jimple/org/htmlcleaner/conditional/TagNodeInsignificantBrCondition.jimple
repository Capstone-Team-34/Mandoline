org.htmlcleaner.conditional.TagNodeInsignificantBrCondition extends java.lang.Object implements org.htmlcleaner.conditional.ITagNodeCondition
private static final java.lang.String BR_TAG
    public void <init>()
    {
        org.htmlcleaner.conditional.TagNodeInsignificantBrCondition r0;

        r0 := @this: org.htmlcleaner.conditional.TagNodeInsignificantBrCondition;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private boolean checkSublist(int, int, java.util.List)
    {
        org.htmlcleaner.conditional.TagNodeInsignificantBrCondition r0;
        int $i0, $i1;
        java.util.List $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.htmlcleaner.TagNode r4;

        r0 := @this: org.htmlcleaner.conditional.TagNodeInsignificantBrCondition;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.util.List;

        $r1 = interfaceinvoke $r1.<java.util.List: java.util.List subList(int,int)>($i0, $i1);

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $z0 = $r3 instanceof org.htmlcleaner.TagNode;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r4 = (org.htmlcleaner.TagNode) $r3;

        $z0 = specialinvoke r0.<org.htmlcleaner.conditional.TagNodeInsignificantBrCondition: boolean isBrNode(org.htmlcleaner.TagNode)>(r4);

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke r4.<org.htmlcleaner.TagNode: boolean isPruned()>();

        if $z0 != 0 goto label1;

        return 0;

     label3:
        return 1;
    }
    private boolean isBrNode(org.htmlcleaner.TagNode)
    {
        org.htmlcleaner.conditional.TagNodeInsignificantBrCondition r0;
        org.htmlcleaner.TagNode $r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: org.htmlcleaner.conditional.TagNodeInsignificantBrCondition;

        $r1 := @parameter0: org.htmlcleaner.TagNode;

        if $r1 == null goto label1;

        $r2 = "br";

        $r3 = virtualinvoke $r1.<org.htmlcleaner.TagNode: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean satisfy(org.htmlcleaner.TagNode)
    {
        org.htmlcleaner.conditional.TagNodeInsignificantBrCondition r0;
        org.htmlcleaner.TagNode $r1, $r2;
        boolean $z0;
        java.util.List $r3;
        int $i0, $i1;

        r0 := @this: org.htmlcleaner.conditional.TagNodeInsignificantBrCondition;

        $r1 := @parameter0: org.htmlcleaner.TagNode;

        $z0 = specialinvoke r0.<org.htmlcleaner.conditional.TagNodeInsignificantBrCondition: boolean isBrNode(org.htmlcleaner.TagNode)>($r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke $r1.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();

        $r3 = virtualinvoke $r2.<org.htmlcleaner.TagNode: java.util.List getAllChildren()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int indexOf(java.lang.Object)>($r1);

        $z0 = specialinvoke r0.<org.htmlcleaner.conditional.TagNodeInsignificantBrCondition: boolean checkSublist(int,int,java.util.List)>(0, $i0, $r3);

        if $z0 != 0 goto label2;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $z0 = specialinvoke r0.<org.htmlcleaner.conditional.TagNodeInsignificantBrCondition: boolean checkSublist(int,int,java.util.List)>($i0, $i1, $r3);

        if $z0 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }
