org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource extends java.lang.Object
private boolean isCancelled
private android.os.ParcelFileDescriptor writeSidePfd
    public void <init>()
    {
        org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource r0;

        r0 := @this: org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    static void access$000(org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource)
    {
        org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource $r0;

        $r0 := @parameter0: org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource;

        specialinvoke $r0.<org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource: void cancel()>();

        return;
    }
    static android.os.ParcelFileDescriptor access$300(org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource) throws java.io.IOException
    {
        org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource $r0;
        android.os.ParcelFileDescriptor $r1;

        $r0 := @parameter0: org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource;

        $r1 = specialinvoke $r0.<org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource: android.os.ParcelFileDescriptor startPumpThread()>();

        return $r1;
    }
    private void cancel()
    {
        org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource r0;
        android.os.ParcelFileDescriptor $r1;
        java.io.IOException $r2;

        r0 := @this: org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource;

        r0.<org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource: boolean isCancelled> = 1;

        $r1 = r0.<org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource: android.os.ParcelFileDescriptor writeSidePfd>;

     label1:
        virtualinvoke $r1.<android.os.ParcelFileDescriptor: void close()>();

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
    private android.os.ParcelFileDescriptor startPumpThread() throws java.io.IOException
    {
        org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource r0;
        android.os.ParcelFileDescriptor r1, $r2;
        android.os.ParcelFileDescriptor[] $r3;
        java.lang.IllegalStateException $r4;
        org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSourceTransferThread $r5;
        android.os.ParcelFileDescriptor$AutoCloseOutputStream $r6;

        r0 := @this: org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource;

        r1 = r0.<org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource: android.os.ParcelFileDescriptor writeSidePfd>;

        if r1 == null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("startPumpThread() must only be called once!");

        throw $r4;

     label1:
        $r3 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createPipe()>();

        r1 = $r3[0];

        $r2 = $r3[1];

        r0.<org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource: android.os.ParcelFileDescriptor writeSidePfd> = $r2;

        $r5 = new org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSourceTransferThread;

        $r6 = new android.os.ParcelFileDescriptor$AutoCloseOutputStream;

        $r2 = r0.<org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource: android.os.ParcelFileDescriptor writeSidePfd>;

        specialinvoke $r6.<android.os.ParcelFileDescriptor$AutoCloseOutputStream: void <init>(android.os.ParcelFileDescriptor)>($r2);

        specialinvoke $r5.<org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSourceTransferThread: void <init>(org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource,java.io.OutputStream)>(r0, $r6);

        virtualinvoke $r5.<org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSourceTransferThread: void start()>();

        return r1;
    }
    public java.lang.Long getSizeForProgress()
    {
        org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource r0;

        r0 := @this: org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource;

        return null;
    }
    public boolean isCancelled()
    {
        org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource r0;
        boolean z0;

        r0 := @this: org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource;

        z0 = r0.<org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource: boolean isCancelled>;

        return z0;
    }
public abstract void writeTo(java.io.OutputStream) throws java.io.IOException { 
// no body
} 
