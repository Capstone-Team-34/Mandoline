org.openintents.openpgp.util.ParcelFileDescriptorUtil$TransferThread extends java.lang.Thread
final java.io.InputStream mIn
final java.io.OutputStream mOut
    void <init>(java.io.InputStream, java.io.OutputStream)
    {
        org.openintents.openpgp.util.ParcelFileDescriptorUtil$TransferThread r0;
        java.io.InputStream $r1;
        java.io.OutputStream $r2;

        r0 := @this: org.openintents.openpgp.util.ParcelFileDescriptorUtil$TransferThread;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.io.OutputStream;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>("IPC Transfer Thread");

        r0.<org.openintents.openpgp.util.ParcelFileDescriptorUtil$TransferThread: java.io.InputStream mIn> = $r1;

        r0.<org.openintents.openpgp.util.ParcelFileDescriptorUtil$TransferThread: java.io.OutputStream mOut> = $r2;

        virtualinvoke r0.<org.openintents.openpgp.util.ParcelFileDescriptorUtil$TransferThread: void setDaemon(boolean)>(1);

        return;
    }
    public void run()
    {
        org.openintents.openpgp.util.ParcelFileDescriptorUtil$TransferThread r0;
        byte[] r1;
        java.io.IOException r2, $r5, $r7, $r8, $r9, $r10, $r11;
        int $i0;
        java.io.InputStream $r3;
        java.io.OutputStream $r4;
        java.lang.Throwable $r6;

        r0 := @this: org.openintents.openpgp.util.ParcelFileDescriptorUtil$TransferThread;

        r1 = newarray (byte)[4096];

     label01:
        $r3 = r0.<org.openintents.openpgp.util.ParcelFileDescriptorUtil$TransferThread: java.io.InputStream mIn>;

     label02:
        $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[])>(r1);

     label03:
        if $i0 <= 0 goto label14;

     label04:
        $r4 = r0.<org.openintents.openpgp.util.ParcelFileDescriptorUtil$TransferThread: java.io.OutputStream mOut>;

     label05:
        virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>(r1, 0, $i0);

     label06:
        goto label01;

     label07:
        r2 := @caughtexception;

     label08:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("OpenPgp API", "IOException when writing to out", r2);

     label09:
        $r3 = r0.<org.openintents.openpgp.util.ParcelFileDescriptorUtil$TransferThread: java.io.InputStream mIn>;

     label10:
        virtualinvoke $r3.<java.io.InputStream: void close()>();

     label11:
        $r4 = r0.<org.openintents.openpgp.util.ParcelFileDescriptorUtil$TransferThread: java.io.OutputStream mOut>;

     label12:
        virtualinvoke $r4.<java.io.OutputStream: void close()>();

     label13:
        return;

     label14:
        $r3 = r0.<org.openintents.openpgp.util.ParcelFileDescriptorUtil$TransferThread: java.io.InputStream mIn>;

     label15:
        virtualinvoke $r3.<java.io.InputStream: void close()>();

     label16:
        $r4 = r0.<org.openintents.openpgp.util.ParcelFileDescriptorUtil$TransferThread: java.io.OutputStream mOut>;

     label17:
        virtualinvoke $r4.<java.io.OutputStream: void close()>();

     label18:
        return;

     label19:
        $r5 := @caughtexception;

        return;

     label20:
        $r6 := @caughtexception;

        $r3 = r0.<org.openintents.openpgp.util.ParcelFileDescriptorUtil$TransferThread: java.io.InputStream mIn>;

     label21:
        virtualinvoke $r3.<java.io.InputStream: void close()>();

     label22:
        $r4 = r0.<org.openintents.openpgp.util.ParcelFileDescriptorUtil$TransferThread: java.io.OutputStream mOut>;

     label23:
        virtualinvoke $r4.<java.io.OutputStream: void close()>();

     label24:
        throw $r6;

     label25:
        $r7 := @caughtexception;

        goto label24;

     label26:
        $r8 := @caughtexception;

        goto label22;

     label27:
        $r9 := @caughtexception;

        return;

     label28:
        $r10 := @caughtexception;

        goto label11;

     label29:
        $r11 := @caughtexception;

        goto label16;

        catch java.io.IOException from label02 to label03 with label07;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.lang.Throwable from label01 to label03 with label20;
        catch java.lang.Throwable from label04 to label06 with label20;
        catch java.lang.Throwable from label08 to label09 with label20;
        catch java.io.IOException from label10 to label11 with label28;
        catch java.io.IOException from label12 to label13 with label27;
        catch java.io.IOException from label15 to label16 with label29;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.io.IOException from label21 to label22 with label26;
        catch java.io.IOException from label23 to label24 with label25;
    }
