org.openintents.openpgp.OpenPgpSignatureResult extends java.lang.Object implements android.os.Parcelable
public static final android.os.Parcelable$Creator CREATOR
public static final int PARCELABLE_VERSION
public static final int RESULT_INVALID_INSECURE
public static final int RESULT_INVALID_KEY_EXPIRED
public static final int RESULT_INVALID_KEY_INSECURE
public static final int RESULT_INVALID_KEY_REVOKED
public static final int RESULT_INVALID_SIGNATURE
public static final int RESULT_KEY_MISSING
public static final int RESULT_NO_SIGNATURE
public static final int RESULT_VALID_CONFIRMED
public static final int RESULT_VALID_KEY_CONFIRMED
public static final int RESULT_VALID_KEY_UNCONFIRMED
public static final int RESULT_VALID_UNCONFIRMED
public static final int SENDER_RESULT_NO_SENDER
public static final int SENDER_RESULT_UID_CONFIRMED
public static final int SENDER_RESULT_UID_MISSING
public static final int SENDER_RESULT_UID_UNCONFIRMED
private final java.util.ArrayList confirmedUserIds
private final long keyId
private final java.lang.String primaryUserId
private final int result
private final int senderResult
private final java.util.ArrayList userIds
    static void <clinit>()
    {
        org.openintents.openpgp.OpenPgpSignatureResult$1 $r0;

        $r0 = new org.openintents.openpgp.OpenPgpSignatureResult$1;

        specialinvoke $r0.<org.openintents.openpgp.OpenPgpSignatureResult$1: void <init>()>();

        <org.openintents.openpgp.OpenPgpSignatureResult: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }
    private void <init>(int, java.lang.String, long, java.util.ArrayList, java.util.ArrayList, int, java.lang.Boolean)
    {
        org.openintents.openpgp.OpenPgpSignatureResult r0;
        int $i0, $i2;
        java.lang.String $r1;
        long $l1;
        java.util.ArrayList r2, r3;
        java.lang.Boolean $r4;

        r0 := @this: org.openintents.openpgp.OpenPgpSignatureResult;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $l1 := @parameter2: long;

        r2 := @parameter3: java.util.ArrayList;

        r3 := @parameter4: java.util.ArrayList;

        $i2 := @parameter5: int;

        $r4 := @parameter6: java.lang.Boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.openintents.openpgp.OpenPgpSignatureResult: int result> = $i0;

        r0.<org.openintents.openpgp.OpenPgpSignatureResult: java.lang.String primaryUserId> = $r1;

        r0.<org.openintents.openpgp.OpenPgpSignatureResult: long keyId> = $l1;

        r0.<org.openintents.openpgp.OpenPgpSignatureResult: java.util.ArrayList userIds> = r2;

        r0.<org.openintents.openpgp.OpenPgpSignatureResult: java.util.ArrayList confirmedUserIds> = r3;

        r0.<org.openintents.openpgp.OpenPgpSignatureResult: int senderResult> = $i2;

        return;
    }
    private void <init>(android.os.Parcel, int)
    {
        org.openintents.openpgp.OpenPgpSignatureResult r0;
        android.os.Parcel $r1;
        int $i0, $i1;
        java.lang.String $r2;
        long $l2;
        java.util.ArrayList $r3;

        r0 := @this: org.openintents.openpgp.OpenPgpSignatureResult;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        r0.<org.openintents.openpgp.OpenPgpSignatureResult: int result> = $i1;

        virtualinvoke $r1.<android.os.Parcel: byte readByte()>();

        $r2 = virtualinvoke $r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<org.openintents.openpgp.OpenPgpSignatureResult: java.lang.String primaryUserId> = $r2;

        $l2 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        r0.<org.openintents.openpgp.OpenPgpSignatureResult: long keyId> = $l2;

        if $i0 <= 1 goto label2;

        $r3 = virtualinvoke $r1.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

        r0.<org.openintents.openpgp.OpenPgpSignatureResult: java.util.ArrayList userIds> = $r3;

     label1:
        if $i0 <= 2 goto label3;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        r0.<org.openintents.openpgp.OpenPgpSignatureResult: int senderResult> = $i0;

        $r3 = virtualinvoke $r1.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

        r0.<org.openintents.openpgp.OpenPgpSignatureResult: java.util.ArrayList confirmedUserIds> = $r3;

        return;

     label2:
        r0.<org.openintents.openpgp.OpenPgpSignatureResult: java.util.ArrayList userIds> = null;

        goto label1;

     label3:
        r0.<org.openintents.openpgp.OpenPgpSignatureResult: int senderResult> = 0;

        r0.<org.openintents.openpgp.OpenPgpSignatureResult: java.util.ArrayList confirmedUserIds> = null;

        return;
    }
    void <init>(android.os.Parcel, int, org.openintents.openpgp.OpenPgpSignatureResult$1)
    {
        org.openintents.openpgp.OpenPgpSignatureResult r0;
        android.os.Parcel $r1;
        int $i0;
        org.openintents.openpgp.OpenPgpSignatureResult$1 $r2;

        r0 := @this: org.openintents.openpgp.OpenPgpSignatureResult;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $r2 := @parameter2: org.openintents.openpgp.OpenPgpSignatureResult$1;

        specialinvoke r0.<org.openintents.openpgp.OpenPgpSignatureResult: void <init>(android.os.Parcel,int)>($r1, $i0);

        return;
    }
    public static org.openintents.openpgp.OpenPgpSignatureResult createWithInvalidSignature()
    {
        org.openintents.openpgp.OpenPgpSignatureResult $r0;

        $r0 = new org.openintents.openpgp.OpenPgpSignatureResult;

        specialinvoke $r0.<org.openintents.openpgp.OpenPgpSignatureResult: void <init>(int,java.lang.String,long,java.util.ArrayList,java.util.ArrayList,int,java.lang.Boolean)>(0, null, 0L, null, null, 0, null);

        return $r0;
    }
    public static org.openintents.openpgp.OpenPgpSignatureResult createWithKeyMissing(long)
    {
        long $l0;
        org.openintents.openpgp.OpenPgpSignatureResult $r0;

        $l0 := @parameter0: long;

        $r0 = new org.openintents.openpgp.OpenPgpSignatureResult;

        specialinvoke $r0.<org.openintents.openpgp.OpenPgpSignatureResult: void <init>(int,java.lang.String,long,java.util.ArrayList,java.util.ArrayList,int,java.lang.Boolean)>(2, null, $l0, null, null, 0, null);

        return $r0;
    }
    public static org.openintents.openpgp.OpenPgpSignatureResult createWithNoSignature()
    {
        org.openintents.openpgp.OpenPgpSignatureResult $r0;

        $r0 = new org.openintents.openpgp.OpenPgpSignatureResult;

        specialinvoke $r0.<org.openintents.openpgp.OpenPgpSignatureResult: void <init>(int,java.lang.String,long,java.util.ArrayList,java.util.ArrayList,int,java.lang.Boolean)>(-1, null, 0L, null, null, 0, null);

        return $r0;
    }
    public static org.openintents.openpgp.OpenPgpSignatureResult createWithValidSignature(int, java.lang.String, long, java.util.ArrayList, java.util.ArrayList, int)
    {
        int $i0, $i2;
        java.lang.String $r0;
        long $l1;
        java.util.ArrayList r1, r2;
        java.lang.IllegalArgumentException $r3;
        org.openintents.openpgp.OpenPgpSignatureResult $r4;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.String;

        $l1 := @parameter2: long;

        r1 := @parameter3: java.util.ArrayList;

        r2 := @parameter4: java.util.ArrayList;

        $i2 := @parameter5: int;

        if $i0 == -1 goto label1;

        if $i0 == 2 goto label1;

        if $i0 != 0 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("can only use this method for valid types of signatures");

        throw $r3;

     label2:
        $r4 = new org.openintents.openpgp.OpenPgpSignatureResult;

        specialinvoke $r4.<org.openintents.openpgp.OpenPgpSignatureResult: void <init>(int,java.lang.String,long,java.util.ArrayList,java.util.ArrayList,int,java.lang.Boolean)>($i0, $r0, $l1, r1, r2, $i2, null);

        return $r4;
    }
    public int describeContents()
    {
        org.openintents.openpgp.OpenPgpSignatureResult r0;

        r0 := @this: org.openintents.openpgp.OpenPgpSignatureResult;

        return 0;
    }
    public java.util.List getConfirmedUserIds()
    {
        org.openintents.openpgp.OpenPgpSignatureResult r0;
        java.util.List $r1;
        java.util.ArrayList $r2;

        r0 := @this: org.openintents.openpgp.OpenPgpSignatureResult;

        $r2 = r0.<org.openintents.openpgp.OpenPgpSignatureResult: java.util.ArrayList confirmedUserIds>;

        $r1 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r1;
    }
    public long getKeyId()
    {
        org.openintents.openpgp.OpenPgpSignatureResult r0;
        long l0;

        r0 := @this: org.openintents.openpgp.OpenPgpSignatureResult;

        l0 = r0.<org.openintents.openpgp.OpenPgpSignatureResult: long keyId>;

        return l0;
    }
    public java.lang.String getPrimaryUserId()
    {
        org.openintents.openpgp.OpenPgpSignatureResult r0;
        java.lang.String r1;

        r0 := @this: org.openintents.openpgp.OpenPgpSignatureResult;

        r1 = r0.<org.openintents.openpgp.OpenPgpSignatureResult: java.lang.String primaryUserId>;

        return r1;
    }
    public int getResult()
    {
        org.openintents.openpgp.OpenPgpSignatureResult r0;
        int i0;

        r0 := @this: org.openintents.openpgp.OpenPgpSignatureResult;

        i0 = r0.<org.openintents.openpgp.OpenPgpSignatureResult: int result>;

        return i0;
    }
    public int getSenderResult()
    {
        org.openintents.openpgp.OpenPgpSignatureResult r0;
        int i0;

        r0 := @this: org.openintents.openpgp.OpenPgpSignatureResult;

        i0 = r0.<org.openintents.openpgp.OpenPgpSignatureResult: int senderResult>;

        return i0;
    }
    public java.util.List getUserIds()
    {
        org.openintents.openpgp.OpenPgpSignatureResult r0;
        java.util.List $r1;
        java.util.ArrayList $r2;

        r0 := @this: org.openintents.openpgp.OpenPgpSignatureResult;

        $r2 = r0.<org.openintents.openpgp.OpenPgpSignatureResult: java.util.ArrayList userIds>;

        $r1 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r1;
    }
    public java.lang.String toString()
    {
        org.openintents.openpgp.OpenPgpSignatureResult r0;
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.String $r2;
        java.util.ArrayList $r3;
        long $l1;

        r0 := @this: org.openintents.openpgp.OpenPgpSignatureResult;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nresult: ");

        $i0 = r0.<org.openintents.openpgp.OpenPgpSignatureResult: int result>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nprimaryUserId: ");

        $r2 = r0.<org.openintents.openpgp.OpenPgpSignatureResult: java.lang.String primaryUserId>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nuserIds: ");

        $r3 = r0.<org.openintents.openpgp.OpenPgpSignatureResult: java.util.ArrayList userIds>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nkeyId: ");

        $l1 = r0.<org.openintents.openpgp.OpenPgpSignatureResult: long keyId>;

        $r2 = staticinvoke <org.openintents.openpgp.util.OpenPgpUtils: java.lang.String convertKeyIdToHex(long)>($l1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
    public org.openintents.openpgp.OpenPgpSignatureResult withSignatureOnlyFlag(boolean)
    {
        org.openintents.openpgp.OpenPgpSignatureResult r0, $r1;
        boolean $z0;
        int $i0, $i2;
        java.lang.String $r2;
        long $l1;
        java.util.ArrayList $r3, $r4;
        java.lang.Boolean $r5;

        r0 := @this: org.openintents.openpgp.OpenPgpSignatureResult;

        $z0 := @parameter0: boolean;

        $r1 = new org.openintents.openpgp.OpenPgpSignatureResult;

        $i0 = r0.<org.openintents.openpgp.OpenPgpSignatureResult: int result>;

        $r2 = r0.<org.openintents.openpgp.OpenPgpSignatureResult: java.lang.String primaryUserId>;

        $l1 = r0.<org.openintents.openpgp.OpenPgpSignatureResult: long keyId>;

        $r3 = r0.<org.openintents.openpgp.OpenPgpSignatureResult: java.util.ArrayList userIds>;

        $r4 = r0.<org.openintents.openpgp.OpenPgpSignatureResult: java.util.ArrayList confirmedUserIds>;

        $i2 = r0.<org.openintents.openpgp.OpenPgpSignatureResult: int senderResult>;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        specialinvoke $r1.<org.openintents.openpgp.OpenPgpSignatureResult: void <init>(int,java.lang.String,long,java.util.ArrayList,java.util.ArrayList,int,java.lang.Boolean)>($i0, $r2, $l1, $r3, $r4, $i2, $r5);

        return $r1;
    }
    public void writeToParcel(android.os.Parcel, int)
    {
        org.openintents.openpgp.OpenPgpSignatureResult r0;
        android.os.Parcel $r1;
        int $i0, i1, $i2;
        java.lang.String $r2;
        long $l3;
        java.util.ArrayList $r3;

        r0 := @this: org.openintents.openpgp.OpenPgpSignatureResult;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>(3);

        $i0 = virtualinvoke $r1.<android.os.Parcel: int dataPosition()>();

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>(0);

        $i2 = virtualinvoke $r1.<android.os.Parcel: int dataPosition()>();

        i1 = r0.<org.openintents.openpgp.OpenPgpSignatureResult: int result>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke $r1.<android.os.Parcel: void writeByte(byte)>(0);

        $r2 = r0.<org.openintents.openpgp.OpenPgpSignatureResult: java.lang.String primaryUserId>;

        virtualinvoke $r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $l3 = r0.<org.openintents.openpgp.OpenPgpSignatureResult: long keyId>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l3);

        $r3 = r0.<org.openintents.openpgp.OpenPgpSignatureResult: java.util.ArrayList userIds>;

        virtualinvoke $r1.<android.os.Parcel: void writeStringList(java.util.List)>($r3);

        i1 = r0.<org.openintents.openpgp.OpenPgpSignatureResult: int senderResult>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<org.openintents.openpgp.OpenPgpSignatureResult: java.util.ArrayList confirmedUserIds>;

        virtualinvoke $r1.<android.os.Parcel: void writeStringList(java.util.List)>($r3);

        i1 = virtualinvoke $r1.<android.os.Parcel: int dataPosition()>();

        i1 = i1 - $i2;

        virtualinvoke $r1.<android.os.Parcel: void setDataPosition(int)>($i0);

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>(i1);

        $i0 = $i2 + i1;

        virtualinvoke $r1.<android.os.Parcel: void setDataPosition(int)>($i0);

        return;
    }
