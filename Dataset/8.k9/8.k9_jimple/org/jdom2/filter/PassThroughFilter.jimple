org.jdom2.filter.PassThroughFilter extends org.jdom2.filter.AbstractFilter
private static final long serialVersionUID
    void <init>()
    {
        org.jdom2.filter.PassThroughFilter r0;

        r0 := @this: org.jdom2.filter.PassThroughFilter;

        specialinvoke r0.<org.jdom2.filter.AbstractFilter: void <init>()>();

        return;
    }
    public java.lang.Object filter(java.lang.Object)
    {
        org.jdom2.filter.PassThroughFilter r0;
        java.lang.Object $r1;

        r0 := @this: org.jdom2.filter.PassThroughFilter;

        $r1 := @parameter0: java.lang.Object;

        return $r1;
    }
    public java.util.List filter(java.util.List)
    {
        org.jdom2.filter.PassThroughFilter r0;
        java.util.List r1;
        java.util.ArrayList r2;
        boolean $z0;
        java.util.Iterator $r3;
        java.lang.Object $r4;

        r0 := @this: org.jdom2.filter.PassThroughFilter;

        r1 := @parameter0: java.util.List;

        if r1 == null goto label1;

        $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return r1;

     label2:
        $z0 = r1 instanceof java.util.RandomAccess;

        if $z0 == 0 goto label3;

        r1 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r1);

        return r1;

     label3:
        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label4;

     label5:
        r1 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r2);

        return r1;
    }
