org.jdom2.filter.Filters extends java.lang.Object
private static final org.jdom2.filter.Filter fattribute
private static final org.jdom2.filter.Filter fboolean
private static final org.jdom2.filter.Filter fcdata
private static final org.jdom2.filter.Filter fcomment
private static final org.jdom2.filter.Filter fcontent
private static final org.jdom2.filter.Filter fdoctype
private static final org.jdom2.filter.Filter fdocument
private static final org.jdom2.filter.Filter fdouble
private static final org.jdom2.filter.Filter felement
private static final org.jdom2.filter.Filter fentityref
private static final org.jdom2.filter.Filter fpassthrough
private static final org.jdom2.filter.Filter fpi
private static final org.jdom2.filter.Filter fstring
private static final org.jdom2.filter.Filter ftext
private static final org.jdom2.filter.Filter ftextonly
    static void <clinit>()
    {
        org.jdom2.filter.ClassFilter $r0;
        org.jdom2.filter.AttributeFilter $r1;
        org.jdom2.filter.TextOnlyFilter $r2;
        org.jdom2.filter.PassThroughFilter $r3;

        $r0 = new org.jdom2.filter.ClassFilter;

        specialinvoke $r0.<org.jdom2.filter.ClassFilter: void <init>(java.lang.Class)>(class "Lorg/jdom2/Content;");

        <org.jdom2.filter.Filters: org.jdom2.filter.Filter fcontent> = $r0;

        $r1 = new org.jdom2.filter.AttributeFilter;

        specialinvoke $r1.<org.jdom2.filter.AttributeFilter: void <init>()>();

        <org.jdom2.filter.Filters: org.jdom2.filter.Filter fattribute> = $r1;

        $r0 = new org.jdom2.filter.ClassFilter;

        specialinvoke $r0.<org.jdom2.filter.ClassFilter: void <init>(java.lang.Class)>(class "Lorg/jdom2/Comment;");

        <org.jdom2.filter.Filters: org.jdom2.filter.Filter fcomment> = $r0;

        $r0 = new org.jdom2.filter.ClassFilter;

        specialinvoke $r0.<org.jdom2.filter.ClassFilter: void <init>(java.lang.Class)>(class "Lorg/jdom2/CDATA;");

        <org.jdom2.filter.Filters: org.jdom2.filter.Filter fcdata> = $r0;

        $r0 = new org.jdom2.filter.ClassFilter;

        specialinvoke $r0.<org.jdom2.filter.ClassFilter: void <init>(java.lang.Class)>(class "Lorg/jdom2/DocType;");

        <org.jdom2.filter.Filters: org.jdom2.filter.Filter fdoctype> = $r0;

        $r0 = new org.jdom2.filter.ClassFilter;

        specialinvoke $r0.<org.jdom2.filter.ClassFilter: void <init>(java.lang.Class)>(class "Lorg/jdom2/EntityRef;");

        <org.jdom2.filter.Filters: org.jdom2.filter.Filter fentityref> = $r0;

        $r0 = new org.jdom2.filter.ClassFilter;

        specialinvoke $r0.<org.jdom2.filter.ClassFilter: void <init>(java.lang.Class)>(class "Lorg/jdom2/ProcessingInstruction;");

        <org.jdom2.filter.Filters: org.jdom2.filter.Filter fpi> = $r0;

        $r0 = new org.jdom2.filter.ClassFilter;

        specialinvoke $r0.<org.jdom2.filter.ClassFilter: void <init>(java.lang.Class)>(class "Lorg/jdom2/Text;");

        <org.jdom2.filter.Filters: org.jdom2.filter.Filter ftext> = $r0;

        $r2 = new org.jdom2.filter.TextOnlyFilter;

        specialinvoke $r2.<org.jdom2.filter.TextOnlyFilter: void <init>()>();

        <org.jdom2.filter.Filters: org.jdom2.filter.Filter ftextonly> = $r2;

        $r0 = new org.jdom2.filter.ClassFilter;

        specialinvoke $r0.<org.jdom2.filter.ClassFilter: void <init>(java.lang.Class)>(class "Lorg/jdom2/Element;");

        <org.jdom2.filter.Filters: org.jdom2.filter.Filter felement> = $r0;

        $r0 = new org.jdom2.filter.ClassFilter;

        specialinvoke $r0.<org.jdom2.filter.ClassFilter: void <init>(java.lang.Class)>(class "Lorg/jdom2/Document;");

        <org.jdom2.filter.Filters: org.jdom2.filter.Filter fdocument> = $r0;

        $r0 = new org.jdom2.filter.ClassFilter;

        specialinvoke $r0.<org.jdom2.filter.ClassFilter: void <init>(java.lang.Class)>(class "Ljava/lang/Double;");

        <org.jdom2.filter.Filters: org.jdom2.filter.Filter fdouble> = $r0;

        $r0 = new org.jdom2.filter.ClassFilter;

        specialinvoke $r0.<org.jdom2.filter.ClassFilter: void <init>(java.lang.Class)>(class "Ljava/lang/Boolean;");

        <org.jdom2.filter.Filters: org.jdom2.filter.Filter fboolean> = $r0;

        $r0 = new org.jdom2.filter.ClassFilter;

        specialinvoke $r0.<org.jdom2.filter.ClassFilter: void <init>(java.lang.Class)>(class "Ljava/lang/String;");

        <org.jdom2.filter.Filters: org.jdom2.filter.Filter fstring> = $r0;

        $r3 = new org.jdom2.filter.PassThroughFilter;

        specialinvoke $r3.<org.jdom2.filter.PassThroughFilter: void <init>()>();

        <org.jdom2.filter.Filters: org.jdom2.filter.Filter fpassthrough> = $r3;

        return;
    }
    private void <init>()
    {
        org.jdom2.filter.Filters r0;

        r0 := @this: org.jdom2.filter.Filters;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static final org.jdom2.filter.Filter attribute()
    {
        org.jdom2.filter.Filter r0;

        r0 = <org.jdom2.filter.Filters: org.jdom2.filter.Filter fattribute>;

        return r0;
    }
    public static final org.jdom2.filter.Filter attribute(java.lang.String)
    {
        java.lang.String $r0;
        org.jdom2.filter.AttributeFilter $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = new org.jdom2.filter.AttributeFilter;

        specialinvoke $r1.<org.jdom2.filter.AttributeFilter: void <init>(java.lang.String)>($r0);

        return $r1;
    }
    public static final org.jdom2.filter.Filter attribute(java.lang.String, org.jdom2.Namespace)
    {
        java.lang.String $r0;
        org.jdom2.Namespace $r1;
        org.jdom2.filter.AttributeFilter $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: org.jdom2.Namespace;

        $r2 = new org.jdom2.filter.AttributeFilter;

        specialinvoke $r2.<org.jdom2.filter.AttributeFilter: void <init>(java.lang.String,org.jdom2.Namespace)>($r0, $r1);

        return $r2;
    }
    public static final org.jdom2.filter.Filter attribute(org.jdom2.Namespace)
    {
        org.jdom2.Namespace $r0;
        org.jdom2.filter.AttributeFilter $r1;

        $r0 := @parameter0: org.jdom2.Namespace;

        $r1 = new org.jdom2.filter.AttributeFilter;

        specialinvoke $r1.<org.jdom2.filter.AttributeFilter: void <init>(org.jdom2.Namespace)>($r0);

        return $r1;
    }
    public static final org.jdom2.filter.Filter cdata()
    {
        org.jdom2.filter.Filter r0;

        r0 = <org.jdom2.filter.Filters: org.jdom2.filter.Filter fcdata>;

        return r0;
    }
    public static final org.jdom2.filter.Filter comment()
    {
        org.jdom2.filter.Filter r0;

        r0 = <org.jdom2.filter.Filters: org.jdom2.filter.Filter fcomment>;

        return r0;
    }
    public static final org.jdom2.filter.Filter content()
    {
        org.jdom2.filter.Filter r0;

        r0 = <org.jdom2.filter.Filters: org.jdom2.filter.Filter fcontent>;

        return r0;
    }
    public static final org.jdom2.filter.Filter doctype()
    {
        org.jdom2.filter.Filter r0;

        r0 = <org.jdom2.filter.Filters: org.jdom2.filter.Filter fdoctype>;

        return r0;
    }
    public static final org.jdom2.filter.Filter document()
    {
        org.jdom2.filter.Filter r0;

        r0 = <org.jdom2.filter.Filters: org.jdom2.filter.Filter fdocument>;

        return r0;
    }
    public static final org.jdom2.filter.Filter element()
    {
        org.jdom2.filter.Filter r0;

        r0 = <org.jdom2.filter.Filters: org.jdom2.filter.Filter felement>;

        return r0;
    }
    public static final org.jdom2.filter.Filter element(java.lang.String)
    {
        java.lang.String $r0;
        org.jdom2.filter.ElementFilter $r1;
        org.jdom2.Namespace $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = new org.jdom2.filter.ElementFilter;

        $r2 = <org.jdom2.Namespace: org.jdom2.Namespace NO_NAMESPACE>;

        specialinvoke $r1.<org.jdom2.filter.ElementFilter: void <init>(java.lang.String,org.jdom2.Namespace)>($r0, $r2);

        return $r1;
    }
    public static final org.jdom2.filter.Filter element(java.lang.String, org.jdom2.Namespace)
    {
        java.lang.String $r0;
        org.jdom2.Namespace $r1;
        org.jdom2.filter.ElementFilter $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: org.jdom2.Namespace;

        $r2 = new org.jdom2.filter.ElementFilter;

        specialinvoke $r2.<org.jdom2.filter.ElementFilter: void <init>(java.lang.String,org.jdom2.Namespace)>($r0, $r1);

        return $r2;
    }
    public static final org.jdom2.filter.Filter element(org.jdom2.Namespace)
    {
        org.jdom2.Namespace $r0;
        org.jdom2.filter.ElementFilter $r1;

        $r0 := @parameter0: org.jdom2.Namespace;

        $r1 = new org.jdom2.filter.ElementFilter;

        specialinvoke $r1.<org.jdom2.filter.ElementFilter: void <init>(java.lang.String,org.jdom2.Namespace)>(null, $r0);

        return $r1;
    }
    public static final org.jdom2.filter.Filter entityref()
    {
        org.jdom2.filter.Filter r0;

        r0 = <org.jdom2.filter.Filters: org.jdom2.filter.Filter fentityref>;

        return r0;
    }
    public static final org.jdom2.filter.Filter fboolean()
    {
        org.jdom2.filter.Filter r0;

        r0 = <org.jdom2.filter.Filters: org.jdom2.filter.Filter fboolean>;

        return r0;
    }
    public static final org.jdom2.filter.Filter fclass(java.lang.Class)
    {
        java.lang.Class r0;
        org.jdom2.filter.ClassFilter $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = new org.jdom2.filter.ClassFilter;

        specialinvoke $r1.<org.jdom2.filter.ClassFilter: void <init>(java.lang.Class)>(r0);

        return $r1;
    }
    public static final org.jdom2.filter.Filter fdouble()
    {
        org.jdom2.filter.Filter r0;

        r0 = <org.jdom2.filter.Filters: org.jdom2.filter.Filter fdouble>;

        return r0;
    }
    public static final org.jdom2.filter.Filter fpassthrough()
    {
        org.jdom2.filter.Filter r0;

        r0 = <org.jdom2.filter.Filters: org.jdom2.filter.Filter fpassthrough>;

        return r0;
    }
    public static final org.jdom2.filter.Filter fstring()
    {
        org.jdom2.filter.Filter r0;

        r0 = <org.jdom2.filter.Filters: org.jdom2.filter.Filter fstring>;

        return r0;
    }
    public static final org.jdom2.filter.Filter processinginstruction()
    {
        org.jdom2.filter.Filter r0;

        r0 = <org.jdom2.filter.Filters: org.jdom2.filter.Filter fpi>;

        return r0;
    }
    public static final org.jdom2.filter.Filter text()
    {
        org.jdom2.filter.Filter r0;

        r0 = <org.jdom2.filter.Filters: org.jdom2.filter.Filter ftext>;

        return r0;
    }
    public static final org.jdom2.filter.Filter textOnly()
    {
        org.jdom2.filter.Filter r0;

        r0 = <org.jdom2.filter.Filters: org.jdom2.filter.Filter ftextonly>;

        return r0;
    }
