org.jdom2.output.SAXOutputter extends java.lang.Object
private static final org.jdom2.output.support.SAXOutputProcessor DEFAULT_PROCESSOR
private org.xml.sax.ContentHandler contentHandler
private org.xml.sax.ext.DeclHandler declHandler
private boolean declareNamespaces
private org.xml.sax.DTDHandler dtdHandler
private org.xml.sax.EntityResolver entityResolver
private org.xml.sax.ErrorHandler errorHandler
private org.jdom2.output.Format format
private org.xml.sax.ext.LexicalHandler lexicalHandler
private org.jdom2.output.support.SAXOutputProcessor processor
private boolean reportDtdEvents
    static void <clinit>()
    {
        org.jdom2.output.SAXOutputter$DefaultSAXOutputProcessor $r0;

        $r0 = new org.jdom2.output.SAXOutputter$DefaultSAXOutputProcessor;

        specialinvoke $r0.<org.jdom2.output.SAXOutputter$DefaultSAXOutputProcessor: void <init>(org.jdom2.output.SAXOutputter$1)>(null);

        <org.jdom2.output.SAXOutputter: org.jdom2.output.support.SAXOutputProcessor DEFAULT_PROCESSOR> = $r0;

        return;
    }
    public void <init>()
    {
        org.jdom2.output.SAXOutputter r0;
        org.jdom2.output.Format $r1;
        org.jdom2.output.support.SAXOutputProcessor $r2;

        r0 := @this: org.jdom2.output.SAXOutputter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.jdom2.output.SAXOutputter: boolean declareNamespaces> = 0;

        r0.<org.jdom2.output.SAXOutputter: boolean reportDtdEvents> = 1;

        $r2 = <org.jdom2.output.SAXOutputter: org.jdom2.output.support.SAXOutputProcessor DEFAULT_PROCESSOR>;

        r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.support.SAXOutputProcessor processor> = $r2;

        $r1 = staticinvoke <org.jdom2.output.Format: org.jdom2.output.Format getRawFormat()>();

        r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.Format format> = $r1;

        return;
    }
    public void <init>(org.jdom2.output.support.SAXOutputProcessor, org.jdom2.output.Format, org.xml.sax.ContentHandler, org.xml.sax.ErrorHandler, org.xml.sax.DTDHandler, org.xml.sax.EntityResolver, org.xml.sax.ext.LexicalHandler)
    {
        org.jdom2.output.SAXOutputter r0;
        org.xml.sax.ContentHandler $r1;
        org.xml.sax.ErrorHandler $r2;
        org.xml.sax.DTDHandler $r3;
        org.xml.sax.EntityResolver $r4;
        org.xml.sax.ext.LexicalHandler $r5;
        org.jdom2.output.support.SAXOutputProcessor $r6, $r8;
        org.jdom2.output.Format $r7, $r9;

        r0 := @this: org.jdom2.output.SAXOutputter;

        $r6 := @parameter0: org.jdom2.output.support.SAXOutputProcessor;

        $r7 := @parameter1: org.jdom2.output.Format;

        $r1 := @parameter2: org.xml.sax.ContentHandler;

        $r2 := @parameter3: org.xml.sax.ErrorHandler;

        $r3 := @parameter4: org.xml.sax.DTDHandler;

        $r4 := @parameter5: org.xml.sax.EntityResolver;

        $r5 := @parameter6: org.xml.sax.ext.LexicalHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.jdom2.output.SAXOutputter: boolean declareNamespaces> = 0;

        r0.<org.jdom2.output.SAXOutputter: boolean reportDtdEvents> = 1;

        $r8 = <org.jdom2.output.SAXOutputter: org.jdom2.output.support.SAXOutputProcessor DEFAULT_PROCESSOR>;

        r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.support.SAXOutputProcessor processor> = $r8;

        $r9 = staticinvoke <org.jdom2.output.Format: org.jdom2.output.Format getRawFormat()>();

        r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.Format format> = $r9;

        if $r6 != null goto label1;

        $r6 = <org.jdom2.output.SAXOutputter: org.jdom2.output.support.SAXOutputProcessor DEFAULT_PROCESSOR>;

     label1:
        r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.support.SAXOutputProcessor processor> = $r6;

        if $r7 != null goto label2;

        $r7 = staticinvoke <org.jdom2.output.Format: org.jdom2.output.Format getRawFormat()>();

     label2:
        r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.Format format> = $r7;

        r0.<org.jdom2.output.SAXOutputter: org.xml.sax.ContentHandler contentHandler> = $r1;

        r0.<org.jdom2.output.SAXOutputter: org.xml.sax.ErrorHandler errorHandler> = $r2;

        r0.<org.jdom2.output.SAXOutputter: org.xml.sax.DTDHandler dtdHandler> = $r3;

        r0.<org.jdom2.output.SAXOutputter: org.xml.sax.EntityResolver entityResolver> = $r4;

        r0.<org.jdom2.output.SAXOutputter: org.xml.sax.ext.LexicalHandler lexicalHandler> = $r5;

        return;
    }
    public void <init>(org.xml.sax.ContentHandler)
    {
        org.jdom2.output.SAXOutputter r0;
        org.xml.sax.ContentHandler $r1;

        r0 := @this: org.jdom2.output.SAXOutputter;

        $r1 := @parameter0: org.xml.sax.ContentHandler;

        specialinvoke r0.<org.jdom2.output.SAXOutputter: void <init>(org.xml.sax.ContentHandler,org.xml.sax.ErrorHandler,org.xml.sax.DTDHandler,org.xml.sax.EntityResolver,org.xml.sax.ext.LexicalHandler)>($r1, null, null, null, null);

        return;
    }
    public void <init>(org.xml.sax.ContentHandler, org.xml.sax.ErrorHandler, org.xml.sax.DTDHandler, org.xml.sax.EntityResolver)
    {
        org.jdom2.output.SAXOutputter r0;
        org.xml.sax.ContentHandler $r1;
        org.xml.sax.ErrorHandler $r2;
        org.xml.sax.DTDHandler $r3;
        org.xml.sax.EntityResolver $r4;

        r0 := @this: org.jdom2.output.SAXOutputter;

        $r1 := @parameter0: org.xml.sax.ContentHandler;

        $r2 := @parameter1: org.xml.sax.ErrorHandler;

        $r3 := @parameter2: org.xml.sax.DTDHandler;

        $r4 := @parameter3: org.xml.sax.EntityResolver;

        specialinvoke r0.<org.jdom2.output.SAXOutputter: void <init>(org.xml.sax.ContentHandler,org.xml.sax.ErrorHandler,org.xml.sax.DTDHandler,org.xml.sax.EntityResolver,org.xml.sax.ext.LexicalHandler)>($r1, $r2, $r3, $r4, null);

        return;
    }
    public void <init>(org.xml.sax.ContentHandler, org.xml.sax.ErrorHandler, org.xml.sax.DTDHandler, org.xml.sax.EntityResolver, org.xml.sax.ext.LexicalHandler)
    {
        org.jdom2.output.SAXOutputter r0;
        org.xml.sax.ContentHandler $r1;
        org.xml.sax.ErrorHandler $r2;
        org.xml.sax.DTDHandler $r3;
        org.xml.sax.EntityResolver $r4;
        org.xml.sax.ext.LexicalHandler $r5;
        org.jdom2.output.Format $r6;
        org.jdom2.output.support.SAXOutputProcessor $r7;

        r0 := @this: org.jdom2.output.SAXOutputter;

        $r1 := @parameter0: org.xml.sax.ContentHandler;

        $r2 := @parameter1: org.xml.sax.ErrorHandler;

        $r3 := @parameter2: org.xml.sax.DTDHandler;

        $r4 := @parameter3: org.xml.sax.EntityResolver;

        $r5 := @parameter4: org.xml.sax.ext.LexicalHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.jdom2.output.SAXOutputter: boolean declareNamespaces> = 0;

        r0.<org.jdom2.output.SAXOutputter: boolean reportDtdEvents> = 1;

        $r7 = <org.jdom2.output.SAXOutputter: org.jdom2.output.support.SAXOutputProcessor DEFAULT_PROCESSOR>;

        r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.support.SAXOutputProcessor processor> = $r7;

        $r6 = staticinvoke <org.jdom2.output.Format: org.jdom2.output.Format getRawFormat()>();

        r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.Format format> = $r6;

        r0.<org.jdom2.output.SAXOutputter: org.xml.sax.ContentHandler contentHandler> = $r1;

        r0.<org.jdom2.output.SAXOutputter: org.xml.sax.ErrorHandler errorHandler> = $r2;

        r0.<org.jdom2.output.SAXOutputter: org.xml.sax.DTDHandler dtdHandler> = $r3;

        r0.<org.jdom2.output.SAXOutputter: org.xml.sax.EntityResolver entityResolver> = $r4;

        r0.<org.jdom2.output.SAXOutputter: org.xml.sax.ext.LexicalHandler lexicalHandler> = $r5;

        return;
    }
    private final org.jdom2.output.support.SAXTarget buildTarget(org.jdom2.Document)
    {
        org.jdom2.output.SAXOutputter r0;
        org.jdom2.Document $r1;
        org.jdom2.output.support.SAXTarget $r2;
        org.xml.sax.ContentHandler $r3;
        org.xml.sax.ErrorHandler $r4;
        org.xml.sax.DTDHandler $r5;
        org.xml.sax.EntityResolver $r6;
        org.xml.sax.ext.LexicalHandler $r7;
        org.xml.sax.ext.DeclHandler $r8;
        boolean $z0, $z1;
        java.lang.String r9, r10;
        org.jdom2.DocType $r11;

        r0 := @this: org.jdom2.output.SAXOutputter;

        $r1 := @parameter0: org.jdom2.Document;

        r9 = null;

        r10 = null;

        if $r1 == null goto label1;

        $r11 = virtualinvoke $r1.<org.jdom2.Document: org.jdom2.DocType getDocType()>();

        if $r11 == null goto label1;

        r9 = virtualinvoke $r11.<org.jdom2.DocType: java.lang.String getPublicID()>();

        r10 = virtualinvoke $r11.<org.jdom2.DocType: java.lang.String getSystemID()>();

     label1:
        $r2 = new org.jdom2.output.support.SAXTarget;

        $r3 = r0.<org.jdom2.output.SAXOutputter: org.xml.sax.ContentHandler contentHandler>;

        $r4 = r0.<org.jdom2.output.SAXOutputter: org.xml.sax.ErrorHandler errorHandler>;

        $r5 = r0.<org.jdom2.output.SAXOutputter: org.xml.sax.DTDHandler dtdHandler>;

        $r6 = r0.<org.jdom2.output.SAXOutputter: org.xml.sax.EntityResolver entityResolver>;

        $r7 = r0.<org.jdom2.output.SAXOutputter: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        $r8 = r0.<org.jdom2.output.SAXOutputter: org.xml.sax.ext.DeclHandler declHandler>;

        $z0 = r0.<org.jdom2.output.SAXOutputter: boolean declareNamespaces>;

        $z1 = r0.<org.jdom2.output.SAXOutputter: boolean reportDtdEvents>;

        specialinvoke $r2.<org.jdom2.output.support.SAXTarget: void <init>(org.xml.sax.ContentHandler,org.xml.sax.ErrorHandler,org.xml.sax.DTDHandler,org.xml.sax.EntityResolver,org.xml.sax.ext.LexicalHandler,org.xml.sax.ext.DeclHandler,boolean,boolean,java.lang.String,java.lang.String)>($r3, $r4, $r5, $r6, $r7, $r8, $z0, $z1, r9, r10);

        return $r2;
    }
    private void handleError(org.jdom2.JDOMException) throws org.jdom2.JDOMException
    {
        org.jdom2.output.SAXOutputter r0;
        org.jdom2.JDOMException $r1;
        org.xml.sax.SAXException r2;
        org.xml.sax.ErrorHandler $r3;
        org.xml.sax.SAXParseException $r4;
        java.lang.String $r5;
        java.lang.Exception $r6;
        boolean $z0;

        r0 := @this: org.jdom2.output.SAXOutputter;

        $r1 := @parameter0: org.jdom2.JDOMException;

        $r3 = r0.<org.jdom2.output.SAXOutputter: org.xml.sax.ErrorHandler errorHandler>;

        if $r3 == null goto label5;

        $r3 = r0.<org.jdom2.output.SAXOutputter: org.xml.sax.ErrorHandler errorHandler>;

        $r4 = new org.xml.sax.SAXParseException;

     label1:
        $r5 = virtualinvoke $r1.<org.jdom2.JDOMException: java.lang.String getMessage()>();

        specialinvoke $r4.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator,java.lang.Exception)>($r5, null, $r1);

        interfaceinvoke $r3.<org.xml.sax.ErrorHandler: void error(org.xml.sax.SAXParseException)>($r4);

     label2:
        return;

     label3:
        r2 := @caughtexception;

        $r6 = virtualinvoke r2.<org.xml.sax.SAXException: java.lang.Exception getException()>();

        $z0 = $r6 instanceof org.jdom2.JDOMException;

        if $z0 == 0 goto label4;

        $r6 = virtualinvoke r2.<org.xml.sax.SAXException: java.lang.Exception getException()>();

        $r1 = (org.jdom2.JDOMException) $r6;

        throw $r1;

     label4:
        $r1 = new org.jdom2.JDOMException;

        $r5 = virtualinvoke r2.<org.xml.sax.SAXException: java.lang.String getMessage()>();

        specialinvoke $r1.<org.jdom2.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>($r5, r2);

        throw $r1;

     label5:
        throw $r1;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }
    public org.xml.sax.ContentHandler getContentHandler()
    {
        org.jdom2.output.SAXOutputter r0;
        org.xml.sax.ContentHandler r1;

        r0 := @this: org.jdom2.output.SAXOutputter;

        r1 = r0.<org.jdom2.output.SAXOutputter: org.xml.sax.ContentHandler contentHandler>;

        return r1;
    }
    public org.xml.sax.DTDHandler getDTDHandler()
    {
        org.jdom2.output.SAXOutputter r0;
        org.xml.sax.DTDHandler r1;

        r0 := @this: org.jdom2.output.SAXOutputter;

        r1 = r0.<org.jdom2.output.SAXOutputter: org.xml.sax.DTDHandler dtdHandler>;

        return r1;
    }
    public org.xml.sax.ext.DeclHandler getDeclHandler()
    {
        org.jdom2.output.SAXOutputter r0;
        org.xml.sax.ext.DeclHandler r1;

        r0 := @this: org.jdom2.output.SAXOutputter;

        r1 = r0.<org.jdom2.output.SAXOutputter: org.xml.sax.ext.DeclHandler declHandler>;

        return r1;
    }
    public org.xml.sax.EntityResolver getEntityResolver()
    {
        org.jdom2.output.SAXOutputter r0;
        org.xml.sax.EntityResolver r1;

        r0 := @this: org.jdom2.output.SAXOutputter;

        r1 = r0.<org.jdom2.output.SAXOutputter: org.xml.sax.EntityResolver entityResolver>;

        return r1;
    }
    public org.xml.sax.ErrorHandler getErrorHandler()
    {
        org.jdom2.output.SAXOutputter r0;
        org.xml.sax.ErrorHandler r1;

        r0 := @this: org.jdom2.output.SAXOutputter;

        r1 = r0.<org.jdom2.output.SAXOutputter: org.xml.sax.ErrorHandler errorHandler>;

        return r1;
    }
    public boolean getFeature(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.jdom2.output.SAXOutputter r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        org.xml.sax.SAXNotRecognizedException $r3;

        r0 := @this: org.jdom2.output.SAXOutputter;

        $r1 := @parameter0: java.lang.String;

        $r2 = "http://xml.org/sax/features/namespace-prefixes";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $z0 = r0.<org.jdom2.output.SAXOutputter: boolean declareNamespaces>;

        return $z0;

     label1:
        $r2 = "http://xml.org/sax/features/namespaces";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $r2 = "http://xml.org/sax/features/validation";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        $z0 = r0.<org.jdom2.output.SAXOutputter: boolean reportDtdEvents>;

        return $z0;

     label3:
        $r3 = new org.xml.sax.SAXNotRecognizedException;

        specialinvoke $r3.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>($r1);

        throw $r3;
    }
    public org.jdom2.output.Format getFormat()
    {
        org.jdom2.output.SAXOutputter r0;
        org.jdom2.output.Format r1;

        r0 := @this: org.jdom2.output.SAXOutputter;

        r1 = r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.Format format>;

        return r1;
    }
    public org.xml.sax.ext.LexicalHandler getLexicalHandler()
    {
        org.jdom2.output.SAXOutputter r0;
        org.xml.sax.ext.LexicalHandler r1;

        r0 := @this: org.jdom2.output.SAXOutputter;

        r1 = r0.<org.jdom2.output.SAXOutputter: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        return r1;
    }
    public org.jdom2.output.JDOMLocator getLocator()
    {
        org.jdom2.output.SAXOutputter r0;

        r0 := @this: org.jdom2.output.SAXOutputter;

        return null;
    }
    public java.lang.Object getProperty(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.jdom2.output.SAXOutputter r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        org.xml.sax.ext.LexicalHandler $r3;
        org.xml.sax.ext.DeclHandler $r4;
        org.xml.sax.SAXNotRecognizedException $r5;

        r0 := @this: org.jdom2.output.SAXOutputter;

        $r1 := @parameter0: java.lang.String;

        $r2 = "http://xml.org/sax/properties/lexical-handler";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r2 = "http://xml.org/sax/handlers/LexicalHandler";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

     label1:
        $r3 = virtualinvoke r0.<org.jdom2.output.SAXOutputter: org.xml.sax.ext.LexicalHandler getLexicalHandler()>();

        return $r3;

     label2:
        $r2 = "http://xml.org/sax/properties/declaration-handler";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label3;

        $r2 = "http://xml.org/sax/handlers/DeclHandler";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label4;

     label3:
        $r4 = virtualinvoke r0.<org.jdom2.output.SAXOutputter: org.xml.sax.ext.DeclHandler getDeclHandler()>();

        return $r4;

     label4:
        $r5 = new org.xml.sax.SAXNotRecognizedException;

        specialinvoke $r5.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>($r1);

        throw $r5;
    }
    public boolean getReportDTDEvents()
    {
        org.jdom2.output.SAXOutputter r0;
        boolean z0;

        r0 := @this: org.jdom2.output.SAXOutputter;

        z0 = r0.<org.jdom2.output.SAXOutputter: boolean reportDtdEvents>;

        return z0;
    }
    public boolean getReportNamespaceDeclarations()
    {
        org.jdom2.output.SAXOutputter r0;
        boolean z0;

        r0 := @this: org.jdom2.output.SAXOutputter;

        z0 = r0.<org.jdom2.output.SAXOutputter: boolean declareNamespaces>;

        return z0;
    }
    public org.jdom2.output.support.SAXOutputProcessor getSAXOutputProcessor()
    {
        org.jdom2.output.SAXOutputter r0;
        org.jdom2.output.support.SAXOutputProcessor r1;

        r0 := @this: org.jdom2.output.SAXOutputter;

        r1 = r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.support.SAXOutputProcessor processor>;

        return r1;
    }
    public void output(java.util.List) throws org.jdom2.JDOMException
    {
        org.jdom2.output.SAXOutputter r0;
        java.util.List r1;
        org.jdom2.output.support.SAXOutputProcessor $r2;
        org.jdom2.output.Format $r3;
        org.jdom2.output.support.SAXTarget $r4;

        r0 := @this: org.jdom2.output.SAXOutputter;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.support.SAXOutputProcessor processor>;

        $r4 = specialinvoke r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.support.SAXTarget buildTarget(org.jdom2.Document)>(null);

        $r3 = r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.Format format>;

        interfaceinvoke $r2.<org.jdom2.output.support.SAXOutputProcessor: void processAsDocument(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,java.util.List)>($r4, $r3, r1);

        return;
    }
    public void output(org.jdom2.Document) throws org.jdom2.JDOMException
    {
        org.jdom2.output.SAXOutputter r0;
        org.jdom2.Document $r1;
        org.jdom2.output.support.SAXOutputProcessor $r2;
        org.jdom2.output.Format $r3;
        org.jdom2.output.support.SAXTarget $r4;

        r0 := @this: org.jdom2.output.SAXOutputter;

        $r1 := @parameter0: org.jdom2.Document;

        $r2 = r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.support.SAXOutputProcessor processor>;

        $r4 = specialinvoke r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.support.SAXTarget buildTarget(org.jdom2.Document)>($r1);

        $r3 = r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.Format format>;

        interfaceinvoke $r2.<org.jdom2.output.support.SAXOutputProcessor: void process(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,org.jdom2.Document)>($r4, $r3, $r1);

        return;
    }
    public void output(org.jdom2.Element) throws org.jdom2.JDOMException
    {
        org.jdom2.output.SAXOutputter r0;
        org.jdom2.Element $r1;
        org.jdom2.output.support.SAXOutputProcessor $r2;
        org.jdom2.output.Format $r3;
        org.jdom2.output.support.SAXTarget $r4;

        r0 := @this: org.jdom2.output.SAXOutputter;

        $r1 := @parameter0: org.jdom2.Element;

        $r2 = r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.support.SAXOutputProcessor processor>;

        $r4 = specialinvoke r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.support.SAXTarget buildTarget(org.jdom2.Document)>(null);

        $r3 = r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.Format format>;

        interfaceinvoke $r2.<org.jdom2.output.support.SAXOutputProcessor: void processAsDocument(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,org.jdom2.Element)>($r4, $r3, $r1);

        return;
    }
    public void outputFragment(java.util.List) throws org.jdom2.JDOMException
    {
        org.jdom2.output.SAXOutputter r0;
        java.util.List r1;
        org.jdom2.output.support.SAXOutputProcessor $r2;
        org.jdom2.output.Format $r3;
        org.jdom2.output.support.SAXTarget $r4;

        r0 := @this: org.jdom2.output.SAXOutputter;

        r1 := @parameter0: java.util.List;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.support.SAXOutputProcessor processor>;

        $r4 = specialinvoke r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.support.SAXTarget buildTarget(org.jdom2.Document)>(null);

        $r3 = r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.Format format>;

        interfaceinvoke $r2.<org.jdom2.output.support.SAXOutputProcessor: void process(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,java.util.List)>($r4, $r3, r1);

        return;
    }
    public void outputFragment(org.jdom2.Content) throws org.jdom2.JDOMException
    {
        org.jdom2.output.SAXOutputter r0;
        org.jdom2.Content r1;
        org.jdom2.output.support.SAXTarget $r2;
        int[] $r3;
        org.jdom2.Content$CType $r4;
        int $i0;
        org.jdom2.JDOMException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        org.jdom2.output.support.SAXOutputProcessor $r8;
        org.jdom2.output.Format $r9;
        org.jdom2.CDATA r10;
        org.jdom2.Comment r11;
        org.jdom2.Element r12;
        org.jdom2.EntityRef r13;
        org.jdom2.ProcessingInstruction r14;
        org.jdom2.Text r15;

        r0 := @this: org.jdom2.output.SAXOutputter;

        r1 := @parameter0: org.jdom2.Content;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = specialinvoke r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.support.SAXTarget buildTarget(org.jdom2.Document)>(null);

        $r3 = <org.jdom2.output.SAXOutputter$1: int[] $SwitchMap$org$jdom2$Content$CType>;

        $r4 = virtualinvoke r1.<org.jdom2.Content: org.jdom2.Content$CType getCType()>();

        $i0 = virtualinvoke $r4.<org.jdom2.Content$CType: int ordinal()>();

        $i0 = $r3[$i0];

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label7;
            case 6: goto label8;
            default: goto label2;
        };

     label2:
        $r5 = new org.jdom2.JDOMException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid element content: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.jdom2.JDOMException: void <init>(java.lang.String)>($r7);

        specialinvoke r0.<org.jdom2.output.SAXOutputter: void handleError(org.jdom2.JDOMException)>($r5);

        return;

     label3:
        $r8 = r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.support.SAXOutputProcessor processor>;

        $r9 = r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.Format format>;

        r10 = (org.jdom2.CDATA) r1;

        interfaceinvoke $r8.<org.jdom2.output.support.SAXOutputProcessor: void process(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,org.jdom2.CDATA)>($r2, $r9, r10);

        return;

     label4:
        $r8 = r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.support.SAXOutputProcessor processor>;

        $r9 = r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.Format format>;

        r11 = (org.jdom2.Comment) r1;

        interfaceinvoke $r8.<org.jdom2.output.support.SAXOutputProcessor: void process(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,org.jdom2.Comment)>($r2, $r9, r11);

        return;

     label5:
        $r8 = r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.support.SAXOutputProcessor processor>;

        $r9 = r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.Format format>;

        r12 = (org.jdom2.Element) r1;

        interfaceinvoke $r8.<org.jdom2.output.support.SAXOutputProcessor: void process(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,org.jdom2.Element)>($r2, $r9, r12);

        return;

     label6:
        $r8 = r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.support.SAXOutputProcessor processor>;

        $r9 = r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.Format format>;

        r13 = (org.jdom2.EntityRef) r1;

        interfaceinvoke $r8.<org.jdom2.output.support.SAXOutputProcessor: void process(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,org.jdom2.EntityRef)>($r2, $r9, r13);

        return;

     label7:
        $r8 = r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.support.SAXOutputProcessor processor>;

        $r9 = r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.Format format>;

        r14 = (org.jdom2.ProcessingInstruction) r1;

        interfaceinvoke $r8.<org.jdom2.output.support.SAXOutputProcessor: void process(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,org.jdom2.ProcessingInstruction)>($r2, $r9, r14);

        return;

     label8:
        $r8 = r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.support.SAXOutputProcessor processor>;

        $r9 = r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.Format format>;

        r15 = (org.jdom2.Text) r1;

        interfaceinvoke $r8.<org.jdom2.output.support.SAXOutputProcessor: void process(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,org.jdom2.Text)>($r2, $r9, r15);

        return;
    }
    public void setContentHandler(org.xml.sax.ContentHandler)
    {
        org.jdom2.output.SAXOutputter r0;
        org.xml.sax.ContentHandler $r1;

        r0 := @this: org.jdom2.output.SAXOutputter;

        $r1 := @parameter0: org.xml.sax.ContentHandler;

        r0.<org.jdom2.output.SAXOutputter: org.xml.sax.ContentHandler contentHandler> = $r1;

        return;
    }
    public void setDTDHandler(org.xml.sax.DTDHandler)
    {
        org.jdom2.output.SAXOutputter r0;
        org.xml.sax.DTDHandler $r1;

        r0 := @this: org.jdom2.output.SAXOutputter;

        $r1 := @parameter0: org.xml.sax.DTDHandler;

        r0.<org.jdom2.output.SAXOutputter: org.xml.sax.DTDHandler dtdHandler> = $r1;

        return;
    }
    public void setDeclHandler(org.xml.sax.ext.DeclHandler)
    {
        org.jdom2.output.SAXOutputter r0;
        org.xml.sax.ext.DeclHandler $r1;

        r0 := @this: org.jdom2.output.SAXOutputter;

        $r1 := @parameter0: org.xml.sax.ext.DeclHandler;

        r0.<org.jdom2.output.SAXOutputter: org.xml.sax.ext.DeclHandler declHandler> = $r1;

        return;
    }
    public void setEntityResolver(org.xml.sax.EntityResolver)
    {
        org.jdom2.output.SAXOutputter r0;
        org.xml.sax.EntityResolver $r1;

        r0 := @this: org.jdom2.output.SAXOutputter;

        $r1 := @parameter0: org.xml.sax.EntityResolver;

        r0.<org.jdom2.output.SAXOutputter: org.xml.sax.EntityResolver entityResolver> = $r1;

        return;
    }
    public void setErrorHandler(org.xml.sax.ErrorHandler)
    {
        org.jdom2.output.SAXOutputter r0;
        org.xml.sax.ErrorHandler $r1;

        r0 := @this: org.jdom2.output.SAXOutputter;

        $r1 := @parameter0: org.xml.sax.ErrorHandler;

        r0.<org.jdom2.output.SAXOutputter: org.xml.sax.ErrorHandler errorHandler> = $r1;

        return;
    }
    public void setFeature(java.lang.String, boolean) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.jdom2.output.SAXOutputter r0;
        java.lang.String $r1, $r2;
        boolean $z0, $z1;
        org.xml.sax.SAXNotSupportedException $r3;
        org.xml.sax.SAXNotRecognizedException $r4;

        r0 := @this: org.jdom2.output.SAXOutputter;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = "http://xml.org/sax/features/namespace-prefixes";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label1;

        virtualinvoke r0.<org.jdom2.output.SAXOutputter: void setReportNamespaceDeclarations(boolean)>($z0);

        return;

     label1:
        $r2 = "http://xml.org/sax/features/namespaces";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label2;

        if $z0 == 1 goto label4;

        $r3 = new org.xml.sax.SAXNotSupportedException;

        specialinvoke $r3.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>($r1);

        throw $r3;

     label2:
        $r2 = "http://xml.org/sax/features/validation";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label3;

        virtualinvoke r0.<org.jdom2.output.SAXOutputter: void setReportDTDEvents(boolean)>($z0);

        return;

     label3:
        $r4 = new org.xml.sax.SAXNotRecognizedException;

        specialinvoke $r4.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>($r1);

        throw $r4;

     label4:
        return;
    }
    public void setFormat(org.jdom2.output.Format)
    {
        org.jdom2.output.SAXOutputter r0;
        org.jdom2.output.Format $r1;

        r0 := @this: org.jdom2.output.SAXOutputter;

        $r1 := @parameter0: org.jdom2.output.Format;

        if $r1 != null goto label1;

        $r1 = staticinvoke <org.jdom2.output.Format: org.jdom2.output.Format getRawFormat()>();

     label1:
        r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.Format format> = $r1;

        return;
    }
    public void setLexicalHandler(org.xml.sax.ext.LexicalHandler)
    {
        org.jdom2.output.SAXOutputter r0;
        org.xml.sax.ext.LexicalHandler $r1;

        r0 := @this: org.jdom2.output.SAXOutputter;

        $r1 := @parameter0: org.xml.sax.ext.LexicalHandler;

        r0.<org.jdom2.output.SAXOutputter: org.xml.sax.ext.LexicalHandler lexicalHandler> = $r1;

        return;
    }
    public void setProperty(java.lang.String, java.lang.Object) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.jdom2.output.SAXOutputter r0;
        java.lang.String $r1, $r3;
        java.lang.Object r2;
        boolean $z0;
        org.xml.sax.ext.LexicalHandler r4;
        org.xml.sax.ext.DeclHandler r5;
        org.xml.sax.SAXNotRecognizedException $r6;

        r0 := @this: org.jdom2.output.SAXOutputter;

        $r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = "http://xml.org/sax/properties/lexical-handler";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r3 = "http://xml.org/sax/handlers/LexicalHandler";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

     label1:
        r4 = (org.xml.sax.ext.LexicalHandler) r2;

        virtualinvoke r0.<org.jdom2.output.SAXOutputter: void setLexicalHandler(org.xml.sax.ext.LexicalHandler)>(r4);

        return;

     label2:
        $r3 = "http://xml.org/sax/properties/declaration-handler";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label3;

        $r3 = "http://xml.org/sax/handlers/DeclHandler";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label4;

     label3:
        r5 = (org.xml.sax.ext.DeclHandler) r2;

        virtualinvoke r0.<org.jdom2.output.SAXOutputter: void setDeclHandler(org.xml.sax.ext.DeclHandler)>(r5);

        return;

     label4:
        $r6 = new org.xml.sax.SAXNotRecognizedException;

        specialinvoke $r6.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>($r1);

        throw $r6;
    }
    public void setReportDTDEvents(boolean)
    {
        org.jdom2.output.SAXOutputter r0;
        boolean $z0;

        r0 := @this: org.jdom2.output.SAXOutputter;

        $z0 := @parameter0: boolean;

        r0.<org.jdom2.output.SAXOutputter: boolean reportDtdEvents> = $z0;

        return;
    }
    public void setReportNamespaceDeclarations(boolean)
    {
        org.jdom2.output.SAXOutputter r0;
        boolean $z0;

        r0 := @this: org.jdom2.output.SAXOutputter;

        $z0 := @parameter0: boolean;

        r0.<org.jdom2.output.SAXOutputter: boolean declareNamespaces> = $z0;

        return;
    }
    public void setSAXOutputProcessor(org.jdom2.output.support.SAXOutputProcessor)
    {
        org.jdom2.output.SAXOutputter r0;
        org.jdom2.output.support.SAXOutputProcessor $r1;

        r0 := @this: org.jdom2.output.SAXOutputter;

        $r1 := @parameter0: org.jdom2.output.support.SAXOutputProcessor;

        if $r1 != null goto label1;

        $r1 = <org.jdom2.output.SAXOutputter: org.jdom2.output.support.SAXOutputProcessor DEFAULT_PROCESSOR>;

     label1:
        r0.<org.jdom2.output.SAXOutputter: org.jdom2.output.support.SAXOutputProcessor processor> = $r1;

        return;
    }
