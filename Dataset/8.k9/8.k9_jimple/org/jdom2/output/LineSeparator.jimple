org.jdom2.output.LineSeparator extends java.lang.Enum
private static final org.jdom2.output.LineSeparator[] $VALUES
public static final enum org.jdom2.output.LineSeparator CR
public static final enum org.jdom2.output.LineSeparator CRNL
public static final enum org.jdom2.output.LineSeparator DEFAULT
public static final enum org.jdom2.output.LineSeparator DOS
public static final enum org.jdom2.output.LineSeparator NL
public static final enum org.jdom2.output.LineSeparator NONE
public static final enum org.jdom2.output.LineSeparator SYSTEM
public static final enum org.jdom2.output.LineSeparator UNIX
private final java.lang.String value
    static void <clinit>()
    {
        org.jdom2.output.LineSeparator $r0;
        java.lang.String $r1;
        org.jdom2.output.LineSeparator[] $r2;

        $r0 = new org.jdom2.output.LineSeparator;

        specialinvoke $r0.<org.jdom2.output.LineSeparator: void <init>(java.lang.String,int,java.lang.String)>("CRNL", 0, "\r\n");

        <org.jdom2.output.LineSeparator: org.jdom2.output.LineSeparator CRNL> = $r0;

        $r0 = new org.jdom2.output.LineSeparator;

        specialinvoke $r0.<org.jdom2.output.LineSeparator: void <init>(java.lang.String,int,java.lang.String)>("NL", 1, "\n");

        <org.jdom2.output.LineSeparator: org.jdom2.output.LineSeparator NL> = $r0;

        $r0 = new org.jdom2.output.LineSeparator;

        specialinvoke $r0.<org.jdom2.output.LineSeparator: void <init>(java.lang.String,int,java.lang.String)>("CR", 2, "\r");

        <org.jdom2.output.LineSeparator: org.jdom2.output.LineSeparator CR> = $r0;

        $r0 = new org.jdom2.output.LineSeparator;

        specialinvoke $r0.<org.jdom2.output.LineSeparator: void <init>(java.lang.String,int,java.lang.String)>("DOS", 3, "\r\n");

        <org.jdom2.output.LineSeparator: org.jdom2.output.LineSeparator DOS> = $r0;

        $r0 = new org.jdom2.output.LineSeparator;

        specialinvoke $r0.<org.jdom2.output.LineSeparator: void <init>(java.lang.String,int,java.lang.String)>("UNIX", 4, "\n");

        <org.jdom2.output.LineSeparator: org.jdom2.output.LineSeparator UNIX> = $r0;

        $r0 = new org.jdom2.output.LineSeparator;

        $r1 = staticinvoke <org.jdom2.internal.SystemProperty: java.lang.String get(java.lang.String,java.lang.String)>("line.separator", "\r\n");

        specialinvoke $r0.<org.jdom2.output.LineSeparator: void <init>(java.lang.String,int,java.lang.String)>("SYSTEM", 5, $r1);

        <org.jdom2.output.LineSeparator: org.jdom2.output.LineSeparator SYSTEM> = $r0;

        $r0 = new org.jdom2.output.LineSeparator;

        specialinvoke $r0.<org.jdom2.output.LineSeparator: void <init>(java.lang.String,int,java.lang.String)>("NONE", 6, null);

        <org.jdom2.output.LineSeparator: org.jdom2.output.LineSeparator NONE> = $r0;

        $r0 = new org.jdom2.output.LineSeparator;

        $r1 = staticinvoke <org.jdom2.output.LineSeparator: java.lang.String getDefaultLineSeparator()>();

        specialinvoke $r0.<org.jdom2.output.LineSeparator: void <init>(java.lang.String,int,java.lang.String)>("DEFAULT", 7, $r1);

        <org.jdom2.output.LineSeparator: org.jdom2.output.LineSeparator DEFAULT> = $r0;

        $r2 = newarray (org.jdom2.output.LineSeparator)[8];

        $r0 = <org.jdom2.output.LineSeparator: org.jdom2.output.LineSeparator CRNL>;

        $r2[0] = $r0;

        $r0 = <org.jdom2.output.LineSeparator: org.jdom2.output.LineSeparator NL>;

        $r2[1] = $r0;

        $r0 = <org.jdom2.output.LineSeparator: org.jdom2.output.LineSeparator CR>;

        $r2[2] = $r0;

        $r0 = <org.jdom2.output.LineSeparator: org.jdom2.output.LineSeparator DOS>;

        $r2[3] = $r0;

        $r0 = <org.jdom2.output.LineSeparator: org.jdom2.output.LineSeparator UNIX>;

        $r2[4] = $r0;

        $r0 = <org.jdom2.output.LineSeparator: org.jdom2.output.LineSeparator SYSTEM>;

        $r2[5] = $r0;

        $r0 = <org.jdom2.output.LineSeparator: org.jdom2.output.LineSeparator NONE>;

        $r2[6] = $r0;

        $r0 = <org.jdom2.output.LineSeparator: org.jdom2.output.LineSeparator DEFAULT>;

        $r2[7] = $r0;

        <org.jdom2.output.LineSeparator: org.jdom2.output.LineSeparator[] $VALUES> = $r2;

        return;
    }
    private void <init>(java.lang.String, int, java.lang.String)
    {
        org.jdom2.output.LineSeparator r0;
        java.lang.String $r1, $r2;
        int $i0;

        r0 := @this: org.jdom2.output.LineSeparator;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        r0.<org.jdom2.output.LineSeparator: java.lang.String value> = $r2;

        return;
    }
    private static java.lang.String getDefaultLineSeparator()
    {
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 = staticinvoke <org.jdom2.internal.SystemProperty: java.lang.String get(java.lang.String,java.lang.String)>("org.jdom2.output.LineSeparator", "DEFAULT");

        $r1 = "DEFAULT";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        return "\r\n";

     label1:
        $r1 = "SYSTEM";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label2;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        return $r0;

     label2:
        $r1 = "CRNL";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label3;

        return "\r\n";

     label3:
        $r1 = "NL";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label4;

        return "\n";

     label4:
        $r1 = "CR";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label5;

        return "\r";

     label5:
        $r1 = "DOS";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label6;

        return "\r\n";

     label6:
        $r1 = "UNIX";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label7;

        return "\n";

     label7:
        $r1 = "NONE";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label8;

        return null;

     label8:
        return $r0;
    }
    public static org.jdom2.output.LineSeparator valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        org.jdom2.output.LineSeparator $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/jdom2/output/LineSeparator;", $r0);

        $r2 = (org.jdom2.output.LineSeparator) $r1;

        return $r2;
    }
    public static org.jdom2.output.LineSeparator[] values()
    {
        java.lang.Object $r0;
        org.jdom2.output.LineSeparator[] $r1;

        $r1 = <org.jdom2.output.LineSeparator: org.jdom2.output.LineSeparator[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (org.jdom2.output.LineSeparator[]) $r0;

        return $r1;
    }
    public java.lang.String value()
    {
        org.jdom2.output.LineSeparator r0;
        java.lang.String r1;

        r0 := @this: org.jdom2.output.LineSeparator;

        r1 = r0.<org.jdom2.output.LineSeparator: java.lang.String value>;

        return r1;
    }
