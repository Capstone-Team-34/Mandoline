org.jdom2.output.support.WalkerTRIM extends org.jdom2.output.support.AbstractFormattedWalker
    public void <init>(java.util.List, org.jdom2.output.support.FormatStack, boolean)
    {
        org.jdom2.output.support.WalkerTRIM r0;
        java.util.List r1;
        org.jdom2.output.support.FormatStack $r2;
        boolean $z0;

        r0 := @this: org.jdom2.output.support.WalkerTRIM;

        r1 := @parameter0: java.util.List;

        $r2 := @parameter1: org.jdom2.output.support.FormatStack;

        $z0 := @parameter2: boolean;

        specialinvoke r0.<org.jdom2.output.support.AbstractFormattedWalker: void <init>(java.util.List,org.jdom2.output.support.FormatStack,boolean)>(r1, $r2, $z0);

        return;
    }
    protected void analyzeMultiText(org.jdom2.output.support.AbstractFormattedWalker$MultiText, int, int)
    {
        org.jdom2.output.support.WalkerTRIM r0;
        org.jdom2.output.support.AbstractFormattedWalker$MultiText $r1;
        int $i0, $i1, $i2, $i3;
        org.jdom2.Content $r2;
        boolean $z0;
        java.lang.String $r3;
        org.jdom2.output.support.AbstractFormattedWalker$Trim r4;
        int[] $r5;
        org.jdom2.Content$CType $r6;

        r0 := @this: org.jdom2.output.support.WalkerTRIM;

        $r1 := @parameter0: org.jdom2.output.support.AbstractFormattedWalker$MultiText;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

     label01:
        if $i1 <= 0 goto label02;

        $r2 = virtualinvoke r0.<org.jdom2.output.support.WalkerTRIM: org.jdom2.Content get(int)>($i0);

        $z0 = $r2 instanceof org.jdom2.Text;

        if $z0 == 0 goto label02;

        $r3 = virtualinvoke $r2.<org.jdom2.Content: java.lang.String getValue()>();

        $z0 = staticinvoke <org.jdom2.Verifier: boolean isAllXMLWhitespace(java.lang.String)>($r3);

        if $z0 != 0 goto label10;

     label02:
        if $i1 <= 0 goto label03;

        $i2 = $i0 + $i1;

        $i2 = $i2 + -1;

        $r2 = virtualinvoke r0.<org.jdom2.output.support.WalkerTRIM: org.jdom2.Content get(int)>($i2);

        $z0 = $r2 instanceof org.jdom2.Text;

        if $z0 == 0 goto label03;

        $r3 = virtualinvoke $r2.<org.jdom2.Content: java.lang.String getValue()>();

        $z0 = staticinvoke <org.jdom2.Verifier: boolean isAllXMLWhitespace(java.lang.String)>($r3);

        if $z0 != 0 goto label11;

     label03:
        $i2 = 0;

     label04:
        if $i2 >= $i1 goto label14;

        r4 = <org.jdom2.output.support.AbstractFormattedWalker$Trim: org.jdom2.output.support.AbstractFormattedWalker$Trim NONE>;

        $i3 = $i2 + 1;

        if $i3 != $i1 goto label05;

        r4 = <org.jdom2.output.support.AbstractFormattedWalker$Trim: org.jdom2.output.support.AbstractFormattedWalker$Trim RIGHT>;

     label05:
        if $i2 != 0 goto label06;

        r4 = <org.jdom2.output.support.AbstractFormattedWalker$Trim: org.jdom2.output.support.AbstractFormattedWalker$Trim LEFT>;

     label06:
        if $i1 != 1 goto label07;

        r4 = <org.jdom2.output.support.AbstractFormattedWalker$Trim: org.jdom2.output.support.AbstractFormattedWalker$Trim BOTH>;

     label07:
        $i3 = $i0 + $i2;

        $r2 = virtualinvoke r0.<org.jdom2.output.support.WalkerTRIM: org.jdom2.Content get(int)>($i3);

        $r5 = <org.jdom2.output.support.WalkerTRIM$1: int[] $SwitchMap$org$jdom2$Content$CType>;

        $r6 = virtualinvoke $r2.<org.jdom2.Content: org.jdom2.Content$CType getCType()>();

        $i3 = virtualinvoke $r6.<org.jdom2.Content$CType: int ordinal()>();

        $i3 = $r5[$i3];

        lookupswitch($i3)
        {
            case 1: goto label12;
            case 2: goto label13;
            default: goto label08;
        };

     label08:
        virtualinvoke $r1.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: void appendRaw(org.jdom2.Content)>($r2);

     label09:
        $i2 = $i2 + 1;

        goto label04;

     label10:
        $i0 = $i0 + 1;

        $i1 = $i1 + -1;

        goto label01;

     label11:
        $i1 = $i1 + -1;

        goto label02;

     label12:
        $r3 = virtualinvoke $r2.<org.jdom2.Content: java.lang.String getValue()>();

        virtualinvoke $r1.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: void appendText(org.jdom2.output.support.AbstractFormattedWalker$Trim,java.lang.String)>(r4, $r3);

        goto label09;

     label13:
        $r3 = virtualinvoke $r2.<org.jdom2.Content: java.lang.String getValue()>();

        virtualinvoke $r1.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: void appendCDATA(org.jdom2.output.support.AbstractFormattedWalker$Trim,java.lang.String)>(r4, $r3);

        goto label09;

     label14:
        return;
    }
