org.jdom2.output.support.AbstractFormattedWalker$MultiText extends java.lang.Object
final org.jdom2.output.support.AbstractFormattedWalker this$0
    private void <init>(org.jdom2.output.support.AbstractFormattedWalker)
    {
        org.jdom2.output.support.AbstractFormattedWalker$MultiText r0;
        org.jdom2.output.support.AbstractFormattedWalker $r1;

        r0 := @this: org.jdom2.output.support.AbstractFormattedWalker$MultiText;

        $r1 := @parameter0: org.jdom2.output.support.AbstractFormattedWalker;

        r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    void <init>(org.jdom2.output.support.AbstractFormattedWalker, org.jdom2.output.support.AbstractFormattedWalker$1)
    {
        org.jdom2.output.support.AbstractFormattedWalker$MultiText r0;
        org.jdom2.output.support.AbstractFormattedWalker $r1;
        org.jdom2.output.support.AbstractFormattedWalker$1 $r2;

        r0 := @this: org.jdom2.output.support.AbstractFormattedWalker$MultiText;

        $r1 := @parameter0: org.jdom2.output.support.AbstractFormattedWalker;

        $r2 := @parameter1: org.jdom2.output.support.AbstractFormattedWalker$1;

        specialinvoke r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: void <init>(org.jdom2.output.support.AbstractFormattedWalker)>($r1);

        return;
    }
    static void access$1200(org.jdom2.output.support.AbstractFormattedWalker$MultiText, java.lang.String)
    {
        org.jdom2.output.support.AbstractFormattedWalker$MultiText $r0;
        java.lang.String $r1;

        $r0 := @parameter0: org.jdom2.output.support.AbstractFormattedWalker$MultiText;

        $r1 := @parameter1: java.lang.String;

        specialinvoke $r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: void forceAppend(java.lang.String)>($r1);

        return;
    }
    private void closeText()
    {
        org.jdom2.output.support.AbstractFormattedWalker$MultiText r0;
        org.jdom2.output.support.AbstractFormattedWalker $r1;
        java.lang.StringBuilder $r2;
        int $i0;
        org.jdom2.Content[] $r3;
        java.lang.String[] $r4;
        java.lang.String $r5;

        r0 := @this: org.jdom2.output.support.AbstractFormattedWalker$MultiText;

        $r1 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $r2 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: java.lang.StringBuilder access$300(org.jdom2.output.support.AbstractFormattedWalker)>($r1);

        $i0 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: void ensurespace()>();

        $r1 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $r3 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: org.jdom2.Content[] access$100(org.jdom2.output.support.AbstractFormattedWalker)>($r1);

        $r1 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $i0 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: int access$000(org.jdom2.output.support.AbstractFormattedWalker)>($r1);

        $r3[$i0] = null;

        $r1 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $r4 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: java.lang.String[] access$200(org.jdom2.output.support.AbstractFormattedWalker)>($r1);

        $r1 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $i0 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: int access$008(org.jdom2.output.support.AbstractFormattedWalker)>($r1);

        $r1 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $r2 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: java.lang.StringBuilder access$300(org.jdom2.output.support.AbstractFormattedWalker)>($r1);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4[$i0] = $r5;

        $r1 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $r2 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: java.lang.StringBuilder access$300(org.jdom2.output.support.AbstractFormattedWalker)>($r1);

        virtualinvoke $r2.<java.lang.StringBuilder: void setLength(int)>(0);

        return;
    }
    private void ensurespace()
    {
        org.jdom2.output.support.AbstractFormattedWalker$MultiText r0;
        org.jdom2.output.support.AbstractFormattedWalker $r1, $r3;
        int $i0, $i1;
        org.jdom2.Content[] $r2;
        java.lang.Object[] $r4;
        java.lang.String[] $r5;

        r0 := @this: org.jdom2.output.support.AbstractFormattedWalker$MultiText;

        $r1 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $i0 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: int access$000(org.jdom2.output.support.AbstractFormattedWalker)>($r1);

        $r1 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $r2 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: org.jdom2.Content[] access$100(org.jdom2.output.support.AbstractFormattedWalker)>($r1);

        $i1 = lengthof $r2;

        if $i0 < $i1 goto label1;

        $r1 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $r3 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $r2 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: org.jdom2.Content[] access$100(org.jdom2.output.support.AbstractFormattedWalker)>($r3);

        $r3 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $i0 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: int access$000(org.jdom2.output.support.AbstractFormattedWalker)>($r3);

        $i0 = $i0 + 1;

        $r3 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $i1 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: int access$000(org.jdom2.output.support.AbstractFormattedWalker)>($r3);

        $i1 = $i1 / 2;

        $i0 = $i0 + $i1;

        $r4 = staticinvoke <org.jdom2.internal.ArrayCopy: java.lang.Object[] copyOf(java.lang.Object[],int)>($r2, $i0);

        $r2 = (org.jdom2.Content[]) $r4;

        staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: org.jdom2.Content[] access$102(org.jdom2.output.support.AbstractFormattedWalker,org.jdom2.Content[])>($r1, $r2);

        $r1 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $r3 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $r5 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: java.lang.String[] access$200(org.jdom2.output.support.AbstractFormattedWalker)>($r3);

        $r3 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $r2 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: org.jdom2.Content[] access$100(org.jdom2.output.support.AbstractFormattedWalker)>($r3);

        $i0 = lengthof $r2;

        $r4 = staticinvoke <org.jdom2.internal.ArrayCopy: java.lang.Object[] copyOf(java.lang.Object[],int)>($r5, $i0);

        $r5 = (java.lang.String[]) $r4;

        staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: java.lang.String[] access$202(org.jdom2.output.support.AbstractFormattedWalker,java.lang.String[])>($r1, $r5);

     label1:
        return;
    }
    private java.lang.String escapeCDATA(java.lang.String)
    {
        org.jdom2.output.support.AbstractFormattedWalker$MultiText r0;
        java.lang.String $r1;
        org.jdom2.output.EscapeStrategy $r2;
        org.jdom2.output.support.AbstractFormattedWalker $r3;

        r0 := @this: org.jdom2.output.support.AbstractFormattedWalker$MultiText;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $r2 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: org.jdom2.output.EscapeStrategy access$500(org.jdom2.output.support.AbstractFormattedWalker)>($r3);

        if $r2 != null goto label1;

     label1:
        return $r1;
    }
    private java.lang.String escapeText(java.lang.String)
    {
        org.jdom2.output.support.AbstractFormattedWalker$MultiText r0;
        java.lang.String r1, $r5;
        org.jdom2.output.support.AbstractFormattedWalker $r2;
        org.jdom2.output.EscapeStrategy $r3;
        org.jdom2.output.support.FormatStack $r4;
        boolean $z0;

        r0 := @this: org.jdom2.output.support.AbstractFormattedWalker$MultiText;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $r3 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: org.jdom2.output.EscapeStrategy access$500(org.jdom2.output.support.AbstractFormattedWalker)>($r2);

        if $r3 == null goto label2;

        $r2 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $r4 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: org.jdom2.output.support.FormatStack access$600(org.jdom2.output.support.AbstractFormattedWalker)>($r2);

        $z0 = virtualinvoke $r4.<org.jdom2.output.support.FormatStack: boolean getEscapeOutput()>();

        if $z0 != 0 goto label1;

        return r1;

     label1:
        $r2 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $r3 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: org.jdom2.output.EscapeStrategy access$500(org.jdom2.output.support.AbstractFormattedWalker)>($r2);

        $r2 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $r5 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: java.lang.String access$700(org.jdom2.output.support.AbstractFormattedWalker)>($r2);

        r1 = staticinvoke <org.jdom2.output.Format: java.lang.String escapeText(org.jdom2.output.EscapeStrategy,java.lang.String,java.lang.String)>($r3, $r5, r1);

     label2:
        return r1;
    }
    private void forceAppend(java.lang.String)
    {
        org.jdom2.output.support.AbstractFormattedWalker$MultiText r0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;
        org.jdom2.output.support.AbstractFormattedWalker $r3;

        r0 := @this: org.jdom2.output.support.AbstractFormattedWalker$MultiText;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: boolean access$402(org.jdom2.output.support.AbstractFormattedWalker,boolean)>($r3, 1);

        $r3 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $r2 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: java.lang.StringBuilder access$300(org.jdom2.output.support.AbstractFormattedWalker)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        return;
    }
    public void appendCDATA(org.jdom2.output.support.AbstractFormattedWalker$Trim, java.lang.String)
    {
        org.jdom2.output.support.AbstractFormattedWalker$MultiText r0;
        org.jdom2.output.support.AbstractFormattedWalker$Trim $r1;
        java.lang.String $r2, r3;
        int[] $r4;
        int $i0;
        org.jdom2.output.support.AbstractFormattedWalker $r5;
        org.jdom2.Content[] $r6;
        org.jdom2.CDATA $r7;
        java.lang.String[] $r8;

        r0 := @this: org.jdom2.output.support.AbstractFormattedWalker$MultiText;

        $r1 := @parameter0: org.jdom2.output.support.AbstractFormattedWalker$Trim;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: void closeText()>();

        r3 = null;

        $r4 = <org.jdom2.output.support.AbstractFormattedWalker$2: int[] $SwitchMap$org$jdom2$output$support$AbstractFormattedWalker$Trim>;

        $i0 = virtualinvoke $r1.<org.jdom2.output.support.AbstractFormattedWalker$Trim: int ordinal()>();

        $i0 = $r4[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            default: goto label1;
        };

     label1:
        $r2 = specialinvoke r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: java.lang.String escapeCDATA(java.lang.String)>(r3);

        specialinvoke r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: void ensurespace()>();

        $r5 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $r6 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: org.jdom2.Content[] access$100(org.jdom2.output.support.AbstractFormattedWalker)>($r5);

        $r5 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $i0 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: int access$000(org.jdom2.output.support.AbstractFormattedWalker)>($r5);

        $r7 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: org.jdom2.CDATA access$800()>();

        $r6[$i0] = $r7;

        $r5 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $r8 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: java.lang.String[] access$200(org.jdom2.output.support.AbstractFormattedWalker)>($r5);

        $r5 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $i0 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: int access$008(org.jdom2.output.support.AbstractFormattedWalker)>($r5);

        $r8[$i0] = $r2;

        $r5 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: boolean access$402(org.jdom2.output.support.AbstractFormattedWalker,boolean)>($r5, 1);

        return;

     label2:
        r3 = $r2;

        goto label1;

     label3:
        r3 = staticinvoke <org.jdom2.output.Format: java.lang.String trimBoth(java.lang.String)>($r2);

        goto label1;

     label4:
        r3 = staticinvoke <org.jdom2.output.Format: java.lang.String trimLeft(java.lang.String)>($r2);

        goto label1;

     label5:
        r3 = staticinvoke <org.jdom2.output.Format: java.lang.String trimRight(java.lang.String)>($r2);

        goto label1;

     label6:
        r3 = staticinvoke <org.jdom2.output.Format: java.lang.String compact(java.lang.String)>($r2);

        goto label1;
    }
    public void appendRaw(org.jdom2.Content)
    {
        org.jdom2.output.support.AbstractFormattedWalker$MultiText r0;
        org.jdom2.Content $r1;
        org.jdom2.output.support.AbstractFormattedWalker $r2;
        java.lang.String[] $r3;
        int $i0;
        org.jdom2.Content[] $r4;
        java.lang.StringBuilder $r5;

        r0 := @this: org.jdom2.output.support.AbstractFormattedWalker$MultiText;

        $r1 := @parameter0: org.jdom2.Content;

        specialinvoke r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: void closeText()>();

        specialinvoke r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: void ensurespace()>();

        $r2 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $r3 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: java.lang.String[] access$200(org.jdom2.output.support.AbstractFormattedWalker)>($r2);

        $r2 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $i0 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: int access$000(org.jdom2.output.support.AbstractFormattedWalker)>($r2);

        $r3[$i0] = null;

        $r2 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $r4 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: org.jdom2.Content[] access$100(org.jdom2.output.support.AbstractFormattedWalker)>($r2);

        $r2 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $i0 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: int access$008(org.jdom2.output.support.AbstractFormattedWalker)>($r2);

        $r4[$i0] = $r1;

        $r2 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $r5 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: java.lang.StringBuilder access$300(org.jdom2.output.support.AbstractFormattedWalker)>($r2);

        virtualinvoke $r5.<java.lang.StringBuilder: void setLength(int)>(0);

        return;
    }
    public void appendText(org.jdom2.output.support.AbstractFormattedWalker$Trim, java.lang.String)
    {
        org.jdom2.output.support.AbstractFormattedWalker$MultiText r0;
        org.jdom2.output.support.AbstractFormattedWalker$Trim $r1;
        java.lang.String $r2, r3;
        int $i0;
        int[] $r4;
        org.jdom2.output.support.AbstractFormattedWalker $r5;
        java.lang.StringBuilder $r6;

        r0 := @this: org.jdom2.output.support.AbstractFormattedWalker$MultiText;

        $r1 := @parameter0: org.jdom2.output.support.AbstractFormattedWalker$Trim;

        $r2 := @parameter1: java.lang.String;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        r3 = null;

        $r4 = <org.jdom2.output.support.AbstractFormattedWalker$2: int[] $SwitchMap$org$jdom2$output$support$AbstractFormattedWalker$Trim>;

        $i0 = virtualinvoke $r1.<org.jdom2.output.support.AbstractFormattedWalker$Trim: int ordinal()>();

        $i0 = $r4[$i0];

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label7;
            default: goto label2;
        };

     label2:
        if r3 == null goto label8;

        $r2 = specialinvoke r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: java.lang.String escapeText(java.lang.String)>(r3);

        $r5 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $r6 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: java.lang.StringBuilder access$300(org.jdom2.output.support.AbstractFormattedWalker)>($r5);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: boolean access$402(org.jdom2.output.support.AbstractFormattedWalker,boolean)>($r5, 1);

        return;

     label3:
        r3 = $r2;

        goto label2;

     label4:
        r3 = staticinvoke <org.jdom2.output.Format: java.lang.String trimBoth(java.lang.String)>($r2);

        goto label2;

     label5:
        r3 = staticinvoke <org.jdom2.output.Format: java.lang.String trimLeft(java.lang.String)>($r2);

        goto label2;

     label6:
        r3 = staticinvoke <org.jdom2.output.Format: java.lang.String trimRight(java.lang.String)>($r2);

        goto label2;

     label7:
        r3 = staticinvoke <org.jdom2.output.Format: java.lang.String compact(java.lang.String)>($r2);

        goto label2;

     label8:
        return;
    }
    public void done()
    {
        org.jdom2.output.support.AbstractFormattedWalker$MultiText r0;
        org.jdom2.output.support.AbstractFormattedWalker $r1;
        boolean $z0;
        java.lang.String $r2;
        java.lang.StringBuilder $r3;

        r0 := @this: org.jdom2.output.support.AbstractFormattedWalker$MultiText;

        $r1 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $z0 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: boolean access$900(org.jdom2.output.support.AbstractFormattedWalker)>($r1);

        if $z0 == 0 goto label1;

        $r1 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $r2 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: java.lang.String access$1000(org.jdom2.output.support.AbstractFormattedWalker)>($r1);

        if $r2 == null goto label1;

        $r1 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $r3 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: java.lang.StringBuilder access$300(org.jdom2.output.support.AbstractFormattedWalker)>($r1);

        $r1 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $r2 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: java.lang.String access$1000(org.jdom2.output.support.AbstractFormattedWalker)>($r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label1:
        $r1 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $z0 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: boolean access$400(org.jdom2.output.support.AbstractFormattedWalker)>($r1);

        if $z0 == 0 goto label2;

        specialinvoke r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: void closeText()>();

     label2:
        $r1 = r0.<org.jdom2.output.support.AbstractFormattedWalker$MultiText: org.jdom2.output.support.AbstractFormattedWalker this$0>;

        $r3 = staticinvoke <org.jdom2.output.support.AbstractFormattedWalker: java.lang.StringBuilder access$300(org.jdom2.output.support.AbstractFormattedWalker)>($r1);

        virtualinvoke $r3.<java.lang.StringBuilder: void setLength(int)>(0);

        return;
    }
