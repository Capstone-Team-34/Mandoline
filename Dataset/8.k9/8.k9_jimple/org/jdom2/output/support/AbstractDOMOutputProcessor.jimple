org.jdom2.output.support.AbstractDOMOutputProcessor extends org.jdom2.output.support.AbstractOutputProcessor implements org.jdom2.output.support.DOMOutputProcessor
    public void <init>()
    {
        org.jdom2.output.support.AbstractDOMOutputProcessor r0;

        r0 := @this: org.jdom2.output.support.AbstractDOMOutputProcessor;

        specialinvoke r0.<org.jdom2.output.support.AbstractOutputProcessor: void <init>()>();

        return;
    }
    private static java.lang.String getXmlnsTagFor(org.jdom2.Namespace)
    {
        org.jdom2.Namespace $r0;
        java.lang.String $r1;
        boolean $z0;
        java.lang.StringBuilder $r2;

        $r0 := @parameter0: org.jdom2.Namespace;

        $r1 = virtualinvoke $r0.<org.jdom2.Namespace: java.lang.String getPrefix()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("xmlns");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r0.<org.jdom2.Namespace: java.lang.String getPrefix()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label1:
        return "xmlns";
    }
    protected org.w3c.dom.Node helperContentDispatcher(org.jdom2.output.support.FormatStack, org.jdom2.util.NamespaceStack, org.w3c.dom.Document, org.jdom2.Content)
    {
        org.jdom2.output.support.AbstractDOMOutputProcessor r0;
        org.jdom2.output.support.FormatStack $r1;
        org.jdom2.util.NamespaceStack $r2;
        org.w3c.dom.Document $r3;
        org.jdom2.Content r4;
        int[] $r5;
        org.jdom2.Content$CType $r6;
        int $i0;
        java.lang.IllegalStateException $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        org.jdom2.CDATA r10;
        org.w3c.dom.CDATASection $r11;
        org.jdom2.Comment r12;
        org.w3c.dom.Comment $r13;
        org.jdom2.Element r14;
        org.w3c.dom.Element $r15;
        org.jdom2.EntityRef r16;
        org.w3c.dom.EntityReference $r17;
        org.jdom2.ProcessingInstruction r18;
        org.w3c.dom.ProcessingInstruction $r19;
        org.jdom2.Text r20;
        org.w3c.dom.Text $r21;

        r0 := @this: org.jdom2.output.support.AbstractDOMOutputProcessor;

        $r1 := @parameter0: org.jdom2.output.support.FormatStack;

        $r2 := @parameter1: org.jdom2.util.NamespaceStack;

        $r3 := @parameter2: org.w3c.dom.Document;

        r4 := @parameter3: org.jdom2.Content;

        $r5 = <org.jdom2.output.support.AbstractDOMOutputProcessor$1: int[] $SwitchMap$org$jdom2$Content$CType>;

        $r6 = virtualinvoke r4.<org.jdom2.Content: org.jdom2.Content$CType getCType()>();

        $i0 = virtualinvoke $r6.<org.jdom2.Content$CType: int ordinal()>();

        $i0 = $r5[$i0];

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label8;
            case 3: goto label4;
            case 4: goto label6;
            case 5: goto label2;
            case 6: goto label5;
            case 7: goto label7;
            default: goto label1;
        };

     label1:
        $r7 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected Content ");

        $r6 = virtualinvoke r4.<org.jdom2.Content: org.jdom2.Content$CType getCType()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r7;

     label2:
        r10 = (org.jdom2.CDATA) r4;

        $r11 = virtualinvoke r0.<org.jdom2.output.support.AbstractDOMOutputProcessor: org.w3c.dom.CDATASection printCDATA(org.jdom2.output.support.FormatStack,org.w3c.dom.Document,org.jdom2.CDATA)>($r1, $r3, r10);

        return $r11;

     label3:
        r12 = (org.jdom2.Comment) r4;

        $r13 = virtualinvoke r0.<org.jdom2.output.support.AbstractDOMOutputProcessor: org.w3c.dom.Comment printComment(org.jdom2.output.support.FormatStack,org.w3c.dom.Document,org.jdom2.Comment)>($r1, $r3, r12);

        return $r13;

     label4:
        r14 = (org.jdom2.Element) r4;

        $r15 = virtualinvoke r0.<org.jdom2.output.support.AbstractDOMOutputProcessor: org.w3c.dom.Element printElement(org.jdom2.output.support.FormatStack,org.jdom2.util.NamespaceStack,org.w3c.dom.Document,org.jdom2.Element)>($r1, $r2, $r3, r14);

        return $r15;

     label5:
        r16 = (org.jdom2.EntityRef) r4;

        $r17 = virtualinvoke r0.<org.jdom2.output.support.AbstractDOMOutputProcessor: org.w3c.dom.EntityReference printEntityRef(org.jdom2.output.support.FormatStack,org.w3c.dom.Document,org.jdom2.EntityRef)>($r1, $r3, r16);

        return $r17;

     label6:
        r18 = (org.jdom2.ProcessingInstruction) r4;

        $r19 = virtualinvoke r0.<org.jdom2.output.support.AbstractDOMOutputProcessor: org.w3c.dom.ProcessingInstruction printProcessingInstruction(org.jdom2.output.support.FormatStack,org.w3c.dom.Document,org.jdom2.ProcessingInstruction)>($r1, $r3, r18);

        return $r19;

     label7:
        r20 = (org.jdom2.Text) r4;

        $r21 = virtualinvoke r0.<org.jdom2.output.support.AbstractDOMOutputProcessor: org.w3c.dom.Text printText(org.jdom2.output.support.FormatStack,org.w3c.dom.Document,org.jdom2.Text)>($r1, $r3, r20);

        return $r21;

     label8:
        return null;
    }
    protected org.w3c.dom.Attr printAttribute(org.jdom2.output.support.FormatStack, org.w3c.dom.Document, org.jdom2.Attribute)
    {
        org.jdom2.output.support.AbstractDOMOutputProcessor r0;
        org.jdom2.output.support.FormatStack $r1;
        org.w3c.dom.Document $r2;
        org.jdom2.Attribute $r3;
        boolean $z0;
        java.lang.String $r4, $r5;
        org.w3c.dom.Attr $r6;

        r0 := @this: org.jdom2.output.support.AbstractDOMOutputProcessor;

        $r1 := @parameter0: org.jdom2.output.support.FormatStack;

        $r2 := @parameter1: org.w3c.dom.Document;

        $r3 := @parameter2: org.jdom2.Attribute;

        $z0 = virtualinvoke $r3.<org.jdom2.Attribute: boolean isSpecified()>();

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r1.<org.jdom2.output.support.FormatStack: boolean isSpecifiedAttributesOnly()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r4 = virtualinvoke $r3.<org.jdom2.Attribute: java.lang.String getNamespaceURI()>();

        $r5 = virtualinvoke $r3.<org.jdom2.Attribute: java.lang.String getQualifiedName()>();

        $r6 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.Attr createAttributeNS(java.lang.String,java.lang.String)>($r4, $r5);

        $r4 = virtualinvoke $r3.<org.jdom2.Attribute: java.lang.String getValue()>();

        interfaceinvoke $r6.<org.w3c.dom.Attr: void setValue(java.lang.String)>($r4);

        return $r6;
    }
    protected org.w3c.dom.CDATASection printCDATA(org.jdom2.output.support.FormatStack, org.w3c.dom.Document, org.jdom2.CDATA)
    {
        org.jdom2.output.support.AbstractDOMOutputProcessor r0;
        org.jdom2.output.support.FormatStack $r1;
        org.w3c.dom.Document $r2;
        org.jdom2.CDATA $r3;
        java.lang.String $r4;
        org.w3c.dom.CDATASection $r5;

        r0 := @this: org.jdom2.output.support.AbstractDOMOutputProcessor;

        $r1 := @parameter0: org.jdom2.output.support.FormatStack;

        $r2 := @parameter1: org.w3c.dom.Document;

        $r3 := @parameter2: org.jdom2.CDATA;

        $r4 = virtualinvoke $r3.<org.jdom2.CDATA: java.lang.String getText()>();

        $r5 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.CDATASection createCDATASection(java.lang.String)>($r4);

        return $r5;
    }
    protected org.w3c.dom.Comment printComment(org.jdom2.output.support.FormatStack, org.w3c.dom.Document, org.jdom2.Comment)
    {
        org.jdom2.output.support.AbstractDOMOutputProcessor r0;
        org.jdom2.output.support.FormatStack $r1;
        org.w3c.dom.Document $r2;
        org.jdom2.Comment $r3;
        java.lang.String $r4;
        org.w3c.dom.Comment $r5;

        r0 := @this: org.jdom2.output.support.AbstractDOMOutputProcessor;

        $r1 := @parameter0: org.jdom2.output.support.FormatStack;

        $r2 := @parameter1: org.w3c.dom.Document;

        $r3 := @parameter2: org.jdom2.Comment;

        $r4 = virtualinvoke $r3.<org.jdom2.Comment: java.lang.String getText()>();

        $r5 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.Comment createComment(java.lang.String)>($r4);

        return $r5;
    }
    protected void printContent(org.jdom2.output.support.FormatStack, org.jdom2.util.NamespaceStack, org.w3c.dom.Document, org.w3c.dom.Node, org.jdom2.output.support.Walker)
    {
        org.jdom2.output.support.AbstractDOMOutputProcessor r0;
        org.jdom2.output.support.FormatStack $r1;
        org.jdom2.util.NamespaceStack $r2;
        org.w3c.dom.Document $r3;
        org.w3c.dom.Node $r4, r9;
        org.jdom2.output.support.Walker $r5;
        boolean $z0;
        org.jdom2.Content $r6;
        java.lang.String $r7;
        org.jdom2.CDATA $r8;
        org.jdom2.Text $r10;

        r0 := @this: org.jdom2.output.support.AbstractDOMOutputProcessor;

        $r1 := @parameter0: org.jdom2.output.support.FormatStack;

        $r2 := @parameter1: org.jdom2.util.NamespaceStack;

        $r3 := @parameter2: org.w3c.dom.Document;

        $r4 := @parameter3: org.w3c.dom.Node;

        $r5 := @parameter4: org.jdom2.output.support.Walker;

     label1:
        $z0 = interfaceinvoke $r5.<org.jdom2.output.support.Walker: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke $r5.<org.jdom2.output.support.Walker: org.jdom2.Content next()>();

        if $r6 != null goto label4;

        $r7 = interfaceinvoke $r5.<org.jdom2.output.support.Walker: java.lang.String text()>();

        $z0 = interfaceinvoke $r5.<org.jdom2.output.support.Walker: boolean isCDATA()>();

        if $z0 == 0 goto label3;

        $r8 = new org.jdom2.CDATA;

        specialinvoke $r8.<org.jdom2.CDATA: void <init>(java.lang.String)>($r7);

        r9 = virtualinvoke r0.<org.jdom2.output.support.AbstractDOMOutputProcessor: org.w3c.dom.CDATASection printCDATA(org.jdom2.output.support.FormatStack,org.w3c.dom.Document,org.jdom2.CDATA)>($r1, $r3, $r8);

     label2:
        if r9 == null goto label1;

        interfaceinvoke $r4.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r9);

        goto label1;

     label3:
        $r10 = new org.jdom2.Text;

        specialinvoke $r10.<org.jdom2.Text: void <init>(java.lang.String)>($r7);

        r9 = virtualinvoke r0.<org.jdom2.output.support.AbstractDOMOutputProcessor: org.w3c.dom.Text printText(org.jdom2.output.support.FormatStack,org.w3c.dom.Document,org.jdom2.Text)>($r1, $r3, $r10);

        goto label2;

     label4:
        r9 = virtualinvoke r0.<org.jdom2.output.support.AbstractDOMOutputProcessor: org.w3c.dom.Node helperContentDispatcher(org.jdom2.output.support.FormatStack,org.jdom2.util.NamespaceStack,org.w3c.dom.Document,org.jdom2.Content)>($r1, $r2, $r3, $r6);

        goto label2;

     label5:
        return;
    }
    protected org.w3c.dom.Document printDocument(org.jdom2.output.support.FormatStack, org.jdom2.util.NamespaceStack, org.w3c.dom.Document, org.jdom2.Document)
    {
        org.jdom2.output.support.AbstractDOMOutputProcessor r0;
        org.jdom2.output.support.FormatStack $r1;
        org.jdom2.util.NamespaceStack $r2;
        org.w3c.dom.Document $r3;
        org.jdom2.Document $r4;
        boolean $z0;
        int $i0, i1, $i2;
        org.jdom2.Content $r5;
        org.w3c.dom.Node r6;
        int[] $r7;
        org.jdom2.Content$CType $r8;
        org.jdom2.Comment r9;
        org.jdom2.Element r10;
        org.jdom2.ProcessingInstruction r11;

        r0 := @this: org.jdom2.output.support.AbstractDOMOutputProcessor;

        $r1 := @parameter0: org.jdom2.output.support.FormatStack;

        $r2 := @parameter1: org.jdom2.util.NamespaceStack;

        $r3 := @parameter2: org.w3c.dom.Document;

        $r4 := @parameter3: org.jdom2.Document;

        $z0 = virtualinvoke $r1.<org.jdom2.output.support.FormatStack: boolean isOmitDeclaration()>();

        if $z0 != 0 goto label1;

        interfaceinvoke $r3.<org.w3c.dom.Document: void setXmlVersion(java.lang.String)>("1.0");

     label1:
        $i0 = virtualinvoke $r4.<org.jdom2.Document: int getContentSize()>();

        if $i0 <= 0 goto label8;

        i1 = 0;

     label2:
        if i1 >= $i0 goto label8;

        $r5 = virtualinvoke $r4.<org.jdom2.Document: org.jdom2.Content getContent(int)>(i1);

        r6 = null;

        $r7 = <org.jdom2.output.support.AbstractDOMOutputProcessor$1: int[] $SwitchMap$org$jdom2$Content$CType>;

        $r8 = virtualinvoke $r5.<org.jdom2.Content: org.jdom2.Content$CType getCType()>();

        $i2 = virtualinvoke $r8.<org.jdom2.Content$CType: int ordinal()>();

        $i2 = $r7[$i2];

        lookupswitch($i2)
        {
            case 1: goto label5;
            case 2: goto label3;
            case 3: goto label6;
            case 4: goto label7;
            default: goto label3;
        };

     label3:
        if r6 == null goto label4;

        interfaceinvoke $r3.<org.w3c.dom.Document: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r6);

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        r9 = (org.jdom2.Comment) $r5;

        r6 = virtualinvoke r0.<org.jdom2.output.support.AbstractDOMOutputProcessor: org.w3c.dom.Comment printComment(org.jdom2.output.support.FormatStack,org.w3c.dom.Document,org.jdom2.Comment)>($r1, $r3, r9);

        goto label3;

     label6:
        r10 = (org.jdom2.Element) $r5;

        r6 = virtualinvoke r0.<org.jdom2.output.support.AbstractDOMOutputProcessor: org.w3c.dom.Element printElement(org.jdom2.output.support.FormatStack,org.jdom2.util.NamespaceStack,org.w3c.dom.Document,org.jdom2.Element)>($r1, $r2, $r3, r10);

        goto label3;

     label7:
        r11 = (org.jdom2.ProcessingInstruction) $r5;

        r6 = virtualinvoke r0.<org.jdom2.output.support.AbstractDOMOutputProcessor: org.w3c.dom.ProcessingInstruction printProcessingInstruction(org.jdom2.output.support.FormatStack,org.w3c.dom.Document,org.jdom2.ProcessingInstruction)>($r1, $r3, r11);

        goto label3;

     label8:
        return $r3;
    }
    protected org.w3c.dom.Element printElement(org.jdom2.output.support.FormatStack, org.jdom2.util.NamespaceStack, org.w3c.dom.Document, org.jdom2.Element)
    {
        org.jdom2.output.support.AbstractDOMOutputProcessor r0;
        org.jdom2.output.support.FormatStack $r1;
        org.jdom2.util.NamespaceStack $r2;
        org.w3c.dom.Document $r3;
        org.jdom2.Element $r4;
        org.jdom2.output.Format$TextMode $r5;
        org.jdom2.Namespace $r6, $r13;
        java.lang.String $r7, $r8;
        boolean $z0;
        org.w3c.dom.Element $r9;
        java.lang.Iterable $r10;
        java.util.Iterator $r11;
        java.lang.Object $r12;
        java.lang.Throwable $r14, $r20;
        java.util.List $r15;
        org.jdom2.Attribute r16;
        org.w3c.dom.Attr $r17;
        org.jdom2.output.support.Walker $r18;
        org.w3c.dom.Text $r19;

        r0 := @this: org.jdom2.output.support.AbstractDOMOutputProcessor;

        $r1 := @parameter0: org.jdom2.output.support.FormatStack;

        $r2 := @parameter1: org.jdom2.util.NamespaceStack;

        $r3 := @parameter2: org.w3c.dom.Document;

        $r4 := @parameter3: org.jdom2.Element;

        virtualinvoke $r2.<org.jdom2.util.NamespaceStack: void push(org.jdom2.Element)>($r4);

     label01:
        $r5 = virtualinvoke $r1.<org.jdom2.output.support.FormatStack: org.jdom2.output.Format$TextMode getTextMode()>();

     label02:
        $r6 = <org.jdom2.Namespace: org.jdom2.Namespace XML_NAMESPACE>;

        $r7 = virtualinvoke $r4.<org.jdom2.Element: java.lang.String getAttributeValue(java.lang.String,org.jdom2.Namespace)>("space", $r6);

     label03:
        $r8 = "default";

     label04:
        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

     label05:
        if $z0 == 0 goto label15;

     label06:
        $r5 = virtualinvoke $r1.<org.jdom2.output.support.FormatStack: org.jdom2.output.Format$TextMode getDefaultMode()>();

     label07:
        $r7 = virtualinvoke $r4.<org.jdom2.Element: java.lang.String getNamespaceURI()>();

        $r8 = virtualinvoke $r4.<org.jdom2.Element: java.lang.String getQualifiedName()>();

        $r9 = interfaceinvoke $r3.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>($r7, $r8);

        $r10 = virtualinvoke $r2.<org.jdom2.util.NamespaceStack: java.lang.Iterable addedForward()>();

        $r11 = interfaceinvoke $r10.<java.lang.Iterable: java.util.Iterator iterator()>();

     label08:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

     label09:
        if $z0 == 0 goto label20;

     label10:
        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (org.jdom2.Namespace) $r12;

        $r13 = <org.jdom2.Namespace: org.jdom2.Namespace XML_NAMESPACE>;

     label11:
        if $r6 == $r13 goto label08;

     label12:
        $r7 = staticinvoke <org.jdom2.output.support.AbstractDOMOutputProcessor: java.lang.String getXmlnsTagFor(org.jdom2.Namespace)>($r6);

        $r8 = virtualinvoke $r6.<org.jdom2.Namespace: java.lang.String getURI()>();

        interfaceinvoke $r9.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/2000/xmlns/", $r7, $r8);

     label13:
        goto label08;

     label14:
        $r14 := @caughtexception;

        virtualinvoke $r2.<org.jdom2.util.NamespaceStack: void pop()>();

        throw $r14;

     label15:
        $r8 = "preserve";

     label16:
        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

     label17:
        if $z0 == 0 goto label07;

     label18:
        $r5 = <org.jdom2.output.Format$TextMode: org.jdom2.output.Format$TextMode PRESERVE>;

     label19:
        goto label07;

     label20:
        $z0 = virtualinvoke $r4.<org.jdom2.Element: boolean hasAttributes()>();

     label21:
        if $z0 == 0 goto label29;

     label22:
        $r15 = virtualinvoke $r4.<org.jdom2.Element: java.util.List getAttributes()>();

        $r11 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label23:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

     label24:
        if $z0 == 0 goto label29;

     label25:
        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r16 = (org.jdom2.Attribute) $r12;

        $r17 = virtualinvoke r0.<org.jdom2.output.support.AbstractDOMOutputProcessor: org.w3c.dom.Attr printAttribute(org.jdom2.output.support.FormatStack,org.w3c.dom.Document,org.jdom2.Attribute)>($r1, $r3, r16);

     label26:
        if $r17 == null goto label23;

     label27:
        interfaceinvoke $r9.<org.w3c.dom.Element: org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr)>($r17);

     label28:
        goto label23;

     label29:
        $r15 = virtualinvoke $r4.<org.jdom2.Element: java.util.List getContent()>();

        $z0 = interfaceinvoke $r15.<java.util.List: boolean isEmpty()>();

     label30:
        if $z0 != 0 goto label43;

     label31:
        virtualinvoke $r1.<org.jdom2.output.support.FormatStack: void push()>();

     label32:
        virtualinvoke $r1.<org.jdom2.output.support.FormatStack: void setTextMode(org.jdom2.output.Format$TextMode)>($r5);

        $r18 = virtualinvoke r0.<org.jdom2.output.support.AbstractDOMOutputProcessor: org.jdom2.output.support.Walker buildWalker(org.jdom2.output.support.FormatStack,java.util.List,boolean)>($r1, $r15, 0);

        $z0 = interfaceinvoke $r18.<org.jdom2.output.support.Walker: boolean isAllText()>();

     label33:
        if $z0 != 0 goto label37;

     label34:
        $r7 = virtualinvoke $r1.<org.jdom2.output.support.FormatStack: java.lang.String getPadBetween()>();

     label35:
        if $r7 == null goto label37;

     label36:
        $r7 = virtualinvoke $r1.<org.jdom2.output.support.FormatStack: java.lang.String getPadBetween()>();

        $r19 = interfaceinvoke $r3.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r7);

        interfaceinvoke $r9.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r19);

     label37:
        virtualinvoke r0.<org.jdom2.output.support.AbstractDOMOutputProcessor: void printContent(org.jdom2.output.support.FormatStack,org.jdom2.util.NamespaceStack,org.w3c.dom.Document,org.w3c.dom.Node,org.jdom2.output.support.Walker)>($r1, $r2, $r3, $r9, $r18);

        $z0 = interfaceinvoke $r18.<org.jdom2.output.support.Walker: boolean isAllText()>();

     label38:
        if $z0 != 0 goto label42;

     label39:
        $r7 = virtualinvoke $r1.<org.jdom2.output.support.FormatStack: java.lang.String getPadLast()>();

     label40:
        if $r7 == null goto label42;

     label41:
        $r7 = virtualinvoke $r1.<org.jdom2.output.support.FormatStack: java.lang.String getPadLast()>();

        $r19 = interfaceinvoke $r3.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r7);

        interfaceinvoke $r9.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r19);

     label42:
        virtualinvoke $r1.<org.jdom2.output.support.FormatStack: void pop()>();

     label43:
        virtualinvoke $r2.<org.jdom2.util.NamespaceStack: void pop()>();

        return $r9;

     label44:
        $r20 := @caughtexception;

     label45:
        virtualinvoke $r1.<org.jdom2.output.support.FormatStack: void pop()>();

        throw $r20;

     label46:
        nop;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label07 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label16 to label17 with label14;
        catch java.lang.Throwable from label18 to label19 with label14;
        catch java.lang.Throwable from label20 to label21 with label14;
        catch java.lang.Throwable from label22 to label24 with label14;
        catch java.lang.Throwable from label25 to label26 with label14;
        catch java.lang.Throwable from label27 to label28 with label14;
        catch java.lang.Throwable from label29 to label30 with label14;
        catch java.lang.Throwable from label31 to label32 with label14;
        catch java.lang.Throwable from label32 to label33 with label44;
        catch java.lang.Throwable from label34 to label35 with label44;
        catch java.lang.Throwable from label36 to label38 with label44;
        catch java.lang.Throwable from label39 to label40 with label44;
        catch java.lang.Throwable from label41 to label42 with label44;
        catch java.lang.Throwable from label42 to label43 with label14;
        catch java.lang.Throwable from label45 to label46 with label14;
    }
    protected org.w3c.dom.EntityReference printEntityRef(org.jdom2.output.support.FormatStack, org.w3c.dom.Document, org.jdom2.EntityRef)
    {
        org.jdom2.output.support.AbstractDOMOutputProcessor r0;
        org.jdom2.output.support.FormatStack $r1;
        org.w3c.dom.Document $r2;
        org.jdom2.EntityRef $r3;
        java.lang.String $r4;
        org.w3c.dom.EntityReference $r5;

        r0 := @this: org.jdom2.output.support.AbstractDOMOutputProcessor;

        $r1 := @parameter0: org.jdom2.output.support.FormatStack;

        $r2 := @parameter1: org.w3c.dom.Document;

        $r3 := @parameter2: org.jdom2.EntityRef;

        $r4 = virtualinvoke $r3.<org.jdom2.EntityRef: java.lang.String getName()>();

        $r5 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.EntityReference createEntityReference(java.lang.String)>($r4);

        return $r5;
    }
    protected org.w3c.dom.ProcessingInstruction printProcessingInstruction(org.jdom2.output.support.FormatStack, org.w3c.dom.Document, org.jdom2.ProcessingInstruction)
    {
        org.jdom2.output.support.AbstractDOMOutputProcessor r0;
        org.jdom2.output.support.FormatStack $r1;
        org.w3c.dom.Document $r2;
        org.jdom2.ProcessingInstruction $r3;
        java.lang.String $r4, $r5, r6;
        int $i0;
        org.w3c.dom.ProcessingInstruction $r7;

        r0 := @this: org.jdom2.output.support.AbstractDOMOutputProcessor;

        $r1 := @parameter0: org.jdom2.output.support.FormatStack;

        $r2 := @parameter1: org.w3c.dom.Document;

        $r3 := @parameter2: org.jdom2.ProcessingInstruction;

        $r4 = virtualinvoke $r3.<org.jdom2.ProcessingInstruction: java.lang.String getTarget()>();

        $r5 = virtualinvoke $r3.<org.jdom2.ProcessingInstruction: java.lang.String getData()>();

        r6 = $r5;

        if $r5 == null goto label1;

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        r6 = "";

     label2:
        $r7 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.ProcessingInstruction createProcessingInstruction(java.lang.String,java.lang.String)>($r4, r6);

        return $r7;
    }
    protected org.w3c.dom.Text printText(org.jdom2.output.support.FormatStack, org.w3c.dom.Document, org.jdom2.Text)
    {
        org.jdom2.output.support.AbstractDOMOutputProcessor r0;
        org.jdom2.output.support.FormatStack $r1;
        org.w3c.dom.Document $r2;
        org.jdom2.Text $r3;
        java.lang.String $r4;
        org.w3c.dom.Text $r5;

        r0 := @this: org.jdom2.output.support.AbstractDOMOutputProcessor;

        $r1 := @parameter0: org.jdom2.output.support.FormatStack;

        $r2 := @parameter1: org.w3c.dom.Document;

        $r3 := @parameter2: org.jdom2.Text;

        $r4 = virtualinvoke $r3.<org.jdom2.Text: java.lang.String getText()>();

        $r5 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r4);

        return $r5;
    }
    public java.util.List process(org.w3c.dom.Document, org.jdom2.output.Format, java.util.List)
    {
        org.jdom2.output.support.AbstractDOMOutputProcessor r0;
        org.w3c.dom.Document $r1;
        org.jdom2.output.Format $r2;
        java.util.List r3;
        org.jdom2.output.support.FormatStack r4;
        org.jdom2.util.NamespaceStack r5;
        java.util.ArrayList r6;
        int $i0;
        java.util.Iterator $r7;
        boolean $z0;
        java.lang.Object $r8;
        org.jdom2.Content r9;
        org.w3c.dom.Node $r10;
        java.lang.Throwable $r11;

        r0 := @this: org.jdom2.output.support.AbstractDOMOutputProcessor;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r2 := @parameter1: org.jdom2.output.Format;

        r3 := @parameter2: java.util.List;

        r6 = new java.util.ArrayList;

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        r4 = new org.jdom2.output.support.FormatStack;

        specialinvoke r4.<org.jdom2.output.support.FormatStack: void <init>(org.jdom2.output.Format)>($r2);

        r5 = new org.jdom2.util.NamespaceStack;

        specialinvoke r5.<org.jdom2.util.NamespaceStack: void <init>()>();

        $r7 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.jdom2.Content) $r8;

        virtualinvoke r4.<org.jdom2.output.support.FormatStack: void push()>();

     label2:
        $r10 = virtualinvoke r0.<org.jdom2.output.support.AbstractDOMOutputProcessor: org.w3c.dom.Node helperContentDispatcher(org.jdom2.output.support.FormatStack,org.jdom2.util.NamespaceStack,org.w3c.dom.Document,org.jdom2.Content)>(r4, r5, $r1, r9);

     label3:
        if $r10 == null goto label5;

     label4:
        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r10);

     label5:
        virtualinvoke r4.<org.jdom2.output.support.FormatStack: void pop()>();

        goto label1;

     label6:
        $r11 := @caughtexception;

        virtualinvoke r4.<org.jdom2.output.support.FormatStack: void pop()>();

        throw $r11;

     label7:
        return r6;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }
    public org.w3c.dom.Attr process(org.w3c.dom.Document, org.jdom2.output.Format, org.jdom2.Attribute)
    {
        org.jdom2.output.support.AbstractDOMOutputProcessor r0;
        org.w3c.dom.Document $r1;
        org.jdom2.output.Format $r2;
        org.jdom2.Attribute $r3;
        org.w3c.dom.Attr $r4;
        org.jdom2.output.support.FormatStack $r5;

        r0 := @this: org.jdom2.output.support.AbstractDOMOutputProcessor;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r2 := @parameter1: org.jdom2.output.Format;

        $r3 := @parameter2: org.jdom2.Attribute;

        $r5 = new org.jdom2.output.support.FormatStack;

        specialinvoke $r5.<org.jdom2.output.support.FormatStack: void <init>(org.jdom2.output.Format)>($r2);

        $r4 = virtualinvoke r0.<org.jdom2.output.support.AbstractDOMOutputProcessor: org.w3c.dom.Attr printAttribute(org.jdom2.output.support.FormatStack,org.w3c.dom.Document,org.jdom2.Attribute)>($r5, $r1, $r3);

        return $r4;
    }
    public org.w3c.dom.CDATASection process(org.w3c.dom.Document, org.jdom2.output.Format, org.jdom2.CDATA)
    {
        org.jdom2.output.support.AbstractDOMOutputProcessor r0;
        org.w3c.dom.Document $r1;
        org.jdom2.output.Format $r2;
        org.jdom2.CDATA $r3;
        org.jdom2.output.support.FormatStack r4;
        java.util.List $r5;
        org.jdom2.output.support.Walker $r6;
        boolean $z0;
        org.jdom2.Content $r7;
        java.lang.String $r8;
        org.w3c.dom.CDATASection $r9;
        org.jdom2.Content$CType $r10, $r11;

        r0 := @this: org.jdom2.output.support.AbstractDOMOutputProcessor;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r2 := @parameter1: org.jdom2.output.Format;

        $r3 := @parameter2: org.jdom2.CDATA;

        $r5 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r3);

        r4 = new org.jdom2.output.support.FormatStack;

        specialinvoke r4.<org.jdom2.output.support.FormatStack: void <init>(org.jdom2.output.Format)>($r2);

        $r6 = virtualinvoke r0.<org.jdom2.output.support.AbstractDOMOutputProcessor: org.jdom2.output.support.Walker buildWalker(org.jdom2.output.support.FormatStack,java.util.List,boolean)>(r4, $r5, 0);

        $z0 = interfaceinvoke $r6.<org.jdom2.output.support.Walker: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<org.jdom2.output.support.Walker: org.jdom2.Content next()>();

        if $r7 != null goto label1;

        $r3 = new org.jdom2.CDATA;

        $r8 = interfaceinvoke $r6.<org.jdom2.output.support.Walker: java.lang.String text()>();

        specialinvoke $r3.<org.jdom2.CDATA: void <init>(java.lang.String)>($r8);

        $r9 = virtualinvoke r0.<org.jdom2.output.support.AbstractDOMOutputProcessor: org.w3c.dom.CDATASection printCDATA(org.jdom2.output.support.FormatStack,org.w3c.dom.Document,org.jdom2.CDATA)>(r4, $r1, $r3);

        return $r9;

     label1:
        $r10 = virtualinvoke $r7.<org.jdom2.Content: org.jdom2.Content$CType getCType()>();

        $r11 = <org.jdom2.Content$CType: org.jdom2.Content$CType CDATA>;

        if $r10 != $r11 goto label2;

        $r3 = (org.jdom2.CDATA) $r7;

        $r9 = virtualinvoke r0.<org.jdom2.output.support.AbstractDOMOutputProcessor: org.w3c.dom.CDATASection printCDATA(org.jdom2.output.support.FormatStack,org.w3c.dom.Document,org.jdom2.CDATA)>(r4, $r1, $r3);

        return $r9;

     label2:
        return null;
    }
    public org.w3c.dom.Comment process(org.w3c.dom.Document, org.jdom2.output.Format, org.jdom2.Comment)
    {
        org.jdom2.output.support.AbstractDOMOutputProcessor r0;
        org.w3c.dom.Document $r1;
        org.jdom2.output.Format $r2;
        org.jdom2.Comment $r3;
        org.w3c.dom.Comment $r4;
        org.jdom2.output.support.FormatStack $r5;

        r0 := @this: org.jdom2.output.support.AbstractDOMOutputProcessor;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r2 := @parameter1: org.jdom2.output.Format;

        $r3 := @parameter2: org.jdom2.Comment;

        $r5 = new org.jdom2.output.support.FormatStack;

        specialinvoke $r5.<org.jdom2.output.support.FormatStack: void <init>(org.jdom2.output.Format)>($r2);

        $r4 = virtualinvoke r0.<org.jdom2.output.support.AbstractDOMOutputProcessor: org.w3c.dom.Comment printComment(org.jdom2.output.support.FormatStack,org.w3c.dom.Document,org.jdom2.Comment)>($r5, $r1, $r3);

        return $r4;
    }
    public org.w3c.dom.Document process(org.w3c.dom.Document, org.jdom2.output.Format, org.jdom2.Document)
    {
        org.jdom2.output.support.AbstractDOMOutputProcessor r0;
        org.w3c.dom.Document $r1;
        org.jdom2.output.Format $r2;
        org.jdom2.Document $r3;
        org.jdom2.util.NamespaceStack $r4;
        org.jdom2.output.support.FormatStack $r5;

        r0 := @this: org.jdom2.output.support.AbstractDOMOutputProcessor;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r2 := @parameter1: org.jdom2.output.Format;

        $r3 := @parameter2: org.jdom2.Document;

        $r5 = new org.jdom2.output.support.FormatStack;

        specialinvoke $r5.<org.jdom2.output.support.FormatStack: void <init>(org.jdom2.output.Format)>($r2);

        $r4 = new org.jdom2.util.NamespaceStack;

        specialinvoke $r4.<org.jdom2.util.NamespaceStack: void <init>()>();

        $r1 = virtualinvoke r0.<org.jdom2.output.support.AbstractDOMOutputProcessor: org.w3c.dom.Document printDocument(org.jdom2.output.support.FormatStack,org.jdom2.util.NamespaceStack,org.w3c.dom.Document,org.jdom2.Document)>($r5, $r4, $r1, $r3);

        return $r1;
    }
    public org.w3c.dom.Element process(org.w3c.dom.Document, org.jdom2.output.Format, org.jdom2.Element)
    {
        org.jdom2.output.support.AbstractDOMOutputProcessor r0;
        org.w3c.dom.Document $r1;
        org.jdom2.output.Format $r2;
        org.jdom2.Element $r3;
        org.jdom2.util.NamespaceStack $r4;
        org.w3c.dom.Element $r5;
        org.jdom2.output.support.FormatStack $r6;

        r0 := @this: org.jdom2.output.support.AbstractDOMOutputProcessor;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r2 := @parameter1: org.jdom2.output.Format;

        $r3 := @parameter2: org.jdom2.Element;

        $r6 = new org.jdom2.output.support.FormatStack;

        specialinvoke $r6.<org.jdom2.output.support.FormatStack: void <init>(org.jdom2.output.Format)>($r2);

        $r4 = new org.jdom2.util.NamespaceStack;

        specialinvoke $r4.<org.jdom2.util.NamespaceStack: void <init>()>();

        $r5 = virtualinvoke r0.<org.jdom2.output.support.AbstractDOMOutputProcessor: org.w3c.dom.Element printElement(org.jdom2.output.support.FormatStack,org.jdom2.util.NamespaceStack,org.w3c.dom.Document,org.jdom2.Element)>($r6, $r4, $r1, $r3);

        return $r5;
    }
    public org.w3c.dom.EntityReference process(org.w3c.dom.Document, org.jdom2.output.Format, org.jdom2.EntityRef)
    {
        org.jdom2.output.support.AbstractDOMOutputProcessor r0;
        org.w3c.dom.Document $r1;
        org.jdom2.output.Format $r2;
        org.jdom2.EntityRef $r3;
        org.w3c.dom.EntityReference $r4;
        org.jdom2.output.support.FormatStack $r5;

        r0 := @this: org.jdom2.output.support.AbstractDOMOutputProcessor;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r2 := @parameter1: org.jdom2.output.Format;

        $r3 := @parameter2: org.jdom2.EntityRef;

        $r5 = new org.jdom2.output.support.FormatStack;

        specialinvoke $r5.<org.jdom2.output.support.FormatStack: void <init>(org.jdom2.output.Format)>($r2);

        $r4 = virtualinvoke r0.<org.jdom2.output.support.AbstractDOMOutputProcessor: org.w3c.dom.EntityReference printEntityRef(org.jdom2.output.support.FormatStack,org.w3c.dom.Document,org.jdom2.EntityRef)>($r5, $r1, $r3);

        return $r4;
    }
    public org.w3c.dom.ProcessingInstruction process(org.w3c.dom.Document, org.jdom2.output.Format, org.jdom2.ProcessingInstruction)
    {
        org.jdom2.output.support.AbstractDOMOutputProcessor r0;
        org.w3c.dom.Document $r1;
        org.jdom2.output.Format $r2;
        org.jdom2.ProcessingInstruction $r3;
        org.w3c.dom.ProcessingInstruction $r4;
        org.jdom2.output.support.FormatStack $r5;

        r0 := @this: org.jdom2.output.support.AbstractDOMOutputProcessor;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r2 := @parameter1: org.jdom2.output.Format;

        $r3 := @parameter2: org.jdom2.ProcessingInstruction;

        $r5 = new org.jdom2.output.support.FormatStack;

        specialinvoke $r5.<org.jdom2.output.support.FormatStack: void <init>(org.jdom2.output.Format)>($r2);

        $r4 = virtualinvoke r0.<org.jdom2.output.support.AbstractDOMOutputProcessor: org.w3c.dom.ProcessingInstruction printProcessingInstruction(org.jdom2.output.support.FormatStack,org.w3c.dom.Document,org.jdom2.ProcessingInstruction)>($r5, $r1, $r3);

        return $r4;
    }
    public org.w3c.dom.Text process(org.w3c.dom.Document, org.jdom2.output.Format, org.jdom2.Text)
    {
        org.jdom2.output.support.AbstractDOMOutputProcessor r0;
        org.w3c.dom.Document $r1;
        org.jdom2.output.Format $r2;
        org.jdom2.Text $r3;
        org.jdom2.output.support.FormatStack r4;
        java.util.List $r5;
        org.jdom2.output.support.Walker $r6;
        boolean $z0;
        org.jdom2.Content $r7;
        java.lang.String $r8;
        org.w3c.dom.Text $r9;
        org.jdom2.Content$CType $r10, $r11;

        r0 := @this: org.jdom2.output.support.AbstractDOMOutputProcessor;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r2 := @parameter1: org.jdom2.output.Format;

        $r3 := @parameter2: org.jdom2.Text;

        $r5 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r3);

        r4 = new org.jdom2.output.support.FormatStack;

        specialinvoke r4.<org.jdom2.output.support.FormatStack: void <init>(org.jdom2.output.Format)>($r2);

        $r6 = virtualinvoke r0.<org.jdom2.output.support.AbstractDOMOutputProcessor: org.jdom2.output.support.Walker buildWalker(org.jdom2.output.support.FormatStack,java.util.List,boolean)>(r4, $r5, 0);

        $z0 = interfaceinvoke $r6.<org.jdom2.output.support.Walker: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<org.jdom2.output.support.Walker: org.jdom2.Content next()>();

        if $r7 != null goto label1;

        $r3 = new org.jdom2.Text;

        $r8 = interfaceinvoke $r6.<org.jdom2.output.support.Walker: java.lang.String text()>();

        specialinvoke $r3.<org.jdom2.Text: void <init>(java.lang.String)>($r8);

        $r9 = virtualinvoke r0.<org.jdom2.output.support.AbstractDOMOutputProcessor: org.w3c.dom.Text printText(org.jdom2.output.support.FormatStack,org.w3c.dom.Document,org.jdom2.Text)>(r4, $r1, $r3);

        return $r9;

     label1:
        $r10 = virtualinvoke $r7.<org.jdom2.Content: org.jdom2.Content$CType getCType()>();

        $r11 = <org.jdom2.Content$CType: org.jdom2.Content$CType Text>;

        if $r10 != $r11 goto label2;

        $r3 = (org.jdom2.Text) $r7;

        $r9 = virtualinvoke r0.<org.jdom2.output.support.AbstractDOMOutputProcessor: org.w3c.dom.Text printText(org.jdom2.output.support.FormatStack,org.w3c.dom.Document,org.jdom2.Text)>(r4, $r1, $r3);

        return $r9;

     label2:
        return null;
    }
