org.jdom2.output.support.AbstractStAXEventProcessor$NSIterator extends java.lang.Object implements java.util.Iterator
private final javax.xml.stream.XMLEventFactory fac
private final java.util.Iterator source
    public void <init>(java.util.Iterator, javax.xml.stream.XMLEventFactory)
    {
        org.jdom2.output.support.AbstractStAXEventProcessor$NSIterator r0;
        java.util.Iterator r1;
        javax.xml.stream.XMLEventFactory $r2;

        r0 := @this: org.jdom2.output.support.AbstractStAXEventProcessor$NSIterator;

        r1 := @parameter0: java.util.Iterator;

        $r2 := @parameter1: javax.xml.stream.XMLEventFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.jdom2.output.support.AbstractStAXEventProcessor$NSIterator: java.util.Iterator source> = r1;

        r0.<org.jdom2.output.support.AbstractStAXEventProcessor$NSIterator: javax.xml.stream.XMLEventFactory fac> = $r2;

        return;
    }
    public boolean hasNext()
    {
        org.jdom2.output.support.AbstractStAXEventProcessor$NSIterator r0;
        boolean $z0;
        java.util.Iterator $r1;

        r0 := @this: org.jdom2.output.support.AbstractStAXEventProcessor$NSIterator;

        $r1 = r0.<org.jdom2.output.support.AbstractStAXEventProcessor$NSIterator: java.util.Iterator source>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }
    public volatile java.lang.Object next()
    {
        org.jdom2.output.support.AbstractStAXEventProcessor$NSIterator r0;
        javax.xml.stream.events.Namespace $r1;

        r0 := @this: org.jdom2.output.support.AbstractStAXEventProcessor$NSIterator;

        $r1 = virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor$NSIterator: javax.xml.stream.events.Namespace next()>();

        return $r1;
    }
    public javax.xml.stream.events.Namespace next()
    {
        org.jdom2.output.support.AbstractStAXEventProcessor$NSIterator r0;
        java.util.Iterator $r1;
        java.lang.Object $r2;
        org.jdom2.Namespace r3;
        javax.xml.stream.XMLEventFactory $r4;
        java.lang.String $r5, $r6;
        javax.xml.stream.events.Namespace $r7;

        r0 := @this: org.jdom2.output.support.AbstractStAXEventProcessor$NSIterator;

        $r1 = r0.<org.jdom2.output.support.AbstractStAXEventProcessor$NSIterator: java.util.Iterator source>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.jdom2.Namespace) $r2;

        $r4 = r0.<org.jdom2.output.support.AbstractStAXEventProcessor$NSIterator: javax.xml.stream.XMLEventFactory fac>;

        $r5 = virtualinvoke r3.<org.jdom2.Namespace: java.lang.String getPrefix()>();

        $r6 = virtualinvoke r3.<org.jdom2.Namespace: java.lang.String getURI()>();

        $r7 = virtualinvoke $r4.<javax.xml.stream.XMLEventFactory: javax.xml.stream.events.Namespace createNamespace(java.lang.String,java.lang.String)>($r5, $r6);

        return $r7;
    }
    public void remove()
    {
        org.jdom2.output.support.AbstractStAXEventProcessor$NSIterator r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.jdom2.output.support.AbstractStAXEventProcessor$NSIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot remove Namespaces");

        throw $r1;
    }
