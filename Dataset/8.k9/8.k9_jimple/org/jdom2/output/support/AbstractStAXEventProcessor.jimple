org.jdom2.output.support.AbstractStAXEventProcessor extends org.jdom2.output.support.AbstractOutputProcessor implements org.jdom2.output.support.StAXEventProcessor
    public void <init>()
    {
        org.jdom2.output.support.AbstractStAXEventProcessor r0;

        r0 := @this: org.jdom2.output.support.AbstractStAXEventProcessor;

        specialinvoke r0.<org.jdom2.output.support.AbstractOutputProcessor: void <init>()>();

        return;
    }
    protected void printCDATA(javax.xml.stream.util.XMLEventConsumer, org.jdom2.output.support.FormatStack, javax.xml.stream.XMLEventFactory, org.jdom2.CDATA) throws javax.xml.stream.XMLStreamException
    {
        org.jdom2.output.support.AbstractStAXEventProcessor r0;
        javax.xml.stream.util.XMLEventConsumer $r1;
        org.jdom2.output.support.FormatStack $r2;
        javax.xml.stream.XMLEventFactory $r3;
        org.jdom2.CDATA $r4;
        java.lang.String $r5;
        javax.xml.stream.events.Characters $r6;
        javax.xml.stream.events.XMLEvent $r7;

        r0 := @this: org.jdom2.output.support.AbstractStAXEventProcessor;

        $r1 := @parameter0: javax.xml.stream.util.XMLEventConsumer;

        $r2 := @parameter1: org.jdom2.output.support.FormatStack;

        $r3 := @parameter2: javax.xml.stream.XMLEventFactory;

        $r4 := @parameter3: org.jdom2.CDATA;

        $r5 = virtualinvoke $r4.<org.jdom2.CDATA: java.lang.String getText()>();

        $r6 = virtualinvoke $r3.<javax.xml.stream.XMLEventFactory: javax.xml.stream.events.Characters createCData(java.lang.String)>($r5);

        $r7 = (javax.xml.stream.events.XMLEvent) $r6;

        interfaceinvoke $r1.<javax.xml.stream.util.XMLEventConsumer: void add(javax.xml.stream.events.XMLEvent)>($r7);

        return;
    }
    protected void printComment(javax.xml.stream.util.XMLEventConsumer, org.jdom2.output.support.FormatStack, javax.xml.stream.XMLEventFactory, org.jdom2.Comment) throws javax.xml.stream.XMLStreamException
    {
        org.jdom2.output.support.AbstractStAXEventProcessor r0;
        javax.xml.stream.util.XMLEventConsumer $r1;
        org.jdom2.output.support.FormatStack $r2;
        javax.xml.stream.XMLEventFactory $r3;
        org.jdom2.Comment $r4;
        java.lang.String $r5;
        javax.xml.stream.events.Comment $r6;
        javax.xml.stream.events.XMLEvent $r7;

        r0 := @this: org.jdom2.output.support.AbstractStAXEventProcessor;

        $r1 := @parameter0: javax.xml.stream.util.XMLEventConsumer;

        $r2 := @parameter1: org.jdom2.output.support.FormatStack;

        $r3 := @parameter2: javax.xml.stream.XMLEventFactory;

        $r4 := @parameter3: org.jdom2.Comment;

        $r5 = virtualinvoke $r4.<org.jdom2.Comment: java.lang.String getText()>();

        $r6 = virtualinvoke $r3.<javax.xml.stream.XMLEventFactory: javax.xml.stream.events.Comment createComment(java.lang.String)>($r5);

        $r7 = (javax.xml.stream.events.XMLEvent) $r6;

        interfaceinvoke $r1.<javax.xml.stream.util.XMLEventConsumer: void add(javax.xml.stream.events.XMLEvent)>($r7);

        return;
    }
    protected void printContent(javax.xml.stream.util.XMLEventConsumer, org.jdom2.output.support.FormatStack, org.jdom2.util.NamespaceStack, javax.xml.stream.XMLEventFactory, org.jdom2.output.support.Walker) throws javax.xml.stream.XMLStreamException
    {
        org.jdom2.output.support.AbstractStAXEventProcessor r0;
        javax.xml.stream.util.XMLEventConsumer $r1;
        org.jdom2.output.support.FormatStack $r2;
        org.jdom2.util.NamespaceStack $r3;
        javax.xml.stream.XMLEventFactory $r4;
        org.jdom2.output.support.Walker $r5;
        boolean $z0;
        org.jdom2.Content $r6;
        org.jdom2.CDATA $r7;
        java.lang.String $r8;
        org.jdom2.Text $r9;
        int[] $r10;
        org.jdom2.Content$CType $r11;
        int $i0;
        java.lang.IllegalStateException $r12;
        java.lang.StringBuilder $r13;
        org.jdom2.Comment r14;
        org.jdom2.Element $r15;
        org.jdom2.EntityRef r16;
        org.jdom2.ProcessingInstruction r17;
        org.jdom2.DocType r18;

        r0 := @this: org.jdom2.output.support.AbstractStAXEventProcessor;

        $r1 := @parameter0: javax.xml.stream.util.XMLEventConsumer;

        $r2 := @parameter1: org.jdom2.output.support.FormatStack;

        $r3 := @parameter2: org.jdom2.util.NamespaceStack;

        $r4 := @parameter3: javax.xml.stream.XMLEventFactory;

        $r5 := @parameter4: org.jdom2.output.support.Walker;

     label01:
        $z0 = interfaceinvoke $r5.<org.jdom2.output.support.Walker: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r6 = interfaceinvoke $r5.<org.jdom2.output.support.Walker: org.jdom2.Content next()>();

        if $r6 != null goto label03;

        $z0 = interfaceinvoke $r5.<org.jdom2.output.support.Walker: boolean isCDATA()>();

        if $z0 == 0 goto label02;

        $r7 = new org.jdom2.CDATA;

        $r8 = interfaceinvoke $r5.<org.jdom2.output.support.Walker: java.lang.String text()>();

        specialinvoke $r7.<org.jdom2.CDATA: void <init>(java.lang.String)>($r8);

        virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: void printCDATA(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,javax.xml.stream.XMLEventFactory,org.jdom2.CDATA)>($r1, $r2, $r4, $r7);

        goto label01;

     label02:
        $r9 = new org.jdom2.Text;

        $r8 = interfaceinvoke $r5.<org.jdom2.output.support.Walker: java.lang.String text()>();

        specialinvoke $r9.<org.jdom2.Text: void <init>(java.lang.String)>($r8);

        virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: void printText(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,javax.xml.stream.XMLEventFactory,org.jdom2.Text)>($r1, $r2, $r4, $r9);

        goto label01;

     label03:
        $r10 = <org.jdom2.output.support.AbstractStAXEventProcessor$1: int[] $SwitchMap$org$jdom2$Content$CType>;

        $r11 = virtualinvoke $r6.<org.jdom2.Content: org.jdom2.Content$CType getCType()>();

        $i0 = virtualinvoke $r11.<org.jdom2.Content$CType: int ordinal()>();

        $i0 = $r10[$i0];

        lookupswitch($i0)
        {
            case 1: goto label06;
            case 2: goto label11;
            case 3: goto label07;
            case 4: goto label09;
            case 5: goto label05;
            case 6: goto label08;
            case 7: goto label10;
            default: goto label04;
        };

     label04:
        $r12 = new java.lang.IllegalStateException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected Content ");

        $r11 = virtualinvoke $r6.<org.jdom2.Content: org.jdom2.Content$CType getCType()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r8 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r12;

     label05:
        $r7 = (org.jdom2.CDATA) $r6;

        virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: void printCDATA(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,javax.xml.stream.XMLEventFactory,org.jdom2.CDATA)>($r1, $r2, $r4, $r7);

        goto label01;

     label06:
        r14 = (org.jdom2.Comment) $r6;

        virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: void printComment(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,javax.xml.stream.XMLEventFactory,org.jdom2.Comment)>($r1, $r2, $r4, r14);

        goto label01;

     label07:
        $r15 = (org.jdom2.Element) $r6;

        virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: void printElement(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,org.jdom2.util.NamespaceStack,javax.xml.stream.XMLEventFactory,org.jdom2.Element)>($r1, $r2, $r3, $r4, $r15);

        goto label01;

     label08:
        r16 = (org.jdom2.EntityRef) $r6;

        virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: void printEntityRef(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,javax.xml.stream.XMLEventFactory,org.jdom2.EntityRef)>($r1, $r2, $r4, r16);

        goto label01;

     label09:
        r17 = (org.jdom2.ProcessingInstruction) $r6;

        virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: void printProcessingInstruction(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,javax.xml.stream.XMLEventFactory,org.jdom2.ProcessingInstruction)>($r1, $r2, $r4, r17);

        goto label01;

     label10:
        $r9 = (org.jdom2.Text) $r6;

        virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: void printText(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,javax.xml.stream.XMLEventFactory,org.jdom2.Text)>($r1, $r2, $r4, $r9);

        goto label01;

     label11:
        r18 = (org.jdom2.DocType) $r6;

        virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: void printDocType(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,javax.xml.stream.XMLEventFactory,org.jdom2.DocType)>($r1, $r2, $r4, r18);

        goto label01;

     label12:
        return;
    }
    protected void printDocType(javax.xml.stream.util.XMLEventConsumer, org.jdom2.output.support.FormatStack, javax.xml.stream.XMLEventFactory, org.jdom2.DocType) throws javax.xml.stream.XMLStreamException
    {
        org.jdom2.output.support.AbstractStAXEventProcessor r0;
        javax.xml.stream.util.XMLEventConsumer $r1;
        org.jdom2.output.support.FormatStack $r2;
        javax.xml.stream.XMLEventFactory $r3;
        org.jdom2.DocType $r4;
        java.lang.String $r6, $r7, $r8, $r9;
        boolean z0;
        javax.xml.stream.events.DTD $r10;
        java.io.StringWriter $r11;
        javax.xml.stream.events.XMLEvent $r12;

        r0 := @this: org.jdom2.output.support.AbstractStAXEventProcessor;

        $r1 := @parameter0: javax.xml.stream.util.XMLEventConsumer;

        $r2 := @parameter1: org.jdom2.output.support.FormatStack;

        $r3 := @parameter2: javax.xml.stream.XMLEventFactory;

        $r4 := @parameter3: org.jdom2.DocType;

        $r6 = virtualinvoke $r4.<org.jdom2.DocType: java.lang.String getPublicID()>();

        $r7 = virtualinvoke $r4.<org.jdom2.DocType: java.lang.String getSystemID()>();

        $r8 = virtualinvoke $r4.<org.jdom2.DocType: java.lang.String getInternalSubset()>();

        z0 = 0;

        $r11 = new java.io.StringWriter;

        specialinvoke $r11.<java.io.StringWriter: void <init>()>();

        virtualinvoke $r11.<java.io.StringWriter: void write(java.lang.String)>("<!DOCTYPE ");

        $r9 = virtualinvoke $r4.<org.jdom2.DocType: java.lang.String getElementName()>();

        virtualinvoke $r11.<java.io.StringWriter: void write(java.lang.String)>($r9);

        if $r6 == null goto label1;

        virtualinvoke $r11.<java.io.StringWriter: void write(java.lang.String)>(" PUBLIC \"");

        virtualinvoke $r11.<java.io.StringWriter: void write(java.lang.String)>($r6);

        virtualinvoke $r11.<java.io.StringWriter: void write(java.lang.String)>("\"");

        z0 = 1;

     label1:
        if $r7 == null goto label3;

        if z0 != 0 goto label2;

        virtualinvoke $r11.<java.io.StringWriter: void write(java.lang.String)>(" SYSTEM");

     label2:
        virtualinvoke $r11.<java.io.StringWriter: void write(java.lang.String)>(" \"");

        virtualinvoke $r11.<java.io.StringWriter: void write(java.lang.String)>($r7);

        virtualinvoke $r11.<java.io.StringWriter: void write(java.lang.String)>("\"");

     label3:
        if $r8 == null goto label4;

        z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("");

        if z0 != 0 goto label4;

        virtualinvoke $r11.<java.io.StringWriter: void write(java.lang.String)>(" [");

        $r6 = virtualinvoke $r2.<org.jdom2.output.support.FormatStack: java.lang.String getLineSeparator()>();

        virtualinvoke $r11.<java.io.StringWriter: void write(java.lang.String)>($r6);

        $r6 = virtualinvoke $r4.<org.jdom2.DocType: java.lang.String getInternalSubset()>();

        virtualinvoke $r11.<java.io.StringWriter: void write(java.lang.String)>($r6);

        virtualinvoke $r11.<java.io.StringWriter: void write(java.lang.String)>("]");

     label4:
        virtualinvoke $r11.<java.io.StringWriter: void write(java.lang.String)>(">");

        $r6 = virtualinvoke $r11.<java.io.StringWriter: java.lang.String toString()>();

        $r10 = virtualinvoke $r3.<javax.xml.stream.XMLEventFactory: javax.xml.stream.events.DTD createDTD(java.lang.String)>($r6);

        $r12 = (javax.xml.stream.events.XMLEvent) $r10;

        interfaceinvoke $r1.<javax.xml.stream.util.XMLEventConsumer: void add(javax.xml.stream.events.XMLEvent)>($r12);

        return;
    }
    protected void printDocument(javax.xml.stream.util.XMLEventConsumer, org.jdom2.output.support.FormatStack, org.jdom2.util.NamespaceStack, javax.xml.stream.XMLEventFactory, org.jdom2.Document) throws javax.xml.stream.XMLStreamException
    {
        org.jdom2.output.support.AbstractStAXEventProcessor r0;
        javax.xml.stream.util.XMLEventConsumer $r1;
        org.jdom2.output.support.FormatStack $r2;
        org.jdom2.util.NamespaceStack $r3;
        javax.xml.stream.XMLEventFactory $r4;
        org.jdom2.Document $r5;
        boolean $z0;
        javax.xml.stream.events.StartDocument $r6;
        java.util.List $r7;
        int $i0, i1;
        org.jdom2.Content $r8;
        java.lang.String $r9;
        javax.xml.stream.events.Characters $r10;
        org.jdom2.output.support.Walker $r11;
        int[] $r12;
        org.jdom2.Content$CType $r13;
        org.jdom2.Comment r14;
        org.jdom2.DocType r15;
        org.jdom2.Element $r16;
        org.jdom2.ProcessingInstruction r17;
        javax.xml.stream.events.EndDocument $r18;
        java.util.ArrayList $r19;
        javax.xml.stream.events.XMLEvent $r20;

        r0 := @this: org.jdom2.output.support.AbstractStAXEventProcessor;

        $r1 := @parameter0: javax.xml.stream.util.XMLEventConsumer;

        $r2 := @parameter1: org.jdom2.output.support.FormatStack;

        $r3 := @parameter2: org.jdom2.util.NamespaceStack;

        $r4 := @parameter3: javax.xml.stream.XMLEventFactory;

        $r5 := @parameter4: org.jdom2.Document;

        $z0 = virtualinvoke $r2.<org.jdom2.output.support.FormatStack: boolean isOmitDeclaration()>();

        if $z0 == 0 goto label04;

        $r6 = virtualinvoke $r4.<javax.xml.stream.XMLEventFactory: javax.xml.stream.events.StartDocument createStartDocument(java.lang.String,java.lang.String)>(null, null);

        $r20 = (javax.xml.stream.events.XMLEvent) $r6;

        interfaceinvoke $r1.<javax.xml.stream.util.XMLEventConsumer: void add(javax.xml.stream.events.XMLEvent)>($r20);

     label01:
        $z0 = virtualinvoke $r5.<org.jdom2.Document: boolean hasRootElement()>();

        if $z0 == 0 goto label06;

        $r7 = virtualinvoke $r5.<org.jdom2.Document: java.util.List getContent()>();

     label02:
        $z0 = interfaceinvoke $r7.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label07;

        $i0 = virtualinvoke $r5.<org.jdom2.Document: int getContentSize()>();

        i1 = 0;

     label03:
        if i1 >= $i0 goto label07;

        $r8 = virtualinvoke $r5.<org.jdom2.Document: org.jdom2.Content getContent(int)>(i1);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r8);

        i1 = i1 + 1;

        goto label03;

     label04:
        $z0 = virtualinvoke $r2.<org.jdom2.output.support.FormatStack: boolean isOmitEncoding()>();

        if $z0 == 0 goto label05;

        $r6 = virtualinvoke $r4.<javax.xml.stream.XMLEventFactory: javax.xml.stream.events.StartDocument createStartDocument(java.lang.String,java.lang.String)>(null, "1.0");

        $r20 = (javax.xml.stream.events.XMLEvent) $r6;

        interfaceinvoke $r1.<javax.xml.stream.util.XMLEventConsumer: void add(javax.xml.stream.events.XMLEvent)>($r20);

        $r9 = virtualinvoke $r2.<org.jdom2.output.support.FormatStack: java.lang.String getLineSeparator()>();

        if $r9 == null goto label01;

        $r9 = virtualinvoke $r2.<org.jdom2.output.support.FormatStack: java.lang.String getLineSeparator()>();

        $r10 = virtualinvoke $r4.<javax.xml.stream.XMLEventFactory: javax.xml.stream.events.Characters createCharacters(java.lang.String)>($r9);

        $r20 = (javax.xml.stream.events.XMLEvent) $r10;

        interfaceinvoke $r1.<javax.xml.stream.util.XMLEventConsumer: void add(javax.xml.stream.events.XMLEvent)>($r20);

        goto label01;

     label05:
        $r9 = virtualinvoke $r2.<org.jdom2.output.support.FormatStack: java.lang.String getEncoding()>();

        $r6 = virtualinvoke $r4.<javax.xml.stream.XMLEventFactory: javax.xml.stream.events.StartDocument createStartDocument(java.lang.String,java.lang.String)>($r9, "1.0");

        $r20 = (javax.xml.stream.events.XMLEvent) $r6;

        interfaceinvoke $r1.<javax.xml.stream.util.XMLEventConsumer: void add(javax.xml.stream.events.XMLEvent)>($r20);

        $r9 = virtualinvoke $r2.<org.jdom2.output.support.FormatStack: java.lang.String getLineSeparator()>();

        if $r9 == null goto label01;

        $r9 = virtualinvoke $r2.<org.jdom2.output.support.FormatStack: java.lang.String getLineSeparator()>();

        $r10 = virtualinvoke $r4.<javax.xml.stream.XMLEventFactory: javax.xml.stream.events.Characters createCharacters(java.lang.String)>($r9);

        $r20 = (javax.xml.stream.events.XMLEvent) $r10;

        interfaceinvoke $r1.<javax.xml.stream.util.XMLEventConsumer: void add(javax.xml.stream.events.XMLEvent)>($r20);

        goto label01;

     label06:
        $r19 = new java.util.ArrayList;

        $r7 = $r19;

        $i0 = virtualinvoke $r5.<org.jdom2.Document: int getContentSize()>();

        specialinvoke $r19.<java.util.ArrayList: void <init>(int)>($i0);

        goto label02;

     label07:
        $r11 = virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: org.jdom2.output.support.Walker buildWalker(org.jdom2.output.support.FormatStack,java.util.List,boolean)>($r2, $r7, 0);

        $z0 = interfaceinvoke $r11.<org.jdom2.output.support.Walker: boolean hasNext()>();

        if $z0 == 0 goto label16;

     label08:
        $z0 = interfaceinvoke $r11.<org.jdom2.output.support.Walker: boolean hasNext()>();

        if $z0 == 0 goto label15;

        $r8 = interfaceinvoke $r11.<org.jdom2.output.support.Walker: org.jdom2.Content next()>();

        if $r8 != null goto label09;

        $r9 = interfaceinvoke $r11.<org.jdom2.output.support.Walker: java.lang.String text()>();

        if $r9 == null goto label08;

        $z0 = staticinvoke <org.jdom2.Verifier: boolean isAllXMLWhitespace(java.lang.String)>($r9);

        if $z0 == 0 goto label08;

        $z0 = interfaceinvoke $r11.<org.jdom2.output.support.Walker: boolean isCDATA()>();

        if $z0 != 0 goto label08;

        $r10 = virtualinvoke $r4.<javax.xml.stream.XMLEventFactory: javax.xml.stream.events.Characters createCharacters(java.lang.String)>($r9);

        $r20 = (javax.xml.stream.events.XMLEvent) $r10;

        interfaceinvoke $r1.<javax.xml.stream.util.XMLEventConsumer: void add(javax.xml.stream.events.XMLEvent)>($r20);

        goto label08;

     label09:
        $r12 = <org.jdom2.output.support.AbstractStAXEventProcessor$1: int[] $SwitchMap$org$jdom2$Content$CType>;

        $r13 = virtualinvoke $r8.<org.jdom2.Content: org.jdom2.Content$CType getCType()>();

        $i0 = virtualinvoke $r13.<org.jdom2.Content$CType: int ordinal()>();

        $i0 = $r12[$i0];

        lookupswitch($i0)
        {
            case 1: goto label11;
            case 2: goto label12;
            case 3: goto label13;
            case 4: goto label14;
            default: goto label10;
        };

     label10:
        goto label08;

     label11:
        r14 = (org.jdom2.Comment) $r8;

        virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: void printComment(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,javax.xml.stream.XMLEventFactory,org.jdom2.Comment)>($r1, $r2, $r4, r14);

        goto label08;

     label12:
        r15 = (org.jdom2.DocType) $r8;

        virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: void printDocType(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,javax.xml.stream.XMLEventFactory,org.jdom2.DocType)>($r1, $r2, $r4, r15);

        goto label08;

     label13:
        $r16 = (org.jdom2.Element) $r8;

        virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: void printElement(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,org.jdom2.util.NamespaceStack,javax.xml.stream.XMLEventFactory,org.jdom2.Element)>($r1, $r2, $r3, $r4, $r16);

        goto label08;

     label14:
        r17 = (org.jdom2.ProcessingInstruction) $r8;

        virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: void printProcessingInstruction(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,javax.xml.stream.XMLEventFactory,org.jdom2.ProcessingInstruction)>($r1, $r2, $r4, r17);

        goto label08;

     label15:
        $r9 = virtualinvoke $r2.<org.jdom2.output.support.FormatStack: java.lang.String getLineSeparator()>();

        if $r9 == null goto label16;

        $r9 = virtualinvoke $r2.<org.jdom2.output.support.FormatStack: java.lang.String getLineSeparator()>();

        $r10 = virtualinvoke $r4.<javax.xml.stream.XMLEventFactory: javax.xml.stream.events.Characters createCharacters(java.lang.String)>($r9);

        $r20 = (javax.xml.stream.events.XMLEvent) $r10;

        interfaceinvoke $r1.<javax.xml.stream.util.XMLEventConsumer: void add(javax.xml.stream.events.XMLEvent)>($r20);

     label16:
        $r18 = virtualinvoke $r4.<javax.xml.stream.XMLEventFactory: javax.xml.stream.events.EndDocument createEndDocument()>();

        $r20 = (javax.xml.stream.events.XMLEvent) $r18;

        interfaceinvoke $r1.<javax.xml.stream.util.XMLEventConsumer: void add(javax.xml.stream.events.XMLEvent)>($r20);

        return;
    }
    protected void printElement(javax.xml.stream.util.XMLEventConsumer, org.jdom2.output.support.FormatStack, org.jdom2.util.NamespaceStack, javax.xml.stream.XMLEventFactory, org.jdom2.Element) throws javax.xml.stream.XMLStreamException
    {
        org.jdom2.output.support.AbstractStAXEventProcessor r0;
        javax.xml.stream.util.XMLEventConsumer $r1;
        org.jdom2.output.support.FormatStack $r2;
        org.jdom2.util.NamespaceStack $r3;
        javax.xml.stream.XMLEventFactory $r4;
        org.jdom2.Element $r5;
        org.jdom2.Namespace $r6, $r9;
        boolean $z0;
        java.util.List $r7;
        java.util.Iterator $r8;
        java.lang.String $r10, $r16, $r19;
        java.lang.Iterable $r13;
        javax.xml.stream.events.StartElement $r14;
        org.jdom2.output.Format$TextMode $r15;
        org.jdom2.output.support.Walker $r17;
        javax.xml.stream.events.EndElement $r20;
        java.lang.Throwable $r21, $r22;
        org.jdom2.output.support.AbstractStAXEventProcessor$AttIterator $r23;
        org.jdom2.output.support.AbstractStAXEventProcessor$NSIterator $r24;
        org.jdom2.Text $r25;
        javax.xml.stream.events.XMLEvent $r26;

        r0 := @this: org.jdom2.output.support.AbstractStAXEventProcessor;

        $r1 := @parameter0: javax.xml.stream.util.XMLEventConsumer;

        $r2 := @parameter1: org.jdom2.output.support.FormatStack;

        $r3 := @parameter2: org.jdom2.util.NamespaceStack;

        $r4 := @parameter3: javax.xml.stream.XMLEventFactory;

        $r5 := @parameter4: org.jdom2.Element;

        virtualinvoke $r3.<org.jdom2.util.NamespaceStack: void push(org.jdom2.Element)>($r5);

     label01:
        $r6 = virtualinvoke $r5.<org.jdom2.Element: org.jdom2.Namespace getNamespace()>();

        $z0 = virtualinvoke $r5.<org.jdom2.Element: boolean hasAttributes()>();

     label02:
        if $z0 == 0 goto label36;

     label03:
        $r7 = virtualinvoke $r5.<org.jdom2.Element: java.util.List getAttributes()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $r9 = <org.jdom2.Namespace: org.jdom2.Namespace NO_NAMESPACE>;

     label05:
        if $r6 != $r9 goto label37;

     label06:
        $r10 = virtualinvoke $r5.<org.jdom2.Element: java.lang.String getName()>();

        $r23 = new org.jdom2.output.support.AbstractStAXEventProcessor$AttIterator;

     label07:
        $z0 = virtualinvoke $r2.<org.jdom2.output.support.FormatStack: boolean isSpecifiedAttributesOnly()>();

        specialinvoke $r23.<org.jdom2.output.support.AbstractStAXEventProcessor$AttIterator: void <init>(java.util.Iterator,javax.xml.stream.XMLEventFactory,boolean)>($r8, $r4, $z0);

        $r24 = new org.jdom2.output.support.AbstractStAXEventProcessor$NSIterator;

     label08:
        $r13 = virtualinvoke $r3.<org.jdom2.util.NamespaceStack: java.lang.Iterable addedForward()>();

        $r8 = interfaceinvoke $r13.<java.lang.Iterable: java.util.Iterator iterator()>();

        specialinvoke $r24.<org.jdom2.output.support.AbstractStAXEventProcessor$NSIterator: void <init>(java.util.Iterator,javax.xml.stream.XMLEventFactory)>($r8, $r4);

        $r14 = virtualinvoke $r4.<javax.xml.stream.XMLEventFactory: javax.xml.stream.events.StartElement createStartElement(java.lang.String,java.lang.String,java.lang.String,java.util.Iterator,java.util.Iterator)>("", "", $r10, $r23, $r24);

        $r26 = (javax.xml.stream.events.XMLEvent) $r14;

        interfaceinvoke $r1.<javax.xml.stream.util.XMLEventConsumer: void add(javax.xml.stream.events.XMLEvent)>($r26);

     label09:
        $r7 = virtualinvoke $r5.<org.jdom2.Element: java.util.List getContent()>();

        $z0 = interfaceinvoke $r7.<java.util.List: boolean isEmpty()>();

     label10:
        if $z0 != 0 goto label33;

     label11:
        $r15 = virtualinvoke $r2.<org.jdom2.output.support.FormatStack: org.jdom2.output.Format$TextMode getTextMode()>();

     label12:
        $r6 = <org.jdom2.Namespace: org.jdom2.Namespace XML_NAMESPACE>;

        $r10 = virtualinvoke $r5.<org.jdom2.Element: java.lang.String getAttributeValue(java.lang.String,org.jdom2.Namespace)>("space", $r6);

     label13:
        $r16 = "default";

     label14:
        $z0 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r10);

     label15:
        if $z0 == 0 goto label49;

     label16:
        $r15 = virtualinvoke $r2.<org.jdom2.output.support.FormatStack: org.jdom2.output.Format$TextMode getDefaultMode()>();

     label17:
        virtualinvoke $r2.<org.jdom2.output.support.FormatStack: void push()>();

     label18:
        virtualinvoke $r2.<org.jdom2.output.support.FormatStack: void setTextMode(org.jdom2.output.Format$TextMode)>($r15);

        $r17 = virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: org.jdom2.output.support.Walker buildWalker(org.jdom2.output.support.FormatStack,java.util.List,boolean)>($r2, $r7, 0);

        $z0 = interfaceinvoke $r17.<org.jdom2.output.support.Walker: boolean hasNext()>();

     label19:
        if $z0 == 0 goto label32;

     label20:
        $z0 = interfaceinvoke $r17.<org.jdom2.output.support.Walker: boolean isAllText()>();

     label21:
        if $z0 != 0 goto label26;

     label22:
        $r10 = virtualinvoke $r2.<org.jdom2.output.support.FormatStack: java.lang.String getPadBetween()>();

     label23:
        if $r10 == null goto label26;

     label24:
        $r10 = virtualinvoke $r2.<org.jdom2.output.support.FormatStack: java.lang.String getPadBetween()>();

        $r25 = new org.jdom2.Text;

     label25:
        specialinvoke $r25.<org.jdom2.Text: void <init>(java.lang.String)>($r10);

        virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: void printText(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,javax.xml.stream.XMLEventFactory,org.jdom2.Text)>($r1, $r2, $r4, $r25);

     label26:
        virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: void printContent(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,org.jdom2.util.NamespaceStack,javax.xml.stream.XMLEventFactory,org.jdom2.output.support.Walker)>($r1, $r2, $r3, $r4, $r17);

        $z0 = interfaceinvoke $r17.<org.jdom2.output.support.Walker: boolean isAllText()>();

     label27:
        if $z0 != 0 goto label32;

     label28:
        $r10 = virtualinvoke $r2.<org.jdom2.output.support.FormatStack: java.lang.String getPadLast()>();

     label29:
        if $r10 == null goto label32;

     label30:
        $r10 = virtualinvoke $r2.<org.jdom2.output.support.FormatStack: java.lang.String getPadLast()>();

        $r25 = new org.jdom2.Text;

     label31:
        specialinvoke $r25.<org.jdom2.Text: void <init>(java.lang.String)>($r10);

        virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: void printText(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,javax.xml.stream.XMLEventFactory,org.jdom2.Text)>($r1, $r2, $r4, $r25);

     label32:
        virtualinvoke $r2.<org.jdom2.output.support.FormatStack: void pop()>();

     label33:
        $r10 = virtualinvoke $r5.<org.jdom2.Element: java.lang.String getNamespacePrefix()>();

        $r16 = virtualinvoke $r5.<org.jdom2.Element: java.lang.String getNamespaceURI()>();

        $r19 = virtualinvoke $r5.<org.jdom2.Element: java.lang.String getName()>();

        $r24 = new org.jdom2.output.support.AbstractStAXEventProcessor$NSIterator;

     label34:
        $r13 = virtualinvoke $r3.<org.jdom2.util.NamespaceStack: java.lang.Iterable addedReverse()>();

        $r8 = interfaceinvoke $r13.<java.lang.Iterable: java.util.Iterator iterator()>();

        specialinvoke $r24.<org.jdom2.output.support.AbstractStAXEventProcessor$NSIterator: void <init>(java.util.Iterator,javax.xml.stream.XMLEventFactory)>($r8, $r4);

        $r20 = virtualinvoke $r4.<javax.xml.stream.XMLEventFactory: javax.xml.stream.events.EndElement createEndElement(java.lang.String,java.lang.String,java.lang.String,java.util.Iterator)>($r10, $r16, $r19, $r24);

        $r26 = (javax.xml.stream.events.XMLEvent) $r20;

        interfaceinvoke $r1.<javax.xml.stream.util.XMLEventConsumer: void add(javax.xml.stream.events.XMLEvent)>($r26);

     label35:
        virtualinvoke $r3.<org.jdom2.util.NamespaceStack: void pop()>();

        return;

     label36:
        $r8 = null;

        goto label04;

     label37:
        $r10 = "";

     label38:
        $r16 = virtualinvoke $r6.<org.jdom2.Namespace: java.lang.String getPrefix()>();

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r16);

     label39:
        if $z0 == 0 goto label45;

     label40:
        $r10 = virtualinvoke $r6.<org.jdom2.Namespace: java.lang.String getURI()>();

        $r16 = virtualinvoke $r5.<org.jdom2.Element: java.lang.String getName()>();

        $r23 = new org.jdom2.output.support.AbstractStAXEventProcessor$AttIterator;

     label41:
        $z0 = virtualinvoke $r2.<org.jdom2.output.support.FormatStack: boolean isSpecifiedAttributesOnly()>();

        specialinvoke $r23.<org.jdom2.output.support.AbstractStAXEventProcessor$AttIterator: void <init>(java.util.Iterator,javax.xml.stream.XMLEventFactory,boolean)>($r8, $r4, $z0);

        $r24 = new org.jdom2.output.support.AbstractStAXEventProcessor$NSIterator;

     label42:
        $r13 = virtualinvoke $r3.<org.jdom2.util.NamespaceStack: java.lang.Iterable addedForward()>();

        $r8 = interfaceinvoke $r13.<java.lang.Iterable: java.util.Iterator iterator()>();

        specialinvoke $r24.<org.jdom2.output.support.AbstractStAXEventProcessor$NSIterator: void <init>(java.util.Iterator,javax.xml.stream.XMLEventFactory)>($r8, $r4);

        $r14 = virtualinvoke $r4.<javax.xml.stream.XMLEventFactory: javax.xml.stream.events.StartElement createStartElement(java.lang.String,java.lang.String,java.lang.String,java.util.Iterator,java.util.Iterator)>("", $r10, $r16, $r23, $r24);

        $r26 = (javax.xml.stream.events.XMLEvent) $r14;

        interfaceinvoke $r1.<javax.xml.stream.util.XMLEventConsumer: void add(javax.xml.stream.events.XMLEvent)>($r26);

     label43:
        goto label09;

     label44:
        $r21 := @caughtexception;

        virtualinvoke $r3.<org.jdom2.util.NamespaceStack: void pop()>();

        throw $r21;

     label45:
        $r10 = virtualinvoke $r6.<org.jdom2.Namespace: java.lang.String getPrefix()>();

        $r16 = virtualinvoke $r6.<org.jdom2.Namespace: java.lang.String getURI()>();

        $r19 = virtualinvoke $r5.<org.jdom2.Element: java.lang.String getName()>();

        $r23 = new org.jdom2.output.support.AbstractStAXEventProcessor$AttIterator;

     label46:
        $z0 = virtualinvoke $r2.<org.jdom2.output.support.FormatStack: boolean isSpecifiedAttributesOnly()>();

        specialinvoke $r23.<org.jdom2.output.support.AbstractStAXEventProcessor$AttIterator: void <init>(java.util.Iterator,javax.xml.stream.XMLEventFactory,boolean)>($r8, $r4, $z0);

        $r24 = new org.jdom2.output.support.AbstractStAXEventProcessor$NSIterator;

     label47:
        $r13 = virtualinvoke $r3.<org.jdom2.util.NamespaceStack: java.lang.Iterable addedForward()>();

        $r8 = interfaceinvoke $r13.<java.lang.Iterable: java.util.Iterator iterator()>();

        specialinvoke $r24.<org.jdom2.output.support.AbstractStAXEventProcessor$NSIterator: void <init>(java.util.Iterator,javax.xml.stream.XMLEventFactory)>($r8, $r4);

        $r14 = virtualinvoke $r4.<javax.xml.stream.XMLEventFactory: javax.xml.stream.events.StartElement createStartElement(java.lang.String,java.lang.String,java.lang.String,java.util.Iterator,java.util.Iterator)>($r10, $r16, $r19, $r23, $r24);

        $r26 = (javax.xml.stream.events.XMLEvent) $r14;

        interfaceinvoke $r1.<javax.xml.stream.util.XMLEventConsumer: void add(javax.xml.stream.events.XMLEvent)>($r26);

     label48:
        goto label09;

     label49:
        $r16 = "preserve";

     label50:
        $z0 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r10);

     label51:
        if $z0 == 0 goto label17;

     label52:
        $r15 = <org.jdom2.output.Format$TextMode: org.jdom2.output.Format$TextMode PRESERVE>;

     label53:
        goto label17;

     label54:
        $r22 := @caughtexception;

     label55:
        virtualinvoke $r2.<org.jdom2.output.support.FormatStack: void pop()>();

        throw $r22;

     label56:
        nop;

        catch java.lang.Throwable from label01 to label02 with label44;
        catch java.lang.Throwable from label03 to label04 with label44;
        catch java.lang.Throwable from label04 to label05 with label44;
        catch java.lang.Throwable from label06 to label07 with label44;
        catch java.lang.Throwable from label07 to label08 with label44;
        catch java.lang.Throwable from label08 to label10 with label44;
        catch java.lang.Throwable from label11 to label12 with label44;
        catch java.lang.Throwable from label12 to label13 with label44;
        catch java.lang.Throwable from label14 to label15 with label44;
        catch java.lang.Throwable from label16 to label17 with label44;
        catch java.lang.Throwable from label17 to label18 with label44;
        catch java.lang.Throwable from label18 to label19 with label54;
        catch java.lang.Throwable from label20 to label21 with label54;
        catch java.lang.Throwable from label22 to label23 with label54;
        catch java.lang.Throwable from label24 to label25 with label54;
        catch java.lang.Throwable from label25 to label27 with label54;
        catch java.lang.Throwable from label28 to label29 with label54;
        catch java.lang.Throwable from label30 to label31 with label54;
        catch java.lang.Throwable from label31 to label32 with label54;
        catch java.lang.Throwable from label32 to label34 with label44;
        catch java.lang.Throwable from label34 to label35 with label44;
        catch java.lang.Throwable from label38 to label39 with label44;
        catch java.lang.Throwable from label40 to label41 with label44;
        catch java.lang.Throwable from label41 to label42 with label44;
        catch java.lang.Throwable from label42 to label43 with label44;
        catch java.lang.Throwable from label45 to label46 with label44;
        catch java.lang.Throwable from label46 to label47 with label44;
        catch java.lang.Throwable from label47 to label48 with label44;
        catch java.lang.Throwable from label50 to label51 with label44;
        catch java.lang.Throwable from label52 to label53 with label44;
        catch java.lang.Throwable from label55 to label56 with label44;
    }
    protected void printEntityRef(javax.xml.stream.util.XMLEventConsumer, org.jdom2.output.support.FormatStack, javax.xml.stream.XMLEventFactory, org.jdom2.EntityRef) throws javax.xml.stream.XMLStreamException
    {
        org.jdom2.output.support.AbstractStAXEventProcessor r0;
        javax.xml.stream.util.XMLEventConsumer $r1;
        org.jdom2.output.support.FormatStack $r2;
        javax.xml.stream.XMLEventFactory $r3;
        org.jdom2.EntityRef $r4;
        java.lang.String $r5;
        javax.xml.stream.events.EntityReference $r6;
        javax.xml.stream.events.XMLEvent $r7;

        r0 := @this: org.jdom2.output.support.AbstractStAXEventProcessor;

        $r1 := @parameter0: javax.xml.stream.util.XMLEventConsumer;

        $r2 := @parameter1: org.jdom2.output.support.FormatStack;

        $r3 := @parameter2: javax.xml.stream.XMLEventFactory;

        $r4 := @parameter3: org.jdom2.EntityRef;

        $r5 = virtualinvoke $r4.<org.jdom2.EntityRef: java.lang.String getName()>();

        $r6 = virtualinvoke $r3.<javax.xml.stream.XMLEventFactory: javax.xml.stream.events.EntityReference createEntityReference(java.lang.String,javax.xml.stream.events.EntityDeclaration)>($r5, null);

        $r7 = (javax.xml.stream.events.XMLEvent) $r6;

        interfaceinvoke $r1.<javax.xml.stream.util.XMLEventConsumer: void add(javax.xml.stream.events.XMLEvent)>($r7);

        return;
    }
    protected void printProcessingInstruction(javax.xml.stream.util.XMLEventConsumer, org.jdom2.output.support.FormatStack, javax.xml.stream.XMLEventFactory, org.jdom2.ProcessingInstruction) throws javax.xml.stream.XMLStreamException
    {
        org.jdom2.output.support.AbstractStAXEventProcessor r0;
        javax.xml.stream.util.XMLEventConsumer $r1;
        org.jdom2.output.support.FormatStack $r2;
        javax.xml.stream.XMLEventFactory $r3;
        org.jdom2.ProcessingInstruction $r4;
        java.lang.String $r5, $r6, $r7;
        int $i0;
        javax.xml.stream.events.ProcessingInstruction $r8;
        javax.xml.stream.events.XMLEvent $r9;

        r0 := @this: org.jdom2.output.support.AbstractStAXEventProcessor;

        $r1 := @parameter0: javax.xml.stream.util.XMLEventConsumer;

        $r2 := @parameter1: org.jdom2.output.support.FormatStack;

        $r3 := @parameter2: javax.xml.stream.XMLEventFactory;

        $r4 := @parameter3: org.jdom2.ProcessingInstruction;

        $r5 = virtualinvoke $r4.<org.jdom2.ProcessingInstruction: java.lang.String getTarget()>();

        $r6 = virtualinvoke $r4.<org.jdom2.ProcessingInstruction: java.lang.String getData()>();

        if $r6 == null goto label1;

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r8 = virtualinvoke $r3.<javax.xml.stream.XMLEventFactory: javax.xml.stream.events.ProcessingInstruction createProcessingInstruction(java.lang.String,java.lang.String)>($r5, $r6);

        $r9 = (javax.xml.stream.events.XMLEvent) $r8;

        interfaceinvoke $r1.<javax.xml.stream.util.XMLEventConsumer: void add(javax.xml.stream.events.XMLEvent)>($r9);

        return;

     label1:
        $r8 = virtualinvoke $r3.<javax.xml.stream.XMLEventFactory: javax.xml.stream.events.ProcessingInstruction createProcessingInstruction(java.lang.String,java.lang.String)>($r5, "");

        $r9 = (javax.xml.stream.events.XMLEvent) $r8;

        interfaceinvoke $r1.<javax.xml.stream.util.XMLEventConsumer: void add(javax.xml.stream.events.XMLEvent)>($r9);

        return;
    }
    protected void printText(javax.xml.stream.util.XMLEventConsumer, org.jdom2.output.support.FormatStack, javax.xml.stream.XMLEventFactory, org.jdom2.Text) throws javax.xml.stream.XMLStreamException
    {
        org.jdom2.output.support.AbstractStAXEventProcessor r0;
        javax.xml.stream.util.XMLEventConsumer $r1;
        org.jdom2.output.support.FormatStack $r2;
        javax.xml.stream.XMLEventFactory $r3;
        org.jdom2.Text $r4;
        java.lang.String $r5;
        javax.xml.stream.events.Characters $r6;
        javax.xml.stream.events.XMLEvent $r7;

        r0 := @this: org.jdom2.output.support.AbstractStAXEventProcessor;

        $r1 := @parameter0: javax.xml.stream.util.XMLEventConsumer;

        $r2 := @parameter1: org.jdom2.output.support.FormatStack;

        $r3 := @parameter2: javax.xml.stream.XMLEventFactory;

        $r4 := @parameter3: org.jdom2.Text;

        $r5 = virtualinvoke $r4.<org.jdom2.Text: java.lang.String getText()>();

        $r6 = virtualinvoke $r3.<javax.xml.stream.XMLEventFactory: javax.xml.stream.events.Characters createCharacters(java.lang.String)>($r5);

        $r7 = (javax.xml.stream.events.XMLEvent) $r6;

        interfaceinvoke $r1.<javax.xml.stream.util.XMLEventConsumer: void add(javax.xml.stream.events.XMLEvent)>($r7);

        return;
    }
    public void process(javax.xml.stream.util.XMLEventConsumer, org.jdom2.output.Format, javax.xml.stream.XMLEventFactory, java.util.List) throws javax.xml.stream.XMLStreamException
    {
        org.jdom2.output.support.AbstractStAXEventProcessor r0;
        javax.xml.stream.util.XMLEventConsumer $r1;
        org.jdom2.output.Format $r2;
        javax.xml.stream.XMLEventFactory $r3;
        java.util.List r4;
        org.jdom2.output.support.FormatStack $r5;
        org.jdom2.util.NamespaceStack $r6;
        org.jdom2.output.support.Walker $r7;

        r0 := @this: org.jdom2.output.support.AbstractStAXEventProcessor;

        $r1 := @parameter0: javax.xml.stream.util.XMLEventConsumer;

        $r2 := @parameter1: org.jdom2.output.Format;

        $r3 := @parameter2: javax.xml.stream.XMLEventFactory;

        r4 := @parameter3: java.util.List;

        $r5 = new org.jdom2.output.support.FormatStack;

        specialinvoke $r5.<org.jdom2.output.support.FormatStack: void <init>(org.jdom2.output.Format)>($r2);

        $r7 = virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: org.jdom2.output.support.Walker buildWalker(org.jdom2.output.support.FormatStack,java.util.List,boolean)>($r5, r4, 0);

        $r5 = new org.jdom2.output.support.FormatStack;

        specialinvoke $r5.<org.jdom2.output.support.FormatStack: void <init>(org.jdom2.output.Format)>($r2);

        $r6 = new org.jdom2.util.NamespaceStack;

        specialinvoke $r6.<org.jdom2.util.NamespaceStack: void <init>()>();

        virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: void printContent(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,org.jdom2.util.NamespaceStack,javax.xml.stream.XMLEventFactory,org.jdom2.output.support.Walker)>($r1, $r5, $r6, $r3, $r7);

        return;
    }
    public void process(javax.xml.stream.util.XMLEventConsumer, org.jdom2.output.Format, javax.xml.stream.XMLEventFactory, org.jdom2.CDATA) throws javax.xml.stream.XMLStreamException
    {
        org.jdom2.output.support.AbstractStAXEventProcessor r0;
        javax.xml.stream.util.XMLEventConsumer $r1;
        org.jdom2.output.Format $r2;
        javax.xml.stream.XMLEventFactory $r3;
        org.jdom2.CDATA $r4;
        org.jdom2.output.support.FormatStack r5;
        java.util.List $r6;
        org.jdom2.output.support.Walker $r7;
        boolean $z0;
        org.jdom2.Content $r8;
        java.lang.String $r9;
        org.jdom2.Content$CType $r10, $r11;

        r0 := @this: org.jdom2.output.support.AbstractStAXEventProcessor;

        $r1 := @parameter0: javax.xml.stream.util.XMLEventConsumer;

        $r2 := @parameter1: org.jdom2.output.Format;

        $r3 := @parameter2: javax.xml.stream.XMLEventFactory;

        $r4 := @parameter3: org.jdom2.CDATA;

        $r6 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r4);

        r5 = new org.jdom2.output.support.FormatStack;

        specialinvoke r5.<org.jdom2.output.support.FormatStack: void <init>(org.jdom2.output.Format)>($r2);

        $r7 = virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: org.jdom2.output.support.Walker buildWalker(org.jdom2.output.support.FormatStack,java.util.List,boolean)>(r5, $r6, 0);

        $z0 = interfaceinvoke $r7.<org.jdom2.output.support.Walker: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r7.<org.jdom2.output.support.Walker: org.jdom2.Content next()>();

        if $r8 != null goto label1;

        $r4 = new org.jdom2.CDATA;

        $r9 = interfaceinvoke $r7.<org.jdom2.output.support.Walker: java.lang.String text()>();

        specialinvoke $r4.<org.jdom2.CDATA: void <init>(java.lang.String)>($r9);

        virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: void printCDATA(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,javax.xml.stream.XMLEventFactory,org.jdom2.CDATA)>($r1, r5, $r3, $r4);

        return;

     label1:
        $r10 = virtualinvoke $r8.<org.jdom2.Content: org.jdom2.Content$CType getCType()>();

        $r11 = <org.jdom2.Content$CType: org.jdom2.Content$CType CDATA>;

        if $r10 != $r11 goto label2;

        $r4 = (org.jdom2.CDATA) $r8;

        virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: void printCDATA(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,javax.xml.stream.XMLEventFactory,org.jdom2.CDATA)>($r1, r5, $r3, $r4);

     label2:
        return;
    }
    public void process(javax.xml.stream.util.XMLEventConsumer, org.jdom2.output.Format, javax.xml.stream.XMLEventFactory, org.jdom2.Comment) throws javax.xml.stream.XMLStreamException
    {
        org.jdom2.output.support.AbstractStAXEventProcessor r0;
        javax.xml.stream.util.XMLEventConsumer $r1;
        org.jdom2.output.Format $r2;
        javax.xml.stream.XMLEventFactory $r3;
        org.jdom2.Comment $r4;
        org.jdom2.output.support.FormatStack $r5;

        r0 := @this: org.jdom2.output.support.AbstractStAXEventProcessor;

        $r1 := @parameter0: javax.xml.stream.util.XMLEventConsumer;

        $r2 := @parameter1: org.jdom2.output.Format;

        $r3 := @parameter2: javax.xml.stream.XMLEventFactory;

        $r4 := @parameter3: org.jdom2.Comment;

        $r5 = new org.jdom2.output.support.FormatStack;

        specialinvoke $r5.<org.jdom2.output.support.FormatStack: void <init>(org.jdom2.output.Format)>($r2);

        virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: void printComment(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,javax.xml.stream.XMLEventFactory,org.jdom2.Comment)>($r1, $r5, $r3, $r4);

        return;
    }
    public void process(javax.xml.stream.util.XMLEventConsumer, org.jdom2.output.Format, javax.xml.stream.XMLEventFactory, org.jdom2.DocType) throws javax.xml.stream.XMLStreamException
    {
        org.jdom2.output.support.AbstractStAXEventProcessor r0;
        javax.xml.stream.util.XMLEventConsumer $r1;
        org.jdom2.output.Format $r2;
        javax.xml.stream.XMLEventFactory $r3;
        org.jdom2.DocType $r4;
        org.jdom2.output.support.FormatStack $r5;

        r0 := @this: org.jdom2.output.support.AbstractStAXEventProcessor;

        $r1 := @parameter0: javax.xml.stream.util.XMLEventConsumer;

        $r2 := @parameter1: org.jdom2.output.Format;

        $r3 := @parameter2: javax.xml.stream.XMLEventFactory;

        $r4 := @parameter3: org.jdom2.DocType;

        $r5 = new org.jdom2.output.support.FormatStack;

        specialinvoke $r5.<org.jdom2.output.support.FormatStack: void <init>(org.jdom2.output.Format)>($r2);

        virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: void printDocType(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,javax.xml.stream.XMLEventFactory,org.jdom2.DocType)>($r1, $r5, $r3, $r4);

        return;
    }
    public void process(javax.xml.stream.util.XMLEventConsumer, org.jdom2.output.Format, javax.xml.stream.XMLEventFactory, org.jdom2.Document) throws javax.xml.stream.XMLStreamException
    {
        org.jdom2.output.support.AbstractStAXEventProcessor r0;
        javax.xml.stream.util.XMLEventConsumer $r1;
        org.jdom2.output.Format $r2;
        javax.xml.stream.XMLEventFactory $r3;
        org.jdom2.Document $r4;
        org.jdom2.output.support.FormatStack $r5;
        org.jdom2.util.NamespaceStack $r6;

        r0 := @this: org.jdom2.output.support.AbstractStAXEventProcessor;

        $r1 := @parameter0: javax.xml.stream.util.XMLEventConsumer;

        $r2 := @parameter1: org.jdom2.output.Format;

        $r3 := @parameter2: javax.xml.stream.XMLEventFactory;

        $r4 := @parameter3: org.jdom2.Document;

        $r5 = new org.jdom2.output.support.FormatStack;

        specialinvoke $r5.<org.jdom2.output.support.FormatStack: void <init>(org.jdom2.output.Format)>($r2);

        $r6 = new org.jdom2.util.NamespaceStack;

        specialinvoke $r6.<org.jdom2.util.NamespaceStack: void <init>()>();

        virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: void printDocument(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,org.jdom2.util.NamespaceStack,javax.xml.stream.XMLEventFactory,org.jdom2.Document)>($r1, $r5, $r6, $r3, $r4);

        return;
    }
    public void process(javax.xml.stream.util.XMLEventConsumer, org.jdom2.output.Format, javax.xml.stream.XMLEventFactory, org.jdom2.Element) throws javax.xml.stream.XMLStreamException
    {
        org.jdom2.output.support.AbstractStAXEventProcessor r0;
        javax.xml.stream.util.XMLEventConsumer $r1;
        org.jdom2.output.Format $r2;
        javax.xml.stream.XMLEventFactory $r3;
        org.jdom2.Element $r4;
        org.jdom2.output.support.FormatStack $r5;
        org.jdom2.util.NamespaceStack $r6;

        r0 := @this: org.jdom2.output.support.AbstractStAXEventProcessor;

        $r1 := @parameter0: javax.xml.stream.util.XMLEventConsumer;

        $r2 := @parameter1: org.jdom2.output.Format;

        $r3 := @parameter2: javax.xml.stream.XMLEventFactory;

        $r4 := @parameter3: org.jdom2.Element;

        $r5 = new org.jdom2.output.support.FormatStack;

        specialinvoke $r5.<org.jdom2.output.support.FormatStack: void <init>(org.jdom2.output.Format)>($r2);

        $r6 = new org.jdom2.util.NamespaceStack;

        specialinvoke $r6.<org.jdom2.util.NamespaceStack: void <init>()>();

        virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: void printElement(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,org.jdom2.util.NamespaceStack,javax.xml.stream.XMLEventFactory,org.jdom2.Element)>($r1, $r5, $r6, $r3, $r4);

        return;
    }
    public void process(javax.xml.stream.util.XMLEventConsumer, org.jdom2.output.Format, javax.xml.stream.XMLEventFactory, org.jdom2.EntityRef) throws javax.xml.stream.XMLStreamException
    {
        org.jdom2.output.support.AbstractStAXEventProcessor r0;
        javax.xml.stream.util.XMLEventConsumer $r1;
        org.jdom2.output.Format $r2;
        javax.xml.stream.XMLEventFactory $r3;
        org.jdom2.EntityRef $r4;
        org.jdom2.output.support.FormatStack $r5;

        r0 := @this: org.jdom2.output.support.AbstractStAXEventProcessor;

        $r1 := @parameter0: javax.xml.stream.util.XMLEventConsumer;

        $r2 := @parameter1: org.jdom2.output.Format;

        $r3 := @parameter2: javax.xml.stream.XMLEventFactory;

        $r4 := @parameter3: org.jdom2.EntityRef;

        $r5 = new org.jdom2.output.support.FormatStack;

        specialinvoke $r5.<org.jdom2.output.support.FormatStack: void <init>(org.jdom2.output.Format)>($r2);

        virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: void printEntityRef(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,javax.xml.stream.XMLEventFactory,org.jdom2.EntityRef)>($r1, $r5, $r3, $r4);

        return;
    }
    public void process(javax.xml.stream.util.XMLEventConsumer, org.jdom2.output.Format, javax.xml.stream.XMLEventFactory, org.jdom2.ProcessingInstruction) throws javax.xml.stream.XMLStreamException
    {
        org.jdom2.output.support.AbstractStAXEventProcessor r0;
        javax.xml.stream.util.XMLEventConsumer $r1;
        org.jdom2.output.Format $r2;
        javax.xml.stream.XMLEventFactory $r3;
        org.jdom2.ProcessingInstruction $r4;
        org.jdom2.output.support.FormatStack r5;

        r0 := @this: org.jdom2.output.support.AbstractStAXEventProcessor;

        $r1 := @parameter0: javax.xml.stream.util.XMLEventConsumer;

        $r2 := @parameter1: org.jdom2.output.Format;

        $r3 := @parameter2: javax.xml.stream.XMLEventFactory;

        $r4 := @parameter3: org.jdom2.ProcessingInstruction;

        r5 = new org.jdom2.output.support.FormatStack;

        specialinvoke r5.<org.jdom2.output.support.FormatStack: void <init>(org.jdom2.output.Format)>($r2);

        virtualinvoke r5.<org.jdom2.output.support.FormatStack: void setIgnoreTrAXEscapingPIs(boolean)>(1);

        virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: void printProcessingInstruction(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,javax.xml.stream.XMLEventFactory,org.jdom2.ProcessingInstruction)>($r1, r5, $r3, $r4);

        return;
    }
    public void process(javax.xml.stream.util.XMLEventConsumer, org.jdom2.output.Format, javax.xml.stream.XMLEventFactory, org.jdom2.Text) throws javax.xml.stream.XMLStreamException
    {
        org.jdom2.output.support.AbstractStAXEventProcessor r0;
        javax.xml.stream.util.XMLEventConsumer $r1;
        org.jdom2.output.Format $r2;
        javax.xml.stream.XMLEventFactory $r3;
        org.jdom2.Text $r4;
        org.jdom2.output.support.FormatStack r5;
        java.util.List $r6;
        org.jdom2.output.support.Walker $r7;
        boolean $z0;
        org.jdom2.Content $r8;
        java.lang.String $r9;
        org.jdom2.Content$CType $r10, $r11;

        r0 := @this: org.jdom2.output.support.AbstractStAXEventProcessor;

        $r1 := @parameter0: javax.xml.stream.util.XMLEventConsumer;

        $r2 := @parameter1: org.jdom2.output.Format;

        $r3 := @parameter2: javax.xml.stream.XMLEventFactory;

        $r4 := @parameter3: org.jdom2.Text;

        $r6 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r4);

        r5 = new org.jdom2.output.support.FormatStack;

        specialinvoke r5.<org.jdom2.output.support.FormatStack: void <init>(org.jdom2.output.Format)>($r2);

        $r7 = virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: org.jdom2.output.support.Walker buildWalker(org.jdom2.output.support.FormatStack,java.util.List,boolean)>(r5, $r6, 0);

        $z0 = interfaceinvoke $r7.<org.jdom2.output.support.Walker: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r7.<org.jdom2.output.support.Walker: org.jdom2.Content next()>();

        if $r8 != null goto label1;

        $r4 = new org.jdom2.Text;

        $r9 = interfaceinvoke $r7.<org.jdom2.output.support.Walker: java.lang.String text()>();

        specialinvoke $r4.<org.jdom2.Text: void <init>(java.lang.String)>($r9);

        virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: void printText(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,javax.xml.stream.XMLEventFactory,org.jdom2.Text)>($r1, r5, $r3, $r4);

        return;

     label1:
        $r10 = virtualinvoke $r8.<org.jdom2.Content: org.jdom2.Content$CType getCType()>();

        $r11 = <org.jdom2.Content$CType: org.jdom2.Content$CType Text>;

        if $r10 != $r11 goto label2;

        $r4 = (org.jdom2.Text) $r8;

        virtualinvoke r0.<org.jdom2.output.support.AbstractStAXEventProcessor: void printText(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,javax.xml.stream.XMLEventFactory,org.jdom2.Text)>($r1, r5, $r3, $r4);

     label2:
        return;
    }
