org.jdom2.output.support.FormatStack extends java.lang.Object
private int capacity
private final org.jdom2.output.Format$TextMode defaultMode
private int depth
private final java.lang.String encoding
private boolean[] escapeOutput
private final org.jdom2.output.EscapeStrategy escapeStrategy
private final boolean expandEmptyElements
private boolean[] ignoreTrAXEscapingPIs
private final java.lang.String indent
private java.lang.String[] levelEOL
private java.lang.String[] levelEOLIndent
private java.lang.String[] levelIndent
private final java.lang.String lineSeparator
private org.jdom2.output.Format$TextMode[] mode
private final boolean omitDeclaration
private final boolean omitEncoding
private final boolean specifiedAttributesOnly
private java.lang.String[] termEOLIndent
    public void <init>(org.jdom2.output.Format)
    {
        org.jdom2.output.support.FormatStack r0;
        org.jdom2.output.Format $r1;
        int $i0, $i1;
        java.lang.String $r2, $r6;
        java.lang.String[] $r3, $r9;
        boolean[] $r4;
        org.jdom2.output.Format$TextMode[] $r5;
        boolean $z0;
        org.jdom2.output.EscapeStrategy $r7;
        org.jdom2.output.Format$TextMode $r8;

        r0 := @this: org.jdom2.output.support.FormatStack;

        $r1 := @parameter0: org.jdom2.output.Format;

        $r2 = null;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.jdom2.output.support.FormatStack: int capacity> = 16;

        r0.<org.jdom2.output.support.FormatStack: int depth> = 0;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int capacity>;

        $r3 = newarray (java.lang.String)[$i1];

        r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelIndent> = $r3;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int capacity>;

        $r3 = newarray (java.lang.String)[$i1];

        r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelEOL> = $r3;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int capacity>;

        $r3 = newarray (java.lang.String)[$i1];

        r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelEOLIndent> = $r3;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int capacity>;

        $r3 = newarray (java.lang.String)[$i1];

        r0.<org.jdom2.output.support.FormatStack: java.lang.String[] termEOLIndent> = $r3;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int capacity>;

        $r4 = newarray (boolean)[$i1];

        r0.<org.jdom2.output.support.FormatStack: boolean[] ignoreTrAXEscapingPIs> = $r4;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int capacity>;

        $r5 = newarray (org.jdom2.output.Format$TextMode)[$i1];

        r0.<org.jdom2.output.support.FormatStack: org.jdom2.output.Format$TextMode[] mode> = $r5;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int capacity>;

        $r4 = newarray (boolean)[$i1];

        r0.<org.jdom2.output.support.FormatStack: boolean[] escapeOutput> = $r4;

        $r6 = virtualinvoke $r1.<org.jdom2.output.Format: java.lang.String getIndent()>();

        r0.<org.jdom2.output.support.FormatStack: java.lang.String indent> = $r6;

        $r6 = virtualinvoke $r1.<org.jdom2.output.Format: java.lang.String getLineSeparator()>();

        r0.<org.jdom2.output.support.FormatStack: java.lang.String lineSeparator> = $r6;

        $r6 = virtualinvoke $r1.<org.jdom2.output.Format: java.lang.String getEncoding()>();

        r0.<org.jdom2.output.support.FormatStack: java.lang.String encoding> = $r6;

        $z0 = virtualinvoke $r1.<org.jdom2.output.Format: boolean getOmitDeclaration()>();

        r0.<org.jdom2.output.support.FormatStack: boolean omitDeclaration> = $z0;

        $z0 = virtualinvoke $r1.<org.jdom2.output.Format: boolean getOmitEncoding()>();

        r0.<org.jdom2.output.support.FormatStack: boolean omitEncoding> = $z0;

        $z0 = virtualinvoke $r1.<org.jdom2.output.Format: boolean getExpandEmptyElements()>();

        r0.<org.jdom2.output.support.FormatStack: boolean expandEmptyElements> = $z0;

        $r7 = virtualinvoke $r1.<org.jdom2.output.Format: org.jdom2.output.EscapeStrategy getEscapeStrategy()>();

        r0.<org.jdom2.output.support.FormatStack: org.jdom2.output.EscapeStrategy escapeStrategy> = $r7;

        $r8 = virtualinvoke $r1.<org.jdom2.output.Format: org.jdom2.output.Format$TextMode getTextMode()>();

        r0.<org.jdom2.output.support.FormatStack: org.jdom2.output.Format$TextMode defaultMode> = $r8;

        $z0 = virtualinvoke $r1.<org.jdom2.output.Format: boolean isSpecifiedAttributesOnly()>();

        r0.<org.jdom2.output.support.FormatStack: boolean specifiedAttributesOnly> = $z0;

        $r3 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelIndent>;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r6 = virtualinvoke $r1.<org.jdom2.output.Format: java.lang.String getIndent()>();

        if $r6 != null goto label3;

        $r6 = null;

     label1:
        $r3[$i1] = $r6;

        $r3 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelEOL>;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r6 = virtualinvoke $r1.<org.jdom2.output.Format: java.lang.String getLineSeparator()>();

        $r3[$i1] = $r6;

        $r3 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelEOLIndent>;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r9 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelIndent>;

        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r6 = $r9[$i0];

        if $r6 != null goto label4;

     label2:
        $r3[$i1] = $r2;

        $r3 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] termEOLIndent>;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r9 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelEOLIndent>;

        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r2 = $r9[$i0];

        $r3[$i1] = $r2;

        $r4 = r0.<org.jdom2.output.support.FormatStack: boolean[] ignoreTrAXEscapingPIs>;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $z0 = virtualinvoke $r1.<org.jdom2.output.Format: boolean getIgnoreTrAXEscapingPIs()>();

        $r4[$i1] = $z0;

        $r5 = r0.<org.jdom2.output.support.FormatStack: org.jdom2.output.Format$TextMode[] mode>;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r8 = virtualinvoke $r1.<org.jdom2.output.Format: org.jdom2.output.Format$TextMode getTextMode()>();

        $r5[$i1] = $r8;

        $r4 = r0.<org.jdom2.output.support.FormatStack: boolean[] escapeOutput>;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r4[$i1] = 1;

        return;

     label3:
        $r6 = "";

        goto label1;

     label4:
        $r9 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelEOL>;

        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r2 = $r9[$i0];

        goto label2;
    }
    private final void resetReusableIndents()
    {
        org.jdom2.output.support.FormatStack r0;
        int $i0, $i1;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.jdom2.output.support.FormatStack;

        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $i0 = $i0 + 1;

     label1:
        $r1 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelIndent>;

        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label2;

        $r1 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelIndent>;

        $r2 = $r1[$i0];

        if $r2 == null goto label2;

        $r1 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelIndent>;

        $r1[$i0] = null;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }
    public org.jdom2.output.Format$TextMode getDefaultMode()
    {
        org.jdom2.output.support.FormatStack r0;
        org.jdom2.output.Format$TextMode r1;

        r0 := @this: org.jdom2.output.support.FormatStack;

        r1 = r0.<org.jdom2.output.support.FormatStack: org.jdom2.output.Format$TextMode defaultMode>;

        return r1;
    }
    public java.lang.String getEncoding()
    {
        org.jdom2.output.support.FormatStack r0;
        java.lang.String r1;

        r0 := @this: org.jdom2.output.support.FormatStack;

        r1 = r0.<org.jdom2.output.support.FormatStack: java.lang.String encoding>;

        return r1;
    }
    public boolean getEscapeOutput()
    {
        org.jdom2.output.support.FormatStack r0;
        int $i0;
        boolean[] $r1;
        boolean $z0;

        r0 := @this: org.jdom2.output.support.FormatStack;

        $r1 = r0.<org.jdom2.output.support.FormatStack: boolean[] escapeOutput>;

        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $z0 = $r1[$i0];

        return $z0;
    }
    public org.jdom2.output.EscapeStrategy getEscapeStrategy()
    {
        org.jdom2.output.support.FormatStack r0;
        org.jdom2.output.EscapeStrategy r1;

        r0 := @this: org.jdom2.output.support.FormatStack;

        r1 = r0.<org.jdom2.output.support.FormatStack: org.jdom2.output.EscapeStrategy escapeStrategy>;

        return r1;
    }
    public java.lang.String getIndent()
    {
        org.jdom2.output.support.FormatStack r0;
        java.lang.String r1;

        r0 := @this: org.jdom2.output.support.FormatStack;

        r1 = r0.<org.jdom2.output.support.FormatStack: java.lang.String indent>;

        return r1;
    }
    public java.lang.String getLevelEOL()
    {
        org.jdom2.output.support.FormatStack r0;
        int $i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.jdom2.output.support.FormatStack;

        $r1 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelEOL>;

        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r2 = $r1[$i0];

        return $r2;
    }
    public java.lang.String getLevelIndent()
    {
        org.jdom2.output.support.FormatStack r0;
        int $i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.jdom2.output.support.FormatStack;

        $r1 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelIndent>;

        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r2 = $r1[$i0];

        return $r2;
    }
    public java.lang.String getLineSeparator()
    {
        org.jdom2.output.support.FormatStack r0;
        java.lang.String r1;

        r0 := @this: org.jdom2.output.support.FormatStack;

        r1 = r0.<org.jdom2.output.support.FormatStack: java.lang.String lineSeparator>;

        return r1;
    }
    public java.lang.String getPadBetween()
    {
        org.jdom2.output.support.FormatStack r0;
        int $i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.jdom2.output.support.FormatStack;

        $r1 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelEOLIndent>;

        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r2 = $r1[$i0];

        return $r2;
    }
    public java.lang.String getPadLast()
    {
        org.jdom2.output.support.FormatStack r0;
        int $i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.jdom2.output.support.FormatStack;

        $r1 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] termEOLIndent>;

        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r2 = $r1[$i0];

        return $r2;
    }
    public org.jdom2.output.Format$TextMode getTextMode()
    {
        org.jdom2.output.support.FormatStack r0;
        int $i0;
        org.jdom2.output.Format$TextMode[] $r1;
        org.jdom2.output.Format$TextMode $r2;

        r0 := @this: org.jdom2.output.support.FormatStack;

        $r1 = r0.<org.jdom2.output.support.FormatStack: org.jdom2.output.Format$TextMode[] mode>;

        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r2 = $r1[$i0];

        return $r2;
    }
    public boolean isExpandEmptyElements()
    {
        org.jdom2.output.support.FormatStack r0;
        boolean z0;

        r0 := @this: org.jdom2.output.support.FormatStack;

        z0 = r0.<org.jdom2.output.support.FormatStack: boolean expandEmptyElements>;

        return z0;
    }
    public boolean isIgnoreTrAXEscapingPIs()
    {
        org.jdom2.output.support.FormatStack r0;
        int $i0;
        boolean[] $r1;
        boolean $z0;

        r0 := @this: org.jdom2.output.support.FormatStack;

        $r1 = r0.<org.jdom2.output.support.FormatStack: boolean[] ignoreTrAXEscapingPIs>;

        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $z0 = $r1[$i0];

        return $z0;
    }
    public boolean isOmitDeclaration()
    {
        org.jdom2.output.support.FormatStack r0;
        boolean z0;

        r0 := @this: org.jdom2.output.support.FormatStack;

        z0 = r0.<org.jdom2.output.support.FormatStack: boolean omitDeclaration>;

        return z0;
    }
    public boolean isOmitEncoding()
    {
        org.jdom2.output.support.FormatStack r0;
        boolean z0;

        r0 := @this: org.jdom2.output.support.FormatStack;

        z0 = r0.<org.jdom2.output.support.FormatStack: boolean omitEncoding>;

        return z0;
    }
    public boolean isSpecifiedAttributesOnly()
    {
        org.jdom2.output.support.FormatStack r0;
        boolean z0;

        r0 := @this: org.jdom2.output.support.FormatStack;

        z0 = r0.<org.jdom2.output.support.FormatStack: boolean specifiedAttributesOnly>;

        return z0;
    }
    public void pop()
    {
        org.jdom2.output.support.FormatStack r0;
        int $i0;

        r0 := @this: org.jdom2.output.support.FormatStack;

        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $i0 = $i0 + -1;

        r0.<org.jdom2.output.support.FormatStack: int depth> = $i0;

        return;
    }
    public void push()
    {
        org.jdom2.output.support.FormatStack r0;
        int i0, $i1, $i2;
        java.lang.String[] $r1, $r9;
        java.lang.Object[] $r2;
        boolean[] $r3, $r5;
        org.jdom2.output.Format$TextMode[] $r4, $r6;
        boolean $z0;
        org.jdom2.output.Format$TextMode $r7;
        java.lang.String $r8;
        java.lang.StringBuilder $r10;

        r0 := @this: org.jdom2.output.support.FormatStack;

        i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $i1 = i0 + 1;

        r0.<org.jdom2.output.support.FormatStack: int depth> = $i1;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $i2 = r0.<org.jdom2.output.support.FormatStack: int capacity>;

        if $i1 < $i2 goto label1;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int capacity>;

        $i1 = $i1 * 2;

        r0.<org.jdom2.output.support.FormatStack: int capacity> = $i1;

        $r1 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelIndent>;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int capacity>;

        $r2 = staticinvoke <org.jdom2.internal.ArrayCopy: java.lang.Object[] copyOf(java.lang.Object[],int)>($r1, $i1);

        $r1 = (java.lang.String[]) $r2;

        r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelIndent> = $r1;

        $r1 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelEOL>;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int capacity>;

        $r2 = staticinvoke <org.jdom2.internal.ArrayCopy: java.lang.Object[] copyOf(java.lang.Object[],int)>($r1, $i1);

        $r1 = (java.lang.String[]) $r2;

        r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelEOL> = $r1;

        $r1 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelEOLIndent>;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int capacity>;

        $r2 = staticinvoke <org.jdom2.internal.ArrayCopy: java.lang.Object[] copyOf(java.lang.Object[],int)>($r1, $i1);

        $r1 = (java.lang.String[]) $r2;

        r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelEOLIndent> = $r1;

        $r1 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] termEOLIndent>;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int capacity>;

        $r2 = staticinvoke <org.jdom2.internal.ArrayCopy: java.lang.Object[] copyOf(java.lang.Object[],int)>($r1, $i1);

        $r1 = (java.lang.String[]) $r2;

        r0.<org.jdom2.output.support.FormatStack: java.lang.String[] termEOLIndent> = $r1;

        $r3 = r0.<org.jdom2.output.support.FormatStack: boolean[] ignoreTrAXEscapingPIs>;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int capacity>;

        $r3 = staticinvoke <org.jdom2.internal.ArrayCopy: boolean[] copyOf(boolean[],int)>($r3, $i1);

        r0.<org.jdom2.output.support.FormatStack: boolean[] ignoreTrAXEscapingPIs> = $r3;

        $r4 = r0.<org.jdom2.output.support.FormatStack: org.jdom2.output.Format$TextMode[] mode>;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int capacity>;

        $r2 = staticinvoke <org.jdom2.internal.ArrayCopy: java.lang.Object[] copyOf(java.lang.Object[],int)>($r4, $i1);

        $r4 = (org.jdom2.output.Format$TextMode[]) $r2;

        r0.<org.jdom2.output.support.FormatStack: org.jdom2.output.Format$TextMode[] mode> = $r4;

        $r3 = r0.<org.jdom2.output.support.FormatStack: boolean[] escapeOutput>;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int capacity>;

        $r3 = staticinvoke <org.jdom2.internal.ArrayCopy: boolean[] copyOf(boolean[],int)>($r3, $i1);

        r0.<org.jdom2.output.support.FormatStack: boolean[] escapeOutput> = $r3;

     label1:
        $r3 = r0.<org.jdom2.output.support.FormatStack: boolean[] ignoreTrAXEscapingPIs>;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r5 = r0.<org.jdom2.output.support.FormatStack: boolean[] ignoreTrAXEscapingPIs>;

        $z0 = $r5[i0];

        $r3[$i1] = $z0;

        $r4 = r0.<org.jdom2.output.support.FormatStack: org.jdom2.output.Format$TextMode[] mode>;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r6 = r0.<org.jdom2.output.support.FormatStack: org.jdom2.output.Format$TextMode[] mode>;

        $r7 = $r6[i0];

        $r4[$i1] = $r7;

        $r3 = r0.<org.jdom2.output.support.FormatStack: boolean[] escapeOutput>;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r5 = r0.<org.jdom2.output.support.FormatStack: boolean[] escapeOutput>;

        $z0 = $r5[i0];

        $r3[$i1] = $z0;

        $r1 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelIndent>;

        $r8 = $r1[i0];

        if $r8 == null goto label2;

        $r1 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelEOL>;

        $r8 = $r1[i0];

        if $r8 != null goto label3;

     label2:
        $r1 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelIndent>;

        i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r1[i0] = null;

        $r1 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelEOL>;

        i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r1[i0] = null;

        $r1 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelEOLIndent>;

        i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r1[i0] = null;

        $r1 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] termEOLIndent>;

        i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r1[i0] = null;

        return;

     label3:
        $r1 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelIndent>;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r8 = $r1[$i1];

        if $r8 != null goto label4;

        $r1 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelEOL>;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r9 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelEOL>;

        $r8 = $r9[i0];

        $r1[$i1] = $r8;

        $r1 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] termEOLIndent>;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r9 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelEOL>;

        $i2 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r8 = $r9[$i2];

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelIndent>;

        $r8 = $r9[i0];

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1[$i1] = $r8;

        $r1 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelIndent>;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r9 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelIndent>;

        $r8 = $r9[i0];

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = r0.<org.jdom2.output.support.FormatStack: java.lang.String indent>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1[$i1] = $r8;

        $r1 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelEOLIndent>;

        i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r9 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelEOL>;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r8 = $r9[$i1];

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelIndent>;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r8 = $r9[$i1];

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1[i0] = $r8;

     label4:
        return;
    }
    public void setEscapeOutput(boolean)
    {
        org.jdom2.output.support.FormatStack r0;
        boolean $z0;
        boolean[] $r1;
        int $i0;

        r0 := @this: org.jdom2.output.support.FormatStack;

        $z0 := @parameter0: boolean;

        $r1 = r0.<org.jdom2.output.support.FormatStack: boolean[] escapeOutput>;

        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r1[$i0] = $z0;

        return;
    }
    public void setIgnoreTrAXEscapingPIs(boolean)
    {
        org.jdom2.output.support.FormatStack r0;
        boolean $z0;
        boolean[] $r1;
        int $i0;

        r0 := @this: org.jdom2.output.support.FormatStack;

        $z0 := @parameter0: boolean;

        $r1 = r0.<org.jdom2.output.support.FormatStack: boolean[] ignoreTrAXEscapingPIs>;

        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r1[$i0] = $z0;

        return;
    }
    public void setLevelEOL(java.lang.String)
    {
        org.jdom2.output.support.FormatStack r0;
        java.lang.String $r1;
        java.lang.String[] $r2;
        int $i0;

        r0 := @this: org.jdom2.output.support.FormatStack;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelEOL>;

        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r2[$i0] = $r1;

        specialinvoke r0.<org.jdom2.output.support.FormatStack: void resetReusableIndents()>();

        return;
    }
    public void setLevelIndent(java.lang.String)
    {
        org.jdom2.output.support.FormatStack r0;
        java.lang.String $r1, $r4;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;
        java.lang.StringBuilder $r5;

        r0 := @this: org.jdom2.output.support.FormatStack;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelIndent>;

        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r2[$i0] = $r1;

        $r2 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelEOLIndent>;

        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        if $r1 == null goto label1;

        $r3 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelEOL>;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r4 = $r3[$i1];

        if $r4 != null goto label3;

     label1:
        $r1 = null;

     label2:
        $r2[$i0] = $r1;

        specialinvoke r0.<org.jdom2.output.support.FormatStack: void resetReusableIndents()>();

        return;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelEOL>;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r4 = $r3[$i1];

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;
    }
    public void setTextMode(org.jdom2.output.Format$TextMode)
    {
        org.jdom2.output.support.FormatStack r0;
        org.jdom2.output.Format$TextMode $r1, $r4;
        java.lang.StringBuilder r2, $r8;
        int $i0, $i1;
        org.jdom2.output.Format$TextMode[] $r3;
        int[] $r5;
        java.lang.String[] $r6, $r9;
        java.lang.String $r7;

        r0 := @this: org.jdom2.output.support.FormatStack;

        $r1 := @parameter0: org.jdom2.output.Format$TextMode;

        $r3 = r0.<org.jdom2.output.support.FormatStack: org.jdom2.output.Format$TextMode[] mode>;

        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r4 = $r3[$i0];

        if $r4 != $r1 goto label01;

        return;

     label01:
        $r3 = r0.<org.jdom2.output.support.FormatStack: org.jdom2.output.Format$TextMode[] mode>;

        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r3[$i0] = $r1;

        $r5 = <org.jdom2.output.support.FormatStack$1: int[] $SwitchMap$org$jdom2$output$Format$TextMode>;

        $i0 = virtualinvoke $r1.<org.jdom2.output.Format$TextMode: int ordinal()>();

        $i0 = $r5[$i0];

        lookupswitch($i0)
        {
            case 1: goto label05;
            default: goto label02;
        };

     label02:
        $r6 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelEOL>;

        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r7 = r0.<org.jdom2.output.support.FormatStack: java.lang.String lineSeparator>;

        $r6[$i0] = $r7;

        $r7 = r0.<org.jdom2.output.support.FormatStack: java.lang.String indent>;

        if $r7 == null goto label03;

        $r7 = r0.<org.jdom2.output.support.FormatStack: java.lang.String lineSeparator>;

        if $r7 != null goto label06;

     label03:
        $r6 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelEOLIndent>;

        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r6[$i0] = null;

        $r6 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] termEOLIndent>;

        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r6[$i0] = null;

     label04:
        specialinvoke r0.<org.jdom2.output.support.FormatStack: void resetReusableIndents()>();

        return;

     label05:
        $r6 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelEOL>;

        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r6[$i0] = null;

        $r6 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelIndent>;

        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r6[$i0] = null;

        $r6 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelEOLIndent>;

        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r6[$i0] = null;

        $r6 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] termEOLIndent>;

        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r6[$i0] = null;

        goto label04;

     label06:
        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        if $i0 <= 0 goto label10;

        r2 = new java.lang.StringBuilder;

        $r7 = r0.<org.jdom2.output.support.FormatStack: java.lang.String indent>;

        $i0 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i1 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $i0 = $i0 * $i1;

        specialinvoke r2.<java.lang.StringBuilder: void <init>(int)>($i0);

        $i0 = 1;

     label07:
        $i1 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        if $i0 >= $i1 goto label08;

        $r7 = r0.<org.jdom2.output.support.FormatStack: java.lang.String indent>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $i0 = $i0 + 1;

        goto label07;

     label08:
        $r6 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] termEOLIndent>;

        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r7 = r0.<org.jdom2.output.support.FormatStack: java.lang.String lineSeparator>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6[$i0] = $r7;

        $r7 = r0.<org.jdom2.output.support.FormatStack: java.lang.String indent>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelIndent>;

        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r7 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6[$i0] = $r7;

     label09:
        $r6 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelEOLIndent>;

        $i1 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        $r7 = r0.<org.jdom2.output.support.FormatStack: java.lang.String lineSeparator>;

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelIndent>;

        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r7 = $r9[$i0];

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6[$i1] = $r7;

        goto label04;

     label10:
        $r6 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] termEOLIndent>;

        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r7 = r0.<org.jdom2.output.support.FormatStack: java.lang.String lineSeparator>;

        $r6[$i0] = $r7;

        $r6 = r0.<org.jdom2.output.support.FormatStack: java.lang.String[] levelIndent>;

        $i0 = r0.<org.jdom2.output.support.FormatStack: int depth>;

        $r6[$i0] = "";

        goto label09;
    }
