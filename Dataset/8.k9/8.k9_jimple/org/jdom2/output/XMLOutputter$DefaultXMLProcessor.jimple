org.jdom2.output.XMLOutputter$DefaultXMLProcessor extends org.jdom2.output.support.AbstractXMLOutputProcessor
    private void <init>()
    {
        org.jdom2.output.XMLOutputter$DefaultXMLProcessor r0;

        r0 := @this: org.jdom2.output.XMLOutputter$DefaultXMLProcessor;

        specialinvoke r0.<org.jdom2.output.support.AbstractXMLOutputProcessor: void <init>()>();

        return;
    }
    void <init>(org.jdom2.output.XMLOutputter$1)
    {
        org.jdom2.output.XMLOutputter$DefaultXMLProcessor r0;
        org.jdom2.output.XMLOutputter$1 $r1;

        r0 := @this: org.jdom2.output.XMLOutputter$DefaultXMLProcessor;

        $r1 := @parameter0: org.jdom2.output.XMLOutputter$1;

        specialinvoke r0.<org.jdom2.output.XMLOutputter$DefaultXMLProcessor: void <init>()>();

        return;
    }
    public java.lang.String escapeAttributeEntities(java.lang.String, org.jdom2.output.Format)
    {
        org.jdom2.output.XMLOutputter$DefaultXMLProcessor r0;
        java.lang.String $r1;
        org.jdom2.output.Format $r2;
        java.io.StringWriter r3;
        org.jdom2.output.support.FormatStack $r4;
        java.io.IOException $r5;

        r0 := @this: org.jdom2.output.XMLOutputter$DefaultXMLProcessor;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.jdom2.output.Format;

        r3 = new java.io.StringWriter;

        specialinvoke r3.<java.io.StringWriter: void <init>()>();

        $r4 = new org.jdom2.output.support.FormatStack;

     label1:
        specialinvoke $r4.<org.jdom2.output.support.FormatStack: void <init>(org.jdom2.output.Format)>($r2);

        specialinvoke r0.<org.jdom2.output.support.AbstractXMLOutputProcessor: void attributeEscapedEntitiesFilter(java.io.Writer,org.jdom2.output.support.FormatStack,java.lang.String)>(r3, $r4, $r1);

     label2:
        $r1 = virtualinvoke r3.<java.io.StringWriter: java.lang.String toString()>();

        return $r1;

     label3:
        $r5 := @caughtexception;

        goto label2;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public final java.lang.String escapeElementEntities(java.lang.String, org.jdom2.output.Format)
    {
        org.jdom2.output.XMLOutputter$DefaultXMLProcessor r0;
        java.lang.String $r1, $r4;
        org.jdom2.output.Format $r2;
        org.jdom2.output.EscapeStrategy $r3;

        r0 := @this: org.jdom2.output.XMLOutputter$DefaultXMLProcessor;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.jdom2.output.Format;

        $r3 = virtualinvoke $r2.<org.jdom2.output.Format: org.jdom2.output.EscapeStrategy getEscapeStrategy()>();

        $r4 = virtualinvoke $r2.<org.jdom2.output.Format: java.lang.String getLineSeparator()>();

        $r1 = staticinvoke <org.jdom2.output.Format: java.lang.String escapeText(org.jdom2.output.EscapeStrategy,java.lang.String,java.lang.String)>($r3, $r4, $r1);

        return $r1;
    }
