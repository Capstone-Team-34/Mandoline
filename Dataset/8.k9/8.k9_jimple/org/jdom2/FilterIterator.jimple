org.jdom2.FilterIterator extends java.lang.Object implements org.jdom2.util.IteratorIterable
private boolean canremove
private final org.jdom2.filter.Filter filter
private final org.jdom2.DescendantIterator iterator
private java.lang.Object nextObject
    public void <init>(org.jdom2.DescendantIterator, org.jdom2.filter.Filter)
    {
        org.jdom2.FilterIterator r0;
        org.jdom2.DescendantIterator $r1;
        org.jdom2.filter.Filter r2;
        java.lang.NullPointerException $r3;

        r0 := @this: org.jdom2.FilterIterator;

        $r1 := @parameter0: org.jdom2.DescendantIterator;

        r2 := @parameter1: org.jdom2.filter.Filter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.jdom2.FilterIterator: boolean canremove> = 0;

        if r2 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot specify a null Filter for a FilterIterator");

        throw $r3;

     label1:
        r0.<org.jdom2.FilterIterator: org.jdom2.DescendantIterator iterator> = $r1;

        r0.<org.jdom2.FilterIterator: org.jdom2.filter.Filter filter> = r2;

        return;
    }
    public boolean hasNext()
    {
        org.jdom2.FilterIterator r0;
        java.lang.Object $r1;
        org.jdom2.DescendantIterator $r2;
        boolean $z0;
        org.jdom2.Content $r3;
        org.jdom2.filter.Filter $r4;

        r0 := @this: org.jdom2.FilterIterator;

        r0.<org.jdom2.FilterIterator: boolean canremove> = 0;

        $r1 = r0.<org.jdom2.FilterIterator: java.lang.Object nextObject>;

        if $r1 == null goto label1;

        return 1;

     label1:
        $r2 = r0.<org.jdom2.FilterIterator: org.jdom2.DescendantIterator iterator>;

        $z0 = virtualinvoke $r2.<org.jdom2.DescendantIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = r0.<org.jdom2.FilterIterator: org.jdom2.DescendantIterator iterator>;

        $r3 = virtualinvoke $r2.<org.jdom2.DescendantIterator: org.jdom2.Content next()>();

        $r4 = r0.<org.jdom2.FilterIterator: org.jdom2.filter.Filter filter>;

        $r1 = interfaceinvoke $r4.<org.jdom2.filter.Filter: java.lang.Object filter(java.lang.Object)>($r3);

        if $r1 == null goto label1;

        r0.<org.jdom2.FilterIterator: java.lang.Object nextObject> = $r1;

        return 1;

     label2:
        return 0;
    }
    public java.util.Iterator iterator()
    {
        org.jdom2.FilterIterator r0, $r1;
        org.jdom2.filter.Filter $r2;
        org.jdom2.DescendantIterator $r3;

        r0 := @this: org.jdom2.FilterIterator;

        $r1 = new org.jdom2.FilterIterator;

        $r3 = r0.<org.jdom2.FilterIterator: org.jdom2.DescendantIterator iterator>;

        $r3 = virtualinvoke $r3.<org.jdom2.DescendantIterator: org.jdom2.DescendantIterator iterator()>();

        $r2 = r0.<org.jdom2.FilterIterator: org.jdom2.filter.Filter filter>;

        specialinvoke $r1.<org.jdom2.FilterIterator: void <init>(org.jdom2.DescendantIterator,org.jdom2.filter.Filter)>($r3, $r2);

        return $r1;
    }
    public java.lang.Object next()
    {
        org.jdom2.FilterIterator r0;
        boolean $z0;
        java.util.NoSuchElementException $r1;
        java.lang.Object r2;

        r0 := @this: org.jdom2.FilterIterator;

        $z0 = virtualinvoke r0.<org.jdom2.FilterIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;

     label1:
        r2 = r0.<org.jdom2.FilterIterator: java.lang.Object nextObject>;

        r0.<org.jdom2.FilterIterator: java.lang.Object nextObject> = null;

        r0.<org.jdom2.FilterIterator: boolean canremove> = 1;

        return r2;
    }
    public void remove()
    {
        org.jdom2.FilterIterator r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        org.jdom2.DescendantIterator $r2;

        r0 := @this: org.jdom2.FilterIterator;

        $z0 = r0.<org.jdom2.FilterIterator: boolean canremove>;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("remove() can only be called on the FilterIterator immediately after a successful call to next(). A call to remove() immediately after a call to hasNext() or remove() will also fail.");

        throw $r1;

     label1:
        r0.<org.jdom2.FilterIterator: boolean canremove> = 0;

        $r2 = r0.<org.jdom2.FilterIterator: org.jdom2.DescendantIterator iterator>;

        virtualinvoke $r2.<org.jdom2.DescendantIterator: void remove()>();

        return;
    }
