org.jdom2.ContentList$FilterList extends java.util.AbstractList
int[] backingpos
int backingsize
final org.jdom2.filter.Filter filter
final org.jdom2.ContentList this$0
int xdata
    void <init>(org.jdom2.ContentList, org.jdom2.filter.Filter)
    {
        org.jdom2.ContentList$FilterList r0;
        org.jdom2.ContentList $r1;
        org.jdom2.filter.Filter r2;
        int $i0;
        int[] $r3;

        r0 := @this: org.jdom2.ContentList$FilterList;

        $r1 := @parameter0: org.jdom2.ContentList;

        r2 := @parameter1: org.jdom2.filter.Filter;

        r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0> = $r1;

        specialinvoke r0.<java.util.AbstractList: void <init>()>();

        $r1 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        $i0 = staticinvoke <org.jdom2.ContentList: int access$200(org.jdom2.ContentList)>($r1);

        $i0 = $i0 + 4;

        $r3 = newarray (int)[$i0];

        r0.<org.jdom2.ContentList$FilterList: int[] backingpos> = $r3;

        r0.<org.jdom2.ContentList$FilterList: int backingsize> = 0;

        r0.<org.jdom2.ContentList$FilterList: int xdata> = -1;

        r0.<org.jdom2.ContentList$FilterList: org.jdom2.filter.Filter filter> = r2;

        return;
    }
    static int access$800(org.jdom2.ContentList$FilterList, int)
    {
        org.jdom2.ContentList$FilterList $r0;
        int $i0;

        $r0 := @parameter0: org.jdom2.ContentList$FilterList;

        $i0 := @parameter1: int;

        $i0 = specialinvoke $r0.<org.jdom2.ContentList$FilterList: int resync(int)>($i0);

        return $i0;
    }
    private final int fbinarySearch(int[], int, int, java.util.Comparator)
    {
        org.jdom2.ContentList$FilterList r0;
        int[] $r1, $r6;
        int $i0, $i1, i2, $i3;
        java.util.Comparator r2;
        org.jdom2.Content r3, $r7;
        org.jdom2.ContentList $r4;
        org.jdom2.Content[] $r5;

        r0 := @this: org.jdom2.ContentList$FilterList;

        $r1 := @parameter0: int[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        r2 := @parameter3: java.util.Comparator;

        i2 = 0;

        $i0 = $i0 + -1;

        $r4 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        $r5 = staticinvoke <org.jdom2.ContentList: org.jdom2.Content[] access$300(org.jdom2.ContentList)>($r4);

        $r6 = r0.<org.jdom2.ContentList$FilterList: int[] backingpos>;

        $i1 = $r6[$i1];

        r3 = $r5[$i1];

     label1:
        if i2 > $i0 goto label6;

        $i1 = i2 + $i0;

        $i1 = $i1 >>> 1;

        $r4 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        $r5 = staticinvoke <org.jdom2.ContentList: org.jdom2.Content[] access$300(org.jdom2.ContentList)>($r4);

        $i3 = $r1[$i1];

        $r7 = $r5[$i3];

        $i3 = interfaceinvoke r2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r3, $r7);

        if $i3 != 0 goto label4;

     label2:
        if $i3 != 0 goto label3;

        if $i1 >= $i0 goto label3;

        $r4 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        $r5 = staticinvoke <org.jdom2.ContentList: org.jdom2.Content[] access$300(org.jdom2.ContentList)>($r4);

        i2 = $i1 + 1;

        i2 = $r1[i2];

        $r7 = $r5[i2];

        i2 = interfaceinvoke r2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r3, $r7);

        if i2 != 0 goto label3;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $i0 = $i1 + 1;

        return $i0;

     label4:
        if $i3 >= 0 goto label5;

        $i0 = $i1 + -1;

        goto label1;

     label5:
        i2 = $i1 + 1;

        goto label1;

     label6:
        return i2;
    }
    private final int resync(int)
    {
        org.jdom2.ContentList$FilterList r0;
        int $i0, $i1, $i2, $i3;
        org.jdom2.ContentList $r1;
        int[] $r2;
        org.jdom2.filter.Filter $r3;
        org.jdom2.Content[] $r4;
        org.jdom2.Content $r5;
        java.lang.Object $r6;

        r0 := @this: org.jdom2.ContentList$FilterList;

        $i0 := @parameter0: int;

        $i1 = r0.<org.jdom2.ContentList$FilterList: int xdata>;

        $r1 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        $i2 = staticinvoke <org.jdom2.ContentList: int access$500(org.jdom2.ContentList)>($r1);

        if $i1 == $i2 goto label1;

        $r1 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        $i1 = staticinvoke <org.jdom2.ContentList: int access$500(org.jdom2.ContentList)>($r1);

        r0.<org.jdom2.ContentList$FilterList: int xdata> = $i1;

        r0.<org.jdom2.ContentList$FilterList: int backingsize> = 0;

        $r1 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        $i1 = staticinvoke <org.jdom2.ContentList: int access$200(org.jdom2.ContentList)>($r1);

        $r2 = r0.<org.jdom2.ContentList$FilterList: int[] backingpos>;

        $i2 = lengthof $r2;

        if $i1 < $i2 goto label1;

        $r1 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        $i1 = staticinvoke <org.jdom2.ContentList: int access$200(org.jdom2.ContentList)>($r1);

        $i1 = $i1 + 1;

        $r2 = newarray (int)[$i1];

        r0.<org.jdom2.ContentList$FilterList: int[] backingpos> = $r2;

     label1:
        if $i0 < 0 goto label2;

        $i1 = r0.<org.jdom2.ContentList$FilterList: int backingsize>;

        if $i0 >= $i1 goto label2;

        $r2 = r0.<org.jdom2.ContentList$FilterList: int[] backingpos>;

        $i0 = $r2[$i0];

        return $i0;

     label2:
        $i1 = 0;

        $i2 = r0.<org.jdom2.ContentList$FilterList: int backingsize>;

        if $i2 <= 0 goto label3;

        $r2 = r0.<org.jdom2.ContentList$FilterList: int[] backingpos>;

        $i1 = r0.<org.jdom2.ContentList$FilterList: int backingsize>;

        $i1 = $i1 + -1;

        $i1 = $r2[$i1];

        $i1 = $i1 + 1;

     label3:
        $r1 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        $i2 = staticinvoke <org.jdom2.ContentList: int access$200(org.jdom2.ContentList)>($r1);

        if $i1 >= $i2 goto label5;

        $r3 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.filter.Filter filter>;

        $r1 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        $r4 = staticinvoke <org.jdom2.ContentList: org.jdom2.Content[] access$300(org.jdom2.ContentList)>($r1);

        $r5 = $r4[$i1];

        $r6 = interfaceinvoke $r3.<org.jdom2.filter.Filter: java.lang.Object filter(java.lang.Object)>($r5);

        $r5 = (org.jdom2.Content) $r6;

        if $r5 == null goto label4;

        $r2 = r0.<org.jdom2.ContentList$FilterList: int[] backingpos>;

        $i2 = r0.<org.jdom2.ContentList$FilterList: int backingsize>;

        $r2[$i2] = $i1;

        $i2 = r0.<org.jdom2.ContentList$FilterList: int backingsize>;

        $i3 = $i2 + 1;

        r0.<org.jdom2.ContentList$FilterList: int backingsize> = $i3;

        if $i2 == $i0 goto label6;

     label4:
        $i1 = $i1 + 1;

        goto label3;

     label5:
        $r1 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        $i0 = staticinvoke <org.jdom2.ContentList: int access$200(org.jdom2.ContentList)>($r1);

        return $i0;

     label6:
        return $i1;
    }
    public volatile void add(int, java.lang.Object)
    {
        org.jdom2.ContentList$FilterList r0;
        int $i0;
        java.lang.Object $r1;
        org.jdom2.Content $r2;

        r0 := @this: org.jdom2.ContentList$FilterList;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        $r2 = (org.jdom2.Content) $r1;

        virtualinvoke r0.<org.jdom2.ContentList$FilterList: void add(int,org.jdom2.Content)>($i0, $r2);

        return;
    }
    public void add(int, org.jdom2.Content)
    {
        org.jdom2.ContentList$FilterList r0;
        int $i0, $i1, $i2, $i3;
        org.jdom2.Content $r1;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        org.jdom2.ContentList $r5;
        org.jdom2.filter.Filter $r6;
        boolean $z0;
        int[] $r7, $r8;
        org.jdom2.IllegalAddException $r9;
        java.lang.Class $r10;

        r0 := @this: org.jdom2.ContentList$FilterList;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.jdom2.Content;

        if $i0 >= 0 goto label1;

        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Size: ");

        $i0 = virtualinvoke r0.<org.jdom2.ContentList$FilterList: int size()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        $i1 = specialinvoke r0.<org.jdom2.ContentList$FilterList: int resync(int)>($i0);

        $r5 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        $i2 = staticinvoke <org.jdom2.ContentList: int access$200(org.jdom2.ContentList)>($r5);

        if $i1 != $i2 goto label2;

        $i2 = virtualinvoke r0.<org.jdom2.ContentList$FilterList: int size()>();

        if $i0 <= $i2 goto label2;

        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Size: ");

        $i0 = virtualinvoke r0.<org.jdom2.ContentList$FilterList: int size()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label2:
        $r6 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.filter.Filter filter>;

        $z0 = interfaceinvoke $r6.<org.jdom2.filter.Filter: boolean matches(java.lang.Object)>($r1);

        if $z0 == 0 goto label4;

        $r5 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        virtualinvoke $r5.<org.jdom2.ContentList: void add(int,org.jdom2.Content)>($i1, $r1);

        $r7 = r0.<org.jdom2.ContentList$FilterList: int[] backingpos>;

        $i2 = lengthof $r7;

        $r5 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        $i3 = staticinvoke <org.jdom2.ContentList: int access$200(org.jdom2.ContentList)>($r5);

        if $i2 > $i3 goto label3;

        $r7 = r0.<org.jdom2.ContentList$FilterList: int[] backingpos>;

        $r8 = r0.<org.jdom2.ContentList$FilterList: int[] backingpos>;

        $i2 = lengthof $r8;

        $i2 = $i2 + 1;

        $r7 = staticinvoke <org.jdom2.internal.ArrayCopy: int[] copyOf(int[],int)>($r7, $i2);

        r0.<org.jdom2.ContentList$FilterList: int[] backingpos> = $r7;

     label3:
        $r7 = r0.<org.jdom2.ContentList$FilterList: int[] backingpos>;

        $r7[$i0] = $i1;

        $i0 = $i0 + 1;

        r0.<org.jdom2.ContentList$FilterList: int backingsize> = $i0;

        $r5 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        $i0 = staticinvoke <org.jdom2.ContentList: int access$500(org.jdom2.ContentList)>($r5);

        r0.<org.jdom2.ContentList$FilterList: int xdata> = $i0;

        return;

     label4:
        $r9 = new org.jdom2.IllegalAddException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Filter won\'t allow the ");

        $r10 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \'");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' to be added to the list");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.jdom2.IllegalAddException: void <init>(java.lang.String)>($r4);

        throw $r9;
    }
    public boolean addAll(int, java.util.Collection)
    {
        org.jdom2.ContentList$FilterList r0;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, $i7;
        java.util.Collection r1;
        java.lang.NullPointerException $r2;
        java.lang.IndexOutOfBoundsException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        org.jdom2.ContentList $r6, $r7;
        java.util.Iterator $r8;
        boolean $z0;
        java.lang.Object $r9;
        org.jdom2.Content r10;
        java.lang.Throwable $r11;
        org.jdom2.filter.Filter $r12;
        int[] $r13, $r14;
        org.jdom2.IllegalAddException $r15;
        java.lang.Class $r16;

        r0 := @this: org.jdom2.ContentList$FilterList;

        $i0 := @parameter0: int;

        r1 := @parameter1: java.util.Collection;

        if r1 != null goto label01;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot add a null collection");

        throw $r2;

     label01:
        if $i0 >= 0 goto label02;

        $r3 = new java.lang.IndexOutOfBoundsException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Size: ");

        $i0 = virtualinvoke r0.<org.jdom2.ContentList$FilterList: int size()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label02:
        $i1 = specialinvoke r0.<org.jdom2.ContentList$FilterList: int resync(int)>($i0);

        $r6 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        $i2 = staticinvoke <org.jdom2.ContentList: int access$200(org.jdom2.ContentList)>($r6);

        if $i1 != $i2 goto label03;

        $i2 = virtualinvoke r0.<org.jdom2.ContentList$FilterList: int size()>();

        if $i0 <= $i2 goto label03;

        $r3 = new java.lang.IndexOutOfBoundsException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Size: ");

        $i0 = virtualinvoke r0.<org.jdom2.ContentList$FilterList: int size()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label03:
        $i2 = interfaceinvoke r1.<java.util.Collection: int size()>();

        if $i2 != 0 goto label04;

        return 0;

     label04:
        $r6 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        $r7 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        $i3 = virtualinvoke $r7.<org.jdom2.ContentList: int size()>();

        $i3 = $i3 + $i2;

        virtualinvoke $r6.<org.jdom2.ContentList: void ensureCapacity(int)>($i3);

        $r6 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        $i3 = staticinvoke <org.jdom2.ContentList: int access$100(org.jdom2.ContentList)>($r6);

        $r6 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        $i4 = staticinvoke <org.jdom2.ContentList: int access$500(org.jdom2.ContentList)>($r6);

        i5 = 0;

     label05:
        $r8 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

     label07:
        if $z0 == 0 goto label29;

     label08:
        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.jdom2.Content) $r9;

     label09:
        if r10 != null goto label13;

     label10:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot add null content");

        throw $r2;

     label11:
        $r11 := @caughtexception;

     label12:
        i5 = i5 + -1;

        if i5 < 0 goto label31;

        $r6 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        $i2 = $i1 + i5;

        virtualinvoke $r6.<org.jdom2.ContentList: org.jdom2.Content remove(int)>($i2);

        goto label12;

     label13:
        $r12 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.filter.Filter filter>;

        $z0 = interfaceinvoke $r12.<org.jdom2.filter.Filter: boolean matches(java.lang.Object)>(r10);

     label14:
        if $z0 == 0 goto label28;

     label15:
        $r6 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

     label16:
        $i6 = $i1 + i5;

     label17:
        virtualinvoke $r6.<org.jdom2.ContentList: void add(int,org.jdom2.Content)>($i6, r10);

        $r13 = r0.<org.jdom2.ContentList$FilterList: int[] backingpos>;

        $i6 = lengthof $r13;

        $r6 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        $i7 = staticinvoke <org.jdom2.ContentList: int access$200(org.jdom2.ContentList)>($r6);

     label18:
        if $i6 > $i7 goto label22;

     label19:
        $r13 = r0.<org.jdom2.ContentList$FilterList: int[] backingpos>;

        $r14 = r0.<org.jdom2.ContentList$FilterList: int[] backingpos>;

        $i6 = lengthof $r14;

     label20:
        $i6 = $i6 + $i2;

     label21:
        $r13 = staticinvoke <org.jdom2.internal.ArrayCopy: int[] copyOf(int[],int)>($r13, $i6);

        r0.<org.jdom2.ContentList$FilterList: int[] backingpos> = $r13;

     label22:
        $r13 = r0.<org.jdom2.ContentList$FilterList: int[] backingpos>;

     label23:
        $i6 = $i0 + i5;

        $i7 = $i1 + i5;

     label24:
        $r13[$i6] = $i7;

     label25:
        $i6 = $i0 + i5;

        $i6 = $i6 + 1;

     label26:
        r0.<org.jdom2.ContentList$FilterList: int backingsize> = $i6;

        $r6 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        $i6 = staticinvoke <org.jdom2.ContentList: int access$500(org.jdom2.ContentList)>($r6);

        r0.<org.jdom2.ContentList$FilterList: int xdata> = $i6;

     label27:
        i5 = i5 + 1;

        goto label06;

     label28:
        $r15 = new org.jdom2.IllegalAddException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Filter won\'t allow the ");

        $r16 = virtualinvoke r10.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \'");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' to be added to the list");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<org.jdom2.IllegalAddException: void <init>(java.lang.String)>($r5);

        throw $r15;

     label29:
        goto label30;

     label30:
        return 1;

     label31:
        $r6 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        staticinvoke <org.jdom2.ContentList: void access$600(org.jdom2.ContentList,int,int)>($r6, $i3, $i4);

        r0.<org.jdom2.ContentList$FilterList: int backingsize> = $i0;

        r0.<org.jdom2.ContentList$FilterList: int xdata> = $i3;

        throw $r11;

        catch java.lang.Throwable from label05 to label07 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label13 to label14 with label11;
        catch java.lang.Throwable from label15 to label16 with label11;
        catch java.lang.Throwable from label17 to label18 with label11;
        catch java.lang.Throwable from label19 to label20 with label11;
        catch java.lang.Throwable from label21 to label23 with label11;
        catch java.lang.Throwable from label24 to label25 with label11;
        catch java.lang.Throwable from label26 to label27 with label11;
        catch java.lang.Throwable from label28 to label29 with label11;
    }
    public volatile java.lang.Object get(int)
    {
        org.jdom2.ContentList$FilterList r0;
        int $i0;
        org.jdom2.Content $r1;

        r0 := @this: org.jdom2.ContentList$FilterList;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.jdom2.ContentList$FilterList: org.jdom2.Content get(int)>($i0);

        return $r1;
    }
    public org.jdom2.Content get(int)
    {
        org.jdom2.ContentList$FilterList r0;
        int $i0, $i1, $i2;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        org.jdom2.ContentList $r4;
        org.jdom2.filter.Filter $r5;
        org.jdom2.Content $r6;
        java.lang.Object $r7;

        r0 := @this: org.jdom2.ContentList$FilterList;

        $i0 := @parameter0: int;

        if $i0 >= 0 goto label1;

        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Size: ");

        $i0 = virtualinvoke r0.<org.jdom2.ContentList$FilterList: int size()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        $i1 = specialinvoke r0.<org.jdom2.ContentList$FilterList: int resync(int)>($i0);

        $r4 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        $i2 = staticinvoke <org.jdom2.ContentList: int access$200(org.jdom2.ContentList)>($r4);

        if $i1 != $i2 goto label2;

        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Size: ");

        $i0 = virtualinvoke r0.<org.jdom2.ContentList$FilterList: int size()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label2:
        $r5 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.filter.Filter filter>;

        $r4 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        $r6 = virtualinvoke $r4.<org.jdom2.ContentList: org.jdom2.Content get(int)>($i1);

        $r7 = interfaceinvoke $r5.<org.jdom2.filter.Filter: java.lang.Object filter(java.lang.Object)>($r6);

        $r6 = (org.jdom2.Content) $r7;

        return $r6;
    }
    public boolean isEmpty()
    {
        org.jdom2.ContentList$FilterList r0;
        int $i0, $i1;
        org.jdom2.ContentList $r1;

        r0 := @this: org.jdom2.ContentList$FilterList;

        $i0 = specialinvoke r0.<org.jdom2.ContentList$FilterList: int resync(int)>(0);

        $r1 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        $i1 = staticinvoke <org.jdom2.ContentList: int access$200(org.jdom2.ContentList)>($r1);

        if $i0 != $i1 goto label1;

        return 1;

     label1:
        return 0;
    }
    public java.util.Iterator iterator()
    {
        org.jdom2.ContentList$FilterList r0;
        org.jdom2.ContentList$FilterListIterator $r1;
        org.jdom2.ContentList $r2;

        r0 := @this: org.jdom2.ContentList$FilterList;

        $r1 = new org.jdom2.ContentList$FilterListIterator;

        $r2 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        specialinvoke $r1.<org.jdom2.ContentList$FilterListIterator: void <init>(org.jdom2.ContentList,org.jdom2.ContentList$FilterList,int)>($r2, r0, 0);

        return $r1;
    }
    public java.util.ListIterator listIterator()
    {
        org.jdom2.ContentList$FilterList r0;
        org.jdom2.ContentList$FilterListIterator $r1;
        org.jdom2.ContentList $r2;

        r0 := @this: org.jdom2.ContentList$FilterList;

        $r1 = new org.jdom2.ContentList$FilterListIterator;

        $r2 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        specialinvoke $r1.<org.jdom2.ContentList$FilterListIterator: void <init>(org.jdom2.ContentList,org.jdom2.ContentList$FilterList,int)>($r2, r0, 0);

        return $r1;
    }
    public java.util.ListIterator listIterator(int)
    {
        org.jdom2.ContentList$FilterList r0;
        int $i0;
        org.jdom2.ContentList$FilterListIterator $r1;
        org.jdom2.ContentList $r2;

        r0 := @this: org.jdom2.ContentList$FilterList;

        $i0 := @parameter0: int;

        $r1 = new org.jdom2.ContentList$FilterListIterator;

        $r2 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        specialinvoke $r1.<org.jdom2.ContentList$FilterListIterator: void <init>(org.jdom2.ContentList,org.jdom2.ContentList$FilterList,int)>($r2, r0, $i0);

        return $r1;
    }
    public volatile java.lang.Object remove(int)
    {
        org.jdom2.ContentList$FilterList r0;
        int $i0;
        org.jdom2.Content $r1;

        r0 := @this: org.jdom2.ContentList$FilterList;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.jdom2.ContentList$FilterList: org.jdom2.Content remove(int)>($i0);

        return $r1;
    }
    public org.jdom2.Content remove(int)
    {
        org.jdom2.ContentList$FilterList r0;
        int $i0, $i1, $i2;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        org.jdom2.ContentList $r4;
        org.jdom2.Content $r5;
        org.jdom2.filter.Filter $r6;
        java.lang.Object $r7;

        r0 := @this: org.jdom2.ContentList$FilterList;

        $i0 := @parameter0: int;

        if $i0 >= 0 goto label1;

        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Size: ");

        $i0 = virtualinvoke r0.<org.jdom2.ContentList$FilterList: int size()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        $i1 = specialinvoke r0.<org.jdom2.ContentList$FilterList: int resync(int)>($i0);

        $r4 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        $i2 = staticinvoke <org.jdom2.ContentList: int access$200(org.jdom2.ContentList)>($r4);

        if $i1 != $i2 goto label2;

        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Size: ");

        $i0 = virtualinvoke r0.<org.jdom2.ContentList$FilterList: int size()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label2:
        $r4 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        $r5 = virtualinvoke $r4.<org.jdom2.ContentList: org.jdom2.Content remove(int)>($i1);

        r0.<org.jdom2.ContentList$FilterList: int backingsize> = $i0;

        $r4 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        $i0 = staticinvoke <org.jdom2.ContentList: int access$500(org.jdom2.ContentList)>($r4);

        r0.<org.jdom2.ContentList$FilterList: int xdata> = $i0;

        $r6 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.filter.Filter filter>;

        $r7 = interfaceinvoke $r6.<org.jdom2.filter.Filter: java.lang.Object filter(java.lang.Object)>($r5);

        $r5 = (org.jdom2.Content) $r7;

        return $r5;
    }
    public volatile java.lang.Object set(int, java.lang.Object)
    {
        org.jdom2.ContentList$FilterList r0;
        int $i0;
        org.jdom2.Content $r1;
        java.lang.Object $r2;

        r0 := @this: org.jdom2.ContentList$FilterList;

        $i0 := @parameter0: int;

        $r2 := @parameter1: java.lang.Object;

        $r1 = (org.jdom2.Content) $r2;

        $r1 = virtualinvoke r0.<org.jdom2.ContentList$FilterList: org.jdom2.Content set(int,org.jdom2.Content)>($i0, $r1);

        return $r1;
    }
    public org.jdom2.Content set(int, org.jdom2.Content)
    {
        org.jdom2.ContentList$FilterList r0;
        int $i0, $i1, $i2;
        org.jdom2.Content r1, r8;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        org.jdom2.ContentList $r5;
        org.jdom2.filter.Filter $r6;
        java.lang.Object $r7;
        org.jdom2.IllegalAddException $r9;
        java.lang.Class $r10;

        r0 := @this: org.jdom2.ContentList$FilterList;

        $i0 := @parameter0: int;

        r1 := @parameter1: org.jdom2.Content;

        if $i0 >= 0 goto label1;

        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Size: ");

        $i0 = virtualinvoke r0.<org.jdom2.ContentList$FilterList: int size()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        $i1 = specialinvoke r0.<org.jdom2.ContentList$FilterList: int resync(int)>($i0);

        $r5 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        $i2 = staticinvoke <org.jdom2.ContentList: int access$200(org.jdom2.ContentList)>($r5);

        if $i1 != $i2 goto label2;

        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Size: ");

        $i0 = virtualinvoke r0.<org.jdom2.ContentList$FilterList: int size()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label2:
        $r6 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.filter.Filter filter>;

        $r7 = interfaceinvoke $r6.<org.jdom2.filter.Filter: java.lang.Object filter(java.lang.Object)>(r1);

        r8 = (org.jdom2.Content) $r7;

        if r8 == null goto label3;

        $r6 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.filter.Filter filter>;

        $r5 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        r1 = virtualinvoke $r5.<org.jdom2.ContentList: org.jdom2.Content set(int,org.jdom2.Content)>($i1, r8);

        $r7 = interfaceinvoke $r6.<org.jdom2.filter.Filter: java.lang.Object filter(java.lang.Object)>(r1);

        r1 = (org.jdom2.Content) $r7;

        $r5 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        $i0 = staticinvoke <org.jdom2.ContentList: int access$500(org.jdom2.ContentList)>($r5);

        r0.<org.jdom2.ContentList$FilterList: int xdata> = $i0;

        return r1;

     label3:
        $r9 = new org.jdom2.IllegalAddException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Filter won\'t allow index ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to be set to ");

        $r10 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.jdom2.IllegalAddException: void <init>(java.lang.String)>($r4);

        throw $r9;
    }
    public int size()
    {
        org.jdom2.ContentList$FilterList r0;
        int i0;

        r0 := @this: org.jdom2.ContentList$FilterList;

        specialinvoke r0.<org.jdom2.ContentList$FilterList: int resync(int)>(-1);

        i0 = r0.<org.jdom2.ContentList$FilterList: int backingsize>;

        return i0;
    }
    final void sort(java.util.Comparator)
    {
        org.jdom2.ContentList$FilterList r0;
        java.util.Comparator r1;
        int[] r2, $r3;
        int $i0, $i1, i2, $i3, $i4;
        org.jdom2.ContentList $r4;

        r0 := @this: org.jdom2.ContentList$FilterList;

        r1 := @parameter0: java.util.Comparator;

        $i1 = virtualinvoke r0.<org.jdom2.ContentList$FilterList: int size()>();

        r2 = newarray (int)[$i1];

        i2 = 0;

     label1:
        if i2 >= $i1 goto label3;

        $i3 = specialinvoke r0.<org.jdom2.ContentList$FilterList: int fbinarySearch(int[],int,int,java.util.Comparator)>(r2, i2, i2, r1);

        if $i3 >= i2 goto label2;

        $i4 = $i3 + 1;

        $i0 = i2 - $i3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, $i3, r2, $i4, $i0);

     label2:
        $r3 = r0.<org.jdom2.ContentList$FilterList: int[] backingpos>;

        $i0 = $r3[i2];

        r2[$i3] = $i0;

        i2 = i2 + 1;

        goto label1;

     label3:
        $r4 = r0.<org.jdom2.ContentList$FilterList: org.jdom2.ContentList this$0>;

        staticinvoke <org.jdom2.ContentList: void access$700(org.jdom2.ContentList,int[])>($r4, r2);

        return;
    }
