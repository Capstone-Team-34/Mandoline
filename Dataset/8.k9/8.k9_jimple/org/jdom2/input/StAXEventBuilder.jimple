org.jdom2.input.StAXEventBuilder extends java.lang.Object
private org.jdom2.JDOMFactory factory
    public void <init>()
    {
        org.jdom2.input.StAXEventBuilder r0;
        org.jdom2.DefaultJDOMFactory $r1;

        r0 := @this: org.jdom2.input.StAXEventBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.jdom2.DefaultJDOMFactory;

        specialinvoke $r1.<org.jdom2.DefaultJDOMFactory: void <init>()>();

        r0.<org.jdom2.input.StAXEventBuilder: org.jdom2.JDOMFactory factory> = $r1;

        return;
    }
    private static final org.jdom2.Document process(org.jdom2.JDOMFactory, javax.xml.stream.XMLEventReader) throws org.jdom2.JDOMException
    {
        org.jdom2.JDOMFactory $r0;
        javax.xml.stream.XMLEventReader $r1;
        java.lang.Throwable r2;
        org.jdom2.Document $r3;
        org.jdom2.Element r4, $r14;
        javax.xml.stream.events.XMLEvent $r5, r6;
        int $i0;
        org.jdom2.JDOMException $r7;
        boolean $z0;
        javax.xml.stream.Location $r8;
        java.lang.String $r9, $r23;
        javax.xml.stream.events.StartDocument $r10;
        javax.xml.stream.events.DTD r11;
        org.jdom2.DocType $r12;
        javax.xml.stream.events.StartElement $r13;
        javax.xml.stream.events.Characters $r15;
        org.jdom2.CDATA $r16;
        org.jdom2.Text $r17;
        javax.xml.stream.events.Comment r18;
        org.jdom2.Comment $r19;
        javax.xml.stream.events.EntityReference r20;
        org.jdom2.EntityRef $r21;
        javax.xml.stream.events.ProcessingInstruction $r22;
        org.jdom2.ProcessingInstruction $r24;

        $r0 := @parameter0: org.jdom2.JDOMFactory;

        $r1 := @parameter1: javax.xml.stream.XMLEventReader;

     label01:
        $r3 = interfaceinvoke $r0.<org.jdom2.JDOMFactory: org.jdom2.Document document(org.jdom2.Element)>(null);

     label02:
        r4 = null;

     label03:
        $r5 = interfaceinvoke $r1.<javax.xml.stream.XMLEventReader: javax.xml.stream.events.XMLEvent peek()>();

     label04:
        r6 = $r5;

     label05:
        $i0 = interfaceinvoke $r5.<javax.xml.stream.events.XMLEvent: int getEventType()>();

     label06:
        if 7 == $i0 goto label10;

        $r7 = new org.jdom2.JDOMException;

     label07:
        specialinvoke $r7.<org.jdom2.JDOMException: void <init>(java.lang.String)>("JDOM requires that XMLStreamReaders are at their beginning when being processed.");

     label08:
        throw $r7;

     label09:
        r2 := @caughtexception;

        $r7 = new org.jdom2.JDOMException;

        specialinvoke $r7.<org.jdom2.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to process XMLStream. See Cause.", r2);

        throw $r7;

     label10:
        $i0 = interfaceinvoke r6.<javax.xml.stream.events.XMLEvent: int getEventType()>();

     label11:
        if $i0 == 8 goto label70;

     label12:
        $z0 = interfaceinvoke r6.<javax.xml.stream.events.XMLEvent: boolean isStartDocument()>();

     label13:
        if $z0 == 0 goto label23;

     label14:
        $r8 = interfaceinvoke r6.<javax.xml.stream.events.XMLEvent: javax.xml.stream.Location getLocation()>();

        $r9 = interfaceinvoke $r8.<javax.xml.stream.Location: java.lang.String getSystemId()>();

        virtualinvoke $r3.<org.jdom2.Document: void setBaseURI(java.lang.String)>($r9);

     label15:
        $r10 = (javax.xml.stream.events.StartDocument) r6;

     label16:
        $r9 = interfaceinvoke $r10.<javax.xml.stream.events.StartDocument: java.lang.String getCharacterEncodingScheme()>();

        virtualinvoke $r3.<org.jdom2.Document: void setProperty(java.lang.String,java.lang.Object)>("ENCODING_SCHEME", $r9);

     label17:
        $r10 = (javax.xml.stream.events.StartDocument) r6;

     label18:
        $z0 = interfaceinvoke $r10.<javax.xml.stream.events.StartDocument: boolean isStandalone()>();

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0);

        virtualinvoke $r3.<org.jdom2.Document: void setProperty(java.lang.String,java.lang.Object)>("STANDALONE", $r9);

     label19:
        $z0 = interfaceinvoke $r1.<javax.xml.stream.XMLEventReader: boolean hasNext()>();

     label20:
        if $z0 == 0 goto label70;

     label21:
        $r5 = interfaceinvoke $r1.<javax.xml.stream.XMLEventReader: javax.xml.stream.events.XMLEvent nextEvent()>();

     label22:
        r6 = $r5;

        goto label10;

     label23:
        $z0 = r6 instanceof javax.xml.stream.events.DTD;

        if $z0 == 0 goto label26;

        r11 = (javax.xml.stream.events.DTD) r6;

     label24:
        $r9 = interfaceinvoke r11.<javax.xml.stream.events.DTD: java.lang.String getDocumentTypeDeclaration()>();

        $r12 = staticinvoke <org.jdom2.input.stax.DTDParser: org.jdom2.DocType parse(java.lang.String,org.jdom2.JDOMFactory)>($r9, $r0);

        virtualinvoke $r3.<org.jdom2.Document: org.jdom2.Document setDocType(org.jdom2.DocType)>($r12);

     label25:
        goto label19;

     label26:
        $z0 = interfaceinvoke r6.<javax.xml.stream.events.XMLEvent: boolean isStartElement()>();

     label27:
        if $z0 == 0 goto label36;

     label28:
        $r13 = interfaceinvoke r6.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.StartElement asStartElement()>();

        $r14 = staticinvoke <org.jdom2.input.StAXEventBuilder: org.jdom2.Element processElement(org.jdom2.JDOMFactory,javax.xml.stream.events.StartElement)>($r0, $r13);

     label29:
        if r4 != null goto label34;

     label30:
        virtualinvoke $r3.<org.jdom2.Document: org.jdom2.Document setRootElement(org.jdom2.Element)>($r14);

        $r12 = virtualinvoke $r3.<org.jdom2.Document: org.jdom2.DocType getDocType()>();

     label31:
        if $r12 == null goto label33;

     label32:
        $r9 = virtualinvoke $r14.<org.jdom2.Element: java.lang.String getName()>();

        virtualinvoke $r12.<org.jdom2.DocType: org.jdom2.DocType setElementName(java.lang.String)>($r9);

     label33:
        r4 = $r14;

        goto label19;

     label34:
        virtualinvoke r4.<org.jdom2.Element: org.jdom2.Element addContent(org.jdom2.Content)>($r14);

     label35:
        goto label33;

     label36:
        $z0 = interfaceinvoke r6.<javax.xml.stream.events.XMLEvent: boolean isCharacters()>();

     label37:
        if $z0 == 0 goto label45;

        if r4 == null goto label45;

     label38:
        $r15 = interfaceinvoke r6.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.Characters asCharacters()>();

        $z0 = interfaceinvoke $r15.<javax.xml.stream.events.Characters: boolean isCData()>();

     label39:
        if $z0 == 0 goto label42;

        $r15 = (javax.xml.stream.events.Characters) r6;

     label40:
        $r9 = interfaceinvoke $r15.<javax.xml.stream.events.Characters: java.lang.String getData()>();

        $r16 = interfaceinvoke $r0.<org.jdom2.JDOMFactory: org.jdom2.CDATA cdata(java.lang.String)>($r9);

        virtualinvoke r4.<org.jdom2.Element: org.jdom2.Element addContent(org.jdom2.Content)>($r16);

     label41:
        goto label19;

     label42:
        $r15 = (javax.xml.stream.events.Characters) r6;

     label43:
        $r9 = interfaceinvoke $r15.<javax.xml.stream.events.Characters: java.lang.String getData()>();

        $r17 = interfaceinvoke $r0.<org.jdom2.JDOMFactory: org.jdom2.Text text(java.lang.String)>($r9);

        virtualinvoke r4.<org.jdom2.Element: org.jdom2.Element addContent(org.jdom2.Content)>($r17);

     label44:
        goto label19;

     label45:
        $z0 = r6 instanceof javax.xml.stream.events.Comment;

        if $z0 == 0 goto label52;

        r18 = (javax.xml.stream.events.Comment) r6;

     label46:
        $r9 = interfaceinvoke r18.<javax.xml.stream.events.Comment: java.lang.String getText()>();

        $r19 = interfaceinvoke $r0.<org.jdom2.JDOMFactory: org.jdom2.Comment comment(java.lang.String)>($r9);

     label47:
        if r4 != null goto label50;

     label48:
        virtualinvoke $r3.<org.jdom2.Document: org.jdom2.Document addContent(org.jdom2.Content)>($r19);

     label49:
        goto label19;

     label50:
        virtualinvoke r4.<org.jdom2.Element: org.jdom2.Element addContent(org.jdom2.Content)>($r19);

     label51:
        goto label19;

     label52:
        $z0 = interfaceinvoke r6.<javax.xml.stream.events.XMLEvent: boolean isEntityReference()>();

     label53:
        if $z0 == 0 goto label56;

        r20 = (javax.xml.stream.events.EntityReference) r6;

     label54:
        $r9 = interfaceinvoke r20.<javax.xml.stream.events.EntityReference: java.lang.String getName()>();

        $r21 = interfaceinvoke $r0.<org.jdom2.JDOMFactory: org.jdom2.EntityRef entityRef(java.lang.String)>($r9);

        virtualinvoke r4.<org.jdom2.Element: org.jdom2.Element addContent(org.jdom2.Content)>($r21);

     label55:
        goto label19;

     label56:
        $z0 = interfaceinvoke r6.<javax.xml.stream.events.XMLEvent: boolean isProcessingInstruction()>();

     label57:
        if $z0 == 0 goto label66;

        $r22 = (javax.xml.stream.events.ProcessingInstruction) r6;

     label58:
        $r9 = interfaceinvoke $r22.<javax.xml.stream.events.ProcessingInstruction: java.lang.String getTarget()>();

     label59:
        $r22 = (javax.xml.stream.events.ProcessingInstruction) r6;

     label60:
        $r23 = interfaceinvoke $r22.<javax.xml.stream.events.ProcessingInstruction: java.lang.String getData()>();

        $r24 = interfaceinvoke $r0.<org.jdom2.JDOMFactory: org.jdom2.ProcessingInstruction processingInstruction(java.lang.String,java.lang.String)>($r9, $r23);

     label61:
        if r4 != null goto label64;

     label62:
        virtualinvoke $r3.<org.jdom2.Document: org.jdom2.Document addContent(org.jdom2.Content)>($r24);

     label63:
        goto label19;

     label64:
        virtualinvoke r4.<org.jdom2.Element: org.jdom2.Element addContent(org.jdom2.Content)>($r24);

     label65:
        goto label19;

     label66:
        $z0 = interfaceinvoke r6.<javax.xml.stream.events.XMLEvent: boolean isEndElement()>();

     label67:
        if $z0 == 0 goto label19;

     label68:
        r4 = virtualinvoke r4.<org.jdom2.Element: org.jdom2.Element getParentElement()>();

     label69:
        goto label19;

     label70:
        return $r3;

        catch javax.xml.stream.XMLStreamException from label01 to label02 with label09;
        catch javax.xml.stream.XMLStreamException from label03 to label04 with label09;
        catch javax.xml.stream.XMLStreamException from label05 to label06 with label09;
        catch javax.xml.stream.XMLStreamException from label07 to label08 with label09;
        catch javax.xml.stream.XMLStreamException from label10 to label11 with label09;
        catch javax.xml.stream.XMLStreamException from label12 to label13 with label09;
        catch javax.xml.stream.XMLStreamException from label14 to label15 with label09;
        catch javax.xml.stream.XMLStreamException from label16 to label17 with label09;
        catch javax.xml.stream.XMLStreamException from label18 to label20 with label09;
        catch javax.xml.stream.XMLStreamException from label21 to label22 with label09;
        catch javax.xml.stream.XMLStreamException from label24 to label25 with label09;
        catch javax.xml.stream.XMLStreamException from label26 to label27 with label09;
        catch javax.xml.stream.XMLStreamException from label28 to label29 with label09;
        catch javax.xml.stream.XMLStreamException from label30 to label31 with label09;
        catch javax.xml.stream.XMLStreamException from label32 to label33 with label09;
        catch javax.xml.stream.XMLStreamException from label34 to label35 with label09;
        catch javax.xml.stream.XMLStreamException from label36 to label37 with label09;
        catch javax.xml.stream.XMLStreamException from label38 to label39 with label09;
        catch javax.xml.stream.XMLStreamException from label40 to label41 with label09;
        catch javax.xml.stream.XMLStreamException from label43 to label44 with label09;
        catch javax.xml.stream.XMLStreamException from label46 to label47 with label09;
        catch javax.xml.stream.XMLStreamException from label48 to label49 with label09;
        catch javax.xml.stream.XMLStreamException from label50 to label51 with label09;
        catch javax.xml.stream.XMLStreamException from label52 to label53 with label09;
        catch javax.xml.stream.XMLStreamException from label54 to label55 with label09;
        catch javax.xml.stream.XMLStreamException from label56 to label57 with label09;
        catch javax.xml.stream.XMLStreamException from label58 to label59 with label09;
        catch javax.xml.stream.XMLStreamException from label60 to label61 with label09;
        catch javax.xml.stream.XMLStreamException from label62 to label63 with label09;
        catch javax.xml.stream.XMLStreamException from label64 to label65 with label09;
        catch javax.xml.stream.XMLStreamException from label66 to label67 with label09;
        catch javax.xml.stream.XMLStreamException from label68 to label69 with label09;
    }
    private static final org.jdom2.Element processElement(org.jdom2.JDOMFactory, javax.xml.stream.events.StartElement)
    {
        org.jdom2.JDOMFactory $r0;
        javax.xml.stream.events.StartElement $r1;
        javax.xml.namespace.QName $r2;
        java.lang.String $r3, $r4, $r5;
        org.jdom2.Namespace $r6;
        org.jdom2.Element $r7;
        java.util.Iterator $r8;
        boolean $z0;
        java.lang.Object $r9;
        javax.xml.stream.events.Attribute r10;
        org.jdom2.AttributeType $r11;
        org.jdom2.Attribute $r12;
        javax.xml.stream.events.Namespace r13;

        $r0 := @parameter0: org.jdom2.JDOMFactory;

        $r1 := @parameter1: javax.xml.stream.events.StartElement;

        $r2 = interfaceinvoke $r1.<javax.xml.stream.events.StartElement: javax.xml.namespace.QName getName()>();

        $r3 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r4 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        $r5 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r6 = staticinvoke <org.jdom2.Namespace: org.jdom2.Namespace getNamespace(java.lang.String,java.lang.String)>($r4, $r5);

        $r7 = interfaceinvoke $r0.<org.jdom2.JDOMFactory: org.jdom2.Element element(java.lang.String,org.jdom2.Namespace)>($r3, $r6);

        $r8 = interfaceinvoke $r1.<javax.xml.stream.events.StartElement: java.util.Iterator getAttributes()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (javax.xml.stream.events.Attribute) $r9;

        $r2 = interfaceinvoke r10.<javax.xml.stream.events.Attribute: javax.xml.namespace.QName getName()>();

        $r3 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        $r4 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r6 = staticinvoke <org.jdom2.Namespace: org.jdom2.Namespace getNamespace(java.lang.String,java.lang.String)>($r3, $r4);

        $r3 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r4 = interfaceinvoke r10.<javax.xml.stream.events.Attribute: java.lang.String getValue()>();

        $r5 = interfaceinvoke r10.<javax.xml.stream.events.Attribute: java.lang.String getDTDType()>();

        $r11 = staticinvoke <org.jdom2.AttributeType: org.jdom2.AttributeType getAttributeType(java.lang.String)>($r5);

        $r12 = interfaceinvoke $r0.<org.jdom2.JDOMFactory: org.jdom2.Attribute attribute(java.lang.String,java.lang.String,org.jdom2.AttributeType,org.jdom2.Namespace)>($r3, $r4, $r11, $r6);

        interfaceinvoke $r0.<org.jdom2.JDOMFactory: void setAttribute(org.jdom2.Element,org.jdom2.Attribute)>($r7, $r12);

        goto label1;

     label2:
        $r8 = interfaceinvoke $r1.<javax.xml.stream.events.StartElement: java.util.Iterator getNamespaces()>();

     label3:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r13 = (javax.xml.stream.events.Namespace) $r9;

        $r3 = interfaceinvoke r13.<javax.xml.stream.events.Namespace: java.lang.String getPrefix()>();

        $r4 = interfaceinvoke r13.<javax.xml.stream.events.Namespace: java.lang.String getNamespaceURI()>();

        $r6 = staticinvoke <org.jdom2.Namespace: org.jdom2.Namespace getNamespace(java.lang.String,java.lang.String)>($r3, $r4);

        virtualinvoke $r7.<org.jdom2.Element: boolean addNamespaceDeclaration(org.jdom2.Namespace)>($r6);

        goto label3;

     label4:
        return $r7;
    }
    public org.jdom2.Document build(javax.xml.stream.XMLEventReader) throws org.jdom2.JDOMException
    {
        org.jdom2.input.StAXEventBuilder r0;
        javax.xml.stream.XMLEventReader $r1;
        org.jdom2.Document $r2;
        org.jdom2.JDOMFactory $r3;

        r0 := @this: org.jdom2.input.StAXEventBuilder;

        $r1 := @parameter0: javax.xml.stream.XMLEventReader;

        $r3 = r0.<org.jdom2.input.StAXEventBuilder: org.jdom2.JDOMFactory factory>;

        $r2 = staticinvoke <org.jdom2.input.StAXEventBuilder: org.jdom2.Document process(org.jdom2.JDOMFactory,javax.xml.stream.XMLEventReader)>($r3, $r1);

        return $r2;
    }
    public org.jdom2.JDOMFactory getFactory()
    {
        org.jdom2.input.StAXEventBuilder r0;
        org.jdom2.JDOMFactory r1;

        r0 := @this: org.jdom2.input.StAXEventBuilder;

        r1 = r0.<org.jdom2.input.StAXEventBuilder: org.jdom2.JDOMFactory factory>;

        return r1;
    }
    public void setFactory(org.jdom2.JDOMFactory)
    {
        org.jdom2.input.StAXEventBuilder r0;
        org.jdom2.JDOMFactory $r1;

        r0 := @this: org.jdom2.input.StAXEventBuilder;

        $r1 := @parameter0: org.jdom2.JDOMFactory;

        r0.<org.jdom2.input.StAXEventBuilder: org.jdom2.JDOMFactory factory> = $r1;

        return;
    }
