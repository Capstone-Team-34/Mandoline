org.jdom2.input.SAXBuilder extends java.lang.Object implements org.jdom2.input.sax.SAXEngine
private static final org.jdom2.JDOMFactory DEFAULTJDOMFAC
private static final org.jdom2.input.sax.SAXHandlerFactory DEFAULTSAXHANDLERFAC
private org.jdom2.input.sax.SAXEngine engine
private boolean expand
private final java.util.HashMap features
private org.jdom2.input.sax.SAXHandlerFactory handlerfac
private boolean ignoringBoundaryWhite
private boolean ignoringWhite
private org.jdom2.JDOMFactory jdomfac
private final java.util.HashMap properties
private org.jdom2.input.sax.XMLReaderJDOMFactory readerfac
private boolean reuseParser
private org.xml.sax.DTDHandler saxDTDHandler
private org.xml.sax.EntityResolver saxEntityResolver
private org.xml.sax.ErrorHandler saxErrorHandler
private org.xml.sax.XMLFilter saxXMLFilter
    static void <clinit>()
    {
        org.jdom2.input.sax.DefaultSAXHandlerFactory $r0;
        org.jdom2.DefaultJDOMFactory $r1;

        $r0 = new org.jdom2.input.sax.DefaultSAXHandlerFactory;

        specialinvoke $r0.<org.jdom2.input.sax.DefaultSAXHandlerFactory: void <init>()>();

        <org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXHandlerFactory DEFAULTSAXHANDLERFAC> = $r0;

        $r1 = new org.jdom2.DefaultJDOMFactory;

        specialinvoke $r1.<org.jdom2.DefaultJDOMFactory: void <init>()>();

        <org.jdom2.input.SAXBuilder: org.jdom2.JDOMFactory DEFAULTJDOMFAC> = $r1;

        return;
    }
    public void <init>()
    {
        org.jdom2.input.SAXBuilder r0;

        r0 := @this: org.jdom2.input.SAXBuilder;

        specialinvoke r0.<org.jdom2.input.SAXBuilder: void <init>(org.jdom2.input.sax.XMLReaderJDOMFactory,org.jdom2.input.sax.SAXHandlerFactory,org.jdom2.JDOMFactory)>(null, null, null);

        return;
    }
    public void <init>(java.lang.String)
    {
        org.jdom2.input.SAXBuilder r0;
        java.lang.String $r1;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.jdom2.input.SAXBuilder: void <init>(java.lang.String,boolean)>($r1, 0);

        return;
    }
    public void <init>(java.lang.String, boolean)
    {
        org.jdom2.input.SAXBuilder r0;
        java.lang.String $r1;
        boolean $z0;
        org.jdom2.input.sax.XMLReaderSAX2Factory $r2;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = new org.jdom2.input.sax.XMLReaderSAX2Factory;

        specialinvoke $r2.<org.jdom2.input.sax.XMLReaderSAX2Factory: void <init>(boolean,java.lang.String)>($z0, $r1);

        specialinvoke r0.<org.jdom2.input.SAXBuilder: void <init>(org.jdom2.input.sax.XMLReaderJDOMFactory,org.jdom2.input.sax.SAXHandlerFactory,org.jdom2.JDOMFactory)>($r2, null, null);

        return;
    }
    public void <init>(org.jdom2.input.sax.XMLReaderJDOMFactory)
    {
        org.jdom2.input.SAXBuilder r0;
        org.jdom2.input.sax.XMLReaderJDOMFactory $r1;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $r1 := @parameter0: org.jdom2.input.sax.XMLReaderJDOMFactory;

        specialinvoke r0.<org.jdom2.input.SAXBuilder: void <init>(org.jdom2.input.sax.XMLReaderJDOMFactory,org.jdom2.input.sax.SAXHandlerFactory,org.jdom2.JDOMFactory)>($r1, null, null);

        return;
    }
    public void <init>(org.jdom2.input.sax.XMLReaderJDOMFactory, org.jdom2.input.sax.SAXHandlerFactory, org.jdom2.JDOMFactory)
    {
        org.jdom2.input.SAXBuilder r0;
        org.jdom2.input.sax.XMLReaderJDOMFactory $r1;
        org.jdom2.input.sax.SAXHandlerFactory $r2;
        org.jdom2.JDOMFactory $r3;
        java.util.HashMap $r4;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $r1 := @parameter0: org.jdom2.input.sax.XMLReaderJDOMFactory;

        $r2 := @parameter1: org.jdom2.input.sax.SAXHandlerFactory;

        $r3 := @parameter2: org.jdom2.JDOMFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.XMLReaderJDOMFactory readerfac> = null;

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXHandlerFactory handlerfac> = null;

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.JDOMFactory jdomfac> = null;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>(int)>(5);

        r0.<org.jdom2.input.SAXBuilder: java.util.HashMap features> = $r4;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>(int)>(5);

        r0.<org.jdom2.input.SAXBuilder: java.util.HashMap properties> = $r4;

        r0.<org.jdom2.input.SAXBuilder: org.xml.sax.ErrorHandler saxErrorHandler> = null;

        r0.<org.jdom2.input.SAXBuilder: org.xml.sax.EntityResolver saxEntityResolver> = null;

        r0.<org.jdom2.input.SAXBuilder: org.xml.sax.DTDHandler saxDTDHandler> = null;

        r0.<org.jdom2.input.SAXBuilder: org.xml.sax.XMLFilter saxXMLFilter> = null;

        r0.<org.jdom2.input.SAXBuilder: boolean expand> = 1;

        r0.<org.jdom2.input.SAXBuilder: boolean ignoringWhite> = 0;

        r0.<org.jdom2.input.SAXBuilder: boolean ignoringBoundaryWhite> = 0;

        r0.<org.jdom2.input.SAXBuilder: boolean reuseParser> = 1;

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine> = null;

        if $r1 != null goto label1;

        $r1 = <org.jdom2.input.sax.XMLReaders: org.jdom2.input.sax.XMLReaders NONVALIDATING>;

     label1:
        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.XMLReaderJDOMFactory readerfac> = $r1;

        if $r2 != null goto label2;

        $r2 = <org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXHandlerFactory DEFAULTSAXHANDLERFAC>;

     label2:
        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXHandlerFactory handlerfac> = $r2;

        if $r3 != null goto label3;

        $r3 = <org.jdom2.input.SAXBuilder: org.jdom2.JDOMFactory DEFAULTJDOMFAC>;

     label3:
        r0.<org.jdom2.input.SAXBuilder: org.jdom2.JDOMFactory jdomfac> = $r3;

        return;
    }
    public void <init>(boolean)
    {
        org.jdom2.input.SAXBuilder r0;
        boolean $z0;
        org.jdom2.input.sax.XMLReaders $r1;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label2;

        $r1 = <org.jdom2.input.sax.XMLReaders: org.jdom2.input.sax.XMLReaders DTDVALIDATING>;

     label1:
        specialinvoke r0.<org.jdom2.input.SAXBuilder: void <init>(org.jdom2.input.sax.XMLReaderJDOMFactory,org.jdom2.input.sax.SAXHandlerFactory,org.jdom2.JDOMFactory)>($r1, null, null);

        return;

     label2:
        $r1 = <org.jdom2.input.sax.XMLReaders: org.jdom2.input.sax.XMLReaders NONVALIDATING>;

        goto label1;
    }
    private org.jdom2.input.sax.SAXEngine getEngine() throws org.jdom2.JDOMException
    {
        org.jdom2.input.SAXBuilder r0;
        org.jdom2.input.sax.SAXEngine $r1;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $r1 = r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine>;

        if $r1 == null goto label1;

        $r1 = r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine>;

        return $r1;

     label1:
        $r1 = virtualinvoke r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine buildEngine()>();

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine> = $r1;

        $r1 = r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine>;

        return $r1;
    }
    private void internalSetFeature(org.xml.sax.XMLReader, java.lang.String, boolean, java.lang.String) throws org.jdom2.JDOMException
    {
        org.jdom2.input.SAXBuilder r0;
        org.xml.sax.XMLReader $r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        org.xml.sax.SAXNotSupportedException r4;
        org.jdom2.JDOMException $r5;
        java.lang.StringBuilder $r6;
        java.lang.Class $r7;
        org.xml.sax.SAXNotRecognizedException r8;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $r1 := @parameter0: org.xml.sax.XMLReader;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r3 := @parameter3: java.lang.String;

     label1:
        interfaceinvoke $r1.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>($r2, $z0);

     label2:
        return;

     label3:
        r4 := @caughtexception;

        $r5 = new org.jdom2.JDOMException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" feature not supported for SAX driver ");

        $r7 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.jdom2.JDOMException: void <init>(java.lang.String)>($r2);

        throw $r5;

     label4:
        r8 := @caughtexception;

        $r5 = new org.jdom2.JDOMException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" feature not recognized for SAX driver ");

        $r7 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.jdom2.JDOMException: void <init>(java.lang.String)>($r2);

        throw $r5;

        catch org.xml.sax.SAXNotSupportedException from label1 to label2 with label3;
        catch org.xml.sax.SAXNotRecognizedException from label1 to label2 with label4;
    }
    private void internalSetProperty(org.xml.sax.XMLReader, java.lang.String, java.lang.Object, java.lang.String) throws org.jdom2.JDOMException
    {
        org.jdom2.input.SAXBuilder r0;
        org.xml.sax.XMLReader $r1;
        java.lang.String $r2, $r4;
        java.lang.Object $r3;
        org.xml.sax.SAXNotSupportedException r5;
        org.jdom2.JDOMException $r6;
        java.lang.StringBuilder $r7;
        java.lang.Class $r8;
        org.xml.sax.SAXNotRecognizedException r9;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $r1 := @parameter0: org.xml.sax.XMLReader;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.Object;

        $r4 := @parameter3: java.lang.String;

     label1:
        interfaceinvoke $r1.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>($r2, $r3);

     label2:
        return;

     label3:
        r5 := @caughtexception;

        $r6 = new org.jdom2.JDOMException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" property not supported for SAX driver ");

        $r8 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.jdom2.JDOMException: void <init>(java.lang.String)>($r2);

        throw $r6;

     label4:
        r9 := @caughtexception;

        $r6 = new org.jdom2.JDOMException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" property not recognized for SAX driver ");

        $r8 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.jdom2.JDOMException: void <init>(java.lang.String)>($r2);

        throw $r6;

        catch org.xml.sax.SAXNotSupportedException from label1 to label2 with label3;
        catch org.xml.sax.SAXNotRecognizedException from label1 to label2 with label4;
    }
    public org.jdom2.Document build(java.io.File) throws org.jdom2.JDOMException, java.io.IOException
    {
        org.jdom2.input.SAXBuilder r0;
        java.io.File $r1;
        org.jdom2.input.sax.SAXEngine $r2;
        org.jdom2.Document $r3;
        boolean $z0;
        java.lang.Throwable $r4;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $r1 := @parameter0: java.io.File;

     label1:
        $r2 = specialinvoke r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine getEngine()>();

        $r3 = interfaceinvoke $r2.<org.jdom2.input.sax.SAXEngine: org.jdom2.Document build(java.io.File)>($r1);

     label2:
        $z0 = r0.<org.jdom2.input.SAXBuilder: boolean reuseParser>;

        if $z0 != 0 goto label5;

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine> = null;

        return $r3;

     label3:
        $r4 := @caughtexception;

        $z0 = r0.<org.jdom2.input.SAXBuilder: boolean reuseParser>;

        if $z0 != 0 goto label4;

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine> = null;

     label4:
        throw $r4;

     label5:
        return $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public org.jdom2.Document build(java.io.InputStream) throws org.jdom2.JDOMException, java.io.IOException
    {
        org.jdom2.input.SAXBuilder r0;
        java.io.InputStream $r1;
        org.jdom2.input.sax.SAXEngine $r2;
        org.jdom2.Document $r3;
        boolean $z0;
        java.lang.Throwable $r4;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $r1 := @parameter0: java.io.InputStream;

     label1:
        $r2 = specialinvoke r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine getEngine()>();

        $r3 = interfaceinvoke $r2.<org.jdom2.input.sax.SAXEngine: org.jdom2.Document build(java.io.InputStream)>($r1);

     label2:
        $z0 = r0.<org.jdom2.input.SAXBuilder: boolean reuseParser>;

        if $z0 != 0 goto label5;

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine> = null;

        return $r3;

     label3:
        $r4 := @caughtexception;

        $z0 = r0.<org.jdom2.input.SAXBuilder: boolean reuseParser>;

        if $z0 != 0 goto label4;

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine> = null;

     label4:
        throw $r4;

     label5:
        return $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public org.jdom2.Document build(java.io.InputStream, java.lang.String) throws org.jdom2.JDOMException, java.io.IOException
    {
        org.jdom2.input.SAXBuilder r0;
        java.io.InputStream $r1;
        java.lang.String $r2;
        org.jdom2.input.sax.SAXEngine $r3;
        org.jdom2.Document $r4;
        boolean $z0;
        java.lang.Throwable $r5;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.lang.String;

     label1:
        $r3 = specialinvoke r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine getEngine()>();

        $r4 = interfaceinvoke $r3.<org.jdom2.input.sax.SAXEngine: org.jdom2.Document build(java.io.InputStream,java.lang.String)>($r1, $r2);

     label2:
        $z0 = r0.<org.jdom2.input.SAXBuilder: boolean reuseParser>;

        if $z0 != 0 goto label5;

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine> = null;

        return $r4;

     label3:
        $r5 := @caughtexception;

        $z0 = r0.<org.jdom2.input.SAXBuilder: boolean reuseParser>;

        if $z0 != 0 goto label4;

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine> = null;

     label4:
        throw $r5;

     label5:
        return $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public org.jdom2.Document build(java.io.Reader) throws org.jdom2.JDOMException, java.io.IOException
    {
        org.jdom2.input.SAXBuilder r0;
        java.io.Reader $r1;
        org.jdom2.input.sax.SAXEngine $r2;
        org.jdom2.Document $r3;
        boolean $z0;
        java.lang.Throwable $r4;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $r1 := @parameter0: java.io.Reader;

     label1:
        $r2 = specialinvoke r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine getEngine()>();

        $r3 = interfaceinvoke $r2.<org.jdom2.input.sax.SAXEngine: org.jdom2.Document build(java.io.Reader)>($r1);

     label2:
        $z0 = r0.<org.jdom2.input.SAXBuilder: boolean reuseParser>;

        if $z0 != 0 goto label5;

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine> = null;

        return $r3;

     label3:
        $r4 := @caughtexception;

        $z0 = r0.<org.jdom2.input.SAXBuilder: boolean reuseParser>;

        if $z0 != 0 goto label4;

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine> = null;

     label4:
        throw $r4;

     label5:
        return $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public org.jdom2.Document build(java.io.Reader, java.lang.String) throws org.jdom2.JDOMException, java.io.IOException
    {
        org.jdom2.input.SAXBuilder r0;
        java.io.Reader $r1;
        java.lang.String $r2;
        org.jdom2.input.sax.SAXEngine $r3;
        org.jdom2.Document $r4;
        boolean $z0;
        java.lang.Throwable $r5;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $r1 := @parameter0: java.io.Reader;

        $r2 := @parameter1: java.lang.String;

     label1:
        $r3 = specialinvoke r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine getEngine()>();

        $r4 = interfaceinvoke $r3.<org.jdom2.input.sax.SAXEngine: org.jdom2.Document build(java.io.Reader,java.lang.String)>($r1, $r2);

     label2:
        $z0 = r0.<org.jdom2.input.SAXBuilder: boolean reuseParser>;

        if $z0 != 0 goto label5;

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine> = null;

        return $r4;

     label3:
        $r5 := @caughtexception;

        $z0 = r0.<org.jdom2.input.SAXBuilder: boolean reuseParser>;

        if $z0 != 0 goto label4;

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine> = null;

     label4:
        throw $r5;

     label5:
        return $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public org.jdom2.Document build(java.lang.String) throws org.jdom2.JDOMException, java.io.IOException
    {
        org.jdom2.input.SAXBuilder r0;
        java.lang.String $r1;
        java.io.IOException r2;
        java.net.MalformedURLException r3;
        java.lang.NullPointerException $r4;
        org.jdom2.input.sax.SAXEngine $r5;
        org.jdom2.Document $r6;
        boolean $z0;
        int $i0, i1;
        char $c2;
        java.lang.Throwable $r7;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label01;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Unable to build a URI from a null systemID.");

        throw $r4;

     label01:
        $r5 = specialinvoke r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine getEngine()>();

        $r6 = interfaceinvoke $r5.<org.jdom2.input.sax.SAXEngine: org.jdom2.Document build(java.lang.String)>($r1);

     label02:
        $z0 = r0.<org.jdom2.input.SAXBuilder: boolean reuseParser>;

        if $z0 != 0 goto label16;

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine> = null;

        return $r6;

     label03:
        r2 := @caughtexception;

     label04:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

     label05:
        i1 = 0;

     label06:
        if i1 >= $i0 goto label09;

     label07:
        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i1);

        $z0 = staticinvoke <org.jdom2.Verifier: boolean isXMLWhitespace(char)>($c2);

     label08:
        if $z0 == 0 goto label09;

        i1 = i1 + 1;

        goto label06;

     label09:
        if i1 >= $i0 goto label15;

     label10:
        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i1);

     label11:
        if 60 != $c2 goto label15;

     label12:
        r3 = new java.net.MalformedURLException;

        specialinvoke r3.<java.net.MalformedURLException: void <init>(java.lang.String)>("SAXBuilder.build(String) expects the String to be a systemID, but in this instance it appears to be actual XML data.");

        virtualinvoke r3.<java.net.MalformedURLException: java.lang.Throwable initCause(java.lang.Throwable)>(r2);

        throw r3;

     label13:
        $r7 := @caughtexception;

        $z0 = r0.<org.jdom2.input.SAXBuilder: boolean reuseParser>;

        if $z0 != 0 goto label14;

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine> = null;

     label14:
        throw $r7;

     label15:
        throw r2;

     label16:
        return $r6;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label12 to label13 with label13;
        catch java.lang.Throwable from label15 to label16 with label13;
    }
    public org.jdom2.Document build(java.net.URL) throws org.jdom2.JDOMException, java.io.IOException
    {
        org.jdom2.input.SAXBuilder r0;
        java.net.URL $r1;
        org.jdom2.input.sax.SAXEngine $r2;
        org.jdom2.Document $r3;
        boolean $z0;
        java.lang.Throwable $r4;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $r1 := @parameter0: java.net.URL;

     label1:
        $r2 = specialinvoke r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine getEngine()>();

        $r3 = interfaceinvoke $r2.<org.jdom2.input.sax.SAXEngine: org.jdom2.Document build(java.net.URL)>($r1);

     label2:
        $z0 = r0.<org.jdom2.input.SAXBuilder: boolean reuseParser>;

        if $z0 != 0 goto label5;

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine> = null;

        return $r3;

     label3:
        $r4 := @caughtexception;

        $z0 = r0.<org.jdom2.input.SAXBuilder: boolean reuseParser>;

        if $z0 != 0 goto label4;

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine> = null;

     label4:
        throw $r4;

     label5:
        return $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public org.jdom2.Document build(org.xml.sax.InputSource) throws org.jdom2.JDOMException, java.io.IOException
    {
        org.jdom2.input.SAXBuilder r0;
        org.xml.sax.InputSource $r1;
        org.jdom2.input.sax.SAXEngine $r2;
        org.jdom2.Document $r3;
        boolean $z0;
        java.lang.Throwable $r4;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $r1 := @parameter0: org.xml.sax.InputSource;

     label1:
        $r2 = specialinvoke r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine getEngine()>();

        $r3 = interfaceinvoke $r2.<org.jdom2.input.sax.SAXEngine: org.jdom2.Document build(org.xml.sax.InputSource)>($r1);

     label2:
        $z0 = r0.<org.jdom2.input.SAXBuilder: boolean reuseParser>;

        if $z0 != 0 goto label5;

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine> = null;

        return $r3;

     label3:
        $r4 := @caughtexception;

        $z0 = r0.<org.jdom2.input.SAXBuilder: boolean reuseParser>;

        if $z0 != 0 goto label4;

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine> = null;

     label4:
        throw $r4;

     label5:
        return $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public org.jdom2.input.sax.SAXEngine buildEngine() throws org.jdom2.JDOMException
    {
        org.jdom2.input.SAXBuilder r0;
        org.jdom2.JDOMFactory $r1;
        org.jdom2.input.sax.SAXHandlerFactory $r2;
        org.jdom2.input.sax.SAXHandler $r3;
        boolean $z0;
        org.xml.sax.XMLReader $r4;
        org.jdom2.input.sax.XMLReaderJDOMFactory $r5;
        org.jdom2.input.sax.SAXBuilderEngine $r6;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $r2 = r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXHandlerFactory handlerfac>;

        $r1 = r0.<org.jdom2.input.SAXBuilder: org.jdom2.JDOMFactory jdomfac>;

        $r3 = interfaceinvoke $r2.<org.jdom2.input.sax.SAXHandlerFactory: org.jdom2.input.sax.SAXHandler createSAXHandler(org.jdom2.JDOMFactory)>($r1);

        $z0 = r0.<org.jdom2.input.SAXBuilder: boolean expand>;

        virtualinvoke $r3.<org.jdom2.input.sax.SAXHandler: void setExpandEntities(boolean)>($z0);

        $z0 = r0.<org.jdom2.input.SAXBuilder: boolean ignoringWhite>;

        virtualinvoke $r3.<org.jdom2.input.sax.SAXHandler: void setIgnoringElementContentWhitespace(boolean)>($z0);

        $z0 = r0.<org.jdom2.input.SAXBuilder: boolean ignoringBoundaryWhite>;

        virtualinvoke $r3.<org.jdom2.input.sax.SAXHandler: void setIgnoringBoundaryWhitespace(boolean)>($z0);

        $r4 = virtualinvoke r0.<org.jdom2.input.SAXBuilder: org.xml.sax.XMLReader createParser()>();

        virtualinvoke r0.<org.jdom2.input.SAXBuilder: void configureParser(org.xml.sax.XMLReader,org.jdom2.input.sax.SAXHandler)>($r4, $r3);

        $r5 = r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.XMLReaderJDOMFactory readerfac>;

        $z0 = interfaceinvoke $r5.<org.jdom2.input.sax.XMLReaderJDOMFactory: boolean isValidating()>();

        $r6 = new org.jdom2.input.sax.SAXBuilderEngine;

        specialinvoke $r6.<org.jdom2.input.sax.SAXBuilderEngine: void <init>(org.xml.sax.XMLReader,org.jdom2.input.sax.SAXHandler,boolean)>($r4, $r3, $z0);

        return $r6;
    }
    protected void configureParser(org.xml.sax.XMLReader, org.jdom2.input.sax.SAXHandler) throws org.jdom2.JDOMException
    {
        org.jdom2.input.SAXBuilder r0;
        org.xml.sax.XMLReader $r1;
        org.jdom2.input.sax.SAXHandler $r2;
        org.xml.sax.EntityResolver $r3;
        org.xml.sax.DTDHandler $r4;
        org.xml.sax.ErrorHandler $r5;
        boolean z0, $z1;
        java.util.HashMap $r6;
        java.util.Set $r7;
        java.util.Iterator $r8;
        java.lang.Object $r9, $r15;
        java.util.Map$Entry r10;
        java.lang.String $r11, $r13;
        java.lang.Boolean $r12;
        org.jdom2.input.sax.BuilderErrorHandler $r14;
        org.xml.sax.SAXNotRecognizedException $r16, $r19, $r21;
        org.xml.sax.SAXNotSupportedException $r17, $r20, $r22;
        org.xml.sax.SAXException $r18;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $r1 := @parameter0: org.xml.sax.XMLReader;

        $r2 := @parameter1: org.jdom2.input.sax.SAXHandler;

        interfaceinvoke $r1.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>($r2);

        $r3 = r0.<org.jdom2.input.SAXBuilder: org.xml.sax.EntityResolver saxEntityResolver>;

        if $r3 == null goto label01;

        $r3 = r0.<org.jdom2.input.SAXBuilder: org.xml.sax.EntityResolver saxEntityResolver>;

        interfaceinvoke $r1.<org.xml.sax.XMLReader: void setEntityResolver(org.xml.sax.EntityResolver)>($r3);

     label01:
        $r4 = r0.<org.jdom2.input.SAXBuilder: org.xml.sax.DTDHandler saxDTDHandler>;

        if $r4 == null goto label10;

        $r4 = r0.<org.jdom2.input.SAXBuilder: org.xml.sax.DTDHandler saxDTDHandler>;

        interfaceinvoke $r1.<org.xml.sax.XMLReader: void setDTDHandler(org.xml.sax.DTDHandler)>($r4);

     label02:
        $r5 = r0.<org.jdom2.input.SAXBuilder: org.xml.sax.ErrorHandler saxErrorHandler>;

        if $r5 == null goto label11;

        $r5 = r0.<org.jdom2.input.SAXBuilder: org.xml.sax.ErrorHandler saxErrorHandler>;

        interfaceinvoke $r1.<org.xml.sax.XMLReader: void setErrorHandler(org.xml.sax.ErrorHandler)>($r5);

     label03:
        z0 = 0;

     label04:
        interfaceinvoke $r1.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://xml.org/sax/properties/lexical-handler", $r2);

     label05:
        z0 = 1;

     label06:
        if z0 != 0 goto label08;

     label07:
        interfaceinvoke $r1.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://xml.org/sax/handlers/LexicalHandler", $r2);

     label08:
        $r6 = r0.<org.jdom2.input.SAXBuilder: java.util.HashMap features>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if z0 == 0 goto label12;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.util.Map$Entry) $r9;

        $r9 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = (java.lang.String) $r9;

        $r9 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (java.lang.Boolean) $r9;

        z0 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();

        $r9 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = (java.lang.String) $r9;

        specialinvoke r0.<org.jdom2.input.SAXBuilder: void internalSetFeature(org.xml.sax.XMLReader,java.lang.String,boolean,java.lang.String)>($r1, $r11, z0, $r13);

        goto label09;

     label10:
        interfaceinvoke $r1.<org.xml.sax.XMLReader: void setDTDHandler(org.xml.sax.DTDHandler)>($r2);

        goto label02;

     label11:
        $r14 = new org.jdom2.input.sax.BuilderErrorHandler;

        specialinvoke $r14.<org.jdom2.input.sax.BuilderErrorHandler: void <init>()>();

        interfaceinvoke $r1.<org.xml.sax.XMLReader: void setErrorHandler(org.xml.sax.ErrorHandler)>($r14);

        goto label03;

     label12:
        $r6 = r0.<org.jdom2.input.SAXBuilder: java.util.HashMap properties>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label13:
        z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if z0 == 0 goto label14;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.util.Map$Entry) $r9;

        $r9 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = (java.lang.String) $r9;

        $r9 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r15 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = (java.lang.String) $r15;

        specialinvoke r0.<org.jdom2.input.SAXBuilder: void internalSetProperty(org.xml.sax.XMLReader,java.lang.String,java.lang.Object,java.lang.String)>($r1, $r11, $r9, $r13);

        goto label13;

     label14:
        z0 = interfaceinvoke $r1.<org.xml.sax.XMLReader: boolean getFeature(java.lang.String)>("http://xml.org/sax/features/external-general-entities");

     label15:
        $z1 = r0.<org.jdom2.input.SAXBuilder: boolean expand>;

        if z0 == $z1 goto label17;

        z0 = r0.<org.jdom2.input.SAXBuilder: boolean expand>;

     label16:
        interfaceinvoke $r1.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/external-general-entities", z0);

     label17:
        z0 = r0.<org.jdom2.input.SAXBuilder: boolean expand>;

        if z0 != 0 goto label27;

     label18:
        interfaceinvoke $r1.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://xml.org/sax/properties/declaration-handler", $r2);

     label19:
        return;

     label20:
        $r16 := @caughtexception;

        return;

     label21:
        $r17 := @caughtexception;

        return;

     label22:
        $r18 := @caughtexception;

        goto label17;

     label23:
        $r19 := @caughtexception;

        goto label08;

     label24:
        $r20 := @caughtexception;

        goto label08;

     label25:
        $r21 := @caughtexception;

        goto label06;

     label26:
        $r22 := @caughtexception;

        goto label06;

     label27:
        return;

        catch org.xml.sax.SAXNotSupportedException from label04 to label05 with label26;
        catch org.xml.sax.SAXNotRecognizedException from label04 to label05 with label25;
        catch org.xml.sax.SAXNotSupportedException from label07 to label08 with label24;
        catch org.xml.sax.SAXNotRecognizedException from label07 to label08 with label23;
        catch org.xml.sax.SAXException from label14 to label15 with label22;
        catch org.xml.sax.SAXException from label16 to label17 with label22;
        catch org.xml.sax.SAXNotSupportedException from label18 to label19 with label21;
        catch org.xml.sax.SAXNotRecognizedException from label18 to label19 with label20;
    }
    protected org.xml.sax.XMLReader createParser() throws org.jdom2.JDOMException
    {
        org.jdom2.input.SAXBuilder r0;
        org.jdom2.input.sax.XMLReaderJDOMFactory $r1;
        org.xml.sax.XMLReader $r2, $r4;
        org.xml.sax.XMLFilter $r3;
        boolean $z0;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $r1 = r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.XMLReaderJDOMFactory readerfac>;

        $r2 = interfaceinvoke $r1.<org.jdom2.input.sax.XMLReaderJDOMFactory: org.xml.sax.XMLReader createXMLReader()>();

        $r3 = r0.<org.jdom2.input.SAXBuilder: org.xml.sax.XMLFilter saxXMLFilter>;

        if $r3 == null goto label3;

        $r3 = r0.<org.jdom2.input.SAXBuilder: org.xml.sax.XMLFilter saxXMLFilter>;

     label1:
        $r4 = interfaceinvoke $r3.<org.xml.sax.XMLFilter: org.xml.sax.XMLReader getParent()>();

        $z0 = $r4 instanceof org.xml.sax.XMLFilter;

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<org.xml.sax.XMLFilter: org.xml.sax.XMLReader getParent()>();

        $r3 = (org.xml.sax.XMLFilter) $r4;

        goto label1;

     label2:
        interfaceinvoke $r3.<org.xml.sax.XMLFilter: void setParent(org.xml.sax.XMLReader)>($r2);

        $r3 = r0.<org.jdom2.input.SAXBuilder: org.xml.sax.XMLFilter saxXMLFilter>;

        return $r3;

     label3:
        return $r2;
    }
    public org.xml.sax.DTDHandler getDTDHandler()
    {
        org.jdom2.input.SAXBuilder r0;
        org.xml.sax.DTDHandler r1;

        r0 := @this: org.jdom2.input.SAXBuilder;

        r1 = r0.<org.jdom2.input.SAXBuilder: org.xml.sax.DTDHandler saxDTDHandler>;

        return r1;
    }
    public java.lang.String getDriverClass()
    {
        org.jdom2.input.SAXBuilder r0;
        java.lang.String $r1;
        org.jdom2.input.sax.XMLReaderJDOMFactory $r2;
        boolean $z0;
        org.jdom2.input.sax.XMLReaderSAX2Factory $r3;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $r2 = r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.XMLReaderJDOMFactory readerfac>;

        $z0 = $r2 instanceof org.jdom2.input.sax.XMLReaderSAX2Factory;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.XMLReaderJDOMFactory readerfac>;

        $r3 = (org.jdom2.input.sax.XMLReaderSAX2Factory) $r2;

        $r1 = virtualinvoke $r3.<org.jdom2.input.sax.XMLReaderSAX2Factory: java.lang.String getDriverClassName()>();

        return $r1;

     label1:
        return null;
    }
    public org.xml.sax.EntityResolver getEntityResolver()
    {
        org.jdom2.input.SAXBuilder r0;
        org.xml.sax.EntityResolver r1;

        r0 := @this: org.jdom2.input.SAXBuilder;

        r1 = r0.<org.jdom2.input.SAXBuilder: org.xml.sax.EntityResolver saxEntityResolver>;

        return r1;
    }
    public org.xml.sax.ErrorHandler getErrorHandler()
    {
        org.jdom2.input.SAXBuilder r0;
        org.xml.sax.ErrorHandler r1;

        r0 := @this: org.jdom2.input.SAXBuilder;

        r1 = r0.<org.jdom2.input.SAXBuilder: org.xml.sax.ErrorHandler saxErrorHandler>;

        return r1;
    }
    public boolean getExpandEntities()
    {
        org.jdom2.input.SAXBuilder r0;
        boolean z0;

        r0 := @this: org.jdom2.input.SAXBuilder;

        z0 = r0.<org.jdom2.input.SAXBuilder: boolean expand>;

        return z0;
    }
    public org.jdom2.JDOMFactory getFactory()
    {
        org.jdom2.input.SAXBuilder r0;
        org.jdom2.JDOMFactory $r1;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $r1 = virtualinvoke r0.<org.jdom2.input.SAXBuilder: org.jdom2.JDOMFactory getJDOMFactory()>();

        return $r1;
    }
    public boolean getIgnoringBoundaryWhitespace()
    {
        org.jdom2.input.SAXBuilder r0;
        boolean z0;

        r0 := @this: org.jdom2.input.SAXBuilder;

        z0 = r0.<org.jdom2.input.SAXBuilder: boolean ignoringBoundaryWhite>;

        return z0;
    }
    public boolean getIgnoringElementContentWhitespace()
    {
        org.jdom2.input.SAXBuilder r0;
        boolean z0;

        r0 := @this: org.jdom2.input.SAXBuilder;

        z0 = r0.<org.jdom2.input.SAXBuilder: boolean ignoringWhite>;

        return z0;
    }
    public org.jdom2.JDOMFactory getJDOMFactory()
    {
        org.jdom2.input.SAXBuilder r0;
        org.jdom2.JDOMFactory r1;

        r0 := @this: org.jdom2.input.SAXBuilder;

        r1 = r0.<org.jdom2.input.SAXBuilder: org.jdom2.JDOMFactory jdomfac>;

        return r1;
    }
    public boolean getReuseParser()
    {
        org.jdom2.input.SAXBuilder r0;
        boolean z0;

        r0 := @this: org.jdom2.input.SAXBuilder;

        z0 = r0.<org.jdom2.input.SAXBuilder: boolean reuseParser>;

        return z0;
    }
    public org.jdom2.input.sax.SAXHandlerFactory getSAXHandlerFactory()
    {
        org.jdom2.input.SAXBuilder r0;
        org.jdom2.input.sax.SAXHandlerFactory r1;

        r0 := @this: org.jdom2.input.SAXBuilder;

        r1 = r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXHandlerFactory handlerfac>;

        return r1;
    }
    public boolean getValidation()
    {
        org.jdom2.input.SAXBuilder r0;
        boolean $z0;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $z0 = virtualinvoke r0.<org.jdom2.input.SAXBuilder: boolean isValidating()>();

        return $z0;
    }
    public org.xml.sax.XMLFilter getXMLFilter()
    {
        org.jdom2.input.SAXBuilder r0;
        org.xml.sax.XMLFilter r1;

        r0 := @this: org.jdom2.input.SAXBuilder;

        r1 = r0.<org.jdom2.input.SAXBuilder: org.xml.sax.XMLFilter saxXMLFilter>;

        return r1;
    }
    public org.jdom2.input.sax.XMLReaderJDOMFactory getXMLReaderFactory()
    {
        org.jdom2.input.SAXBuilder r0;
        org.jdom2.input.sax.XMLReaderJDOMFactory r1;

        r0 := @this: org.jdom2.input.SAXBuilder;

        r1 = r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.XMLReaderJDOMFactory readerfac>;

        return r1;
    }
    public boolean isValidating()
    {
        org.jdom2.input.SAXBuilder r0;
        boolean $z0;
        org.jdom2.input.sax.XMLReaderJDOMFactory $r1;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $r1 = r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.XMLReaderJDOMFactory readerfac>;

        $z0 = interfaceinvoke $r1.<org.jdom2.input.sax.XMLReaderJDOMFactory: boolean isValidating()>();

        return $z0;
    }
    public void setDTDHandler(org.xml.sax.DTDHandler)
    {
        org.jdom2.input.SAXBuilder r0;
        org.xml.sax.DTDHandler $r1;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $r1 := @parameter0: org.xml.sax.DTDHandler;

        r0.<org.jdom2.input.SAXBuilder: org.xml.sax.DTDHandler saxDTDHandler> = $r1;

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine> = null;

        return;
    }
    public void setEntityResolver(org.xml.sax.EntityResolver)
    {
        org.jdom2.input.SAXBuilder r0;
        org.xml.sax.EntityResolver $r1;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $r1 := @parameter0: org.xml.sax.EntityResolver;

        r0.<org.jdom2.input.SAXBuilder: org.xml.sax.EntityResolver saxEntityResolver> = $r1;

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine> = null;

        return;
    }
    public void setErrorHandler(org.xml.sax.ErrorHandler)
    {
        org.jdom2.input.SAXBuilder r0;
        org.xml.sax.ErrorHandler $r1;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $r1 := @parameter0: org.xml.sax.ErrorHandler;

        r0.<org.jdom2.input.SAXBuilder: org.xml.sax.ErrorHandler saxErrorHandler> = $r1;

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine> = null;

        return;
    }
    public void setExpandEntities(boolean)
    {
        org.jdom2.input.SAXBuilder r0;
        boolean $z0;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $z0 := @parameter0: boolean;

        r0.<org.jdom2.input.SAXBuilder: boolean expand> = $z0;

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine> = null;

        return;
    }
    public void setFactory(org.jdom2.JDOMFactory)
    {
        org.jdom2.input.SAXBuilder r0;
        org.jdom2.JDOMFactory $r1;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $r1 := @parameter0: org.jdom2.JDOMFactory;

        virtualinvoke r0.<org.jdom2.input.SAXBuilder: void setJDOMFactory(org.jdom2.JDOMFactory)>($r1);

        return;
    }
    public void setFastReconfigure(boolean)
    {
        org.jdom2.input.SAXBuilder r0;
        boolean $z0;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $z0 := @parameter0: boolean;

        return;
    }
    public void setFeature(java.lang.String, boolean)
    {
        org.jdom2.input.SAXBuilder r0;
        java.lang.String $r1;
        boolean $z0;
        java.util.HashMap $r2;
        java.lang.Boolean $r3;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = r0.<org.jdom2.input.SAXBuilder: java.util.HashMap features>;

        if $z0 == 0 goto label2;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

     label1:
        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine> = null;

        return;

     label2:
        $r3 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        goto label1;
    }
    public void setIgnoringBoundaryWhitespace(boolean)
    {
        org.jdom2.input.SAXBuilder r0;
        boolean $z0;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $z0 := @parameter0: boolean;

        r0.<org.jdom2.input.SAXBuilder: boolean ignoringBoundaryWhite> = $z0;

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine> = null;

        return;
    }
    public void setIgnoringElementContentWhitespace(boolean)
    {
        org.jdom2.input.SAXBuilder r0;
        boolean $z0;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $z0 := @parameter0: boolean;

        r0.<org.jdom2.input.SAXBuilder: boolean ignoringWhite> = $z0;

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine> = null;

        return;
    }
    public void setJDOMFactory(org.jdom2.JDOMFactory)
    {
        org.jdom2.input.SAXBuilder r0;
        org.jdom2.JDOMFactory $r1;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $r1 := @parameter0: org.jdom2.JDOMFactory;

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.JDOMFactory jdomfac> = $r1;

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine> = null;

        return;
    }
    public void setProperty(java.lang.String, java.lang.Object)
    {
        org.jdom2.input.SAXBuilder r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.util.HashMap $r3;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.jdom2.input.SAXBuilder: java.util.HashMap properties>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine> = null;

        return;
    }
    public void setReuseParser(boolean)
    {
        org.jdom2.input.SAXBuilder r0;
        boolean $z0;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $z0 := @parameter0: boolean;

        r0.<org.jdom2.input.SAXBuilder: boolean reuseParser> = $z0;

        if $z0 != 0 goto label1;

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine> = null;

     label1:
        return;
    }
    public void setSAXHandlerFactory(org.jdom2.input.sax.SAXHandlerFactory)
    {
        org.jdom2.input.SAXBuilder r0;
        org.jdom2.input.sax.SAXHandlerFactory $r1;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $r1 := @parameter0: org.jdom2.input.sax.SAXHandlerFactory;

        if $r1 != null goto label1;

        $r1 = <org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXHandlerFactory DEFAULTSAXHANDLERFAC>;

     label1:
        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXHandlerFactory handlerfac> = $r1;

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine> = null;

        return;
    }
    public void setValidation(boolean)
    {
        org.jdom2.input.SAXBuilder r0;
        boolean $z0;
        org.jdom2.input.sax.XMLReaders $r1;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label2;

        $r1 = <org.jdom2.input.sax.XMLReaders: org.jdom2.input.sax.XMLReaders DTDVALIDATING>;

     label1:
        virtualinvoke r0.<org.jdom2.input.SAXBuilder: void setXMLReaderFactory(org.jdom2.input.sax.XMLReaderJDOMFactory)>($r1);

        return;

     label2:
        $r1 = <org.jdom2.input.sax.XMLReaders: org.jdom2.input.sax.XMLReaders NONVALIDATING>;

        goto label1;
    }
    public void setXMLFilter(org.xml.sax.XMLFilter)
    {
        org.jdom2.input.SAXBuilder r0;
        org.xml.sax.XMLFilter $r1;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $r1 := @parameter0: org.xml.sax.XMLFilter;

        r0.<org.jdom2.input.SAXBuilder: org.xml.sax.XMLFilter saxXMLFilter> = $r1;

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine> = null;

        return;
    }
    public void setXMLReaderFactory(org.jdom2.input.sax.XMLReaderJDOMFactory)
    {
        org.jdom2.input.SAXBuilder r0;
        org.jdom2.input.sax.XMLReaderJDOMFactory $r1;

        r0 := @this: org.jdom2.input.SAXBuilder;

        $r1 := @parameter0: org.jdom2.input.sax.XMLReaderJDOMFactory;

        if $r1 != null goto label1;

        $r1 = <org.jdom2.input.sax.XMLReaders: org.jdom2.input.sax.XMLReaders NONVALIDATING>;

     label1:
        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.XMLReaderJDOMFactory readerfac> = $r1;

        r0.<org.jdom2.input.SAXBuilder: org.jdom2.input.sax.SAXEngine engine> = null;

        return;
    }
