org.jdom2.input.sax.XMLReaders extends java.lang.Enum implements org.jdom2.input.sax.XMLReaderJDOMFactory
private static final org.jdom2.input.sax.XMLReaders[] $VALUES
public static final enum org.jdom2.input.sax.XMLReaders DTDVALIDATING
public static final enum org.jdom2.input.sax.XMLReaders NONVALIDATING
public static final enum org.jdom2.input.sax.XMLReaders XSDVALIDATING
private final java.lang.Exception failcause
private final javax.xml.parsers.SAXParserFactory jaxpfactory
private final boolean validates
    static void <clinit>()
    {
        org.jdom2.input.sax.XMLReaders $r0;
        org.jdom2.input.sax.XMLReaders[] $r1;

        $r0 = new org.jdom2.input.sax.XMLReaders;

        specialinvoke $r0.<org.jdom2.input.sax.XMLReaders: void <init>(java.lang.String,int,int)>("NONVALIDATING", 0, 0);

        <org.jdom2.input.sax.XMLReaders: org.jdom2.input.sax.XMLReaders NONVALIDATING> = $r0;

        $r0 = new org.jdom2.input.sax.XMLReaders;

        specialinvoke $r0.<org.jdom2.input.sax.XMLReaders: void <init>(java.lang.String,int,int)>("DTDVALIDATING", 1, 1);

        <org.jdom2.input.sax.XMLReaders: org.jdom2.input.sax.XMLReaders DTDVALIDATING> = $r0;

        $r0 = new org.jdom2.input.sax.XMLReaders;

        specialinvoke $r0.<org.jdom2.input.sax.XMLReaders: void <init>(java.lang.String,int,int)>("XSDVALIDATING", 2, 2);

        <org.jdom2.input.sax.XMLReaders: org.jdom2.input.sax.XMLReaders XSDVALIDATING> = $r0;

        $r1 = newarray (org.jdom2.input.sax.XMLReaders)[3];

        $r0 = <org.jdom2.input.sax.XMLReaders: org.jdom2.input.sax.XMLReaders NONVALIDATING>;

        $r1[0] = $r0;

        $r0 = <org.jdom2.input.sax.XMLReaders: org.jdom2.input.sax.XMLReaders DTDVALIDATING>;

        $r1[1] = $r0;

        $r0 = <org.jdom2.input.sax.XMLReaders: org.jdom2.input.sax.XMLReaders XSDVALIDATING>;

        $r1[2] = $r0;

        <org.jdom2.input.sax.XMLReaders: org.jdom2.input.sax.XMLReaders[] $VALUES> = $r1;

        return;
    }
    private void <init>(java.lang.String, int, int)
    {
        org.jdom2.input.sax.XMLReaders r0;
        java.lang.String $r1;
        int $i0, $i1;
        java.lang.IllegalArgumentException r2;
        org.xml.sax.SAXException r3;
        java.lang.UnsupportedOperationException r4;
        javax.xml.parsers.SAXParserFactory $r5, r6;
        boolean z0;
        java.lang.Exception r7;
        javax.xml.validation.SchemaFactory $r8;
        javax.xml.validation.Schema $r9;

        r0 := @this: org.jdom2.input.sax.XMLReaders;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        $r5 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        r6 = $r5;

        z0 = 0;

        r7 = null;

        virtualinvoke $r5.<javax.xml.parsers.SAXParserFactory: void setNamespaceAware(boolean)>(1);

        lookupswitch($i1)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            default: goto label1;
        };

     label1:
        r0.<org.jdom2.input.sax.XMLReaders: javax.xml.parsers.SAXParserFactory jaxpfactory> = r6;

        r0.<org.jdom2.input.sax.XMLReaders: boolean validates> = z0;

        r0.<org.jdom2.input.sax.XMLReaders: java.lang.Exception failcause> = r7;

        return;

     label2:
        virtualinvoke $r5.<javax.xml.parsers.SAXParserFactory: void setValidating(boolean)>(0);

        goto label1;

     label3:
        virtualinvoke $r5.<javax.xml.parsers.SAXParserFactory: void setValidating(boolean)>(1);

        z0 = 1;

        goto label1;

     label4:
        virtualinvoke $r5.<javax.xml.parsers.SAXParserFactory: void setValidating(boolean)>(0);

     label5:
        $r8 = staticinvoke <javax.xml.validation.SchemaFactory: javax.xml.validation.SchemaFactory newInstance(java.lang.String)>("http://www.w3.org/2001/XMLSchema");

        $r9 = virtualinvoke $r8.<javax.xml.validation.SchemaFactory: javax.xml.validation.Schema newSchema()>();

        virtualinvoke $r5.<javax.xml.parsers.SAXParserFactory: void setSchema(javax.xml.validation.Schema)>($r9);

     label6:
        z0 = 1;

        goto label1;

     label7:
        r3 := @caughtexception;

        r6 = null;

        r7 = r3;

        goto label1;

     label8:
        r2 := @caughtexception;

        r6 = null;

        r7 = r2;

        goto label1;

     label9:
        r4 := @caughtexception;

        r6 = null;

        r7 = r4;

        goto label1;

        catch org.xml.sax.SAXException from label5 to label6 with label7;
        catch java.lang.IllegalArgumentException from label5 to label6 with label8;
        catch java.lang.UnsupportedOperationException from label5 to label6 with label9;
    }
    public static org.jdom2.input.sax.XMLReaders valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        org.jdom2.input.sax.XMLReaders $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/jdom2/input/sax/XMLReaders;", $r0);

        $r2 = (org.jdom2.input.sax.XMLReaders) $r1;

        return $r2;
    }
    public static org.jdom2.input.sax.XMLReaders[] values()
    {
        java.lang.Object $r0;
        org.jdom2.input.sax.XMLReaders[] $r1;

        $r1 = <org.jdom2.input.sax.XMLReaders: org.jdom2.input.sax.XMLReaders[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (org.jdom2.input.sax.XMLReaders[]) $r0;

        return $r1;
    }
    public org.xml.sax.XMLReader createXMLReader() throws org.jdom2.JDOMException
    {
        org.jdom2.input.sax.XMLReaders r0;
        javax.xml.parsers.SAXParserFactory $r1;
        org.jdom2.JDOMException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.lang.Exception $r5;
        javax.xml.parsers.SAXParser $r6;
        org.xml.sax.XMLReader $r7;
        org.xml.sax.SAXException r8;
        javax.xml.parsers.ParserConfigurationException r9;

        r0 := @this: org.jdom2.input.sax.XMLReaders;

        $r1 = r0.<org.jdom2.input.sax.XMLReaders: javax.xml.parsers.SAXParserFactory jaxpfactory>;

        if $r1 != null goto label1;

        $r2 = new org.jdom2.JDOMException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("It was not possible to configure a suitable XMLReader to support ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = r0.<org.jdom2.input.sax.XMLReaders: java.lang.Exception failcause>;

        specialinvoke $r2.<org.jdom2.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>($r4, $r5);

        throw $r2;

     label1:
        $r1 = r0.<org.jdom2.input.sax.XMLReaders: javax.xml.parsers.SAXParserFactory jaxpfactory>;

     label2:
        $r6 = virtualinvoke $r1.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        $r7 = virtualinvoke $r6.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

     label3:
        return $r7;

     label4:
        r8 := @caughtexception;

        $r2 = new org.jdom2.JDOMException;

        specialinvoke $r2.<org.jdom2.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to create a new XMLReader instance", r8);

        throw $r2;

     label5:
        r9 := @caughtexception;

        $r2 = new org.jdom2.JDOMException;

        specialinvoke $r2.<org.jdom2.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to create a new XMLReader instance", r9);

        throw $r2;

        catch org.xml.sax.SAXException from label2 to label3 with label4;
        catch javax.xml.parsers.ParserConfigurationException from label2 to label3 with label5;
    }
    public boolean isValidating()
    {
        org.jdom2.input.sax.XMLReaders r0;
        boolean z0;

        r0 := @this: org.jdom2.input.sax.XMLReaders;

        z0 = r0.<org.jdom2.input.sax.XMLReaders: boolean validates>;

        return z0;
    }
