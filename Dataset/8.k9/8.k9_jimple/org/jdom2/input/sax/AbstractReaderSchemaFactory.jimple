org.jdom2.input.sax.AbstractReaderSchemaFactory extends java.lang.Object implements org.jdom2.input.sax.XMLReaderJDOMFactory
private final javax.xml.parsers.SAXParserFactory saxfac
    public void <init>(javax.xml.parsers.SAXParserFactory, javax.xml.validation.Schema)
    {
        org.jdom2.input.sax.AbstractReaderSchemaFactory r0;
        javax.xml.parsers.SAXParserFactory $r1;
        javax.xml.validation.Schema $r2;
        java.lang.NullPointerException $r3;

        r0 := @this: org.jdom2.input.sax.AbstractReaderSchemaFactory;

        $r1 := @parameter0: javax.xml.parsers.SAXParserFactory;

        $r2 := @parameter1: javax.xml.validation.Schema;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $r2 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot create a SchemaXMLReaderFactory with a null schema");

        throw $r3;

     label1:
        r0.<org.jdom2.input.sax.AbstractReaderSchemaFactory: javax.xml.parsers.SAXParserFactory saxfac> = $r1;

        $r1 = r0.<org.jdom2.input.sax.AbstractReaderSchemaFactory: javax.xml.parsers.SAXParserFactory saxfac>;

        if $r1 == null goto label2;

        $r1 = r0.<org.jdom2.input.sax.AbstractReaderSchemaFactory: javax.xml.parsers.SAXParserFactory saxfac>;

        virtualinvoke $r1.<javax.xml.parsers.SAXParserFactory: void setNamespaceAware(boolean)>(1);

        $r1 = r0.<org.jdom2.input.sax.AbstractReaderSchemaFactory: javax.xml.parsers.SAXParserFactory saxfac>;

        virtualinvoke $r1.<javax.xml.parsers.SAXParserFactory: void setValidating(boolean)>(0);

        $r1 = r0.<org.jdom2.input.sax.AbstractReaderSchemaFactory: javax.xml.parsers.SAXParserFactory saxfac>;

        virtualinvoke $r1.<javax.xml.parsers.SAXParserFactory: void setSchema(javax.xml.validation.Schema)>($r2);

     label2:
        return;
    }
    public org.xml.sax.XMLReader createXMLReader() throws org.jdom2.JDOMException
    {
        org.jdom2.input.sax.AbstractReaderSchemaFactory r0;
        javax.xml.parsers.SAXParserFactory $r1;
        org.jdom2.JDOMException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        javax.xml.parsers.SAXParser $r5;
        org.xml.sax.XMLReader $r6;
        org.xml.sax.SAXException r7;
        javax.xml.parsers.ParserConfigurationException r8;

        r0 := @this: org.jdom2.input.sax.AbstractReaderSchemaFactory;

        $r1 = r0.<org.jdom2.input.sax.AbstractReaderSchemaFactory: javax.xml.parsers.SAXParserFactory saxfac>;

        if $r1 != null goto label1;

        $r2 = new org.jdom2.JDOMException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("It was not possible to configure a suitable XMLReader to support ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.jdom2.JDOMException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        $r1 = r0.<org.jdom2.input.sax.AbstractReaderSchemaFactory: javax.xml.parsers.SAXParserFactory saxfac>;

     label2:
        $r5 = virtualinvoke $r1.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        $r6 = virtualinvoke $r5.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

     label3:
        return $r6;

     label4:
        r7 := @caughtexception;

        $r2 = new org.jdom2.JDOMException;

        specialinvoke $r2.<org.jdom2.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>("Could not create a new Schema-Validating XMLReader.", r7);

        throw $r2;

     label5:
        r8 := @caughtexception;

        $r2 = new org.jdom2.JDOMException;

        specialinvoke $r2.<org.jdom2.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>("Could not create a new Schema-Validating XMLReader.", r8);

        throw $r2;

        catch org.xml.sax.SAXException from label2 to label3 with label4;
        catch javax.xml.parsers.ParserConfigurationException from label2 to label3 with label5;
    }
    public boolean isValidating()
    {
        org.jdom2.input.sax.AbstractReaderSchemaFactory r0;

        r0 := @this: org.jdom2.input.sax.AbstractReaderSchemaFactory;

        return 1;
    }
