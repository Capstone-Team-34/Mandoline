org.jdom2.input.sax.AbstractReaderXSDFactory extends org.jdom2.input.sax.AbstractReaderSchemaFactory
private static final java.lang.ThreadLocal schemafactl
    static void <clinit>()
    {
        java.lang.ThreadLocal $r0;

        $r0 = new java.lang.ThreadLocal;

        specialinvoke $r0.<java.lang.ThreadLocal: void <init>()>();

        <org.jdom2.input.sax.AbstractReaderXSDFactory: java.lang.ThreadLocal schemafactl> = $r0;

        return;
    }
    public transient void <init>(javax.xml.parsers.SAXParserFactory, org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider, java.io.File[]) throws org.jdom2.JDOMException
    {
        org.jdom2.input.sax.AbstractReaderXSDFactory r0;
        javax.xml.parsers.SAXParserFactory $r1;
        org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider $r2;
        java.io.File[] $r3;
        javax.xml.validation.Schema $r4;

        r0 := @this: org.jdom2.input.sax.AbstractReaderXSDFactory;

        $r1 := @parameter0: javax.xml.parsers.SAXParserFactory;

        $r2 := @parameter1: org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider;

        $r3 := @parameter2: java.io.File[];

        $r4 = staticinvoke <org.jdom2.input.sax.AbstractReaderXSDFactory: javax.xml.validation.Schema getSchemaFromFile(org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider,java.io.File[])>($r2, $r3);

        specialinvoke r0.<org.jdom2.input.sax.AbstractReaderSchemaFactory: void <init>(javax.xml.parsers.SAXParserFactory,javax.xml.validation.Schema)>($r1, $r4);

        return;
    }
    public transient void <init>(javax.xml.parsers.SAXParserFactory, org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider, java.lang.String[]) throws org.jdom2.JDOMException
    {
        org.jdom2.input.sax.AbstractReaderXSDFactory r0;
        javax.xml.parsers.SAXParserFactory $r1;
        org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider $r2;
        java.lang.String[] $r3;
        javax.xml.validation.Schema $r4;

        r0 := @this: org.jdom2.input.sax.AbstractReaderXSDFactory;

        $r1 := @parameter0: javax.xml.parsers.SAXParserFactory;

        $r2 := @parameter1: org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider;

        $r3 := @parameter2: java.lang.String[];

        $r4 = staticinvoke <org.jdom2.input.sax.AbstractReaderXSDFactory: javax.xml.validation.Schema getSchemaFromString(org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider,java.lang.String[])>($r2, $r3);

        specialinvoke r0.<org.jdom2.input.sax.AbstractReaderSchemaFactory: void <init>(javax.xml.parsers.SAXParserFactory,javax.xml.validation.Schema)>($r1, $r4);

        return;
    }
    public transient void <init>(javax.xml.parsers.SAXParserFactory, org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider, java.net.URL[]) throws org.jdom2.JDOMException
    {
        org.jdom2.input.sax.AbstractReaderXSDFactory r0;
        javax.xml.parsers.SAXParserFactory $r1;
        org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider $r2;
        java.net.URL[] $r3;
        javax.xml.validation.Schema $r4;

        r0 := @this: org.jdom2.input.sax.AbstractReaderXSDFactory;

        $r1 := @parameter0: javax.xml.parsers.SAXParserFactory;

        $r2 := @parameter1: org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider;

        $r3 := @parameter2: java.net.URL[];

        $r4 = staticinvoke <org.jdom2.input.sax.AbstractReaderXSDFactory: javax.xml.validation.Schema getSchemaFromURL(org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider,java.net.URL[])>($r2, $r3);

        specialinvoke r0.<org.jdom2.input.sax.AbstractReaderSchemaFactory: void <init>(javax.xml.parsers.SAXParserFactory,javax.xml.validation.Schema)>($r1, $r4);

        return;
    }
    public transient void <init>(javax.xml.parsers.SAXParserFactory, org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider, javax.xml.transform.Source[]) throws org.jdom2.JDOMException
    {
        org.jdom2.input.sax.AbstractReaderXSDFactory r0;
        javax.xml.parsers.SAXParserFactory $r1;
        org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider $r2;
        javax.xml.transform.Source[] $r3;
        javax.xml.validation.Schema $r4;

        r0 := @this: org.jdom2.input.sax.AbstractReaderXSDFactory;

        $r1 := @parameter0: javax.xml.parsers.SAXParserFactory;

        $r2 := @parameter1: org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider;

        $r3 := @parameter2: javax.xml.transform.Source[];

        $r4 = staticinvoke <org.jdom2.input.sax.AbstractReaderXSDFactory: javax.xml.validation.Schema getSchemaFromSource(org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider,javax.xml.transform.Source[])>($r2, $r3);

        specialinvoke r0.<org.jdom2.input.sax.AbstractReaderSchemaFactory: void <init>(javax.xml.parsers.SAXParserFactory,javax.xml.validation.Schema)>($r1, $r4);

        return;
    }
    private static final transient javax.xml.validation.Schema getSchemaFromFile(org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider, java.io.File[]) throws org.jdom2.JDOMException
    {
        org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider $r0;
        java.io.File[] $r1;
        javax.xml.transform.Source[] r2;
        javax.xml.validation.Schema $r3;
        java.lang.NullPointerException $r4;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r5;
        java.io.File $r6;
        javax.xml.transform.stream.StreamSource $r7;

        $r0 := @parameter0: org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider;

        $r1 := @parameter1: java.io.File[];

        if $r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot specify a null input array");

        throw $r4;

     label1:
        $i0 = lengthof $r1;

        if $i0 != 0 goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("You need at least one XSD source for an XML Schema validator");

        throw $r5;

     label2:
        $i0 = lengthof $r1;

        r2 = newarray (javax.xml.transform.Source)[$i0];

        $i0 = 0;

     label3:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label5;

        $r6 = $r1[$i0];

        if $r6 != null goto label4;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot specify a null SystemID");

        throw $r4;

     label4:
        $r7 = new javax.xml.transform.stream.StreamSource;

        $r6 = $r1[$i0];

        specialinvoke $r7.<javax.xml.transform.stream.StreamSource: void <init>(java.io.File)>($r6);

        r2[$i0] = $r7;

        $i0 = $i0 + 1;

        goto label3;

     label5:
        $r3 = staticinvoke <org.jdom2.input.sax.AbstractReaderXSDFactory: javax.xml.validation.Schema getSchemaFromSource(org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider,javax.xml.transform.Source[])>($r0, r2);

        return $r3;
    }
    private static final transient javax.xml.validation.Schema getSchemaFromSource(org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider, javax.xml.transform.Source[]) throws org.jdom2.JDOMException
    {
        org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider $r0;
        javax.xml.transform.Source[] $r1;
        org.xml.sax.SAXException r2;
        java.lang.NullPointerException $r3;
        int $i0;
        java.lang.IllegalArgumentException $r4;
        java.lang.ThreadLocal $r5;
        java.lang.Object $r6;
        javax.xml.validation.SchemaFactory r7, $r8;
        org.jdom2.JDOMException $r9;
        java.lang.String $r10;
        java.lang.StringBuilder $r11;
        javax.xml.validation.Schema $r12;

        $r0 := @parameter0: org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider;

        $r1 := @parameter1: javax.xml.transform.Source[];

        if $r1 != null goto label01;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot specify a null input array");

        throw $r3;

     label01:
        $i0 = lengthof $r1;

        if $i0 != 0 goto label02;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("You need at least one XSD Source for an XML Schema validator");

        throw $r4;

     label02:
        $r5 = <org.jdom2.input.sax.AbstractReaderXSDFactory: java.lang.ThreadLocal schemafactl>;

     label03:
        $r6 = virtualinvoke $r5.<java.lang.ThreadLocal: java.lang.Object get()>();

     label04:
        r7 = (javax.xml.validation.SchemaFactory) $r6;

        if r7 != null goto label08;

     label05:
        $r8 = interfaceinvoke $r0.<org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider: javax.xml.validation.SchemaFactory getSchemaFactory()>();

     label06:
        r7 = $r8;

        $r5 = <org.jdom2.input.sax.AbstractReaderXSDFactory: java.lang.ThreadLocal schemafactl>;

     label07:
        virtualinvoke $r5.<java.lang.ThreadLocal: void set(java.lang.Object)>($r8);

     label08:
        if r7 != null goto label12;

        $r9 = new org.jdom2.JDOMException;

     label09:
        specialinvoke $r9.<org.jdom2.JDOMException: void <init>(java.lang.String)>("Unable to create XSDSchema validator.");

     label10:
        throw $r9;

     label11:
        r2 := @caughtexception;

        $r10 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r1);

        $r9 = new org.jdom2.JDOMException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create a Schema for Sources ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.jdom2.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>($r10, r2);

        throw $r9;

     label12:
        $r12 = virtualinvoke r7.<javax.xml.validation.SchemaFactory: javax.xml.validation.Schema newSchema(javax.xml.transform.Source[])>($r1);

     label13:
        return $r12;

        catch org.xml.sax.SAXException from label03 to label04 with label11;
        catch org.xml.sax.SAXException from label05 to label06 with label11;
        catch org.xml.sax.SAXException from label07 to label08 with label11;
        catch org.xml.sax.SAXException from label09 to label10 with label11;
        catch org.xml.sax.SAXException from label12 to label13 with label11;
    }
    private static final transient javax.xml.validation.Schema getSchemaFromString(org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider, java.lang.String[]) throws org.jdom2.JDOMException
    {
        org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider $r0;
        java.lang.String[] $r1;
        javax.xml.transform.Source[] r2;
        javax.xml.validation.Schema $r3;
        java.lang.NullPointerException $r4;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;
        javax.xml.transform.stream.StreamSource $r7;

        $r0 := @parameter0: org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider;

        $r1 := @parameter1: java.lang.String[];

        if $r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot specify a null input array");

        throw $r4;

     label1:
        $i0 = lengthof $r1;

        if $i0 != 0 goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("You need at least one XSD source for an XML Schema validator");

        throw $r5;

     label2:
        $i0 = lengthof $r1;

        r2 = newarray (javax.xml.transform.Source)[$i0];

        $i0 = 0;

     label3:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label5;

        $r6 = $r1[$i0];

        if $r6 != null goto label4;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot specify a null SystemID");

        throw $r4;

     label4:
        $r7 = new javax.xml.transform.stream.StreamSource;

        $r6 = $r1[$i0];

        specialinvoke $r7.<javax.xml.transform.stream.StreamSource: void <init>(java.lang.String)>($r6);

        r2[$i0] = $r7;

        $i0 = $i0 + 1;

        goto label3;

     label5:
        $r3 = staticinvoke <org.jdom2.input.sax.AbstractReaderXSDFactory: javax.xml.validation.Schema getSchemaFromSource(org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider,javax.xml.transform.Source[])>($r0, r2);

        return $r3;
    }
    private static final transient javax.xml.validation.Schema getSchemaFromURL(org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider, java.net.URL[]) throws org.jdom2.JDOMException
    {
        org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider $r0;
        java.net.URL[] $r1;
        java.io.IOException r2, $r15, $r16;
        javax.xml.transform.Source[] r3;
        java.io.InputStream[] r4;
        java.lang.NullPointerException $r5;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r6;
        java.net.URL $r7;
        java.lang.Throwable $r8;
        java.io.InputStream r9;
        javax.xml.transform.stream.StreamSource $r10;
        java.lang.String $r11;
        org.jdom2.JDOMException $r12;
        java.lang.StringBuilder $r13;
        javax.xml.validation.Schema $r14;

        $r0 := @parameter0: org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider;

        $r1 := @parameter1: java.net.URL[];

        if $r1 != null goto label01;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot specify a null input array");

        throw $r5;

     label01:
        $i0 = lengthof $r1;

        if $i0 != 0 goto label02;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("You need at least one XSD source for an XML Schema validator");

        throw $r6;

     label02:
        $i0 = lengthof $r1;

        r4 = newarray (java.io.InputStream)[$i0];

     label03:
        $i0 = lengthof $r1;

        r3 = newarray (javax.xml.transform.Source)[$i0];

     label04:
        $i0 = 0;

     label05:
        $i1 = lengthof $r1;

     label06:
        if $i0 >= $i1 goto label20;

     label07:
        $r7 = $r1[$i0];

     label08:
        if $r7 != null goto label14;

     label09:
        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot specify a null SystemID");

        throw $r5;

     label10:
        $r8 := @caughtexception;

        $i0 = lengthof r4;

        $i1 = 0;

     label11:
        if $i1 >= $i0 goto label25;

        r9 = r4[$i1];

        if r9 == null goto label13;

     label12:
        virtualinvoke r9.<java.io.InputStream: void close()>();

     label13:
        $i1 = $i1 + 1;

        goto label11;

     label14:
        $r7 = $r1[$i0];

     label15:
        r9 = virtualinvoke $r7.<java.net.URL: java.io.InputStream openStream()>();

     label16:
        r4[$i0] = r9;

        $r10 = new javax.xml.transform.stream.StreamSource;

        $r7 = $r1[$i0];

        $r11 = virtualinvoke $r7.<java.net.URL: java.lang.String toString()>();

        specialinvoke $r10.<javax.xml.transform.stream.StreamSource: void <init>(java.io.InputStream,java.lang.String)>(r9, $r11);

        r3[$i0] = $r10;

     label17:
        $i0 = $i0 + 1;

        goto label05;

     label18:
        r2 := @caughtexception;

     label19:
        $r12 = new org.jdom2.JDOMException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to read Schema URL ");

        $r7 = $r1[$i0];

        $r11 = virtualinvoke $r7.<java.net.URL: java.lang.String toString()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<org.jdom2.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>($r11, r2);

        throw $r12;

     label20:
        $r14 = staticinvoke <org.jdom2.input.sax.AbstractReaderXSDFactory: javax.xml.validation.Schema getSchemaFromSource(org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider,javax.xml.transform.Source[])>($r0, r3);

     label21:
        $i0 = lengthof r4;

        $i1 = 0;

     label22:
        if $i1 >= $i0 goto label28;

        r9 = r4[$i1];

        if r9 == null goto label24;

     label23:
        virtualinvoke r9.<java.io.InputStream: void close()>();

     label24:
        $i1 = $i1 + 1;

        goto label22;

     label25:
        throw $r8;

     label26:
        $r15 := @caughtexception;

        goto label24;

     label27:
        $r16 := @caughtexception;

        goto label13;

     label28:
        return $r14;

        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.io.IOException from label12 to label13 with label27;
        catch java.io.IOException from label15 to label16 with label18;
        catch java.lang.Throwable from label14 to label16 with label10;
        catch java.lang.Throwable from label16 to label17 with label10;
        catch java.lang.Throwable from label19 to label21 with label10;
        catch java.io.IOException from label23 to label24 with label26;
    }
