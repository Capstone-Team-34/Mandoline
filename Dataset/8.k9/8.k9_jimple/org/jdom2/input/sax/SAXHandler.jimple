org.jdom2.input.sax.SAXHandler extends org.xml.sax.helpers.DefaultHandler implements org.xml.sax.ext.LexicalHandler org.xml.sax.ext.DeclHandler org.xml.sax.DTDHandler
private boolean atRoot
private org.jdom2.Document currentDocument
private org.jdom2.Element currentElement
private org.xml.sax.Locator currentLocator
private final java.util.List declaredNamespaces
private int entityDepth
private boolean expand
private final java.util.Map externalEntities
private final org.jdom2.JDOMFactory factory
private boolean ignoringBoundaryWhite
private boolean ignoringWhite
private boolean inCDATA
private boolean inDTD
private boolean inInternalSubset
private final java.lang.StringBuilder internalSubset
private int lastcol
private int lastline
private boolean previousCDATA
private boolean suppress
private final org.jdom2.input.sax.TextBuffer textBuffer
    public void <init>()
    {
        org.jdom2.input.sax.SAXHandler r0;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        specialinvoke r0.<org.jdom2.input.sax.SAXHandler: void <init>(org.jdom2.JDOMFactory)>(null);

        return;
    }
    public void <init>(org.jdom2.JDOMFactory)
    {
        org.jdom2.input.sax.SAXHandler r0;
        org.jdom2.JDOMFactory r1;
        java.util.ArrayList $r2;
        java.lang.StringBuilder $r3;
        org.jdom2.input.sax.TextBuffer $r4;
        java.util.HashMap $r5;
        org.jdom2.DefaultJDOMFactory $r6;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        r1 := @parameter0: org.jdom2.JDOMFactory;

        specialinvoke r0.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(32);

        r0.<org.jdom2.input.sax.SAXHandler: java.util.List declaredNamespaces> = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r0.<org.jdom2.input.sax.SAXHandler: java.lang.StringBuilder internalSubset> = $r3;

        $r4 = new org.jdom2.input.sax.TextBuffer;

        specialinvoke $r4.<org.jdom2.input.sax.TextBuffer: void <init>()>();

        r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.input.sax.TextBuffer textBuffer> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<org.jdom2.input.sax.SAXHandler: java.util.Map externalEntities> = $r5;

        r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.Document currentDocument> = null;

        r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.Element currentElement> = null;

        r0.<org.jdom2.input.sax.SAXHandler: org.xml.sax.Locator currentLocator> = null;

        r0.<org.jdom2.input.sax.SAXHandler: boolean atRoot> = 1;

        r0.<org.jdom2.input.sax.SAXHandler: boolean inDTD> = 0;

        r0.<org.jdom2.input.sax.SAXHandler: boolean inInternalSubset> = 0;

        r0.<org.jdom2.input.sax.SAXHandler: boolean previousCDATA> = 0;

        r0.<org.jdom2.input.sax.SAXHandler: boolean inCDATA> = 0;

        r0.<org.jdom2.input.sax.SAXHandler: boolean expand> = 1;

        r0.<org.jdom2.input.sax.SAXHandler: boolean suppress> = 0;

        r0.<org.jdom2.input.sax.SAXHandler: int entityDepth> = 0;

        r0.<org.jdom2.input.sax.SAXHandler: boolean ignoringWhite> = 0;

        r0.<org.jdom2.input.sax.SAXHandler: boolean ignoringBoundaryWhite> = 0;

        r0.<org.jdom2.input.sax.SAXHandler: int lastline> = 0;

        r0.<org.jdom2.input.sax.SAXHandler: int lastcol> = 0;

        if r1 == null goto label2;

     label1:
        r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory> = r1;

        virtualinvoke r0.<org.jdom2.input.sax.SAXHandler: void reset()>();

        return;

     label2:
        $r6 = new org.jdom2.DefaultJDOMFactory;

        r1 = $r6;

        specialinvoke $r6.<org.jdom2.DefaultJDOMFactory: void <init>()>();

        goto label1;
    }
    private void appendExternalId(java.lang.String, java.lang.String)
    {
        org.jdom2.input.sax.SAXHandler r0;
        java.lang.String $r1, $r2;
        java.lang.StringBuilder $r3;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 == null goto label1;

        $r3 = r0.<org.jdom2.input.sax.SAXHandler: java.lang.StringBuilder internalSubset>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" PUBLIC \"");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

     label1:
        if $r2 == null goto label4;

        if $r1 != null goto label3;

        $r3 = r0.<org.jdom2.input.sax.SAXHandler: java.lang.StringBuilder internalSubset>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" SYSTEM ");

     label2:
        $r3 = r0.<org.jdom2.input.sax.SAXHandler: java.lang.StringBuilder internalSubset>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        return;

     label3:
        $r3 = r0.<org.jdom2.input.sax.SAXHandler: java.lang.StringBuilder internalSubset>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        goto label2;

     label4:
        return;
    }
    private void transferNamespaces(org.jdom2.Element)
    {
        org.jdom2.input.sax.SAXHandler r0;
        org.jdom2.Element $r1;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.jdom2.Namespace r5, $r6;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        $r1 := @parameter0: org.jdom2.Element;

        $r2 = r0.<org.jdom2.input.sax.SAXHandler: java.util.List declaredNamespaces>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.jdom2.Namespace) $r4;

        $r6 = virtualinvoke $r1.<org.jdom2.Element: org.jdom2.Namespace getNamespace()>();

        if r5 == $r6 goto label1;

        virtualinvoke $r1.<org.jdom2.Element: boolean addNamespaceDeclaration(org.jdom2.Namespace)>(r5);

        goto label1;

     label2:
        $r2 = r0.<org.jdom2.input.sax.SAXHandler: java.util.List declaredNamespaces>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        return;
    }
    public void attributeDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        org.jdom2.input.sax.SAXHandler r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5;
        boolean $z0;
        java.lang.StringBuilder $r6;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: java.lang.String;

        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean inInternalSubset>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r6 = r0.<org.jdom2.input.sax.SAXHandler: java.lang.StringBuilder internalSubset>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  <!ATTLIST ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        if $r4 == null goto label4;

        $r6 = r0.<org.jdom2.input.sax.SAXHandler: java.lang.StringBuilder internalSubset>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

     label2:
        if $r4 == null goto label3;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("#FIXED");

        if $z0 == 0 goto label3;

        $r6 = r0.<org.jdom2.input.sax.SAXHandler: java.lang.StringBuilder internalSubset>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

     label3:
        $r6 = r0.<org.jdom2.input.sax.SAXHandler: java.lang.StringBuilder internalSubset>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        return;

     label4:
        $r6 = r0.<org.jdom2.input.sax.SAXHandler: java.lang.StringBuilder internalSubset>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        goto label2;
    }
    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        org.jdom2.input.sax.SAXHandler r0;
        char[] $r1;
        int $i0, $i1;
        boolean $z0, $z1;
        org.jdom2.input.sax.TextBuffer $r2;
        org.xml.sax.Locator $r3;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean suppress>;

        if $z0 != 0 goto label3;

        if $i1 != 0 goto label1;

        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean inCDATA>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = r0.<org.jdom2.input.sax.SAXHandler: boolean previousCDATA>;

        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean inCDATA>;

        if $z1 == $z0 goto label2;

        virtualinvoke r0.<org.jdom2.input.sax.SAXHandler: void flushCharacters()>();

     label2:
        $r2 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.input.sax.TextBuffer textBuffer>;

        virtualinvoke $r2.<org.jdom2.input.sax.TextBuffer: void append(char[],int,int)>($r1, $i0, $i1);

        $r3 = r0.<org.jdom2.input.sax.SAXHandler: org.xml.sax.Locator currentLocator>;

        if $r3 == null goto label3;

        $r3 = r0.<org.jdom2.input.sax.SAXHandler: org.xml.sax.Locator currentLocator>;

        $i0 = interfaceinvoke $r3.<org.xml.sax.Locator: int getLineNumber()>();

        r0.<org.jdom2.input.sax.SAXHandler: int lastline> = $i0;

        $r3 = r0.<org.jdom2.input.sax.SAXHandler: org.xml.sax.Locator currentLocator>;

        $i0 = interfaceinvoke $r3.<org.xml.sax.Locator: int getColumnNumber()>();

        r0.<org.jdom2.input.sax.SAXHandler: int lastcol> = $i0;

     label3:
        return;
    }
    public void comment(char[], int, int) throws org.xml.sax.SAXException
    {
        org.jdom2.input.sax.SAXHandler r0;
        char[] $r1;
        int $i0, $i1;
        java.lang.String r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        org.xml.sax.Locator $r4;
        org.jdom2.JDOMFactory $r5;
        org.jdom2.Comment $r6;
        org.jdom2.Document $r7;
        org.jdom2.Element $r8;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean suppress>;

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<org.jdom2.input.sax.SAXHandler: void flushCharacters()>();

        r2 = new java.lang.String;

        specialinvoke r2.<java.lang.String: void <init>(char[],int,int)>($r1, $i0, $i1);

        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean inDTD>;

        if $z0 == 0 goto label2;

        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean inInternalSubset>;

        if $z0 == 0 goto label2;

        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean expand>;

        if $z0 != 0 goto label2;

        $r3 = r0.<org.jdom2.input.sax.SAXHandler: java.lang.StringBuilder internalSubset>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  <!--");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-->\n");

        return;

     label2:
        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean inDTD>;

        if $z0 != 0 goto label6;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label6;

        $r4 = r0.<org.jdom2.input.sax.SAXHandler: org.xml.sax.Locator currentLocator>;

        if $r4 != null goto label4;

        $r5 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        $r6 = interfaceinvoke $r5.<org.jdom2.JDOMFactory: org.jdom2.Comment comment(java.lang.String)>(r2);

     label3:
        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean atRoot>;

        if $z0 == 0 goto label5;

        $r5 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        $r7 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.Document currentDocument>;

        interfaceinvoke $r5.<org.jdom2.JDOMFactory: void addContent(org.jdom2.Parent,org.jdom2.Content)>($r7, $r6);

        return;

     label4:
        $r5 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        $r4 = r0.<org.jdom2.input.sax.SAXHandler: org.xml.sax.Locator currentLocator>;

        $i0 = interfaceinvoke $r4.<org.xml.sax.Locator: int getLineNumber()>();

        $r4 = r0.<org.jdom2.input.sax.SAXHandler: org.xml.sax.Locator currentLocator>;

        $i1 = interfaceinvoke $r4.<org.xml.sax.Locator: int getColumnNumber()>();

        $r6 = interfaceinvoke $r5.<org.jdom2.JDOMFactory: org.jdom2.Comment comment(int,int,java.lang.String)>($i0, $i1, r2);

        goto label3;

     label5:
        $r5 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        $r8 = virtualinvoke r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.Element getCurrentElement()>();

        interfaceinvoke $r5.<org.jdom2.JDOMFactory: void addContent(org.jdom2.Parent,org.jdom2.Content)>($r8, $r6);

     label6:
        return;
    }
    public void elementDecl(java.lang.String, java.lang.String)
    {
        org.jdom2.input.sax.SAXHandler r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean inInternalSubset>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<org.jdom2.input.sax.SAXHandler: java.lang.StringBuilder internalSubset>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  <!ELEMENT ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        return;
    }
    public void endCDATA() throws org.xml.sax.SAXException
    {
        org.jdom2.input.sax.SAXHandler r0;
        boolean $z0;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean suppress>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<org.jdom2.input.sax.SAXHandler: boolean previousCDATA> = 1;

        virtualinvoke r0.<org.jdom2.input.sax.SAXHandler: void flushCharacters()>();

        r0.<org.jdom2.input.sax.SAXHandler: boolean previousCDATA> = 0;

        r0.<org.jdom2.input.sax.SAXHandler: boolean inCDATA> = 0;

        return;
    }
    public void endDTD()
    {
        org.jdom2.input.sax.SAXHandler r0;
        org.jdom2.Document $r1;
        org.jdom2.DocType $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        $r1 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.Document currentDocument>;

        $r2 = virtualinvoke $r1.<org.jdom2.Document: org.jdom2.DocType getDocType()>();

        $r3 = r0.<org.jdom2.input.sax.SAXHandler: java.lang.StringBuilder internalSubset>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<org.jdom2.DocType: void setInternalSubset(java.lang.String)>($r4);

        r0.<org.jdom2.input.sax.SAXHandler: boolean inDTD> = 0;

        r0.<org.jdom2.input.sax.SAXHandler: boolean inInternalSubset> = 0;

        return;
    }
    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.jdom2.input.sax.SAXHandler r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;
        org.jdom2.Element $r4;
        org.jdom2.Parent $r5;
        org.xml.sax.SAXException $r6;
        java.lang.StringBuilder $r7;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean suppress>;

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<org.jdom2.input.sax.SAXHandler: void flushCharacters()>();

        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean atRoot>;

        if $z0 != 0 goto label3;

        $r4 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.Element currentElement>;

        $r5 = virtualinvoke $r4.<org.jdom2.Element: org.jdom2.Parent getParent()>();

        $z0 = $r5 instanceof org.jdom2.Document;

        if $z0 == 0 goto label2;

        r0.<org.jdom2.input.sax.SAXHandler: boolean atRoot> = 1;

        return;

     label2:
        $r4 = (org.jdom2.Element) $r5;

        r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.Element currentElement> = $r4;

        return;

     label3:
        $r6 = new org.xml.sax.SAXException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ill-formed XML document (missing opening tag for ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r1);

        throw $r6;
    }
    public void endEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        org.jdom2.input.sax.SAXHandler r0;
        java.lang.String $r1;
        boolean $z0;
        int $i0;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        $r1 := @parameter0: java.lang.String;

        $i0 = r0.<org.jdom2.input.sax.SAXHandler: int entityDepth>;

        $i0 = $i0 + -1;

        r0.<org.jdom2.input.sax.SAXHandler: int entityDepth> = $i0;

        $i0 = r0.<org.jdom2.input.sax.SAXHandler: int entityDepth>;

        if $i0 != 0 goto label1;

        r0.<org.jdom2.input.sax.SAXHandler: boolean suppress> = 0;

     label1:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("[dtd]");

        if $z0 == 0 goto label2;

        r0.<org.jdom2.input.sax.SAXHandler: boolean inInternalSubset> = 1;

     label2:
        return;
    }
    public void externalEntityDecl(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.jdom2.input.sax.SAXHandler r0;
        java.lang.String $r1, $r2, $r3;
        java.lang.StringBuilder $r4;
        java.util.Map $r5;
        java.lang.String[] $r6;
        boolean $z0;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r5 = r0.<org.jdom2.input.sax.SAXHandler: java.util.Map externalEntities>;

        $r6 = newarray (java.lang.String)[2];

        $r6[0] = $r2;

        $r6[1] = $r3;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r6);

        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean inInternalSubset>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = r0.<org.jdom2.input.sax.SAXHandler: java.lang.StringBuilder internalSubset>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  <!ENTITY ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        specialinvoke r0.<org.jdom2.input.sax.SAXHandler: void appendExternalId(java.lang.String,java.lang.String)>($r2, $r3);

        $r4 = r0.<org.jdom2.input.sax.SAXHandler: java.lang.StringBuilder internalSubset>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        return;
    }
    protected void flushCharacters() throws org.xml.sax.SAXException
    {
        org.jdom2.input.sax.SAXHandler r0;
        boolean $z0;
        org.jdom2.input.sax.TextBuffer $r1;
        java.lang.String $r2;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean ignoringBoundaryWhite>;

        if $z0 == 0 goto label2;

        $r1 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.input.sax.TextBuffer textBuffer>;

        $z0 = virtualinvoke $r1.<org.jdom2.input.sax.TextBuffer: boolean isAllWhitespace()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.input.sax.TextBuffer textBuffer>;

        $r2 = virtualinvoke $r1.<org.jdom2.input.sax.TextBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.jdom2.input.sax.SAXHandler: void flushCharacters(java.lang.String)>($r2);

     label1:
        $r1 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.input.sax.TextBuffer textBuffer>;

        virtualinvoke $r1.<org.jdom2.input.sax.TextBuffer: void clear()>();

        return;

     label2:
        $r1 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.input.sax.TextBuffer textBuffer>;

        $r2 = virtualinvoke $r1.<org.jdom2.input.sax.TextBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.jdom2.input.sax.SAXHandler: void flushCharacters(java.lang.String)>($r2);

        goto label1;
    }
    protected void flushCharacters(java.lang.String) throws org.xml.sax.SAXException
    {
        org.jdom2.input.sax.SAXHandler r0;
        java.lang.String $r1;
        int $i0, $i1;
        boolean $z0;
        org.xml.sax.Locator $r2;
        org.jdom2.JDOMFactory $r3;
        org.jdom2.CDATA $r4;
        org.jdom2.Element $r5;
        org.jdom2.Text $r6;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean inCDATA>;

        if $z0 != 0 goto label1;

        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean inCDATA>;

        r0.<org.jdom2.input.sax.SAXHandler: boolean previousCDATA> = $z0;

        return;

     label1:
        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean previousCDATA>;

        if $z0 == 0 goto label5;

        $r2 = r0.<org.jdom2.input.sax.SAXHandler: org.xml.sax.Locator currentLocator>;

        if $r2 != null goto label4;

        $r3 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        $r4 = interfaceinvoke $r3.<org.jdom2.JDOMFactory: org.jdom2.CDATA cdata(java.lang.String)>($r1);

     label2:
        $r3 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        $r5 = virtualinvoke r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.Element getCurrentElement()>();

        interfaceinvoke $r3.<org.jdom2.JDOMFactory: void addContent(org.jdom2.Parent,org.jdom2.Content)>($r5, $r4);

     label3:
        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean inCDATA>;

        r0.<org.jdom2.input.sax.SAXHandler: boolean previousCDATA> = $z0;

        return;

     label4:
        $r3 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        $i0 = r0.<org.jdom2.input.sax.SAXHandler: int lastline>;

        $i1 = r0.<org.jdom2.input.sax.SAXHandler: int lastcol>;

        $r4 = interfaceinvoke $r3.<org.jdom2.JDOMFactory: org.jdom2.CDATA cdata(int,int,java.lang.String)>($i0, $i1, $r1);

        goto label2;

     label5:
        $r2 = r0.<org.jdom2.input.sax.SAXHandler: org.xml.sax.Locator currentLocator>;

        if $r2 != null goto label7;

        $r3 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        $r6 = interfaceinvoke $r3.<org.jdom2.JDOMFactory: org.jdom2.Text text(java.lang.String)>($r1);

     label6:
        $r3 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        $r5 = virtualinvoke r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.Element getCurrentElement()>();

        interfaceinvoke $r3.<org.jdom2.JDOMFactory: void addContent(org.jdom2.Parent,org.jdom2.Content)>($r5, $r6);

        goto label3;

     label7:
        $r3 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        $i0 = r0.<org.jdom2.input.sax.SAXHandler: int lastline>;

        $i1 = r0.<org.jdom2.input.sax.SAXHandler: int lastcol>;

        $r6 = interfaceinvoke $r3.<org.jdom2.JDOMFactory: org.jdom2.Text text(int,int,java.lang.String)>($i0, $i1, $r1);

        goto label6;
    }
    public org.jdom2.Element getCurrentElement() throws org.xml.sax.SAXException
    {
        org.jdom2.input.sax.SAXHandler r0;
        org.jdom2.Element $r1;
        org.xml.sax.SAXException $r2;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        $r1 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.Element currentElement>;

        if $r1 != null goto label1;

        $r2 = new org.xml.sax.SAXException;

        specialinvoke $r2.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Ill-formed XML document (multiple root elements detected)");

        throw $r2;

     label1:
        $r1 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.Element currentElement>;

        return $r1;
    }
    public org.jdom2.Document getDocument()
    {
        org.jdom2.input.sax.SAXHandler r0;
        org.jdom2.Document r1;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        r1 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.Document currentDocument>;

        return r1;
    }
    public org.xml.sax.Locator getDocumentLocator()
    {
        org.jdom2.input.sax.SAXHandler r0;
        org.xml.sax.Locator r1;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        r1 = r0.<org.jdom2.input.sax.SAXHandler: org.xml.sax.Locator currentLocator>;

        return r1;
    }
    public boolean getExpandEntities()
    {
        org.jdom2.input.sax.SAXHandler r0;
        boolean z0;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean expand>;

        return z0;
    }
    public org.jdom2.JDOMFactory getFactory()
    {
        org.jdom2.input.sax.SAXHandler r0;
        org.jdom2.JDOMFactory r1;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        r1 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        return r1;
    }
    public boolean getIgnoringBoundaryWhitespace()
    {
        org.jdom2.input.sax.SAXHandler r0;
        boolean z0;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean ignoringBoundaryWhite>;

        return z0;
    }
    public boolean getIgnoringElementContentWhitespace()
    {
        org.jdom2.input.sax.SAXHandler r0;
        boolean z0;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean ignoringWhite>;

        return z0;
    }
    public void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException
    {
        org.jdom2.input.sax.SAXHandler r0;
        char[] $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean ignoringWhite>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.jdom2.input.sax.SAXHandler: void characters(char[],int,int)>($r1, $i0, $i1);

     label1:
        return;
    }
    public void internalEntityDecl(java.lang.String, java.lang.String)
    {
        org.jdom2.input.sax.SAXHandler r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean inInternalSubset>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<org.jdom2.input.sax.SAXHandler: java.lang.StringBuilder internalSubset>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  <!ENTITY ");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("%");

        if $z0 == 0 goto label3;

        $r3 = r0.<org.jdom2.input.sax.SAXHandler: java.lang.StringBuilder internalSubset>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("% ");

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

     label2:
        $r3 = r0.<org.jdom2.input.sax.SAXHandler: java.lang.StringBuilder internalSubset>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\">\n");

        return;

     label3:
        $r3 = r0.<org.jdom2.input.sax.SAXHandler: java.lang.StringBuilder internalSubset>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        goto label2;
    }
    public void notationDecl(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.jdom2.input.sax.SAXHandler r0;
        java.lang.String $r1, $r2, $r3;
        java.lang.StringBuilder $r4;
        boolean $z0;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean inInternalSubset>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = r0.<org.jdom2.input.sax.SAXHandler: java.lang.StringBuilder internalSubset>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  <!NOTATION ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        specialinvoke r0.<org.jdom2.input.sax.SAXHandler: void appendExternalId(java.lang.String,java.lang.String)>($r2, $r3);

        $r4 = r0.<org.jdom2.input.sax.SAXHandler: java.lang.StringBuilder internalSubset>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        return;
    }
    public void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.jdom2.input.sax.SAXHandler r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        org.xml.sax.Locator $r3;
        org.jdom2.JDOMFactory $r4;
        org.jdom2.ProcessingInstruction $r5;
        org.jdom2.Document $r6;
        int $i0, $i1;
        org.jdom2.Element $r7;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean suppress>;

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<org.jdom2.input.sax.SAXHandler: void flushCharacters()>();

        $r3 = r0.<org.jdom2.input.sax.SAXHandler: org.xml.sax.Locator currentLocator>;

        if $r3 != null goto label3;

        $r4 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        $r5 = interfaceinvoke $r4.<org.jdom2.JDOMFactory: org.jdom2.ProcessingInstruction processingInstruction(java.lang.String,java.lang.String)>($r1, $r2);

     label2:
        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean atRoot>;

        if $z0 == 0 goto label4;

        $r4 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        $r6 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.Document currentDocument>;

        interfaceinvoke $r4.<org.jdom2.JDOMFactory: void addContent(org.jdom2.Parent,org.jdom2.Content)>($r6, $r5);

        return;

     label3:
        $r4 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        $r3 = r0.<org.jdom2.input.sax.SAXHandler: org.xml.sax.Locator currentLocator>;

        $i0 = interfaceinvoke $r3.<org.xml.sax.Locator: int getLineNumber()>();

        $r3 = r0.<org.jdom2.input.sax.SAXHandler: org.xml.sax.Locator currentLocator>;

        $i1 = interfaceinvoke $r3.<org.xml.sax.Locator: int getColumnNumber()>();

        $r5 = interfaceinvoke $r4.<org.jdom2.JDOMFactory: org.jdom2.ProcessingInstruction processingInstruction(int,int,java.lang.String,java.lang.String)>($i0, $i1, $r1, $r2);

        goto label2;

     label4:
        $r4 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        $r7 = virtualinvoke r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.Element getCurrentElement()>();

        interfaceinvoke $r4.<org.jdom2.JDOMFactory: void addContent(org.jdom2.Parent,org.jdom2.Content)>($r7, $r5);

        return;
    }
    protected void pushElement(org.jdom2.Element)
    {
        org.jdom2.input.sax.SAXHandler r0;
        org.jdom2.Element $r1, $r2;
        boolean $z0;
        org.jdom2.Document $r3;
        org.jdom2.JDOMFactory $r4;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        $r1 := @parameter0: org.jdom2.Element;

        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean atRoot>;

        if $z0 == 0 goto label2;

        $r3 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.Document currentDocument>;

        virtualinvoke $r3.<org.jdom2.Document: org.jdom2.Document setRootElement(org.jdom2.Element)>($r1);

        r0.<org.jdom2.input.sax.SAXHandler: boolean atRoot> = 0;

     label1:
        r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.Element currentElement> = $r1;

        return;

     label2:
        $r4 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        $r2 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.Element currentElement>;

        interfaceinvoke $r4.<org.jdom2.JDOMFactory: void addContent(org.jdom2.Parent,org.jdom2.Content)>($r2, $r1);

        goto label1;
    }
    public final void reset()
    {
        org.jdom2.input.sax.SAXHandler r0;
        org.jdom2.Document $r1;
        org.jdom2.JDOMFactory $r2;
        java.util.List $r3;
        java.lang.StringBuilder $r4;
        org.jdom2.input.sax.TextBuffer $r5;
        java.util.Map $r6;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        r0.<org.jdom2.input.sax.SAXHandler: org.xml.sax.Locator currentLocator> = null;

        $r2 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        $r1 = interfaceinvoke $r2.<org.jdom2.JDOMFactory: org.jdom2.Document document(org.jdom2.Element)>(null);

        r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.Document currentDocument> = $r1;

        r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.Element currentElement> = null;

        r0.<org.jdom2.input.sax.SAXHandler: boolean atRoot> = 1;

        r0.<org.jdom2.input.sax.SAXHandler: boolean inDTD> = 0;

        r0.<org.jdom2.input.sax.SAXHandler: boolean inInternalSubset> = 0;

        r0.<org.jdom2.input.sax.SAXHandler: boolean previousCDATA> = 0;

        r0.<org.jdom2.input.sax.SAXHandler: boolean inCDATA> = 0;

        r0.<org.jdom2.input.sax.SAXHandler: boolean expand> = 1;

        r0.<org.jdom2.input.sax.SAXHandler: boolean suppress> = 0;

        r0.<org.jdom2.input.sax.SAXHandler: int entityDepth> = 0;

        $r3 = r0.<org.jdom2.input.sax.SAXHandler: java.util.List declaredNamespaces>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        $r4 = r0.<org.jdom2.input.sax.SAXHandler: java.lang.StringBuilder internalSubset>;

        virtualinvoke $r4.<java.lang.StringBuilder: void setLength(int)>(0);

        $r5 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.input.sax.TextBuffer textBuffer>;

        virtualinvoke $r5.<org.jdom2.input.sax.TextBuffer: void clear()>();

        $r6 = r0.<org.jdom2.input.sax.SAXHandler: java.util.Map externalEntities>;

        interfaceinvoke $r6.<java.util.Map: void clear()>();

        r0.<org.jdom2.input.sax.SAXHandler: boolean ignoringWhite> = 0;

        r0.<org.jdom2.input.sax.SAXHandler: boolean ignoringBoundaryWhite> = 0;

        virtualinvoke r0.<org.jdom2.input.sax.SAXHandler: void resetSubCLass()>();

        return;
    }
    protected void resetSubCLass()
    {
        org.jdom2.input.sax.SAXHandler r0;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        return;
    }
    public void setDocumentLocator(org.xml.sax.Locator)
    {
        org.jdom2.input.sax.SAXHandler r0;
        org.xml.sax.Locator $r1;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        $r1 := @parameter0: org.xml.sax.Locator;

        r0.<org.jdom2.input.sax.SAXHandler: org.xml.sax.Locator currentLocator> = $r1;

        return;
    }
    public void setExpandEntities(boolean)
    {
        org.jdom2.input.sax.SAXHandler r0;
        boolean $z0;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        $z0 := @parameter0: boolean;

        r0.<org.jdom2.input.sax.SAXHandler: boolean expand> = $z0;

        return;
    }
    public void setIgnoringBoundaryWhitespace(boolean)
    {
        org.jdom2.input.sax.SAXHandler r0;
        boolean $z0;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        $z0 := @parameter0: boolean;

        r0.<org.jdom2.input.sax.SAXHandler: boolean ignoringBoundaryWhite> = $z0;

        return;
    }
    public void setIgnoringElementContentWhitespace(boolean)
    {
        org.jdom2.input.sax.SAXHandler r0;
        boolean $z0;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        $z0 := @parameter0: boolean;

        r0.<org.jdom2.input.sax.SAXHandler: boolean ignoringWhite> = $z0;

        return;
    }
    public void skippedEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        org.jdom2.input.sax.SAXHandler r0;
        java.lang.String $r1;
        boolean $z0;
        org.xml.sax.Locator $r2;
        org.jdom2.JDOMFactory $r3;
        org.jdom2.EntityRef $r4;
        org.jdom2.Element $r5;
        int $i0, $i1;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("%");

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<org.jdom2.input.sax.SAXHandler: void flushCharacters()>();

        $r2 = r0.<org.jdom2.input.sax.SAXHandler: org.xml.sax.Locator currentLocator>;

        if $r2 != null goto label3;

        $r3 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        $r4 = interfaceinvoke $r3.<org.jdom2.JDOMFactory: org.jdom2.EntityRef entityRef(java.lang.String)>($r1);

     label2:
        $r3 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        $r5 = virtualinvoke r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.Element getCurrentElement()>();

        interfaceinvoke $r3.<org.jdom2.JDOMFactory: void addContent(org.jdom2.Parent,org.jdom2.Content)>($r5, $r4);

        return;

     label3:
        $r3 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        $r2 = r0.<org.jdom2.input.sax.SAXHandler: org.xml.sax.Locator currentLocator>;

        $i0 = interfaceinvoke $r2.<org.xml.sax.Locator: int getLineNumber()>();

        $r2 = r0.<org.jdom2.input.sax.SAXHandler: org.xml.sax.Locator currentLocator>;

        $i1 = interfaceinvoke $r2.<org.xml.sax.Locator: int getColumnNumber()>();

        $r4 = interfaceinvoke $r3.<org.jdom2.JDOMFactory: org.jdom2.EntityRef entityRef(int,int,java.lang.String)>($i0, $i1, $r1);

        goto label2;
    }
    public void startCDATA()
    {
        org.jdom2.input.sax.SAXHandler r0;
        boolean $z0;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean suppress>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<org.jdom2.input.sax.SAXHandler: boolean inCDATA> = 1;

        return;
    }
    public void startDTD(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.jdom2.input.sax.SAXHandler r0;
        java.lang.String $r1, $r2, $r3;
        org.xml.sax.Locator $r4;
        org.jdom2.JDOMFactory $r5;
        org.jdom2.DocType $r6;
        org.jdom2.Document $r7;
        int $i0, $i1;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        virtualinvoke r0.<org.jdom2.input.sax.SAXHandler: void flushCharacters()>();

        $r4 = r0.<org.jdom2.input.sax.SAXHandler: org.xml.sax.Locator currentLocator>;

        if $r4 != null goto label2;

        $r5 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        $r6 = interfaceinvoke $r5.<org.jdom2.JDOMFactory: org.jdom2.DocType docType(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

     label1:
        $r5 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        $r7 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.Document currentDocument>;

        interfaceinvoke $r5.<org.jdom2.JDOMFactory: void addContent(org.jdom2.Parent,org.jdom2.Content)>($r7, $r6);

        r0.<org.jdom2.input.sax.SAXHandler: boolean inDTD> = 1;

        r0.<org.jdom2.input.sax.SAXHandler: boolean inInternalSubset> = 1;

        return;

     label2:
        $r5 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        $r4 = r0.<org.jdom2.input.sax.SAXHandler: org.xml.sax.Locator currentLocator>;

        $i0 = interfaceinvoke $r4.<org.xml.sax.Locator: int getLineNumber()>();

        $r4 = r0.<org.jdom2.input.sax.SAXHandler: org.xml.sax.Locator currentLocator>;

        $i1 = interfaceinvoke $r4.<org.xml.sax.Locator: int getColumnNumber()>();

        $r6 = interfaceinvoke $r5.<org.jdom2.JDOMFactory: org.jdom2.DocType docType(int,int,java.lang.String,java.lang.String,java.lang.String)>($i0, $i1, $r1, $r2, $r3);

        goto label1;
    }
    public void startDocument()
    {
        org.jdom2.input.sax.SAXHandler r0;
        java.lang.String $r1;
        org.xml.sax.Locator $r2;
        org.jdom2.Document $r3;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        $r2 = r0.<org.jdom2.input.sax.SAXHandler: org.xml.sax.Locator currentLocator>;

        if $r2 == null goto label1;

        $r3 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.Document currentDocument>;

        $r2 = r0.<org.jdom2.input.sax.SAXHandler: org.xml.sax.Locator currentLocator>;

        $r1 = interfaceinvoke $r2.<org.xml.sax.Locator: java.lang.String getSystemId()>();

        virtualinvoke $r3.<org.jdom2.Document: void setBaseURI(java.lang.String)>($r1);

     label1:
        return;
    }
    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        org.jdom2.input.sax.SAXHandler r0;
        java.lang.String $r1, $r2, $r5, r6, $r7;
        org.xml.sax.Attributes $r3;
        java.util.HashMap r4;
        boolean $z0, $z1;
        int $i0, $i1, $i2;
        org.jdom2.Namespace $r8;
        org.xml.sax.Locator $r9;
        org.jdom2.JDOMFactory $r10;
        org.jdom2.Element $r11, $r15;
        java.util.List $r12;
        org.jdom2.Document $r13;
        org.xml.sax.ext.Attributes2 $r14;
        org.jdom2.AttributeType $r16;
        java.util.Iterator $r17;
        java.lang.Object $r18;
        java.lang.StringBuilder $r19;
        org.jdom2.Attribute $r20;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        $r1 := @parameter0: java.lang.String;

        $r5 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: org.xml.sax.Attributes;

        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean suppress>;

        if $z0 == 0 goto label01;

        return;

     label01:
        r6 = "";

        $r7 = "";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label04;

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(58);

        if $i0 <= 0 goto label02;

        r6 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label02:
        if $r5 == null goto label03;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label04;

     label03:
        $i0 = $i0 + 1;

        $r5 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

     label04:
        $r8 = staticinvoke <org.jdom2.Namespace: org.jdom2.Namespace getNamespace(java.lang.String,java.lang.String)>(r6, $r1);

        $r9 = r0.<org.jdom2.input.sax.SAXHandler: org.xml.sax.Locator currentLocator>;

        if $r9 != null goto label11;

        $r10 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        $r11 = interfaceinvoke $r10.<org.jdom2.JDOMFactory: org.jdom2.Element element(java.lang.String,org.jdom2.Namespace)>($r5, $r8);

     label05:
        $r12 = r0.<org.jdom2.input.sax.SAXHandler: java.util.List declaredNamespaces>;

        $i0 = interfaceinvoke $r12.<java.util.List: int size()>();

        if $i0 <= 0 goto label06;

        specialinvoke r0.<org.jdom2.input.sax.SAXHandler: void transferNamespaces(org.jdom2.Element)>($r11);

     label06:
        virtualinvoke r0.<org.jdom2.input.sax.SAXHandler: void flushCharacters()>();

        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean atRoot>;

        if $z0 == 0 goto label12;

        $r10 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        $r13 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.Document currentDocument>;

        interfaceinvoke $r10.<org.jdom2.JDOMFactory: void setRoot(org.jdom2.Document,org.jdom2.Element)>($r13, $r11);

        r0.<org.jdom2.input.sax.SAXHandler: boolean atRoot> = 0;

     label07:
        r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.Element currentElement> = $r11;

        $i0 = 0;

        $i1 = interfaceinvoke $r3.<org.xml.sax.Attributes: int getLength()>();

     label08:
        if $i0 >= $i1 goto label23;

        $r5 = "";

        $r2 = interfaceinvoke $r3.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>($i0);

        $r1 = $r2;

        r6 = interfaceinvoke $r3.<org.xml.sax.Attributes: java.lang.String getQName(int)>($i0);

        $z0 = $r3 instanceof org.xml.sax.ext.Attributes2;

        if $z0 == 0 goto label13;

        $r14 = (org.xml.sax.ext.Attributes2) $r3;

        $z0 = interfaceinvoke $r14.<org.xml.sax.ext.Attributes2: boolean isSpecified(int)>($i0);

     label09:
        $z1 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 != 0 goto label16;

        $z1 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>("xmlns:");

        if $z1 != 0 goto label10;

        $z1 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z1 == 0 goto label14;

     label10:
        $i0 = $i0 + 1;

        goto label08;

     label11:
        $r10 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        $r9 = r0.<org.jdom2.input.sax.SAXHandler: org.xml.sax.Locator currentLocator>;

        $i0 = interfaceinvoke $r9.<org.xml.sax.Locator: int getLineNumber()>();

        $r9 = r0.<org.jdom2.input.sax.SAXHandler: org.xml.sax.Locator currentLocator>;

        $i1 = interfaceinvoke $r9.<org.xml.sax.Locator: int getColumnNumber()>();

        $r11 = interfaceinvoke $r10.<org.jdom2.JDOMFactory: org.jdom2.Element element(int,int,java.lang.String,org.jdom2.Namespace)>($i0, $i1, $r5, $r8);

        goto label05;

     label12:
        $r10 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        $r15 = virtualinvoke r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.Element getCurrentElement()>();

        interfaceinvoke $r10.<org.jdom2.JDOMFactory: void addContent(org.jdom2.Parent,org.jdom2.Content)>($r15, $r11);

        goto label07;

     label13:
        $z0 = 1;

        goto label09;

     label14:
        $i2 = virtualinvoke r6.<java.lang.String: int indexOf(int)>(58);

        if $i2 <= 0 goto label15;

        $r5 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

     label15:
        $r7 = "";

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label16;

        $i2 = $i2 + 1;

        $r1 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>($i2);

     label16:
        $r2 = interfaceinvoke $r3.<org.xml.sax.Attributes: java.lang.String getType(int)>($i0);

        $r16 = staticinvoke <org.jdom2.AttributeType: org.jdom2.AttributeType getAttributeType(java.lang.String)>($r2);

        $r2 = interfaceinvoke $r3.<org.xml.sax.Attributes: java.lang.String getValue(int)>($i0);

        r6 = interfaceinvoke $r3.<org.xml.sax.Attributes: java.lang.String getURI(int)>($i0);

        $r7 = "xmlns";

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 != 0 goto label10;

        $r7 = "xmlns";

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label10;

        $r7 = "http://www.w3.org/2000/xmlns/";

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z1 != 0 goto label10;

        $r7 = "";

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z1 != 0 goto label21;

        $r7 = "";

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label21;

        r4 = new java.util.HashMap;

        specialinvoke r4.<java.util.HashMap: void <init>()>();

        $r12 = virtualinvoke $r11.<org.jdom2.Element: java.util.List getNamespacesInScope()>();

        $r17 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label17:
        $z1 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label18;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (org.jdom2.Namespace) $r18;

        $r7 = virtualinvoke $r8.<org.jdom2.Namespace: java.lang.String getPrefix()>();

        $i2 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i2 <= 0 goto label20;

        $r7 = virtualinvoke $r8.<org.jdom2.Namespace: java.lang.String getURI()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z1 == 0 goto label20;

        $r5 = virtualinvoke $r8.<org.jdom2.Namespace: java.lang.String getPrefix()>();

     label18:
        $r7 = "";

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label21;

        $i2 = 0;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("attns");

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(0);

        $r5 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

     label19:
        $z1 = virtualinvoke r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r5);

        if $z1 == 0 goto label21;

        $i2 = $i2 + 1;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("attns");

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r5 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label19;

     label20:
        $r7 = virtualinvoke $r8.<org.jdom2.Namespace: java.lang.String getPrefix()>();

        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8);

        goto label17;

     label21:
        $r8 = staticinvoke <org.jdom2.Namespace: org.jdom2.Namespace getNamespace(java.lang.String,java.lang.String)>($r5, r6);

        $r10 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        $r20 = interfaceinvoke $r10.<org.jdom2.JDOMFactory: org.jdom2.Attribute attribute(java.lang.String,java.lang.String,org.jdom2.AttributeType,org.jdom2.Namespace)>($r1, $r2, $r16, $r8);

        if $z0 != 0 goto label22;

        virtualinvoke $r20.<org.jdom2.Attribute: void setSpecified(boolean)>(0);

     label22:
        $r10 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        interfaceinvoke $r10.<org.jdom2.JDOMFactory: void setAttribute(org.jdom2.Element,org.jdom2.Attribute)>($r11, $r20);

        goto label10;

     label23:
        return;
    }
    public void startEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        org.jdom2.input.sax.SAXHandler r0;
        java.lang.String $r1, r2, r3;
        int $i0, $i1;
        boolean $z0;
        java.util.Map $r4;
        java.lang.Object $r5;
        java.lang.String[] r6;
        org.xml.sax.Locator $r7;
        org.jdom2.JDOMFactory $r8;
        org.jdom2.EntityRef $r9;
        org.jdom2.Element $r10;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        $r1 := @parameter0: java.lang.String;

        $i0 = r0.<org.jdom2.input.sax.SAXHandler: int entityDepth>;

        $i0 = $i0 + 1;

        r0.<org.jdom2.input.sax.SAXHandler: int entityDepth> = $i0;

        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean expand>;

        if $z0 != 0 goto label7;

        $i0 = r0.<org.jdom2.input.sax.SAXHandler: int entityDepth>;

        if $i0 <= 1 goto label1;

        return;

     label1:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("[dtd]");

        if $z0 == 0 goto label2;

        r0.<org.jdom2.input.sax.SAXHandler: boolean inInternalSubset> = 0;

        return;

     label2:
        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean inDTD>;

        if $z0 != 0 goto label7;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("amp");

        if $z0 != 0 goto label7;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("lt");

        if $z0 != 0 goto label7;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("gt");

        if $z0 != 0 goto label7;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("apos");

        if $z0 != 0 goto label7;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("quot");

        if $z0 != 0 goto label7;

        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean expand>;

        if $z0 != 0 goto label7;

        r2 = null;

        r3 = null;

        $r4 = r0.<org.jdom2.input.sax.SAXHandler: java.util.Map externalEntities>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r6 = (java.lang.String[]) $r5;

        if r6 == null goto label3;

        r2 = r6[0];

        r3 = r6[1];

     label3:
        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean atRoot>;

        if $z0 != 0 goto label5;

        virtualinvoke r0.<org.jdom2.input.sax.SAXHandler: void flushCharacters()>();

        $r7 = r0.<org.jdom2.input.sax.SAXHandler: org.xml.sax.Locator currentLocator>;

        if $r7 != null goto label6;

        $r8 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        $r9 = interfaceinvoke $r8.<org.jdom2.JDOMFactory: org.jdom2.EntityRef entityRef(java.lang.String,java.lang.String,java.lang.String)>($r1, r2, r3);

     label4:
        $r8 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        $r10 = virtualinvoke r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.Element getCurrentElement()>();

        interfaceinvoke $r8.<org.jdom2.JDOMFactory: void addContent(org.jdom2.Parent,org.jdom2.Content)>($r10, $r9);

     label5:
        r0.<org.jdom2.input.sax.SAXHandler: boolean suppress> = 1;

        return;

     label6:
        $r8 = r0.<org.jdom2.input.sax.SAXHandler: org.jdom2.JDOMFactory factory>;

        $r7 = r0.<org.jdom2.input.sax.SAXHandler: org.xml.sax.Locator currentLocator>;

        $i0 = interfaceinvoke $r7.<org.xml.sax.Locator: int getLineNumber()>();

        $r7 = r0.<org.jdom2.input.sax.SAXHandler: org.xml.sax.Locator currentLocator>;

        $i1 = interfaceinvoke $r7.<org.xml.sax.Locator: int getColumnNumber()>();

        $r9 = interfaceinvoke $r8.<org.jdom2.JDOMFactory: org.jdom2.EntityRef entityRef(int,int,java.lang.String,java.lang.String,java.lang.String)>($i0, $i1, $r1, r2, r3);

        goto label4;

     label7:
        return;
    }
    public void startPrefixMapping(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.jdom2.input.sax.SAXHandler r0;
        java.lang.String $r1, $r2;
        org.jdom2.Namespace $r3;
        boolean $z0;
        java.util.List $r4;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean suppress>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = staticinvoke <org.jdom2.Namespace: org.jdom2.Namespace getNamespace(java.lang.String,java.lang.String)>($r1, $r2);

        $r4 = r0.<org.jdom2.input.sax.SAXHandler: java.util.List declaredNamespaces>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r3);

        return;
    }
    public void unparsedEntityDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        org.jdom2.input.sax.SAXHandler r0;
        java.lang.String $r1, $r2, $r3, $r4;
        boolean $z0;
        java.lang.StringBuilder $r5;

        r0 := @this: org.jdom2.input.sax.SAXHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $z0 = r0.<org.jdom2.input.sax.SAXHandler: boolean inInternalSubset>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r5 = r0.<org.jdom2.input.sax.SAXHandler: java.lang.StringBuilder internalSubset>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  <!ENTITY ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        specialinvoke r0.<org.jdom2.input.sax.SAXHandler: void appendExternalId(java.lang.String,java.lang.String)>($r2, $r3);

        $r5 = r0.<org.jdom2.input.sax.SAXHandler: java.lang.StringBuilder internalSubset>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" NDATA ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = r0.<org.jdom2.input.sax.SAXHandler: java.lang.StringBuilder internalSubset>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        return;
    }
