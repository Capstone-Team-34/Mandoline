org.jdom2.IllegalAddException extends java.lang.IllegalArgumentException
private static final long serialVersionUID
    public void <init>(java.lang.String)
    {
        org.jdom2.IllegalAddException r0;
        java.lang.String $r1;

        r0 := @this: org.jdom2.IllegalAddException;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        return;
    }
    void <init>(org.jdom2.Comment, java.lang.String)
    {
        org.jdom2.IllegalAddException r0;
        org.jdom2.Comment $r1;
        java.lang.String $r2, $r4;
        java.lang.StringBuilder $r3;

        r0 := @this: org.jdom2.IllegalAddException;

        $r1 := @parameter0: org.jdom2.Comment;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The comment \"");

        $r4 = virtualinvoke $r1.<org.jdom2.Comment: java.lang.String getText()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" could not be added to the top level of the document: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        return;
    }
    void <init>(org.jdom2.DocType, java.lang.String)
    {
        org.jdom2.IllegalAddException r0;
        org.jdom2.DocType $r1;
        java.lang.String $r2, $r4;
        java.lang.StringBuilder $r3;

        r0 := @this: org.jdom2.IllegalAddException;

        $r1 := @parameter0: org.jdom2.DocType;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The DOCTYPE ");

        $r4 = virtualinvoke $r1.<org.jdom2.DocType: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not be added to the document: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        return;
    }
    void <init>(org.jdom2.Element, java.lang.String)
    {
        org.jdom2.IllegalAddException r0;
        org.jdom2.Element $r1;
        java.lang.String $r2, $r4;
        java.lang.StringBuilder $r3;

        r0 := @this: org.jdom2.IllegalAddException;

        $r1 := @parameter0: org.jdom2.Element;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The element \"");

        $r4 = virtualinvoke $r1.<org.jdom2.Element: java.lang.String getQualifiedName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" could not be added as the root of the document: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        return;
    }
    void <init>(org.jdom2.Element, org.jdom2.Attribute, java.lang.String)
    {
        org.jdom2.IllegalAddException r0;
        org.jdom2.Element $r1;
        org.jdom2.Attribute $r2;
        java.lang.String $r3, $r5;
        java.lang.StringBuilder $r4;

        r0 := @this: org.jdom2.IllegalAddException;

        $r1 := @parameter0: org.jdom2.Element;

        $r2 := @parameter1: org.jdom2.Attribute;

        $r3 := @parameter2: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The attribute \"");

        $r5 = virtualinvoke $r2.<org.jdom2.Attribute: java.lang.String getQualifiedName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" could not be added to the element \"");

        $r5 = virtualinvoke $r1.<org.jdom2.Element: java.lang.String getQualifiedName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        return;
    }
    void <init>(org.jdom2.Element, org.jdom2.CDATA, java.lang.String)
    {
        org.jdom2.IllegalAddException r0;
        org.jdom2.Element $r1;
        org.jdom2.CDATA $r2;
        java.lang.String $r3, $r5;
        java.lang.StringBuilder $r4;

        r0 := @this: org.jdom2.IllegalAddException;

        $r1 := @parameter0: org.jdom2.Element;

        $r2 := @parameter1: org.jdom2.CDATA;

        $r3 := @parameter2: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The CDATA \"");

        $r5 = virtualinvoke $r2.<org.jdom2.CDATA: java.lang.String getText()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" could not be added as content to \"");

        $r5 = virtualinvoke $r1.<org.jdom2.Element: java.lang.String getQualifiedName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        return;
    }
    void <init>(org.jdom2.Element, org.jdom2.Comment, java.lang.String)
    {
        org.jdom2.IllegalAddException r0;
        org.jdom2.Element $r1;
        org.jdom2.Comment $r2;
        java.lang.String $r3, $r5;
        java.lang.StringBuilder $r4;

        r0 := @this: org.jdom2.IllegalAddException;

        $r1 := @parameter0: org.jdom2.Element;

        $r2 := @parameter1: org.jdom2.Comment;

        $r3 := @parameter2: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The comment \"");

        $r5 = virtualinvoke $r2.<org.jdom2.Comment: java.lang.String getText()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" could not be added as content to \"");

        $r5 = virtualinvoke $r1.<org.jdom2.Element: java.lang.String getQualifiedName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        return;
    }
    void <init>(org.jdom2.Element, org.jdom2.Element, java.lang.String)
    {
        org.jdom2.IllegalAddException r0;
        org.jdom2.Element $r1, $r2;
        java.lang.String $r3, $r5;
        java.lang.StringBuilder $r4;

        r0 := @this: org.jdom2.IllegalAddException;

        $r1 := @parameter0: org.jdom2.Element;

        $r2 := @parameter1: org.jdom2.Element;

        $r3 := @parameter2: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The element \"");

        $r5 = virtualinvoke $r2.<org.jdom2.Element: java.lang.String getQualifiedName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" could not be added as a child of \"");

        $r5 = virtualinvoke $r1.<org.jdom2.Element: java.lang.String getQualifiedName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        return;
    }
    void <init>(org.jdom2.Element, org.jdom2.EntityRef, java.lang.String)
    {
        org.jdom2.IllegalAddException r0;
        org.jdom2.Element $r1;
        org.jdom2.EntityRef $r2;
        java.lang.String $r3, $r5;
        java.lang.StringBuilder $r4;

        r0 := @this: org.jdom2.IllegalAddException;

        $r1 := @parameter0: org.jdom2.Element;

        $r2 := @parameter1: org.jdom2.EntityRef;

        $r3 := @parameter2: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The entity reference\"");

        $r5 = virtualinvoke $r2.<org.jdom2.EntityRef: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" could not be added as content to \"");

        $r5 = virtualinvoke $r1.<org.jdom2.Element: java.lang.String getQualifiedName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        return;
    }
    void <init>(org.jdom2.Element, org.jdom2.Namespace, java.lang.String)
    {
        org.jdom2.IllegalAddException r0;
        org.jdom2.Element $r1;
        org.jdom2.Namespace $r2;
        java.lang.String $r3, $r5;
        java.lang.StringBuilder $r4, $r6;
        boolean $z0;

        r0 := @this: org.jdom2.IllegalAddException;

        $r1 := @parameter0: org.jdom2.Element;

        $r2 := @parameter1: org.jdom2.Namespace;

        $r3 := @parameter2: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The namespace xmlns");

        $r5 = virtualinvoke $r2.<org.jdom2.Namespace: java.lang.String getPrefix()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label2;

        $r5 = "=";

     label1:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r5 = virtualinvoke $r2.<org.jdom2.Namespace: java.lang.String getURI()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" could not be added as a namespace to \"");

        $r5 = virtualinvoke $r1.<org.jdom2.Element: java.lang.String getQualifiedName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        return;

     label2:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r5 = virtualinvoke $r2.<org.jdom2.Namespace: java.lang.String getPrefix()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;
    }
    void <init>(org.jdom2.Element, org.jdom2.ProcessingInstruction, java.lang.String)
    {
        org.jdom2.IllegalAddException r0;
        org.jdom2.Element $r1;
        org.jdom2.ProcessingInstruction $r2;
        java.lang.String $r3, $r5;
        java.lang.StringBuilder $r4;

        r0 := @this: org.jdom2.IllegalAddException;

        $r1 := @parameter0: org.jdom2.Element;

        $r2 := @parameter1: org.jdom2.ProcessingInstruction;

        $r3 := @parameter2: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The PI \"");

        $r5 = virtualinvoke $r2.<org.jdom2.ProcessingInstruction: java.lang.String getTarget()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" could not be added as content to \"");

        $r5 = virtualinvoke $r1.<org.jdom2.Element: java.lang.String getQualifiedName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        return;
    }
    void <init>(org.jdom2.Element, org.jdom2.Text, java.lang.String)
    {
        org.jdom2.IllegalAddException r0;
        org.jdom2.Element $r1;
        org.jdom2.Text $r2;
        java.lang.String $r3, $r5;
        java.lang.StringBuilder $r4;

        r0 := @this: org.jdom2.IllegalAddException;

        $r1 := @parameter0: org.jdom2.Element;

        $r2 := @parameter1: org.jdom2.Text;

        $r3 := @parameter2: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The Text \"");

        $r5 = virtualinvoke $r2.<org.jdom2.Text: java.lang.String getText()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" could not be added as content to \"");

        $r5 = virtualinvoke $r1.<org.jdom2.Element: java.lang.String getQualifiedName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        return;
    }
    void <init>(org.jdom2.ProcessingInstruction, java.lang.String)
    {
        org.jdom2.IllegalAddException r0;
        org.jdom2.ProcessingInstruction $r1;
        java.lang.String $r2, $r4;
        java.lang.StringBuilder $r3;

        r0 := @this: org.jdom2.IllegalAddException;

        $r1 := @parameter0: org.jdom2.ProcessingInstruction;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The PI \"");

        $r4 = virtualinvoke $r1.<org.jdom2.ProcessingInstruction: java.lang.String getTarget()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" could not be added to the top level of the document: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        return;
    }
