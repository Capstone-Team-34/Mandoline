org.jdom2.Comment extends org.jdom2.Content
private static final long serialVersionUID
protected java.lang.String text
    protected void <init>()
    {
        org.jdom2.Comment r0;
        org.jdom2.Content$CType $r1;

        r0 := @this: org.jdom2.Comment;

        $r1 = <org.jdom2.Content$CType: org.jdom2.Content$CType Comment>;

        specialinvoke r0.<org.jdom2.Content: void <init>(org.jdom2.Content$CType)>($r1);

        return;
    }
    public void <init>(java.lang.String)
    {
        org.jdom2.Comment r0;
        java.lang.String $r1;
        org.jdom2.Content$CType $r2;

        r0 := @this: org.jdom2.Comment;

        $r1 := @parameter0: java.lang.String;

        $r2 = <org.jdom2.Content$CType: org.jdom2.Content$CType Comment>;

        specialinvoke r0.<org.jdom2.Content: void <init>(org.jdom2.Content$CType)>($r2);

        virtualinvoke r0.<org.jdom2.Comment: org.jdom2.Comment setText(java.lang.String)>($r1);

        return;
    }
    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jdom2.Comment r0;

        r0 := @this: org.jdom2.Comment;

        r0 = virtualinvoke r0.<org.jdom2.Comment: org.jdom2.Comment clone()>();

        return r0;
    }
    public volatile org.jdom2.CloneBase clone()
    {
        org.jdom2.Comment r0;

        r0 := @this: org.jdom2.Comment;

        r0 = virtualinvoke r0.<org.jdom2.Comment: org.jdom2.Comment clone()>();

        return r0;
    }
    public org.jdom2.Comment clone()
    {
        org.jdom2.Comment r0;
        org.jdom2.Content $r1;

        r0 := @this: org.jdom2.Comment;

        $r1 = specialinvoke r0.<org.jdom2.Content: org.jdom2.Content clone()>();

        r0 = (org.jdom2.Comment) $r1;

        return r0;
    }
    public volatile org.jdom2.Content clone()
    {
        org.jdom2.Comment r0;

        r0 := @this: org.jdom2.Comment;

        r0 = virtualinvoke r0.<org.jdom2.Comment: org.jdom2.Comment clone()>();

        return r0;
    }
    public org.jdom2.Comment detach()
    {
        org.jdom2.Comment r0;
        org.jdom2.Content $r1;

        r0 := @this: org.jdom2.Comment;

        $r1 = specialinvoke r0.<org.jdom2.Content: org.jdom2.Content detach()>();

        r0 = (org.jdom2.Comment) $r1;

        return r0;
    }
    public volatile org.jdom2.Content detach()
    {
        org.jdom2.Comment r0;

        r0 := @this: org.jdom2.Comment;

        r0 = virtualinvoke r0.<org.jdom2.Comment: org.jdom2.Comment detach()>();

        return r0;
    }
    public java.lang.String getText()
    {
        org.jdom2.Comment r0;
        java.lang.String r1;

        r0 := @this: org.jdom2.Comment;

        r1 = r0.<org.jdom2.Comment: java.lang.String text>;

        return r1;
    }
    public java.lang.String getValue()
    {
        org.jdom2.Comment r0;
        java.lang.String r1;

        r0 := @this: org.jdom2.Comment;

        r1 = r0.<org.jdom2.Comment: java.lang.String text>;

        return r1;
    }
    protected org.jdom2.Comment setParent(org.jdom2.Parent)
    {
        org.jdom2.Comment r0;
        org.jdom2.Parent $r1;
        org.jdom2.Content $r2;

        r0 := @this: org.jdom2.Comment;

        $r1 := @parameter0: org.jdom2.Parent;

        $r2 = specialinvoke r0.<org.jdom2.Content: org.jdom2.Content setParent(org.jdom2.Parent)>($r1);

        r0 = (org.jdom2.Comment) $r2;

        return r0;
    }
    protected volatile org.jdom2.Content setParent(org.jdom2.Parent)
    {
        org.jdom2.Comment r0;
        org.jdom2.Parent $r1;

        r0 := @this: org.jdom2.Comment;

        $r1 := @parameter0: org.jdom2.Parent;

        r0 = virtualinvoke r0.<org.jdom2.Comment: org.jdom2.Comment setParent(org.jdom2.Parent)>($r1);

        return r0;
    }
    public org.jdom2.Comment setText(java.lang.String)
    {
        org.jdom2.Comment r0;
        java.lang.String $r1, $r3;
        org.jdom2.IllegalDataException $r2;

        r0 := @this: org.jdom2.Comment;

        $r1 := @parameter0: java.lang.String;

        $r3 = staticinvoke <org.jdom2.Verifier: java.lang.String checkCommentData(java.lang.String)>($r1);

        if $r3 == null goto label1;

        $r2 = new org.jdom2.IllegalDataException;

        specialinvoke $r2.<org.jdom2.IllegalDataException: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r1, "comment", $r3);

        throw $r2;

     label1:
        r0.<org.jdom2.Comment: java.lang.String text> = $r1;

        return r0;
    }
    public java.lang.String toString()
    {
        org.jdom2.Comment r0;
        java.lang.StringBuilder $r1;
        org.jdom2.output.XMLOutputter $r2;
        java.lang.String $r3;

        r0 := @this: org.jdom2.Comment;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[Comment: ");

        $r2 = new org.jdom2.output.XMLOutputter;

        specialinvoke $r2.<org.jdom2.output.XMLOutputter: void <init>()>();

        $r3 = virtualinvoke $r2.<org.jdom2.output.XMLOutputter: java.lang.String outputString(org.jdom2.Comment)>(r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
