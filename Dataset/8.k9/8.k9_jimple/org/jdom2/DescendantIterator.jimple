org.jdom2.DescendantIterator extends java.lang.Object implements org.jdom2.util.IteratorIterable
private java.util.Iterator ascending
private java.util.Iterator current
private java.util.Iterator descending
private boolean hasnext
private final org.jdom2.Parent parent
private int ssize
private java.lang.Object[] stack
    void <init>(org.jdom2.Parent)
    {
        org.jdom2.DescendantIterator r0;
        org.jdom2.Parent $r1;
        java.lang.Object[] $r2;
        java.util.List $r3;
        java.util.Iterator $r4;
        boolean $z0;

        r0 := @this: org.jdom2.DescendantIterator;

        $r1 := @parameter0: org.jdom2.Parent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (java.lang.Object)[16];

        r0.<org.jdom2.DescendantIterator: java.lang.Object[] stack> = $r2;

        r0.<org.jdom2.DescendantIterator: int ssize> = 0;

        r0.<org.jdom2.DescendantIterator: java.util.Iterator current> = null;

        r0.<org.jdom2.DescendantIterator: java.util.Iterator descending> = null;

        r0.<org.jdom2.DescendantIterator: java.util.Iterator ascending> = null;

        r0.<org.jdom2.DescendantIterator: boolean hasnext> = 1;

        r0.<org.jdom2.DescendantIterator: org.jdom2.Parent parent> = $r1;

        $r3 = interfaceinvoke $r1.<org.jdom2.Parent: java.util.List getContent()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        r0.<org.jdom2.DescendantIterator: java.util.Iterator current> = $r4;

        $r4 = r0.<org.jdom2.DescendantIterator: java.util.Iterator current>;

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        r0.<org.jdom2.DescendantIterator: boolean hasnext> = $z0;

        return;
    }
    public boolean hasNext()
    {
        org.jdom2.DescendantIterator r0;
        boolean z0;

        r0 := @this: org.jdom2.DescendantIterator;

        z0 = r0.<org.jdom2.DescendantIterator: boolean hasnext>;

        return z0;
    }
    public volatile java.util.Iterator iterator()
    {
        org.jdom2.DescendantIterator r0;

        r0 := @this: org.jdom2.DescendantIterator;

        r0 = virtualinvoke r0.<org.jdom2.DescendantIterator: org.jdom2.DescendantIterator iterator()>();

        return r0;
    }
    public org.jdom2.DescendantIterator iterator()
    {
        org.jdom2.DescendantIterator r0, $r1;
        org.jdom2.Parent $r2;

        r0 := @this: org.jdom2.DescendantIterator;

        $r1 = new org.jdom2.DescendantIterator;

        $r2 = r0.<org.jdom2.DescendantIterator: org.jdom2.Parent parent>;

        specialinvoke $r1.<org.jdom2.DescendantIterator: void <init>(org.jdom2.Parent)>($r2);

        return $r1;
    }
    public volatile java.lang.Object next()
    {
        org.jdom2.DescendantIterator r0;
        org.jdom2.Content $r1;

        r0 := @this: org.jdom2.DescendantIterator;

        $r1 = virtualinvoke r0.<org.jdom2.DescendantIterator: org.jdom2.Content next()>();

        return $r1;
    }
    public org.jdom2.Content next()
    {
        org.jdom2.DescendantIterator r0;
        java.util.Iterator $r1;
        java.lang.Object $r2;
        org.jdom2.Content r3;
        boolean $z0;
        org.jdom2.Element $r4;
        int $i0, $i1;
        java.util.List $r5;
        java.lang.Object[] $r6;

        r0 := @this: org.jdom2.DescendantIterator;

        $r1 = r0.<org.jdom2.DescendantIterator: java.util.Iterator descending>;

        if $r1 == null goto label3;

        $r1 = r0.<org.jdom2.DescendantIterator: java.util.Iterator descending>;

        r0.<org.jdom2.DescendantIterator: java.util.Iterator current> = $r1;

        r0.<org.jdom2.DescendantIterator: java.util.Iterator descending> = null;

     label1:
        $r1 = r0.<org.jdom2.DescendantIterator: java.util.Iterator current>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.jdom2.Content) $r2;

        $z0 = r3 instanceof org.jdom2.Element;

        if $z0 == 0 goto label4;

        $r4 = (org.jdom2.Element) r3;

        $i0 = virtualinvoke $r4.<org.jdom2.Element: int getContentSize()>();

        if $i0 <= 0 goto label4;

        $r4 = (org.jdom2.Element) r3;

        $r5 = virtualinvoke $r4.<org.jdom2.Element: java.util.List getContent()>();

        $r1 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

        r0.<org.jdom2.DescendantIterator: java.util.Iterator descending> = $r1;

        $i0 = r0.<org.jdom2.DescendantIterator: int ssize>;

        $r6 = r0.<org.jdom2.DescendantIterator: java.lang.Object[] stack>;

        $i1 = lengthof $r6;

        if $i0 < $i1 goto label2;

        $r6 = r0.<org.jdom2.DescendantIterator: java.lang.Object[] stack>;

        $i0 = r0.<org.jdom2.DescendantIterator: int ssize>;

        $i0 = $i0 + 16;

        $r6 = staticinvoke <org.jdom2.internal.ArrayCopy: java.lang.Object[] copyOf(java.lang.Object[],int)>($r6, $i0);

        r0.<org.jdom2.DescendantIterator: java.lang.Object[] stack> = $r6;

     label2:
        $r6 = r0.<org.jdom2.DescendantIterator: java.lang.Object[] stack>;

        $i0 = r0.<org.jdom2.DescendantIterator: int ssize>;

        $i1 = $i0 + 1;

        r0.<org.jdom2.DescendantIterator: int ssize> = $i1;

        $r1 = r0.<org.jdom2.DescendantIterator: java.util.Iterator current>;

        $r6[$i0] = $r1;

        return r3;

     label3:
        $r1 = r0.<org.jdom2.DescendantIterator: java.util.Iterator ascending>;

        if $r1 == null goto label1;

        $r1 = r0.<org.jdom2.DescendantIterator: java.util.Iterator ascending>;

        r0.<org.jdom2.DescendantIterator: java.util.Iterator current> = $r1;

        r0.<org.jdom2.DescendantIterator: java.util.Iterator ascending> = null;

        goto label1;

     label4:
        $r1 = r0.<org.jdom2.DescendantIterator: java.util.Iterator current>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label7;

     label5:
        $i0 = r0.<org.jdom2.DescendantIterator: int ssize>;

        if $i0 <= 0 goto label6;

        $r6 = r0.<org.jdom2.DescendantIterator: java.lang.Object[] stack>;

        $i0 = r0.<org.jdom2.DescendantIterator: int ssize>;

        $i0 = $i0 + -1;

        r0.<org.jdom2.DescendantIterator: int ssize> = $i0;

        $r2 = $r6[$i0];

        $r1 = (java.util.Iterator) $r2;

        r0.<org.jdom2.DescendantIterator: java.util.Iterator ascending> = $r1;

        $r6 = r0.<org.jdom2.DescendantIterator: java.lang.Object[] stack>;

        $i0 = r0.<org.jdom2.DescendantIterator: int ssize>;

        $r6[$i0] = null;

        $r1 = r0.<org.jdom2.DescendantIterator: java.util.Iterator ascending>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        return r3;

     label6:
        r0.<org.jdom2.DescendantIterator: java.util.Iterator ascending> = null;

        r0.<org.jdom2.DescendantIterator: boolean hasnext> = 0;

     label7:
        return r3;
    }
    public void remove()
    {
        org.jdom2.DescendantIterator r0;
        java.util.Iterator $r1;
        boolean $z0;
        int $i0;
        java.lang.Object[] $r2;
        java.lang.Object r3;

        r0 := @this: org.jdom2.DescendantIterator;

        $r1 = r0.<org.jdom2.DescendantIterator: java.util.Iterator current>;

        interfaceinvoke $r1.<java.util.Iterator: void remove()>();

        r0.<org.jdom2.DescendantIterator: java.util.Iterator descending> = null;

        $r1 = r0.<org.jdom2.DescendantIterator: java.util.Iterator current>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

        $r1 = r0.<org.jdom2.DescendantIterator: java.util.Iterator ascending>;

        if $r1 == null goto label1;

        return;

     label1:
        $i0 = r0.<org.jdom2.DescendantIterator: int ssize>;

        if $i0 <= 0 goto label2;

        $r2 = r0.<org.jdom2.DescendantIterator: java.lang.Object[] stack>;

        $i0 = r0.<org.jdom2.DescendantIterator: int ssize>;

        $i0 = $i0 + -1;

        r0.<org.jdom2.DescendantIterator: int ssize> = $i0;

        r3 = $r2[$i0];

        $r1 = (java.util.Iterator) r3;

        $r2 = r0.<org.jdom2.DescendantIterator: java.lang.Object[] stack>;

        $i0 = r0.<org.jdom2.DescendantIterator: int ssize>;

        $r2[$i0] = null;

        r0.<org.jdom2.DescendantIterator: java.util.Iterator ascending> = $r1;

        $r1 = r0.<org.jdom2.DescendantIterator: java.util.Iterator ascending>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        return;

     label2:
        r0.<org.jdom2.DescendantIterator: java.util.Iterator ascending> = null;

        r0.<org.jdom2.DescendantIterator: boolean hasnext> = 0;

     label3:
        return;
    }
