org.jdom2.xpath.XPathHelper extends java.lang.Object
    private void <init>()
    {
        org.jdom2.xpath.XPathHelper r0;

        r0 := @this: org.jdom2.xpath.XPathHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static java.lang.String getAbsolutePath(org.jdom2.Attribute)
    {
        org.jdom2.Attribute $r0;
        java.lang.StringBuilder r1;
        java.lang.NullPointerException $r2;
        org.jdom2.Element $r3, r5, $r6;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r7;

        $r0 := @parameter0: org.jdom2.Attribute;

        if $r0 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot create a path to a null target");

        throw $r2;

     label1:
        $r3 = virtualinvoke $r0.<org.jdom2.Attribute: org.jdom2.Element getParent()>();

        if $r3 != null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot create a path to detached target");

        throw $r4;

     label2:
        r5 = $r3;

     label3:
        $r6 = virtualinvoke r5.<org.jdom2.Element: org.jdom2.Element getParentElement()>();

        if $r6 == null goto label4;

        r5 = virtualinvoke r5.<org.jdom2.Element: org.jdom2.Element getParentElement()>();

        goto label3;

     label4:
        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        staticinvoke <org.jdom2.xpath.XPathHelper: java.lang.StringBuilder getSingleStep(org.jdom2.NamespaceAware,java.lang.StringBuilder)>(r5, r1);

        if $r3 == r5 goto label5;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        staticinvoke <org.jdom2.xpath.XPathHelper: java.lang.StringBuilder getRelativeElementPath(org.jdom2.Element,org.jdom2.Parent,java.lang.StringBuilder)>(r5, $r3, r1);

     label5:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        staticinvoke <org.jdom2.xpath.XPathHelper: java.lang.StringBuilder getSingleStep(org.jdom2.NamespaceAware,java.lang.StringBuilder)>($r0, r1);

        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
    public static java.lang.String getAbsolutePath(org.jdom2.Content)
    {
        org.jdom2.Content $r0;
        java.lang.StringBuilder r1;
        java.lang.NullPointerException $r2;
        boolean $z0;
        org.jdom2.Element $r3, r7, $r8;
        org.jdom2.Parent $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;

        $r0 := @parameter0: org.jdom2.Content;

        if $r0 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot create a path to a null target");

        throw $r2;

     label1:
        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $z0 = $r0 instanceof org.jdom2.Element;

        if $z0 == 0 goto label3;

        $r3 = (org.jdom2.Element) $r0;

     label2:
        if $r3 != null goto label5;

        $r4 = virtualinvoke $r0.<org.jdom2.Content: org.jdom2.Parent getParent()>();

        if $r4 != null goto label4;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot create a path to detached target");

        throw $r5;

     label3:
        $r3 = virtualinvoke $r0.<org.jdom2.Content: org.jdom2.Element getParentElement()>();

        goto label2;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        staticinvoke <org.jdom2.xpath.XPathHelper: java.lang.StringBuilder getSingleStep(org.jdom2.NamespaceAware,java.lang.StringBuilder)>($r0, r1);

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;

     label5:
        r7 = $r3;

     label6:
        $r8 = virtualinvoke r7.<org.jdom2.Element: org.jdom2.Element getParentElement()>();

        if $r8 == null goto label7;

        r7 = virtualinvoke r7.<org.jdom2.Element: org.jdom2.Element getParentElement()>();

        goto label6;

     label7:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        staticinvoke <org.jdom2.xpath.XPathHelper: java.lang.StringBuilder getSingleStep(org.jdom2.NamespaceAware,java.lang.StringBuilder)>(r7, r1);

        if r7 == $r3 goto label8;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        staticinvoke <org.jdom2.xpath.XPathHelper: java.lang.StringBuilder getRelativeElementPath(org.jdom2.Element,org.jdom2.Parent,java.lang.StringBuilder)>(r7, $r3, r1);

     label8:
        if $r3 == $r0 goto label9;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        staticinvoke <org.jdom2.xpath.XPathHelper: java.lang.StringBuilder getSingleStep(org.jdom2.NamespaceAware,java.lang.StringBuilder)>($r0, r1);

     label9:
        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
    private static java.lang.StringBuilder getPositionPath(java.lang.Object, java.util.List, java.lang.String, java.lang.StringBuilder)
    {
        java.lang.Object $r0, $r5;
        java.util.List r1;
        java.lang.String $r2;
        java.lang.StringBuilder $r3, $r6;
        int i0;
        java.util.Iterator $r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.util.List;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.StringBuilder;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        if r1 == null goto label4;

        i0 = 0;

        $r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        i0 = i0 + 1;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        if $r5 != $r0 goto label1;

     label2:
        if i0 > 1 goto label3;

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

     label3:
        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

     label4:
        return $r3;
    }
    private static java.lang.StringBuilder getRelativeElementPath(org.jdom2.Element, org.jdom2.Parent, java.lang.StringBuilder)
    {
        org.jdom2.Element $r0;
        org.jdom2.Parent $r1;
        java.lang.StringBuilder $r2;
        java.util.ArrayList r3;
        int $i0, i1, $i2;
        java.lang.IllegalArgumentException $r4;
        java.lang.Object $r5;
        org.jdom2.NamespaceAware $r6;

        $r0 := @parameter0: org.jdom2.Element;

        $r1 := @parameter1: org.jdom2.Parent;

        $r2 := @parameter2: java.lang.StringBuilder;

        if $r0 != $r1 goto label1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        return $r2;

     label1:
        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

     label2:
        if $r1 == null goto label3;

        if $r1 == $r0 goto label3;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $r1 = interfaceinvoke $r1.<org.jdom2.Parent: org.jdom2.Parent getParent()>();

        goto label2;

     label3:
        $i0 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if $r1 == $r0 goto label7;

        $r1 = $r0;

        i1 = 0;

     label4:
        if $r1 == null goto label5;

        $i2 = staticinvoke <org.jdom2.xpath.XPathHelper: int locate(org.jdom2.Parent,java.util.List)>($r1, r3);

        $i0 = $i2;

        if $i2 >= 0 goto label5;

        i1 = i1 + 1;

        $r1 = interfaceinvoke $r1.<org.jdom2.Parent: org.jdom2.Parent getParent()>();

        goto label4;

     label5:
        if $r1 != null goto label6;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The \'from\' and \'to\' Element have no common ancestor.");

        throw $r4;

     label6:
        i1 = i1 + -1;

        if i1 < 0 goto label7;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("../");

        goto label6;

     label7:
        $i0 = $i0 + -1;

        if $i0 < 0 goto label8;

        $r5 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r6 = (org.jdom2.NamespaceAware) $r5;

        staticinvoke <org.jdom2.xpath.XPathHelper: java.lang.StringBuilder getSingleStep(org.jdom2.NamespaceAware,java.lang.StringBuilder)>($r6, $r2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        goto label7;

     label8:
        $i0 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        $i0 = $i0 + -1;

        virtualinvoke $r2.<java.lang.StringBuilder: void setLength(int)>($i0);

        return $r2;
    }
    public static java.lang.String getRelativePath(org.jdom2.Attribute, org.jdom2.Attribute)
    {
        org.jdom2.Attribute $r0, $r1;
        java.lang.NullPointerException $r2;
        org.jdom2.Element $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        $r0 := @parameter0: org.jdom2.Attribute;

        $r1 := @parameter1: org.jdom2.Attribute;

        if $r0 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot create a path from a null \'from\'");

        throw $r2;

     label1:
        if $r1 != null goto label2;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot create a path to a null target");

        throw $r2;

     label2:
        if $r0 != $r1 goto label3;

        return ".";

     label3:
        $r3 = virtualinvoke $r0.<org.jdom2.Attribute: org.jdom2.Element getParent()>();

        if $r3 != null goto label4;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot create a path from a detached attrbibute");

        throw $r4;

     label4:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("../");

        $r6 = staticinvoke <org.jdom2.xpath.XPathHelper: java.lang.String getRelativePath(org.jdom2.Content,org.jdom2.Attribute)>($r3, $r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
    public static java.lang.String getRelativePath(org.jdom2.Attribute, org.jdom2.Content)
    {
        org.jdom2.Attribute $r0;
        org.jdom2.Content $r1;
        java.lang.NullPointerException $r2;
        org.jdom2.Element $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        $r0 := @parameter0: org.jdom2.Attribute;

        $r1 := @parameter1: org.jdom2.Content;

        if $r0 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot create a path from a null \'from\'");

        throw $r2;

     label1:
        if $r1 != null goto label2;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot create a path to a null target");

        throw $r2;

     label2:
        $r3 = virtualinvoke $r0.<org.jdom2.Attribute: org.jdom2.Element getParent()>();

        if $r3 != null goto label3;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot create a path from a detached attrbibute");

        throw $r4;

     label3:
        if $r3 != $r1 goto label4;

        return "..";

     label4:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("../");

        $r6 = staticinvoke <org.jdom2.xpath.XPathHelper: java.lang.String getRelativePath(org.jdom2.Content,org.jdom2.Content)>($r3, $r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
    public static java.lang.String getRelativePath(org.jdom2.Content, org.jdom2.Attribute)
    {
        org.jdom2.Content $r0;
        org.jdom2.Attribute $r1;
        java.lang.StringBuilder r2;
        java.lang.NullPointerException $r3;
        org.jdom2.Element $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;

        $r0 := @parameter0: org.jdom2.Content;

        $r1 := @parameter1: org.jdom2.Attribute;

        if $r0 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot create a path from a null Content");

        throw $r3;

     label1:
        if $r1 != null goto label2;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot create a path to a null Attribute");

        throw $r3;

     label2:
        $r4 = virtualinvoke $r1.<org.jdom2.Attribute: org.jdom2.Element getParent()>();

        if $r4 != null goto label3;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot create a path to detached Attribute");

        throw $r5;

     label3:
        r2 = new java.lang.StringBuilder;

        $r6 = staticinvoke <org.jdom2.xpath.XPathHelper: java.lang.String getRelativePath(org.jdom2.Content,org.jdom2.Content)>($r0, $r4);

        specialinvoke r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        staticinvoke <org.jdom2.xpath.XPathHelper: java.lang.StringBuilder getSingleStep(org.jdom2.NamespaceAware,java.lang.StringBuilder)>($r1, r2);

        $r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
    public static java.lang.String getRelativePath(org.jdom2.Content, org.jdom2.Content)
    {
        org.jdom2.Content $r0, r2;
        java.lang.StringBuilder r1;
        java.lang.NullPointerException $r3;
        boolean $z0;
        org.jdom2.Element $r4, r5;
        java.lang.String $r6;
        org.jdom2.Parent $r7;
        java.lang.IllegalArgumentException $r8;

        $r0 := @parameter0: org.jdom2.Content;

        r2 := @parameter1: org.jdom2.Content;

        if $r0 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot create a path from a null target");

        throw $r3;

     label1:
        if r2 != null goto label2;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot create a path to a null target");

        throw $r3;

     label2:
        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        if $r0 != r2 goto label3;

        return ".";

     label3:
        $z0 = $r0 instanceof org.jdom2.Element;

        if $z0 == 0 goto label7;

        $r4 = (org.jdom2.Element) $r0;

     label4:
        if $r0 == $r4 goto label5;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("../");

     label5:
        $z0 = r2 instanceof org.jdom2.Element;

        if $z0 == 0 goto label8;

        r5 = (org.jdom2.Element) r2;

        staticinvoke <org.jdom2.xpath.XPathHelper: java.lang.StringBuilder getRelativeElementPath(org.jdom2.Element,org.jdom2.Parent,java.lang.StringBuilder)>($r4, r5, r1);

     label6:
        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;

     label7:
        $r4 = virtualinvoke $r0.<org.jdom2.Content: org.jdom2.Element getParentElement()>();

        goto label4;

     label8:
        $r7 = virtualinvoke r2.<org.jdom2.Content: org.jdom2.Parent getParent()>();

        if $r7 != null goto label9;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot get a relative XPath to detached content.");

        throw $r8;

     label9:
        staticinvoke <org.jdom2.xpath.XPathHelper: java.lang.StringBuilder getRelativeElementPath(org.jdom2.Element,org.jdom2.Parent,java.lang.StringBuilder)>($r4, $r7, r1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        staticinvoke <org.jdom2.xpath.XPathHelper: java.lang.StringBuilder getSingleStep(org.jdom2.NamespaceAware,java.lang.StringBuilder)>(r2, r1);

        goto label6;
    }
    private static final java.lang.StringBuilder getSingleStep(org.jdom2.NamespaceAware, java.lang.StringBuilder)
    {
        org.jdom2.NamespaceAware $r0;
        java.lang.StringBuilder r1, $r11;
        java.util.List r2;
        boolean $z0;
        org.jdom2.Content r3;
        org.jdom2.Parent $r4;
        org.jdom2.filter.Filter $r5;
        org.jdom2.Element $r6, r10;
        org.jdom2.Namespace $r7, $r8;
        java.lang.String $r9;
        org.jdom2.Attribute r12;

        $r0 := @parameter0: org.jdom2.NamespaceAware;

        r1 := @parameter1: java.lang.StringBuilder;

        r2 = null;

        $z0 = $r0 instanceof org.jdom2.Content;

        if $z0 == 0 goto label16;

        r3 = (org.jdom2.Content) $r0;

        $r4 = virtualinvoke r3.<org.jdom2.Content: org.jdom2.Parent getParent()>();

        $z0 = r3 instanceof org.jdom2.Text;

        if $z0 == 0 goto label03;

        if $r4 != null goto label02;

     label01:
        r1 = staticinvoke <org.jdom2.xpath.XPathHelper: java.lang.StringBuilder getPositionPath(java.lang.Object,java.util.List,java.lang.String,java.lang.StringBuilder)>(r3, r2, "text()", r1);

        return r1;

     label02:
        $r5 = staticinvoke <org.jdom2.filter.Filters: org.jdom2.filter.Filter text()>();

        r2 = interfaceinvoke $r4.<org.jdom2.Parent: java.util.List getContent(org.jdom2.filter.Filter)>($r5);

        goto label01;

     label03:
        $z0 = r3 instanceof org.jdom2.Comment;

        if $z0 == 0 goto label06;

        if $r4 != null goto label05;

     label04:
        r1 = staticinvoke <org.jdom2.xpath.XPathHelper: java.lang.StringBuilder getPositionPath(java.lang.Object,java.util.List,java.lang.String,java.lang.StringBuilder)>(r3, r2, "comment()", r1);

        return r1;

     label05:
        $r5 = staticinvoke <org.jdom2.filter.Filters: org.jdom2.filter.Filter comment()>();

        r2 = interfaceinvoke $r4.<org.jdom2.Parent: java.util.List getContent(org.jdom2.filter.Filter)>($r5);

        goto label04;

     label06:
        $z0 = r3 instanceof org.jdom2.ProcessingInstruction;

        if $z0 == 0 goto label09;

        if $r4 != null goto label08;

     label07:
        r1 = staticinvoke <org.jdom2.xpath.XPathHelper: java.lang.StringBuilder getPositionPath(java.lang.Object,java.util.List,java.lang.String,java.lang.StringBuilder)>(r3, r2, "processing-instruction()", r1);

        return r1;

     label08:
        $r5 = staticinvoke <org.jdom2.filter.Filters: org.jdom2.filter.Filter processinginstruction()>();

        r2 = interfaceinvoke $r4.<org.jdom2.Parent: java.util.List getContent(org.jdom2.filter.Filter)>($r5);

        goto label07;

     label09:
        $z0 = r3 instanceof org.jdom2.Element;

        if $z0 == 0 goto label11;

        $r6 = (org.jdom2.Element) r3;

        $r7 = virtualinvoke $r6.<org.jdom2.Element: org.jdom2.Namespace getNamespace()>();

        $r8 = <org.jdom2.Namespace: org.jdom2.Namespace NO_NAMESPACE>;

        if $r7 != $r8 goto label11;

        $r6 = (org.jdom2.Element) r3;

        $r9 = virtualinvoke $r6.<org.jdom2.Element: java.lang.String getName()>();

        $z0 = $r4 instanceof org.jdom2.Element;

        if $z0 == 0 goto label10;

        $r6 = (org.jdom2.Element) $r4;

        r2 = virtualinvoke $r6.<org.jdom2.Element: java.util.List getChildren(java.lang.String)>($r9);

     label10:
        r1 = staticinvoke <org.jdom2.xpath.XPathHelper: java.lang.StringBuilder getPositionPath(java.lang.Object,java.util.List,java.lang.String,java.lang.StringBuilder)>(r3, r2, $r9, r1);

        return r1;

     label11:
        $z0 = r3 instanceof org.jdom2.Element;

        if $z0 == 0 goto label13;

        $r6 = (org.jdom2.Element) r3;

        $z0 = $r4 instanceof org.jdom2.Element;

        if $z0 == 0 goto label12;

        r10 = (org.jdom2.Element) $r4;

        $r9 = virtualinvoke $r6.<org.jdom2.Element: java.lang.String getName()>();

        $r7 = virtualinvoke $r6.<org.jdom2.Element: org.jdom2.Namespace getNamespace()>();

        r2 = virtualinvoke r10.<org.jdom2.Element: java.util.List getChildren(java.lang.String,org.jdom2.Namespace)>($r9, $r7);

     label12:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*[local-name() = \'");

        $r9 = virtualinvoke $r6.<org.jdom2.Element: java.lang.String getName()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' and namespace-uri() = \'");

        $r9 = virtualinvoke $r6.<org.jdom2.Element: java.lang.String getNamespaceURI()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\']");

        $r9 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        r1 = staticinvoke <org.jdom2.xpath.XPathHelper: java.lang.StringBuilder getPositionPath(java.lang.Object,java.util.List,java.lang.String,java.lang.StringBuilder)>(r3, r2, $r9, r1);

        return r1;

     label13:
        if $r4 != null goto label15;

        r2 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r0);

     label14:
        r1 = staticinvoke <org.jdom2.xpath.XPathHelper: java.lang.StringBuilder getPositionPath(java.lang.Object,java.util.List,java.lang.String,java.lang.StringBuilder)>(r3, r2, "node()", r1);

        return r1;

     label15:
        r2 = interfaceinvoke $r4.<org.jdom2.Parent: java.util.List getContent()>();

        goto label14;

     label16:
        $z0 = $r0 instanceof org.jdom2.Attribute;

        if $z0 == 0 goto label18;

        r12 = (org.jdom2.Attribute) $r0;

        $r7 = virtualinvoke r12.<org.jdom2.Attribute: org.jdom2.Namespace getNamespace()>();

        $r8 = <org.jdom2.Namespace: org.jdom2.Namespace NO_NAMESPACE>;

        if $r7 != $r8 goto label17;

        $r11 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r9 = virtualinvoke r12.<org.jdom2.Attribute: java.lang.String getName()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        return r1;

     label17:
        $r11 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@*[local-name() = \'");

        $r9 = virtualinvoke r12.<org.jdom2.Attribute: java.lang.String getName()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' and namespace-uri() = \'");

        $r9 = virtualinvoke r12.<org.jdom2.Attribute: java.lang.String getNamespaceURI()>();

        $r11 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\']");

     label18:
        return r1;
    }
    private static int locate(org.jdom2.Parent, java.util.List)
    {
        org.jdom2.Parent $r0;
        java.util.List r1;
        int $i0;
        java.lang.Object $r2;

        $r0 := @parameter0: org.jdom2.Parent;

        r1 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

     label1:
        $i0 = $i0 + -1;

        if $i0 < 0 goto label2;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i0);

        if $r0 != $r2 goto label1;

        return $i0;

     label2:
        return -1;
    }
