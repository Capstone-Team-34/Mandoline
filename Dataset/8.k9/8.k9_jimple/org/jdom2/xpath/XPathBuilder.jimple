org.jdom2.xpath.XPathBuilder extends java.lang.Object
private final java.lang.String expression
private final org.jdom2.filter.Filter filter
private java.util.Map namespaces
private java.util.Map variables
    public void <init>(java.lang.String, org.jdom2.filter.Filter)
    {
        org.jdom2.xpath.XPathBuilder r0;
        java.lang.String $r1;
        org.jdom2.filter.Filter r2;
        java.lang.NullPointerException $r3;

        r0 := @this: org.jdom2.xpath.XPathBuilder;

        $r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.jdom2.filter.Filter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null expression");

        throw $r3;

     label1:
        if r2 != null goto label2;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null filter");

        throw $r3;

     label2:
        r0.<org.jdom2.xpath.XPathBuilder: org.jdom2.filter.Filter filter> = r2;

        r0.<org.jdom2.xpath.XPathBuilder: java.lang.String expression> = $r1;

        return;
    }
    public org.jdom2.xpath.XPathExpression compileWith(org.jdom2.xpath.XPathFactory)
    {
        org.jdom2.xpath.XPathBuilder r0;
        org.jdom2.xpath.XPathFactory $r1;
        java.util.Map $r2, $r7;
        java.lang.String $r3;
        org.jdom2.filter.Filter $r4;
        org.jdom2.Namespace[] $r5;
        org.jdom2.xpath.XPathExpression $r6;
        java.util.Collection $r8;
        int $i0;
        java.lang.Object[] $r9;

        r0 := @this: org.jdom2.xpath.XPathBuilder;

        $r1 := @parameter0: org.jdom2.xpath.XPathFactory;

        $r2 = r0.<org.jdom2.xpath.XPathBuilder: java.util.Map namespaces>;

        if $r2 != null goto label1;

        $r3 = r0.<org.jdom2.xpath.XPathBuilder: java.lang.String expression>;

        $r4 = r0.<org.jdom2.xpath.XPathBuilder: org.jdom2.filter.Filter filter>;

        $r2 = r0.<org.jdom2.xpath.XPathBuilder: java.util.Map variables>;

        $r5 = newarray (org.jdom2.Namespace)[0];

        $r6 = virtualinvoke $r1.<org.jdom2.xpath.XPathFactory: org.jdom2.xpath.XPathExpression compile(java.lang.String,org.jdom2.filter.Filter,java.util.Map,org.jdom2.Namespace[])>($r3, $r4, $r2, $r5);

        return $r6;

     label1:
        $r3 = r0.<org.jdom2.xpath.XPathBuilder: java.lang.String expression>;

        $r4 = r0.<org.jdom2.xpath.XPathBuilder: org.jdom2.filter.Filter filter>;

        $r2 = r0.<org.jdom2.xpath.XPathBuilder: java.util.Map variables>;

        $r7 = r0.<org.jdom2.xpath.XPathBuilder: java.util.Map namespaces>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Collection values()>();

        $r7 = r0.<org.jdom2.xpath.XPathBuilder: java.util.Map namespaces>;

        $i0 = interfaceinvoke $r7.<java.util.Map: int size()>();

        $r5 = newarray (org.jdom2.Namespace)[$i0];

        $r9 = interfaceinvoke $r8.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r5 = (org.jdom2.Namespace[]) $r9;

        $r6 = virtualinvoke $r1.<org.jdom2.xpath.XPathFactory: org.jdom2.xpath.XPathExpression compile(java.lang.String,org.jdom2.filter.Filter,java.util.Map,org.jdom2.Namespace[])>($r3, $r4, $r2, $r5);

        return $r6;
    }
    public java.lang.String getExpression()
    {
        org.jdom2.xpath.XPathBuilder r0;
        java.lang.String r1;

        r0 := @this: org.jdom2.xpath.XPathBuilder;

        r1 = r0.<org.jdom2.xpath.XPathBuilder: java.lang.String expression>;

        return r1;
    }
    public org.jdom2.filter.Filter getFilter()
    {
        org.jdom2.xpath.XPathBuilder r0;
        org.jdom2.filter.Filter r1;

        r0 := @this: org.jdom2.xpath.XPathBuilder;

        r1 = r0.<org.jdom2.xpath.XPathBuilder: org.jdom2.filter.Filter filter>;

        return r1;
    }
    public org.jdom2.Namespace getNamespace(java.lang.String)
    {
        org.jdom2.xpath.XPathBuilder r0;
        java.lang.String $r1, $r3;
        java.lang.NullPointerException $r2;
        boolean $z0;
        java.util.Map $r4;
        java.lang.Object $r5;
        org.jdom2.Namespace $r6;

        r0 := @this: org.jdom2.xpath.XPathBuilder;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null prefix");

        throw $r2;

     label1:
        $r3 = "";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $r6 = <org.jdom2.Namespace: org.jdom2.Namespace NO_NAMESPACE>;

        return $r6;

     label2:
        $r4 = r0.<org.jdom2.xpath.XPathBuilder: java.util.Map namespaces>;

        if $r4 != null goto label3;

        return null;

     label3:
        $r4 = r0.<org.jdom2.xpath.XPathBuilder: java.util.Map namespaces>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (org.jdom2.Namespace) $r5;

        return $r6;
    }
    public java.lang.Object getVariable(java.lang.String)
    {
        org.jdom2.xpath.XPathBuilder r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.lang.NullPointerException $r3;
        java.util.Map $r4;

        r0 := @this: org.jdom2.xpath.XPathBuilder;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null qname");

        throw $r3;

     label1:
        $r4 = r0.<org.jdom2.xpath.XPathBuilder: java.util.Map variables>;

        if $r4 != null goto label2;

        return null;

     label2:
        $r4 = r0.<org.jdom2.xpath.XPathBuilder: java.util.Map variables>;

        $r2 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        return $r2;
    }
    public boolean setNamespace(java.lang.String, java.lang.String)
    {
        org.jdom2.xpath.XPathBuilder r0;
        java.lang.String $r1, $r2;
        java.lang.NullPointerException $r3;
        org.jdom2.Namespace $r4;
        boolean $z0;

        r0 := @this: org.jdom2.xpath.XPathBuilder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null prefix");

        throw $r3;

     label1:
        if $r2 != null goto label2;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null URI");

        throw $r3;

     label2:
        $r4 = staticinvoke <org.jdom2.Namespace: org.jdom2.Namespace getNamespace(java.lang.String,java.lang.String)>($r1, $r2);

        $z0 = virtualinvoke r0.<org.jdom2.xpath.XPathBuilder: boolean setNamespace(org.jdom2.Namespace)>($r4);

        return $z0;
    }
    public boolean setNamespace(org.jdom2.Namespace)
    {
        org.jdom2.xpath.XPathBuilder r0;
        org.jdom2.Namespace $r1, $r5;
        java.lang.NullPointerException $r2;
        java.lang.String $r3, $r4;
        boolean $z0;
        java.lang.IllegalArgumentException $r6;
        java.util.Map $r7;
        java.util.HashMap $r8;
        java.lang.Object $r9;

        r0 := @this: org.jdom2.xpath.XPathBuilder;

        $r1 := @parameter0: org.jdom2.Namespace;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null Namespace");

        throw $r2;

     label1:
        $r3 = "";

        $r4 = virtualinvoke $r1.<org.jdom2.Namespace: java.lang.String getPrefix()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r5 = <org.jdom2.Namespace: org.jdom2.Namespace NO_NAMESPACE>;

        if $r5 == $r1 goto label4;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot set a Namespace URI in XPath for the \"\" prefix.");

        throw $r6;

     label2:
        $r7 = r0.<org.jdom2.xpath.XPathBuilder: java.util.Map namespaces>;

        if $r7 != null goto label3;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r0.<org.jdom2.xpath.XPathBuilder: java.util.Map namespaces> = $r8;

     label3:
        $r7 = r0.<org.jdom2.xpath.XPathBuilder: java.util.Map namespaces>;

        $r3 = virtualinvoke $r1.<org.jdom2.Namespace: java.lang.String getPrefix()>();

        $r9 = interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r1);

        if $r9 != null goto label4;

        return 1;

     label4:
        return 0;
    }
    public boolean setNamespaces(java.util.Collection)
    {
        org.jdom2.xpath.XPathBuilder r0;
        java.util.Collection r1;
        java.lang.NullPointerException $r2;
        boolean z0, $z1;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        org.jdom2.Namespace r5;

        r0 := @this: org.jdom2.xpath.XPathBuilder;

        r1 := @parameter0: java.util.Collection;

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null namespaces Collection");

        throw $r2;

     label1:
        z0 = 0;

        $r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.jdom2.Namespace) $r4;

        $z1 = virtualinvoke r0.<org.jdom2.xpath.XPathBuilder: boolean setNamespace(org.jdom2.Namespace)>(r5);

        if $z1 == 0 goto label2;

        z0 = 1;

        goto label2;

     label3:
        return z0;
    }
    public boolean setVariable(java.lang.String, java.lang.Object)
    {
        org.jdom2.xpath.XPathBuilder r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.lang.NullPointerException $r3;
        java.util.Map $r4;
        java.util.HashMap $r5;

        r0 := @this: org.jdom2.xpath.XPathBuilder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        if $r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null variable name");

        throw $r3;

     label1:
        $r4 = r0.<org.jdom2.xpath.XPathBuilder: java.util.Map variables>;

        if $r4 != null goto label2;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<org.jdom2.xpath.XPathBuilder: java.util.Map variables> = $r5;

     label2:
        $r4 = r0.<org.jdom2.xpath.XPathBuilder: java.util.Map variables>;

        $r2 = interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        if $r2 != null goto label3;

        return 1;

     label3:
        return 0;
    }
