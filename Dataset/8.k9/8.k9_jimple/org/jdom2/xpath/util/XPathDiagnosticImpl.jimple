org.jdom2.xpath.util.XPathDiagnosticImpl extends java.lang.Object implements org.jdom2.xpath.XPathDiagnostic
private final java.lang.Object dcontext
private final java.util.List dfiltered
private final boolean dfirstonly
private final java.util.List draw
private final java.util.List dresult
private final org.jdom2.xpath.XPathExpression dxpath
    public void <init>(java.lang.Object, org.jdom2.xpath.XPathExpression, java.util.List, boolean)
    {
        org.jdom2.xpath.util.XPathDiagnosticImpl r0;
        java.lang.Object $r1, $r9, $r10;
        org.jdom2.xpath.XPathExpression r2;
        java.util.List r3;
        boolean $z0, $z1;
        java.util.ArrayList r4, r5, r6;
        int $i0;
        org.jdom2.filter.Filter $r7;
        java.util.Iterator $r8;

        r0 := @this: org.jdom2.xpath.util.XPathDiagnosticImpl;

        $r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.jdom2.xpath.XPathExpression;

        r3 := @parameter2: java.util.List;

        $z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        r5 = new java.util.ArrayList;

        specialinvoke r5.<java.util.ArrayList: void <init>(int)>($i0);

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>(int)>($i0);

        r6 = new java.util.ArrayList;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $r7 = interfaceinvoke r2.<org.jdom2.xpath.XPathExpression: org.jdom2.filter.Filter getFilter()>();

        $r8 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r10 = interfaceinvoke $r7.<org.jdom2.filter.Filter: java.lang.Object filter(java.lang.Object)>($r9);

        if $r10 != null goto label2;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r9);

        goto label1;

     label2:
        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label1;

     label3:
        r0.<org.jdom2.xpath.util.XPathDiagnosticImpl: java.lang.Object dcontext> = $r1;

        r0.<org.jdom2.xpath.util.XPathDiagnosticImpl: org.jdom2.xpath.XPathExpression dxpath> = r2;

        r0.<org.jdom2.xpath.util.XPathDiagnosticImpl: boolean dfirstonly> = $z0;

        r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r4);

        r0.<org.jdom2.xpath.util.XPathDiagnosticImpl: java.util.List dfiltered> = r3;

        r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r5);

        r0.<org.jdom2.xpath.util.XPathDiagnosticImpl: java.util.List draw> = r3;

        r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r6);

        r0.<org.jdom2.xpath.util.XPathDiagnosticImpl: java.util.List dresult> = r3;

        return;
    }
    public java.lang.Object getContext()
    {
        org.jdom2.xpath.util.XPathDiagnosticImpl r0;
        java.lang.Object r1;

        r0 := @this: org.jdom2.xpath.util.XPathDiagnosticImpl;

        r1 = r0.<org.jdom2.xpath.util.XPathDiagnosticImpl: java.lang.Object dcontext>;

        return r1;
    }
    public java.util.List getFilteredResults()
    {
        org.jdom2.xpath.util.XPathDiagnosticImpl r0;
        java.util.List r1;

        r0 := @this: org.jdom2.xpath.util.XPathDiagnosticImpl;

        r1 = r0.<org.jdom2.xpath.util.XPathDiagnosticImpl: java.util.List dfiltered>;

        return r1;
    }
    public java.util.List getRawResults()
    {
        org.jdom2.xpath.util.XPathDiagnosticImpl r0;
        java.util.List r1;

        r0 := @this: org.jdom2.xpath.util.XPathDiagnosticImpl;

        r1 = r0.<org.jdom2.xpath.util.XPathDiagnosticImpl: java.util.List draw>;

        return r1;
    }
    public java.util.List getResult()
    {
        org.jdom2.xpath.util.XPathDiagnosticImpl r0;
        java.util.List r1;

        r0 := @this: org.jdom2.xpath.util.XPathDiagnosticImpl;

        r1 = r0.<org.jdom2.xpath.util.XPathDiagnosticImpl: java.util.List dresult>;

        return r1;
    }
    public org.jdom2.xpath.XPathExpression getXPathExpression()
    {
        org.jdom2.xpath.util.XPathDiagnosticImpl r0;
        org.jdom2.xpath.XPathExpression r1;

        r0 := @this: org.jdom2.xpath.util.XPathDiagnosticImpl;

        r1 = r0.<org.jdom2.xpath.util.XPathDiagnosticImpl: org.jdom2.xpath.XPathExpression dxpath>;

        return r1;
    }
    public boolean isFirstOnly()
    {
        org.jdom2.xpath.util.XPathDiagnosticImpl r0;
        boolean z0;

        r0 := @this: org.jdom2.xpath.util.XPathDiagnosticImpl;

        z0 = r0.<org.jdom2.xpath.util.XPathDiagnosticImpl: boolean dfirstonly>;

        return z0;
    }
    public java.lang.String toString()
    {
        org.jdom2.xpath.util.XPathDiagnosticImpl r0;
        java.lang.Object[] $r1;
        org.jdom2.xpath.XPathExpression $r2;
        java.lang.String $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Class $r5;
        java.util.List $r6;
        int $i0;
        java.lang.Integer $r7;

        r0 := @this: org.jdom2.xpath.util.XPathDiagnosticImpl;

        $r1 = newarray (java.lang.Object)[6];

        $r2 = r0.<org.jdom2.xpath.util.XPathDiagnosticImpl: org.jdom2.xpath.XPathExpression dxpath>;

        $r3 = interfaceinvoke $r2.<org.jdom2.xpath.XPathExpression: java.lang.String getExpression()>();

        $r1[0] = $r3;

        $z0 = r0.<org.jdom2.xpath.util.XPathDiagnosticImpl: boolean dfirstonly>;

        if $z0 == 0 goto label2;

        $r3 = "first";

     label1:
        $r1[1] = $r3;

        $r4 = r0.<org.jdom2.xpath.util.XPathDiagnosticImpl: java.lang.Object dcontext>;

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r1[2] = $r3;

        $r6 = r0.<org.jdom2.xpath.util.XPathDiagnosticImpl: java.util.List draw>;

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[3] = $r7;

        $r6 = r0.<org.jdom2.xpath.util.XPathDiagnosticImpl: java.util.List dfiltered>;

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[4] = $r7;

        $r6 = r0.<org.jdom2.xpath.util.XPathDiagnosticImpl: java.util.List dresult>;

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[5] = $r7;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[XPathDiagnostic: \'%s\' evaluated (%s) against %s produced  raw=%d discarded=%d returned=%d]", $r1);

        return $r3;

     label2:
        $r3 = "all";

        goto label1;
    }
