org.jdom2.xpath.util.AbstractXPathCompiled$NamespaceComparator extends java.lang.Object implements java.util.Comparator
    private void <init>()
    {
        org.jdom2.xpath.util.AbstractXPathCompiled$NamespaceComparator r0;

        r0 := @this: org.jdom2.xpath.util.AbstractXPathCompiled$NamespaceComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    void <init>(org.jdom2.xpath.util.AbstractXPathCompiled$1)
    {
        org.jdom2.xpath.util.AbstractXPathCompiled$NamespaceComparator r0;
        org.jdom2.xpath.util.AbstractXPathCompiled$1 $r1;

        r0 := @this: org.jdom2.xpath.util.AbstractXPathCompiled$NamespaceComparator;

        $r1 := @parameter0: org.jdom2.xpath.util.AbstractXPathCompiled$1;

        specialinvoke r0.<org.jdom2.xpath.util.AbstractXPathCompiled$NamespaceComparator: void <init>()>();

        return;
    }
    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.jdom2.xpath.util.AbstractXPathCompiled$NamespaceComparator r0;
        int $i0;
        java.lang.Object $r1, $r2;
        org.jdom2.Namespace $r3, $r4;

        r0 := @this: org.jdom2.xpath.util.AbstractXPathCompiled$NamespaceComparator;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (org.jdom2.Namespace) $r1;

        $r4 = (org.jdom2.Namespace) $r2;

        $i0 = virtualinvoke r0.<org.jdom2.xpath.util.AbstractXPathCompiled$NamespaceComparator: int compare(org.jdom2.Namespace,org.jdom2.Namespace)>($r3, $r4);

        return $i0;
    }
    public int compare(org.jdom2.Namespace, org.jdom2.Namespace)
    {
        org.jdom2.xpath.util.AbstractXPathCompiled$NamespaceComparator r0;
        org.jdom2.Namespace $r1, $r2;
        java.lang.String $r3, $r4;
        int $i0;

        r0 := @this: org.jdom2.xpath.util.AbstractXPathCompiled$NamespaceComparator;

        $r1 := @parameter0: org.jdom2.Namespace;

        $r2 := @parameter1: org.jdom2.Namespace;

        $r3 = virtualinvoke $r1.<org.jdom2.Namespace: java.lang.String getPrefix()>();

        $r4 = virtualinvoke $r2.<org.jdom2.Namespace: java.lang.String getPrefix()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int compareTo(java.lang.String)>($r4);

        return $i0;
    }
