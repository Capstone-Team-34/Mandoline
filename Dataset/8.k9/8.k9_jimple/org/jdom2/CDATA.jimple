org.jdom2.CDATA extends org.jdom2.Text
private static final long serialVersionUID
    protected void <init>()
    {
        org.jdom2.CDATA r0;
        org.jdom2.Content$CType $r1;

        r0 := @this: org.jdom2.CDATA;

        $r1 = <org.jdom2.Content$CType: org.jdom2.Content$CType CDATA>;

        specialinvoke r0.<org.jdom2.Text: void <init>(org.jdom2.Content$CType)>($r1);

        return;
    }
    public void <init>(java.lang.String)
    {
        org.jdom2.CDATA r0;
        java.lang.String $r1;
        org.jdom2.Content$CType $r2;

        r0 := @this: org.jdom2.CDATA;

        $r1 := @parameter0: java.lang.String;

        $r2 = <org.jdom2.Content$CType: org.jdom2.Content$CType CDATA>;

        specialinvoke r0.<org.jdom2.Text: void <init>(org.jdom2.Content$CType)>($r2);

        virtualinvoke r0.<org.jdom2.CDATA: org.jdom2.CDATA setText(java.lang.String)>($r1);

        return;
    }
    public void append(java.lang.String)
    {
        org.jdom2.CDATA r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;
        org.jdom2.IllegalDataException $r4;
        java.lang.StringBuilder $r5;

        r0 := @this: org.jdom2.CDATA;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label5;

        $r2 = "";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<org.jdom2.CDATA: java.lang.String value>;

        if $r2 != "" goto label3;

        $r2 = $r1;

     label2:
        $r3 = staticinvoke <org.jdom2.Verifier: java.lang.String checkCDATASection(java.lang.String)>($r2);

        if $r3 == null goto label4;

        $r4 = new org.jdom2.IllegalDataException;

        specialinvoke $r4.<org.jdom2.IllegalDataException: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r1, "CDATA section", $r3);

        throw $r4;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.jdom2.CDATA: java.lang.String value>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label4:
        r0.<org.jdom2.CDATA: java.lang.String value> = $r2;

     label5:
        return;
    }
    public void append(org.jdom2.Text)
    {
        org.jdom2.CDATA r0;
        org.jdom2.Text $r1;
        java.lang.String $r2;

        r0 := @this: org.jdom2.CDATA;

        $r1 := @parameter0: org.jdom2.Text;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke $r1.<org.jdom2.Text: java.lang.String getText()>();

        virtualinvoke r0.<org.jdom2.CDATA: void append(java.lang.String)>($r2);

        return;
    }
    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jdom2.CDATA r0;

        r0 := @this: org.jdom2.CDATA;

        r0 = virtualinvoke r0.<org.jdom2.CDATA: org.jdom2.CDATA clone()>();

        return r0;
    }
    public org.jdom2.CDATA clone()
    {
        org.jdom2.CDATA r0;
        org.jdom2.Text $r1;

        r0 := @this: org.jdom2.CDATA;

        $r1 = specialinvoke r0.<org.jdom2.Text: org.jdom2.Text clone()>();

        r0 = (org.jdom2.CDATA) $r1;

        return r0;
    }
    public volatile org.jdom2.CloneBase clone()
    {
        org.jdom2.CDATA r0;

        r0 := @this: org.jdom2.CDATA;

        r0 = virtualinvoke r0.<org.jdom2.CDATA: org.jdom2.CDATA clone()>();

        return r0;
    }
    public volatile org.jdom2.Content clone()
    {
        org.jdom2.CDATA r0;

        r0 := @this: org.jdom2.CDATA;

        r0 = virtualinvoke r0.<org.jdom2.CDATA: org.jdom2.CDATA clone()>();

        return r0;
    }
    public volatile org.jdom2.Text clone()
    {
        org.jdom2.CDATA r0;

        r0 := @this: org.jdom2.CDATA;

        r0 = virtualinvoke r0.<org.jdom2.CDATA: org.jdom2.CDATA clone()>();

        return r0;
    }
    public org.jdom2.CDATA detach()
    {
        org.jdom2.CDATA r0;
        org.jdom2.Text $r1;

        r0 := @this: org.jdom2.CDATA;

        $r1 = specialinvoke r0.<org.jdom2.Text: org.jdom2.Text detach()>();

        r0 = (org.jdom2.CDATA) $r1;

        return r0;
    }
    public volatile org.jdom2.Content detach()
    {
        org.jdom2.CDATA r0;

        r0 := @this: org.jdom2.CDATA;

        r0 = virtualinvoke r0.<org.jdom2.CDATA: org.jdom2.CDATA detach()>();

        return r0;
    }
    public volatile org.jdom2.Text detach()
    {
        org.jdom2.CDATA r0;

        r0 := @this: org.jdom2.CDATA;

        r0 = virtualinvoke r0.<org.jdom2.CDATA: org.jdom2.CDATA detach()>();

        return r0;
    }
    protected org.jdom2.CDATA setParent(org.jdom2.Parent)
    {
        org.jdom2.CDATA r0;
        org.jdom2.Parent $r1;
        org.jdom2.Text $r2;

        r0 := @this: org.jdom2.CDATA;

        $r1 := @parameter0: org.jdom2.Parent;

        $r2 = specialinvoke r0.<org.jdom2.Text: org.jdom2.Text setParent(org.jdom2.Parent)>($r1);

        r0 = (org.jdom2.CDATA) $r2;

        return r0;
    }
    protected volatile org.jdom2.Content setParent(org.jdom2.Parent)
    {
        org.jdom2.CDATA r0;
        org.jdom2.Parent $r1;

        r0 := @this: org.jdom2.CDATA;

        $r1 := @parameter0: org.jdom2.Parent;

        r0 = virtualinvoke r0.<org.jdom2.CDATA: org.jdom2.CDATA setParent(org.jdom2.Parent)>($r1);

        return r0;
    }
    protected volatile org.jdom2.Text setParent(org.jdom2.Parent)
    {
        org.jdom2.CDATA r0;
        org.jdom2.Parent $r1;

        r0 := @this: org.jdom2.CDATA;

        $r1 := @parameter0: org.jdom2.Parent;

        r0 = virtualinvoke r0.<org.jdom2.CDATA: org.jdom2.CDATA setParent(org.jdom2.Parent)>($r1);

        return r0;
    }
    public org.jdom2.CDATA setText(java.lang.String)
    {
        org.jdom2.CDATA r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        org.jdom2.IllegalDataException $r3;

        r0 := @this: org.jdom2.CDATA;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label1;

        $r2 = "";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

     label1:
        r0.<org.jdom2.CDATA: java.lang.String value> = "";

        return r0;

     label2:
        $r2 = staticinvoke <org.jdom2.Verifier: java.lang.String checkCDATASection(java.lang.String)>($r1);

        if $r2 == null goto label3;

        $r3 = new org.jdom2.IllegalDataException;

        specialinvoke $r3.<org.jdom2.IllegalDataException: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r1, "CDATA section", $r2);

        throw $r3;

     label3:
        r0.<org.jdom2.CDATA: java.lang.String value> = $r1;

        return r0;
    }
    public volatile org.jdom2.Text setText(java.lang.String)
    {
        org.jdom2.CDATA r0;
        java.lang.String $r1;

        r0 := @this: org.jdom2.CDATA;

        $r1 := @parameter0: java.lang.String;

        r0 = virtualinvoke r0.<org.jdom2.CDATA: org.jdom2.CDATA setText(java.lang.String)>($r1);

        return r0;
    }
    public java.lang.String toString()
    {
        org.jdom2.CDATA r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: org.jdom2.CDATA;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(64);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[CDATA: ");

        $r2 = virtualinvoke r0.<org.jdom2.CDATA: java.lang.String getText()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
