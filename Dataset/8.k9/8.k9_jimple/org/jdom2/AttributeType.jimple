org.jdom2.AttributeType extends java.lang.Enum
private static final org.jdom2.AttributeType[] $VALUES
public static final enum org.jdom2.AttributeType CDATA
public static final enum org.jdom2.AttributeType ENTITIES
public static final enum org.jdom2.AttributeType ENTITY
public static final enum org.jdom2.AttributeType ENUMERATION
public static final enum org.jdom2.AttributeType ID
public static final enum org.jdom2.AttributeType IDREF
public static final enum org.jdom2.AttributeType IDREFS
public static final enum org.jdom2.AttributeType NMTOKEN
public static final enum org.jdom2.AttributeType NMTOKENS
public static final enum org.jdom2.AttributeType NOTATION
public static final enum org.jdom2.AttributeType UNDECLARED
    static void <clinit>()
    {
        org.jdom2.AttributeType $r0;
        org.jdom2.AttributeType[] $r1;

        $r0 = new org.jdom2.AttributeType;

        specialinvoke $r0.<org.jdom2.AttributeType: void <init>(java.lang.String,int)>("UNDECLARED", 0);

        <org.jdom2.AttributeType: org.jdom2.AttributeType UNDECLARED> = $r0;

        $r0 = new org.jdom2.AttributeType;

        specialinvoke $r0.<org.jdom2.AttributeType: void <init>(java.lang.String,int)>("CDATA", 1);

        <org.jdom2.AttributeType: org.jdom2.AttributeType CDATA> = $r0;

        $r0 = new org.jdom2.AttributeType;

        specialinvoke $r0.<org.jdom2.AttributeType: void <init>(java.lang.String,int)>("ID", 2);

        <org.jdom2.AttributeType: org.jdom2.AttributeType ID> = $r0;

        $r0 = new org.jdom2.AttributeType;

        specialinvoke $r0.<org.jdom2.AttributeType: void <init>(java.lang.String,int)>("IDREF", 3);

        <org.jdom2.AttributeType: org.jdom2.AttributeType IDREF> = $r0;

        $r0 = new org.jdom2.AttributeType;

        specialinvoke $r0.<org.jdom2.AttributeType: void <init>(java.lang.String,int)>("IDREFS", 4);

        <org.jdom2.AttributeType: org.jdom2.AttributeType IDREFS> = $r0;

        $r0 = new org.jdom2.AttributeType;

        specialinvoke $r0.<org.jdom2.AttributeType: void <init>(java.lang.String,int)>("ENTITY", 5);

        <org.jdom2.AttributeType: org.jdom2.AttributeType ENTITY> = $r0;

        $r0 = new org.jdom2.AttributeType;

        specialinvoke $r0.<org.jdom2.AttributeType: void <init>(java.lang.String,int)>("ENTITIES", 6);

        <org.jdom2.AttributeType: org.jdom2.AttributeType ENTITIES> = $r0;

        $r0 = new org.jdom2.AttributeType;

        specialinvoke $r0.<org.jdom2.AttributeType: void <init>(java.lang.String,int)>("NMTOKEN", 7);

        <org.jdom2.AttributeType: org.jdom2.AttributeType NMTOKEN> = $r0;

        $r0 = new org.jdom2.AttributeType;

        specialinvoke $r0.<org.jdom2.AttributeType: void <init>(java.lang.String,int)>("NMTOKENS", 8);

        <org.jdom2.AttributeType: org.jdom2.AttributeType NMTOKENS> = $r0;

        $r0 = new org.jdom2.AttributeType;

        specialinvoke $r0.<org.jdom2.AttributeType: void <init>(java.lang.String,int)>("NOTATION", 9);

        <org.jdom2.AttributeType: org.jdom2.AttributeType NOTATION> = $r0;

        $r0 = new org.jdom2.AttributeType;

        specialinvoke $r0.<org.jdom2.AttributeType: void <init>(java.lang.String,int)>("ENUMERATION", 10);

        <org.jdom2.AttributeType: org.jdom2.AttributeType ENUMERATION> = $r0;

        $r1 = newarray (org.jdom2.AttributeType)[11];

        $r0 = <org.jdom2.AttributeType: org.jdom2.AttributeType UNDECLARED>;

        $r1[0] = $r0;

        $r0 = <org.jdom2.AttributeType: org.jdom2.AttributeType CDATA>;

        $r1[1] = $r0;

        $r0 = <org.jdom2.AttributeType: org.jdom2.AttributeType ID>;

        $r1[2] = $r0;

        $r0 = <org.jdom2.AttributeType: org.jdom2.AttributeType IDREF>;

        $r1[3] = $r0;

        $r0 = <org.jdom2.AttributeType: org.jdom2.AttributeType IDREFS>;

        $r1[4] = $r0;

        $r0 = <org.jdom2.AttributeType: org.jdom2.AttributeType ENTITY>;

        $r1[5] = $r0;

        $r0 = <org.jdom2.AttributeType: org.jdom2.AttributeType ENTITIES>;

        $r1[6] = $r0;

        $r0 = <org.jdom2.AttributeType: org.jdom2.AttributeType NMTOKEN>;

        $r1[7] = $r0;

        $r0 = <org.jdom2.AttributeType: org.jdom2.AttributeType NMTOKENS>;

        $r1[8] = $r0;

        $r0 = <org.jdom2.AttributeType: org.jdom2.AttributeType NOTATION>;

        $r1[9] = $r0;

        $r0 = <org.jdom2.AttributeType: org.jdom2.AttributeType ENUMERATION>;

        $r1[10] = $r0;

        <org.jdom2.AttributeType: org.jdom2.AttributeType[] $VALUES> = $r1;

        return;
    }
    private void <init>(java.lang.String, int)
    {
        org.jdom2.AttributeType r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: org.jdom2.AttributeType;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }
    public static final org.jdom2.AttributeType byIndex(int)
    {
        int $i0, $i1;
        org.jdom2.IllegalDataException $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        org.jdom2.AttributeType[] $r3;
        org.jdom2.AttributeType $r4;

        $i0 := @parameter0: int;

        if $i0 >= 0 goto label1;

        $r0 = new org.jdom2.IllegalDataException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such AttributeType ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<org.jdom2.IllegalDataException: void <init>(java.lang.String)>($r2);

        throw $r0;

     label1:
        $r3 = staticinvoke <org.jdom2.AttributeType: org.jdom2.AttributeType[] values()>();

        $i1 = lengthof $r3;

        if $i0 < $i1 goto label2;

        $r0 = new org.jdom2.IllegalDataException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such AttributeType ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", max is ");

        $r3 = staticinvoke <org.jdom2.AttributeType: org.jdom2.AttributeType[] values()>();

        $i0 = lengthof $r3;

        $i0 = $i0 + -1;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<org.jdom2.IllegalDataException: void <init>(java.lang.String)>($r2);

        throw $r0;

     label2:
        $r3 = staticinvoke <org.jdom2.AttributeType: org.jdom2.AttributeType[] values()>();

        $r4 = $r3[$i0];

        return $r4;
    }
    public static final org.jdom2.AttributeType getAttributeType(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.IllegalArgumentException r1;
        org.jdom2.AttributeType $r2;
        int $i0;
        char $c1;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        $r2 = <org.jdom2.AttributeType: org.jdom2.AttributeType UNDECLARED>;

        return $r2;

     label1:
        $r2 = staticinvoke <org.jdom2.AttributeType: org.jdom2.AttributeType valueOf(java.lang.String)>($r0);

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label4;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        if $c1 != 40 goto label4;

        $r2 = <org.jdom2.AttributeType: org.jdom2.AttributeType ENUMERATION>;

        return $r2;

     label4:
        $r2 = <org.jdom2.AttributeType: org.jdom2.AttributeType UNDECLARED>;

        return $r2;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }
    public static org.jdom2.AttributeType valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        org.jdom2.AttributeType $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/jdom2/AttributeType;", $r0);

        $r2 = (org.jdom2.AttributeType) $r1;

        return $r2;
    }
    public static org.jdom2.AttributeType[] values()
    {
        java.lang.Object $r0;
        org.jdom2.AttributeType[] $r1;

        $r1 = <org.jdom2.AttributeType: org.jdom2.AttributeType[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (org.jdom2.AttributeType[]) $r0;

        return $r1;
    }
