org.jdom2.internal.ReflectionConstructor extends java.lang.Object
    public void <init>()
    {
        org.jdom2.internal.ReflectionConstructor r0;

        r0 := @this: org.jdom2.internal.ReflectionConstructor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static final java.lang.Object construct(java.lang.String, java.lang.Class)
    {
        java.lang.String $r0, $r5;
        java.lang.Class r1, $r2;
        boolean $z0;
        java.lang.ClassCastException $r3;
        java.lang.StringBuilder $r4;
        java.lang.ClassNotFoundException r6;
        java.lang.IllegalArgumentException $r7;
        java.lang.Class[] $r8;
        java.lang.reflect.Constructor $r9;
        java.lang.Object[] $r10;
        java.lang.Object $r11;
        java.lang.NoSuchMethodException r12;
        java.lang.SecurityException r13;
        java.lang.IllegalStateException $r14;
        java.lang.IllegalAccessException r15;
        java.lang.InstantiationException r16;
        java.lang.reflect.InvocationTargetException r17;

        $r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

     label01:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0);

        $z0 = virtualinvoke r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r2);

     label02:
        if $z0 != 0 goto label06;

        $r3 = new java.lang.ClassCastException;

        $r4 = new java.lang.StringBuilder;

     label03:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Class \'");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is not assignable to \'");

        $r5 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.ClassCastException: void <init>(java.lang.String)>($r5);

     label04:
        throw $r3;

     label05:
        r6 := @caughtexception;

        $r7 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to locate class \'");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r0, r6);

        throw $r7;

     label06:
        $r8 = newarray (java.lang.Class)[0];

     label07:
        $r9 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r8);

     label08:
        $r10 = newarray (java.lang.Object)[0];

     label09:
        $r11 = virtualinvoke $r9.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r10);

        $r11 = virtualinvoke r1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r11);

     label10:
        return $r11;

     label11:
        r12 := @caughtexception;

        $r7 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to locate class no-arg constructor \'");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r0, r12);

        throw $r7;

     label12:
        r13 := @caughtexception;

        $r14 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to access class constructor \'");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r0, r13);

        throw $r14;

     label13:
        r15 := @caughtexception;

        $r14 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to access class constructor \'");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r0, r15);

        throw $r14;

     label14:
        r16 := @caughtexception;

        $r14 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to instantiate class \'");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r0, r16);

        throw $r14;

     label15:
        r17 := @caughtexception;

        $r14 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to call class constructor \'");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r0, r17);

        throw $r14;

        catch java.lang.ClassNotFoundException from label01 to label02 with label05;
        catch java.lang.ClassNotFoundException from label03 to label04 with label05;
        catch java.lang.NoSuchMethodException from label01 to label02 with label11;
        catch java.lang.NoSuchMethodException from label03 to label04 with label11;
        catch java.lang.SecurityException from label01 to label02 with label12;
        catch java.lang.SecurityException from label03 to label04 with label12;
        catch java.lang.IllegalAccessException from label01 to label02 with label13;
        catch java.lang.IllegalAccessException from label03 to label04 with label13;
        catch java.lang.InstantiationException from label01 to label02 with label14;
        catch java.lang.InstantiationException from label03 to label04 with label14;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label15;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label15;
        catch java.lang.ClassNotFoundException from label07 to label08 with label05;
        catch java.lang.ClassNotFoundException from label09 to label10 with label05;
        catch java.lang.NoSuchMethodException from label07 to label08 with label11;
        catch java.lang.NoSuchMethodException from label09 to label10 with label11;
        catch java.lang.SecurityException from label07 to label08 with label12;
        catch java.lang.SecurityException from label09 to label10 with label12;
        catch java.lang.IllegalAccessException from label07 to label08 with label13;
        catch java.lang.IllegalAccessException from label09 to label10 with label13;
        catch java.lang.InstantiationException from label07 to label08 with label14;
        catch java.lang.InstantiationException from label09 to label10 with label14;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label15;
        catch java.lang.reflect.InvocationTargetException from label09 to label10 with label15;
    }
