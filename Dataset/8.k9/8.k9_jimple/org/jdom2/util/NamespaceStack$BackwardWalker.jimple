org.jdom2.util.NamespaceStack$BackwardWalker extends java.lang.Object implements java.util.Iterator
int cursor
private final org.jdom2.Namespace[] namespaces
    public void <init>(org.jdom2.Namespace[])
    {
        org.jdom2.util.NamespaceStack$BackwardWalker r0;
        org.jdom2.Namespace[] $r1;
        int $i0;

        r0 := @this: org.jdom2.util.NamespaceStack$BackwardWalker;

        $r1 := @parameter0: org.jdom2.Namespace[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.jdom2.util.NamespaceStack$BackwardWalker: int cursor> = -1;

        r0.<org.jdom2.util.NamespaceStack$BackwardWalker: org.jdom2.Namespace[] namespaces> = $r1;

        $i0 = lengthof $r1;

        $i0 = $i0 + -1;

        r0.<org.jdom2.util.NamespaceStack$BackwardWalker: int cursor> = $i0;

        return;
    }
    public boolean hasNext()
    {
        org.jdom2.util.NamespaceStack$BackwardWalker r0;
        int $i0;

        r0 := @this: org.jdom2.util.NamespaceStack$BackwardWalker;

        $i0 = r0.<org.jdom2.util.NamespaceStack$BackwardWalker: int cursor>;

        if $i0 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public volatile java.lang.Object next()
    {
        org.jdom2.util.NamespaceStack$BackwardWalker r0;
        org.jdom2.Namespace $r1;

        r0 := @this: org.jdom2.util.NamespaceStack$BackwardWalker;

        $r1 = virtualinvoke r0.<org.jdom2.util.NamespaceStack$BackwardWalker: org.jdom2.Namespace next()>();

        return $r1;
    }
    public org.jdom2.Namespace next()
    {
        org.jdom2.util.NamespaceStack$BackwardWalker r0;
        int $i0, $i1;
        java.util.NoSuchElementException $r1;
        org.jdom2.Namespace[] $r2;
        org.jdom2.Namespace $r3;

        r0 := @this: org.jdom2.util.NamespaceStack$BackwardWalker;

        $i0 = r0.<org.jdom2.util.NamespaceStack$BackwardWalker: int cursor>;

        if $i0 >= 0 goto label1;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Cannot over-iterate...");

        throw $r1;

     label1:
        $r2 = r0.<org.jdom2.util.NamespaceStack$BackwardWalker: org.jdom2.Namespace[] namespaces>;

        $i1 = r0.<org.jdom2.util.NamespaceStack$BackwardWalker: int cursor>;

        $i0 = $i1 + -1;

        r0.<org.jdom2.util.NamespaceStack$BackwardWalker: int cursor> = $i0;

        $r3 = $r2[$i1];

        return $r3;
    }
    public void remove()
    {
        org.jdom2.util.NamespaceStack$BackwardWalker r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.jdom2.util.NamespaceStack$BackwardWalker;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot remove Namespaces from iterator");

        throw $r1;
    }
