org.jdom2.util.NamespaceStack$NamespaceIterable extends java.lang.Object implements java.lang.Iterable
private final boolean forward
private final org.jdom2.Namespace[] namespaces
    public void <init>(org.jdom2.Namespace[], boolean)
    {
        org.jdom2.util.NamespaceStack$NamespaceIterable r0;
        org.jdom2.Namespace[] $r1;
        boolean $z0;

        r0 := @this: org.jdom2.util.NamespaceStack$NamespaceIterable;

        $r1 := @parameter0: org.jdom2.Namespace[];

        $z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.jdom2.util.NamespaceStack$NamespaceIterable: boolean forward> = $z0;

        r0.<org.jdom2.util.NamespaceStack$NamespaceIterable: org.jdom2.Namespace[] namespaces> = $r1;

        return;
    }
    public java.util.Iterator iterator()
    {
        org.jdom2.util.NamespaceStack$NamespaceIterable r0;
        boolean $z0;
        org.jdom2.util.NamespaceStack$ForwardWalker $r1;
        org.jdom2.Namespace[] $r2;
        org.jdom2.util.NamespaceStack$BackwardWalker $r3;

        r0 := @this: org.jdom2.util.NamespaceStack$NamespaceIterable;

        $z0 = r0.<org.jdom2.util.NamespaceStack$NamespaceIterable: boolean forward>;

        if $z0 == 0 goto label1;

        $r1 = new org.jdom2.util.NamespaceStack$ForwardWalker;

        $r2 = r0.<org.jdom2.util.NamespaceStack$NamespaceIterable: org.jdom2.Namespace[] namespaces>;

        specialinvoke $r1.<org.jdom2.util.NamespaceStack$ForwardWalker: void <init>(org.jdom2.Namespace[])>($r2);

        return $r1;

     label1:
        $r3 = new org.jdom2.util.NamespaceStack$BackwardWalker;

        $r2 = r0.<org.jdom2.util.NamespaceStack$NamespaceIterable: org.jdom2.Namespace[] namespaces>;

        specialinvoke $r3.<org.jdom2.util.NamespaceStack$BackwardWalker: void <init>(org.jdom2.Namespace[])>($r2);

        return $r3;
    }
