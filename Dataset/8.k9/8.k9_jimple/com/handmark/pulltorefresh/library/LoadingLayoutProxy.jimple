com.handmark.pulltorefresh.library.LoadingLayoutProxy extends java.lang.Object implements com.handmark.pulltorefresh.library.ILoadingLayout
private final java.util.HashSet mLoadingLayouts
    void <init>()
    {
        com.handmark.pulltorefresh.library.LoadingLayoutProxy r0;
        java.util.HashSet $r1;

        r0 := @this: com.handmark.pulltorefresh.library.LoadingLayoutProxy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<com.handmark.pulltorefresh.library.LoadingLayoutProxy: java.util.HashSet mLoadingLayouts> = $r1;

        return;
    }
    public void addLayout(com.handmark.pulltorefresh.library.internal.LoadingLayout)
    {
        com.handmark.pulltorefresh.library.LoadingLayoutProxy r0;
        com.handmark.pulltorefresh.library.internal.LoadingLayout $r1;
        java.util.HashSet $r2;

        r0 := @this: com.handmark.pulltorefresh.library.LoadingLayoutProxy;

        $r1 := @parameter0: com.handmark.pulltorefresh.library.internal.LoadingLayout;

        if $r1 == null goto label1;

        $r2 = r0.<com.handmark.pulltorefresh.library.LoadingLayoutProxy: java.util.HashSet mLoadingLayouts>;

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>($r1);

     label1:
        return;
    }
    public void setLastUpdatedLabel(java.lang.CharSequence)
    {
        com.handmark.pulltorefresh.library.LoadingLayoutProxy r0;
        java.lang.CharSequence $r1;
        java.util.HashSet $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.handmark.pulltorefresh.library.internal.LoadingLayout r5;

        r0 := @this: com.handmark.pulltorefresh.library.LoadingLayoutProxy;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.handmark.pulltorefresh.library.LoadingLayoutProxy: java.util.HashSet mLoadingLayouts>;

        $r3 = virtualinvoke $r2.<java.util.HashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.handmark.pulltorefresh.library.internal.LoadingLayout) $r4;

        virtualinvoke r5.<com.handmark.pulltorefresh.library.internal.LoadingLayout: void setLastUpdatedLabel(java.lang.CharSequence)>($r1);

        goto label1;

     label2:
        return;
    }
    public void setLoadingDrawable(android.graphics.drawable.Drawable)
    {
        com.handmark.pulltorefresh.library.LoadingLayoutProxy r0;
        android.graphics.drawable.Drawable $r1;
        java.util.HashSet $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.handmark.pulltorefresh.library.internal.LoadingLayout r5;

        r0 := @this: com.handmark.pulltorefresh.library.LoadingLayoutProxy;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<com.handmark.pulltorefresh.library.LoadingLayoutProxy: java.util.HashSet mLoadingLayouts>;

        $r3 = virtualinvoke $r2.<java.util.HashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.handmark.pulltorefresh.library.internal.LoadingLayout) $r4;

        virtualinvoke r5.<com.handmark.pulltorefresh.library.internal.LoadingLayout: void setLoadingDrawable(android.graphics.drawable.Drawable)>($r1);

        goto label1;

     label2:
        return;
    }
    public void setPullLabel(java.lang.CharSequence)
    {
        com.handmark.pulltorefresh.library.LoadingLayoutProxy r0;
        java.lang.CharSequence $r1;
        java.util.HashSet $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.handmark.pulltorefresh.library.internal.LoadingLayout r5;

        r0 := @this: com.handmark.pulltorefresh.library.LoadingLayoutProxy;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.handmark.pulltorefresh.library.LoadingLayoutProxy: java.util.HashSet mLoadingLayouts>;

        $r3 = virtualinvoke $r2.<java.util.HashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.handmark.pulltorefresh.library.internal.LoadingLayout) $r4;

        virtualinvoke r5.<com.handmark.pulltorefresh.library.internal.LoadingLayout: void setPullLabel(java.lang.CharSequence)>($r1);

        goto label1;

     label2:
        return;
    }
    public void setRefreshingLabel(java.lang.CharSequence)
    {
        com.handmark.pulltorefresh.library.LoadingLayoutProxy r0;
        java.lang.CharSequence $r1;
        java.util.HashSet $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.handmark.pulltorefresh.library.internal.LoadingLayout r5;

        r0 := @this: com.handmark.pulltorefresh.library.LoadingLayoutProxy;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.handmark.pulltorefresh.library.LoadingLayoutProxy: java.util.HashSet mLoadingLayouts>;

        $r3 = virtualinvoke $r2.<java.util.HashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.handmark.pulltorefresh.library.internal.LoadingLayout) $r4;

        virtualinvoke r5.<com.handmark.pulltorefresh.library.internal.LoadingLayout: void setRefreshingLabel(java.lang.CharSequence)>($r1);

        goto label1;

     label2:
        return;
    }
    public void setReleaseLabel(java.lang.CharSequence)
    {
        com.handmark.pulltorefresh.library.LoadingLayoutProxy r0;
        java.lang.CharSequence $r1;
        java.util.HashSet $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.handmark.pulltorefresh.library.internal.LoadingLayout r5;

        r0 := @this: com.handmark.pulltorefresh.library.LoadingLayoutProxy;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.handmark.pulltorefresh.library.LoadingLayoutProxy: java.util.HashSet mLoadingLayouts>;

        $r3 = virtualinvoke $r2.<java.util.HashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.handmark.pulltorefresh.library.internal.LoadingLayout) $r4;

        virtualinvoke r5.<com.handmark.pulltorefresh.library.internal.LoadingLayout: void setReleaseLabel(java.lang.CharSequence)>($r1);

        goto label1;

     label2:
        return;
    }
    public void setTextTypeface(android.graphics.Typeface)
    {
        com.handmark.pulltorefresh.library.LoadingLayoutProxy r0;
        android.graphics.Typeface $r1;
        java.util.HashSet $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.handmark.pulltorefresh.library.internal.LoadingLayout r5;

        r0 := @this: com.handmark.pulltorefresh.library.LoadingLayoutProxy;

        $r1 := @parameter0: android.graphics.Typeface;

        $r2 = r0.<com.handmark.pulltorefresh.library.LoadingLayoutProxy: java.util.HashSet mLoadingLayouts>;

        $r3 = virtualinvoke $r2.<java.util.HashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.handmark.pulltorefresh.library.internal.LoadingLayout) $r4;

        virtualinvoke r5.<com.handmark.pulltorefresh.library.internal.LoadingLayout: void setTextTypeface(android.graphics.Typeface)>($r1);

        goto label1;

     label2:
        return;
    }
