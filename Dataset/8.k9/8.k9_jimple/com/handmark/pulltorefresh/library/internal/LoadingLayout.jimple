com.handmark.pulltorefresh.library.internal.LoadingLayout extends android.widget.FrameLayout implements com.handmark.pulltorefresh.library.ILoadingLayout
static final android.view.animation.Interpolator ANIMATION_INTERPOLATOR
static final java.lang.String LOG_TAG
protected final android.widget.ImageView mHeaderImage
protected final android.widget.ProgressBar mHeaderProgress
private final android.widget.TextView mHeaderText
private android.widget.FrameLayout mInnerLayout
protected final com.handmark.pulltorefresh.library.PullToRefreshBase$Mode mMode
private java.lang.CharSequence mPullLabel
private java.lang.CharSequence mRefreshingLabel
private java.lang.CharSequence mReleaseLabel
protected final com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation mScrollDirection
private final android.widget.TextView mSubHeaderText
private boolean mUseIntrinsicAnimation
    static void <clinit>()
    {
        android.view.animation.LinearInterpolator $r0;

        $r0 = new android.view.animation.LinearInterpolator;

        specialinvoke $r0.<android.view.animation.LinearInterpolator: void <init>()>();

        <com.handmark.pulltorefresh.library.internal.LoadingLayout: android.view.animation.Interpolator ANIMATION_INTERPOLATOR> = $r0;

        return;
    }
    public void <init>(android.content.Context, com.handmark.pulltorefresh.library.PullToRefreshBase$Mode, com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation, android.content.res.TypedArray)
    {
        com.handmark.pulltorefresh.library.internal.LoadingLayout r0;
        android.content.Context $r1;
        com.handmark.pulltorefresh.library.PullToRefreshBase$Mode $r2;
        com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation $r3, $r14;
        android.content.res.TypedArray $r4;
        int[] $r5;
        int $i0;
        android.view.LayoutInflater $r6;
        android.view.View $r7;
        android.widget.FrameLayout $r8;
        android.widget.TextView $r9;
        android.widget.ProgressBar $r10;
        android.widget.ImageView $r11;
        android.view.ViewGroup$LayoutParams $r12;
        android.widget.FrameLayout$LayoutParams r13;
        byte $b1;
        java.lang.String $r15;
        boolean $z0;
        android.graphics.drawable.Drawable $r16;
        android.util.TypedValue r17;
        android.content.res.ColorStateList $r18;
        android.content.res.Resources $r19;

        r0 := @this: com.handmark.pulltorefresh.library.internal.LoadingLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.handmark.pulltorefresh.library.PullToRefreshBase$Mode;

        $r3 := @parameter2: com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation;

        $r4 := @parameter3: android.content.res.TypedArray;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context)>($r1);

        r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: com.handmark.pulltorefresh.library.PullToRefreshBase$Mode mMode> = $r2;

        r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation mScrollDirection> = $r3;

        $r5 = <com.handmark.pulltorefresh.library.internal.LoadingLayout$1: int[] $SwitchMap$com$handmark$pulltorefresh$library$PullToRefreshBase$Orientation>;

        $i0 = virtualinvoke $r3.<com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation: int ordinal()>();

        $i0 = $r5[$i0];

        lookupswitch($i0)
        {
            case 1: goto label15;
            default: goto label01;
        };

     label01:
        $r6 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r1);

        $i0 = <com.handmark.pulltorefresh.library.R$layout: int pull_to_refresh_header_vertical>;

        virtualinvoke $r6.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>($i0, r0);

     label02:
        $i0 = <com.handmark.pulltorefresh.library.R$id: int fl_inner>;

        $r7 = virtualinvoke r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.view.View findViewById(int)>($i0);

        $r8 = (android.widget.FrameLayout) $r7;

        r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.FrameLayout mInnerLayout> = $r8;

        $r8 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.FrameLayout mInnerLayout>;

        $i0 = <com.handmark.pulltorefresh.library.R$id: int pull_to_refresh_text>;

        $r7 = virtualinvoke $r8.<android.widget.FrameLayout: android.view.View findViewById(int)>($i0);

        $r9 = (android.widget.TextView) $r7;

        r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mHeaderText> = $r9;

        $r8 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.FrameLayout mInnerLayout>;

        $i0 = <com.handmark.pulltorefresh.library.R$id: int pull_to_refresh_progress>;

        $r7 = virtualinvoke $r8.<android.widget.FrameLayout: android.view.View findViewById(int)>($i0);

        $r10 = (android.widget.ProgressBar) $r7;

        r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.ProgressBar mHeaderProgress> = $r10;

        $r8 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.FrameLayout mInnerLayout>;

        $i0 = <com.handmark.pulltorefresh.library.R$id: int pull_to_refresh_sub_text>;

        $r7 = virtualinvoke $r8.<android.widget.FrameLayout: android.view.View findViewById(int)>($i0);

        $r9 = (android.widget.TextView) $r7;

        r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mSubHeaderText> = $r9;

        $r8 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.FrameLayout mInnerLayout>;

        $i0 = <com.handmark.pulltorefresh.library.R$id: int pull_to_refresh_image>;

        $r7 = virtualinvoke $r8.<android.widget.FrameLayout: android.view.View findViewById(int)>($i0);

        $r11 = (android.widget.ImageView) $r7;

        r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.ImageView mHeaderImage> = $r11;

        $r8 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.FrameLayout mInnerLayout>;

        $r12 = virtualinvoke $r8.<android.widget.FrameLayout: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r13 = (android.widget.FrameLayout$LayoutParams) $r12;

        $r5 = <com.handmark.pulltorefresh.library.internal.LoadingLayout$1: int[] $SwitchMap$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode>;

        $i0 = virtualinvoke $r2.<com.handmark.pulltorefresh.library.PullToRefreshBase$Mode: int ordinal()>();

        $i0 = $r5[$i0];

        lookupswitch($i0)
        {
            case 1: goto label16;
            default: goto label03;
        };

     label03:
        $r14 = <com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation: com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation VERTICAL>;

        if $r3 != $r14 goto label19;

        $b1 = 80;

     label04:
        r13.<android.widget.FrameLayout$LayoutParams: int gravity> = $b1;

        $i0 = <com.handmark.pulltorefresh.library.R$string: int pull_to_refresh_pull_label>;

        $r15 = virtualinvoke $r1.<android.content.Context: java.lang.String getString(int)>($i0);

        r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: java.lang.CharSequence mPullLabel> = $r15;

        $i0 = <com.handmark.pulltorefresh.library.R$string: int pull_to_refresh_refreshing_label>;

        $r15 = virtualinvoke $r1.<android.content.Context: java.lang.String getString(int)>($i0);

        r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: java.lang.CharSequence mRefreshingLabel> = $r15;

        $i0 = <com.handmark.pulltorefresh.library.R$string: int pull_to_refresh_release_label>;

        $r15 = virtualinvoke $r1.<android.content.Context: java.lang.String getString(int)>($i0);

        r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: java.lang.CharSequence mReleaseLabel> = $r15;

     label05:
        $i0 = <com.handmark.pulltorefresh.library.R$styleable: int PullToRefresh_ptrHeaderBackground>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label06;

        $i0 = <com.handmark.pulltorefresh.library.R$styleable: int PullToRefresh_ptrHeaderBackground>;

        $r16 = virtualinvoke $r4.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        if $r16 == null goto label06;

        staticinvoke <com.handmark.pulltorefresh.library.internal.ViewCompat: void setBackground(android.view.View,android.graphics.drawable.Drawable)>(r0, $r16);

     label06:
        $i0 = <com.handmark.pulltorefresh.library.R$styleable: int PullToRefresh_ptrHeaderTextAppearance>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label07;

        r17 = new android.util.TypedValue;

        specialinvoke r17.<android.util.TypedValue: void <init>()>();

        $i0 = <com.handmark.pulltorefresh.library.R$styleable: int PullToRefresh_ptrHeaderTextAppearance>;

        virtualinvoke $r4.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>($i0, r17);

        $i0 = r17.<android.util.TypedValue: int data>;

        specialinvoke r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: void setTextAppearance(int)>($i0);

     label07:
        $i0 = <com.handmark.pulltorefresh.library.R$styleable: int PullToRefresh_ptrSubHeaderTextAppearance>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label08;

        r17 = new android.util.TypedValue;

        specialinvoke r17.<android.util.TypedValue: void <init>()>();

        $i0 = <com.handmark.pulltorefresh.library.R$styleable: int PullToRefresh_ptrSubHeaderTextAppearance>;

        virtualinvoke $r4.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>($i0, r17);

        $i0 = r17.<android.util.TypedValue: int data>;

        specialinvoke r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: void setSubTextAppearance(int)>($i0);

     label08:
        $i0 = <com.handmark.pulltorefresh.library.R$styleable: int PullToRefresh_ptrHeaderTextColor>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label09;

        $i0 = <com.handmark.pulltorefresh.library.R$styleable: int PullToRefresh_ptrHeaderTextColor>;

        $r18 = virtualinvoke $r4.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>($i0);

        if $r18 == null goto label09;

        specialinvoke r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: void setTextColor(android.content.res.ColorStateList)>($r18);

     label09:
        $i0 = <com.handmark.pulltorefresh.library.R$styleable: int PullToRefresh_ptrHeaderSubTextColor>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label10;

        $i0 = <com.handmark.pulltorefresh.library.R$styleable: int PullToRefresh_ptrHeaderSubTextColor>;

        $r18 = virtualinvoke $r4.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>($i0);

        if $r18 == null goto label10;

        specialinvoke r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: void setSubTextColor(android.content.res.ColorStateList)>($r18);

     label10:
        $r16 = null;

        $i0 = <com.handmark.pulltorefresh.library.R$styleable: int PullToRefresh_ptrDrawable>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label11;

        $i0 = <com.handmark.pulltorefresh.library.R$styleable: int PullToRefresh_ptrDrawable>;

        $r16 = virtualinvoke $r4.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i0);

     label11:
        $r5 = <com.handmark.pulltorefresh.library.internal.LoadingLayout$1: int[] $SwitchMap$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode>;

        $i0 = virtualinvoke $r2.<com.handmark.pulltorefresh.library.PullToRefreshBase$Mode: int ordinal()>();

        $i0 = $r5[$i0];

        lookupswitch($i0)
        {
            case 1: goto label21;
            default: goto label12;
        };

     label12:
        $i0 = <com.handmark.pulltorefresh.library.R$styleable: int PullToRefresh_ptrDrawableStart>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label20;

        $i0 = <com.handmark.pulltorefresh.library.R$styleable: int PullToRefresh_ptrDrawableStart>;

        $r16 = virtualinvoke $r4.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i0);

     label13:
        if $r16 != null goto label14;

        $r19 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: int getDefaultDrawableResId()>();

        $r16 = virtualinvoke $r19.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0);

     label14:
        virtualinvoke r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: void setLoadingDrawable(android.graphics.drawable.Drawable)>($r16);

        virtualinvoke r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: void reset()>();

        return;

     label15:
        $r6 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r1);

        $i0 = <com.handmark.pulltorefresh.library.R$layout: int pull_to_refresh_header_horizontal>;

        virtualinvoke $r6.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>($i0, r0);

        goto label02;

     label16:
        $r14 = <com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation: com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation VERTICAL>;

        if $r3 != $r14 goto label18;

        $b1 = 48;

     label17:
        r13.<android.widget.FrameLayout$LayoutParams: int gravity> = $b1;

        $i0 = <com.handmark.pulltorefresh.library.R$string: int pull_to_refresh_from_bottom_pull_label>;

        $r15 = virtualinvoke $r1.<android.content.Context: java.lang.String getString(int)>($i0);

        r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: java.lang.CharSequence mPullLabel> = $r15;

        $i0 = <com.handmark.pulltorefresh.library.R$string: int pull_to_refresh_from_bottom_refreshing_label>;

        $r15 = virtualinvoke $r1.<android.content.Context: java.lang.String getString(int)>($i0);

        r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: java.lang.CharSequence mRefreshingLabel> = $r15;

        $i0 = <com.handmark.pulltorefresh.library.R$string: int pull_to_refresh_from_bottom_release_label>;

        $r15 = virtualinvoke $r1.<android.content.Context: java.lang.String getString(int)>($i0);

        r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: java.lang.CharSequence mReleaseLabel> = $r15;

        goto label05;

     label18:
        $b1 = 3;

        goto label17;

     label19:
        $b1 = 5;

        goto label04;

     label20:
        $i0 = <com.handmark.pulltorefresh.library.R$styleable: int PullToRefresh_ptrDrawableTop>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label13;

        staticinvoke <com.handmark.pulltorefresh.library.internal.Utils: void warnDeprecation(java.lang.String,java.lang.String)>("ptrDrawableTop", "ptrDrawableStart");

        $i0 = <com.handmark.pulltorefresh.library.R$styleable: int PullToRefresh_ptrDrawableTop>;

        $r16 = virtualinvoke $r4.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        goto label13;

     label21:
        $i0 = <com.handmark.pulltorefresh.library.R$styleable: int PullToRefresh_ptrDrawableEnd>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label22;

        $i0 = <com.handmark.pulltorefresh.library.R$styleable: int PullToRefresh_ptrDrawableEnd>;

        $r16 = virtualinvoke $r4.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        goto label13;

     label22:
        $i0 = <com.handmark.pulltorefresh.library.R$styleable: int PullToRefresh_ptrDrawableBottom>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label13;

        staticinvoke <com.handmark.pulltorefresh.library.internal.Utils: void warnDeprecation(java.lang.String,java.lang.String)>("ptrDrawableBottom", "ptrDrawableEnd");

        $i0 = <com.handmark.pulltorefresh.library.R$styleable: int PullToRefresh_ptrDrawableBottom>;

        $r16 = virtualinvoke $r4.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        goto label13;
    }
    private void setSubHeaderText(java.lang.CharSequence)
    {
        com.handmark.pulltorefresh.library.internal.LoadingLayout r0;
        java.lang.CharSequence $r1;
        boolean $z0;
        android.widget.TextView $r2;

        r0 := @this: com.handmark.pulltorefresh.library.internal.LoadingLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mSubHeaderText>;

        if $r2 == null goto label2;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mSubHeaderText>;

        virtualinvoke $r2.<android.widget.TextView: void setVisibility(int)>(8);

        return;

     label1:
        $r2 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mSubHeaderText>;

        virtualinvoke $r2.<android.widget.TextView: void setText(java.lang.CharSequence)>($r1);

        $r2 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mSubHeaderText>;

        virtualinvoke $r2.<android.widget.TextView: void setVisibility(int)>(0);

     label2:
        return;
    }
    private void setSubTextAppearance(int)
    {
        com.handmark.pulltorefresh.library.internal.LoadingLayout r0;
        int $i0;
        android.content.Context $r1;
        android.widget.TextView $r2;

        r0 := @this: com.handmark.pulltorefresh.library.internal.LoadingLayout;

        $i0 := @parameter0: int;

        $r2 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mSubHeaderText>;

        if $r2 == null goto label1;

        $r2 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mSubHeaderText>;

        $r1 = virtualinvoke r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.content.Context getContext()>();

        virtualinvoke $r2.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>($r1, $i0);

     label1:
        return;
    }
    private void setSubTextColor(android.content.res.ColorStateList)
    {
        com.handmark.pulltorefresh.library.internal.LoadingLayout r0;
        android.content.res.ColorStateList $r1;
        android.widget.TextView $r2;

        r0 := @this: com.handmark.pulltorefresh.library.internal.LoadingLayout;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mSubHeaderText>;

        if $r2 == null goto label1;

        $r2 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mSubHeaderText>;

        virtualinvoke $r2.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r1);

     label1:
        return;
    }
    private void setTextAppearance(int)
    {
        com.handmark.pulltorefresh.library.internal.LoadingLayout r0;
        int $i0;
        android.widget.TextView $r1;
        android.content.Context $r2;

        r0 := @this: com.handmark.pulltorefresh.library.internal.LoadingLayout;

        $i0 := @parameter0: int;

        $r1 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mHeaderText>;

        if $r1 == null goto label1;

        $r1 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mHeaderText>;

        $r2 = virtualinvoke r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.content.Context getContext()>();

        virtualinvoke $r1.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>($r2, $i0);

     label1:
        $r1 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mSubHeaderText>;

        if $r1 == null goto label2;

        $r1 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mSubHeaderText>;

        $r2 = virtualinvoke r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.content.Context getContext()>();

        virtualinvoke $r1.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>($r2, $i0);

     label2:
        return;
    }
    private void setTextColor(android.content.res.ColorStateList)
    {
        com.handmark.pulltorefresh.library.internal.LoadingLayout r0;
        android.content.res.ColorStateList $r1;
        android.widget.TextView $r2;

        r0 := @this: com.handmark.pulltorefresh.library.internal.LoadingLayout;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mHeaderText>;

        if $r2 == null goto label1;

        $r2 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mHeaderText>;

        virtualinvoke $r2.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r1);

     label1:
        $r2 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mSubHeaderText>;

        if $r2 == null goto label2;

        $r2 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mSubHeaderText>;

        virtualinvoke $r2.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r1);

     label2:
        return;
    }
    public final int getContentSize()
    {
        com.handmark.pulltorefresh.library.internal.LoadingLayout r0;
        int[] $r1;
        com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation $r2;
        int $i0;
        android.widget.FrameLayout $r3;

        r0 := @this: com.handmark.pulltorefresh.library.internal.LoadingLayout;

        $r1 = <com.handmark.pulltorefresh.library.internal.LoadingLayout$1: int[] $SwitchMap$com$handmark$pulltorefresh$library$PullToRefreshBase$Orientation>;

        $r2 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation mScrollDirection>;

        $i0 = virtualinvoke $r2.<com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation: int ordinal()>();

        $i0 = $r1[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r3 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.FrameLayout mInnerLayout>;

        $i0 = virtualinvoke $r3.<android.widget.FrameLayout: int getHeight()>();

        return $i0;

     label2:
        $r3 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.FrameLayout mInnerLayout>;

        $i0 = virtualinvoke $r3.<android.widget.FrameLayout: int getWidth()>();

        return $i0;
    }
protected abstract int getDefaultDrawableResId() { 
// no body
} 
    public final void hideAllViews()
    {
        com.handmark.pulltorefresh.library.internal.LoadingLayout r0;
        android.widget.TextView $r1;
        int $i0;
        android.widget.ProgressBar $r2;
        android.widget.ImageView $r3;

        r0 := @this: com.handmark.pulltorefresh.library.internal.LoadingLayout;

        $r1 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mHeaderText>;

        $i0 = virtualinvoke $r1.<android.widget.TextView: int getVisibility()>();

        if $i0 != 0 goto label1;

        $r1 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mHeaderText>;

        virtualinvoke $r1.<android.widget.TextView: void setVisibility(int)>(4);

     label1:
        $r2 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.ProgressBar mHeaderProgress>;

        $i0 = virtualinvoke $r2.<android.widget.ProgressBar: int getVisibility()>();

        if $i0 != 0 goto label2;

        $r2 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.ProgressBar mHeaderProgress>;

        virtualinvoke $r2.<android.widget.ProgressBar: void setVisibility(int)>(4);

     label2:
        $r3 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.ImageView mHeaderImage>;

        $i0 = virtualinvoke $r3.<android.widget.ImageView: int getVisibility()>();

        if $i0 != 0 goto label3;

        $r3 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.ImageView mHeaderImage>;

        virtualinvoke $r3.<android.widget.ImageView: void setVisibility(int)>(4);

     label3:
        $r1 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mSubHeaderText>;

        $i0 = virtualinvoke $r1.<android.widget.TextView: int getVisibility()>();

        if $i0 != 0 goto label4;

        $r1 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mSubHeaderText>;

        virtualinvoke $r1.<android.widget.TextView: void setVisibility(int)>(4);

     label4:
        return;
    }
protected abstract void onLoadingDrawableSet(android.graphics.drawable.Drawable) { 
// no body
} 
    public final void onPull(float)
    {
        com.handmark.pulltorefresh.library.internal.LoadingLayout r0;
        float $f0;
        boolean $z0;

        r0 := @this: com.handmark.pulltorefresh.library.internal.LoadingLayout;

        $f0 := @parameter0: float;

        $z0 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: boolean mUseIntrinsicAnimation>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: void onPullImpl(float)>($f0);

     label1:
        return;
    }
protected abstract void onPullImpl(float) { 
// no body
} 
    public final void pullToRefresh()
    {
        com.handmark.pulltorefresh.library.internal.LoadingLayout r0;
        java.lang.CharSequence $r1;
        android.widget.TextView $r2;

        r0 := @this: com.handmark.pulltorefresh.library.internal.LoadingLayout;

        $r2 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mHeaderText>;

        if $r2 == null goto label1;

        $r2 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mHeaderText>;

        $r1 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: java.lang.CharSequence mPullLabel>;

        virtualinvoke $r2.<android.widget.TextView: void setText(java.lang.CharSequence)>($r1);

     label1:
        virtualinvoke r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: void pullToRefreshImpl()>();

        return;
    }
protected abstract void pullToRefreshImpl() { 
// no body
} 
    public final void refreshing()
    {
        com.handmark.pulltorefresh.library.internal.LoadingLayout r0;
        android.graphics.drawable.Drawable $r1;
        android.widget.TextView $r2;
        java.lang.CharSequence $r3;
        boolean $z0;
        android.widget.ImageView $r4;
        android.graphics.drawable.AnimationDrawable $r5;

        r0 := @this: com.handmark.pulltorefresh.library.internal.LoadingLayout;

        $r2 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mHeaderText>;

        if $r2 == null goto label1;

        $r2 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mHeaderText>;

        $r3 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: java.lang.CharSequence mRefreshingLabel>;

        virtualinvoke $r2.<android.widget.TextView: void setText(java.lang.CharSequence)>($r3);

     label1:
        $z0 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: boolean mUseIntrinsicAnimation>;

        if $z0 == 0 goto label3;

        $r4 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.ImageView mHeaderImage>;

        $r1 = virtualinvoke $r4.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        $r5 = (android.graphics.drawable.AnimationDrawable) $r1;

        virtualinvoke $r5.<android.graphics.drawable.AnimationDrawable: void start()>();

     label2:
        $r2 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mSubHeaderText>;

        if $r2 == null goto label4;

        $r2 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mSubHeaderText>;

        virtualinvoke $r2.<android.widget.TextView: void setVisibility(int)>(8);

        return;

     label3:
        virtualinvoke r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: void refreshingImpl()>();

        goto label2;

     label4:
        return;
    }
protected abstract void refreshingImpl() { 
// no body
} 
    public final void releaseToRefresh()
    {
        com.handmark.pulltorefresh.library.internal.LoadingLayout r0;
        java.lang.CharSequence $r1;
        android.widget.TextView $r2;

        r0 := @this: com.handmark.pulltorefresh.library.internal.LoadingLayout;

        $r2 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mHeaderText>;

        if $r2 == null goto label1;

        $r2 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mHeaderText>;

        $r1 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: java.lang.CharSequence mReleaseLabel>;

        virtualinvoke $r2.<android.widget.TextView: void setText(java.lang.CharSequence)>($r1);

     label1:
        virtualinvoke r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: void releaseToRefreshImpl()>();

        return;
    }
protected abstract void releaseToRefreshImpl() { 
// no body
} 
    public final void reset()
    {
        com.handmark.pulltorefresh.library.internal.LoadingLayout r0;
        android.widget.TextView $r1;
        java.lang.CharSequence $r2;
        android.widget.ImageView $r3;
        boolean $z0;
        android.graphics.drawable.Drawable $r4;
        android.graphics.drawable.AnimationDrawable $r5;

        r0 := @this: com.handmark.pulltorefresh.library.internal.LoadingLayout;

        $r1 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mHeaderText>;

        if $r1 == null goto label1;

        $r1 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mHeaderText>;

        $r2 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: java.lang.CharSequence mPullLabel>;

        virtualinvoke $r1.<android.widget.TextView: void setText(java.lang.CharSequence)>($r2);

     label1:
        $r3 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.ImageView mHeaderImage>;

        virtualinvoke $r3.<android.widget.ImageView: void setVisibility(int)>(0);

        $z0 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: boolean mUseIntrinsicAnimation>;

        if $z0 == 0 goto label3;

        $r3 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.ImageView mHeaderImage>;

        $r4 = virtualinvoke $r3.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        $r5 = (android.graphics.drawable.AnimationDrawable) $r4;

        virtualinvoke $r5.<android.graphics.drawable.AnimationDrawable: void stop()>();

     label2:
        $r1 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mSubHeaderText>;

        if $r1 == null goto label5;

        $r1 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mSubHeaderText>;

        $r2 = virtualinvoke $r1.<android.widget.TextView: java.lang.CharSequence getText()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label4;

        $r1 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mSubHeaderText>;

        virtualinvoke $r1.<android.widget.TextView: void setVisibility(int)>(8);

        return;

     label3:
        virtualinvoke r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: void resetImpl()>();

        goto label2;

     label4:
        $r1 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mSubHeaderText>;

        virtualinvoke $r1.<android.widget.TextView: void setVisibility(int)>(0);

     label5:
        return;
    }
protected abstract void resetImpl() { 
// no body
} 
    public final void setHeight(int)
    {
        com.handmark.pulltorefresh.library.internal.LoadingLayout r0;
        int $i0;
        android.view.ViewGroup$LayoutParams $r1;

        r0 := @this: com.handmark.pulltorefresh.library.internal.LoadingLayout;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r1.<android.view.ViewGroup$LayoutParams: int height> = $i0;

        virtualinvoke r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: void requestLayout()>();

        return;
    }
    public void setLastUpdatedLabel(java.lang.CharSequence)
    {
        com.handmark.pulltorefresh.library.internal.LoadingLayout r0;
        java.lang.CharSequence $r1;

        r0 := @this: com.handmark.pulltorefresh.library.internal.LoadingLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        specialinvoke r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: void setSubHeaderText(java.lang.CharSequence)>($r1);

        return;
    }
    public final void setLoadingDrawable(android.graphics.drawable.Drawable)
    {
        com.handmark.pulltorefresh.library.internal.LoadingLayout r0;
        android.graphics.drawable.Drawable $r1;
        android.widget.ImageView $r2;
        boolean $z0;

        r0 := @this: com.handmark.pulltorefresh.library.internal.LoadingLayout;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.ImageView mHeaderImage>;

        virtualinvoke $r2.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>($r1);

        $z0 = $r1 instanceof android.graphics.drawable.AnimationDrawable;

        r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: boolean mUseIntrinsicAnimation> = $z0;

        virtualinvoke r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: void onLoadingDrawableSet(android.graphics.drawable.Drawable)>($r1);

        return;
    }
    public void setPullLabel(java.lang.CharSequence)
    {
        com.handmark.pulltorefresh.library.internal.LoadingLayout r0;
        java.lang.CharSequence $r1;

        r0 := @this: com.handmark.pulltorefresh.library.internal.LoadingLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: java.lang.CharSequence mPullLabel> = $r1;

        return;
    }
    public void setRefreshingLabel(java.lang.CharSequence)
    {
        com.handmark.pulltorefresh.library.internal.LoadingLayout r0;
        java.lang.CharSequence $r1;

        r0 := @this: com.handmark.pulltorefresh.library.internal.LoadingLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: java.lang.CharSequence mRefreshingLabel> = $r1;

        return;
    }
    public void setReleaseLabel(java.lang.CharSequence)
    {
        com.handmark.pulltorefresh.library.internal.LoadingLayout r0;
        java.lang.CharSequence $r1;

        r0 := @this: com.handmark.pulltorefresh.library.internal.LoadingLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: java.lang.CharSequence mReleaseLabel> = $r1;

        return;
    }
    public void setTextTypeface(android.graphics.Typeface)
    {
        com.handmark.pulltorefresh.library.internal.LoadingLayout r0;
        android.graphics.Typeface $r1;
        android.widget.TextView $r2;

        r0 := @this: com.handmark.pulltorefresh.library.internal.LoadingLayout;

        $r1 := @parameter0: android.graphics.Typeface;

        $r2 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mHeaderText>;

        virtualinvoke $r2.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r1);

        return;
    }
    public final void setWidth(int)
    {
        com.handmark.pulltorefresh.library.internal.LoadingLayout r0;
        int $i0;
        android.view.ViewGroup$LayoutParams $r1;

        r0 := @this: com.handmark.pulltorefresh.library.internal.LoadingLayout;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r1.<android.view.ViewGroup$LayoutParams: int width> = $i0;

        virtualinvoke r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: void requestLayout()>();

        return;
    }
    public final void showInvisibleViews()
    {
        com.handmark.pulltorefresh.library.internal.LoadingLayout r0;
        android.widget.TextView $r1;
        int $i0;
        android.widget.ProgressBar $r2;
        android.widget.ImageView $r3;

        r0 := @this: com.handmark.pulltorefresh.library.internal.LoadingLayout;

        $r1 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mHeaderText>;

        $i0 = virtualinvoke $r1.<android.widget.TextView: int getVisibility()>();

        if 4 != $i0 goto label1;

        $r1 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mHeaderText>;

        virtualinvoke $r1.<android.widget.TextView: void setVisibility(int)>(0);

     label1:
        $r2 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.ProgressBar mHeaderProgress>;

        $i0 = virtualinvoke $r2.<android.widget.ProgressBar: int getVisibility()>();

        if 4 != $i0 goto label2;

        $r2 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.ProgressBar mHeaderProgress>;

        virtualinvoke $r2.<android.widget.ProgressBar: void setVisibility(int)>(0);

     label2:
        $r3 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.ImageView mHeaderImage>;

        $i0 = virtualinvoke $r3.<android.widget.ImageView: int getVisibility()>();

        if 4 != $i0 goto label3;

        $r3 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.ImageView mHeaderImage>;

        virtualinvoke $r3.<android.widget.ImageView: void setVisibility(int)>(0);

     label3:
        $r1 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mSubHeaderText>;

        $i0 = virtualinvoke $r1.<android.widget.TextView: int getVisibility()>();

        if 4 != $i0 goto label4;

        $r1 = r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: android.widget.TextView mSubHeaderText>;

        virtualinvoke $r1.<android.widget.TextView: void setVisibility(int)>(0);

     label4:
        return;
    }
