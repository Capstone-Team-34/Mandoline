com.handmark.pulltorefresh.library.internal.RotateLoadingLayout extends com.handmark.pulltorefresh.library.internal.LoadingLayout
static final int ROTATION_ANIMATION_DURATION
private final android.graphics.Matrix mHeaderImageMatrix
private final android.view.animation.Animation mRotateAnimation
private final boolean mRotateDrawableWhilePulling
private float mRotationPivotX
private float mRotationPivotY
    public void <init>(android.content.Context, com.handmark.pulltorefresh.library.PullToRefreshBase$Mode, com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation, android.content.res.TypedArray)
    {
        com.handmark.pulltorefresh.library.internal.RotateLoadingLayout r0;
        android.content.Context $r1;
        com.handmark.pulltorefresh.library.PullToRefreshBase$Mode $r2;
        com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation $r3;
        android.content.res.TypedArray $r4;
        boolean $z0;
        int $i0;
        android.widget.ImageView $r5;
        android.widget.ImageView$ScaleType $r6;
        android.graphics.Matrix $r7;
        android.view.animation.RotateAnimation $r8;
        android.view.animation.Animation $r9;
        android.view.animation.Interpolator $r10;

        r0 := @this: com.handmark.pulltorefresh.library.internal.RotateLoadingLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.handmark.pulltorefresh.library.PullToRefreshBase$Mode;

        $r3 := @parameter2: com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation;

        $r4 := @parameter3: android.content.res.TypedArray;

        specialinvoke r0.<com.handmark.pulltorefresh.library.internal.LoadingLayout: void <init>(android.content.Context,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode,com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation,android.content.res.TypedArray)>($r1, $r2, $r3, $r4);

        $i0 = <com.handmark.pulltorefresh.library.R$styleable: int PullToRefresh_ptrRotateDrawableWhilePulling>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 1);

        r0.<com.handmark.pulltorefresh.library.internal.RotateLoadingLayout: boolean mRotateDrawableWhilePulling> = $z0;

        $r5 = r0.<com.handmark.pulltorefresh.library.internal.RotateLoadingLayout: android.widget.ImageView mHeaderImage>;

        $r6 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType MATRIX>;

        virtualinvoke $r5.<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>($r6);

        $r7 = new android.graphics.Matrix;

        specialinvoke $r7.<android.graphics.Matrix: void <init>()>();

        r0.<com.handmark.pulltorefresh.library.internal.RotateLoadingLayout: android.graphics.Matrix mHeaderImageMatrix> = $r7;

        $r5 = r0.<com.handmark.pulltorefresh.library.internal.RotateLoadingLayout: android.widget.ImageView mHeaderImage>;

        $r7 = r0.<com.handmark.pulltorefresh.library.internal.RotateLoadingLayout: android.graphics.Matrix mHeaderImageMatrix>;

        virtualinvoke $r5.<android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>($r7);

        $r8 = new android.view.animation.RotateAnimation;

        specialinvoke $r8.<android.view.animation.RotateAnimation: void <init>(float,float,int,float,int,float)>(0.0F, 720.0F, 1, 0.5F, 1, 0.5F);

        r0.<com.handmark.pulltorefresh.library.internal.RotateLoadingLayout: android.view.animation.Animation mRotateAnimation> = $r8;

        $r9 = r0.<com.handmark.pulltorefresh.library.internal.RotateLoadingLayout: android.view.animation.Animation mRotateAnimation>;

        $r10 = <com.handmark.pulltorefresh.library.internal.RotateLoadingLayout: android.view.animation.Interpolator ANIMATION_INTERPOLATOR>;

        virtualinvoke $r9.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r10);

        $r9 = r0.<com.handmark.pulltorefresh.library.internal.RotateLoadingLayout: android.view.animation.Animation mRotateAnimation>;

        virtualinvoke $r9.<android.view.animation.Animation: void setDuration(long)>(1200L);

        $r9 = r0.<com.handmark.pulltorefresh.library.internal.RotateLoadingLayout: android.view.animation.Animation mRotateAnimation>;

        virtualinvoke $r9.<android.view.animation.Animation: void setRepeatCount(int)>(-1);

        $r9 = r0.<com.handmark.pulltorefresh.library.internal.RotateLoadingLayout: android.view.animation.Animation mRotateAnimation>;

        virtualinvoke $r9.<android.view.animation.Animation: void setRepeatMode(int)>(1);

        return;
    }
    private void resetImageRotation()
    {
        com.handmark.pulltorefresh.library.internal.RotateLoadingLayout r0;
        android.graphics.Matrix $r1;
        android.widget.ImageView $r2;

        r0 := @this: com.handmark.pulltorefresh.library.internal.RotateLoadingLayout;

        $r1 = r0.<com.handmark.pulltorefresh.library.internal.RotateLoadingLayout: android.graphics.Matrix mHeaderImageMatrix>;

        if $r1 == null goto label1;

        $r1 = r0.<com.handmark.pulltorefresh.library.internal.RotateLoadingLayout: android.graphics.Matrix mHeaderImageMatrix>;

        virtualinvoke $r1.<android.graphics.Matrix: void reset()>();

        $r2 = r0.<com.handmark.pulltorefresh.library.internal.RotateLoadingLayout: android.widget.ImageView mHeaderImage>;

        $r1 = r0.<com.handmark.pulltorefresh.library.internal.RotateLoadingLayout: android.graphics.Matrix mHeaderImageMatrix>;

        virtualinvoke $r2.<android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>($r1);

     label1:
        return;
    }
    protected int getDefaultDrawableResId()
    {
        com.handmark.pulltorefresh.library.internal.RotateLoadingLayout r0;
        int i0;

        r0 := @this: com.handmark.pulltorefresh.library.internal.RotateLoadingLayout;

        i0 = <com.handmark.pulltorefresh.library.R$drawable: int default_ptr_rotate>;

        return i0;
    }
    public void onLoadingDrawableSet(android.graphics.drawable.Drawable)
    {
        com.handmark.pulltorefresh.library.internal.RotateLoadingLayout r0;
        android.graphics.drawable.Drawable $r1;
        int $i0;
        float $f0;

        r0 := @this: com.handmark.pulltorefresh.library.internal.RotateLoadingLayout;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $f0 = (float) $i0;

        $f0 = $f0 / 2.0F;

        r0.<com.handmark.pulltorefresh.library.internal.RotateLoadingLayout: float mRotationPivotX> = $f0;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $f0 = (float) $i0;

        $f0 = $f0 / 2.0F;

        r0.<com.handmark.pulltorefresh.library.internal.RotateLoadingLayout: float mRotationPivotY> = $f0;

     label1:
        return;
    }
    protected void onPullImpl(float)
    {
        com.handmark.pulltorefresh.library.internal.RotateLoadingLayout r0;
        float $f0, $f1, $f2;
        boolean $z0;
        android.graphics.Matrix $r1;
        android.widget.ImageView $r2;

        r0 := @this: com.handmark.pulltorefresh.library.internal.RotateLoadingLayout;

        $f0 := @parameter0: float;

        $z0 = r0.<com.handmark.pulltorefresh.library.internal.RotateLoadingLayout: boolean mRotateDrawableWhilePulling>;

        if $z0 == 0 goto label2;

        $f0 = $f0 * 90.0F;

     label1:
        $r1 = r0.<com.handmark.pulltorefresh.library.internal.RotateLoadingLayout: android.graphics.Matrix mHeaderImageMatrix>;

        $f1 = r0.<com.handmark.pulltorefresh.library.internal.RotateLoadingLayout: float mRotationPivotX>;

        $f2 = r0.<com.handmark.pulltorefresh.library.internal.RotateLoadingLayout: float mRotationPivotY>;

        virtualinvoke $r1.<android.graphics.Matrix: void setRotate(float,float,float)>($f0, $f1, $f2);

        $r2 = r0.<com.handmark.pulltorefresh.library.internal.RotateLoadingLayout: android.widget.ImageView mHeaderImage>;

        $r1 = r0.<com.handmark.pulltorefresh.library.internal.RotateLoadingLayout: android.graphics.Matrix mHeaderImageMatrix>;

        virtualinvoke $r2.<android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>($r1);

        return;

     label2:
        $f0 = 360.0F * $f0;

        $f0 = $f0 - 180.0F;

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>(180.0F, $f0);

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f0);

        goto label1;
    }
    protected void pullToRefreshImpl()
    {
        com.handmark.pulltorefresh.library.internal.RotateLoadingLayout r0;

        r0 := @this: com.handmark.pulltorefresh.library.internal.RotateLoadingLayout;

        return;
    }
    protected void refreshingImpl()
    {
        com.handmark.pulltorefresh.library.internal.RotateLoadingLayout r0;
        android.widget.ImageView $r1;
        android.view.animation.Animation $r2;

        r0 := @this: com.handmark.pulltorefresh.library.internal.RotateLoadingLayout;

        $r1 = r0.<com.handmark.pulltorefresh.library.internal.RotateLoadingLayout: android.widget.ImageView mHeaderImage>;

        $r2 = r0.<com.handmark.pulltorefresh.library.internal.RotateLoadingLayout: android.view.animation.Animation mRotateAnimation>;

        virtualinvoke $r1.<android.widget.ImageView: void startAnimation(android.view.animation.Animation)>($r2);

        return;
    }
    protected void releaseToRefreshImpl()
    {
        com.handmark.pulltorefresh.library.internal.RotateLoadingLayout r0;

        r0 := @this: com.handmark.pulltorefresh.library.internal.RotateLoadingLayout;

        return;
    }
    protected void resetImpl()
    {
        com.handmark.pulltorefresh.library.internal.RotateLoadingLayout r0;
        android.widget.ImageView $r1;

        r0 := @this: com.handmark.pulltorefresh.library.internal.RotateLoadingLayout;

        $r1 = r0.<com.handmark.pulltorefresh.library.internal.RotateLoadingLayout: android.widget.ImageView mHeaderImage>;

        virtualinvoke $r1.<android.widget.ImageView: void clearAnimation()>();

        specialinvoke r0.<com.handmark.pulltorefresh.library.internal.RotateLoadingLayout: void resetImageRotation()>();

        return;
    }
