com.github.amlcurran.showcaseview.ShowcaseView extends android.widget.RelativeLayout implements android.view.View$OnTouchListener com.github.amlcurran.showcaseview.ShowcaseViewApi
public static final int ABOVE_SHOWCASE
public static final int BELOW_SHOWCASE
private static final int HOLO_BLUE
public static final int LEFT_OF_SHOWCASE
public static final int RIGHT_OF_SHOWCASE
public static final int UNDEFINED
private final com.github.amlcurran.showcaseview.AnimationFactory animationFactory
private int backgroundColor
private android.graphics.Bitmap bitmapBuffer
private boolean blockAllTouches
private boolean blockTouches
private long fadeInMillis
private long fadeOutMillis
private boolean hasAlteredText
private boolean hasCustomClickListener
private boolean hasNoTarget
private android.view.View$OnClickListener hideOnClickListener
private boolean hideOnTouch
private boolean isShowing
private android.widget.Button mEndButton
private com.github.amlcurran.showcaseview.OnShowcaseEventListener mEventListener
private final int[] positionInWindow
private float scaleMultiplier
private final com.github.amlcurran.showcaseview.ShotStateStore shotStateStore
private boolean shouldCentreText
private final com.github.amlcurran.showcaseview.ShowcaseAreaCalculator showcaseAreaCalculator
private int showcaseColor
private com.github.amlcurran.showcaseview.ShowcaseDrawer showcaseDrawer
private int showcaseX
private int showcaseY
private final com.github.amlcurran.showcaseview.TextDrawer textDrawer
    static void <clinit>()
    {
        int $i0;

        $i0 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>("#33B5E5");

        <com.github.amlcurran.showcaseview.ShowcaseView: int HOLO_BLUE> = $i0;

        return;
    }
    protected void <init>(android.content.Context, android.util.AttributeSet, int, boolean)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0, $i1;
        boolean $z0, $z1;
        com.github.amlcurran.showcaseview.ApiUtils r3;
        com.github.amlcurran.showcaseview.OnShowcaseEventListener $r4;
        int[] $r5;
        com.github.amlcurran.showcaseview.ShowcaseView$4 $r6;
        com.github.amlcurran.showcaseview.AnimatorAnimationFactory $r7;
        com.github.amlcurran.showcaseview.ShowcaseAreaCalculator $r8;
        com.github.amlcurran.showcaseview.ShotStateStore $r9;
        android.content.res.Resources$Theme $r10;
        android.content.res.TypedArray $r11;
        android.content.res.Resources $r12;
        long $l2;
        android.view.LayoutInflater $r13;
        android.view.View $r14;
        android.widget.Button $r15;
        com.github.amlcurran.showcaseview.NewShowcaseDrawer $r16;
        com.github.amlcurran.showcaseview.TextDrawer $r17;
        com.github.amlcurran.showcaseview.NoAnimationFactory $r18;
        com.github.amlcurran.showcaseview.StandardShowcaseDrawer $r19;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        specialinvoke r0.<android.widget.RelativeLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: int showcaseX> = -1;

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: int showcaseY> = -1;

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: float scaleMultiplier> = 1.0F;

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean hasCustomClickListener> = 0;

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean blockTouches> = 1;

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean hideOnTouch> = 0;

        $r4 = <com.github.amlcurran.showcaseview.OnShowcaseEventListener: com.github.amlcurran.showcaseview.OnShowcaseEventListener NONE>;

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.OnShowcaseEventListener mEventListener> = $r4;

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean hasAlteredText> = 0;

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean hasNoTarget> = 0;

        $r5 = newarray (int)[2];

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: int[] positionInWindow> = $r5;

        $r6 = new com.github.amlcurran.showcaseview.ShowcaseView$4;

        specialinvoke $r6.<com.github.amlcurran.showcaseview.ShowcaseView$4: void <init>(com.github.amlcurran.showcaseview.ShowcaseView)>(r0);

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.view.View$OnClickListener hideOnClickListener> = $r6;

        r3 = new com.github.amlcurran.showcaseview.ApiUtils;

        specialinvoke r3.<com.github.amlcurran.showcaseview.ApiUtils: void <init>()>();

        $z1 = virtualinvoke r3.<com.github.amlcurran.showcaseview.ApiUtils: boolean isCompatWithHoneycomb()>();

        if $z1 == 0 goto label3;

        $r7 = new com.github.amlcurran.showcaseview.AnimatorAnimationFactory;

        specialinvoke $r7.<com.github.amlcurran.showcaseview.AnimatorAnimationFactory: void <init>()>();

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.AnimationFactory animationFactory> = $r7;

     label1:
        $r8 = new com.github.amlcurran.showcaseview.ShowcaseAreaCalculator;

        specialinvoke $r8.<com.github.amlcurran.showcaseview.ShowcaseAreaCalculator: void <init>()>();

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.ShowcaseAreaCalculator showcaseAreaCalculator> = $r8;

        $r9 = new com.github.amlcurran.showcaseview.ShotStateStore;

        specialinvoke $r9.<com.github.amlcurran.showcaseview.ShotStateStore: void <init>(android.content.Context)>($r1);

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.ShotStateStore shotStateStore> = $r9;

        $r10 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r5 = <com.github.amlcurran.showcaseview.R$styleable: int[] ShowcaseView>;

        $i1 = <com.github.amlcurran.showcaseview.R$attr: int showcaseViewStyle>;

        $i0 = <com.github.amlcurran.showcaseview.R$style: int ShowcaseView>;

        $r11 = virtualinvoke $r10.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r5, $i1, $i0);

        $r12 = virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r12.<android.content.res.Resources: int getInteger(int)>(17694721);

        $l2 = (long) $i0;

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: long fadeInMillis> = $l2;

        $r12 = virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r12.<android.content.res.Resources: int getInteger(int)>(17694721);

        $l2 = (long) $i0;

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: long fadeOutMillis> = $l2;

        $r13 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r1);

        $i0 = <com.github.amlcurran.showcaseview.R$layout: int showcase_button>;

        $r14 = virtualinvoke $r13.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>($i0, null);

        $r15 = (android.widget.Button) $r14;

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.widget.Button mEndButton> = $r15;

        if $z0 == 0 goto label4;

        $r16 = new com.github.amlcurran.showcaseview.NewShowcaseDrawer;

        $r12 = virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.content.res.Resources getResources()>();

        $r10 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        specialinvoke $r16.<com.github.amlcurran.showcaseview.NewShowcaseDrawer: void <init>(android.content.res.Resources,android.content.res.Resources$Theme)>($r12, $r10);

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.ShowcaseDrawer showcaseDrawer> = $r16;

     label2:
        $r17 = new com.github.amlcurran.showcaseview.TextDrawer;

        $r12 = virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.content.res.Resources getResources()>();

        $r1 = virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.content.Context getContext()>();

        specialinvoke $r17.<com.github.amlcurran.showcaseview.TextDrawer: void <init>(android.content.res.Resources,android.content.Context)>($r12, $r1);

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.TextDrawer textDrawer> = $r17;

        specialinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: void updateStyle(android.content.res.TypedArray,boolean)>($r11, 0);

        specialinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: void init()>();

        return;

     label3:
        $r18 = new com.github.amlcurran.showcaseview.NoAnimationFactory;

        specialinvoke $r18.<com.github.amlcurran.showcaseview.NoAnimationFactory: void <init>()>();

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.AnimationFactory animationFactory> = $r18;

        goto label1;

     label4:
        $r19 = new com.github.amlcurran.showcaseview.StandardShowcaseDrawer;

        $r12 = virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.content.res.Resources getResources()>();

        $r10 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        specialinvoke $r19.<com.github.amlcurran.showcaseview.StandardShowcaseDrawer: void <init>(android.content.res.Resources,android.content.res.Resources$Theme)>($r12, $r10);

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.ShowcaseDrawer showcaseDrawer> = $r19;

        goto label2;
    }
    protected void <init>(android.content.Context, boolean)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        android.content.Context $r1;
        boolean $z0;
        int $i0;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 := @parameter0: android.content.Context;

        $z0 := @parameter1: boolean;

        $i0 = <com.github.amlcurran.showcaseview.R$styleable: int CustomTheme_showcaseViewStyle>;

        specialinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: void <init>(android.content.Context,android.util.AttributeSet,int,boolean)>($r1, null, $i0, $z0);

        return;
    }
    static com.github.amlcurran.showcaseview.ShotStateStore access$000(com.github.amlcurran.showcaseview.ShowcaseView)
    {
        com.github.amlcurran.showcaseview.ShowcaseView $r0;
        com.github.amlcurran.showcaseview.ShotStateStore r1;

        $r0 := @parameter0: com.github.amlcurran.showcaseview.ShowcaseView;

        r1 = $r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.ShotStateStore shotStateStore>;

        return r1;
    }
    static boolean access$100(com.github.amlcurran.showcaseview.ShowcaseView)
    {
        com.github.amlcurran.showcaseview.ShowcaseView $r0;
        boolean $z0;

        $r0 := @parameter0: com.github.amlcurran.showcaseview.ShowcaseView;

        $z0 = specialinvoke $r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean canUpdateBitmap()>();

        return $z0;
    }
    static void access$1000(com.github.amlcurran.showcaseview.ShowcaseView, long)
    {
        com.github.amlcurran.showcaseview.ShowcaseView $r0;
        long $l0;

        $r0 := @parameter0: com.github.amlcurran.showcaseview.ShowcaseView;

        $l0 := @parameter1: long;

        specialinvoke $r0.<com.github.amlcurran.showcaseview.ShowcaseView: void setSingleShot(long)>($l0);

        return;
    }
    static void access$1100(com.github.amlcurran.showcaseview.ShowcaseView, android.text.TextPaint)
    {
        com.github.amlcurran.showcaseview.ShowcaseView $r0;
        android.text.TextPaint $r1;

        $r0 := @parameter0: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 := @parameter1: android.text.TextPaint;

        specialinvoke $r0.<com.github.amlcurran.showcaseview.ShowcaseView: void setContentTextPaint(android.text.TextPaint)>($r1);

        return;
    }
    static void access$1200(com.github.amlcurran.showcaseview.ShowcaseView, android.text.TextPaint)
    {
        com.github.amlcurran.showcaseview.ShowcaseView $r0;
        android.text.TextPaint $r1;

        $r0 := @parameter0: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 := @parameter1: android.text.TextPaint;

        specialinvoke $r0.<com.github.amlcurran.showcaseview.ShowcaseView: void setContentTitlePaint(android.text.TextPaint)>($r1);

        return;
    }
    static void access$1300(com.github.amlcurran.showcaseview.ShowcaseView, android.widget.Button)
    {
        com.github.amlcurran.showcaseview.ShowcaseView $r0;
        android.widget.Button $r1;

        $r0 := @parameter0: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 := @parameter1: android.widget.Button;

        specialinvoke $r0.<com.github.amlcurran.showcaseview.ShowcaseView: void setEndButton(android.widget.Button)>($r1);

        return;
    }
    static void access$1400(com.github.amlcurran.showcaseview.ShowcaseView, boolean)
    {
        com.github.amlcurran.showcaseview.ShowcaseView $r0;
        boolean $z0;

        $r0 := @parameter0: com.github.amlcurran.showcaseview.ShowcaseView;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<com.github.amlcurran.showcaseview.ShowcaseView: void setBlockAllTouches(boolean)>($z0);

        return;
    }
    static void access$200(com.github.amlcurran.showcaseview.ShowcaseView)
    {
        com.github.amlcurran.showcaseview.ShowcaseView $r0;

        $r0 := @parameter0: com.github.amlcurran.showcaseview.ShowcaseView;

        specialinvoke $r0.<com.github.amlcurran.showcaseview.ShowcaseView: void updateBitmap()>();

        return;
    }
    static boolean access$302(com.github.amlcurran.showcaseview.ShowcaseView, boolean)
    {
        com.github.amlcurran.showcaseview.ShowcaseView $r0;
        boolean $z0;

        $r0 := @parameter0: com.github.amlcurran.showcaseview.ShowcaseView;

        $z0 := @parameter1: boolean;

        $r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean hasNoTarget> = $z0;

        return $z0;
    }
    static com.github.amlcurran.showcaseview.AnimationFactory access$400(com.github.amlcurran.showcaseview.ShowcaseView)
    {
        com.github.amlcurran.showcaseview.ShowcaseView $r0;
        com.github.amlcurran.showcaseview.AnimationFactory r1;

        $r0 := @parameter0: com.github.amlcurran.showcaseview.ShowcaseView;

        r1 = $r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.AnimationFactory animationFactory>;

        return r1;
    }
    static void access$500(com.github.amlcurran.showcaseview.ShowcaseView)
    {
        com.github.amlcurran.showcaseview.ShowcaseView $r0;

        $r0 := @parameter0: com.github.amlcurran.showcaseview.ShowcaseView;

        specialinvoke $r0.<com.github.amlcurran.showcaseview.ShowcaseView: void clearBitmap()>();

        return;
    }
    static boolean access$602(com.github.amlcurran.showcaseview.ShowcaseView, boolean)
    {
        com.github.amlcurran.showcaseview.ShowcaseView $r0;
        boolean $z0;

        $r0 := @parameter0: com.github.amlcurran.showcaseview.ShowcaseView;

        $z0 := @parameter1: boolean;

        $r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean isShowing> = $z0;

        return $z0;
    }
    static com.github.amlcurran.showcaseview.OnShowcaseEventListener access$700(com.github.amlcurran.showcaseview.ShowcaseView)
    {
        com.github.amlcurran.showcaseview.ShowcaseView $r0;
        com.github.amlcurran.showcaseview.OnShowcaseEventListener r1;

        $r0 := @parameter0: com.github.amlcurran.showcaseview.ShowcaseView;

        r1 = $r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.OnShowcaseEventListener mEventListener>;

        return r1;
    }
    static void access$800(com.github.amlcurran.showcaseview.ShowcaseView, android.view.ViewGroup, int)
    {
        com.github.amlcurran.showcaseview.ShowcaseView $r0;
        android.view.ViewGroup $r1;
        int $i0;

        $r0 := @parameter0: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 := @parameter1: android.view.ViewGroup;

        $i0 := @parameter2: int;

        staticinvoke <com.github.amlcurran.showcaseview.ShowcaseView: void insertShowcaseView(com.github.amlcurran.showcaseview.ShowcaseView,android.view.ViewGroup,int)>($r0, $r1, $i0);

        return;
    }
    static void access$900(com.github.amlcurran.showcaseview.ShowcaseView, com.github.amlcurran.showcaseview.ShowcaseDrawer)
    {
        com.github.amlcurran.showcaseview.ShowcaseView $r0;
        com.github.amlcurran.showcaseview.ShowcaseDrawer $r1;

        $r0 := @parameter0: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 := @parameter1: com.github.amlcurran.showcaseview.ShowcaseDrawer;

        specialinvoke $r0.<com.github.amlcurran.showcaseview.ShowcaseView: void setShowcaseDrawer(com.github.amlcurran.showcaseview.ShowcaseDrawer)>($r1);

        return;
    }
    private boolean canUpdateBitmap()
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        int $i0;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $i0 = virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: int getMeasuredHeight()>();

        if $i0 <= 0 goto label1;

        $i0 = virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: int getMeasuredWidth()>();

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    private void clearBitmap()
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        boolean $z0;
        android.graphics.Bitmap $r1;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.graphics.Bitmap bitmapBuffer>;

        if $r1 == null goto label1;

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.graphics.Bitmap bitmapBuffer>;

        $z0 = virtualinvoke $r1.<android.graphics.Bitmap: boolean isRecycled()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.graphics.Bitmap bitmapBuffer>;

        virtualinvoke $r1.<android.graphics.Bitmap: void recycle()>();

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.graphics.Bitmap bitmapBuffer> = null;

     label1:
        return;
    }
    private void fadeInShowcase()
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        com.github.amlcurran.showcaseview.AnimationFactory $r1;
        com.github.amlcurran.showcaseview.ShowcaseView$3 $r2;
        long $l0;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.AnimationFactory animationFactory>;

        $l0 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: long fadeInMillis>;

        $r2 = new com.github.amlcurran.showcaseview.ShowcaseView$3;

        specialinvoke $r2.<com.github.amlcurran.showcaseview.ShowcaseView$3: void <init>(com.github.amlcurran.showcaseview.ShowcaseView)>(r0);

        interfaceinvoke $r1.<com.github.amlcurran.showcaseview.AnimationFactory: void fadeInView(android.view.View,long,com.github.amlcurran.showcaseview.AnimationFactory$AnimationStartListener)>(r0, $l0, $r2);

        return;
    }
    private void fadeOutShowcase()
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        com.github.amlcurran.showcaseview.AnimationFactory $r1;
        com.github.amlcurran.showcaseview.ShowcaseView$2 $r2;
        long $l0;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.AnimationFactory animationFactory>;

        $l0 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: long fadeOutMillis>;

        $r2 = new com.github.amlcurran.showcaseview.ShowcaseView$2;

        specialinvoke $r2.<com.github.amlcurran.showcaseview.ShowcaseView$2: void <init>(com.github.amlcurran.showcaseview.ShowcaseView)>(r0);

        interfaceinvoke $r1.<com.github.amlcurran.showcaseview.AnimationFactory: void fadeOutView(android.view.View,long,com.github.amlcurran.showcaseview.AnimationFactory$AnimationEndListener)>(r0, $l0, $r2);

        return;
    }
    private boolean hasShot()
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        boolean $z0;
        com.github.amlcurran.showcaseview.ShotStateStore $r1;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.ShotStateStore shotStateStore>;

        $z0 = virtualinvoke $r1.<com.github.amlcurran.showcaseview.ShotStateStore: boolean hasShot()>();

        return $z0;
    }
    private boolean haveBoundsChanged()
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        int $i0, $i1;
        android.graphics.Bitmap $r1;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $i0 = virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: int getMeasuredWidth()>();

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.graphics.Bitmap bitmapBuffer>;

        $i1 = virtualinvoke $r1.<android.graphics.Bitmap: int getWidth()>();

        if $i0 != $i1 goto label1;

        $i0 = virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: int getMeasuredHeight()>();

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.graphics.Bitmap bitmapBuffer>;

        $i1 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();

        if $i0 == $i1 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    private void hideImmediate()
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean isShowing> = 0;

        virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: void setVisibility(int)>(8);

        return;
    }
    private void init()
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        int i0;
        android.widget.Button $r1;
        android.view.ViewParent $r2;
        android.content.res.Resources $r3;
        float $f0;
        android.view.ViewGroup$LayoutParams $r4;
        android.widget.RelativeLayout$LayoutParams r5;
        boolean $z0;
        android.view.View$OnClickListener $r6;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: void setOnTouchListener(android.view.View$OnTouchListener)>(r0);

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.widget.Button mEndButton>;

        $r2 = virtualinvoke $r1.<android.widget.Button: android.view.ViewParent getParent()>();

        if $r2 != null goto label2;

        $r3 = virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.content.res.Resources getResources()>();

        i0 = <com.github.amlcurran.showcaseview.R$dimen: int button_margin>;

        $f0 = virtualinvoke $r3.<android.content.res.Resources: float getDimension(int)>(i0);

        i0 = (int) $f0;

        $r4 = virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>();

        r5 = (android.widget.RelativeLayout$LayoutParams) $r4;

        virtualinvoke r5.<android.widget.RelativeLayout$LayoutParams: void addRule(int)>(12);

        virtualinvoke r5.<android.widget.RelativeLayout$LayoutParams: void addRule(int)>(11);

        virtualinvoke r5.<android.widget.RelativeLayout$LayoutParams: void setMargins(int,int,int,int)>(i0, i0, i0, i0);

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.widget.Button mEndButton>;

        virtualinvoke $r1.<android.widget.Button: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r5);

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.widget.Button mEndButton>;

        virtualinvoke $r1.<android.widget.Button: void setText(int)>(17039370);

        $z0 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean hasCustomClickListener>;

        if $z0 != 0 goto label1;

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.widget.Button mEndButton>;

        $r6 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.view.View$OnClickListener hideOnClickListener>;

        virtualinvoke $r1.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($r6);

     label1:
        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.widget.Button mEndButton>;

        virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: void addView(android.view.View)>($r1);

     label2:
        return;
    }
    private static void insertShowcaseView(com.github.amlcurran.showcaseview.ShowcaseView, android.view.ViewGroup, int)
    {
        com.github.amlcurran.showcaseview.ShowcaseView $r0;
        android.view.ViewGroup $r1;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 := @parameter1: android.view.ViewGroup;

        $i0 := @parameter2: int;

        virtualinvoke $r1.<android.view.ViewGroup: void addView(android.view.View,int)>($r0, $i0);

        $z0 = specialinvoke $r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean hasShot()>();

        if $z0 != 0 goto label1;

        virtualinvoke $r0.<com.github.amlcurran.showcaseview.ShowcaseView: void show()>();

        return;

     label1:
        specialinvoke $r0.<com.github.amlcurran.showcaseview.ShowcaseView: void hideImmediate()>();

        return;
    }
    private void recalculateText()
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        com.github.amlcurran.showcaseview.ShowcaseAreaCalculator $r1;
        int $i0, $i1;
        float $f0, $f1;
        com.github.amlcurran.showcaseview.ShowcaseDrawer $r2;
        boolean $z0;
        android.graphics.Rect $r3;
        com.github.amlcurran.showcaseview.TextDrawer $r4;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.ShowcaseAreaCalculator showcaseAreaCalculator>;

        $i0 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: int showcaseX>;

        $f0 = (float) $i0;

        $i0 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: int showcaseY>;

        $f1 = (float) $i0;

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.ShowcaseDrawer showcaseDrawer>;

        $z0 = virtualinvoke $r1.<com.github.amlcurran.showcaseview.ShowcaseAreaCalculator: boolean calculateShowcaseRect(float,float,com.github.amlcurran.showcaseview.ShowcaseDrawer)>($f0, $f1, $r2);

        if $z0 != 0 goto label1;

        $z0 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean hasAlteredText>;

        if $z0 == 0 goto label5;

     label1:
        $z0 = 1;

     label2:
        if $z0 == 0 goto label4;

        $z0 = virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean hasShowcaseView()>();

        if $z0 == 0 goto label6;

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.ShowcaseAreaCalculator showcaseAreaCalculator>;

        $r3 = virtualinvoke $r1.<com.github.amlcurran.showcaseview.ShowcaseAreaCalculator: android.graphics.Rect getShowcaseRect()>();

     label3:
        $r4 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.TextDrawer textDrawer>;

        $i0 = virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: int getMeasuredWidth()>();

        $i1 = virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: int getMeasuredHeight()>();

        $z0 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean shouldCentreText>;

        virtualinvoke $r4.<com.github.amlcurran.showcaseview.TextDrawer: void calculateTextPosition(int,int,boolean,android.graphics.Rect)>($i0, $i1, $z0, $r3);

     label4:
        r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean hasAlteredText> = 0;

        return;

     label5:
        $z0 = 0;

        goto label2;

     label6:
        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        goto label3;
    }
    private void setBlockAllTouches(boolean)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        boolean $z0;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $z0 := @parameter0: boolean;

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean blockAllTouches> = $z0;

        return;
    }
    private void setContentTextPaint(android.text.TextPaint)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        android.text.TextPaint $r1;
        com.github.amlcurran.showcaseview.TextDrawer $r2;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 := @parameter0: android.text.TextPaint;

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.TextDrawer textDrawer>;

        virtualinvoke $r2.<com.github.amlcurran.showcaseview.TextDrawer: void setContentPaint(android.text.TextPaint)>($r1);

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean hasAlteredText> = 1;

        virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: void invalidate()>();

        return;
    }
    private void setContentTitlePaint(android.text.TextPaint)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        android.text.TextPaint $r1;
        com.github.amlcurran.showcaseview.TextDrawer $r2;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 := @parameter0: android.text.TextPaint;

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.TextDrawer textDrawer>;

        virtualinvoke $r2.<com.github.amlcurran.showcaseview.TextDrawer: void setTitlePaint(android.text.TextPaint)>($r1);

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean hasAlteredText> = 1;

        virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: void invalidate()>();

        return;
    }
    private void setEndButton(android.widget.Button)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        android.widget.Button $r1, $r3;
        android.view.ViewGroup$LayoutParams $r2;
        android.widget.RelativeLayout$LayoutParams r4;
        android.view.View$OnClickListener $r5;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 := @parameter0: android.widget.Button;

        $r3 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.widget.Button mEndButton>;

        $r2 = virtualinvoke $r3.<android.widget.Button: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.widget.RelativeLayout$LayoutParams) $r2;

        $r3 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.widget.Button mEndButton>;

        virtualinvoke $r3.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>(null);

        $r3 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.widget.Button mEndButton>;

        virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: void removeView(android.view.View)>($r3);

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.widget.Button mEndButton> = $r1;

        $r5 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.view.View$OnClickListener hideOnClickListener>;

        virtualinvoke $r1.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($r5);

        virtualinvoke $r1.<android.widget.Button: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r4);

        virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: void addView(android.view.View)>($r1);

        return;
    }
    private void setFadeDurations(long, long)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        long $l0, $l1;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: long fadeInMillis> = $l0;

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: long fadeOutMillis> = $l1;

        return;
    }
    private void setScaleMultiplier(float)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        float $f0;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $f0 := @parameter0: float;

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: float scaleMultiplier> = $f0;

        return;
    }
    private void setShowcaseDrawer(com.github.amlcurran.showcaseview.ShowcaseDrawer)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        com.github.amlcurran.showcaseview.ShowcaseDrawer $r1;
        int $i0;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 := @parameter0: com.github.amlcurran.showcaseview.ShowcaseDrawer;

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.ShowcaseDrawer showcaseDrawer> = $r1;

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.ShowcaseDrawer showcaseDrawer>;

        $i0 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: int backgroundColor>;

        interfaceinvoke $r1.<com.github.amlcurran.showcaseview.ShowcaseDrawer: void setBackgroundColour(int)>($i0);

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.ShowcaseDrawer showcaseDrawer>;

        $i0 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: int showcaseColor>;

        interfaceinvoke $r1.<com.github.amlcurran.showcaseview.ShowcaseDrawer: void setShowcaseColour(int)>($i0);

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean hasAlteredText> = 1;

        virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: void invalidate()>();

        return;
    }
    private void setSingleShot(long)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        long $l0;
        com.github.amlcurran.showcaseview.ShotStateStore $r1;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $l0 := @parameter0: long;

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.ShotStateStore shotStateStore>;

        virtualinvoke $r1.<com.github.amlcurran.showcaseview.ShotStateStore: void setSingleShot(long)>($l0);

        return;
    }
    private void tintButton(int, boolean)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        int $i0;
        boolean $z0;
        android.graphics.PorterDuff$Mode $r1;
        android.widget.Button $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.widget.Button mEndButton>;

        $r3 = virtualinvoke $r2.<android.widget.Button: android.graphics.drawable.Drawable getBackground()>();

        $r1 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode MULTIPLY>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r1);

        return;

     label1:
        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.widget.Button mEndButton>;

        $r3 = virtualinvoke $r2.<android.widget.Button: android.graphics.drawable.Drawable getBackground()>();

        $i0 = <com.github.amlcurran.showcaseview.ShowcaseView: int HOLO_BLUE>;

        $r1 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode MULTIPLY>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r1);

        return;
    }
    private void updateBitmap()
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        android.graphics.Bitmap$Config $r1;
        android.graphics.Bitmap $r2;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.graphics.Bitmap bitmapBuffer>;

        if $r2 == null goto label1;

        $z0 = specialinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean haveBoundsChanged()>();

        if $z0 == 0 goto label3;

     label1:
        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.graphics.Bitmap bitmapBuffer>;

        if $r2 == null goto label2;

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.graphics.Bitmap bitmapBuffer>;

        virtualinvoke $r2.<android.graphics.Bitmap: void recycle()>();

     label2:
        $i0 = virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: int getMeasuredWidth()>();

        $i1 = virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: int getMeasuredHeight()>();

        $r1 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r1);

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.graphics.Bitmap bitmapBuffer> = $r2;

     label3:
        return;
    }
    private void updateStyle(android.content.res.TypedArray, boolean)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        android.content.res.TypedArray $r1;
        boolean $z0, $z1;
        int $i0, $i1, $i2;
        java.lang.String $r2, r3;
        android.content.res.Resources $r4;
        com.github.amlcurran.showcaseview.ShowcaseDrawer $r5;
        android.widget.Button $r6;
        com.github.amlcurran.showcaseview.TextDrawer $r7;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 := @parameter0: android.content.res.TypedArray;

        $z0 := @parameter1: boolean;

        $i0 = <com.github.amlcurran.showcaseview.R$styleable: int ShowcaseView_sv_backgroundColor>;

        $i1 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>(128, 80, 80, 80);

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getColor(int,int)>($i0, $i1);

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: int backgroundColor> = $i0;

        $i0 = <com.github.amlcurran.showcaseview.R$styleable: int ShowcaseView_sv_showcaseColor>;

        $i1 = <com.github.amlcurran.showcaseview.ShowcaseView: int HOLO_BLUE>;

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getColor(int,int)>($i0, $i1);

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: int showcaseColor> = $i0;

        $i0 = <com.github.amlcurran.showcaseview.R$styleable: int ShowcaseView_sv_buttonText>;

        $r2 = virtualinvoke $r1.<android.content.res.TypedArray: java.lang.String getString(int)>($i0);

        r3 = $r2;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z1 == 0 goto label1;

        $r4 = virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.content.res.Resources getResources()>();

        r3 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039370);

     label1:
        $i0 = <com.github.amlcurran.showcaseview.R$styleable: int ShowcaseView_sv_tintButtonColor>;

        $z1 = virtualinvoke $r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 1);

        $i0 = <com.github.amlcurran.showcaseview.R$styleable: int ShowcaseView_sv_titleTextAppearance>;

        $i1 = <com.github.amlcurran.showcaseview.R$style: int TextAppearance_ShowcaseView_Title>;

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getResourceId(int,int)>($i0, $i1);

        $i1 = <com.github.amlcurran.showcaseview.R$styleable: int ShowcaseView_sv_detailTextAppearance>;

        $i2 = <com.github.amlcurran.showcaseview.R$style: int TextAppearance_ShowcaseView_Detail>;

        $i1 = virtualinvoke $r1.<android.content.res.TypedArray: int getResourceId(int,int)>($i1, $i2);

        virtualinvoke $r1.<android.content.res.TypedArray: void recycle()>();

        $r5 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.ShowcaseDrawer showcaseDrawer>;

        $i2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: int showcaseColor>;

        interfaceinvoke $r5.<com.github.amlcurran.showcaseview.ShowcaseDrawer: void setShowcaseColour(int)>($i2);

        $r5 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.ShowcaseDrawer showcaseDrawer>;

        $i2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: int backgroundColor>;

        interfaceinvoke $r5.<com.github.amlcurran.showcaseview.ShowcaseDrawer: void setBackgroundColour(int)>($i2);

        $i2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: int showcaseColor>;

        specialinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: void tintButton(int,boolean)>($i2, $z1);

        $r6 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.widget.Button mEndButton>;

        virtualinvoke $r6.<android.widget.Button: void setText(java.lang.CharSequence)>(r3);

        $r7 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.TextDrawer textDrawer>;

        virtualinvoke $r7.<com.github.amlcurran.showcaseview.TextDrawer: void setTitleStyling(int)>($i0);

        $r7 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.TextDrawer textDrawer>;

        virtualinvoke $r7.<com.github.amlcurran.showcaseview.TextDrawer: void setDetailStyling(int)>($i1);

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean hasAlteredText> = 1;

        if $z0 == 0 goto label2;

        virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: void invalidate()>();

     label2:
        return;
    }
    protected void dispatchDraw(android.graphics.Canvas)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        android.graphics.Canvas $r1;
        float $f0, $f1, $f2;
        boolean $z0;
        int $i0;
        com.github.amlcurran.showcaseview.ShotStateStore $r2;
        android.graphics.Bitmap $r3;
        com.github.amlcurran.showcaseview.ShowcaseDrawer $r4;
        com.github.amlcurran.showcaseview.TextDrawer $r5;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 := @parameter0: android.graphics.Canvas;

        $i0 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: int showcaseX>;

        if $i0 < 0 goto label1;

        $i0 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: int showcaseY>;

        if $i0 < 0 goto label1;

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.ShotStateStore shotStateStore>;

        $z0 = virtualinvoke $r2.<com.github.amlcurran.showcaseview.ShotStateStore: boolean hasShot()>();

        if $z0 != 0 goto label1;

        $r3 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.graphics.Bitmap bitmapBuffer>;

        if $r3 != null goto label2;

     label1:
        specialinvoke r0.<android.widget.RelativeLayout: void dispatchDraw(android.graphics.Canvas)>($r1);

        return;

     label2:
        $r4 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.ShowcaseDrawer showcaseDrawer>;

        $r3 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.graphics.Bitmap bitmapBuffer>;

        interfaceinvoke $r4.<com.github.amlcurran.showcaseview.ShowcaseDrawer: void erase(android.graphics.Bitmap)>($r3);

        $z0 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean hasNoTarget>;

        if $z0 != 0 goto label3;

        $r4 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.ShowcaseDrawer showcaseDrawer>;

        $r3 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.graphics.Bitmap bitmapBuffer>;

        $i0 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: int showcaseX>;

        $f1 = (float) $i0;

        $i0 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: int showcaseY>;

        $f2 = (float) $i0;

        $f0 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: float scaleMultiplier>;

        interfaceinvoke $r4.<com.github.amlcurran.showcaseview.ShowcaseDrawer: void drawShowcase(android.graphics.Bitmap,float,float,float)>($r3, $f1, $f2, $f0);

        $r4 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.ShowcaseDrawer showcaseDrawer>;

        $r3 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.graphics.Bitmap bitmapBuffer>;

        interfaceinvoke $r4.<com.github.amlcurran.showcaseview.ShowcaseDrawer: void drawToCanvas(android.graphics.Canvas,android.graphics.Bitmap)>($r1, $r3);

     label3:
        $r5 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.TextDrawer textDrawer>;

        virtualinvoke $r5.<com.github.amlcurran.showcaseview.TextDrawer: void draw(android.graphics.Canvas)>($r1);

        specialinvoke r0.<android.widget.RelativeLayout: void dispatchDraw(android.graphics.Canvas)>($r1);

        return;
    }
    public void forceTextPosition(int)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        int $i0;
        com.github.amlcurran.showcaseview.TextDrawer $r1;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $i0 := @parameter0: int;

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.TextDrawer textDrawer>;

        virtualinvoke $r1.<com.github.amlcurran.showcaseview.TextDrawer: void forceTextPosition(int)>($i0);

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean hasAlteredText> = 1;

        virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: void invalidate()>();

        return;
    }
    public int getShowcaseX()
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        int i0;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        i0 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: int showcaseX>;

        return i0;
    }
    public int getShowcaseY()
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        int i0;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        i0 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: int showcaseY>;

        return i0;
    }
    public boolean hasShowcaseView()
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $i0 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: int showcaseX>;

        if $i0 == 1000000 goto label1;

        $i0 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: int showcaseY>;

        if $i0 == 1000000 goto label1;

        $z0 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean hasNoTarget>;

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public void hide()
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        com.github.amlcurran.showcaseview.ShotStateStore $r1;
        com.github.amlcurran.showcaseview.OnShowcaseEventListener $r2;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.ShotStateStore shotStateStore>;

        virtualinvoke $r1.<com.github.amlcurran.showcaseview.ShotStateStore: void storeShot()>();

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.OnShowcaseEventListener mEventListener>;

        interfaceinvoke $r2.<com.github.amlcurran.showcaseview.OnShowcaseEventListener: void onShowcaseViewHide(com.github.amlcurran.showcaseview.ShowcaseView)>(r0);

        specialinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: void fadeOutShowcase()>();

        return;
    }
    public void hideButton()
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        android.widget.Button $r1;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.widget.Button mEndButton>;

        virtualinvoke $r1.<android.widget.Button: void setVisibility(int)>(8);

        return;
    }
    public boolean isShowing()
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        boolean z0;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        z0 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean isShowing>;

        return z0;
    }
    public boolean onTouch(android.view.View, android.view.MotionEvent)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        android.view.View $r1;
        android.view.MotionEvent $r2;
        boolean z0, $z1;
        com.github.amlcurran.showcaseview.OnShowcaseEventListener $r3;
        float $f0, $f1, $f2;
        int $i0;
        double $d0, $d1;
        com.github.amlcurran.showcaseview.ShowcaseDrawer $r4;
        byte $b1;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.MotionEvent;

        z0 = 1;

        $z1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean blockAllTouches>;

        if $z1 == 0 goto label1;

        $r3 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.OnShowcaseEventListener mEventListener>;

        interfaceinvoke $r3.<com.github.amlcurran.showcaseview.OnShowcaseEventListener: void onShowcaseViewTouchBlocked(android.view.MotionEvent)>($r2);

        return 1;

     label1:
        $f0 = virtualinvoke $r2.<android.view.MotionEvent: float getRawX()>();

        $i0 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: int showcaseX>;

        $f1 = (float) $i0;

        $f0 = $f0 - $f1;

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $f1 = virtualinvoke $r2.<android.view.MotionEvent: float getRawY()>();

        $i0 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: int showcaseY>;

        $f2 = (float) $i0;

        $f1 = $f1 - $f2;

        $f1 = staticinvoke <java.lang.Math: float abs(float)>($f1);

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 2.0);

        $d1 = (double) $f1;

        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>($d1, 2.0);

        $d0 = $d0 + $d1;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $i0 = virtualinvoke $r2.<android.view.MotionEvent: int getAction()>();

        if 1 != $i0 goto label2;

        $z1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean hideOnTouch>;

        if $z1 == 0 goto label2;

        $r4 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.ShowcaseDrawer showcaseDrawer>;

        $f0 = interfaceinvoke $r4.<com.github.amlcurran.showcaseview.ShowcaseDrawer: float getBlockedRadius()>();

        $d1 = (double) $f0;

        $b1 = $d0 cmpl $d1;

        if $b1 <= 0 goto label2;

        virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: void hide()>();

        return 1;

     label2:
        $z1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean blockTouches>;

        if $z1 == 0 goto label4;

        $r4 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.ShowcaseDrawer showcaseDrawer>;

        $f0 = interfaceinvoke $r4.<com.github.amlcurran.showcaseview.ShowcaseDrawer: float getBlockedRadius()>();

        $d1 = (double) $f0;

        $b1 = $d0 cmpl $d1;

        if $b1 <= 0 goto label4;

     label3:
        if z0 == 0 goto label5;

        $r3 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.OnShowcaseEventListener mEventListener>;

        interfaceinvoke $r3.<com.github.amlcurran.showcaseview.OnShowcaseEventListener: void onShowcaseViewTouchBlocked(android.view.MotionEvent)>($r2);

        return z0;

     label4:
        z0 = 0;

        goto label3;

     label5:
        return z0;
    }
    public void overrideButtonClick(android.view.View$OnClickListener)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        android.view.View$OnClickListener $r1;
        boolean $z0;
        com.github.amlcurran.showcaseview.ShotStateStore $r2;
        android.widget.Button $r3;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 := @parameter0: android.view.View$OnClickListener;

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.ShotStateStore shotStateStore>;

        $z0 = virtualinvoke $r2.<com.github.amlcurran.showcaseview.ShotStateStore: boolean hasShot()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.widget.Button mEndButton>;

        if $r3 == null goto label2;

        if $r1 == null goto label3;

        $r3 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.widget.Button mEndButton>;

        virtualinvoke $r3.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($r1);

     label2:
        r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean hasCustomClickListener> = 1;

        return;

     label3:
        $r3 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.widget.Button mEndButton>;

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.view.View$OnClickListener hideOnClickListener>;

        virtualinvoke $r3.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($r1);

        goto label2;
    }
    public void setBlocksTouches(boolean)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        boolean $z0;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $z0 := @parameter0: boolean;

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean blockTouches> = $z0;

        return;
    }
    public void setButtonPosition(android.widget.RelativeLayout$LayoutParams)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        android.widget.RelativeLayout$LayoutParams $r1;
        android.widget.Button $r2;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 := @parameter0: android.widget.RelativeLayout$LayoutParams;

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.widget.Button mEndButton>;

        virtualinvoke $r2.<android.widget.Button: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r1);

        return;
    }
    public void setButtonText(java.lang.CharSequence)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        java.lang.CharSequence $r1;
        android.widget.Button $r2;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.widget.Button mEndButton>;

        if $r2 == null goto label1;

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.widget.Button mEndButton>;

        virtualinvoke $r2.<android.widget.Button: void setText(java.lang.CharSequence)>($r1);

     label1:
        return;
    }
    public void setContentText(java.lang.CharSequence)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        java.lang.CharSequence $r1;
        com.github.amlcurran.showcaseview.TextDrawer $r2;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.TextDrawer textDrawer>;

        virtualinvoke $r2.<com.github.amlcurran.showcaseview.TextDrawer: void setContentText(java.lang.CharSequence)>($r1);

        return;
    }
    public void setContentTitle(java.lang.CharSequence)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        java.lang.CharSequence $r1;
        com.github.amlcurran.showcaseview.TextDrawer $r2;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.TextDrawer textDrawer>;

        virtualinvoke $r2.<com.github.amlcurran.showcaseview.TextDrawer: void setContentTitle(java.lang.CharSequence)>($r1);

        return;
    }
    public void setDetailTextAlignment(android.text.Layout$Alignment)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        android.text.Layout$Alignment $r1;
        com.github.amlcurran.showcaseview.TextDrawer $r2;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 := @parameter0: android.text.Layout$Alignment;

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.TextDrawer textDrawer>;

        virtualinvoke $r2.<com.github.amlcurran.showcaseview.TextDrawer: void setDetailTextAlignment(android.text.Layout$Alignment)>($r1);

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean hasAlteredText> = 1;

        virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: void invalidate()>();

        return;
    }
    public void setHideOnTouchOutside(boolean)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        boolean $z0;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $z0 := @parameter0: boolean;

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean hideOnTouch> = $z0;

        return;
    }
    public void setOnShowcaseEventListener(com.github.amlcurran.showcaseview.OnShowcaseEventListener)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        com.github.amlcurran.showcaseview.OnShowcaseEventListener $r1;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 := @parameter0: com.github.amlcurran.showcaseview.OnShowcaseEventListener;

        if $r1 == null goto label1;

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.OnShowcaseEventListener mEventListener> = $r1;

        return;

     label1:
        $r1 = <com.github.amlcurran.showcaseview.OnShowcaseEventListener: com.github.amlcurran.showcaseview.OnShowcaseEventListener NONE>;

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.OnShowcaseEventListener mEventListener> = $r1;

        return;
    }
    public void setShouldCentreText(boolean)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        boolean $z0;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $z0 := @parameter0: boolean;

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean shouldCentreText> = $z0;

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean hasAlteredText> = 1;

        virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: void invalidate()>();

        return;
    }
    public void setShowcase(com.github.amlcurran.showcaseview.targets.Target, boolean)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        com.github.amlcurran.showcaseview.targets.Target $r1;
        boolean $z0;
        com.github.amlcurran.showcaseview.ShowcaseView$1 $r2;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 := @parameter0: com.github.amlcurran.showcaseview.targets.Target;

        $z0 := @parameter1: boolean;

        $r2 = new com.github.amlcurran.showcaseview.ShowcaseView$1;

        specialinvoke $r2.<com.github.amlcurran.showcaseview.ShowcaseView$1: void <init>(com.github.amlcurran.showcaseview.ShowcaseView,com.github.amlcurran.showcaseview.targets.Target,boolean)>(r0, $r1, $z0);

        virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean postDelayed(java.lang.Runnable,long)>($r2, 100L);

        return;
    }
    void setShowcasePosition(int, int)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        int $i0, $i1, $i2;
        boolean $z0;
        com.github.amlcurran.showcaseview.ShotStateStore $r1;
        int[] $r2;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.ShotStateStore shotStateStore>;

        $z0 = virtualinvoke $r1.<com.github.amlcurran.showcaseview.ShotStateStore: boolean hasShot()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: int[] positionInWindow>;

        virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: void getLocationInWindow(int[])>($r2);

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: int[] positionInWindow>;

        $i2 = $r2[0];

        $i0 = $i0 - $i2;

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: int showcaseX> = $i0;

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: int[] positionInWindow>;

        $i0 = $r2[1];

        $i0 = $i1 - $i0;

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: int showcaseY> = $i0;

        specialinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: void recalculateText()>();

        virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: void invalidate()>();

        return;
    }
    void setShowcasePosition(android.graphics.Point)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        android.graphics.Point $r1;
        int $i0, $i1;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 := @parameter0: android.graphics.Point;

        $i0 = $r1.<android.graphics.Point: int x>;

        $i1 = $r1.<android.graphics.Point: int y>;

        virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: void setShowcasePosition(int,int)>($i0, $i1);

        return;
    }
    public void setShowcaseX(int)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        int $i0, $i1;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $i0 := @parameter0: int;

        $i1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: int showcaseY>;

        virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: void setShowcasePosition(int,int)>($i0, $i1);

        return;
    }
    public void setShowcaseY(int)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        int $i0, $i1;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $i0 := @parameter0: int;

        $i1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: int showcaseX>;

        virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: void setShowcasePosition(int,int)>($i1, $i0);

        return;
    }
    public void setStyle(int)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        int $i0;
        int[] $r1;
        android.content.Context $r2;
        android.content.res.TypedArray $r3;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.content.Context getContext()>();

        $r1 = <com.github.amlcurran.showcaseview.R$styleable: int[] ShowcaseView>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int,int[])>($i0, $r1);

        specialinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: void updateStyle(android.content.res.TypedArray,boolean)>($r3, 1);

        return;
    }
    public void setTarget(com.github.amlcurran.showcaseview.targets.Target)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        com.github.amlcurran.showcaseview.targets.Target $r1;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 := @parameter0: com.github.amlcurran.showcaseview.targets.Target;

        virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: void setShowcase(com.github.amlcurran.showcaseview.targets.Target,boolean)>($r1, 0);

        return;
    }
    public void setTitleTextAlignment(android.text.Layout$Alignment)
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        android.text.Layout$Alignment $r1;
        com.github.amlcurran.showcaseview.TextDrawer $r2;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 := @parameter0: android.text.Layout$Alignment;

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.TextDrawer textDrawer>;

        virtualinvoke $r2.<com.github.amlcurran.showcaseview.TextDrawer: void setTitleTextAlignment(android.text.Layout$Alignment)>($r1);

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean hasAlteredText> = 1;

        virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: void invalidate()>();

        return;
    }
    public void show()
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        boolean $z0;
        com.github.amlcurran.showcaseview.OnShowcaseEventListener $r1;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean isShowing> = 1;

        $z0 = specialinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: boolean canUpdateBitmap()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: void updateBitmap()>();

     label1:
        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.OnShowcaseEventListener mEventListener>;

        interfaceinvoke $r1.<com.github.amlcurran.showcaseview.OnShowcaseEventListener: void onShowcaseViewShow(com.github.amlcurran.showcaseview.ShowcaseView)>(r0);

        specialinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView: void fadeInShowcase()>();

        return;
    }
    public void showButton()
    {
        com.github.amlcurran.showcaseview.ShowcaseView r0;
        android.widget.Button $r1;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView;

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView: android.widget.Button mEndButton>;

        virtualinvoke $r1.<android.widget.Button: void setVisibility(int)>(0);

        return;
    }
