com.github.amlcurran.showcaseview.ShowcaseView$Builder extends java.lang.Object
private final android.app.Activity activity
private android.view.ViewGroup parent
private int parentIndex
private final com.github.amlcurran.showcaseview.ShowcaseView showcaseView
    public void <init>(android.app.Activity)
    {
        com.github.amlcurran.showcaseview.ShowcaseView$Builder r0;
        android.app.Activity $r1;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView$Builder;

        $r1 := @parameter0: android.app.Activity;

        specialinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: void <init>(android.app.Activity,boolean)>($r1, 0);

        return;
    }
    public void <init>(android.app.Activity, boolean)
    {
        com.github.amlcurran.showcaseview.ShowcaseView$Builder r0;
        android.app.Activity $r1;
        boolean $z0;
        com.github.amlcurran.showcaseview.targets.Target $r2;
        com.github.amlcurran.showcaseview.ShowcaseView $r3;
        android.view.View $r4;
        android.view.ViewGroup $r5;
        int $i0;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView$Builder;

        $r1 := @parameter0: android.app.Activity;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: android.app.Activity activity> = $r1;

        $r3 = new com.github.amlcurran.showcaseview.ShowcaseView;

        specialinvoke $r3.<com.github.amlcurran.showcaseview.ShowcaseView: void <init>(android.content.Context,boolean)>($r1, $z0);

        r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: com.github.amlcurran.showcaseview.ShowcaseView showcaseView> = $r3;

        $r3 = r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: com.github.amlcurran.showcaseview.ShowcaseView showcaseView>;

        $r2 = <com.github.amlcurran.showcaseview.targets.Target: com.github.amlcurran.showcaseview.targets.Target NONE>;

        virtualinvoke $r3.<com.github.amlcurran.showcaseview.ShowcaseView: void setTarget(com.github.amlcurran.showcaseview.targets.Target)>($r2);

        $r4 = virtualinvoke $r1.<android.app.Activity: android.view.View findViewById(int)>(16908290);

        $r5 = (android.view.ViewGroup) $r4;

        r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: android.view.ViewGroup parent> = $r5;

        $r5 = r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: android.view.ViewGroup parent>;

        $i0 = virtualinvoke $r5.<android.view.ViewGroup: int getChildCount()>();

        r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: int parentIndex> = $i0;

        return;
    }
    public com.github.amlcurran.showcaseview.ShowcaseView$Builder blockAllTouches()
    {
        com.github.amlcurran.showcaseview.ShowcaseView$Builder r0;
        com.github.amlcurran.showcaseview.ShowcaseView $r1;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView$Builder;

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: com.github.amlcurran.showcaseview.ShowcaseView showcaseView>;

        staticinvoke <com.github.amlcurran.showcaseview.ShowcaseView: void access$1400(com.github.amlcurran.showcaseview.ShowcaseView,boolean)>($r1, 1);

        return r0;
    }
    public com.github.amlcurran.showcaseview.ShowcaseView build()
    {
        com.github.amlcurran.showcaseview.ShowcaseView$Builder r0;
        android.view.ViewGroup $r1;
        int $i0;
        com.github.amlcurran.showcaseview.ShowcaseView $r2;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView$Builder;

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: com.github.amlcurran.showcaseview.ShowcaseView showcaseView>;

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: android.view.ViewGroup parent>;

        $i0 = r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: int parentIndex>;

        staticinvoke <com.github.amlcurran.showcaseview.ShowcaseView: void access$800(com.github.amlcurran.showcaseview.ShowcaseView,android.view.ViewGroup,int)>($r2, $r1, $i0);

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: com.github.amlcurran.showcaseview.ShowcaseView showcaseView>;

        return $r2;
    }
    public com.github.amlcurran.showcaseview.ShowcaseView$Builder doNotBlockTouches()
    {
        com.github.amlcurran.showcaseview.ShowcaseView$Builder r0;
        com.github.amlcurran.showcaseview.ShowcaseView $r1;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView$Builder;

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: com.github.amlcurran.showcaseview.ShowcaseView showcaseView>;

        virtualinvoke $r1.<com.github.amlcurran.showcaseview.ShowcaseView: void setBlocksTouches(boolean)>(0);

        return r0;
    }
    public com.github.amlcurran.showcaseview.ShowcaseView$Builder hideOnTouchOutside()
    {
        com.github.amlcurran.showcaseview.ShowcaseView$Builder r0;
        com.github.amlcurran.showcaseview.ShowcaseView $r1;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView$Builder;

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: com.github.amlcurran.showcaseview.ShowcaseView showcaseView>;

        virtualinvoke $r1.<com.github.amlcurran.showcaseview.ShowcaseView: void setBlocksTouches(boolean)>(1);

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: com.github.amlcurran.showcaseview.ShowcaseView showcaseView>;

        virtualinvoke $r1.<com.github.amlcurran.showcaseview.ShowcaseView: void setHideOnTouchOutside(boolean)>(1);

        return r0;
    }
    public com.github.amlcurran.showcaseview.ShowcaseView$Builder replaceEndButton(int)
    {
        com.github.amlcurran.showcaseview.ShowcaseView$Builder r0;
        int $i0;
        android.app.Activity $r1;
        android.view.LayoutInflater $r2;
        com.github.amlcurran.showcaseview.ShowcaseView $r3;
        android.view.View $r4;
        boolean $z0;
        java.lang.IllegalArgumentException $r5;
        android.widget.Button r6;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView$Builder;

        $i0 := @parameter0: int;

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: android.app.Activity activity>;

        $r2 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r1);

        $r3 = r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: com.github.amlcurran.showcaseview.ShowcaseView showcaseView>;

        $r4 = virtualinvoke $r2.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i0, $r3, 0);

        $z0 = $r4 instanceof android.widget.Button;

        if $z0 != 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Attempted to replace showcase button with a layout which isn\'t a button");

        throw $r5;

     label1:
        r6 = (android.widget.Button) $r4;

        r0 = virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: com.github.amlcurran.showcaseview.ShowcaseView$Builder replaceEndButton(android.widget.Button)>(r6);

        return r0;
    }
    public com.github.amlcurran.showcaseview.ShowcaseView$Builder replaceEndButton(android.widget.Button)
    {
        com.github.amlcurran.showcaseview.ShowcaseView$Builder r0;
        android.widget.Button $r1;
        com.github.amlcurran.showcaseview.ShowcaseView $r2;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView$Builder;

        $r1 := @parameter0: android.widget.Button;

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: com.github.amlcurran.showcaseview.ShowcaseView showcaseView>;

        staticinvoke <com.github.amlcurran.showcaseview.ShowcaseView: void access$1300(com.github.amlcurran.showcaseview.ShowcaseView,android.widget.Button)>($r2, $r1);

        return r0;
    }
    public com.github.amlcurran.showcaseview.ShowcaseView$Builder setContentText(int)
    {
        com.github.amlcurran.showcaseview.ShowcaseView$Builder r0;
        int $i0;
        android.app.Activity $r1;
        java.lang.String $r2;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView$Builder;

        $i0 := @parameter0: int;

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: android.app.Activity activity>;

        $r2 = virtualinvoke $r1.<android.app.Activity: java.lang.String getString(int)>($i0);

        r0 = virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: com.github.amlcurran.showcaseview.ShowcaseView$Builder setContentText(java.lang.CharSequence)>($r2);

        return r0;
    }
    public com.github.amlcurran.showcaseview.ShowcaseView$Builder setContentText(java.lang.CharSequence)
    {
        com.github.amlcurran.showcaseview.ShowcaseView$Builder r0;
        java.lang.CharSequence $r1;
        com.github.amlcurran.showcaseview.ShowcaseView $r2;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView$Builder;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: com.github.amlcurran.showcaseview.ShowcaseView showcaseView>;

        virtualinvoke $r2.<com.github.amlcurran.showcaseview.ShowcaseView: void setContentText(java.lang.CharSequence)>($r1);

        return r0;
    }
    public com.github.amlcurran.showcaseview.ShowcaseView$Builder setContentTextPaint(android.text.TextPaint)
    {
        com.github.amlcurran.showcaseview.ShowcaseView$Builder r0;
        android.text.TextPaint $r1;
        com.github.amlcurran.showcaseview.ShowcaseView $r2;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView$Builder;

        $r1 := @parameter0: android.text.TextPaint;

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: com.github.amlcurran.showcaseview.ShowcaseView showcaseView>;

        staticinvoke <com.github.amlcurran.showcaseview.ShowcaseView: void access$1100(com.github.amlcurran.showcaseview.ShowcaseView,android.text.TextPaint)>($r2, $r1);

        return r0;
    }
    public com.github.amlcurran.showcaseview.ShowcaseView$Builder setContentTitle(int)
    {
        com.github.amlcurran.showcaseview.ShowcaseView$Builder r0;
        int $i0;
        android.app.Activity $r1;
        java.lang.String $r2;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView$Builder;

        $i0 := @parameter0: int;

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: android.app.Activity activity>;

        $r2 = virtualinvoke $r1.<android.app.Activity: java.lang.String getString(int)>($i0);

        r0 = virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: com.github.amlcurran.showcaseview.ShowcaseView$Builder setContentTitle(java.lang.CharSequence)>($r2);

        return r0;
    }
    public com.github.amlcurran.showcaseview.ShowcaseView$Builder setContentTitle(java.lang.CharSequence)
    {
        com.github.amlcurran.showcaseview.ShowcaseView$Builder r0;
        java.lang.CharSequence $r1;
        com.github.amlcurran.showcaseview.ShowcaseView $r2;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView$Builder;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: com.github.amlcurran.showcaseview.ShowcaseView showcaseView>;

        virtualinvoke $r2.<com.github.amlcurran.showcaseview.ShowcaseView: void setContentTitle(java.lang.CharSequence)>($r1);

        return r0;
    }
    public com.github.amlcurran.showcaseview.ShowcaseView$Builder setContentTitlePaint(android.text.TextPaint)
    {
        com.github.amlcurran.showcaseview.ShowcaseView$Builder r0;
        android.text.TextPaint $r1;
        com.github.amlcurran.showcaseview.ShowcaseView $r2;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView$Builder;

        $r1 := @parameter0: android.text.TextPaint;

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: com.github.amlcurran.showcaseview.ShowcaseView showcaseView>;

        staticinvoke <com.github.amlcurran.showcaseview.ShowcaseView: void access$1200(com.github.amlcurran.showcaseview.ShowcaseView,android.text.TextPaint)>($r2, $r1);

        return r0;
    }
    public com.github.amlcurran.showcaseview.ShowcaseView$Builder setOnClickListener(android.view.View$OnClickListener)
    {
        com.github.amlcurran.showcaseview.ShowcaseView$Builder r0;
        android.view.View$OnClickListener $r1;
        com.github.amlcurran.showcaseview.ShowcaseView $r2;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView$Builder;

        $r1 := @parameter0: android.view.View$OnClickListener;

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: com.github.amlcurran.showcaseview.ShowcaseView showcaseView>;

        virtualinvoke $r2.<com.github.amlcurran.showcaseview.ShowcaseView: void overrideButtonClick(android.view.View$OnClickListener)>($r1);

        return r0;
    }
    public com.github.amlcurran.showcaseview.ShowcaseView$Builder setParent(android.view.ViewGroup, int)
    {
        com.github.amlcurran.showcaseview.ShowcaseView$Builder r0;
        android.view.ViewGroup $r1;
        int $i0;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView$Builder;

        $r1 := @parameter0: android.view.ViewGroup;

        $i0 := @parameter1: int;

        r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: android.view.ViewGroup parent> = $r1;

        r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: int parentIndex> = $i0;

        return r0;
    }
    public com.github.amlcurran.showcaseview.ShowcaseView$Builder setShowcaseDrawer(com.github.amlcurran.showcaseview.ShowcaseDrawer)
    {
        com.github.amlcurran.showcaseview.ShowcaseView$Builder r0;
        com.github.amlcurran.showcaseview.ShowcaseDrawer $r1;
        com.github.amlcurran.showcaseview.ShowcaseView $r2;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView$Builder;

        $r1 := @parameter0: com.github.amlcurran.showcaseview.ShowcaseDrawer;

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: com.github.amlcurran.showcaseview.ShowcaseView showcaseView>;

        staticinvoke <com.github.amlcurran.showcaseview.ShowcaseView: void access$900(com.github.amlcurran.showcaseview.ShowcaseView,com.github.amlcurran.showcaseview.ShowcaseDrawer)>($r2, $r1);

        return r0;
    }
    public com.github.amlcurran.showcaseview.ShowcaseView$Builder setShowcaseEventListener(com.github.amlcurran.showcaseview.OnShowcaseEventListener)
    {
        com.github.amlcurran.showcaseview.ShowcaseView$Builder r0;
        com.github.amlcurran.showcaseview.OnShowcaseEventListener $r1;
        com.github.amlcurran.showcaseview.ShowcaseView $r2;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView$Builder;

        $r1 := @parameter0: com.github.amlcurran.showcaseview.OnShowcaseEventListener;

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: com.github.amlcurran.showcaseview.ShowcaseView showcaseView>;

        virtualinvoke $r2.<com.github.amlcurran.showcaseview.ShowcaseView: void setOnShowcaseEventListener(com.github.amlcurran.showcaseview.OnShowcaseEventListener)>($r1);

        return r0;
    }
    public com.github.amlcurran.showcaseview.ShowcaseView$Builder setStyle(int)
    {
        com.github.amlcurran.showcaseview.ShowcaseView$Builder r0;
        int $i0;
        com.github.amlcurran.showcaseview.ShowcaseView $r1;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView$Builder;

        $i0 := @parameter0: int;

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: com.github.amlcurran.showcaseview.ShowcaseView showcaseView>;

        virtualinvoke $r1.<com.github.amlcurran.showcaseview.ShowcaseView: void setStyle(int)>($i0);

        return r0;
    }
    public com.github.amlcurran.showcaseview.ShowcaseView$Builder setTarget(com.github.amlcurran.showcaseview.targets.Target)
    {
        com.github.amlcurran.showcaseview.ShowcaseView$Builder r0;
        com.github.amlcurran.showcaseview.targets.Target $r1;
        com.github.amlcurran.showcaseview.ShowcaseView $r2;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView$Builder;

        $r1 := @parameter0: com.github.amlcurran.showcaseview.targets.Target;

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: com.github.amlcurran.showcaseview.ShowcaseView showcaseView>;

        virtualinvoke $r2.<com.github.amlcurran.showcaseview.ShowcaseView: void setTarget(com.github.amlcurran.showcaseview.targets.Target)>($r1);

        return r0;
    }
    public com.github.amlcurran.showcaseview.ShowcaseView$Builder singleShot(long)
    {
        com.github.amlcurran.showcaseview.ShowcaseView$Builder r0;
        long $l0;
        com.github.amlcurran.showcaseview.ShowcaseView $r1;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView$Builder;

        $l0 := @parameter0: long;

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: com.github.amlcurran.showcaseview.ShowcaseView showcaseView>;

        staticinvoke <com.github.amlcurran.showcaseview.ShowcaseView: void access$1000(com.github.amlcurran.showcaseview.ShowcaseView,long)>($r1, $l0);

        return r0;
    }
    public com.github.amlcurran.showcaseview.ShowcaseView$Builder useDecorViewAsParent()
    {
        com.github.amlcurran.showcaseview.ShowcaseView$Builder r0;
        android.app.Activity $r1;
        android.view.Window $r2;
        android.view.View $r3;
        android.view.ViewGroup $r4;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView$Builder;

        $r1 = r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: android.app.Activity activity>;

        $r2 = virtualinvoke $r1.<android.app.Activity: android.view.Window getWindow()>();

        $r3 = virtualinvoke $r2.<android.view.Window: android.view.View getDecorView()>();

        $r4 = (android.view.ViewGroup) $r3;

        r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: android.view.ViewGroup parent> = $r4;

        r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: int parentIndex> = -1;

        return r0;
    }
    public com.github.amlcurran.showcaseview.ShowcaseView$Builder withHoloShowcase()
    {
        com.github.amlcurran.showcaseview.ShowcaseView$Builder r0;
        com.github.amlcurran.showcaseview.StandardShowcaseDrawer $r1;
        android.app.Activity $r2;
        android.content.res.Resources $r3;
        android.content.res.Resources$Theme $r4;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView$Builder;

        $r1 = new com.github.amlcurran.showcaseview.StandardShowcaseDrawer;

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: android.app.Activity activity>;

        $r3 = virtualinvoke $r2.<android.app.Activity: android.content.res.Resources getResources()>();

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: android.app.Activity activity>;

        $r4 = virtualinvoke $r2.<android.app.Activity: android.content.res.Resources$Theme getTheme()>();

        specialinvoke $r1.<com.github.amlcurran.showcaseview.StandardShowcaseDrawer: void <init>(android.content.res.Resources,android.content.res.Resources$Theme)>($r3, $r4);

        r0 = virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: com.github.amlcurran.showcaseview.ShowcaseView$Builder setShowcaseDrawer(com.github.amlcurran.showcaseview.ShowcaseDrawer)>($r1);

        return r0;
    }
    public com.github.amlcurran.showcaseview.ShowcaseView$Builder withMaterialShowcase()
    {
        com.github.amlcurran.showcaseview.ShowcaseView$Builder r0;
        com.github.amlcurran.showcaseview.MaterialShowcaseDrawer $r1;
        android.app.Activity $r2;
        android.content.res.Resources $r3;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView$Builder;

        $r1 = new com.github.amlcurran.showcaseview.MaterialShowcaseDrawer;

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: android.app.Activity activity>;

        $r3 = virtualinvoke $r2.<android.app.Activity: android.content.res.Resources getResources()>();

        specialinvoke $r1.<com.github.amlcurran.showcaseview.MaterialShowcaseDrawer: void <init>(android.content.res.Resources)>($r3);

        r0 = virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: com.github.amlcurran.showcaseview.ShowcaseView$Builder setShowcaseDrawer(com.github.amlcurran.showcaseview.ShowcaseDrawer)>($r1);

        return r0;
    }
    public com.github.amlcurran.showcaseview.ShowcaseView$Builder withNewStyleShowcase()
    {
        com.github.amlcurran.showcaseview.ShowcaseView$Builder r0;
        com.github.amlcurran.showcaseview.NewShowcaseDrawer $r1;
        android.app.Activity $r2;
        android.content.res.Resources $r3;
        android.content.res.Resources$Theme $r4;

        r0 := @this: com.github.amlcurran.showcaseview.ShowcaseView$Builder;

        $r1 = new com.github.amlcurran.showcaseview.NewShowcaseDrawer;

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: android.app.Activity activity>;

        $r3 = virtualinvoke $r2.<android.app.Activity: android.content.res.Resources getResources()>();

        $r2 = r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: android.app.Activity activity>;

        $r4 = virtualinvoke $r2.<android.app.Activity: android.content.res.Resources$Theme getTheme()>();

        specialinvoke $r1.<com.github.amlcurran.showcaseview.NewShowcaseDrawer: void <init>(android.content.res.Resources,android.content.res.Resources$Theme)>($r3, $r4);

        r0 = virtualinvoke r0.<com.github.amlcurran.showcaseview.ShowcaseView$Builder: com.github.amlcurran.showcaseview.ShowcaseView$Builder setShowcaseDrawer(com.github.amlcurran.showcaseview.ShowcaseDrawer)>($r1);

        return r0;
    }
