com.fsck.k9.ui.crypto.MessageCryptoHelper$6 extends org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource
final com.fsck.k9.ui.crypto.MessageCryptoHelper this$0
    void <init>(com.fsck.k9.ui.crypto.MessageCryptoHelper)
    {
        com.fsck.k9.ui.crypto.MessageCryptoHelper$6 r0;
        com.fsck.k9.ui.crypto.MessageCryptoHelper $r1;

        r0 := @this: com.fsck.k9.ui.crypto.MessageCryptoHelper$6;

        $r1 := @parameter0: com.fsck.k9.ui.crypto.MessageCryptoHelper;

        r0.<com.fsck.k9.ui.crypto.MessageCryptoHelper$6: com.fsck.k9.ui.crypto.MessageCryptoHelper this$0> = $r1;

        specialinvoke r0.<org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource: void <init>()>();

        return;
    }
    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        com.fsck.k9.ui.crypto.MessageCryptoHelper$6 r0;
        java.io.OutputStream $r1;
        com.fsck.k9.mail.MessagingException r2;
        com.fsck.k9.ui.crypto.MessageCryptoHelper $r3;
        com.fsck.k9.ui.crypto.MessageCryptoHelper$CryptoPart $r4;
        com.fsck.k9.mail.Part $r5;
        com.fsck.k9.mail.Body $r6;
        com.fsck.k9.mail.Multipart r7;
        com.fsck.k9.mail.BodyPart $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r10;

        r0 := @this: com.fsck.k9.ui.crypto.MessageCryptoHelper$6;

        $r1 := @parameter0: java.io.OutputStream;

        $r3 = r0.<com.fsck.k9.ui.crypto.MessageCryptoHelper$6: com.fsck.k9.ui.crypto.MessageCryptoHelper this$0>;

     label1:
        $r4 = staticinvoke <com.fsck.k9.ui.crypto.MessageCryptoHelper: com.fsck.k9.ui.crypto.MessageCryptoHelper$CryptoPart access$700(com.fsck.k9.ui.crypto.MessageCryptoHelper)>($r3);

     label2:
        $r5 = $r4.<com.fsck.k9.ui.crypto.MessageCryptoHelper$CryptoPart: com.fsck.k9.mail.Part part>;

     label3:
        $r6 = interfaceinvoke $r5.<com.fsck.k9.mail.Part: com.fsck.k9.mail.Body getBody()>();

     label4:
        r7 = (com.fsck.k9.mail.Multipart) $r6;

     label5:
        $r8 = virtualinvoke r7.<com.fsck.k9.mail.Multipart: com.fsck.k9.mail.BodyPart getBodyPart(int)>(0);

     label6:
        $r9 = new java.lang.StringBuilder;

     label7:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("signed data type: ");

        $r10 = virtualinvoke $r8.<com.fsck.k9.mail.BodyPart: java.lang.String getMimeType()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("k9", $r10);

        virtualinvoke $r8.<com.fsck.k9.mail.BodyPart: void writeTo(java.io.OutputStream)>($r1);

     label8:
        return;

     label9:
        r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("k9", "Exception while writing message to crypto provider", r2);

        return;

        catch com.fsck.k9.mail.MessagingException from label1 to label2 with label9;
        catch com.fsck.k9.mail.MessagingException from label3 to label4 with label9;
        catch com.fsck.k9.mail.MessagingException from label5 to label6 with label9;
        catch com.fsck.k9.mail.MessagingException from label7 to label8 with label9;
    }
