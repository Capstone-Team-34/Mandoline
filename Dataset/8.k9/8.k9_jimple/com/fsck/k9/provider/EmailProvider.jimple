com.fsck.k9.provider.EmailProvider extends android.content.ContentProvider
public static final java.lang.String AUTHORITY
public static final android.net.Uri CONTENT_URI
private static final java.lang.String[] FIXUP_AGGREGATED_MESSAGES_COLUMNS
private static final java.lang.String[] FIXUP_MESSAGES_COLUMNS
private static final java.lang.String[] FOLDERS_COLUMNS
private static final java.lang.String FOLDERS_TABLE
private static final int MESSAGES
private static final java.lang.String MESSAGES_TABLE
private static final int MESSAGES_THREAD
private static final int MESSAGES_THREADED
private static final int MESSAGE_BASE
private static final int STATS
private static final int STATS_BASE
private static final java.lang.String[] STATS_DEFAULT_PROJECTION
private static final java.lang.String THREADS_TABLE
private static final java.util.Map THREAD_AGGREGATION_FUNCS
private static final android.content.UriMatcher sUriMatcher
private com.fsck.k9.Preferences mPreferences
    static void <clinit>()
    {
        android.content.UriMatcher r0;
        android.net.Uri $r1;
        java.util.HashMap $r2;
        java.util.Map $r3;
        java.lang.String[] $r4;

        r0 = new android.content.UriMatcher;

        specialinvoke r0.<android.content.UriMatcher: void <init>(int)>(-1);

        <com.fsck.k9.provider.EmailProvider: android.content.UriMatcher sUriMatcher> = r0;

        $r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://com.fsck.k9.provider.email");

        <com.fsck.k9.provider.EmailProvider: android.net.Uri CONTENT_URI> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        <com.fsck.k9.provider.EmailProvider: java.util.Map THREAD_AGGREGATION_FUNCS> = $r2;

        $r3 = <com.fsck.k9.provider.EmailProvider: java.util.Map THREAD_AGGREGATION_FUNCS>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("date", "MAX");

        $r3 = <com.fsck.k9.provider.EmailProvider: java.util.Map THREAD_AGGREGATION_FUNCS>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("internal_date", "MAX");

        $r3 = <com.fsck.k9.provider.EmailProvider: java.util.Map THREAD_AGGREGATION_FUNCS>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("attachment_count", "SUM");

        $r3 = <com.fsck.k9.provider.EmailProvider: java.util.Map THREAD_AGGREGATION_FUNCS>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("read", "MIN");

        $r3 = <com.fsck.k9.provider.EmailProvider: java.util.Map THREAD_AGGREGATION_FUNCS>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("flagged", "MAX");

        $r3 = <com.fsck.k9.provider.EmailProvider: java.util.Map THREAD_AGGREGATION_FUNCS>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("answered", "MIN");

        $r3 = <com.fsck.k9.provider.EmailProvider: java.util.Map THREAD_AGGREGATION_FUNCS>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("forwarded", "MIN");

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = "id";

        <com.fsck.k9.provider.EmailProvider: java.lang.String[] FIXUP_MESSAGES_COLUMNS> = $r4;

        $r4 = newarray (java.lang.String)[7];

        $r4[0] = "date";

        $r4[1] = "internal_date";

        $r4[2] = "attachment_count";

        $r4[3] = "read";

        $r4[4] = "flagged";

        $r4[5] = "answered";

        $r4[6] = "forwarded";

        <com.fsck.k9.provider.EmailProvider: java.lang.String[] FIXUP_AGGREGATED_MESSAGES_COLUMNS> = $r4;

        $r4 = newarray (java.lang.String)[14];

        $r4[0] = "id";

        $r4[1] = "name";

        $r4[2] = "last_updated";

        $r4[3] = "unread_count";

        $r4[4] = "visible_limit";

        $r4[5] = "status";

        $r4[6] = "push_state";

        $r4[7] = "last_pushed";

        $r4[8] = "flagged_count";

        $r4[9] = "integrate";

        $r4[10] = "top_group";

        $r4[11] = "poll_class";

        $r4[12] = "push_class";

        $r4[13] = "display_class";

        <com.fsck.k9.provider.EmailProvider: java.lang.String[] FOLDERS_COLUMNS> = $r4;

        r0 = <com.fsck.k9.provider.EmailProvider: android.content.UriMatcher sUriMatcher>;

        virtualinvoke r0.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>("com.fsck.k9.provider.email", "account/*/messages", 0);

        virtualinvoke r0.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>("com.fsck.k9.provider.email", "account/*/messages/threaded", 1);

        virtualinvoke r0.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>("com.fsck.k9.provider.email", "account/*/thread/#", 2);

        virtualinvoke r0.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>("com.fsck.k9.provider.email", "account/*/stats", 100);

        $r4 = newarray (java.lang.String)[2];

        $r4[0] = "unread_count";

        $r4[1] = "flagged_count";

        <com.fsck.k9.provider.EmailProvider: java.lang.String[] STATS_DEFAULT_PROJECTION> = $r4;

        return;
    }
    public void <init>()
    {
        com.fsck.k9.provider.EmailProvider r0;

        r0 := @this: com.fsck.k9.provider.EmailProvider;

        specialinvoke r0.<android.content.ContentProvider: void <init>()>();

        return;
    }
    static java.lang.String[] access$000()
    {
        java.lang.String[] r0;

        r0 = <com.fsck.k9.provider.EmailProvider: java.lang.String[] FOLDERS_COLUMNS>;

        return r0;
    }
    static java.lang.String[] access$100()
    {
        java.lang.String[] r0;

        r0 = <com.fsck.k9.provider.EmailProvider: java.lang.String[] FIXUP_MESSAGES_COLUMNS>;

        return r0;
    }
    static java.util.Map access$200()
    {
        java.util.Map r0;

        r0 = <com.fsck.k9.provider.EmailProvider: java.util.Map THREAD_AGGREGATION_FUNCS>;

        return r0;
    }
    static void access$300(com.fsck.k9.provider.EmailProvider, java.lang.String[], java.lang.String, java.lang.String[], java.lang.StringBuilder)
    {
        com.fsck.k9.provider.EmailProvider $r0;
        java.lang.String[] $r1, $r3;
        java.lang.String $r2;
        java.lang.StringBuilder $r4;

        $r0 := @parameter0: com.fsck.k9.provider.EmailProvider;

        $r1 := @parameter1: java.lang.String[];

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String[];

        $r4 := @parameter4: java.lang.StringBuilder;

        specialinvoke $r0.<com.fsck.k9.provider.EmailProvider: void createThreadedSubQuery(java.lang.String[],java.lang.String,java.lang.String[],java.lang.StringBuilder)>($r1, $r2, $r3, $r4);

        return;
    }
    static java.lang.String[] access$400()
    {
        java.lang.String[] r0;

        r0 = <com.fsck.k9.provider.EmailProvider: java.lang.String[] FIXUP_AGGREGATED_MESSAGES_COLUMNS>;

        return r0;
    }
    private static boolean containsAny(java.lang.String, java.lang.String[])
    {
        java.lang.String $r0, r2;
        java.lang.String[] $r1;
        int $i0, $i1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String[];

        if $r0 != null goto label1;

        return 0;

     label1:
        $i0 = lengthof $r1;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        r2 = $r1[$i1];

        $z0 = virtualinvoke $r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        return 0;
    }
    private void createThreadedSubQuery(java.lang.String[], java.lang.String, java.lang.String[], java.lang.StringBuilder)
    {
        com.fsck.k9.provider.EmailProvider r0;
        java.lang.String[] $r1, $r3;
        java.lang.String $r2, r5, r8, $r9;
        java.lang.StringBuilder $r4;
        int $i0, $i1;
        java.util.Map $r6;
        java.lang.Object $r7;
        boolean $z0;
        java.lang.Object[] $r10;

        r0 := @this: com.fsck.k9.provider.EmailProvider;

        $r1 := @parameter0: java.lang.String[];

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String[];

        $r4 := @parameter3: java.lang.StringBuilder;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT t.root AS thread_root");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        r5 = $r1[$i1];

        $r6 = <com.fsck.k9.provider.EmailProvider: java.util.Map THREAD_AGGREGATION_FUNCS>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        r8 = (java.lang.String) $r7;

        $r9 = "thread_count";

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z0 == 0 goto label3;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",COUNT(t.root) AS thread_count");

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        if r8 == null goto label2;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") AS ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        goto label2;

     label4:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FROM messages m JOIN threads t ON (t.message_id = m.id)");

        $r3 = <com.fsck.k9.provider.EmailProvider: java.lang.String[] FOLDERS_COLUMNS>;

        $r10 = (java.lang.Object[]) $r3;

        $z0 = staticinvoke <com.fsck.k9.helper.Utility: boolean arrayContainsAny(java.lang.Object[],java.lang.Object[])>($r1, $r10);

        if $z0 == 0 goto label5;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" JOIN folders f ON (m.folder_id = f.id)");

     label5:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHERE (t.root IN (SELECT root FROM messages m JOIN threads t ON (t.message_id = m.id) WHERE m.empty = 0 AND m.deleted = 0)");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label6;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND (");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label6:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") AND deleted = 0 AND empty = 0");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" GROUP BY t.root");

        return;
    }
    private com.fsck.k9.Account getAccount(java.lang.String)
    {
        com.fsck.k9.provider.EmailProvider r0;
        java.lang.String $r1;
        com.fsck.k9.Preferences $r2;
        android.content.Context $r3;
        com.fsck.k9.Account $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6;

        r0 := @this: com.fsck.k9.provider.EmailProvider;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.fsck.k9.provider.EmailProvider: com.fsck.k9.Preferences mPreferences>;

        if $r2 != null goto label1;

        $r3 = virtualinvoke r0.<com.fsck.k9.provider.EmailProvider: android.content.Context getContext()>();

        $r3 = virtualinvoke $r3.<android.content.Context: android.content.Context getApplicationContext()>();

        $r2 = staticinvoke <com.fsck.k9.Preferences: com.fsck.k9.Preferences getPreferences(android.content.Context)>($r3);

        r0.<com.fsck.k9.provider.EmailProvider: com.fsck.k9.Preferences mPreferences> = $r2;

     label1:
        $r2 = r0.<com.fsck.k9.provider.EmailProvider: com.fsck.k9.Preferences mPreferences>;

        $r4 = virtualinvoke $r2.<com.fsck.k9.Preferences: com.fsck.k9.Account getAccount(java.lang.String)>($r1);

        if $r4 != null goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown account: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r5;

     label2:
        return $r4;
    }
    private android.database.Cursor getAccountStats(java.lang.String, java.lang.String[], java.lang.String, java.lang.String[])
    {
        com.fsck.k9.provider.EmailProvider r0;
        java.lang.String $r1, $r3, $r8;
        java.lang.String[] $r2, $r4;
        java.lang.StringBuilder r5;
        int $i0, $i1;
        com.fsck.k9.Account $r6;
        com.fsck.k9.mailstore.LockableDatabase $r7;
        boolean z0, $z1;
        java.lang.IllegalArgumentException $r9;
        com.fsck.k9.provider.EmailProvider$4 $r10;
        java.lang.Object $r11;
        android.database.Cursor $r12;
        com.fsck.k9.mailstore.UnavailableStorageException r13;
        java.lang.RuntimeException $r14;
        com.fsck.k9.mail.MessagingException r15;

        r0 := @this: com.fsck.k9.provider.EmailProvider;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String[];

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String[];

        $i0 = 0;

        $r6 = specialinvoke r0.<com.fsck.k9.provider.EmailProvider: com.fsck.k9.Account getAccount(java.lang.String)>($r1);

        $r7 = specialinvoke r0.<com.fsck.k9.provider.EmailProvider: com.fsck.k9.mailstore.LockableDatabase getDatabase(com.fsck.k9.Account)>($r6);

        if $r2 != null goto label05;

        $r2 = <com.fsck.k9.provider.EmailProvider: java.lang.String[] STATS_DEFAULT_PROJECTION>;

     label01:
        r5 = new java.lang.StringBuilder;

        specialinvoke r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT ");

        z0 = 1;

        $i1 = lengthof $r2;

     label02:
        if $i0 >= $i1 goto label09;

        $r1 = $r2[$i0];

        if z0 != 0 goto label06;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label03:
        $r8 = "unread_count";

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label07;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SUM(read=0) AS unread_count");

     label04:
        $i0 = $i0 + 1;

        goto label02;

     label05:
        goto label01;

     label06:
        z0 = 0;

        goto label03;

     label07:
        $r8 = "flagged_count";

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label08;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SUM(flagged) AS flagged_count");

        goto label04;

     label08:
        $r9 = new java.lang.IllegalArgumentException;

        r5 = new java.lang.StringBuilder;

        specialinvoke r5.<java.lang.StringBuilder: void <init>()>();

        r5 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Column name not allowed: ");

        r5 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r9;

     label09:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FROM messages");

        $r2 = <com.fsck.k9.provider.EmailProvider: java.lang.String[] FOLDERS_COLUMNS>;

        z0 = staticinvoke <com.fsck.k9.provider.EmailProvider: boolean containsAny(java.lang.String,java.lang.String[])>($r3, $r2);

        if z0 == 0 goto label10;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" JOIN folders ON (folders.id = messages.folder_id)");

     label10:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHERE (deleted = 0 AND empty = 0)");

        z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if z0 != 0 goto label11;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND (");

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label11:
        $r10 = new com.fsck.k9.provider.EmailProvider$4;

     label12:
        specialinvoke $r10.<com.fsck.k9.provider.EmailProvider$4: void <init>(com.fsck.k9.provider.EmailProvider,java.lang.StringBuilder,java.lang.String[])>(r0, r5, $r4);

        $r11 = virtualinvoke $r7.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(0, $r10);

     label13:
        $r12 = (android.database.Cursor) $r11;

        return $r12;

     label14:
        r13 := @caughtexception;

        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Storage not available", r13);

        throw $r14;

     label15:
        r15 := @caughtexception;

        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("messaging exception", r15);

        throw $r14;

        catch com.fsck.k9.mailstore.UnavailableStorageException from label12 to label13 with label14;
        catch com.fsck.k9.mail.MessagingException from label12 to label13 with label15;
    }
    private com.fsck.k9.mailstore.LockableDatabase getDatabase(com.fsck.k9.Account)
    {
        com.fsck.k9.provider.EmailProvider r0;
        com.fsck.k9.Account $r1;
        com.fsck.k9.mail.MessagingException r2;
        com.fsck.k9.mailstore.LocalStore $r3;
        com.fsck.k9.mailstore.LockableDatabase $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: com.fsck.k9.provider.EmailProvider;

        $r1 := @parameter0: com.fsck.k9.Account;

     label1:
        $r3 = virtualinvoke $r1.<com.fsck.k9.Account: com.fsck.k9.mailstore.LocalStore getLocalStore()>();

     label2:
        $r4 = virtualinvoke $r3.<com.fsck.k9.mailstore.LocalStore: com.fsck.k9.mailstore.LockableDatabase getDatabase()>();

        return $r4;

     label3:
        r2 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Couldn\'t get LocalStore", r2);

        throw $r5;

        catch com.fsck.k9.mail.MessagingException from label1 to label2 with label3;
    }
    public int delete(android.net.Uri, java.lang.String, java.lang.String[])
    {
        com.fsck.k9.provider.EmailProvider r0;
        android.net.Uri $r1;
        java.lang.String $r2;
        java.lang.String[] $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: com.fsck.k9.provider.EmailProvider;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String[];

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("not implemented yet");

        throw $r4;
    }
    protected android.database.Cursor getMessages(java.lang.String, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)
    {
        com.fsck.k9.provider.EmailProvider r0;
        java.lang.String $r1, $r3, $r5;
        java.lang.String[] $r2, $r4;
        com.fsck.k9.Account $r6;
        com.fsck.k9.mailstore.LockableDatabase $r7;
        com.fsck.k9.provider.EmailProvider$1 $r8;
        java.lang.Object $r9;
        android.database.Cursor $r10;
        com.fsck.k9.mailstore.UnavailableStorageException r11;
        java.lang.RuntimeException $r12;
        com.fsck.k9.mail.MessagingException r13;

        r0 := @this: com.fsck.k9.provider.EmailProvider;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String[];

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String[];

        $r5 := @parameter4: java.lang.String;

        $r6 = specialinvoke r0.<com.fsck.k9.provider.EmailProvider: com.fsck.k9.Account getAccount(java.lang.String)>($r1);

        $r7 = specialinvoke r0.<com.fsck.k9.provider.EmailProvider: com.fsck.k9.mailstore.LockableDatabase getDatabase(com.fsck.k9.Account)>($r6);

        $r8 = new com.fsck.k9.provider.EmailProvider$1;

     label1:
        specialinvoke $r8.<com.fsck.k9.provider.EmailProvider$1: void <init>(com.fsck.k9.provider.EmailProvider,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[])>(r0, $r3, $r2, $r5, $r4);

        $r9 = virtualinvoke $r7.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(0, $r8);

     label2:
        $r10 = (android.database.Cursor) $r9;

        return $r10;

     label3:
        r11 := @caughtexception;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Storage not available", r11);

        throw $r12;

     label4:
        r13 := @caughtexception;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("messaging exception", r13);

        throw $r12;

        catch com.fsck.k9.mailstore.UnavailableStorageException from label1 to label2 with label3;
        catch com.fsck.k9.mail.MessagingException from label1 to label2 with label4;
    }
    protected android.database.Cursor getThread(java.lang.String, java.lang.String[], java.lang.String, java.lang.String)
    {
        com.fsck.k9.provider.EmailProvider r0;
        java.lang.String $r1, $r3, $r4;
        java.lang.String[] $r2;
        com.fsck.k9.Account $r5;
        com.fsck.k9.mailstore.LockableDatabase $r6;
        com.fsck.k9.provider.EmailProvider$3 $r7;
        java.lang.Object $r8;
        android.database.Cursor $r9;
        com.fsck.k9.mailstore.UnavailableStorageException r10;
        java.lang.RuntimeException $r11;
        com.fsck.k9.mail.MessagingException r12;

        r0 := @this: com.fsck.k9.provider.EmailProvider;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String[];

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 = specialinvoke r0.<com.fsck.k9.provider.EmailProvider: com.fsck.k9.Account getAccount(java.lang.String)>($r1);

        $r6 = specialinvoke r0.<com.fsck.k9.provider.EmailProvider: com.fsck.k9.mailstore.LockableDatabase getDatabase(com.fsck.k9.Account)>($r5);

        $r7 = new com.fsck.k9.provider.EmailProvider$3;

     label1:
        specialinvoke $r7.<com.fsck.k9.provider.EmailProvider$3: void <init>(com.fsck.k9.provider.EmailProvider,java.lang.String[],java.lang.String,java.lang.String)>(r0, $r2, $r4, $r3);

        $r8 = virtualinvoke $r6.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(0, $r7);

     label2:
        $r9 = (android.database.Cursor) $r8;

        return $r9;

     label3:
        r10 := @caughtexception;

        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Storage not available", r10);

        throw $r11;

     label4:
        r12 := @caughtexception;

        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("messaging exception", r12);

        throw $r11;

        catch com.fsck.k9.mailstore.UnavailableStorageException from label1 to label2 with label3;
        catch com.fsck.k9.mail.MessagingException from label1 to label2 with label4;
    }
    protected android.database.Cursor getThreadedMessages(java.lang.String, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)
    {
        com.fsck.k9.provider.EmailProvider r0;
        java.lang.String $r1, $r3, $r5;
        java.lang.String[] $r2, $r4;
        com.fsck.k9.Account $r6;
        com.fsck.k9.mailstore.LockableDatabase $r7;
        com.fsck.k9.provider.EmailProvider$2 $r8;
        java.lang.Object $r9;
        android.database.Cursor $r10;
        com.fsck.k9.mailstore.UnavailableStorageException r11;
        java.lang.RuntimeException $r12;
        com.fsck.k9.mail.MessagingException r13;

        r0 := @this: com.fsck.k9.provider.EmailProvider;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String[];

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String[];

        $r5 := @parameter4: java.lang.String;

        $r6 = specialinvoke r0.<com.fsck.k9.provider.EmailProvider: com.fsck.k9.Account getAccount(java.lang.String)>($r1);

        $r7 = specialinvoke r0.<com.fsck.k9.provider.EmailProvider: com.fsck.k9.mailstore.LockableDatabase getDatabase(com.fsck.k9.Account)>($r6);

        $r8 = new com.fsck.k9.provider.EmailProvider$2;

     label1:
        specialinvoke $r8.<com.fsck.k9.provider.EmailProvider$2: void <init>(com.fsck.k9.provider.EmailProvider,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r0, $r2, $r3, $r4, $r5);

        $r9 = virtualinvoke $r7.<com.fsck.k9.mailstore.LockableDatabase: java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)>(0, $r8);

     label2:
        $r10 = (android.database.Cursor) $r9;

        return $r10;

     label3:
        r11 := @caughtexception;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Storage not available", r11);

        throw $r12;

     label4:
        r13 := @caughtexception;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("messaging exception", r13);

        throw $r12;

        catch com.fsck.k9.mailstore.UnavailableStorageException from label1 to label2 with label3;
        catch com.fsck.k9.mail.MessagingException from label1 to label2 with label4;
    }
    public java.lang.String getType(android.net.Uri)
    {
        com.fsck.k9.provider.EmailProvider r0;
        android.net.Uri $r1;
        java.lang.RuntimeException $r2;

        r0 := @this: com.fsck.k9.provider.EmailProvider;

        $r1 := @parameter0: android.net.Uri;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("not implemented yet");

        throw $r2;
    }
    public android.net.Uri insert(android.net.Uri, android.content.ContentValues)
    {
        com.fsck.k9.provider.EmailProvider r0;
        android.net.Uri $r1;
        android.content.ContentValues $r2;
        java.lang.RuntimeException $r3;

        r0 := @this: com.fsck.k9.provider.EmailProvider;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: android.content.ContentValues;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("not implemented yet");

        throw $r3;
    }
    public boolean onCreate()
    {
        com.fsck.k9.provider.EmailProvider r0;

        r0 := @this: com.fsck.k9.provider.EmailProvider;

        return 1;
    }
    public android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)
    {
        com.fsck.k9.provider.EmailProvider r0;
        android.net.Uri $r1;
        java.lang.String[] $r2, $r4, $r19;
        java.lang.String $r3, $r5, r6, r17, $r18;
        com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor r7;
        java.util.ArrayList r8;
        java.util.HashMap r9;
        android.content.UriMatcher $r10;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r11;
        java.lang.StringBuilder $r12;
        android.content.Context $r13;
        android.content.ContentResolver $r14;
        java.util.List $r15;
        java.lang.Object $r16;
        boolean $z0;
        java.lang.Object[] $r20;
        android.database.Cursor $r21;
        com.fsck.k9.provider.EmailProvider$IdTrickeryCursor $r22;
        com.fsck.k9.cache.EmailProviderCacheCursor r23;
        java.lang.RuntimeException $r24;

        r0 := @this: com.fsck.k9.provider.EmailProvider;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.lang.String[];

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String[];

        $r5 := @parameter4: java.lang.String;

        $r10 = <com.fsck.k9.provider.EmailProvider: android.content.UriMatcher sUriMatcher>;

        $i0 = virtualinvoke $r10.<android.content.UriMatcher: int match(android.net.Uri)>($r1);

        if $i0 >= 0 goto label01;

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown URI: ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r11;

     label01:
        $r13 = virtualinvoke r0.<com.fsck.k9.provider.EmailProvider: android.content.Context getContext()>();

        $r14 = virtualinvoke $r13.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        lookupswitch($i0)
        {
            case 0: goto label03;
            case 1: goto label03;
            case 2: goto label03;
            case 100: goto label12;
            default: goto label02;
        };

     label02:
        return null;

     label03:
        $r15 = virtualinvoke $r1.<android.net.Uri: java.util.List getPathSegments()>();

        $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(1);

        r17 = (java.lang.String) $r16;

        r8 = new java.util.ArrayList;

        $i1 = lengthof $r2;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i1);

        r9 = new java.util.HashMap;

        specialinvoke r9.<java.util.HashMap: void <init>()>();

        $i1 = lengthof $r2;

        $i2 = 0;

     label04:
        if $i2 >= $i1 goto label07;

        r6 = $r2[$i2];

        $r18 = "account_uuid";

        $z0 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z0 == 0 goto label06;

        interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("account_uuid", r17);

     label05:
        $i2 = $i2 + 1;

        goto label04;

     label06:
        interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>(r6);

        goto label05;

     label07:
        $r19 = newarray (java.lang.String)[0];

        $r20 = interfaceinvoke r8.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r19);

        $r19 = (java.lang.String[]) $r20;

        if $i0 != 0 goto label09;

        $r21 = virtualinvoke r0.<com.fsck.k9.provider.EmailProvider: android.database.Cursor getMessages(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r17, $r19, $r3, $r4, $r5);

     label08:
        $r1 = <com.fsck.k9.provider.EmailProvider: android.net.Uri CONTENT_URI>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("account/");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/messages");

        $r3 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r1, $r3);

        interfaceinvoke $r21.<android.database.Cursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>($r14, $r1);

        r7 = new com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor;

        $r22 = new com.fsck.k9.provider.EmailProvider$IdTrickeryCursor;

        specialinvoke $r22.<com.fsck.k9.provider.EmailProvider$IdTrickeryCursor: void <init>(android.database.Cursor)>($r21);

        specialinvoke r7.<com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor: void <init>(android.database.Cursor,java.lang.String[],java.util.Map)>($r22, $r2, r9);

        r23 = new com.fsck.k9.cache.EmailProviderCacheCursor;

        $r13 = virtualinvoke r0.<com.fsck.k9.provider.EmailProvider: android.content.Context getContext()>();

        specialinvoke r23.<com.fsck.k9.cache.EmailProviderCacheCursor: void <init>(java.lang.String,android.database.Cursor,android.content.Context)>(r17, r7, $r13);

        return r23;

     label09:
        if $i0 != 1 goto label10;

        $r21 = virtualinvoke r0.<com.fsck.k9.provider.EmailProvider: android.database.Cursor getThreadedMessages(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r17, $r19, $r3, $r4, $r5);

        goto label08;

     label10:
        if $i0 != 2 goto label11;

        $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(3);

        $r3 = (java.lang.String) $r16;

        $r21 = virtualinvoke r0.<com.fsck.k9.provider.EmailProvider: android.database.Cursor getThread(java.lang.String,java.lang.String[],java.lang.String,java.lang.String)>(r17, $r19, $r3, $r5);

        goto label08;

     label11:
        $r24 = new java.lang.RuntimeException;

        specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented");

        throw $r24;

     label12:
        $r15 = virtualinvoke $r1.<android.net.Uri: java.util.List getPathSegments()>();

        $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(1);

        $r5 = (java.lang.String) $r16;

        $r21 = specialinvoke r0.<com.fsck.k9.provider.EmailProvider: android.database.Cursor getAccountStats(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[])>($r5, $r2, $r3, $r4);

        $r1 = <com.fsck.k9.provider.EmailProvider: android.net.Uri CONTENT_URI>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("account/");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/messages");

        $r3 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r1, $r3);

        interfaceinvoke $r21.<android.database.Cursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>($r14, $r1);

        return $r21;
    }
    public int update(android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[])
    {
        com.fsck.k9.provider.EmailProvider r0;
        android.net.Uri $r1;
        android.content.ContentValues $r2;
        java.lang.String $r3;
        java.lang.String[] $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: com.fsck.k9.provider.EmailProvider;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: android.content.ContentValues;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String[];

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("not implemented yet");

        throw $r5;
    }
