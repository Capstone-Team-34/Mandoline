com.fsck.k9.provider.MessageProvider$CountExtractor extends java.lang.Object implements com.fsck.k9.provider.MessageProvider$FieldExtractor
private java.lang.Integer mCount
    public void <init>(int)
    {
        com.fsck.k9.provider.MessageProvider$CountExtractor r0;
        int $i0;
        java.lang.Integer $r1;

        r0 := @this: com.fsck.k9.provider.MessageProvider$CountExtractor;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        r0.<com.fsck.k9.provider.MessageProvider$CountExtractor: java.lang.Integer mCount> = $r1;

        return;
    }
    public java.lang.Integer getField(java.lang.Object)
    {
        com.fsck.k9.provider.MessageProvider$CountExtractor r0;
        java.lang.Object r1;
        java.lang.Integer r2;

        r0 := @this: com.fsck.k9.provider.MessageProvider$CountExtractor;

        r1 := @parameter0: java.lang.Object;

        r2 = r0.<com.fsck.k9.provider.MessageProvider$CountExtractor: java.lang.Integer mCount>;

        return r2;
    }
    public volatile java.lang.Object getField(java.lang.Object)
    {
        com.fsck.k9.provider.MessageProvider$CountExtractor r0;
        java.lang.Object $r1;
        java.lang.Integer $r2;

        r0 := @this: com.fsck.k9.provider.MessageProvider$CountExtractor;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$CountExtractor: java.lang.Integer getField(java.lang.Object)>($r1);

        return $r2;
    }
