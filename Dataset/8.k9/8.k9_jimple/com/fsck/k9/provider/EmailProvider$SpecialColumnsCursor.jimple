com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor extends android.database.CursorWrapper
private int[] mColumnMapping
private java.lang.String[] mColumnNames
private java.lang.String[] mSpecialColumnValues
    public void <init>(android.database.Cursor, java.lang.String[], java.util.Map)
    {
        com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor r0;
        android.database.Cursor $r1;
        java.lang.String[] $r2, $r6;
        java.util.Map r3;
        java.lang.String r4;
        int i0, i1, i2, i3, $i4;
        int[] $r5;
        boolean $z0;
        java.lang.Object $r7;

        r0 := @this: com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor;

        $r1 := @parameter0: android.database.Cursor;

        $r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.util.Map;

        specialinvoke r0.<android.database.CursorWrapper: void <init>(android.database.Cursor)>($r1);

        r0.<com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor: java.lang.String[] mColumnNames> = $r2;

        i0 = lengthof $r2;

        $r5 = newarray (int)[i0];

        r0.<com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor: int[] mColumnMapping> = $r5;

        i0 = interfaceinvoke r3.<java.util.Map: int size()>();

        $r6 = newarray (java.lang.String)[i0];

        r0.<com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor: java.lang.String[] mSpecialColumnValues> = $r6;

        i1 = 0;

        i2 = 0;

        i0 = lengthof $r2;

        i3 = 0;

     label1:
        if i1 >= i0 goto label4;

        r4 = $r2[i1];

        $z0 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r4);

        if $z0 == 0 goto label3;

        $r6 = r0.<com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor: java.lang.String[] mSpecialColumnValues>;

        $r7 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        r4 = (java.lang.String) $r7;

        $r6[i2] = r4;

        $r5 = r0.<com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor: int[] mColumnMapping>;

        $i4 = i2 + 1;

        $i4 = neg $i4;

        $r5[i1] = $i4;

        i2 = i2 + 1;

        $i4 = i3;

     label2:
        i1 = i1 + 1;

        i3 = $i4;

        goto label1;

     label3:
        $r5 = r0.<com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor: int[] mColumnMapping>;

        $i4 = i3 + 1;

        $r5[i1] = i3;

        goto label2;

     label4:
        return;
    }
    public byte[] getBlob(int)
    {
        com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor r0;
        int $i0;
        byte[] $r1;
        int[] $r2;
        java.lang.RuntimeException $r3;

        r0 := @this: com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor;

        $i0 := @parameter0: int;

        $r2 = r0.<com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor: int[] mColumnMapping>;

        $i0 = $r2[$i0];

        if $i0 >= 0 goto label1;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Special column can only be retrieved as string.");

        throw $r3;

     label1:
        $r1 = specialinvoke r0.<android.database.CursorWrapper: byte[] getBlob(int)>($i0);

        return $r1;
    }
    public int getColumnCount()
    {
        com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor r0;
        int[] $r1;
        int $i0;

        r0 := @this: com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor;

        $r1 = r0.<com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor: int[] mColumnMapping>;

        $i0 = lengthof $r1;

        return $i0;
    }
    public int getColumnIndex(java.lang.String)
    {
        com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor r0;
        java.lang.String $r1, $r3;
        int i0, i1;
        java.lang.String[] $r2;
        boolean $z0;

        r0 := @this: com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor;

        $r1 := @parameter0: java.lang.String;

        i1 = 0;

        $r2 = r0.<com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor: java.lang.String[] mColumnNames>;

        i0 = lengthof $r2;

     label1:
        if i1 >= i0 goto label3;

        $r2 = r0.<com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor: java.lang.String[] mColumnNames>;

        $r3 = $r2[i1];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        i0 = specialinvoke r0.<android.database.CursorWrapper: int getColumnIndex(java.lang.String)>($r1);

        return i0;
    }
    public int getColumnIndexOrThrow(java.lang.String) throws java.lang.IllegalArgumentException
    {
        com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor r0;
        java.lang.String $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor: int getColumnIndex(java.lang.String)>($r1);

        if $i0 != -1 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown column name");

        throw $r2;

     label1:
        return $i0;
    }
    public java.lang.String getColumnName(int)
    {
        com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor r0;
        int $i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor;

        $i0 := @parameter0: int;

        $r1 = r0.<com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor: java.lang.String[] mColumnNames>;

        $r2 = $r1[$i0];

        return $r2;
    }
    public java.lang.String[] getColumnNames()
    {
        com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor r0;
        java.lang.Object $r1;
        java.lang.String[] $r2;

        r0 := @this: com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor;

        $r2 = r0.<com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor: java.lang.String[] mColumnNames>;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (java.lang.String[]) $r1;

        return $r2;
    }
    public double getDouble(int)
    {
        com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor r0;
        int $i0;
        double $d0;
        int[] $r1;
        java.lang.RuntimeException $r2;

        r0 := @this: com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor;

        $i0 := @parameter0: int;

        $r1 = r0.<com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor: int[] mColumnMapping>;

        $i0 = $r1[$i0];

        if $i0 >= 0 goto label1;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Special column can only be retrieved as string.");

        throw $r2;

     label1:
        $d0 = specialinvoke r0.<android.database.CursorWrapper: double getDouble(int)>($i0);

        return $d0;
    }
    public float getFloat(int)
    {
        com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor r0;
        int $i0;
        float $f0;
        int[] $r1;
        java.lang.RuntimeException $r2;

        r0 := @this: com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor;

        $i0 := @parameter0: int;

        $r1 = r0.<com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor: int[] mColumnMapping>;

        $i0 = $r1[$i0];

        if $i0 >= 0 goto label1;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Special column can only be retrieved as string.");

        throw $r2;

     label1:
        $f0 = specialinvoke r0.<android.database.CursorWrapper: float getFloat(int)>($i0);

        return $f0;
    }
    public int getInt(int)
    {
        com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor r0;
        int $i0;
        int[] $r1;
        java.lang.RuntimeException $r2;

        r0 := @this: com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor;

        $i0 := @parameter0: int;

        $r1 = r0.<com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor: int[] mColumnMapping>;

        $i0 = $r1[$i0];

        if $i0 >= 0 goto label1;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Special column can only be retrieved as string.");

        throw $r2;

     label1:
        $i0 = specialinvoke r0.<android.database.CursorWrapper: int getInt(int)>($i0);

        return $i0;
    }
    public long getLong(int)
    {
        com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor r0;
        int $i0;
        long $l1;
        int[] $r1;
        java.lang.RuntimeException $r2;

        r0 := @this: com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor;

        $i0 := @parameter0: int;

        $r1 = r0.<com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor: int[] mColumnMapping>;

        $i0 = $r1[$i0];

        if $i0 >= 0 goto label1;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Special column can only be retrieved as string.");

        throw $r2;

     label1:
        $l1 = specialinvoke r0.<android.database.CursorWrapper: long getLong(int)>($i0);

        return $l1;
    }
    public short getShort(int)
    {
        com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor r0;
        int $i0;
        short $s1;
        int[] $r1;
        java.lang.RuntimeException $r2;

        r0 := @this: com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor;

        $i0 := @parameter0: int;

        $r1 = r0.<com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor: int[] mColumnMapping>;

        $i0 = $r1[$i0];

        if $i0 >= 0 goto label1;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Special column can only be retrieved as string.");

        throw $r2;

     label1:
        $s1 = specialinvoke r0.<android.database.CursorWrapper: short getShort(int)>($i0);

        return $s1;
    }
    public java.lang.String getString(int)
    {
        com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor r0;
        int $i0;
        java.lang.String $r1;
        int[] $r2;
        java.lang.String[] $r3;

        r0 := @this: com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor;

        $i0 := @parameter0: int;

        $r2 = r0.<com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor: int[] mColumnMapping>;

        $i0 = $r2[$i0];

        if $i0 >= 0 goto label1;

        $r3 = r0.<com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor: java.lang.String[] mSpecialColumnValues>;

        $i0 = neg $i0;

        $i0 = $i0 + -1;

        $r1 = $r3[$i0];

        return $r1;

     label1:
        $r1 = specialinvoke r0.<android.database.CursorWrapper: java.lang.String getString(int)>($i0);

        return $r1;
    }
    public int getType(int)
    {
        com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor r0;
        int $i0;
        int[] $r1;

        r0 := @this: com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor;

        $i0 := @parameter0: int;

        $r1 = r0.<com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor: int[] mColumnMapping>;

        $i0 = $r1[$i0];

        if $i0 >= 0 goto label1;

        return 3;

     label1:
        $i0 = specialinvoke r0.<android.database.CursorWrapper: int getType(int)>($i0);

        return $i0;
    }
    public boolean isNull(int)
    {
        com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor r0;
        int $i0;
        boolean $z0;
        int[] $r1;
        java.lang.String[] $r2;
        java.lang.String $r3;

        r0 := @this: com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor;

        $i0 := @parameter0: int;

        $r1 = r0.<com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor: int[] mColumnMapping>;

        $i0 = $r1[$i0];

        if $i0 >= 0 goto label2;

        $r2 = r0.<com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor: java.lang.String[] mSpecialColumnValues>;

        $i0 = neg $i0;

        $i0 = $i0 + -1;

        $r3 = $r2[$i0];

        if $r3 != null goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $z0 = specialinvoke r0.<android.database.CursorWrapper: boolean isNull(int)>($i0);

        return $z0;
    }
