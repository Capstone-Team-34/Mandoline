com.fsck.k9.provider.EmailProvider$4 extends java.lang.Object implements com.fsck.k9.mailstore.LockableDatabase$DbCallback
final com.fsck.k9.provider.EmailProvider this$0
final java.lang.String[] val$selectionArgs
final java.lang.StringBuilder val$sql
    void <init>(com.fsck.k9.provider.EmailProvider, java.lang.StringBuilder, java.lang.String[])
    {
        com.fsck.k9.provider.EmailProvider$4 r0;
        com.fsck.k9.provider.EmailProvider $r1;
        java.lang.StringBuilder $r2;
        java.lang.String[] $r3;

        r0 := @this: com.fsck.k9.provider.EmailProvider$4;

        $r1 := @parameter0: com.fsck.k9.provider.EmailProvider;

        $r2 := @parameter1: java.lang.StringBuilder;

        $r3 := @parameter2: java.lang.String[];

        r0.<com.fsck.k9.provider.EmailProvider$4: com.fsck.k9.provider.EmailProvider this$0> = $r1;

        r0.<com.fsck.k9.provider.EmailProvider$4: java.lang.StringBuilder val$sql> = $r2;

        r0.<com.fsck.k9.provider.EmailProvider$4: java.lang.String[] val$selectionArgs> = $r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public android.database.Cursor doDbWork(android.database.sqlite.SQLiteDatabase) throws com.fsck.k9.mailstore.LockableDatabase$WrappedException, com.fsck.k9.mailstore.UnavailableStorageException
    {
        com.fsck.k9.provider.EmailProvider$4 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.String[] $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        android.database.Cursor $r5;

        r0 := @this: com.fsck.k9.provider.EmailProvider$4;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r3 = r0.<com.fsck.k9.provider.EmailProvider$4: java.lang.StringBuilder val$sql>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = r0.<com.fsck.k9.provider.EmailProvider$4: java.lang.String[] val$selectionArgs>;

        $r5 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r4, $r2);

        return $r5;
    }
    public volatile java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase) throws com.fsck.k9.mailstore.LockableDatabase$WrappedException, com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.provider.EmailProvider$4 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        android.database.Cursor $r2;

        r0 := @this: com.fsck.k9.provider.EmailProvider$4;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 = virtualinvoke r0.<com.fsck.k9.provider.EmailProvider$4: android.database.Cursor doDbWork(android.database.sqlite.SQLiteDatabase)>($r1);

        return $r2;
    }
