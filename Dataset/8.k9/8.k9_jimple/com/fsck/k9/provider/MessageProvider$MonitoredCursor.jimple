com.fsck.k9.provider.MessageProvider$MonitoredCursor extends java.lang.Object implements android.database.CrossProcessCursor
private java.util.concurrent.atomic.AtomicBoolean mClosed
private android.database.CrossProcessCursor mCursor
private java.util.concurrent.Semaphore mSemaphore
    protected void <init>(android.database.CrossProcessCursor, java.util.concurrent.Semaphore)
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        android.database.CrossProcessCursor $r1;
        java.util.concurrent.Semaphore $r2;
        java.util.concurrent.atomic.AtomicBoolean $r3;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        $r1 := @parameter0: android.database.CrossProcessCursor;

        $r2 := @parameter1: java.util.concurrent.Semaphore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: java.util.concurrent.atomic.AtomicBoolean mClosed> = $r3;

        r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor> = $r1;

        r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: java.util.concurrent.Semaphore mSemaphore> = $r2;

        return;
    }
    protected void checkClosed() throws java.lang.IllegalStateException
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        boolean $z0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        $r1 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: java.util.concurrent.atomic.AtomicBoolean mClosed>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cursor was closed");

        throw $r2;

     label1:
        return;
    }
    public void close()
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        boolean $z0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        android.database.CrossProcessCursor $r2;
        java.util.concurrent.Semaphore $r3;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        $r1 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: java.util.concurrent.atomic.AtomicBoolean mClosed>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);

        if $z0 == 0 goto label1;

        $r2 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        interfaceinvoke $r2.<android.database.CrossProcessCursor: void close()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("k9", "Cursor closed, null\'ing & releasing semaphore");

        r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor> = null;

        $r3 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: java.util.concurrent.Semaphore mSemaphore>;

        virtualinvoke $r3.<java.util.concurrent.Semaphore: void release()>();

     label1:
        return;
    }
    public void copyStringToBuffer(int, android.database.CharArrayBuffer)
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        int $i0;
        android.database.CharArrayBuffer $r1;
        android.database.CrossProcessCursor $r2;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.database.CharArrayBuffer;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r2 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        interfaceinvoke $r2.<android.database.CrossProcessCursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)>($i0, $r1);

        return;
    }
    public void deactivate()
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        android.database.CrossProcessCursor $r1;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r1 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        interfaceinvoke $r1.<android.database.CrossProcessCursor: void deactivate()>();

        return;
    }
    public void fillWindow(int, android.database.CursorWindow)
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        int $i0;
        android.database.CursorWindow $r1;
        android.database.CrossProcessCursor $r2;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.database.CursorWindow;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r2 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        interfaceinvoke $r2.<android.database.CrossProcessCursor: void fillWindow(int,android.database.CursorWindow)>($i0, $r1);

        return;
    }
    protected void finalize() throws java.lang.Throwable
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void close()>();

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }
    public byte[] getBlob(int)
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        int $i0;
        byte[] $r1;
        android.database.CrossProcessCursor $r2;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r2 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $r1 = interfaceinvoke $r2.<android.database.CrossProcessCursor: byte[] getBlob(int)>($i0);

        return $r1;
    }
    public int getColumnCount()
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        int $i0;
        android.database.CrossProcessCursor $r1;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r1 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $i0 = interfaceinvoke $r1.<android.database.CrossProcessCursor: int getColumnCount()>();

        return $i0;
    }
    public int getColumnIndex(java.lang.String)
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        java.lang.String $r1;
        int $i0;
        android.database.CrossProcessCursor $r2;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r2 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $i0 = interfaceinvoke $r2.<android.database.CrossProcessCursor: int getColumnIndex(java.lang.String)>($r1);

        return $i0;
    }
    public int getColumnIndexOrThrow(java.lang.String) throws java.lang.IllegalArgumentException
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        java.lang.String $r1;
        int $i0;
        android.database.CrossProcessCursor $r2;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r2 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $i0 = interfaceinvoke $r2.<android.database.CrossProcessCursor: int getColumnIndexOrThrow(java.lang.String)>($r1);

        return $i0;
    }
    public java.lang.String getColumnName(int)
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        int $i0;
        java.lang.String $r1;
        android.database.CrossProcessCursor $r2;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r2 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $r1 = interfaceinvoke $r2.<android.database.CrossProcessCursor: java.lang.String getColumnName(int)>($i0);

        return $r1;
    }
    public java.lang.String[] getColumnNames()
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        java.lang.String[] $r1;
        android.database.CrossProcessCursor $r2;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r2 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $r1 = interfaceinvoke $r2.<android.database.CrossProcessCursor: java.lang.String[] getColumnNames()>();

        return $r1;
    }
    public int getCount()
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        int $i0;
        android.database.CrossProcessCursor $r1;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r1 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $i0 = interfaceinvoke $r1.<android.database.CrossProcessCursor: int getCount()>();

        return $i0;
    }
    public double getDouble(int)
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        int $i0;
        double $d0;
        android.database.CrossProcessCursor $r1;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r1 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $d0 = interfaceinvoke $r1.<android.database.CrossProcessCursor: double getDouble(int)>($i0);

        return $d0;
    }
    public android.os.Bundle getExtras()
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        android.os.Bundle $r1;
        android.database.CrossProcessCursor $r2;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r2 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $r1 = interfaceinvoke $r2.<android.database.CrossProcessCursor: android.os.Bundle getExtras()>();

        return $r1;
    }
    public float getFloat(int)
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        int $i0;
        float $f0;
        android.database.CrossProcessCursor $r1;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r1 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $f0 = interfaceinvoke $r1.<android.database.CrossProcessCursor: float getFloat(int)>($i0);

        return $f0;
    }
    public int getInt(int)
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        int $i0;
        android.database.CrossProcessCursor $r1;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r1 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $i0 = interfaceinvoke $r1.<android.database.CrossProcessCursor: int getInt(int)>($i0);

        return $i0;
    }
    public long getLong(int)
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        int $i0;
        long $l1;
        android.database.CrossProcessCursor $r1;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r1 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $l1 = interfaceinvoke $r1.<android.database.CrossProcessCursor: long getLong(int)>($i0);

        return $l1;
    }
    public android.net.Uri getNotificationUri()
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        return null;
    }
    public int getPosition()
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        int $i0;
        android.database.CrossProcessCursor $r1;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r1 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $i0 = interfaceinvoke $r1.<android.database.CrossProcessCursor: int getPosition()>();

        return $i0;
    }
    public short getShort(int)
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        int $i0;
        short $s1;
        android.database.CrossProcessCursor $r1;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r1 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $s1 = interfaceinvoke $r1.<android.database.CrossProcessCursor: short getShort(int)>($i0);

        return $s1;
    }
    public java.lang.String getString(int)
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        int $i0;
        java.lang.String $r1;
        android.database.CrossProcessCursor $r2;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r2 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $r1 = interfaceinvoke $r2.<android.database.CrossProcessCursor: java.lang.String getString(int)>($i0);

        return $r1;
    }
    public int getType(int)
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        int $i0;
        android.database.CrossProcessCursor $r1;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r1 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $i0 = interfaceinvoke $r1.<android.database.CrossProcessCursor: int getType(int)>($i0);

        return $i0;
    }
    public boolean getWantsAllOnMoveCalls()
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        boolean $z0;
        android.database.CrossProcessCursor $r1;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r1 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $z0 = interfaceinvoke $r1.<android.database.CrossProcessCursor: boolean getWantsAllOnMoveCalls()>();

        return $z0;
    }
    public android.database.CursorWindow getWindow()
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        android.database.CursorWindow $r1;
        android.database.CrossProcessCursor $r2;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r2 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $r1 = interfaceinvoke $r2.<android.database.CrossProcessCursor: android.database.CursorWindow getWindow()>();

        return $r1;
    }
    public boolean isAfterLast()
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        boolean $z0;
        android.database.CrossProcessCursor $r1;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r1 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $z0 = interfaceinvoke $r1.<android.database.CrossProcessCursor: boolean isAfterLast()>();

        return $z0;
    }
    public boolean isBeforeFirst()
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        boolean $z0;
        android.database.CrossProcessCursor $r1;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r1 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $z0 = interfaceinvoke $r1.<android.database.CrossProcessCursor: boolean isBeforeFirst()>();

        return $z0;
    }
    public boolean isClosed()
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        boolean $z0;
        android.database.CrossProcessCursor $r2;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        $r1 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: java.util.concurrent.atomic.AtomicBoolean mClosed>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $z0 = interfaceinvoke $r2.<android.database.CrossProcessCursor: boolean isClosed()>();

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    public boolean isFirst()
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        boolean $z0;
        android.database.CrossProcessCursor $r1;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r1 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $z0 = interfaceinvoke $r1.<android.database.CrossProcessCursor: boolean isFirst()>();

        return $z0;
    }
    public boolean isLast()
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        boolean $z0;
        android.database.CrossProcessCursor $r1;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r1 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $z0 = interfaceinvoke $r1.<android.database.CrossProcessCursor: boolean isLast()>();

        return $z0;
    }
    public boolean isNull(int)
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        int $i0;
        boolean $z0;
        android.database.CrossProcessCursor $r1;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r1 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $z0 = interfaceinvoke $r1.<android.database.CrossProcessCursor: boolean isNull(int)>($i0);

        return $z0;
    }
    public boolean move(int)
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        int $i0;
        boolean $z0;
        android.database.CrossProcessCursor $r1;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r1 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $z0 = interfaceinvoke $r1.<android.database.CrossProcessCursor: boolean move(int)>($i0);

        return $z0;
    }
    public boolean moveToFirst()
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        boolean $z0;
        android.database.CrossProcessCursor $r1;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r1 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $z0 = interfaceinvoke $r1.<android.database.CrossProcessCursor: boolean moveToFirst()>();

        return $z0;
    }
    public boolean moveToLast()
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        boolean $z0;
        android.database.CrossProcessCursor $r1;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r1 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $z0 = interfaceinvoke $r1.<android.database.CrossProcessCursor: boolean moveToLast()>();

        return $z0;
    }
    public boolean moveToNext()
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        boolean $z0;
        android.database.CrossProcessCursor $r1;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r1 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $z0 = interfaceinvoke $r1.<android.database.CrossProcessCursor: boolean moveToNext()>();

        return $z0;
    }
    public boolean moveToPosition(int)
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        int $i0;
        boolean $z0;
        android.database.CrossProcessCursor $r1;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r1 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $z0 = interfaceinvoke $r1.<android.database.CrossProcessCursor: boolean moveToPosition(int)>($i0);

        return $z0;
    }
    public boolean moveToPrevious()
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        boolean $z0;
        android.database.CrossProcessCursor $r1;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r1 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $z0 = interfaceinvoke $r1.<android.database.CrossProcessCursor: boolean moveToPrevious()>();

        return $z0;
    }
    public boolean onMove(int, int)
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        int $i0, $i1;
        boolean $z0;
        android.database.CrossProcessCursor $r1;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r1 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $z0 = interfaceinvoke $r1.<android.database.CrossProcessCursor: boolean onMove(int,int)>($i0, $i1);

        return $z0;
    }
    public void registerContentObserver(android.database.ContentObserver)
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        android.database.ContentObserver $r1;
        android.database.CrossProcessCursor $r2;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        $r1 := @parameter0: android.database.ContentObserver;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r2 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        interfaceinvoke $r2.<android.database.CrossProcessCursor: void registerContentObserver(android.database.ContentObserver)>($r1);

        return;
    }
    public void registerDataSetObserver(android.database.DataSetObserver)
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        android.database.DataSetObserver $r1;
        android.database.CrossProcessCursor $r2;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        $r1 := @parameter0: android.database.DataSetObserver;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r2 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        interfaceinvoke $r2.<android.database.CrossProcessCursor: void registerDataSetObserver(android.database.DataSetObserver)>($r1);

        return;
    }
    public boolean requery()
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        boolean $z0;
        android.database.CrossProcessCursor $r1;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r1 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $z0 = interfaceinvoke $r1.<android.database.CrossProcessCursor: boolean requery()>();

        return $z0;
    }
    public android.os.Bundle respond(android.os.Bundle)
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        android.os.Bundle $r1;
        android.database.CrossProcessCursor $r2;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        $r1 := @parameter0: android.os.Bundle;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r2 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        $r1 = interfaceinvoke $r2.<android.database.CrossProcessCursor: android.os.Bundle respond(android.os.Bundle)>($r1);

        return $r1;
    }
    public void setExtras(android.os.Bundle)
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        android.os.Bundle $r1;
        android.database.CrossProcessCursor $r2;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        $r1 := @parameter0: android.os.Bundle;

        $r2 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        interfaceinvoke $r2.<android.database.CrossProcessCursor: void setExtras(android.os.Bundle)>($r1);

        return;
    }
    public void setNotificationUri(android.content.ContentResolver, android.net.Uri)
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        android.content.ContentResolver $r1;
        android.net.Uri $r2;
        android.database.CrossProcessCursor $r3;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        $r1 := @parameter0: android.content.ContentResolver;

        $r2 := @parameter1: android.net.Uri;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r3 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        interfaceinvoke $r3.<android.database.CrossProcessCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>($r1, $r2);

        return;
    }
    public void unregisterContentObserver(android.database.ContentObserver)
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        android.database.ContentObserver $r1;
        android.database.CrossProcessCursor $r2;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        $r1 := @parameter0: android.database.ContentObserver;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r2 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        interfaceinvoke $r2.<android.database.CrossProcessCursor: void unregisterContentObserver(android.database.ContentObserver)>($r1);

        return;
    }
    public void unregisterDataSetObserver(android.database.DataSetObserver)
    {
        com.fsck.k9.provider.MessageProvider$MonitoredCursor r0;
        android.database.DataSetObserver $r1;
        android.database.CrossProcessCursor $r2;

        r0 := @this: com.fsck.k9.provider.MessageProvider$MonitoredCursor;

        $r1 := @parameter0: android.database.DataSetObserver;

        virtualinvoke r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: void checkClosed()>();

        $r2 = r0.<com.fsck.k9.provider.MessageProvider$MonitoredCursor: android.database.CrossProcessCursor mCursor>;

        interfaceinvoke $r2.<android.database.CrossProcessCursor: void unregisterDataSetObserver(android.database.DataSetObserver)>($r1);

        return;
    }
