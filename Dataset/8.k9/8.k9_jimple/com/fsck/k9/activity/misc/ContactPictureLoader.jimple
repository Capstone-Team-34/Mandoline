com.fsck.k9.activity.misc.ContactPictureLoader extends java.lang.Object
private static final int[] CONTACT_DUMMY_COLORS_ARGB
private static final java.util.regex.Pattern EXTRACT_LETTER_PATTERN
private static final java.lang.String FALLBACK_CONTACT_LETTER
private static final int PICTURE_SIZE
private final android.support.v4.util.LruCache mBitmapCache
private com.fsck.k9.helper.Contacts mContactsHelper
private android.content.ContentResolver mContentResolver
private int mDefaultBackgroundColor
private int mPictureSizeInPx
private android.content.res.Resources mResources
    static void <clinit>()
    {
        java.util.regex.Pattern $r0;
        int[] $r1;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[a-zA-Z]");

        <com.fsck.k9.activity.misc.ContactPictureLoader: java.util.regex.Pattern EXTRACT_LETTER_PATTERN> = $r0;

        $r1 = newarray (int)[10];

        $r1[0] = -13388315;

        $r1[1] = -5609780;

        $r1[2] = -6697984;

        $r1[3] = -17613;

        $r1[4] = -48060;

        $r1[5] = -16737844;

        $r1[6] = -6736948;

        $r1[7] = -10053376;

        $r1[8] = -30720;

        $r1[9] = -3407872;

        <com.fsck.k9.activity.misc.ContactPictureLoader: int[] CONTACT_DUMMY_COLORS_ARGB> = $r1;

        return;
    }
    public void <init>(android.content.Context, int)
    {
        com.fsck.k9.activity.misc.ContactPictureLoader r0;
        android.content.Context $r1;
        int $i0, $i1;
        float f0;
        android.content.ContentResolver $r2;
        android.content.res.Resources $r3;
        com.fsck.k9.helper.Contacts $r4;
        android.util.DisplayMetrics $r5;
        java.lang.Object $r6;
        android.app.ActivityManager r7;
        com.fsck.k9.activity.misc.ContactPictureLoader$1 $r8;

        r0 := @this: com.fsck.k9.activity.misc.ContactPictureLoader;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke $r1.<android.content.Context: android.content.Context getApplicationContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r0.<com.fsck.k9.activity.misc.ContactPictureLoader: android.content.ContentResolver mContentResolver> = $r2;

        $r3 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        r0.<com.fsck.k9.activity.misc.ContactPictureLoader: android.content.res.Resources mResources> = $r3;

        $r4 = staticinvoke <com.fsck.k9.helper.Contacts: com.fsck.k9.helper.Contacts getInstance(android.content.Context)>($r1);

        r0.<com.fsck.k9.activity.misc.ContactPictureLoader: com.fsck.k9.helper.Contacts mContactsHelper> = $r4;

        $r3 = r0.<com.fsck.k9.activity.misc.ContactPictureLoader: android.content.res.Resources mResources>;

        $r5 = virtualinvoke $r3.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = $r5.<android.util.DisplayMetrics: float density>;

        f0 = 40.0F * f0;

        $i1 = (int) f0;

        r0.<com.fsck.k9.activity.misc.ContactPictureLoader: int mPictureSizeInPx> = $i1;

        r0.<com.fsck.k9.activity.misc.ContactPictureLoader: int mDefaultBackgroundColor> = $i0;

        $r6 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("activity");

        r7 = (android.app.ActivityManager) $r6;

        $i0 = virtualinvoke r7.<android.app.ActivityManager: int getMemoryClass()>();

        $i0 = 1048576 * $i0;

        $i0 = $i0 / 16;

        $r8 = new com.fsck.k9.activity.misc.ContactPictureLoader$1;

        specialinvoke $r8.<com.fsck.k9.activity.misc.ContactPictureLoader$1: void <init>(com.fsck.k9.activity.misc.ContactPictureLoader,int)>(r0, $i0);

        r0.<com.fsck.k9.activity.misc.ContactPictureLoader: android.support.v4.util.LruCache mBitmapCache> = $r8;

        return;
    }
    static com.fsck.k9.helper.Contacts access$000(com.fsck.k9.activity.misc.ContactPictureLoader)
    {
        com.fsck.k9.activity.misc.ContactPictureLoader $r0;
        com.fsck.k9.helper.Contacts r1;

        $r0 := @parameter0: com.fsck.k9.activity.misc.ContactPictureLoader;

        r1 = $r0.<com.fsck.k9.activity.misc.ContactPictureLoader: com.fsck.k9.helper.Contacts mContactsHelper>;

        return r1;
    }
    static android.content.ContentResolver access$100(com.fsck.k9.activity.misc.ContactPictureLoader)
    {
        com.fsck.k9.activity.misc.ContactPictureLoader $r0;
        android.content.ContentResolver r1;

        $r0 := @parameter0: com.fsck.k9.activity.misc.ContactPictureLoader;

        r1 = $r0.<com.fsck.k9.activity.misc.ContactPictureLoader: android.content.ContentResolver mContentResolver>;

        return r1;
    }
    static int access$200(com.fsck.k9.activity.misc.ContactPictureLoader)
    {
        com.fsck.k9.activity.misc.ContactPictureLoader $r0;
        int i0;

        $r0 := @parameter0: com.fsck.k9.activity.misc.ContactPictureLoader;

        i0 = $r0.<com.fsck.k9.activity.misc.ContactPictureLoader: int mPictureSizeInPx>;

        return i0;
    }
    static android.graphics.Bitmap access$300(com.fsck.k9.activity.misc.ContactPictureLoader, com.fsck.k9.mail.Address)
    {
        com.fsck.k9.activity.misc.ContactPictureLoader $r0;
        com.fsck.k9.mail.Address $r1;
        android.graphics.Bitmap $r2;

        $r0 := @parameter0: com.fsck.k9.activity.misc.ContactPictureLoader;

        $r1 := @parameter1: com.fsck.k9.mail.Address;

        $r2 = specialinvoke $r0.<com.fsck.k9.activity.misc.ContactPictureLoader: android.graphics.Bitmap calculateFallbackBitmap(com.fsck.k9.mail.Address)>($r1);

        return $r2;
    }
    static void access$400(com.fsck.k9.activity.misc.ContactPictureLoader, com.fsck.k9.mail.Address, android.graphics.Bitmap)
    {
        com.fsck.k9.activity.misc.ContactPictureLoader $r0;
        com.fsck.k9.mail.Address $r1;
        android.graphics.Bitmap $r2;

        $r0 := @parameter0: com.fsck.k9.activity.misc.ContactPictureLoader;

        $r1 := @parameter1: com.fsck.k9.mail.Address;

        $r2 := @parameter2: android.graphics.Bitmap;

        specialinvoke $r0.<com.fsck.k9.activity.misc.ContactPictureLoader: void addBitmapToCache(com.fsck.k9.mail.Address,android.graphics.Bitmap)>($r1, $r2);

        return;
    }
    static com.fsck.k9.activity.misc.ContactPictureLoader$ContactPictureRetrievalTask access$500(com.fsck.k9.activity.misc.ContactPictureLoader, android.widget.ImageView)
    {
        com.fsck.k9.activity.misc.ContactPictureLoader $r0;
        android.widget.ImageView $r1;
        com.fsck.k9.activity.misc.ContactPictureLoader$ContactPictureRetrievalTask $r2;

        $r0 := @parameter0: com.fsck.k9.activity.misc.ContactPictureLoader;

        $r1 := @parameter1: android.widget.ImageView;

        $r2 = specialinvoke $r0.<com.fsck.k9.activity.misc.ContactPictureLoader: com.fsck.k9.activity.misc.ContactPictureLoader$ContactPictureRetrievalTask getContactPictureRetrievalTask(android.widget.ImageView)>($r1);

        return $r2;
    }
    private void addBitmapToCache(com.fsck.k9.mail.Address, android.graphics.Bitmap)
    {
        com.fsck.k9.activity.misc.ContactPictureLoader r0;
        com.fsck.k9.mail.Address $r1;
        android.graphics.Bitmap $r2, $r3;
        android.support.v4.util.LruCache $r4;

        r0 := @this: com.fsck.k9.activity.misc.ContactPictureLoader;

        $r1 := @parameter0: com.fsck.k9.mail.Address;

        $r2 := @parameter1: android.graphics.Bitmap;

        $r3 = specialinvoke r0.<com.fsck.k9.activity.misc.ContactPictureLoader: android.graphics.Bitmap getBitmapFromCache(com.fsck.k9.mail.Address)>($r1);

        if $r3 != null goto label1;

        $r4 = r0.<com.fsck.k9.activity.misc.ContactPictureLoader: android.support.v4.util.LruCache mBitmapCache>;

        virtualinvoke $r4.<android.support.v4.util.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

     label1:
        return;
    }
    private int calcUnknownContactColor(com.fsck.k9.mail.Address)
    {
        com.fsck.k9.activity.misc.ContactPictureLoader r0;
        com.fsck.k9.mail.Address $r1;
        int i0, $i1;
        int[] $r2;

        r0 := @this: com.fsck.k9.activity.misc.ContactPictureLoader;

        $r1 := @parameter0: com.fsck.k9.mail.Address;

        i0 = r0.<com.fsck.k9.activity.misc.ContactPictureLoader: int mDefaultBackgroundColor>;

        if i0 == 0 goto label1;

        i0 = r0.<com.fsck.k9.activity.misc.ContactPictureLoader: int mDefaultBackgroundColor>;

        return i0;

     label1:
        i0 = virtualinvoke $r1.<com.fsck.k9.mail.Address: int hashCode()>();

        i0 = 2147483647 & i0;

        $r2 = <com.fsck.k9.activity.misc.ContactPictureLoader: int[] CONTACT_DUMMY_COLORS_ARGB>;

        $i1 = lengthof $r2;

        i0 = i0 % $i1;

        $r2 = <com.fsck.k9.activity.misc.ContactPictureLoader: int[] CONTACT_DUMMY_COLORS_ARGB>;

        i0 = $r2[i0];

        return i0;
    }
    private java.lang.String calcUnknownContactLetter(com.fsck.k9.mail.Address)
    {
        com.fsck.k9.activity.misc.ContactPictureLoader r0;
        com.fsck.k9.mail.Address $r1;
        java.util.Locale $r2;
        java.lang.String r3, $r4;
        java.util.regex.Pattern $r5;
        java.util.regex.Matcher $r6;
        boolean $z0;

        r0 := @this: com.fsck.k9.activity.misc.ContactPictureLoader;

        $r1 := @parameter0: com.fsck.k9.mail.Address;

        r3 = null;

        $r4 = virtualinvoke $r1.<com.fsck.k9.mail.Address: java.lang.String getPersonal()>();

        if $r4 == null goto label3;

     label1:
        $r5 = <com.fsck.k9.activity.misc.ContactPictureLoader: java.util.regex.Pattern EXTRACT_LETTER_PATTERN>;

        $r6 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r4);

        $z0 = virtualinvoke $r6.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label2;

        r3 = virtualinvoke $r6.<java.util.regex.Matcher: java.lang.String group(int)>(0);

        $r2 = <java.util.Locale: java.util.Locale US>;

        r3 = virtualinvoke r3.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r2);

     label2:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z0 == 0 goto label4;

        return "?";

     label3:
        $r4 = virtualinvoke $r1.<com.fsck.k9.mail.Address: java.lang.String getAddress()>();

        goto label1;

     label4:
        r3 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        return r3;
    }
    private android.graphics.Bitmap calculateFallbackBitmap(com.fsck.k9.mail.Address)
    {
        com.fsck.k9.activity.misc.ContactPictureLoader r0;
        com.fsck.k9.mail.Address $r1;
        android.graphics.Canvas r2;
        android.graphics.Paint r3;
        android.graphics.Rect r4;
        int $i0, $i1;
        android.graphics.Bitmap$Config $r5;
        android.graphics.Bitmap $r6;
        java.lang.String $r7;
        android.graphics.Paint$Style $r8;
        float $f0, $f1, $f2;

        r0 := @this: com.fsck.k9.activity.misc.ContactPictureLoader;

        $r1 := @parameter0: com.fsck.k9.mail.Address;

        $i0 = r0.<com.fsck.k9.activity.misc.ContactPictureLoader: int mPictureSizeInPx>;

        $i1 = r0.<com.fsck.k9.activity.misc.ContactPictureLoader: int mPictureSizeInPx>;

        $r5 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r6 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r5);

        r2 = new android.graphics.Canvas;

        specialinvoke r2.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r6);

        $i0 = specialinvoke r0.<com.fsck.k9.activity.misc.ContactPictureLoader: int calcUnknownContactColor(com.fsck.k9.mail.Address)>($r1);

        virtualinvoke $r6.<android.graphics.Bitmap: void eraseColor(int)>($i0);

        $r7 = specialinvoke r0.<com.fsck.k9.activity.misc.ContactPictureLoader: java.lang.String calcUnknownContactLetter(com.fsck.k9.mail.Address)>($r1);

        r3 = new android.graphics.Paint;

        specialinvoke r3.<android.graphics.Paint: void <init>()>();

        virtualinvoke r3.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r8 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke r3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r8);

        virtualinvoke r3.<android.graphics.Paint: void setARGB(int,int,int,int)>(255, 255, 255, 255);

        $i0 = r0.<com.fsck.k9.activity.misc.ContactPictureLoader: int mPictureSizeInPx>;

        $i0 = $i0 * 3;

        $i0 = $i0 / 4;

        $f0 = (float) $i0;

        virtualinvoke r3.<android.graphics.Paint: void setTextSize(float)>($f0);

        r4 = new android.graphics.Rect;

        specialinvoke r4.<android.graphics.Rect: void <init>()>();

        virtualinvoke r3.<android.graphics.Paint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)>($r7, 0, 1, r4);

        $f0 = virtualinvoke r3.<android.graphics.Paint: float measureText(java.lang.String)>($r7);

        $i0 = r0.<com.fsck.k9.activity.misc.ContactPictureLoader: int mPictureSizeInPx>;

        $f1 = (float) $i0;

        $f1 = $f1 / 2.0F;

        $f0 = $f0 / 2.0F;

        $f0 = $f1 - $f0;

        $i0 = r0.<com.fsck.k9.activity.misc.ContactPictureLoader: int mPictureSizeInPx>;

        $f1 = (float) $i0;

        $f1 = $f1 / 2.0F;

        $i0 = virtualinvoke r4.<android.graphics.Rect: int height()>();

        $f2 = (float) $i0;

        $f2 = $f2 / 2.0F;

        $f1 = $f1 + $f2;

        virtualinvoke r2.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r7, $f0, $f1, r3);

        return $r6;
    }
    private boolean cancelPotentialWork(com.fsck.k9.mail.Address, android.widget.ImageView)
    {
        com.fsck.k9.activity.misc.ContactPictureLoader r0;
        com.fsck.k9.mail.Address $r1, $r4;
        android.widget.ImageView $r2;
        com.fsck.k9.activity.misc.ContactPictureLoader$ContactPictureRetrievalTask $r3;
        boolean $z0;

        r0 := @this: com.fsck.k9.activity.misc.ContactPictureLoader;

        $r1 := @parameter0: com.fsck.k9.mail.Address;

        $r2 := @parameter1: android.widget.ImageView;

        $r3 = specialinvoke r0.<com.fsck.k9.activity.misc.ContactPictureLoader: com.fsck.k9.activity.misc.ContactPictureLoader$ContactPictureRetrievalTask getContactPictureRetrievalTask(android.widget.ImageView)>($r2);

        if $r3 == null goto label2;

        if $r1 == null goto label2;

        $r4 = virtualinvoke $r3.<com.fsck.k9.activity.misc.ContactPictureLoader$ContactPictureRetrievalTask: com.fsck.k9.mail.Address getAddress()>();

        $z0 = virtualinvoke $r1.<com.fsck.k9.mail.Address: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        virtualinvoke $r3.<com.fsck.k9.activity.misc.ContactPictureLoader$ContactPictureRetrievalTask: boolean cancel(boolean)>(1);

        return 1;

     label1:
        return 0;

     label2:
        return 1;
    }
    private android.graphics.Bitmap getBitmapFromCache(com.fsck.k9.mail.Address)
    {
        com.fsck.k9.activity.misc.ContactPictureLoader r0;
        com.fsck.k9.mail.Address $r1;
        java.lang.Object $r2;
        android.support.v4.util.LruCache $r3;
        android.graphics.Bitmap $r4;

        r0 := @this: com.fsck.k9.activity.misc.ContactPictureLoader;

        $r1 := @parameter0: com.fsck.k9.mail.Address;

        $r3 = r0.<com.fsck.k9.activity.misc.ContactPictureLoader: android.support.v4.util.LruCache mBitmapCache>;

        $r2 = virtualinvoke $r3.<android.support.v4.util.LruCache: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (android.graphics.Bitmap) $r2;

        return $r4;
    }
    private com.fsck.k9.activity.misc.ContactPictureLoader$ContactPictureRetrievalTask getContactPictureRetrievalTask(android.widget.ImageView)
    {
        com.fsck.k9.activity.misc.ContactPictureLoader r0;
        android.widget.ImageView $r1;
        android.graphics.drawable.Drawable $r2;
        boolean $z0;
        com.fsck.k9.activity.misc.ContactPictureLoader$AsyncDrawable r3;
        com.fsck.k9.activity.misc.ContactPictureLoader$ContactPictureRetrievalTask $r4;

        r0 := @this: com.fsck.k9.activity.misc.ContactPictureLoader;

        $r1 := @parameter0: android.widget.ImageView;

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        $z0 = $r2 instanceof com.fsck.k9.activity.misc.ContactPictureLoader$AsyncDrawable;

        if $z0 == 0 goto label1;

        r3 = (com.fsck.k9.activity.misc.ContactPictureLoader$AsyncDrawable) $r2;

        $r4 = virtualinvoke r3.<com.fsck.k9.activity.misc.ContactPictureLoader$AsyncDrawable: com.fsck.k9.activity.misc.ContactPictureLoader$ContactPictureRetrievalTask getContactPictureRetrievalTask()>();

        return $r4;

     label1:
        return null;
    }
    public void loadContactPicture(com.fsck.k9.mail.Address, android.widget.ImageView)
    {
        com.fsck.k9.activity.misc.ContactPictureLoader r0;
        com.fsck.k9.mail.Address $r1;
        android.widget.ImageView $r2;
        com.fsck.k9.activity.misc.ContactPictureLoader$AsyncDrawable r3;
        java.util.concurrent.RejectedExecutionException r4;
        com.fsck.k9.activity.misc.ContactPictureLoader$ContactPictureRetrievalTask r5;
        android.graphics.Bitmap $r6;
        boolean $z0;
        android.content.res.Resources $r7;
        java.util.concurrent.Executor $r8;
        java.lang.Void[] $r9;

        r0 := @this: com.fsck.k9.activity.misc.ContactPictureLoader;

        $r1 := @parameter0: com.fsck.k9.mail.Address;

        $r2 := @parameter1: android.widget.ImageView;

        $r6 = specialinvoke r0.<com.fsck.k9.activity.misc.ContactPictureLoader: android.graphics.Bitmap getBitmapFromCache(com.fsck.k9.mail.Address)>($r1);

        if $r6 == null goto label1;

        virtualinvoke $r2.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>($r6);

        return;

     label1:
        $z0 = specialinvoke r0.<com.fsck.k9.activity.misc.ContactPictureLoader: boolean cancelPotentialWork(com.fsck.k9.mail.Address,android.widget.ImageView)>($r1, $r2);

        if $z0 == 0 goto label5;

        r5 = new com.fsck.k9.activity.misc.ContactPictureLoader$ContactPictureRetrievalTask;

        specialinvoke r5.<com.fsck.k9.activity.misc.ContactPictureLoader$ContactPictureRetrievalTask: void <init>(com.fsck.k9.activity.misc.ContactPictureLoader,android.widget.ImageView,com.fsck.k9.mail.Address)>(r0, $r2, $r1);

        r3 = new com.fsck.k9.activity.misc.ContactPictureLoader$AsyncDrawable;

        $r7 = r0.<com.fsck.k9.activity.misc.ContactPictureLoader: android.content.res.Resources mResources>;

        $r6 = specialinvoke r0.<com.fsck.k9.activity.misc.ContactPictureLoader: android.graphics.Bitmap calculateFallbackBitmap(com.fsck.k9.mail.Address)>($r1);

        specialinvoke r3.<com.fsck.k9.activity.misc.ContactPictureLoader$AsyncDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap,com.fsck.k9.activity.misc.ContactPictureLoader$ContactPictureRetrievalTask)>($r7, $r6, r5);

        virtualinvoke $r2.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>(r3);

        $r8 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r9 = newarray (java.lang.Void)[0];

     label2:
        virtualinvoke r5.<com.fsck.k9.activity.misc.ContactPictureLoader$ContactPictureRetrievalTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r8, $r9);

     label3:
        return;

     label4:
        r4 := @caughtexception;

        $r6 = specialinvoke r0.<com.fsck.k9.activity.misc.ContactPictureLoader: android.graphics.Bitmap calculateFallbackBitmap(com.fsck.k9.mail.Address)>($r1);

        virtualinvoke $r2.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>($r6);

     label5:
        return;

        catch java.util.concurrent.RejectedExecutionException from label2 to label3 with label4;
    }
