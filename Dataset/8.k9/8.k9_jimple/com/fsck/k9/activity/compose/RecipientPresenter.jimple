com.fsck.k9.activity.compose.RecipientPresenter extends java.lang.Object implements org.openintents.openpgp.util.OpenPgpApi$PermissionPingCallback
private static final int CONTACT_PICKER_BCC
private static final int CONTACT_PICKER_CC
private static final int CONTACT_PICKER_TO
private static final int OPENPGP_USER_INTERACTION
private static final java.lang.String STATE_KEY_BCC_SHOWN
private static final java.lang.String STATE_KEY_CC_SHOWN
private static final java.lang.String STATE_KEY_CRYPTO_ENABLE_PGP_INLINE
private static final java.lang.String STATE_KEY_CURRENT_CRYPTO_MODE
private static final java.lang.String STATE_KEY_LAST_FOCUSED_TYPE
private com.fsck.k9.Account account
private com.fsck.k9.activity.compose.ComposeCryptoStatus cachedCryptoStatus
private final com.fsck.k9.message.ComposePgpInlineDecider composePgpInlineDecider
private final android.content.Context context
private boolean cryptoEnablePgpInline
private java.lang.String cryptoProvider
private com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState cryptoProviderState
private com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode currentCryptoMode
private java.lang.Boolean hasContactPicker
private com.fsck.k9.mail.Message$RecipientType lastFocusedType
private org.openintents.openpgp.util.OpenPgpServiceConnection openPgpServiceConnection
private android.app.PendingIntent pendingUserInteractionIntent
private final com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView
private com.fsck.k9.helper.ReplyToParser replyToParser
    public void <init>(android.content.Context, android.app.LoaderManager, com.fsck.k9.activity.compose.RecipientMvpView, com.fsck.k9.Account, com.fsck.k9.message.ComposePgpInlineDecider, com.fsck.k9.helper.ReplyToParser)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        android.content.Context $r1;
        android.app.LoaderManager $r2;
        com.fsck.k9.activity.compose.RecipientMvpView $r3;
        com.fsck.k9.Account $r4;
        com.fsck.k9.message.ComposePgpInlineDecider $r5;
        com.fsck.k9.helper.ReplyToParser $r6;
        com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState $r7;
        com.fsck.k9.mail.Message$RecipientType $r8;
        com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode $r9;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.app.LoaderManager;

        $r3 := @parameter2: com.fsck.k9.activity.compose.RecipientMvpView;

        $r4 := @parameter3: com.fsck.k9.Account;

        $r5 := @parameter4: com.fsck.k9.message.ComposePgpInlineDecider;

        $r6 := @parameter5: com.fsck.k9.helper.ReplyToParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r7 = <com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState: com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState UNCONFIGURED>;

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState cryptoProviderState> = $r7;

        $r8 = <com.fsck.k9.mail.Message$RecipientType: com.fsck.k9.mail.Message$RecipientType TO>;

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.mail.Message$RecipientType lastFocusedType> = $r8;

        $r9 = <com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode: com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode OPPORTUNISTIC>;

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode currentCryptoMode> = $r9;

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: boolean cryptoEnablePgpInline> = 0;

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView> = $r3;

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: android.content.Context context> = $r1;

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.message.ComposePgpInlineDecider composePgpInlineDecider> = $r5;

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.helper.ReplyToParser replyToParser> = $r6;

        virtualinvoke $r3.<com.fsck.k9.activity.compose.RecipientMvpView: void setPresenter(com.fsck.k9.activity.compose.RecipientPresenter)>(r0);

        virtualinvoke $r3.<com.fsck.k9.activity.compose.RecipientMvpView: void setLoaderManager(android.app.LoaderManager)>($r2);

        virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)>($r4);

        virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void updateCryptoStatus()>();

        return;
    }
    static com.fsck.k9.activity.compose.RecipientMvpView access$000(com.fsck.k9.activity.compose.RecipientPresenter)
    {
        com.fsck.k9.activity.compose.RecipientPresenter $r0;
        com.fsck.k9.activity.compose.RecipientMvpView r1;

        $r0 := @parameter0: com.fsck.k9.activity.compose.RecipientPresenter;

        r1 = $r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        return r1;
    }
    static void access$100(com.fsck.k9.activity.compose.RecipientPresenter)
    {
        com.fsck.k9.activity.compose.RecipientPresenter $r0;

        $r0 := @parameter0: com.fsck.k9.activity.compose.RecipientPresenter;

        specialinvoke $r0.<com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()>();

        return;
    }
    static void access$200(com.fsck.k9.activity.compose.RecipientPresenter, java.lang.Exception)
    {
        com.fsck.k9.activity.compose.RecipientPresenter $r0;
        java.lang.Exception $r1;

        $r0 := @parameter0: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter1: java.lang.Exception;

        specialinvoke $r0.<com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoProviderError(java.lang.Exception)>($r1);

        return;
    }
    private void addRecipientFromContactUri(com.fsck.k9.mail.Message$RecipientType, android.net.Uri)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.mail.Message$RecipientType $r1;
        android.net.Uri $r2;
        com.fsck.k9.activity.compose.RecipientPresenter$2 $r3;
        android.content.Context $r4;
        java.lang.String $r5;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: com.fsck.k9.mail.Message$RecipientType;

        $r2 := @parameter1: android.net.Uri;

        $r3 = new com.fsck.k9.activity.compose.RecipientPresenter$2;

        $r4 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: android.content.Context context>;

        $r5 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: java.lang.String cryptoProvider>;

        specialinvoke $r3.<com.fsck.k9.activity.compose.RecipientPresenter$2: void <init>(com.fsck.k9.activity.compose.RecipientPresenter,android.content.Context,java.lang.String,android.net.Uri,boolean,com.fsck.k9.mail.Message$RecipientType)>(r0, $r4, $r5, $r2, 0, $r1);

        virtualinvoke $r3.<com.fsck.k9.activity.compose.RecipientPresenter$2: void startLoading()>();

        return;
    }
    private transient void addRecipientsFromAddresses(com.fsck.k9.mail.Message$RecipientType, com.fsck.k9.mail.Address[])
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.mail.Message$RecipientType $r1;
        com.fsck.k9.mail.Address[] $r2;
        com.fsck.k9.activity.compose.RecipientPresenter$1 $r3;
        android.content.Context $r4;
        java.lang.String $r5;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: com.fsck.k9.mail.Message$RecipientType;

        $r2 := @parameter1: com.fsck.k9.mail.Address[];

        $r3 = new com.fsck.k9.activity.compose.RecipientPresenter$1;

        $r4 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: android.content.Context context>;

        $r5 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: java.lang.String cryptoProvider>;

        specialinvoke $r3.<com.fsck.k9.activity.compose.RecipientPresenter$1: void <init>(com.fsck.k9.activity.compose.RecipientPresenter,android.content.Context,java.lang.String,com.fsck.k9.mail.Address[],com.fsck.k9.mail.Message$RecipientType)>(r0, $r4, $r5, $r2, $r1);

        virtualinvoke $r3.<com.fsck.k9.activity.compose.RecipientPresenter$1: void startLoading()>();

        return;
    }
    private static com.fsck.k9.mail.Address[] addressFromStringArray(java.util.List)
    {
        java.util.List r0;
        java.util.ArrayList r1;
        int $i0;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.String r4;
        com.fsck.k9.mail.Address[] $r5;
        java.lang.Object[] $r6;

        r0 := @parameter0: java.util.List;

        r1 = new java.util.ArrayList;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        specialinvoke r1.<java.util.ArrayList: void <init>(int)>($i0);

        $r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r3;

        $r5 = staticinvoke <com.fsck.k9.mail.Address: com.fsck.k9.mail.Address[] parseUnencoded(java.lang.String)>(r4);

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(r1, $r5);

        goto label1;

     label2:
        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $r5 = newarray (com.fsck.k9.mail.Address)[$i0];

        $r6 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r5 = (com.fsck.k9.mail.Address[]) $r6;

        return $r5;
    }
    private static com.fsck.k9.mail.Address[] addressFromStringArray(java.lang.String[])
    {
        java.lang.String[] $r0;
        java.util.List $r1;
        com.fsck.k9.mail.Address[] $r2;

        $r0 := @parameter0: java.lang.String[];

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        $r2 = staticinvoke <com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.mail.Address[] addressFromStringArray(java.util.List)>($r1);

        return $r2;
    }
    private void cryptoProviderBindOrCheckPermission()
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        android.app.PendingIntent $r1;
        org.openintents.openpgp.util.OpenPgpServiceConnection $r2;
        com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState $r3;
        boolean $z0;
        com.fsck.k9.activity.compose.RecipientMvpView $r4;
        org.openintents.openpgp.util.OpenPgpApi $r5;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r2 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: org.openintents.openpgp.util.OpenPgpServiceConnection openPgpServiceConnection>;

        if $r2 != null goto label1;

        $r3 = <com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState: com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState UNCONFIGURED>;

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState cryptoProviderState> = $r3;

        return;

     label1:
        $r2 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: org.openintents.openpgp.util.OpenPgpServiceConnection openPgpServiceConnection>;

        $z0 = virtualinvoke $r2.<org.openintents.openpgp.util.OpenPgpServiceConnection: boolean isBound()>();

        if $z0 != 0 goto label2;

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: android.app.PendingIntent pendingUserInteractionIntent> = null;

        $r2 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: org.openintents.openpgp.util.OpenPgpServiceConnection openPgpServiceConnection>;

        virtualinvoke $r2.<org.openintents.openpgp.util.OpenPgpServiceConnection: void bindToService()>();

        return;

     label2:
        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: android.app.PendingIntent pendingUserInteractionIntent>;

        if $r1 == null goto label3;

        $r4 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: android.app.PendingIntent pendingUserInteractionIntent>;

        virtualinvoke $r4.<com.fsck.k9.activity.compose.RecipientMvpView: void launchUserInteractionPendingIntent(android.app.PendingIntent,int)>($r1, 4);

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: android.app.PendingIntent pendingUserInteractionIntent> = null;

        return;

     label3:
        $r5 = virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: org.openintents.openpgp.util.OpenPgpApi getOpenPgpApi()>();

        virtualinvoke $r5.<org.openintents.openpgp.util.OpenPgpApi: void checkPermissionPing(org.openintents.openpgp.util.OpenPgpApi$PermissionPingCallback)>(r0);

        return;
    }
    private void hideEmptyExtendedRecipientFields()
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.activity.compose.RecipientMvpView $r1;
        java.util.List $r2;
        boolean $z0;
        com.fsck.k9.mail.Message$RecipientType $r3, $r4;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        $r2 = virtualinvoke $r1.<com.fsck.k9.activity.compose.RecipientMvpView: java.util.List getCcAddresses()>();

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        virtualinvoke $r1.<com.fsck.k9.activity.compose.RecipientMvpView: void setCcVisibility(boolean)>(0);

        $r3 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.mail.Message$RecipientType lastFocusedType>;

        $r4 = <com.fsck.k9.mail.Message$RecipientType: com.fsck.k9.mail.Message$RecipientType CC>;

        if $r3 != $r4 goto label1;

        $r3 = <com.fsck.k9.mail.Message$RecipientType: com.fsck.k9.mail.Message$RecipientType TO>;

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.mail.Message$RecipientType lastFocusedType> = $r3;

     label1:
        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        $r2 = virtualinvoke $r1.<com.fsck.k9.activity.compose.RecipientMvpView: java.util.List getBccAddresses()>();

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        virtualinvoke $r1.<com.fsck.k9.activity.compose.RecipientMvpView: void setBccVisibility(boolean)>(0);

        $r3 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.mail.Message$RecipientType lastFocusedType>;

        $r4 = <com.fsck.k9.mail.Message$RecipientType: com.fsck.k9.mail.Message$RecipientType BCC>;

        if $r3 != $r4 goto label2;

        $r3 = <com.fsck.k9.mail.Message$RecipientType: com.fsck.k9.mail.Message$RecipientType TO>;

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.mail.Message$RecipientType lastFocusedType> = $r3;

     label2:
        specialinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void updateRecipientExpanderVisibility()>();

        return;
    }
    private void initPgpInlineFromDraftMessage(com.fsck.k9.mail.Message)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.mail.Message $r1;
        boolean $z0;
        com.fsck.k9.mail.Flag $r2;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: com.fsck.k9.mail.Message;

        $r2 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag X_DRAFT_OPENPGP_INLINE>;

        $z0 = virtualinvoke $r1.<com.fsck.k9.mail.Message: boolean isSet(com.fsck.k9.mail.Flag)>($r2);

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: boolean cryptoEnablePgpInline> = $z0;

        return;
    }
    private void initRecipientsFromDraftMessage(com.fsck.k9.mail.Message)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.mail.Message $r1;
        com.fsck.k9.mail.Message$RecipientType $r2;
        com.fsck.k9.mail.Address[] $r3;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: com.fsck.k9.mail.Message;

        $r2 = <com.fsck.k9.mail.Message$RecipientType: com.fsck.k9.mail.Message$RecipientType TO>;

        $r3 = virtualinvoke $r1.<com.fsck.k9.mail.Message: com.fsck.k9.mail.Address[] getRecipients(com.fsck.k9.mail.Message$RecipientType)>($r2);

        virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void addToAddresses(com.fsck.k9.mail.Address[])>($r3);

        $r2 = <com.fsck.k9.mail.Message$RecipientType: com.fsck.k9.mail.Message$RecipientType CC>;

        $r3 = virtualinvoke $r1.<com.fsck.k9.mail.Message: com.fsck.k9.mail.Address[] getRecipients(com.fsck.k9.mail.Message$RecipientType)>($r2);

        virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void addCcAddresses(com.fsck.k9.mail.Address[])>($r3);

        $r2 = <com.fsck.k9.mail.Message$RecipientType: com.fsck.k9.mail.Message$RecipientType BCC>;

        $r3 = virtualinvoke $r1.<com.fsck.k9.mail.Message: com.fsck.k9.mail.Address[] getRecipients(com.fsck.k9.mail.Message$RecipientType)>($r2);

        virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void addBccAddresses(com.fsck.k9.mail.Address[])>($r3);

        return;
    }
    private void onCryptoProviderError(java.lang.Exception)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        java.lang.Exception $r1;
        com.fsck.k9.activity.compose.RecipientMvpView $r2;
        com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState $r3;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: java.lang.Exception;

        $r2 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        virtualinvoke $r2.<com.fsck.k9.activity.compose.RecipientMvpView: void showErrorOpenPgpConnection()>();

        $r3 = <com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState: com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState ERROR>;

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState cryptoProviderState> = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("k9", "error connecting to crypto provider!", $r1);

        virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void updateCryptoStatus()>();

        return;
    }
    private static com.fsck.k9.mail.Message$RecipientType recipientTypeFromRequestCode(int)
    {
        int $i0;
        com.fsck.k9.mail.Message$RecipientType r0;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 2: goto label2;
            case 3: goto label3;
            default: goto label1;
        };

     label1:
        r0 = <com.fsck.k9.mail.Message$RecipientType: com.fsck.k9.mail.Message$RecipientType TO>;

        return r0;

     label2:
        r0 = <com.fsck.k9.mail.Message$RecipientType: com.fsck.k9.mail.Message$RecipientType CC>;

        return r0;

     label3:
        r0 = <com.fsck.k9.mail.Message$RecipientType: com.fsck.k9.mail.Message$RecipientType BCC>;

        return r0;
    }
    private static int recipientTypeToRequestCode(com.fsck.k9.mail.Message$RecipientType)
    {
        com.fsck.k9.mail.Message$RecipientType $r0;
        int $i0;
        int[] $r1;

        $r0 := @parameter0: com.fsck.k9.mail.Message$RecipientType;

        $r1 = <com.fsck.k9.activity.compose.RecipientPresenter$4: int[] $SwitchMap$com$fsck$k9$mail$Message$RecipientType>;

        $i0 = virtualinvoke $r0.<com.fsck.k9.mail.Message$RecipientType: int ordinal()>();

        $i0 = $r1[$i0];

        lookupswitch($i0)
        {
            case 2: goto label2;
            case 3: goto label3;
            default: goto label1;
        };

     label1:
        return 1;

     label2:
        return 2;

     label3:
        return 3;
    }
    private void setCryptoProvider(java.lang.String)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        java.lang.String $r1, $r4;
        com.fsck.k9.activity.compose.RecipientPresenter$3 $r2;
        boolean z0, $z1, $z2;
        org.openintents.openpgp.util.OpenPgpServiceConnection $r3;
        com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState $r5;
        android.content.Context $r6;
        com.fsck.k9.activity.compose.RecipientMvpView $r7;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: java.lang.String;

        z0 = 1;

        $r3 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: org.openintents.openpgp.util.OpenPgpServiceConnection openPgpServiceConnection>;

        if $r3 == null goto label3;

        $r3 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: org.openintents.openpgp.util.OpenPgpServiceConnection openPgpServiceConnection>;

        $z1 = virtualinvoke $r3.<org.openintents.openpgp.util.OpenPgpServiceConnection: boolean isBound()>();

        if $z1 == 0 goto label3;

        $z1 = 1;

     label1:
        if $r1 == null goto label4;

        $r4 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: java.lang.String cryptoProvider>;

        $z2 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z2 == 0 goto label4;

     label2:
        if z0 == 0 goto label5;

        if $z1 == 0 goto label5;

        specialinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()>();

        return;

     label3:
        $z1 = 0;

        goto label1;

     label4:
        z0 = 0;

        goto label2;

     label5:
        if $z1 == 0 goto label6;

        $r3 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: org.openintents.openpgp.util.OpenPgpServiceConnection openPgpServiceConnection>;

        virtualinvoke $r3.<org.openintents.openpgp.util.OpenPgpServiceConnection: void unbindFromService()>();

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: org.openintents.openpgp.util.OpenPgpServiceConnection openPgpServiceConnection> = null;

     label6:
        r0.<com.fsck.k9.activity.compose.RecipientPresenter: java.lang.String cryptoProvider> = $r1;

        if $r1 != null goto label7;

        $r5 = <com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState: com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState UNCONFIGURED>;

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState cryptoProviderState> = $r5;

        return;

     label7:
        $r5 = <com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState: com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState UNINITIALIZED>;

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState cryptoProviderState> = $r5;

        $r3 = new org.openintents.openpgp.util.OpenPgpServiceConnection;

        $r6 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: android.content.Context context>;

        $r2 = new com.fsck.k9.activity.compose.RecipientPresenter$3;

        specialinvoke $r2.<com.fsck.k9.activity.compose.RecipientPresenter$3: void <init>(com.fsck.k9.activity.compose.RecipientPresenter)>(r0);

        specialinvoke $r3.<org.openintents.openpgp.util.OpenPgpServiceConnection: void <init>(android.content.Context,java.lang.String,org.openintents.openpgp.util.OpenPgpServiceConnection$OnBound)>($r6, $r1, $r2);

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: org.openintents.openpgp.util.OpenPgpServiceConnection openPgpServiceConnection> = $r3;

        specialinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()>();

        $r7 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        virtualinvoke $r7.<com.fsck.k9.activity.compose.RecipientMvpView: void setCryptoProvider(java.lang.String)>($r1);

        return;
    }
    private void updateRecipientExpanderVisibility()
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.activity.compose.RecipientMvpView $r1;
        boolean $z0;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        $z0 = virtualinvoke $r1.<com.fsck.k9.activity.compose.RecipientMvpView: boolean isCcVisible()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        $z0 = virtualinvoke $r1.<com.fsck.k9.activity.compose.RecipientMvpView: boolean isBccVisible()>();

        if $z0 != 0 goto label3;

     label1:
        $z0 = 1;

     label2:
        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        virtualinvoke $r1.<com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientExpanderVisibility(boolean)>($z0);

        return;

     label3:
        $z0 = 0;

        goto label2;
    }
    public transient void addBccAddresses(com.fsck.k9.mail.Address[])
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.mail.Address[] $r1;
        boolean $z0, $z1, $z2;
        int $i0;
        com.fsck.k9.mail.Message$RecipientType $r2;
        com.fsck.k9.Account $r3;
        java.lang.String $r4, $r7;
        com.fsck.k9.activity.compose.RecipientMvpView $r5;
        com.fsck.k9.mail.Address $r6;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: com.fsck.k9.mail.Address[];

        $z0 = 0;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label5;

        $r2 = <com.fsck.k9.mail.Message$RecipientType: com.fsck.k9.mail.Message$RecipientType BCC>;

        specialinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void addRecipientsFromAddresses(com.fsck.k9.mail.Message$RecipientType,com.fsck.k9.mail.Address[])>($r2, $r1);

        $r3 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.Account account>;

        $r4 = virtualinvoke $r3.<com.fsck.k9.Account: java.lang.String getAlwaysBcc()>();

        $r5 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        $z1 = virtualinvoke $r5.<com.fsck.k9.activity.compose.RecipientMvpView: boolean isBccVisible()>();

        $i0 = lengthof $r1;

        if $i0 != 1 goto label4;

        $r6 = $r1[0];

        $r7 = virtualinvoke $r6.<com.fsck.k9.mail.Address: java.lang.String toString()>();

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z2 == 0 goto label4;

        $z2 = 1;

     label1:
        $r5 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        if $z1 != 0 goto label2;

        if $z2 == 0 goto label3;

     label2:
        $z0 = 1;

     label3:
        virtualinvoke $r5.<com.fsck.k9.activity.compose.RecipientMvpView: void setBccVisibility(boolean)>($z0);

        specialinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void updateRecipientExpanderVisibility()>();

        return;

     label4:
        $z2 = 0;

        goto label1;

     label5:
        return;
    }
    transient void addCcAddresses(com.fsck.k9.mail.Address[])
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.mail.Address[] $r1;
        int $i0;
        com.fsck.k9.mail.Message$RecipientType $r2;
        com.fsck.k9.activity.compose.RecipientMvpView $r3;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: com.fsck.k9.mail.Address[];

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        $r2 = <com.fsck.k9.mail.Message$RecipientType: com.fsck.k9.mail.Message$RecipientType CC>;

        specialinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void addRecipientsFromAddresses(com.fsck.k9.mail.Message$RecipientType,com.fsck.k9.mail.Address[])>($r2, $r1);

        $r3 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        virtualinvoke $r3.<com.fsck.k9.activity.compose.RecipientMvpView: void setCcVisibility(boolean)>(1);

        specialinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void updateRecipientExpanderVisibility()>();

     label1:
        return;
    }
    transient void addToAddresses(com.fsck.k9.mail.Address[])
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.mail.Address[] $r1;
        com.fsck.k9.mail.Message$RecipientType $r2;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: com.fsck.k9.mail.Address[];

        $r2 = <com.fsck.k9.mail.Message$RecipientType: com.fsck.k9.mail.Message$RecipientType TO>;

        specialinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void addRecipientsFromAddresses(com.fsck.k9.mail.Message$RecipientType,com.fsck.k9.mail.Address[])>($r2, $r1);

        return;
    }
    public void builderSetProperties(com.fsck.k9.message.PgpMessageBuilder)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.message.PgpMessageBuilder $r1;
        org.openintents.openpgp.util.OpenPgpApi $r2;
        com.fsck.k9.activity.compose.ComposeCryptoStatus $r3;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: com.fsck.k9.message.PgpMessageBuilder;

        $r2 = virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: org.openintents.openpgp.util.OpenPgpApi getOpenPgpApi()>();

        virtualinvoke $r1.<com.fsck.k9.message.PgpMessageBuilder: void setOpenPgpApi(org.openintents.openpgp.util.OpenPgpApi)>($r2);

        $r3 = virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.ComposeCryptoStatus getCurrentCryptoStatus()>();

        virtualinvoke $r1.<com.fsck.k9.message.PgpMessageBuilder: void setCryptoStatus(com.fsck.k9.activity.compose.ComposeCryptoStatus)>($r3);

        return;
    }
    public boolean checkRecipientsOkForSending()
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.activity.compose.RecipientMvpView $r1;
        boolean $z0;
        java.util.List $r2;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        $z0 = virtualinvoke $r1.<com.fsck.k9.activity.compose.RecipientMvpView: boolean recipientToTryPerformCompletion()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        $z0 = virtualinvoke $r1.<com.fsck.k9.activity.compose.RecipientMvpView: boolean recipientCcTryPerformCompletion()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        $z0 = virtualinvoke $r1.<com.fsck.k9.activity.compose.RecipientMvpView: boolean recipientBccTryPerformCompletion()>();

        if $z0 == 0 goto label3;

     label1:
        $z0 = 1;

     label2:
        if $z0 == 0 goto label4;

        return 1;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        $z0 = virtualinvoke $r1.<com.fsck.k9.activity.compose.RecipientMvpView: boolean recipientToHasUncompletedText()>();

        if $z0 == 0 goto label5;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        virtualinvoke $r1.<com.fsck.k9.activity.compose.RecipientMvpView: void showToUncompletedError()>();

        return 1;

     label5:
        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        $z0 = virtualinvoke $r1.<com.fsck.k9.activity.compose.RecipientMvpView: boolean recipientCcHasUncompletedText()>();

        if $z0 == 0 goto label6;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        virtualinvoke $r1.<com.fsck.k9.activity.compose.RecipientMvpView: void showCcUncompletedError()>();

        return 1;

     label6:
        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        $z0 = virtualinvoke $r1.<com.fsck.k9.activity.compose.RecipientMvpView: boolean recipientBccHasUncompletedText()>();

        if $z0 == 0 goto label7;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        virtualinvoke $r1.<com.fsck.k9.activity.compose.RecipientMvpView: void showBccUncompletedError()>();

        return 1;

     label7:
        $r2 = virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: java.util.List getToAddresses()>();

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label8;

        $r2 = virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: java.util.List getCcAddresses()>();

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label8;

        $r2 = virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: java.util.List getBccAddresses()>();

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label8;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        virtualinvoke $r1.<com.fsck.k9.activity.compose.RecipientMvpView: void showNoRecipientsError()>();

        return 1;

     label8:
        return 0;
    }
    public java.util.List getAllRecipients()
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        java.util.ArrayList r1;
        com.fsck.k9.activity.compose.RecipientMvpView $r2;
        java.util.List $r3;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r2 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        $r3 = virtualinvoke $r2.<com.fsck.k9.activity.compose.RecipientMvpView: java.util.List getToRecipients()>();

        virtualinvoke r1.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r3);

        $r2 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        $r3 = virtualinvoke $r2.<com.fsck.k9.activity.compose.RecipientMvpView: java.util.List getCcRecipients()>();

        virtualinvoke r1.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r3);

        $r2 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        $r3 = virtualinvoke $r2.<com.fsck.k9.activity.compose.RecipientMvpView: java.util.List getBccRecipients()>();

        virtualinvoke r1.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r3);

        return r1;
    }
    public java.util.List getBccAddresses()
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        java.util.List $r1;
        com.fsck.k9.activity.compose.RecipientMvpView $r2;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r2 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        $r1 = virtualinvoke $r2.<com.fsck.k9.activity.compose.RecipientMvpView: java.util.List getBccAddresses()>();

        return $r1;
    }
    public java.util.List getCcAddresses()
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        java.util.List $r1;
        com.fsck.k9.activity.compose.RecipientMvpView $r2;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r2 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        $r1 = virtualinvoke $r2.<com.fsck.k9.activity.compose.RecipientMvpView: java.util.List getCcAddresses()>();

        return $r1;
    }
    public com.fsck.k9.activity.compose.ComposeCryptoStatus getCurrentCryptoStatus()
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.activity.compose.ComposeCryptoStatus $r1;
        com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder $r2;
        com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState $r3;
        com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode $r4;
        boolean $z0;
        java.util.List $r5;
        com.fsck.k9.Account $r6;
        long $l0;
        byte $b1;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.ComposeCryptoStatus cachedCryptoStatus>;

        if $r1 != null goto label2;

        $r2 = new com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder;

        specialinvoke $r2.<com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder: void <init>()>();

        $r3 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState cryptoProviderState>;

        $r2 = virtualinvoke $r2.<com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder: com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)>($r3);

        $r4 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode currentCryptoMode>;

        $r2 = virtualinvoke $r2.<com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder: com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder setCryptoMode(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)>($r4);

        $z0 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: boolean cryptoEnablePgpInline>;

        $r2 = virtualinvoke $r2.<com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder: com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder setEnablePgpInline(boolean)>($z0);

        $r5 = virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: java.util.List getAllRecipients()>();

        $r2 = virtualinvoke $r2.<com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder: com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder setRecipients(java.util.List)>($r5);

        $r6 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.Account account>;

        $l0 = virtualinvoke $r6.<com.fsck.k9.Account: long getCryptoKey()>();

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        virtualinvoke $r2.<com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder: com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder setSigningKeyId(long)>($l0);

        virtualinvoke $r2.<com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder: com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder setSelfEncryptId(long)>($l0);

     label1:
        $r1 = virtualinvoke $r2.<com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder: com.fsck.k9.activity.compose.ComposeCryptoStatus build()>();

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.ComposeCryptoStatus cachedCryptoStatus> = $r1;

     label2:
        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.ComposeCryptoStatus cachedCryptoStatus>;

        return $r1;
    }
    public org.openintents.openpgp.util.OpenPgpApi getOpenPgpApi()
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        org.openintents.openpgp.util.OpenPgpServiceConnection $r1;
        boolean $z0;
        org.openintents.openpgp.util.OpenPgpApi $r2;
        android.content.Context $r3;
        org.openintents.openpgp.IOpenPgpService2 $r4;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: org.openintents.openpgp.util.OpenPgpServiceConnection openPgpServiceConnection>;

        if $r1 == null goto label1;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: org.openintents.openpgp.util.OpenPgpServiceConnection openPgpServiceConnection>;

        $z0 = virtualinvoke $r1.<org.openintents.openpgp.util.OpenPgpServiceConnection: boolean isBound()>();

        if $z0 != 0 goto label2;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("k9", "obtained openpgpapi object, but service is not bound! inconsistent state?");

     label2:
        $r2 = new org.openintents.openpgp.util.OpenPgpApi;

        $r3 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: android.content.Context context>;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: org.openintents.openpgp.util.OpenPgpServiceConnection openPgpServiceConnection>;

        $r4 = virtualinvoke $r1.<org.openintents.openpgp.util.OpenPgpServiceConnection: org.openintents.openpgp.IOpenPgpService2 getService()>();

        specialinvoke $r2.<org.openintents.openpgp.util.OpenPgpApi: void <init>(android.content.Context,org.openintents.openpgp.IOpenPgpService2)>($r3, $r4);

        return $r2;
    }
    public java.util.List getToAddresses()
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        java.util.List $r1;
        com.fsck.k9.activity.compose.RecipientMvpView $r2;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r2 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        $r1 = virtualinvoke $r2.<com.fsck.k9.activity.compose.RecipientMvpView: java.util.List getToAddresses()>();

        return $r1;
    }
    public boolean hasContactPicker()
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        boolean $z0, $z1;
        java.lang.Boolean $r1;
        android.content.Context $r2;
        com.fsck.k9.helper.Contacts $r3;
        android.content.pm.PackageManager $r4;
        android.content.Intent $r5;
        java.util.List $r6;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $z0 = 0;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: java.lang.Boolean hasContactPicker>;

        if $r1 != null goto label2;

        $r2 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: android.content.Context context>;

        $r3 = staticinvoke <com.fsck.k9.helper.Contacts: com.fsck.k9.helper.Contacts getInstance(android.content.Context)>($r2);

        $r2 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: android.content.Context context>;

        $r4 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r5 = virtualinvoke $r3.<com.fsck.k9.helper.Contacts: android.content.Intent contactPickerIntent()>();

        $r6 = virtualinvoke $r4.<android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>($r5, 0);

        $z1 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        $z0 = 1;

     label1:
        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: java.lang.Boolean hasContactPicker> = $r1;

     label2:
        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: java.lang.Boolean hasContactPicker>;

        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }
    public void initFromDraftMessage(com.fsck.k9.mail.Message)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.mail.Message $r1;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: com.fsck.k9.mail.Message;

        specialinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void initRecipientsFromDraftMessage(com.fsck.k9.mail.Message)>($r1);

        specialinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void initPgpInlineFromDraftMessage(com.fsck.k9.mail.Message)>($r1);

        return;
    }
    public void initFromMailto(com.fsck.k9.helper.MailTo)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.helper.MailTo $r1;
        com.fsck.k9.mail.Address[] $r2;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: com.fsck.k9.helper.MailTo;

        $r2 = virtualinvoke $r1.<com.fsck.k9.helper.MailTo: com.fsck.k9.mail.Address[] getTo()>();

        virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void addToAddresses(com.fsck.k9.mail.Address[])>($r2);

        $r2 = virtualinvoke $r1.<com.fsck.k9.helper.MailTo: com.fsck.k9.mail.Address[] getCc()>();

        virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void addCcAddresses(com.fsck.k9.mail.Address[])>($r2);

        $r2 = virtualinvoke $r1.<com.fsck.k9.helper.MailTo: com.fsck.k9.mail.Address[] getBcc()>();

        virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void addBccAddresses(com.fsck.k9.mail.Address[])>($r2);

        return;
    }
    public void initFromReplyToMessage(com.fsck.k9.mail.Message, boolean)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.mail.Message $r1;
        boolean $z0;
        com.fsck.k9.helper.ReplyToParser $r2;
        com.fsck.k9.Account $r3;
        com.fsck.k9.helper.ReplyToParser$ReplyToAddresses $r4;
        com.fsck.k9.mail.Address[] $r5;
        com.fsck.k9.message.ComposePgpInlineDecider $r6;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: com.fsck.k9.mail.Message;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label2;

        $r2 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.helper.ReplyToParser replyToParser>;

        $r3 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.Account account>;

        $r4 = virtualinvoke $r2.<com.fsck.k9.helper.ReplyToParser: com.fsck.k9.helper.ReplyToParser$ReplyToAddresses getRecipientsToReplyAllTo(com.fsck.k9.mail.Message,com.fsck.k9.Account)>($r1, $r3);

     label1:
        $r5 = $r4.<com.fsck.k9.helper.ReplyToParser$ReplyToAddresses: com.fsck.k9.mail.Address[] 'to'>;

        virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void addToAddresses(com.fsck.k9.mail.Address[])>($r5);

        $r5 = $r4.<com.fsck.k9.helper.ReplyToParser$ReplyToAddresses: com.fsck.k9.mail.Address[] cc>;

        virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void addCcAddresses(com.fsck.k9.mail.Address[])>($r5);

        $r6 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.message.ComposePgpInlineDecider composePgpInlineDecider>;

        $z0 = virtualinvoke $r6.<com.fsck.k9.message.ComposePgpInlineDecider: boolean shouldReplyInline(com.fsck.k9.mail.Message)>($r1);

        if $z0 == 0 goto label3;

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: boolean cryptoEnablePgpInline> = 1;

        return;

     label2:
        $r2 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.helper.ReplyToParser replyToParser>;

        $r3 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.Account account>;

        $r4 = virtualinvoke $r2.<com.fsck.k9.helper.ReplyToParser: com.fsck.k9.helper.ReplyToParser$ReplyToAddresses getRecipientsToReplyTo(com.fsck.k9.mail.Message,com.fsck.k9.Account)>($r1, $r3);

        goto label1;

     label3:
        return;
    }
    public void initFromSendOrViewIntent(android.content.Intent)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        android.content.Intent $r1;
        java.lang.String[] $r2, $r3, $r4;
        com.fsck.k9.mail.Address[] $r5;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: android.content.Intent;

        $r2 = virtualinvoke $r1.<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>("android.intent.extra.EMAIL");

        $r3 = virtualinvoke $r1.<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>("android.intent.extra.CC");

        $r4 = virtualinvoke $r1.<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>("android.intent.extra.BCC");

        if $r2 == null goto label1;

        $r5 = staticinvoke <com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.mail.Address[] addressFromStringArray(java.lang.String[])>($r2);

        virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void addToAddresses(com.fsck.k9.mail.Address[])>($r5);

     label1:
        if $r3 == null goto label2;

        $r5 = staticinvoke <com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.mail.Address[] addressFromStringArray(java.lang.String[])>($r3);

        virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void addCcAddresses(com.fsck.k9.mail.Address[])>($r5);

     label2:
        if $r4 == null goto label3;

        $r5 = staticinvoke <com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.mail.Address[] addressFromStringArray(java.lang.String[])>($r4);

        virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void addBccAddresses(com.fsck.k9.mail.Address[])>($r5);

     label3:
        return;
    }
    public boolean isAllowSavingDraftRemotely()
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.activity.compose.ComposeCryptoStatus $r1;
        boolean $z0;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 = virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.ComposeCryptoStatus getCurrentCryptoStatus()>();

        $z0 = virtualinvoke $r1.<com.fsck.k9.activity.compose.ComposeCryptoStatus: boolean isEncryptionEnabled()>();

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r1.<com.fsck.k9.activity.compose.ComposeCryptoStatus: boolean isSigningEnabled()>();

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    public boolean isForceTextMessageFormat()
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.activity.compose.ComposeCryptoStatus $r1;
        boolean $z0;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 = virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.ComposeCryptoStatus getCurrentCryptoStatus()>();

        $z0 = virtualinvoke $r1.<com.fsck.k9.activity.compose.ComposeCryptoStatus: boolean isEncryptionEnabled()>();

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r1.<com.fsck.k9.activity.compose.ComposeCryptoStatus: boolean isSigningEnabled()>();

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    public void onActivityDestroy()
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        boolean $z0;
        org.openintents.openpgp.util.OpenPgpServiceConnection $r1;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: org.openintents.openpgp.util.OpenPgpServiceConnection openPgpServiceConnection>;

        if $r1 == null goto label1;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: org.openintents.openpgp.util.OpenPgpServiceConnection openPgpServiceConnection>;

        $z0 = virtualinvoke $r1.<org.openintents.openpgp.util.OpenPgpServiceConnection: boolean isBound()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: org.openintents.openpgp.util.OpenPgpServiceConnection openPgpServiceConnection>;

        virtualinvoke $r1.<org.openintents.openpgp.util.OpenPgpServiceConnection: void unbindFromService()>();

     label1:
        r0.<com.fsck.k9.activity.compose.RecipientPresenter: org.openintents.openpgp.util.OpenPgpServiceConnection openPgpServiceConnection> = null;

        return;
    }
    public void onActivityResult(int, int, android.content.Intent)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        int $i0, $i1;
        android.content.Intent $r1;
        com.fsck.k9.mail.Message$RecipientType $r2;
        android.net.Uri $r3;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.content.Intent;

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label2;
            case 4: goto label3;
            default: goto label1;
        };

     label1:
        return;

     label2:
        if $i1 != -1 goto label4;

        if $r1 == null goto label4;

        $r2 = staticinvoke <com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.mail.Message$RecipientType recipientTypeFromRequestCode(int)>($i0);

        $r3 = virtualinvoke $r1.<android.content.Intent: android.net.Uri getData()>();

        specialinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void addRecipientFromContactUri(com.fsck.k9.mail.Message$RecipientType,android.net.Uri)>($r2, $r3);

        return;

     label3:
        specialinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()>();

     label4:
        return;
    }
    public void onBccFocused()
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.mail.Message$RecipientType $r1;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 = <com.fsck.k9.mail.Message$RecipientType: com.fsck.k9.mail.Message$RecipientType BCC>;

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.mail.Message$RecipientType lastFocusedType> = $r1;

        return;
    }
    public void onBccTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.view.RecipientSelectView$Recipient $r1;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: com.fsck.k9.view.RecipientSelectView$Recipient;

        virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void updateCryptoStatus()>();

        return;
    }
    public void onBccTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.view.RecipientSelectView$Recipient $r1;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: com.fsck.k9.view.RecipientSelectView$Recipient;

        virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void updateCryptoStatus()>();

        return;
    }
    public void onBccTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.view.RecipientSelectView$Recipient $r1;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: com.fsck.k9.view.RecipientSelectView$Recipient;

        virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void updateCryptoStatus()>();

        return;
    }
    public void onCcFocused()
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.mail.Message$RecipientType $r1;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 = <com.fsck.k9.mail.Message$RecipientType: com.fsck.k9.mail.Message$RecipientType CC>;

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.mail.Message$RecipientType lastFocusedType> = $r1;

        return;
    }
    public void onCcTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.view.RecipientSelectView$Recipient $r1;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: com.fsck.k9.view.RecipientSelectView$Recipient;

        virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void updateCryptoStatus()>();

        return;
    }
    public void onCcTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.view.RecipientSelectView$Recipient $r1;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: com.fsck.k9.view.RecipientSelectView$Recipient;

        virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void updateCryptoStatus()>();

        return;
    }
    public void onCcTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.view.RecipientSelectView$Recipient $r1;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: com.fsck.k9.view.RecipientSelectView$Recipient;

        virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void updateCryptoStatus()>();

        return;
    }
    public void onClickBccLabel()
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.activity.compose.RecipientMvpView $r1;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        virtualinvoke $r1.<com.fsck.k9.activity.compose.RecipientMvpView: void requestFocusOnBccField()>();

        return;
    }
    public void onClickCcLabel()
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.activity.compose.RecipientMvpView $r1;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        virtualinvoke $r1.<com.fsck.k9.activity.compose.RecipientMvpView: void requestFocusOnCcField()>();

        return;
    }
    public void onClickCryptoStatus()
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        int $i0;
        int[] $r1;
        com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState $r2;
        com.fsck.k9.activity.compose.RecipientMvpView $r3;
        com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode $r4;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 = <com.fsck.k9.activity.compose.RecipientPresenter$4: int[] $SwitchMap$com$fsck$k9$activity$compose$RecipientPresenter$CryptoProviderState>;

        $r2 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState cryptoProviderState>;

        $i0 = virtualinvoke $r2.<com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState: int ordinal()>();

        $i0 = $r1[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label4;
            case 5: goto label4;
            default: goto label1;
        };

     label1:
        return;

     label2:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("k9", "click on crypto status while unconfigured - this should not really happen?!");

        return;

     label3:
        $r3 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        $r4 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode currentCryptoMode>;

        virtualinvoke $r3.<com.fsck.k9.activity.compose.RecipientMvpView: void showCryptoDialog(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)>($r4);

        return;

     label4:
        specialinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()>();

        return;
    }
    public void onClickPgpInlineIndicator()
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.activity.compose.RecipientMvpView $r1;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        virtualinvoke $r1.<com.fsck.k9.activity.compose.RecipientMvpView: void showOpenPgpInlineDialog(boolean)>(0);

        return;
    }
    public void onClickRecipientExpander()
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.activity.compose.RecipientMvpView $r1;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        virtualinvoke $r1.<com.fsck.k9.activity.compose.RecipientMvpView: void setCcVisibility(boolean)>(1);

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        virtualinvoke $r1.<com.fsck.k9.activity.compose.RecipientMvpView: void setBccVisibility(boolean)>(1);

        specialinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void updateRecipientExpanderVisibility()>();

        return;
    }
    public void onClickToLabel()
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.activity.compose.RecipientMvpView $r1;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        virtualinvoke $r1.<com.fsck.k9.activity.compose.RecipientMvpView: void requestFocusOnToField()>();

        return;
    }
    public void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode $r1;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode;

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode currentCryptoMode> = $r1;

        virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void updateCryptoStatus()>();

        return;
    }
    public void onCryptoPgpInlineChanged(boolean)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        boolean $z0;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $z0 := @parameter0: boolean;

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: boolean cryptoEnablePgpInline> = $z0;

        virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void updateCryptoStatus()>();

        return;
    }
    public void onMenuAddFromContacts()
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        int $i0;
        com.fsck.k9.mail.Message$RecipientType $r1;
        com.fsck.k9.activity.compose.RecipientMvpView $r2;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.mail.Message$RecipientType lastFocusedType>;

        $i0 = staticinvoke <com.fsck.k9.activity.compose.RecipientPresenter: int recipientTypeToRequestCode(com.fsck.k9.mail.Message$RecipientType)>($r1);

        $r2 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        virtualinvoke $r2.<com.fsck.k9.activity.compose.RecipientMvpView: void showContactPicker(int)>($i0);

        return;
    }
    public void onMenuSetPgpInline(boolean)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        boolean $z0;
        com.fsck.k9.activity.compose.RecipientMvpView $r1;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $z0 := @parameter0: boolean;

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: boolean cryptoEnablePgpInline> = $z0;

        virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void updateCryptoStatus()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        virtualinvoke $r1.<com.fsck.k9.activity.compose.RecipientMvpView: void showOpenPgpInlineDialog(boolean)>(1);

     label1:
        return;
    }
    public void onNonRecipientFieldFocused()
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        specialinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void hideEmptyExtendedRecipientFields()>();

        return;
    }
    public void onPgpPermissionCheckResult(android.content.Intent)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        android.content.Intent $r1;
        int $i0;
        com.fsck.k9.activity.compose.RecipientMvpView $r2;
        com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState $r3;
        android.os.Parcelable $r4;
        android.app.PendingIntent $r5;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: android.content.Intent;

        $i0 = virtualinvoke $r1.<android.content.Intent: int getIntExtra(java.lang.String,int)>("result_code", 0);

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label4;
            default: goto label1;
        };

     label1:
        $r2 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        virtualinvoke $r2.<com.fsck.k9.activity.compose.RecipientMvpView: void showErrorOpenPgpConnection()>();

        $r3 = <com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState: com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState ERROR>;

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState cryptoProviderState> = $r3;

     label2:
        virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void updateCryptoStatus()>();

        return;

     label3:
        $r3 = <com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState: com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState OK>;

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState cryptoProviderState> = $r3;

        goto label2;

     label4:
        $r2 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        virtualinvoke $r2.<com.fsck.k9.activity.compose.RecipientMvpView: void showErrorOpenPgpUserInteractionRequired()>();

        $r4 = virtualinvoke $r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("intent");

        $r5 = (android.app.PendingIntent) $r4;

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: android.app.PendingIntent pendingUserInteractionIntent> = $r5;

        $r3 = <com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState: com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState ERROR>;

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState cryptoProviderState> = $r3;

        goto label2;
    }
    public void onPrepareOptionsMenu(android.view.Menu)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        android.view.Menu $r1;
        com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState $r2, $r3;
        boolean z0, $z1;
        android.view.MenuItem $r4;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: android.view.Menu;

        $r2 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState cryptoProviderState>;

        $r3 = <com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState: com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState UNCONFIGURED>;

        if $r2 == $r3 goto label5;

        z0 = 1;

     label1:
        $r4 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131493162);

        if z0 == 0 goto label6;

        $z1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: boolean cryptoEnablePgpInline>;

        if $z1 != 0 goto label6;

        $z1 = 1;

     label2:
        interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>($z1);

        $r4 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131493163);

        if z0 == 0 goto label7;

        z0 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: boolean cryptoEnablePgpInline>;

        if z0 == 0 goto label7;

        z0 = 1;

     label3:
        interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>(z0);

        z0 = virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: boolean hasContactPicker()>();

        if z0 != 0 goto label8;

        z0 = 1;

     label4:
        if z0 == 0 goto label9;

        $r4 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131493158);

        interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>(0);

        return;

     label5:
        z0 = 0;

        goto label1;

     label6:
        $z1 = 0;

        goto label2;

     label7:
        z0 = 0;

        goto label3;

     label8:
        z0 = 0;

        goto label4;

     label9:
        return;
    }
    public void onRestoreInstanceState(android.os.Bundle)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        android.os.Bundle $r1;
        com.fsck.k9.activity.compose.RecipientMvpView $r2;
        boolean $z0;
        java.lang.String $r3;
        com.fsck.k9.mail.Message$RecipientType $r4;
        com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode $r5;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: android.os.Bundle;

        $r2 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("state:ccShown");

        virtualinvoke $r2.<com.fsck.k9.activity.compose.RecipientMvpView: void setCcVisibility(boolean)>($z0);

        $r2 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("state:bccShown");

        virtualinvoke $r2.<com.fsck.k9.activity.compose.RecipientMvpView: void setBccVisibility(boolean)>($z0);

        $r3 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("state:lastFocusedType");

        $r4 = staticinvoke <com.fsck.k9.mail.Message$RecipientType: com.fsck.k9.mail.Message$RecipientType valueOf(java.lang.String)>($r3);

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.mail.Message$RecipientType lastFocusedType> = $r4;

        $r3 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("state:currentCryptoMode");

        $r5 = staticinvoke <com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode: com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode valueOf(java.lang.String)>($r3);

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode currentCryptoMode> = $r5;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("state:cryptoEnablePgpInline");

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: boolean cryptoEnablePgpInline> = $z0;

        specialinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void updateRecipientExpanderVisibility()>();

        return;
    }
    public void onSaveInstanceState(android.os.Bundle)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        android.os.Bundle $r1;
        com.fsck.k9.activity.compose.RecipientMvpView $r2;
        boolean $z0;
        com.fsck.k9.mail.Message$RecipientType $r3;
        java.lang.String $r4;
        com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode $r5;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: android.os.Bundle;

        $r2 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        $z0 = virtualinvoke $r2.<com.fsck.k9.activity.compose.RecipientMvpView: boolean isCcVisible()>();

        virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("state:ccShown", $z0);

        $r2 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        $z0 = virtualinvoke $r2.<com.fsck.k9.activity.compose.RecipientMvpView: boolean isBccVisible()>();

        virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("state:bccShown", $z0);

        $r3 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.mail.Message$RecipientType lastFocusedType>;

        $r4 = virtualinvoke $r3.<com.fsck.k9.mail.Message$RecipientType: java.lang.String toString()>();

        virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("state:lastFocusedType", $r4);

        $r5 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode currentCryptoMode>;

        $r4 = virtualinvoke $r5.<com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode: java.lang.String toString()>();

        virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("state:currentCryptoMode", $r4);

        $z0 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: boolean cryptoEnablePgpInline>;

        virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("state:cryptoEnablePgpInline", $z0);

        return;
    }
    public void onSwitchAccount(com.fsck.k9.Account)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.Account $r1;
        boolean $z0;
        com.fsck.k9.activity.compose.RecipientMvpView $r2;
        java.lang.String $r3;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: com.fsck.k9.Account;

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.Account account> = $r1;

        $z0 = virtualinvoke $r1.<com.fsck.k9.Account: boolean isAlwaysShowCcBcc()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        virtualinvoke $r2.<com.fsck.k9.activity.compose.RecipientMvpView: void setCcVisibility(boolean)>(1);

        $r2 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        virtualinvoke $r2.<com.fsck.k9.activity.compose.RecipientMvpView: void setBccVisibility(boolean)>(1);

        specialinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void updateRecipientExpanderVisibility()>();

     label1:
        $r3 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getOpenPgpProvider()>();

        specialinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProvider(java.lang.String)>($r3);

        return;
    }
    public void onSwitchIdentity(com.fsck.k9.Identity)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.Identity $r1;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: com.fsck.k9.Identity;

        return;
    }
    public void onToFocused()
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.mail.Message$RecipientType $r1;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 = <com.fsck.k9.mail.Message$RecipientType: com.fsck.k9.mail.Message$RecipientType TO>;

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.mail.Message$RecipientType lastFocusedType> = $r1;

        return;
    }
    public void onToTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.view.RecipientSelectView$Recipient $r1;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: com.fsck.k9.view.RecipientSelectView$Recipient;

        virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void updateCryptoStatus()>();

        return;
    }
    public void onToTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.view.RecipientSelectView$Recipient $r1;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: com.fsck.k9.view.RecipientSelectView$Recipient;

        virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void updateCryptoStatus()>();

        return;
    }
    public void onToTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.view.RecipientSelectView$Recipient $r1;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: com.fsck.k9.view.RecipientSelectView$Recipient;

        virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: void updateCryptoStatus()>();

        return;
    }
    public void showPgpAttachError(com.fsck.k9.activity.compose.ComposeCryptoStatus$AttachErrorState)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.activity.compose.ComposeCryptoStatus$AttachErrorState $r1;
        int $i0;
        int[] $r2;
        java.lang.AssertionError $r3;
        com.fsck.k9.activity.compose.RecipientMvpView $r4;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: com.fsck.k9.activity.compose.ComposeCryptoStatus$AttachErrorState;

        $r2 = <com.fsck.k9.activity.compose.RecipientPresenter$4: int[] $SwitchMap$com$fsck$k9$activity$compose$ComposeCryptoStatus$AttachErrorState>;

        $i0 = virtualinvoke $r1.<com.fsck.k9.activity.compose.ComposeCryptoStatus$AttachErrorState: int ordinal()>();

        $i0 = $r2[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>("not all error states handled, this is a bug!");

        throw $r3;

     label2:
        $r4 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        virtualinvoke $r4.<com.fsck.k9.activity.compose.RecipientMvpView: void showErrorAttachInline()>();

        return;
    }
    public void showPgpSendError(com.fsck.k9.activity.compose.ComposeCryptoStatus$SendErrorState)
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.activity.compose.ComposeCryptoStatus$SendErrorState $r1;
        int $i0;
        int[] $r2;
        java.lang.AssertionError $r3;
        com.fsck.k9.activity.compose.RecipientMvpView $r4;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        $r1 := @parameter0: com.fsck.k9.activity.compose.ComposeCryptoStatus$SendErrorState;

        $r2 = <com.fsck.k9.activity.compose.RecipientPresenter$4: int[] $SwitchMap$com$fsck$k9$activity$compose$ComposeCryptoStatus$SendErrorState>;

        $i0 = virtualinvoke $r1.<com.fsck.k9.activity.compose.ComposeCryptoStatus$SendErrorState: int ordinal()>();

        $i0 = $r2[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label1;
        };

     label1:
        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>("not all error states handled, this is a bug!");

        throw $r3;

     label2:
        $r4 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        virtualinvoke $r4.<com.fsck.k9.activity.compose.RecipientMvpView: void showErrorOpenPgpConnection()>();

        return;

     label3:
        $r4 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        virtualinvoke $r4.<com.fsck.k9.activity.compose.RecipientMvpView: void showErrorMissingSignKey()>();

        return;

     label4:
        $r4 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        virtualinvoke $r4.<com.fsck.k9.activity.compose.RecipientMvpView: void showErrorPrivateButMissingKeys()>();

        return;
    }
    public void updateCryptoStatus()
    {
        com.fsck.k9.activity.compose.RecipientPresenter r0;
        com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState $r1, $r2;
        org.openintents.openpgp.util.OpenPgpServiceConnection $r3;
        boolean $z0;
        com.fsck.k9.activity.compose.RecipientMvpView $r4;
        com.fsck.k9.activity.compose.ComposeCryptoStatus $r5;
        com.fsck.k9.activity.compose.RecipientMvpView$CryptoStatusDisplayType $r6;

        r0 := @this: com.fsck.k9.activity.compose.RecipientPresenter;

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.ComposeCryptoStatus cachedCryptoStatus> = null;

        $r1 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState cryptoProviderState>;

        $r2 = <com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState: com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState OK>;

        if $r1 != $r2 goto label4;

        $r3 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: org.openintents.openpgp.util.OpenPgpServiceConnection openPgpServiceConnection>;

        if $r3 == null goto label1;

        $r3 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: org.openintents.openpgp.util.OpenPgpServiceConnection openPgpServiceConnection>;

        $z0 = virtualinvoke $r3.<org.openintents.openpgp.util.OpenPgpServiceConnection: boolean isBound()>();

        if $z0 != 0 goto label4;

     label1:
        $z0 = 1;

     label2:
        if $z0 == 0 goto label3;

        $r1 = <com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState: com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState LOST_CONNECTION>;

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState cryptoProviderState> = $r1;

        r0.<com.fsck.k9.activity.compose.RecipientPresenter: android.app.PendingIntent pendingUserInteractionIntent> = null;

     label3:
        $r4 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        $r5 = virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.ComposeCryptoStatus getCurrentCryptoStatus()>();

        $r6 = virtualinvoke $r5.<com.fsck.k9.activity.compose.ComposeCryptoStatus: com.fsck.k9.activity.compose.RecipientMvpView$CryptoStatusDisplayType getCryptoStatusDisplayType()>();

        virtualinvoke $r4.<com.fsck.k9.activity.compose.RecipientMvpView: void showCryptoStatus(com.fsck.k9.activity.compose.RecipientMvpView$CryptoStatusDisplayType)>($r6);

        $r4 = r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.RecipientMvpView recipientMvpView>;

        $r5 = virtualinvoke r0.<com.fsck.k9.activity.compose.RecipientPresenter: com.fsck.k9.activity.compose.ComposeCryptoStatus getCurrentCryptoStatus()>();

        $z0 = virtualinvoke $r5.<com.fsck.k9.activity.compose.ComposeCryptoStatus: boolean isPgpInlineModeEnabled()>();

        virtualinvoke $r4.<com.fsck.k9.activity.compose.RecipientMvpView: void showPgpInlineModeIndicator(boolean)>($z0);

        return;

     label4:
        $z0 = 0;

        goto label2;
    }
