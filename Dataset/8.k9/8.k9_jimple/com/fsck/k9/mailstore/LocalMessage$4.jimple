com.fsck.k9.mailstore.LocalMessage$4 extends java.lang.Object implements com.fsck.k9.mailstore.LockableDatabase$DbCallback
final com.fsck.k9.mailstore.LocalMessage this$0
    void <init>(com.fsck.k9.mailstore.LocalMessage)
    {
        com.fsck.k9.mailstore.LocalMessage$4 r0;
        com.fsck.k9.mailstore.LocalMessage $r1;

        r0 := @this: com.fsck.k9.mailstore.LocalMessage$4;

        $r1 := @parameter0: com.fsck.k9.mailstore.LocalMessage;

        r0.<com.fsck.k9.mailstore.LocalMessage$4: com.fsck.k9.mailstore.LocalMessage this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public volatile java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase) throws com.fsck.k9.mailstore.LockableDatabase$WrappedException, com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalMessage$4 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.Void $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalMessage$4;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalMessage$4: java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase)>($r1);

        return $r2;
    }
    public java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase) throws com.fsck.k9.mailstore.LockableDatabase$WrappedException, com.fsck.k9.mailstore.UnavailableStorageException
    {
        com.fsck.k9.mailstore.LocalMessage$4 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        android.content.ContentValues r2;
        com.fsck.k9.mail.MessagingException r3;
        com.fsck.k9.mailstore.LocalMessage $r4, $r7;
        com.fsck.k9.mail.Folder $r5;
        com.fsck.k9.mailstore.LocalFolder r6;
        long $l0, $l1;
        boolean $z0;
        java.lang.Long $r8;
        java.lang.Integer $r9;
        java.lang.String $r10;
        byte $b2;
        com.fsck.k9.mailstore.LockableDatabase$WrappedException $r11;

        r0 := @this: com.fsck.k9.mailstore.LocalMessage$4;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r4 = r0.<com.fsck.k9.mailstore.LocalMessage$4: com.fsck.k9.mailstore.LocalMessage this$0>;

     label01:
        $r5 = staticinvoke <com.fsck.k9.mailstore.LocalMessage: com.fsck.k9.mail.Folder access$700(com.fsck.k9.mailstore.LocalMessage)>($r4);

     label02:
        r6 = (com.fsck.k9.mailstore.LocalFolder) $r5;

        $r4 = r0.<com.fsck.k9.mailstore.LocalMessage$4: com.fsck.k9.mailstore.LocalMessage this$0>;

     label03:
        $l0 = staticinvoke <com.fsck.k9.mailstore.LocalMessage: long access$400(com.fsck.k9.mailstore.LocalMessage)>($r4);

        virtualinvoke r6.<com.fsck.k9.mailstore.LocalFolder: void deleteMessagePartsAndDataFromDisk(long)>($l0);

     label04:
        $r4 = r0.<com.fsck.k9.mailstore.LocalMessage$4: com.fsck.k9.mailstore.LocalMessage this$0>;

        $r7 = r0.<com.fsck.k9.mailstore.LocalMessage$4: com.fsck.k9.mailstore.LocalMessage this$0>;

     label05:
        $l0 = staticinvoke <com.fsck.k9.mailstore.LocalMessage: long access$300(com.fsck.k9.mailstore.LocalMessage)>($r7);

        staticinvoke <com.fsck.k9.mailstore.LocalMessage: void access$800(com.fsck.k9.mailstore.LocalMessage,android.database.sqlite.SQLiteDatabase,long)>($r4, $r1, $l0);

     label06:
        $r4 = r0.<com.fsck.k9.mailstore.LocalMessage$4: com.fsck.k9.mailstore.LocalMessage this$0>;

        $r7 = r0.<com.fsck.k9.mailstore.LocalMessage$4: com.fsck.k9.mailstore.LocalMessage this$0>;

     label07:
        $l0 = staticinvoke <com.fsck.k9.mailstore.LocalMessage: long access$300(com.fsck.k9.mailstore.LocalMessage)>($r7);

        $z0 = staticinvoke <com.fsck.k9.mailstore.LocalMessage: boolean access$900(com.fsck.k9.mailstore.LocalMessage,android.database.sqlite.SQLiteDatabase,long)>($r4, $r1, $l0);

     label08:
        if $z0 == 0 goto label15;

        r2 = new android.content.ContentValues;

     label09:
        specialinvoke r2.<android.content.ContentValues: void <init>()>();

     label10:
        $r4 = r0.<com.fsck.k9.mailstore.LocalMessage$4: com.fsck.k9.mailstore.LocalMessage this$0>;

     label11:
        $l0 = staticinvoke <com.fsck.k9.mailstore.LocalMessage: long access$300(com.fsck.k9.mailstore.LocalMessage)>($r4);

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("id", $r8);

        $l0 = virtualinvoke r6.<com.fsck.k9.mailstore.LocalFolder: long getId()>();

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("folder_id", $r8);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("deleted", $r9);

     label12:
        $r4 = r0.<com.fsck.k9.mailstore.LocalMessage$4: com.fsck.k9.mailstore.LocalMessage this$0>;

     label13:
        $r10 = virtualinvoke $r4.<com.fsck.k9.mailstore.LocalMessage: java.lang.String getMessageId()>();

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("message_id", $r10);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("empty", $r9);

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: long replace(java.lang.String,java.lang.String,android.content.ContentValues)>("messages", null, r2);

     label14:
        return null;

     label15:
        $r4 = r0.<com.fsck.k9.mailstore.LocalMessage$4: com.fsck.k9.mailstore.LocalMessage this$0>;

        $r7 = r0.<com.fsck.k9.mailstore.LocalMessage$4: com.fsck.k9.mailstore.LocalMessage this$0>;

     label16:
        $l0 = staticinvoke <com.fsck.k9.mailstore.LocalMessage: long access$300(com.fsck.k9.mailstore.LocalMessage)>($r7);

        $l0 = staticinvoke <com.fsck.k9.mailstore.LocalMessage: long access$1000(com.fsck.k9.mailstore.LocalMessage,android.database.sqlite.SQLiteDatabase,long)>($r4, $r1, $l0);

     label17:
        $r4 = r0.<com.fsck.k9.mailstore.LocalMessage$4: com.fsck.k9.mailstore.LocalMessage this$0>;

        $r7 = r0.<com.fsck.k9.mailstore.LocalMessage$4: com.fsck.k9.mailstore.LocalMessage this$0>;

     label18:
        $l1 = staticinvoke <com.fsck.k9.mailstore.LocalMessage: long access$300(com.fsck.k9.mailstore.LocalMessage)>($r7);

        staticinvoke <com.fsck.k9.mailstore.LocalMessage: void access$1100(com.fsck.k9.mailstore.LocalMessage,android.database.sqlite.SQLiteDatabase,long)>($r4, $r1, $l1);

     label19:
        $b2 = $l0 cmp -1L;

        if $b2 == 0 goto label27;

        $r4 = r0.<com.fsck.k9.mailstore.LocalMessage$4: com.fsck.k9.mailstore.LocalMessage this$0>;

     label20:
        $z0 = staticinvoke <com.fsck.k9.mailstore.LocalMessage: boolean access$900(com.fsck.k9.mailstore.LocalMessage,android.database.sqlite.SQLiteDatabase,long)>($r4, $r1, $l0);

     label21:
        if $z0 != 0 goto label27;

        $r4 = r0.<com.fsck.k9.mailstore.LocalMessage$4: com.fsck.k9.mailstore.LocalMessage this$0>;

     label22:
        $l1 = staticinvoke <com.fsck.k9.mailstore.LocalMessage: long access$1000(com.fsck.k9.mailstore.LocalMessage,android.database.sqlite.SQLiteDatabase,long)>($r4, $r1, $l0);

     label23:
        $r4 = r0.<com.fsck.k9.mailstore.LocalMessage$4: com.fsck.k9.mailstore.LocalMessage this$0>;

     label24:
        staticinvoke <com.fsck.k9.mailstore.LocalMessage: void access$1100(com.fsck.k9.mailstore.LocalMessage,android.database.sqlite.SQLiteDatabase,long)>($r4, $r1, $l0);

     label25:
        $l0 = $l1;

        goto label19;

     label26:
        r3 := @caughtexception;

        $r11 = new com.fsck.k9.mailstore.LockableDatabase$WrappedException;

        specialinvoke $r11.<com.fsck.k9.mailstore.LockableDatabase$WrappedException: void <init>(java.lang.Exception)>(r3);

        throw $r11;

     label27:
        return null;

        catch com.fsck.k9.mail.MessagingException from label01 to label02 with label26;
        catch com.fsck.k9.mail.MessagingException from label03 to label04 with label26;
        catch com.fsck.k9.mail.MessagingException from label05 to label06 with label26;
        catch com.fsck.k9.mail.MessagingException from label07 to label08 with label26;
        catch com.fsck.k9.mail.MessagingException from label09 to label10 with label26;
        catch com.fsck.k9.mail.MessagingException from label11 to label12 with label26;
        catch com.fsck.k9.mail.MessagingException from label13 to label14 with label26;
        catch com.fsck.k9.mail.MessagingException from label16 to label17 with label26;
        catch com.fsck.k9.mail.MessagingException from label18 to label19 with label26;
        catch com.fsck.k9.mail.MessagingException from label20 to label21 with label26;
        catch com.fsck.k9.mail.MessagingException from label22 to label23 with label26;
        catch com.fsck.k9.mail.MessagingException from label24 to label25 with label26;
    }
