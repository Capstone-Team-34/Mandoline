com.fsck.k9.mailstore.LocalFolder$4 extends java.lang.Object implements com.fsck.k9.mailstore.LockableDatabase$DbCallback
final com.fsck.k9.mailstore.LocalFolder this$0
    void <init>(com.fsck.k9.mailstore.LocalFolder)
    {
        com.fsck.k9.mailstore.LocalFolder$4 r0;
        com.fsck.k9.mailstore.LocalFolder $r1;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$4;

        $r1 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        r0.<com.fsck.k9.mailstore.LocalFolder$4: com.fsck.k9.mailstore.LocalFolder this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public java.lang.Integer doDbWork(android.database.sqlite.SQLiteDatabase) throws com.fsck.k9.mailstore.LockableDatabase$WrappedException
    {
        com.fsck.k9.mailstore.LocalFolder$4 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.String[] $r2, $r3;
        int i0;
        com.fsck.k9.mailstore.LocalFolder $r4;
        long $l1;
        java.lang.String $r5;
        android.database.Cursor $r6;
        boolean $z0;
        java.lang.Integer $r7;
        java.lang.Throwable $r8;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$4;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        i0 = 0;

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = "COUNT(id)";

        $r3 = newarray (java.lang.String)[1];

        $r4 = r0.<com.fsck.k9.mailstore.LocalFolder$4: com.fsck.k9.mailstore.LocalFolder this$0>;

        $l1 = staticinvoke <com.fsck.k9.mailstore.LocalFolder: long access$100(com.fsck.k9.mailstore.LocalFolder)>($r4);

        $r5 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        $r3[0] = $r5;

        $r6 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("messages", $r2, "folder_id = ? AND empty = 0 AND deleted = 0 AND read=0", $r3, null, null, null);

     label1:
        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean moveToFirst()>();

     label2:
        if $z0 == 0 goto label4;

     label3:
        i0 = interfaceinvoke $r6.<android.database.Cursor: int getInt(int)>(0);

     label4:
        interfaceinvoke $r6.<android.database.Cursor: void close()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        return $r7;

     label5:
        $r8 := @caughtexception;

        interfaceinvoke $r6.<android.database.Cursor: void close()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
    public volatile java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase) throws com.fsck.k9.mailstore.LockableDatabase$WrappedException, com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder$4 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.Integer $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$4;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder$4: java.lang.Integer doDbWork(android.database.sqlite.SQLiteDatabase)>($r1);

        return $r2;
    }
