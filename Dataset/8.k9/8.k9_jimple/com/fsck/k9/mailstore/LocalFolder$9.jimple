com.fsck.k9.mailstore.LocalFolder$9 extends java.lang.Object implements com.fsck.k9.mailstore.LockableDatabase$DbCallback
final com.fsck.k9.mailstore.LocalFolder this$0
final java.lang.String val$uid
    void <init>(com.fsck.k9.mailstore.LocalFolder, java.lang.String)
    {
        com.fsck.k9.mailstore.LocalFolder$9 r0;
        com.fsck.k9.mailstore.LocalFolder $r1;
        java.lang.String $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$9;

        $r1 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        $r2 := @parameter1: java.lang.String;

        r0.<com.fsck.k9.mailstore.LocalFolder$9: com.fsck.k9.mailstore.LocalFolder this$0> = $r1;

        r0.<com.fsck.k9.mailstore.LocalFolder$9: java.lang.String val$uid> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public com.fsck.k9.mailstore.LocalMessage doDbWork(android.database.sqlite.SQLiteDatabase) throws com.fsck.k9.mailstore.LockableDatabase$WrappedException, com.fsck.k9.mailstore.UnavailableStorageException
    {
        com.fsck.k9.mailstore.LocalFolder$9 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        com.fsck.k9.mail.MessagingException r2;
        com.fsck.k9.mailstore.LocalFolder $r3;
        com.fsck.k9.mailstore.LocalMessage r4;
        com.fsck.k9.mailstore.LocalStore $r5;
        java.lang.String $r6, $r10;
        android.database.Cursor r7, $r11;
        java.lang.StringBuilder $r8;
        java.lang.String[] $r9;
        long $l0;
        boolean $z0;
        com.fsck.k9.mailstore.LockableDatabase$WrappedException $r12;
        java.lang.Throwable $r13;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$9;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder$9: com.fsck.k9.mailstore.LocalFolder this$0>;

     label01:
        virtualinvoke $r3.<com.fsck.k9.mailstore.LocalFolder: void open(int)>(0);

     label02:
        r4 = new com.fsck.k9.mailstore.LocalMessage;

        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder$9: com.fsck.k9.mailstore.LocalFolder this$0>;

     label03:
        $r5 = staticinvoke <com.fsck.k9.mailstore.LocalFolder: com.fsck.k9.mailstore.LocalStore access$1100(com.fsck.k9.mailstore.LocalFolder)>($r3);

     label04:
        $r6 = r0.<com.fsck.k9.mailstore.LocalFolder$9: java.lang.String val$uid>;

        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder$9: com.fsck.k9.mailstore.LocalFolder this$0>;

     label05:
        specialinvoke r4.<com.fsck.k9.mailstore.LocalMessage: void <init>(com.fsck.k9.mailstore.LocalStore,java.lang.String,com.fsck.k9.mail.Folder)>($r5, $r6, $r3);

     label06:
        r7 = null;

     label07:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT ");

        $r6 = <com.fsck.k9.mailstore.LocalStore: java.lang.String GET_MESSAGES_COLS>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FROM messages LEFT JOIN message_parts ON (message_parts.id = messages.message_part_id) LEFT JOIN threads ON (threads.message_id = messages.id) WHERE uid = ? AND folder_id = ?");

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = newarray (java.lang.String)[2];

        $r10 = virtualinvoke r4.<com.fsck.k9.mailstore.LocalMessage: java.lang.String getUid()>();

        $r9[0] = $r10;

        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder$9: com.fsck.k9.mailstore.LocalFolder this$0>;

        $l0 = staticinvoke <com.fsck.k9.mailstore.LocalFolder: long access$100(com.fsck.k9.mailstore.LocalFolder)>($r3);

        $r10 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        $r9[1] = $r10;

        $r11 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r6, $r9);

     label08:
        r7 = $r11;

     label09:
        $z0 = interfaceinvoke $r11.<android.database.Cursor: boolean moveToNext()>();

     label10:
        if $z0 != 0 goto label13;

     label11:
        staticinvoke <com.fsck.k9.helper.Utility: void closeQuietly(android.database.Cursor)>($r11);

     label12:
        return null;

     label13:
        virtualinvoke r4.<com.fsck.k9.mailstore.LocalMessage: void populateFromGetMessageCursor(android.database.Cursor)>($r11);

     label14:
        staticinvoke <com.fsck.k9.helper.Utility: void closeQuietly(android.database.Cursor)>($r11);

     label15:
        return r4;

     label16:
        r2 := @caughtexception;

        $r12 = new com.fsck.k9.mailstore.LockableDatabase$WrappedException;

        specialinvoke $r12.<com.fsck.k9.mailstore.LockableDatabase$WrappedException: void <init>(java.lang.Exception)>(r2);

        throw $r12;

     label17:
        $r13 := @caughtexception;

     label18:
        staticinvoke <com.fsck.k9.helper.Utility: void closeQuietly(android.database.Cursor)>(r7);

        throw $r13;

     label19:
        nop;

        catch com.fsck.k9.mail.MessagingException from label01 to label02 with label16;
        catch com.fsck.k9.mail.MessagingException from label03 to label04 with label16;
        catch com.fsck.k9.mail.MessagingException from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch com.fsck.k9.mail.MessagingException from label11 to label12 with label16;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch com.fsck.k9.mail.MessagingException from label14 to label15 with label16;
        catch com.fsck.k9.mail.MessagingException from label18 to label19 with label16;
    }
    public volatile java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase) throws com.fsck.k9.mailstore.LockableDatabase$WrappedException, com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder$9 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        com.fsck.k9.mailstore.LocalMessage $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$9;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder$9: com.fsck.k9.mailstore.LocalMessage doDbWork(android.database.sqlite.SQLiteDatabase)>($r1);

        return $r2;
    }
