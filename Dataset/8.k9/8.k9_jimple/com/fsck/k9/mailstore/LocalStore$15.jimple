com.fsck.k9.mailstore.LocalStore$15 extends java.lang.Object implements com.fsck.k9.mailstore.LockableDatabase$DbCallback
final com.fsck.k9.mailstore.LocalStore this$0
final java.lang.String val$attachmentId
    void <init>(com.fsck.k9.mailstore.LocalStore, java.lang.String)
    {
        com.fsck.k9.mailstore.LocalStore$15 r0;
        com.fsck.k9.mailstore.LocalStore $r1;
        java.lang.String $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalStore$15;

        $r1 := @parameter0: com.fsck.k9.mailstore.LocalStore;

        $r2 := @parameter1: java.lang.String;

        r0.<com.fsck.k9.mailstore.LocalStore$15: com.fsck.k9.mailstore.LocalStore this$0> = $r1;

        r0.<com.fsck.k9.mailstore.LocalStore$15: java.lang.String val$attachmentId> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public java.io.InputStream doDbWork(android.database.sqlite.SQLiteDatabase) throws com.fsck.k9.mailstore.LockableDatabase$WrappedException
    {
        com.fsck.k9.mailstore.LocalStore$15 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.String[] $r2, $r3;
        java.lang.String $r4, $r7;
        android.database.Cursor $r5;
        boolean $z0;
        int $i0;
        com.fsck.k9.mailstore.LocalStore $r6;
        java.io.InputStream $r8;
        java.lang.Throwable $r9;

        r0 := @this: com.fsck.k9.mailstore.LocalStore$15;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 = newarray (java.lang.String)[3];

        $r2[0] = "data_location";

        $r2[1] = "data";

        $r2[2] = "encoding";

        $r3 = newarray (java.lang.String)[1];

        $r4 = r0.<com.fsck.k9.mailstore.LocalStore$15: java.lang.String val$attachmentId>;

        $r3[0] = $r4;

        $r5 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("message_parts", $r2, "id = ?", $r3, null, null, null);

     label1:
        $z0 = interfaceinvoke $r5.<android.database.Cursor: boolean moveToFirst()>();

     label2:
        if $z0 != 0 goto label3;

        interfaceinvoke $r5.<android.database.Cursor: void close()>();

        return null;

     label3:
        $i0 = interfaceinvoke $r5.<android.database.Cursor: int getInt(int)>(0);

        $r4 = interfaceinvoke $r5.<android.database.Cursor: java.lang.String getString(int)>(2);

        $r6 = r0.<com.fsck.k9.mailstore.LocalStore$15: com.fsck.k9.mailstore.LocalStore this$0>;

        $r7 = r0.<com.fsck.k9.mailstore.LocalStore$15: java.lang.String val$attachmentId>;

        $r8 = staticinvoke <com.fsck.k9.mailstore.LocalStore: java.io.InputStream access$100(com.fsck.k9.mailstore.LocalStore,android.database.Cursor,int,java.lang.String)>($r6, $r5, $i0, $r7);

        $r6 = r0.<com.fsck.k9.mailstore.LocalStore$15: com.fsck.k9.mailstore.LocalStore this$0>;

        $r8 = virtualinvoke $r6.<com.fsck.k9.mailstore.LocalStore: java.io.InputStream getDecodingInputStream(java.io.InputStream,java.lang.String)>($r8, $r4);

     label4:
        interfaceinvoke $r5.<android.database.Cursor: void close()>();

        return $r8;

     label5:
        $r9 := @caughtexception;

        interfaceinvoke $r5.<android.database.Cursor: void close()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
    public volatile java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase) throws com.fsck.k9.mailstore.LockableDatabase$WrappedException, com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalStore$15 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.io.InputStream $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalStore$15;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalStore$15: java.io.InputStream doDbWork(android.database.sqlite.SQLiteDatabase)>($r1);

        return $r2;
    }
