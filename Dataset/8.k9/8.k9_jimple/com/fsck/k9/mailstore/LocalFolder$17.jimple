com.fsck.k9.mailstore.LocalFolder$17 extends java.lang.Object implements com.fsck.k9.mailstore.LockableDatabase$DbCallback
final com.fsck.k9.mailstore.LocalFolder this$0
final java.util.Set val$flags
final java.util.List val$messages
final boolean val$value
    void <init>(com.fsck.k9.mailstore.LocalFolder, java.util.List, java.util.Set, boolean)
    {
        com.fsck.k9.mailstore.LocalFolder$17 r0;
        com.fsck.k9.mailstore.LocalFolder $r1;
        java.util.List $r2;
        java.util.Set $r3;
        boolean $z0;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$17;

        $r1 := @parameter0: com.fsck.k9.mailstore.LocalFolder;

        $r2 := @parameter1: java.util.List;

        $r3 := @parameter2: java.util.Set;

        $z0 := @parameter3: boolean;

        r0.<com.fsck.k9.mailstore.LocalFolder$17: com.fsck.k9.mailstore.LocalFolder this$0> = $r1;

        r0.<com.fsck.k9.mailstore.LocalFolder$17: java.util.List val$messages> = $r2;

        r0.<com.fsck.k9.mailstore.LocalFolder$17: java.util.Set val$flags> = $r3;

        r0.<com.fsck.k9.mailstore.LocalFolder$17: boolean val$value> = $z0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public volatile java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase) throws com.fsck.k9.mailstore.LockableDatabase$WrappedException, com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mailstore.LocalFolder$17 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.Void $r2;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$17;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 = virtualinvoke r0.<com.fsck.k9.mailstore.LocalFolder$17: java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase)>($r1);

        return $r2;
    }
    public java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase) throws com.fsck.k9.mailstore.LockableDatabase$WrappedException, com.fsck.k9.mailstore.UnavailableStorageException
    {
        com.fsck.k9.mailstore.LocalFolder$17 r0;
        android.database.sqlite.SQLiteDatabase $r1;
        com.fsck.k9.mail.MessagingException r2;
        java.util.List $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        com.fsck.k9.mail.Message r6;
        java.util.Set $r7;

        r0 := @this: com.fsck.k9.mailstore.LocalFolder$17;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r3 = r0.<com.fsck.k9.mailstore.LocalFolder$17: java.util.List val$messages>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.fsck.k9.mail.Message) $r5;

        $r7 = r0.<com.fsck.k9.mailstore.LocalFolder$17: java.util.Set val$flags>;

        $z0 = r0.<com.fsck.k9.mailstore.LocalFolder$17: boolean val$value>;

     label2:
        virtualinvoke r6.<com.fsck.k9.mail.Message: void setFlags(java.util.Set,boolean)>($r7, $z0);

     label3:
        goto label1;

     label4:
        r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("k9", "Something went wrong while setting flag", r2);

        goto label1;

     label5:
        return null;

        catch com.fsck.k9.mail.MessagingException from label2 to label3 with label4;
    }
