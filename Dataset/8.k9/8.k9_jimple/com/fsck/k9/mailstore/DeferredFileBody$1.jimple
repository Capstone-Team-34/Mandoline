com.fsck.k9.mailstore.DeferredFileBody$1 extends com.fsck.k9.mailstore.util.DeferredFileOutputStream
final com.fsck.k9.mailstore.DeferredFileBody this$0
    void <init>(com.fsck.k9.mailstore.DeferredFileBody, int, com.fsck.k9.mailstore.util.FileFactory)
    {
        com.fsck.k9.mailstore.DeferredFileBody$1 r0;
        com.fsck.k9.mailstore.DeferredFileBody $r1;
        int $i0;
        com.fsck.k9.mailstore.util.FileFactory $r2;

        r0 := @this: com.fsck.k9.mailstore.DeferredFileBody$1;

        $r1 := @parameter0: com.fsck.k9.mailstore.DeferredFileBody;

        $i0 := @parameter1: int;

        $r2 := @parameter2: com.fsck.k9.mailstore.util.FileFactory;

        r0.<com.fsck.k9.mailstore.DeferredFileBody$1: com.fsck.k9.mailstore.DeferredFileBody this$0> = $r1;

        specialinvoke r0.<com.fsck.k9.mailstore.util.DeferredFileOutputStream: void <init>(int,com.fsck.k9.mailstore.util.FileFactory)>($i0, $r2);

        return;
    }
    public void close() throws java.io.IOException
    {
        com.fsck.k9.mailstore.DeferredFileBody$1 r0;
        boolean $z0;
        com.fsck.k9.mailstore.DeferredFileBody $r1;
        java.io.File $r2;
        byte[] $r3;

        r0 := @this: com.fsck.k9.mailstore.DeferredFileBody$1;

        specialinvoke r0.<com.fsck.k9.mailstore.util.DeferredFileOutputStream: void close()>();

        $z0 = virtualinvoke r0.<com.fsck.k9.mailstore.DeferredFileBody$1: boolean isThresholdExceeded()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.fsck.k9.mailstore.DeferredFileBody$1: com.fsck.k9.mailstore.DeferredFileBody this$0>;

        $r2 = virtualinvoke r0.<com.fsck.k9.mailstore.DeferredFileBody$1: java.io.File getFile()>();

        staticinvoke <com.fsck.k9.mailstore.DeferredFileBody: java.io.File access$002(com.fsck.k9.mailstore.DeferredFileBody,java.io.File)>($r1, $r2);

        return;

     label1:
        $r1 = r0.<com.fsck.k9.mailstore.DeferredFileBody$1: com.fsck.k9.mailstore.DeferredFileBody this$0>;

        $r3 = virtualinvoke r0.<com.fsck.k9.mailstore.DeferredFileBody$1: byte[] getData()>();

        staticinvoke <com.fsck.k9.mailstore.DeferredFileBody: byte[] access$102(com.fsck.k9.mailstore.DeferredFileBody,byte[])>($r1, $r3);

        return;
    }
