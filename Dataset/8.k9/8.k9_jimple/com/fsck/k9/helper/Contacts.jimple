com.fsck.k9.helper.Contacts extends java.lang.Object
protected static final int CONTACT_ID_INDEX
protected static final int NAME_INDEX
protected static final java.lang.String[] PROJECTION
protected static final java.lang.String SORT_ORDER
protected android.content.ContentResolver mContentResolver
protected android.content.Context mContext
    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[3];

        $r0[0] = "_id";

        $r0[1] = "display_name";

        $r0[2] = "contact_id";

        <com.fsck.k9.helper.Contacts: java.lang.String[] PROJECTION> = $r0;

        return;
    }
    protected void <init>(android.content.Context)
    {
        com.fsck.k9.helper.Contacts r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;

        r0 := @this: com.fsck.k9.helper.Contacts;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.fsck.k9.helper.Contacts: android.content.Context mContext> = $r1;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r0.<com.fsck.k9.helper.Contacts: android.content.ContentResolver mContentResolver> = $r2;

        return;
    }
    private android.database.Cursor getContactByAddress(java.lang.String)
    {
        com.fsck.k9.helper.Contacts r0;
        java.lang.String $r1;
        android.net.Uri $r2;
        android.content.ContentResolver $r3;
        java.lang.String[] $r4;
        android.database.Cursor $r5;

        r0 := @this: com.fsck.k9.helper.Contacts;

        $r1 := @parameter0: java.lang.String;

        $r2 = <android.provider.ContactsContract$CommonDataKinds$Email: android.net.Uri CONTENT_LOOKUP_URI>;

        $r1 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String)>($r1);

        $r2 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r2, $r1);

        $r3 = r0.<com.fsck.k9.helper.Contacts: android.content.ContentResolver mContentResolver>;

        $r4 = <com.fsck.k9.helper.Contacts: java.lang.String[] PROJECTION>;

        $r5 = virtualinvoke $r3.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r2, $r4, null, null, "times_contacted DESC, display_name, _id");

        return $r5;
    }
    public static com.fsck.k9.helper.Contacts getInstance(android.content.Context)
    {
        android.content.Context $r0;
        com.fsck.k9.helper.Contacts $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = new com.fsck.k9.helper.Contacts;

        specialinvoke $r1.<com.fsck.k9.helper.Contacts: void <init>(android.content.Context)>($r0);

        return $r1;
    }
    public void addPhoneContact(java.lang.String)
    {
        com.fsck.k9.helper.Contacts r0;
        java.lang.String $r1;
        android.content.Intent r2;
        android.content.Context $r3;

        r0 := @this: com.fsck.k9.helper.Contacts;

        $r1 := @parameter0: java.lang.String;

        r2 = new android.content.Intent;

        specialinvoke r2.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.INSERT_OR_EDIT");

        virtualinvoke r2.<android.content.Intent: android.content.Intent setType(java.lang.String)>("vnd.android.cursor.item/contact");

        $r1 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>($r1);

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("phone", $r1);

        virtualinvoke r2.<android.content.Intent: android.content.Intent setFlags(int)>(268435456);

        $r3 = r0.<com.fsck.k9.helper.Contacts: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void startActivity(android.content.Intent)>(r2);

        return;
    }
    public android.content.Intent contactPickerIntent()
    {
        com.fsck.k9.helper.Contacts r0;
        android.content.Intent $r1;
        android.net.Uri $r2;

        r0 := @this: com.fsck.k9.helper.Contacts;

        $r1 = new android.content.Intent;

        $r2 = <android.provider.ContactsContract$CommonDataKinds$Email: android.net.Uri CONTENT_URI>;

        specialinvoke $r1.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.PICK", $r2);

        return $r1;
    }
    public void createContact(com.fsck.k9.mail.Address)
    {
        com.fsck.k9.helper.Contacts r0;
        com.fsck.k9.mail.Address $r1;
        android.content.Intent r2;
        java.lang.String $r3;
        android.net.Uri $r4;
        android.content.Context $r5;

        r0 := @this: com.fsck.k9.helper.Contacts;

        $r1 := @parameter0: com.fsck.k9.mail.Address;

        $r3 = virtualinvoke $r1.<com.fsck.k9.mail.Address: java.lang.String getAddress()>();

        $r4 = staticinvoke <android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>("mailto", $r3, null);

        r2 = new android.content.Intent;

        specialinvoke r2.<android.content.Intent: void <init>(java.lang.String)>("com.android.contacts.action.SHOW_OR_CREATE_CONTACT");

        virtualinvoke r2.<android.content.Intent: android.content.Intent setFlags(int)>(268435456);

        virtualinvoke r2.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r4);

        $r3 = virtualinvoke $r1.<com.fsck.k9.mail.Address: java.lang.String toString()>();

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("com.android.contacts.action.CREATE_DESCRIPTION", $r3);

        $r3 = virtualinvoke $r1.<com.fsck.k9.mail.Address: java.lang.String getPersonal()>();

        if $r3 == null goto label1;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("name", $r3);

     label1:
        $r5 = r0.<com.fsck.k9.helper.Contacts: android.content.Context mContext>;

        virtualinvoke $r5.<android.content.Context: void startActivity(android.content.Intent)>(r2);

        return;
    }
    public java.lang.String getNameForAddress(java.lang.String)
    {
        com.fsck.k9.helper.Contacts r0;
        java.lang.String $r1;
        android.database.Cursor $r2;
        int $i0;

        r0 := @this: com.fsck.k9.helper.Contacts;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = specialinvoke r0.<com.fsck.k9.helper.Contacts: android.database.Cursor getContactByAddress(java.lang.String)>($r1);

        $r1 = null;

        if $r2 == null goto label3;

        $i0 = interfaceinvoke $r2.<android.database.Cursor: int getCount()>();

        if $i0 <= 0 goto label2;

        interfaceinvoke $r2.<android.database.Cursor: boolean moveToFirst()>();

        $r1 = interfaceinvoke $r2.<android.database.Cursor: java.lang.String getString(int)>(1);

     label2:
        interfaceinvoke $r2.<android.database.Cursor: void close()>();

        return $r1;

     label3:
        return null;
    }
    public android.net.Uri getPhotoUri(java.lang.String)
    {
        com.fsck.k9.helper.Contacts r0;
        java.lang.String $r1, $r8;
        java.lang.Exception r2;
        android.database.Cursor $r3;
        boolean $z0;
        long $l0;
        java.lang.Long $r4;
        android.content.ContentResolver $r5;
        android.net.Uri $r6;
        java.lang.StringBuilder $r7;
        java.lang.Throwable $r9;

        r0 := @this: com.fsck.k9.helper.Contacts;

        $r1 := @parameter0: java.lang.String;

     label01:
        $r3 = specialinvoke r0.<com.fsck.k9.helper.Contacts: android.database.Cursor getContactByAddress(java.lang.String)>($r1);

     label02:
        if $r3 != null goto label03;

        return null;

     label03:
        $z0 = interfaceinvoke $r3.<android.database.Cursor: boolean moveToFirst()>();

     label04:
        if $z0 != 0 goto label07;

     label05:
        interfaceinvoke $r3.<android.database.Cursor: void close()>();

     label06:
        return null;

     label07:
        $l0 = interfaceinvoke $r3.<android.database.Cursor: long getLong(int)>(2);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label08:
        interfaceinvoke $r3.<android.database.Cursor: void close()>();

        $r5 = r0.<com.fsck.k9.helper.Contacts: android.content.ContentResolver mContentResolver>;

     label09:
        $r6 = <android.provider.ContactsContract$Data: android.net.Uri CONTENT_URI>;

        $r7 = new java.lang.StringBuilder;

     label10:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("contact_id=");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mimetype");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=\'");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vnd.android.cursor.item/photo");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = virtualinvoke $r5.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r6, null, $r8, null, null);

     label11:
        if $r3 != null goto label15;

        return null;

     label12:
        $r9 := @caughtexception;

     label13:
        interfaceinvoke $r3.<android.database.Cursor: void close()>();

        throw $r9;

     label14:
        r2 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t fetch photo for contact with email ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("k9", $r1, r2);

        return null;

     label15:
        $z0 = interfaceinvoke $r3.<android.database.Cursor: boolean moveToFirst()>();

     label16:
        if $z0 != 0 goto label19;

     label17:
        interfaceinvoke $r3.<android.database.Cursor: void close()>();

     label18:
        return null;

     label19:
        interfaceinvoke $r3.<android.database.Cursor: void close()>();

     label20:
        $r6 = <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_URI>;

     label21:
        $l0 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        $r6 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r6, $l0);

        $r6 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r6, "photo");

     label22:
        return $r6;

        catch java.lang.Exception from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Exception from label08 to label09 with label14;
        catch java.lang.Exception from label10 to label11 with label14;
        catch java.lang.Exception from label13 to label14 with label14;
        catch java.lang.Exception from label15 to label16 with label14;
        catch java.lang.Exception from label17 to label18 with label14;
        catch java.lang.Exception from label19 to label20 with label14;
        catch java.lang.Exception from label21 to label22 with label14;
    }
    public boolean isAnyInContacts(com.fsck.k9.mail.Address[])
    {
        com.fsck.k9.helper.Contacts r0;
        com.fsck.k9.mail.Address[] $r1;
        com.fsck.k9.mail.Address r2;
        int $i0, $i1;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: com.fsck.k9.helper.Contacts;

        $r1 := @parameter0: com.fsck.k9.mail.Address[];

        if $r1 != null goto label1;

        return 0;

     label1:
        $i0 = lengthof $r1;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        r2 = $r1[$i1];

        $r3 = virtualinvoke r2.<com.fsck.k9.mail.Address: java.lang.String getAddress()>();

        $z0 = virtualinvoke r0.<com.fsck.k9.helper.Contacts: boolean isInContacts(java.lang.String)>($r3);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        return 0;
    }
    public boolean isInContacts(java.lang.String)
    {
        com.fsck.k9.helper.Contacts r0;
        java.lang.String $r1;
        boolean z0;
        android.database.Cursor $r2;
        int $i0;

        r0 := @this: com.fsck.k9.helper.Contacts;

        $r1 := @parameter0: java.lang.String;

        z0 = 0;

        $r2 = specialinvoke r0.<com.fsck.k9.helper.Contacts: android.database.Cursor getContactByAddress(java.lang.String)>($r1);

        if $r2 == null goto label2;

        $i0 = interfaceinvoke $r2.<android.database.Cursor: int getCount()>();

        if $i0 <= 0 goto label1;

        z0 = 1;

     label1:
        interfaceinvoke $r2.<android.database.Cursor: void close()>();

        return z0;

     label2:
        return 0;
    }
    public void markAsContacted(com.fsck.k9.mail.Address[])
    {
        com.fsck.k9.helper.Contacts r0;
        com.fsck.k9.mail.Address[] $r1;
        com.fsck.k9.mail.Address r2;
        int $i0, $i1, $i2;
        java.lang.String $r3;
        android.database.Cursor $r4;
        long $l3;
        android.content.ContentResolver $r5;

        r0 := @this: com.fsck.k9.helper.Contacts;

        $r1 := @parameter0: com.fsck.k9.mail.Address[];

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        r2 = $r1[$i1];

        $r3 = virtualinvoke r2.<com.fsck.k9.mail.Address: java.lang.String getAddress()>();

        $r4 = specialinvoke r0.<com.fsck.k9.helper.Contacts: android.database.Cursor getContactByAddress(java.lang.String)>($r3);

        if $r4 == null goto label3;

        $i2 = interfaceinvoke $r4.<android.database.Cursor: int getCount()>();

        if $i2 <= 0 goto label2;

        interfaceinvoke $r4.<android.database.Cursor: boolean moveToFirst()>();

        $l3 = interfaceinvoke $r4.<android.database.Cursor: long getLong(int)>(2);

        $r5 = r0.<com.fsck.k9.helper.Contacts: android.content.ContentResolver mContentResolver>;

        staticinvoke <android.provider.ContactsContract$Contacts: void markAsContacted(android.content.ContentResolver,long)>($r5, $l3);

     label2:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        return;
    }
