com.fsck.k9.helper.MailTo extends java.lang.Object
private static final java.lang.String BCC
private static final java.lang.String BODY
private static final java.lang.String CC
private static final com.fsck.k9.mail.Address[] EMPTY_ADDRESS_LIST
private static final java.lang.String MAILTO_SCHEME
private static final java.lang.String SUBJECT
private static final java.lang.String TO
private final com.fsck.k9.mail.Address[] bccAddresses
private final java.lang.String body
private final com.fsck.k9.mail.Address[] ccAddresses
private final java.lang.String subject
private final com.fsck.k9.mail.Address[] toAddresses
    static void <clinit>()
    {
        com.fsck.k9.mail.Address[] $r0;

        $r0 = newarray (com.fsck.k9.mail.Address)[0];

        <com.fsck.k9.helper.MailTo: com.fsck.k9.mail.Address[] EMPTY_ADDRESS_LIST> = $r0;

        return;
    }
    private void <init>(com.fsck.k9.mail.Address[], com.fsck.k9.mail.Address[], com.fsck.k9.mail.Address[], java.lang.String, java.lang.String)
    {
        com.fsck.k9.helper.MailTo r0;
        com.fsck.k9.mail.Address[] $r1, $r2, $r3;
        java.lang.String $r4, $r5;

        r0 := @this: com.fsck.k9.helper.MailTo;

        $r1 := @parameter0: com.fsck.k9.mail.Address[];

        $r2 := @parameter1: com.fsck.k9.mail.Address[];

        $r3 := @parameter2: com.fsck.k9.mail.Address[];

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.fsck.k9.helper.MailTo: com.fsck.k9.mail.Address[] toAddresses> = $r1;

        r0.<com.fsck.k9.helper.MailTo: com.fsck.k9.mail.Address[] ccAddresses> = $r2;

        r0.<com.fsck.k9.helper.MailTo: com.fsck.k9.mail.Address[] bccAddresses> = $r3;

        r0.<com.fsck.k9.helper.MailTo: java.lang.String subject> = $r4;

        r0.<com.fsck.k9.helper.MailTo: java.lang.String body> = $r5;

        return;
    }
    private static java.lang.String getFirstParameterValue(com.fsck.k9.helper.MailTo$CaseInsensitiveParamWrapper, java.lang.String)
    {
        com.fsck.k9.helper.MailTo$CaseInsensitiveParamWrapper $r0;
        java.lang.String $r1;
        java.util.List $r2;
        boolean $z0;
        java.lang.Object $r3;

        $r0 := @parameter0: com.fsck.k9.helper.MailTo$CaseInsensitiveParamWrapper;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<com.fsck.k9.helper.MailTo$CaseInsensitiveParamWrapper: java.util.List getQueryParameters(java.lang.String)>($r1);

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r1 = (java.lang.String) $r3;

        return $r1;
    }
    public static boolean isMailTo(android.net.Uri)
    {
        android.net.Uri $r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: android.net.Uri;

        if $r0 == null goto label1;

        $r1 = "mailto";

        $r2 = virtualinvoke $r0.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public static com.fsck.k9.helper.MailTo parse(android.net.Uri) throws java.lang.NullPointerException, java.lang.IllegalArgumentException
    {
        android.net.Uri $r0;
        com.fsck.k9.helper.MailTo$CaseInsensitiveParamWrapper r1;
        java.lang.String $r2, $r6;
        java.lang.NullPointerException $r3;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        int $i0, i1;
        java.lang.StringBuilder $r5;
        java.util.List $r7, $r8, $r9;
        com.fsck.k9.mail.Address[] $r10, $r11, $r12;
        com.fsck.k9.helper.MailTo $r13;

        $r0 := @parameter0: android.net.Uri;

        if $r0 == null goto label1;

        $r2 = virtualinvoke $r0.<android.net.Uri: java.lang.String toString()>();

        if $r2 != null goto label2;

     label1:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Argument \'uri\' must not be null");

        throw $r3;

     label2:
        $z0 = staticinvoke <com.fsck.k9.helper.MailTo: boolean isMailTo(android.net.Uri)>($r0);

        if $z0 != 0 goto label3;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Not a mailto scheme");

        throw $r4;

     label3:
        $r2 = virtualinvoke $r0.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(63);

        i1 = $i0;

        if $i0 != -1 goto label4;

        i1 = virtualinvoke $r2.<java.lang.String: int length()>();

     label4:
        r1 = new com.fsck.k9.helper.MailTo$CaseInsensitiveParamWrapper;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("foo://bar?");

        $r6 = virtualinvoke $r0.<android.net.Uri: java.lang.String getEncodedQuery()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r6);

        specialinvoke r1.<com.fsck.k9.helper.MailTo$CaseInsensitiveParamWrapper: void <init>(android.net.Uri)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        $r2 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>($r2);

        $r7 = virtualinvoke r1.<com.fsck.k9.helper.MailTo$CaseInsensitiveParamWrapper: java.util.List getQueryParameters(java.lang.String)>("to");

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 == 0 goto label5;

        interfaceinvoke $r7.<java.util.List: void add(int,java.lang.Object)>(0, $r2);

     label5:
        $r8 = virtualinvoke r1.<com.fsck.k9.helper.MailTo$CaseInsensitiveParamWrapper: java.util.List getQueryParameters(java.lang.String)>("cc");

        $r9 = virtualinvoke r1.<com.fsck.k9.helper.MailTo$CaseInsensitiveParamWrapper: java.util.List getQueryParameters(java.lang.String)>("bcc");

        $r10 = staticinvoke <com.fsck.k9.helper.MailTo: com.fsck.k9.mail.Address[] toAddressArray(java.util.List)>($r7);

        $r11 = staticinvoke <com.fsck.k9.helper.MailTo: com.fsck.k9.mail.Address[] toAddressArray(java.util.List)>($r8);

        $r12 = staticinvoke <com.fsck.k9.helper.MailTo: com.fsck.k9.mail.Address[] toAddressArray(java.util.List)>($r9);

        $r2 = staticinvoke <com.fsck.k9.helper.MailTo: java.lang.String getFirstParameterValue(com.fsck.k9.helper.MailTo$CaseInsensitiveParamWrapper,java.lang.String)>(r1, "subject");

        $r6 = staticinvoke <com.fsck.k9.helper.MailTo: java.lang.String getFirstParameterValue(com.fsck.k9.helper.MailTo$CaseInsensitiveParamWrapper,java.lang.String)>(r1, "body");

        $r13 = new com.fsck.k9.helper.MailTo;

        specialinvoke $r13.<com.fsck.k9.helper.MailTo: void <init>(com.fsck.k9.mail.Address[],com.fsck.k9.mail.Address[],com.fsck.k9.mail.Address[],java.lang.String,java.lang.String)>($r10, $r11, $r12, $r2, $r6);

        return $r13;
    }
    private static com.fsck.k9.mail.Address[] toAddressArray(java.util.List)
    {
        java.util.List r0;
        boolean $z0;
        java.lang.String $r1;
        com.fsck.k9.mail.Address[] $r2;

        r0 := @parameter0: java.util.List;

        $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = <com.fsck.k9.helper.MailTo: com.fsck.k9.mail.Address[] EMPTY_ADDRESS_LIST>;

        return $r2;

     label1:
        $r1 = staticinvoke <com.fsck.k9.helper.MailTo: java.lang.String toCommaSeparatedString(java.util.List)>(r0);

        $r2 = staticinvoke <com.fsck.k9.mail.Address: com.fsck.k9.mail.Address[] parse(java.lang.String)>($r1);

        return $r2;
    }
    private static java.lang.String toCommaSeparatedString(java.util.List)
    {
        java.util.List r0;
        java.lang.StringBuilder r1, $r5;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.String r4;
        int $i0;

        r0 := @parameter0: java.util.List;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r3;

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        goto label1;

     label2:
        $i0 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        $i0 = $i0 + -1;

        virtualinvoke r1.<java.lang.StringBuilder: void setLength(int)>($i0);

        r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return r4;
    }
    public com.fsck.k9.mail.Address[] getBcc()
    {
        com.fsck.k9.helper.MailTo r0;
        com.fsck.k9.mail.Address[] r1;

        r0 := @this: com.fsck.k9.helper.MailTo;

        r1 = r0.<com.fsck.k9.helper.MailTo: com.fsck.k9.mail.Address[] bccAddresses>;

        return r1;
    }
    public java.lang.String getBody()
    {
        com.fsck.k9.helper.MailTo r0;
        java.lang.String r1;

        r0 := @this: com.fsck.k9.helper.MailTo;

        r1 = r0.<com.fsck.k9.helper.MailTo: java.lang.String body>;

        return r1;
    }
    public com.fsck.k9.mail.Address[] getCc()
    {
        com.fsck.k9.helper.MailTo r0;
        com.fsck.k9.mail.Address[] r1;

        r0 := @this: com.fsck.k9.helper.MailTo;

        r1 = r0.<com.fsck.k9.helper.MailTo: com.fsck.k9.mail.Address[] ccAddresses>;

        return r1;
    }
    public java.lang.String getSubject()
    {
        com.fsck.k9.helper.MailTo r0;
        java.lang.String r1;

        r0 := @this: com.fsck.k9.helper.MailTo;

        r1 = r0.<com.fsck.k9.helper.MailTo: java.lang.String subject>;

        return r1;
    }
    public com.fsck.k9.mail.Address[] getTo()
    {
        com.fsck.k9.helper.MailTo r0;
        com.fsck.k9.mail.Address[] r1;

        r0 := @this: com.fsck.k9.helper.MailTo;

        r1 = r0.<com.fsck.k9.helper.MailTo: com.fsck.k9.mail.Address[] toAddresses>;

        return r1;
    }
