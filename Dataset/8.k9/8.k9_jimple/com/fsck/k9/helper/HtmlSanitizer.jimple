com.fsck.k9.helper.HtmlSanitizer extends java.lang.Object
private static final org.htmlcleaner.HtmlCleaner HTML_CLEANER
private static final org.htmlcleaner.HtmlSerializer HTML_SERIALIZER
    static void <clinit>()
    {
        org.htmlcleaner.CleanerProperties $r0;
        org.htmlcleaner.HtmlCleaner $r1;
        org.htmlcleaner.SimpleHtmlSerializer $r2;

        $r0 = staticinvoke <com.fsck.k9.helper.HtmlSanitizer: org.htmlcleaner.CleanerProperties createCleanerProperties()>();

        $r1 = new org.htmlcleaner.HtmlCleaner;

        specialinvoke $r1.<org.htmlcleaner.HtmlCleaner: void <init>(org.htmlcleaner.CleanerProperties)>($r0);

        <com.fsck.k9.helper.HtmlSanitizer: org.htmlcleaner.HtmlCleaner HTML_CLEANER> = $r1;

        $r2 = new org.htmlcleaner.SimpleHtmlSerializer;

        specialinvoke $r2.<org.htmlcleaner.SimpleHtmlSerializer: void <init>(org.htmlcleaner.CleanerProperties)>($r0);

        <com.fsck.k9.helper.HtmlSanitizer: org.htmlcleaner.HtmlSerializer HTML_SERIALIZER> = $r2;

        return;
    }
    void <init>()
    {
        com.fsck.k9.helper.HtmlSanitizer r0;

        r0 := @this: com.fsck.k9.helper.HtmlSanitizer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private static org.htmlcleaner.CleanerProperties createCleanerProperties()
    {
        org.htmlcleaner.CleanerProperties r0;

        r0 = new org.htmlcleaner.CleanerProperties;

        specialinvoke r0.<org.htmlcleaner.CleanerProperties: void <init>()>();

        virtualinvoke r0.<org.htmlcleaner.CleanerProperties: void setNamespacesAware(boolean)>(0);

        virtualinvoke r0.<org.htmlcleaner.CleanerProperties: void setAdvancedXmlEscape(boolean)>(0);

        virtualinvoke r0.<org.htmlcleaner.CleanerProperties: void setOmitXmlDeclaration(boolean)>(1);

        virtualinvoke r0.<org.htmlcleaner.CleanerProperties: void setOmitDoctypeDeclaration(boolean)>(0);

        virtualinvoke r0.<org.htmlcleaner.CleanerProperties: void setTranslateSpecialEntities(boolean)>(0);

        virtualinvoke r0.<org.htmlcleaner.CleanerProperties: void setRecognizeUnicodeChars(boolean)>(0);

        return r0;
    }
    public static com.fsck.k9.helper.HtmlSanitizer getInstance()
    {
        com.fsck.k9.helper.HtmlSanitizer $r0;

        $r0 = new com.fsck.k9.helper.HtmlSanitizer;

        specialinvoke $r0.<com.fsck.k9.helper.HtmlSanitizer: void <init>()>();

        return $r0;
    }
    private void removeMetaRefresh(org.htmlcleaner.TagNode)
    {
        com.fsck.k9.helper.HtmlSanitizer r0;
        org.htmlcleaner.TagNode $r1;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.String $r5;

        r0 := @this: com.fsck.k9.helper.HtmlSanitizer;

        $r1 := @parameter0: org.htmlcleaner.TagNode;

        $r2 = virtualinvoke $r1.<org.htmlcleaner.TagNode: java.util.List getElementListByName(java.lang.String,boolean)>("meta", 1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (org.htmlcleaner.TagNode) $r4;

        $r5 = virtualinvoke $r1.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("http-equiv");

        if $r5 == null goto label1;

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("refresh");

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<org.htmlcleaner.TagNode: boolean removeFromTree()>();

        goto label1;

     label2:
        return;
    }
    public java.lang.String sanitize(java.lang.String)
    {
        com.fsck.k9.helper.HtmlSanitizer r0;
        java.lang.String $r1;
        org.htmlcleaner.HtmlCleaner $r2;
        org.htmlcleaner.TagNode $r3;
        org.htmlcleaner.HtmlSerializer $r4;

        r0 := @this: com.fsck.k9.helper.HtmlSanitizer;

        $r1 := @parameter0: java.lang.String;

        $r2 = <com.fsck.k9.helper.HtmlSanitizer: org.htmlcleaner.HtmlCleaner HTML_CLEANER>;

        $r3 = virtualinvoke $r2.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.lang.String)>($r1);

        specialinvoke r0.<com.fsck.k9.helper.HtmlSanitizer: void removeMetaRefresh(org.htmlcleaner.TagNode)>($r3);

        $r4 = <com.fsck.k9.helper.HtmlSanitizer: org.htmlcleaner.HtmlSerializer HTML_SERIALIZER>;

        $r1 = virtualinvoke $r4.<org.htmlcleaner.HtmlSerializer: java.lang.String getAsString(org.htmlcleaner.TagNode,java.lang.String)>($r3, "UTF8");

        return $r1;
    }
