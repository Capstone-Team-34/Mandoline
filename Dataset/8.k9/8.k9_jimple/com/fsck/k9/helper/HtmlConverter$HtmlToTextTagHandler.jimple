com.fsck.k9.helper.HtmlConverter$HtmlToTextTagHandler extends java.lang.Object implements android.text.Html$TagHandler
private static final java.lang.String IGNORED_ANNOTATION_KEY
private static final java.lang.String IGNORED_ANNOTATION_VALUE
private static final java.util.Set TAGS_WITH_IGNORED_CONTENT
    static void <clinit>()
    {
        java.util.HashSet r0;
        java.util.Set $r1;

        r0 = new java.util.HashSet;

        specialinvoke r0.<java.util.HashSet: void <init>()>();

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>("style");

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>("script");

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>("title");

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>("!");

        $r1 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(r0);

        <com.fsck.k9.helper.HtmlConverter$HtmlToTextTagHandler: java.util.Set TAGS_WITH_IGNORED_CONTENT> = $r1;

        return;
    }
    private void <init>()
    {
        com.fsck.k9.helper.HtmlConverter$HtmlToTextTagHandler r0;

        r0 := @this: com.fsck.k9.helper.HtmlConverter$HtmlToTextTagHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    void <init>(com.fsck.k9.helper.HtmlConverter$1)
    {
        com.fsck.k9.helper.HtmlConverter$HtmlToTextTagHandler r0;
        com.fsck.k9.helper.HtmlConverter$1 $r1;

        r0 := @this: com.fsck.k9.helper.HtmlConverter$HtmlToTextTagHandler;

        $r1 := @parameter0: com.fsck.k9.helper.HtmlConverter$1;

        specialinvoke r0.<com.fsck.k9.helper.HtmlConverter$HtmlToTextTagHandler: void <init>()>();

        return;
    }
    private java.lang.Object getOpeningAnnotation(android.text.Editable)
    {
        com.fsck.k9.helper.HtmlConverter$HtmlToTextTagHandler r0;
        android.text.Editable $r1;
        int $i0, $i1;
        java.lang.Object[] $r2;
        java.lang.Object r3;
        android.text.Annotation r4;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: com.fsck.k9.helper.HtmlConverter$HtmlToTextTagHandler;

        $r1 := @parameter0: android.text.Editable;

        $i0 = interfaceinvoke $r1.<android.text.Editable: int length()>();

        $r2 = interfaceinvoke $r1.<android.text.Editable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "Landroid/text/Annotation;");

        $i0 = lengthof $r2;

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label3;

        r3 = $r2[$i0];

        r4 = (android.text.Annotation) r3;

        r3 = $r2[$i0];

        $i1 = interfaceinvoke $r1.<android.text.Editable: int getSpanFlags(java.lang.Object)>(r3);

        if $i1 != 17 goto label2;

        $r5 = virtualinvoke r4.<android.text.Annotation: java.lang.String getKey()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("K9_ANNOTATION");

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r4.<android.text.Annotation: java.lang.String getValue()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("hiddenSpan");

        if $z0 == 0 goto label2;

        r3 = $r2[$i0];

        return r3;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        return null;
    }
    private void handleIgnoredTag(boolean, android.text.Editable)
    {
        com.fsck.k9.helper.HtmlConverter$HtmlToTextTagHandler r0;
        boolean $z0;
        android.text.Editable $r1;
        android.text.Annotation $r2;
        int $i0, $i1;
        java.lang.Object $r3;

        r0 := @this: com.fsck.k9.helper.HtmlConverter$HtmlToTextTagHandler;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: android.text.Editable;

        $i0 = interfaceinvoke $r1.<android.text.Editable: int length()>();

        if $z0 == 0 goto label1;

        $r2 = new android.text.Annotation;

        specialinvoke $r2.<android.text.Annotation: void <init>(java.lang.String,java.lang.String)>("K9_ANNOTATION", "hiddenSpan");

        interfaceinvoke $r1.<android.text.Editable: void setSpan(java.lang.Object,int,int,int)>($r2, $i0, $i0, 17);

        return;

     label1:
        $r3 = specialinvoke r0.<com.fsck.k9.helper.HtmlConverter$HtmlToTextTagHandler: java.lang.Object getOpeningAnnotation(android.text.Editable)>($r1);

        if $r3 == null goto label2;

        $i1 = interfaceinvoke $r1.<android.text.Editable: int getSpanStart(java.lang.Object)>($r3);

        interfaceinvoke $r1.<android.text.Editable: void removeSpan(java.lang.Object)>($r3);

        interfaceinvoke $r1.<android.text.Editable: android.text.Editable delete(int,int)>($i1, $i0);

     label2:
        return;
    }
    public void handleTag(boolean, java.lang.String, android.text.Editable, org.xml.sax.XMLReader)
    {
        com.fsck.k9.helper.HtmlConverter$HtmlToTextTagHandler r0;
        boolean $z0, $z1;
        android.text.Editable $r1;
        org.xml.sax.XMLReader $r2;
        java.lang.String $r3;
        java.util.Locale $r4;
        java.util.Set $r5;

        r0 := @this: com.fsck.k9.helper.HtmlConverter$HtmlToTextTagHandler;

        $z0 := @parameter0: boolean;

        $r3 := @parameter1: java.lang.String;

        $r1 := @parameter2: android.text.Editable;

        $r2 := @parameter3: org.xml.sax.XMLReader;

        $r4 = <java.util.Locale: java.util.Locale US>;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r4);

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("hr");

        if $z1 == 0 goto label1;

        if $z0 == 0 goto label1;

        interfaceinvoke $r1.<android.text.Editable: android.text.Editable append(java.lang.CharSequence)>("_____________________________________________\r\n");

        return;

     label1:
        $r5 = <com.fsck.k9.helper.HtmlConverter$HtmlToTextTagHandler: java.util.Set TAGS_WITH_IGNORED_CONTENT>;

        $z1 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        specialinvoke r0.<com.fsck.k9.helper.HtmlConverter$HtmlToTextTagHandler: void handleIgnoredTag(boolean,android.text.Editable)>($z0, $r1);

     label2:
        return;
    }
