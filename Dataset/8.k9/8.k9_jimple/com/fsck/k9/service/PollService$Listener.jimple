com.fsck.k9.service.PollService$Listener extends com.fsck.k9.controller.MessagingListener
java.util.Map accountsChecked
private int startId
final com.fsck.k9.service.PollService this$0
private com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock wakeLock
    void <init>(com.fsck.k9.service.PollService)
    {
        com.fsck.k9.service.PollService$Listener r0;
        com.fsck.k9.service.PollService $r1;
        java.util.HashMap $r2;

        r0 := @this: com.fsck.k9.service.PollService$Listener;

        $r1 := @parameter0: com.fsck.k9.service.PollService;

        r0.<com.fsck.k9.service.PollService$Listener: com.fsck.k9.service.PollService this$0> = $r1;

        specialinvoke r0.<com.fsck.k9.controller.MessagingListener: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.fsck.k9.service.PollService$Listener: java.util.Map accountsChecked> = $r2;

        r0.<com.fsck.k9.service.PollService$Listener: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock wakeLock> = null;

        r0.<com.fsck.k9.service.PollService$Listener: int startId> = -1;

        return;
    }
    private void release()
    {
        com.fsck.k9.service.PollService$Listener r0;
        com.fsck.k9.service.PollService $r1;
        android.app.Application $r2;
        com.fsck.k9.controller.MessagingController $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;
        int $i0;
        java.lang.String $r5;

        r0 := @this: com.fsck.k9.service.PollService$Listener;

        $r1 = r0.<com.fsck.k9.service.PollService$Listener: com.fsck.k9.service.PollService this$0>;

        $r2 = virtualinvoke $r1.<com.fsck.k9.service.PollService: android.app.Application getApplication()>();

        $r3 = staticinvoke <com.fsck.k9.controller.MessagingController: com.fsck.k9.controller.MessagingController getInstance(android.content.Context)>($r2);

        virtualinvoke $r3.<com.fsck.k9.controller.MessagingController: void setCheckMailListener(com.fsck.k9.controller.MessagingListener)>(null);

        $r1 = r0.<com.fsck.k9.service.PollService$Listener: com.fsck.k9.service.PollService this$0>;

        $r2 = virtualinvoke $r1.<com.fsck.k9.service.PollService: android.app.Application getApplication()>();

        staticinvoke <com.fsck.k9.service.MailService: void saveLastCheckEnd(android.content.Context)>($r2);

        $r1 = r0.<com.fsck.k9.service.PollService$Listener: com.fsck.k9.service.PollService this$0>;

        staticinvoke <com.fsck.k9.service.MailService: void actionReschedulePoll(android.content.Context,java.lang.Integer)>($r1, null);

        virtualinvoke r0.<com.fsck.k9.service.PollService$Listener: void wakeLockRelease()>();

        $z0 = <com.fsck.k9.K9: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PollService stopping with startId = ");

        $i0 = r0.<com.fsck.k9.service.PollService$Listener: int startId>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("k9", $r5);

     label1:
        $r1 = r0.<com.fsck.k9.service.PollService$Listener: com.fsck.k9.service.PollService this$0>;

        $i0 = r0.<com.fsck.k9.service.PollService$Listener: int startId>;

        virtualinvoke $r1.<com.fsck.k9.service.PollService: void stopSelf(int)>($i0);

        return;
    }
    public void checkMailFailed(android.content.Context, com.fsck.k9.Account, java.lang.String)
    {
        com.fsck.k9.service.PollService$Listener r0;
        android.content.Context $r1;
        com.fsck.k9.Account $r2;
        java.lang.String $r3;

        r0 := @this: com.fsck.k9.service.PollService$Listener;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.fsck.k9.Account;

        $r3 := @parameter2: java.lang.String;

        specialinvoke r0.<com.fsck.k9.service.PollService$Listener: void release()>();

        return;
    }
    public void checkMailFinished(android.content.Context, com.fsck.k9.Account)
    {
        com.fsck.k9.service.PollService$Listener r0;
        android.content.Context $r1;
        com.fsck.k9.Account $r2;
        boolean $z0;

        r0 := @this: com.fsck.k9.service.PollService$Listener;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.fsck.k9.Account;

        $z0 = <com.fsck.k9.K9: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("k9", "***** PollService *****: checkMailFinished");

     label1:
        specialinvoke r0.<com.fsck.k9.service.PollService$Listener: void release()>();

        return;
    }
    public void checkMailStarted(android.content.Context, com.fsck.k9.Account)
    {
        com.fsck.k9.service.PollService$Listener r0;
        android.content.Context $r1;
        com.fsck.k9.Account $r2;
        java.util.Map $r3;

        r0 := @this: com.fsck.k9.service.PollService$Listener;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.fsck.k9.Account;

        $r3 = r0.<com.fsck.k9.service.PollService$Listener: java.util.Map accountsChecked>;

        interfaceinvoke $r3.<java.util.Map: void clear()>();

        return;
    }
    public int getStartId()
    {
        com.fsck.k9.service.PollService$Listener r0;
        int i0;

        r0 := @this: com.fsck.k9.service.PollService$Listener;

        i0 = r0.<com.fsck.k9.service.PollService$Listener: int startId>;

        return i0;
    }
    public void setStartId(int)
    {
        com.fsck.k9.service.PollService$Listener r0;
        int $i0;

        r0 := @this: com.fsck.k9.service.PollService$Listener;

        $i0 := @parameter0: int;

        r0.<com.fsck.k9.service.PollService$Listener: int startId> = $i0;

        return;
    }
    public void synchronizeMailboxFinished(com.fsck.k9.Account, java.lang.String, int, int)
    {
        com.fsck.k9.service.PollService$Listener r0;
        com.fsck.k9.Account $r1;
        java.lang.String $r2;
        int $i0, $i1;
        boolean $z0;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.Integer r5;

        r0 := @this: com.fsck.k9.service.PollService$Listener;

        $r1 := @parameter0: com.fsck.k9.Account;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $z0 = virtualinvoke $r1.<com.fsck.k9.Account: boolean isNotifyNewMail()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.fsck.k9.service.PollService$Listener: java.util.Map accountsChecked>;

        $r2 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getUuid()>();

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r5 = (java.lang.Integer) $r4;

        if r5 != null goto label1;

        r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

     label1:
        $r3 = r0.<com.fsck.k9.service.PollService$Listener: java.util.Map accountsChecked>;

        $r2 = virtualinvoke $r1.<com.fsck.k9.Account: java.lang.String getUuid()>();

        $i0 = virtualinvoke r5.<java.lang.Integer: int intValue()>();

        $i0 = $i0 + $i1;

        r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r5);

     label2:
        return;
    }
    public void wakeLockAcquire()
    {
        com.fsck.k9.service.PollService$Listener r0;
        com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock r1, $r4;
        com.fsck.k9.service.PollService $r2;
        com.fsck.k9.mail.power.TracingPowerManager $r3;
        java.lang.Throwable $r5;

        r0 := @this: com.fsck.k9.service.PollService$Listener;

        entermonitor r0;

     label1:
        r1 = r0.<com.fsck.k9.service.PollService$Listener: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock wakeLock>;

        $r2 = r0.<com.fsck.k9.service.PollService$Listener: com.fsck.k9.service.PollService this$0>;

        $r3 = staticinvoke <com.fsck.k9.mail.power.TracingPowerManager: com.fsck.k9.mail.power.TracingPowerManager getPowerManager(android.content.Context)>($r2);

        $r4 = virtualinvoke $r3.<com.fsck.k9.mail.power.TracingPowerManager: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock newWakeLock(int,java.lang.String)>(1, "PollService wakeLockAcquire");

        r0.<com.fsck.k9.service.PollService$Listener: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock wakeLock> = $r4;

        $r4 = r0.<com.fsck.k9.service.PollService$Listener: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock wakeLock>;

        virtualinvoke $r4.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock: void setReferenceCounted(boolean)>(0);

        $r4 = r0.<com.fsck.k9.service.PollService$Listener: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock wakeLock>;

        virtualinvoke $r4.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock: void acquire(long)>(600000L);

        if r1 == null goto label2;

        virtualinvoke r1.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock: void release()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void wakeLockRelease()
    {
        com.fsck.k9.service.PollService$Listener r0;
        com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock $r1;
        java.lang.Throwable $r2;

        r0 := @this: com.fsck.k9.service.PollService$Listener;

        entermonitor r0;

     label1:
        $r1 = r0.<com.fsck.k9.service.PollService$Listener: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock wakeLock>;

        if $r1 == null goto label2;

        $r1 = r0.<com.fsck.k9.service.PollService$Listener: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock wakeLock>;

        virtualinvoke $r1.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock: void release()>();

        r0.<com.fsck.k9.service.PollService$Listener: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock wakeLock> = null;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
