com.fsck.k9.service.CoreService extends android.app.Service
public static final java.lang.String WAKE_LOCK_ID
private static java.util.concurrent.atomic.AtomicInteger sWakeLockSeq
private static java.util.concurrent.ConcurrentHashMap sWakeLocks
private final java.lang.String className
private boolean mAutoShutdown
protected boolean mImmediateShutdown
private volatile boolean mShutdown
private java.util.concurrent.ExecutorService mThreadPool
    static void <clinit>()
    {
        java.util.concurrent.ConcurrentHashMap $r0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        $r0 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <com.fsck.k9.service.CoreService: java.util.concurrent.ConcurrentHashMap sWakeLocks> = $r0;

        $r1 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        <com.fsck.k9.service.CoreService: java.util.concurrent.atomic.AtomicInteger sWakeLockSeq> = $r1;

        return;
    }
    public void <init>()
    {
        com.fsck.k9.service.CoreService r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: com.fsck.k9.service.CoreService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        r0.<com.fsck.k9.service.CoreService: java.util.concurrent.ExecutorService mThreadPool> = null;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        r0.<com.fsck.k9.service.CoreService: java.lang.String className> = $r2;

        r0.<com.fsck.k9.service.CoreService: boolean mShutdown> = 0;

        r0.<com.fsck.k9.service.CoreService: boolean mAutoShutdown> = 1;

        r0.<com.fsck.k9.service.CoreService: boolean mImmediateShutdown> = 1;

        return;
    }
    static java.lang.String access$000(com.fsck.k9.service.CoreService)
    {
        com.fsck.k9.service.CoreService $r0;
        java.lang.String r1;

        $r0 := @parameter0: com.fsck.k9.service.CoreService;

        r1 = $r0.<com.fsck.k9.service.CoreService: java.lang.String className>;

        return r1;
    }
    protected static com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock acquireWakeLock(android.content.Context, java.lang.String, long)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        long $l0;
        com.fsck.k9.mail.power.TracingPowerManager $r2;
        com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        $r2 = staticinvoke <com.fsck.k9.mail.power.TracingPowerManager: com.fsck.k9.mail.power.TracingPowerManager getPowerManager(android.content.Context)>($r0);

        $r3 = virtualinvoke $r2.<com.fsck.k9.mail.power.TracingPowerManager: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock newWakeLock(int,java.lang.String)>(1, $r1);

        virtualinvoke $r3.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock: void setReferenceCounted(boolean)>(0);

        virtualinvoke $r3.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock: void acquire(long)>($l0);

        return $r3;
    }
    protected static void addWakeLock(android.content.Context, android.content.Intent)
    {
        android.content.Context $r0;
        android.content.Intent $r1;
        com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock $r2;
        java.lang.Integer $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.content.Intent;

        $r2 = staticinvoke <com.fsck.k9.service.CoreService: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock acquireWakeLock(android.content.Context,java.lang.String,long)>($r0, "CoreService addWakeLock", 60000L);

        $r3 = staticinvoke <com.fsck.k9.service.CoreService: java.lang.Integer registerWakeLock(com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock)>($r2);

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("com.fsck.k9.service.CoreService.wakeLockId", $r3);

        return;
    }
    protected static void addWakeLockId(android.content.Context, android.content.Intent, java.lang.Integer, boolean)
    {
        android.content.Context $r0;
        android.content.Intent $r1;
        java.lang.Integer $r2;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.content.Intent;

        $r2 := @parameter2: java.lang.Integer;

        $z0 := @parameter3: boolean;

        if $r2 == null goto label1;

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("com.fsck.k9.service.CoreReceiver.wakeLockId", $r2);

        return;

     label1:
        if $z0 == 0 goto label2;

        staticinvoke <com.fsck.k9.service.CoreService: void addWakeLock(android.content.Context,android.content.Intent)>($r0, $r1);

     label2:
        return;
    }
    protected static java.lang.Integer registerWakeLock(com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock)
    {
        com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock $r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0;
        java.lang.Integer $r2;
        java.util.concurrent.ConcurrentHashMap $r3;

        $r0 := @parameter0: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock;

        $r1 = <com.fsck.k9.service.CoreService: java.util.concurrent.atomic.AtomicInteger sWakeLockSeq>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = <com.fsck.k9.service.CoreService: java.util.concurrent.ConcurrentHashMap sWakeLocks>;

        virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r0);

        return $r2;
    }
    public void execute(android.content.Context, java.lang.Runnable, int, java.lang.Integer)
    {
        com.fsck.k9.service.CoreService r0;
        android.content.Context $r1;
        java.lang.Runnable $r2;
        int $i0;
        java.lang.Integer $r3;
        com.fsck.k9.service.CoreService$1 r4;
        boolean z0, $z1, z2;
        java.util.concurrent.RejectedExecutionException r5;
        long $l1;
        com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock $r6;
        java.util.concurrent.ExecutorService $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        java.lang.Throwable $r10;

        r0 := @this: com.fsck.k9.service.CoreService;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.Runnable;

        $i0 := @parameter2: int;

        $r3 := @parameter3: java.lang.Integer;

        $z1 = 1;

        z2 = 0;

        z0 = r0.<com.fsck.k9.service.CoreService: boolean mAutoShutdown>;

        $l1 = (long) $i0;

        $r6 = staticinvoke <com.fsck.k9.service.CoreService: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock acquireWakeLock(android.content.Context,java.lang.String,long)>($r1, "CoreService execute", $l1);

        r4 = new com.fsck.k9.service.CoreService$1;

        specialinvoke r4.<com.fsck.k9.service.CoreService$1: void <init>(com.fsck.k9.service.CoreService,java.lang.Runnable,java.lang.Integer,com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock,boolean)>(r0, $r2, $r3, $r6, z0);

        $r7 = r0.<com.fsck.k9.service.CoreService: java.util.concurrent.ExecutorService mThreadPool>;

        if $r7 != null goto label09;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CoreService.execute (");

        $r9 = r0.<com.fsck.k9.service.CoreService: java.lang.String className>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") called with no thread pool available; running Runnable ");

        $i0 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in calling thread");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("k9", $r9);

        entermonitor r0;

     label01:
        interfaceinvoke r4.<java.lang.Runnable: void run()>();

        if $r3 == null goto label05;

        z2 = 1;

     label02:
        exitmonitor r0;

     label03:
        if z2 != 0 goto label16;

     label04:
        r0.<com.fsck.k9.service.CoreService: boolean mImmediateShutdown> = $z1;

        return;

     label05:
        z2 = 0;

        goto label02;

     label06:
        $r10 := @caughtexception;

     label07:
        exitmonitor r0;

     label08:
        throw $r10;

     label09:
        z0 = <com.fsck.k9.K9: boolean DEBUG>;

        if z0 == 0 goto label10;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CoreService (");

        $r9 = r0.<com.fsck.k9.service.CoreService: java.lang.String className>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") queueing Runnable ");

        $i0 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with startId ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("k9", $r9);

     label10:
        $r7 = r0.<com.fsck.k9.service.CoreService: java.util.concurrent.ExecutorService mThreadPool>;

     label11:
        interfaceinvoke $r7.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>(r4);

     label12:
        if $r3 == null goto label13;

        z2 = 1;

        goto label03;

     label13:
        z2 = 0;

        goto label03;

     label14:
        r5 := @caughtexception;

        z0 = r0.<com.fsck.k9.service.CoreService: boolean mShutdown>;

        if z0 != 0 goto label15;

        throw r5;

     label15:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CoreService: ");

        $r9 = r0.<com.fsck.k9.service.CoreService: java.lang.String className>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is shutting down, ignoring rejected execution exception: ");

        $r9 = virtualinvoke r5.<java.util.concurrent.RejectedExecutionException: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("k9", $r9);

        goto label03;

     label16:
        $z1 = 0;

        goto label04;

        catch java.lang.Throwable from label01 to label03 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.util.concurrent.RejectedExecutionException from label11 to label12 with label14;
    }
    protected boolean isAutoShutdown()
    {
        com.fsck.k9.service.CoreService r0;
        boolean z0;

        r0 := @this: com.fsck.k9.service.CoreService;

        z0 = r0.<com.fsck.k9.service.CoreService: boolean mAutoShutdown>;

        return z0;
    }
    public android.os.IBinder onBind(android.content.Intent)
    {
        com.fsck.k9.service.CoreService r0;
        android.content.Intent $r1;

        r0 := @this: com.fsck.k9.service.CoreService;

        $r1 := @parameter0: android.content.Intent;

        return null;
    }
    public void onCreate()
    {
        com.fsck.k9.service.CoreService r0;
        boolean $z0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        java.util.concurrent.ExecutorService $r3;

        r0 := @this: com.fsck.k9.service.CoreService;

        $z0 = <com.fsck.k9.K9: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CoreService: ");

        $r2 = r0.<com.fsck.k9.service.CoreService: java.lang.String className>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".onCreate()");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("k9", $r2);

     label1:
        $r3 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>(1);

        r0.<com.fsck.k9.service.CoreService: java.util.concurrent.ExecutorService mThreadPool> = $r3;

        return;
    }
    public void onDestroy()
    {
        com.fsck.k9.service.CoreService r0;
        boolean $z0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        java.util.concurrent.ExecutorService $r3;

        r0 := @this: com.fsck.k9.service.CoreService;

        $z0 = <com.fsck.k9.K9: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CoreService: ");

        $r2 = r0.<com.fsck.k9.service.CoreService: java.lang.String className>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".onDestroy()");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("k9", $r2);

     label1:
        r0.<com.fsck.k9.service.CoreService: boolean mShutdown> = 1;

        $r3 = r0.<com.fsck.k9.service.CoreService: java.util.concurrent.ExecutorService mThreadPool>;

        interfaceinvoke $r3.<java.util.concurrent.ExecutorService: void shutdown()>();

        return;
    }
    public void onLowMemory()
    {
        com.fsck.k9.service.CoreService r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: com.fsck.k9.service.CoreService;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CoreService: ");

        $r2 = r0.<com.fsck.k9.service.CoreService: java.lang.String className>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".onLowMemory() - Running low on memory");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("k9", $r2);

        return;
    }
    public final int onStartCommand(android.content.Intent, int, int)
    {
        com.fsck.k9.service.CoreService r0;
        android.content.Intent $r1;
        int $i0, $i1;
        com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock $r2, r8;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.util.concurrent.ConcurrentHashMap $r5;
        java.lang.Integer $r6;
        java.lang.Object $r7;
        java.lang.Throwable $r9;
        java.lang.Exception $r10, $r11, $r12, $r13;

        r0 := @this: com.fsck.k9.service.CoreService;

        $r1 := @parameter0: android.content.Intent;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $r1 != null goto label01;

        virtualinvoke r0.<com.fsck.k9.service.CoreService: void stopSelf(int)>($i1);

        return 2;

     label01:
        $r2 = staticinvoke <com.fsck.k9.service.CoreService: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock acquireWakeLock(android.content.Context,java.lang.String,long)>(r0, "CoreService onStart", 60000L);

        $z0 = <com.fsck.k9.K9: boolean DEBUG>;

        if $z0 == 0 goto label02;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CoreService: ");

        $r4 = r0.<com.fsck.k9.service.CoreService: java.lang.String className>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".onStart(");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("k9", $r4);

     label02:
        $i0 = virtualinvoke $r1.<android.content.Intent: int getIntExtra(java.lang.String,int)>("com.fsck.k9.service.CoreReceiver.wakeLockId", -1);

        if $i0 == -1 goto label03;

        staticinvoke <com.fsck.k9.service.BootReceiver: void releaseWakeLock(android.content.Context,int)>(r0, $i0);

     label03:
        $i0 = virtualinvoke $r1.<android.content.Intent: int getIntExtra(java.lang.String,int)>("com.fsck.k9.service.CoreService.wakeLockId", -1);

        if $i0 == -1 goto label06;

        $z0 = <com.fsck.k9.K9: boolean DEBUG>;

        if $z0 == 0 goto label04;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got core wake lock id ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("k9", $r4);

     label04:
        $r5 = <com.fsck.k9.service.CoreService: java.util.concurrent.ConcurrentHashMap sWakeLocks>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r7 = virtualinvoke $r5.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>($r6);

        r8 = (com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock) $r7;

        if r8 == null goto label06;

        $z0 = <com.fsck.k9.K9: boolean DEBUG>;

        if $z0 == 0 goto label05;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found core wake lock with id ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", releasing");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("k9", $r4);

     label05:
        virtualinvoke r8.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock: void release()>();

     label06:
        r0.<com.fsck.k9.service.CoreService: boolean mImmediateShutdown> = 1;

     label07:
        $i0 = virtualinvoke r0.<com.fsck.k9.service.CoreService: int startService(android.content.Intent,int)>($r1, $i1);

     label08:
        virtualinvoke $r2.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock: void release()>();

     label09:
        $z0 = r0.<com.fsck.k9.service.CoreService: boolean mAutoShutdown>;

     label10:
        if $z0 == 0 goto label27;

     label11:
        $z0 = r0.<com.fsck.k9.service.CoreService: boolean mImmediateShutdown>;

     label12:
        if $z0 == 0 goto label27;

        if $i1 == -1 goto label27;

     label13:
        virtualinvoke r0.<com.fsck.k9.service.CoreService: void stopSelf(int)>($i1);

     label14:
        return 2;

     label15:
        $r9 := @caughtexception;

     label16:
        virtualinvoke $r2.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock: void release()>();

     label17:
        $z0 = r0.<com.fsck.k9.service.CoreService: boolean mAutoShutdown>;

     label18:
        if $z0 == 0 goto label22;

     label19:
        $z0 = r0.<com.fsck.k9.service.CoreService: boolean mImmediateShutdown>;

     label20:
        if $z0 == 0 goto label22;

        if $i1 == -1 goto label22;

     label21:
        virtualinvoke r0.<com.fsck.k9.service.CoreService: void stopSelf(int)>($i1);

     label22:
        throw $r9;

     label23:
        $r10 := @caughtexception;

        goto label09;

     label24:
        $r11 := @caughtexception;

        goto label17;

     label25:
        $r12 := @caughtexception;

        goto label22;

     label26:
        $r13 := @caughtexception;

     label27:
        return $i0;

        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Exception from label08 to label09 with label23;
        catch java.lang.Exception from label09 to label10 with label26;
        catch java.lang.Exception from label11 to label12 with label26;
        catch java.lang.Exception from label13 to label14 with label26;
        catch java.lang.Exception from label16 to label17 with label24;
        catch java.lang.Exception from label17 to label18 with label25;
        catch java.lang.Exception from label19 to label20 with label25;
        catch java.lang.Exception from label21 to label22 with label25;
    }
    protected void setAutoShutdown(boolean)
    {
        com.fsck.k9.service.CoreService r0;
        boolean $z0;

        r0 := @this: com.fsck.k9.service.CoreService;

        $z0 := @parameter0: boolean;

        r0.<com.fsck.k9.service.CoreService: boolean mAutoShutdown> = $z0;

        return;
    }
public abstract int startService(android.content.Intent, int) { 
// no body
} 
