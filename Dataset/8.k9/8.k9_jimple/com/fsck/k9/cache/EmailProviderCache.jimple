com.fsck.k9.cache.EmailProviderCache extends java.lang.Object
public static final java.lang.String ACTION_CACHE_UPDATED
private static android.content.Context sContext
private static java.util.Map sInstances
private java.lang.String mAccountUuid
private final java.util.Map mHiddenMessageCache
private final java.util.Map mMessageCache
private final java.util.Map mThreadCache
    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.fsck.k9.cache.EmailProviderCache: java.util.Map sInstances> = $r0;

        return;
    }
    private void <init>(java.lang.String)
    {
        com.fsck.k9.cache.EmailProviderCache r0;
        java.lang.String $r1;
        java.util.HashMap $r2;

        r0 := @this: com.fsck.k9.cache.EmailProviderCache;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.fsck.k9.cache.EmailProviderCache: java.util.Map mMessageCache> = $r2;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.fsck.k9.cache.EmailProviderCache: java.util.Map mThreadCache> = $r2;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.fsck.k9.cache.EmailProviderCache: java.util.Map mHiddenMessageCache> = $r2;

        r0.<com.fsck.k9.cache.EmailProviderCache: java.lang.String mAccountUuid> = $r1;

        return;
    }
    public static com.fsck.k9.cache.EmailProviderCache getCache(java.lang.String, android.content.Context)
    {
        java.lang.String $r0;
        android.content.Context $r1, $r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        com.fsck.k9.cache.EmailProviderCache r5;
        java.lang.Throwable $r6;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: android.content.Context;

        entermonitor class "Lcom/fsck/k9/cache/EmailProviderCache;";

     label1:
        $r2 = <com.fsck.k9.cache.EmailProviderCache: android.content.Context sContext>;

        if $r2 != null goto label2;

        $r1 = virtualinvoke $r1.<android.content.Context: android.content.Context getApplicationContext()>();

        <com.fsck.k9.cache.EmailProviderCache: android.content.Context sContext> = $r1;

     label2:
        $r3 = <com.fsck.k9.cache.EmailProviderCache: java.util.Map sInstances>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        r5 = (com.fsck.k9.cache.EmailProviderCache) $r4;

        if r5 != null goto label3;

        r5 = new com.fsck.k9.cache.EmailProviderCache;

        specialinvoke r5.<com.fsck.k9.cache.EmailProviderCache: void <init>(java.lang.String)>($r0);

        $r3 = <com.fsck.k9.cache.EmailProviderCache: java.util.Map sInstances>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, r5);

     label3:
        exitmonitor class "Lcom/fsck/k9/cache/EmailProviderCache;";

        return r5;

     label4:
        $r6 := @caughtexception;

        exitmonitor class "Lcom/fsck/k9/cache/EmailProviderCache;";

        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
    }
    private void notifyChange()
    {
        com.fsck.k9.cache.EmailProviderCache r0;
        android.content.Context $r1;
        android.support.v4.content.LocalBroadcastManager $r2;
        android.content.Intent $r3;
        android.net.Uri $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        android.content.ContentResolver $r7;

        r0 := @this: com.fsck.k9.cache.EmailProviderCache;

        $r1 = <com.fsck.k9.cache.EmailProviderCache: android.content.Context sContext>;

        $r2 = staticinvoke <android.support.v4.content.LocalBroadcastManager: android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context)>($r1);

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("EmailProviderCache.ACTION_CACHE_UPDATED");

        virtualinvoke $r2.<android.support.v4.content.LocalBroadcastManager: boolean sendBroadcast(android.content.Intent)>($r3);

        $r4 = <com.fsck.k9.provider.EmailProvider: android.net.Uri CONTENT_URI>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("account/");

        $r6 = r0.<com.fsck.k9.cache.EmailProviderCache: java.lang.String mAccountUuid>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/messages");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r4, $r6);

        $r1 = <com.fsck.k9.cache.EmailProviderCache: android.content.Context sContext>;

        $r7 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r7.<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver)>($r4, null);

        return;
    }
    public java.lang.String getValueForMessage(java.lang.Long, java.lang.String)
    {
        com.fsck.k9.cache.EmailProviderCache r0;
        java.lang.Long $r1;
        java.lang.String $r2;
        java.util.Map $r3, $r4;
        java.lang.Object $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.fsck.k9.cache.EmailProviderCache;

        $r1 := @parameter0: java.lang.Long;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.fsck.k9.cache.EmailProviderCache: java.util.Map mMessageCache>;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.fsck.k9.cache.EmailProviderCache: java.util.Map mMessageCache>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.util.Map) $r5;

        if $r4 != null goto label4;

        $r2 = null;

     label2:
        exitmonitor $r3;

     label3:
        return $r2;

     label4:
        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r2 = (java.lang.String) $r5;

        goto label2;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r3;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label4 to label6 with label5;
    }
    public java.lang.String getValueForThread(java.lang.Long, java.lang.String)
    {
        com.fsck.k9.cache.EmailProviderCache r0;
        java.lang.Long $r1;
        java.lang.String $r2;
        java.util.Map $r3, $r4;
        java.lang.Object $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.fsck.k9.cache.EmailProviderCache;

        $r1 := @parameter0: java.lang.Long;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.fsck.k9.cache.EmailProviderCache: java.util.Map mThreadCache>;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.fsck.k9.cache.EmailProviderCache: java.util.Map mThreadCache>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.util.Map) $r5;

        if $r4 != null goto label4;

        $r2 = null;

     label2:
        exitmonitor $r3;

     label3:
        return $r2;

     label4:
        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r2 = (java.lang.String) $r5;

        goto label2;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r3;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label4 to label6 with label5;
    }
    public void hideMessages(java.util.List)
    {
        com.fsck.k9.cache.EmailProviderCache r0;
        java.util.List r1;
        java.util.Map $r2, $r6;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.fsck.k9.mailstore.LocalMessage r5;
        long $l0;
        java.lang.Long $r7, $r9;
        com.fsck.k9.mailstore.LocalFolder $r8;
        java.lang.Throwable $r10;

        r0 := @this: com.fsck.k9.cache.EmailProviderCache;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<com.fsck.k9.cache.EmailProviderCache: java.util.Map mHiddenMessageCache>;

        entermonitor $r2;

     label1:
        $r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.fsck.k9.mailstore.LocalMessage) $r4;

        $l0 = virtualinvoke r5.<com.fsck.k9.mailstore.LocalMessage: long getId()>();

        $r6 = r0.<com.fsck.k9.cache.EmailProviderCache: java.util.Map mHiddenMessageCache>;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r8 = virtualinvoke r5.<com.fsck.k9.mailstore.LocalMessage: com.fsck.k9.mailstore.LocalFolder getFolder()>();

        $l0 = virtualinvoke $r8.<com.fsck.k9.mailstore.LocalFolder: long getId()>();

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r9);

        goto label2;

     label3:
        $r10 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r10;

     label5:
        exitmonitor $r2;

     label6:
        specialinvoke r0.<com.fsck.k9.cache.EmailProviderCache: void notifyChange()>();

        return;

        catch java.lang.Throwable from label1 to label4 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }
    public boolean isMessageHidden(java.lang.Long, long)
    {
        com.fsck.k9.cache.EmailProviderCache r0;
        java.lang.Long $r1;
        long $l0, $l1;
        java.util.Map $r2, $r3;
        java.lang.Object $r4;
        byte $b2;
        boolean $z0;
        java.lang.Throwable $r5;

        r0 := @this: com.fsck.k9.cache.EmailProviderCache;

        $r1 := @parameter0: java.lang.Long;

        $l0 := @parameter1: long;

        $r2 = r0.<com.fsck.k9.cache.EmailProviderCache: java.util.Map mHiddenMessageCache>;

        entermonitor $r2;

     label1:
        $r3 = r0.<com.fsck.k9.cache.EmailProviderCache: java.util.Map mHiddenMessageCache>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r1 = (java.lang.Long) $r4;

        if $r1 == null goto label4;

        $l1 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label4;

        $z0 = 1;

     label2:
        exitmonitor $r2;

     label3:
        return $z0;

     label4:
        $z0 = 0;

        goto label2;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label4 to label6 with label5;
    }
    public void removeValueForMessages(java.util.List, java.lang.String)
    {
        com.fsck.k9.cache.EmailProviderCache r0;
        java.util.List r1;
        java.lang.String $r2;
        java.util.Map $r3, $r7;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.Long r6;
        java.lang.Throwable $r8;

        r0 := @this: com.fsck.k9.cache.EmailProviderCache;

        r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.fsck.k9.cache.EmailProviderCache: java.util.Map mMessageCache>;

        entermonitor $r3;

     label1:
        $r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.Long) $r5;

        $r7 = r0.<com.fsck.k9.cache.EmailProviderCache: java.util.Map mMessageCache>;

        $r5 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        $r7 = (java.util.Map) $r5;

        if $r7 == null goto label2;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r2);

        $z0 = interfaceinvoke $r7.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r7 = r0.<com.fsck.k9.cache.EmailProviderCache: java.util.Map mMessageCache>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r6);

        goto label2;

     label3:
        $r8 := @caughtexception;

        exitmonitor $r3;

     label4:
        throw $r8;

     label5:
        exitmonitor $r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label4 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }
    public void removeValueForThreads(java.util.List, java.lang.String)
    {
        com.fsck.k9.cache.EmailProviderCache r0;
        java.util.List r1;
        java.lang.String $r2;
        java.util.Map $r3, $r7;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.Long r6;
        java.lang.Throwable $r8;

        r0 := @this: com.fsck.k9.cache.EmailProviderCache;

        r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.fsck.k9.cache.EmailProviderCache: java.util.Map mThreadCache>;

        entermonitor $r3;

     label1:
        $r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.Long) $r5;

        $r7 = r0.<com.fsck.k9.cache.EmailProviderCache: java.util.Map mThreadCache>;

        $r5 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        $r7 = (java.util.Map) $r5;

        if $r7 == null goto label2;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r2);

        $z0 = interfaceinvoke $r7.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r7 = r0.<com.fsck.k9.cache.EmailProviderCache: java.util.Map mThreadCache>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r6);

        goto label2;

     label3:
        $r8 := @caughtexception;

        exitmonitor $r3;

     label4:
        throw $r8;

     label5:
        exitmonitor $r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label4 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }
    public void setValueForMessages(java.util.List, java.lang.String, java.lang.String)
    {
        com.fsck.k9.cache.EmailProviderCache r0;
        java.util.List r1;
        java.lang.String $r2, $r3;
        java.util.Map $r4, $r8, $r9;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.lang.Long r7;
        java.lang.Throwable $r10;
        java.util.HashMap $r11;

        r0 := @this: com.fsck.k9.cache.EmailProviderCache;

        r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = r0.<com.fsck.k9.cache.EmailProviderCache: java.util.Map mMessageCache>;

        entermonitor $r4;

     label1:
        $r5 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.Long) $r6;

        $r8 = r0.<com.fsck.k9.cache.EmailProviderCache: java.util.Map mMessageCache>;

        $r6 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        $r8 = (java.util.Map) $r6;

        if $r8 != null goto label3;

        $r11 = new java.util.HashMap;

        $r8 = $r11;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        $r9 = r0.<com.fsck.k9.cache.EmailProviderCache: java.util.Map mMessageCache>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r11);

     label3:
        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        goto label2;

     label4:
        $r10 := @caughtexception;

        exitmonitor $r4;

     label5:
        throw $r10;

     label6:
        exitmonitor $r4;

     label7:
        specialinvoke r0.<com.fsck.k9.cache.EmailProviderCache: void notifyChange()>();

        return;

        catch java.lang.Throwable from label1 to label5 with label4;
        catch java.lang.Throwable from label6 to label7 with label4;
    }
    public void setValueForThreads(java.util.List, java.lang.String, java.lang.String)
    {
        com.fsck.k9.cache.EmailProviderCache r0;
        java.util.List r1;
        java.lang.String $r2, $r3;
        java.util.Map $r4, $r8, $r9;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.lang.Long r7;
        java.lang.Throwable $r10;
        java.util.HashMap $r11;

        r0 := @this: com.fsck.k9.cache.EmailProviderCache;

        r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = r0.<com.fsck.k9.cache.EmailProviderCache: java.util.Map mThreadCache>;

        entermonitor $r4;

     label1:
        $r5 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.Long) $r6;

        $r8 = r0.<com.fsck.k9.cache.EmailProviderCache: java.util.Map mThreadCache>;

        $r6 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        $r8 = (java.util.Map) $r6;

        if $r8 != null goto label3;

        $r11 = new java.util.HashMap;

        $r8 = $r11;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        $r9 = r0.<com.fsck.k9.cache.EmailProviderCache: java.util.Map mThreadCache>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r11);

     label3:
        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        goto label2;

     label4:
        $r10 := @caughtexception;

        exitmonitor $r4;

     label5:
        throw $r10;

     label6:
        exitmonitor $r4;

     label7:
        specialinvoke r0.<com.fsck.k9.cache.EmailProviderCache: void notifyChange()>();

        return;

        catch java.lang.Throwable from label1 to label5 with label4;
        catch java.lang.Throwable from label6 to label7 with label4;
    }
    public void unhideMessages(java.util.List)
    {
        com.fsck.k9.cache.EmailProviderCache r0;
        java.util.List r1;
        java.util.Map $r2, $r8;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.fsck.k9.mail.Message r5;
        com.fsck.k9.mailstore.LocalMessage $r6;
        long $l0, $l1, $l2;
        com.fsck.k9.mailstore.LocalFolder $r7;
        java.lang.Long $r9;
        byte $b3;
        java.lang.Throwable $r10;

        r0 := @this: com.fsck.k9.cache.EmailProviderCache;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<com.fsck.k9.cache.EmailProviderCache: java.util.Map mHiddenMessageCache>;

        entermonitor $r2;

     label1:
        $r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.fsck.k9.mail.Message) $r4;

        $r6 = (com.fsck.k9.mailstore.LocalMessage) r5;

        $l0 = virtualinvoke $r6.<com.fsck.k9.mailstore.LocalMessage: long getId()>();

        $r7 = virtualinvoke $r6.<com.fsck.k9.mailstore.LocalMessage: com.fsck.k9.mailstore.LocalFolder getFolder()>();

        $l1 = virtualinvoke $r7.<com.fsck.k9.mailstore.LocalFolder: long getId()>();

        $r8 = r0.<com.fsck.k9.cache.EmailProviderCache: java.util.Map mHiddenMessageCache>;

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r4 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        $r9 = (java.lang.Long) $r4;

        if $r9 == null goto label2;

        $l2 = virtualinvoke $r9.<java.lang.Long: long longValue()>();

        $b3 = $l2 cmp $l1;

        if $b3 != 0 goto label2;

        $r8 = r0.<com.fsck.k9.cache.EmailProviderCache: java.util.Map mHiddenMessageCache>;

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r9);

        goto label2;

     label3:
        $r10 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r10;

     label5:
        exitmonitor $r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label4 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }
