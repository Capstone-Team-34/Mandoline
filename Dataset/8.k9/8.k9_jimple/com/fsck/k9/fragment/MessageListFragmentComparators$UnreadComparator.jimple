com.fsck.k9.fragment.MessageListFragmentComparators$UnreadComparator extends java.lang.Object implements java.util.Comparator
    public void <init>()
    {
        com.fsck.k9.fragment.MessageListFragmentComparators$UnreadComparator r0;

        r0 := @this: com.fsck.k9.fragment.MessageListFragmentComparators$UnreadComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public int compare(android.database.Cursor, android.database.Cursor)
    {
        com.fsck.k9.fragment.MessageListFragmentComparators$UnreadComparator r0;
        android.database.Cursor $r1, $r2;
        int $i0, $i1;

        r0 := @this: com.fsck.k9.fragment.MessageListFragmentComparators$UnreadComparator;

        $r1 := @parameter0: android.database.Cursor;

        $r2 := @parameter1: android.database.Cursor;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getInt(int)>(8);

        $i1 = interfaceinvoke $r2.<android.database.Cursor: int getInt(int)>(8);

        $i0 = $i0 - $i1;

        return $i0;
    }
    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        com.fsck.k9.fragment.MessageListFragmentComparators$UnreadComparator r0;
        int $i0;
        java.lang.Object $r1, $r2;
        android.database.Cursor $r3, $r4;

        r0 := @this: com.fsck.k9.fragment.MessageListFragmentComparators$UnreadComparator;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (android.database.Cursor) $r1;

        $r4 = (android.database.Cursor) $r2;

        $i0 = virtualinvoke r0.<com.fsck.k9.fragment.MessageListFragmentComparators$UnreadComparator: int compare(android.database.Cursor,android.database.Cursor)>($r3, $r4);

        return $i0;
    }
