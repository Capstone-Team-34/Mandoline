com.fsck.k9.mail.ssl.TrustManagerFactory extends java.lang.Object
private static final java.lang.String LOG_TAG
private static javax.net.ssl.X509TrustManager defaultTrustManager
private static com.fsck.k9.mail.ssl.LocalKeyStore keyStore
    static void <clinit>()
    {
        boolean $z0;
        com.fsck.k9.mail.ssl.LocalKeyStore $r0;
        javax.net.ssl.TrustManagerFactory $r1;
        javax.net.ssl.TrustManager[] $r2;
        int $i0, $i1;
        javax.net.ssl.TrustManager r3;
        javax.net.ssl.X509TrustManager r4;
        java.security.NoSuchAlgorithmException r5;
        java.security.KeyStoreException r6;

     label1:
        $r0 = staticinvoke <com.fsck.k9.mail.ssl.LocalKeyStore: com.fsck.k9.mail.ssl.LocalKeyStore getInstance()>();

     label2:
        <com.fsck.k9.mail.ssl.TrustManagerFactory: com.fsck.k9.mail.ssl.LocalKeyStore keyStore> = $r0;

     label3:
        $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>("X509");

        virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(null);

        $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();

     label4:
        if $r2 == null goto label9;

        $i0 = lengthof $r2;

        $i1 = 0;

     label5:
        if $i1 >= $i0 goto label9;

        r3 = $r2[$i1];

        $z0 = r3 instanceof javax.net.ssl.X509TrustManager;

        if $z0 == 0 goto label6;

        r4 = (javax.net.ssl.X509TrustManager) r3;

        <com.fsck.k9.mail.ssl.TrustManagerFactory: javax.net.ssl.X509TrustManager defaultTrustManager> = r4;

        return;

     label6:
        $i1 = $i1 + 1;

        goto label5;

     label7:
        r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TrustManagerFactory", "Unable to get X509 Trust Manager ", r5);

        return;

     label8:
        r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TrustManagerFactory", "Key Store exception while initializing TrustManagerFactory ", r6);

     label9:
        return;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label7;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label7;
        catch java.security.KeyStoreException from label1 to label2 with label8;
        catch java.security.KeyStoreException from label3 to label4 with label8;
    }
    private void <init>()
    {
        com.fsck.k9.mail.ssl.TrustManagerFactory r0;

        r0 := @this: com.fsck.k9.mail.ssl.TrustManagerFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    static javax.net.ssl.X509TrustManager access$000()
    {
        javax.net.ssl.X509TrustManager r0;

        r0 = <com.fsck.k9.mail.ssl.TrustManagerFactory: javax.net.ssl.X509TrustManager defaultTrustManager>;

        return r0;
    }
    static com.fsck.k9.mail.ssl.LocalKeyStore access$100()
    {
        com.fsck.k9.mail.ssl.LocalKeyStore r0;

        r0 = <com.fsck.k9.mail.ssl.TrustManagerFactory: com.fsck.k9.mail.ssl.LocalKeyStore keyStore>;

        return r0;
    }
    public static javax.net.ssl.X509TrustManager get(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0;
        javax.net.ssl.X509TrustManager $r1;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 = staticinvoke <com.fsck.k9.mail.ssl.TrustManagerFactory$SecureX509TrustManager: javax.net.ssl.X509TrustManager getInstance(java.lang.String,int)>($r0, $i0);

        return $r1;
    }
