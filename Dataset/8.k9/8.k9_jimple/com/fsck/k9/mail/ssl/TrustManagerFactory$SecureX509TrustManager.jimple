com.fsck.k9.mail.ssl.TrustManagerFactory$SecureX509TrustManager extends java.lang.Object implements javax.net.ssl.X509TrustManager
private static final java.util.Map mTrustManager
private final java.lang.String mHost
private final int mPort
    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.fsck.k9.mail.ssl.TrustManagerFactory$SecureX509TrustManager: java.util.Map mTrustManager> = $r0;

        return;
    }
    private void <init>(java.lang.String, int)
    {
        com.fsck.k9.mail.ssl.TrustManagerFactory$SecureX509TrustManager r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: com.fsck.k9.mail.ssl.TrustManagerFactory$SecureX509TrustManager;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.fsck.k9.mail.ssl.TrustManagerFactory$SecureX509TrustManager: java.lang.String mHost> = $r1;

        r0.<com.fsck.k9.mail.ssl.TrustManagerFactory$SecureX509TrustManager: int mPort> = $i0;

        return;
    }
    public static javax.net.ssl.X509TrustManager getInstance(java.lang.String, int)
    {
        java.lang.String $r0, $r2;
        int $i0;
        java.lang.StringBuilder $r1;
        java.util.Map $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.fsck.k9.mail.ssl.TrustManagerFactory$SecureX509TrustManager r5;
        java.lang.Throwable $r6;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        entermonitor class "Lcom/fsck/k9/mail/ssl/TrustManagerFactory$SecureX509TrustManager;";

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = <com.fsck.k9.mail.ssl.TrustManagerFactory$SecureX509TrustManager: java.util.Map mTrustManager>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

        $r3 = <com.fsck.k9.mail.ssl.TrustManagerFactory$SecureX509TrustManager: java.util.Map mTrustManager>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r5 = (com.fsck.k9.mail.ssl.TrustManagerFactory$SecureX509TrustManager) $r4;

     label2:
        exitmonitor class "Lcom/fsck/k9/mail/ssl/TrustManagerFactory$SecureX509TrustManager;";

        return r5;

     label3:
        r5 = new com.fsck.k9.mail.ssl.TrustManagerFactory$SecureX509TrustManager;

        specialinvoke r5.<com.fsck.k9.mail.ssl.TrustManagerFactory$SecureX509TrustManager: void <init>(java.lang.String,int)>($r0, $i0);

        $r3 = <com.fsck.k9.mail.ssl.TrustManagerFactory$SecureX509TrustManager: java.util.Map mTrustManager>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r5);

     label4:
        goto label2;

     label5:
        $r6 := @caughtexception;

        exitmonitor class "Lcom/fsck/k9/mail/ssl/TrustManagerFactory$SecureX509TrustManager;";

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
    public void checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String) throws java.security.cert.CertificateException
    {
        com.fsck.k9.mail.ssl.TrustManagerFactory$SecureX509TrustManager r0;
        java.security.cert.X509Certificate[] $r1;
        java.lang.String $r2;
        javax.net.ssl.X509TrustManager $r3;

        r0 := @this: com.fsck.k9.mail.ssl.TrustManagerFactory$SecureX509TrustManager;

        $r1 := @parameter0: java.security.cert.X509Certificate[];

        $r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <com.fsck.k9.mail.ssl.TrustManagerFactory: javax.net.ssl.X509TrustManager access$000()>();

        interfaceinvoke $r3.<javax.net.ssl.X509TrustManager: void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String)>($r1, $r2);

        return;
    }
    public void checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String) throws java.security.cert.CertificateException
    {
        com.fsck.k9.mail.ssl.TrustManagerFactory$SecureX509TrustManager r0;
        java.security.cert.X509Certificate[] $r1;
        java.lang.String $r2, $r9;
        java.security.cert.X509Certificate r3;
        int $i0;
        javax.net.ssl.X509TrustManager $r4;
        org.apache.http.conn.ssl.StrictHostnameVerifier $r5;
        java.security.cert.CertificateException r6;
        java.lang.Exception r7;
        com.fsck.k9.mail.ssl.LocalKeyStore $r8;
        boolean $z0;
        com.fsck.k9.mail.CertificateChainException $r10;
        javax.net.ssl.SSLException r11;

        r0 := @this: com.fsck.k9.mail.ssl.TrustManagerFactory$SecureX509TrustManager;

        $r1 := @parameter0: java.security.cert.X509Certificate[];

        $r2 := @parameter1: java.lang.String;

        r3 = $r1[0];

     label01:
        $r4 = staticinvoke <com.fsck.k9.mail.ssl.TrustManagerFactory: javax.net.ssl.X509TrustManager access$000()>();

        interfaceinvoke $r4.<javax.net.ssl.X509TrustManager: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)>($r1, $r2);

     label02:
        $r5 = new org.apache.http.conn.ssl.StrictHostnameVerifier;

     label03:
        specialinvoke $r5.<org.apache.http.conn.ssl.StrictHostnameVerifier: void <init>()>();

     label04:
        $r2 = r0.<com.fsck.k9.mail.ssl.TrustManagerFactory$SecureX509TrustManager: java.lang.String mHost>;

     label05:
        virtualinvoke $r5.<org.apache.http.conn.ssl.StrictHostnameVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>($r2, r3);

     label06:
        return;

     label07:
        r6 := @caughtexception;

        $r2 = virtualinvoke r6.<java.security.cert.CertificateException: java.lang.String getMessage()>();

        r7 = r6;

     label08:
        $r8 = staticinvoke <com.fsck.k9.mail.ssl.TrustManagerFactory: com.fsck.k9.mail.ssl.LocalKeyStore access$100()>();

        $r9 = r0.<com.fsck.k9.mail.ssl.TrustManagerFactory$SecureX509TrustManager: java.lang.String mHost>;

        $i0 = r0.<com.fsck.k9.mail.ssl.TrustManagerFactory$SecureX509TrustManager: int mPort>;

        $z0 = virtualinvoke $r8.<com.fsck.k9.mail.ssl.LocalKeyStore: boolean isValidCertificate(java.security.cert.Certificate,java.lang.String,int)>(r3, $r9, $i0);

        if $z0 != 0 goto label10;

        $r10 = new com.fsck.k9.mail.CertificateChainException;

        specialinvoke $r10.<com.fsck.k9.mail.CertificateChainException: void <init>(java.lang.String,java.security.cert.X509Certificate[],java.lang.Throwable)>($r2, $r1, r7);

        throw $r10;

     label09:
        r11 := @caughtexception;

        $r2 = virtualinvoke r11.<javax.net.ssl.SSLException: java.lang.String getMessage()>();

        r7 = r11;

        goto label08;

     label10:
        return;

        catch java.security.cert.CertificateException from label01 to label02 with label07;
        catch java.security.cert.CertificateException from label03 to label04 with label07;
        catch java.security.cert.CertificateException from label05 to label06 with label07;
        catch javax.net.ssl.SSLException from label01 to label02 with label09;
        catch javax.net.ssl.SSLException from label03 to label04 with label09;
        catch javax.net.ssl.SSLException from label05 to label06 with label09;
    }
    public java.security.cert.X509Certificate[] getAcceptedIssuers()
    {
        com.fsck.k9.mail.ssl.TrustManagerFactory$SecureX509TrustManager r0;
        javax.net.ssl.X509TrustManager $r1;
        java.security.cert.X509Certificate[] $r2;

        r0 := @this: com.fsck.k9.mail.ssl.TrustManagerFactory$SecureX509TrustManager;

        $r1 = staticinvoke <com.fsck.k9.mail.ssl.TrustManagerFactory: javax.net.ssl.X509TrustManager access$000()>();

        $r2 = interfaceinvoke $r1.<javax.net.ssl.X509TrustManager: java.security.cert.X509Certificate[] getAcceptedIssuers()>();

        return $r2;
    }
