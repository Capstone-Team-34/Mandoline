com.fsck.k9.mail.store.imap.SearchResponse extends java.lang.Object
private final java.util.List numbers
    private void <init>(java.util.List)
    {
        com.fsck.k9.mail.store.imap.SearchResponse r0;
        java.util.List r1;

        r0 := @this: com.fsck.k9.mail.store.imap.SearchResponse;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.fsck.k9.mail.store.imap.SearchResponse: java.util.List numbers> = r1;

        return;
    }
    public static com.fsck.k9.mail.store.imap.SearchResponse parse(java.util.List)
    {
        java.util.List r0;
        java.util.ArrayList r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.fsck.k9.mail.store.imap.ImapResponse r4;
        com.fsck.k9.mail.store.imap.SearchResponse $r5;

        r0 := @parameter0: java.util.List;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.fsck.k9.mail.store.imap.ImapResponse) $r3;

        staticinvoke <com.fsck.k9.mail.store.imap.SearchResponse: void parseSingleLine(com.fsck.k9.mail.store.imap.ImapResponse,java.util.List)>(r4, r1);

        goto label1;

     label2:
        $r5 = new com.fsck.k9.mail.store.imap.SearchResponse;

        specialinvoke $r5.<com.fsck.k9.mail.store.imap.SearchResponse: void <init>(java.util.List)>(r1);

        return $r5;
    }
    private static void parseSingleLine(com.fsck.k9.mail.store.imap.ImapResponse, java.util.List)
    {
        com.fsck.k9.mail.store.imap.ImapResponse $r0;
        java.util.List r1;
        java.lang.NumberFormatException r2;
        boolean $z0;
        int $i0, i1;
        java.lang.Object $r3;
        long $l2;
        java.lang.Long $r4;

        $r0 := @parameter0: com.fsck.k9.mail.store.imap.ImapResponse;

        r1 := @parameter1: java.util.List;

        $z0 = virtualinvoke $r0.<com.fsck.k9.mail.store.imap.ImapResponse: boolean isTagged()>();

        if $z0 != 0 goto label6;

        $i0 = virtualinvoke $r0.<com.fsck.k9.mail.store.imap.ImapResponse: int size()>();

        if $i0 < 2 goto label6;

        $r3 = virtualinvoke $r0.<com.fsck.k9.mail.store.imap.ImapResponse: java.lang.Object get(int)>(0);

        $z0 = staticinvoke <com.fsck.k9.mail.store.imap.ImapResponseParser: boolean equalsIgnoreCase(java.lang.Object,java.lang.String)>($r3, "SEARCH");

        if $z0 != 0 goto label1;

        return;

     label1:
        $i0 = virtualinvoke $r0.<com.fsck.k9.mail.store.imap.ImapResponse: int size()>();

        i1 = 1;

     label2:
        if i1 >= $i0 goto label6;

     label3:
        $l2 = virtualinvoke $r0.<com.fsck.k9.mail.store.imap.ImapResponse: long getLong(int)>(i1);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4);

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        r2 := @caughtexception;

     label6:
        return;

        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }
    public java.util.List getNumbers()
    {
        com.fsck.k9.mail.store.imap.SearchResponse r0;
        java.util.List r1;

        r0 := @this: com.fsck.k9.mail.store.imap.SearchResponse;

        r1 = r0.<com.fsck.k9.mail.store.imap.SearchResponse: java.util.List numbers>;

        return r1;
    }
