com.fsck.k9.mail.store.imap.ImapList extends java.util.ArrayList
private static final java.text.DateFormat BAD_DATE_TIME_FORMAT
private static final java.text.DateFormat BAD_DATE_TIME_FORMAT_2
private static final java.text.DateFormat BAD_DATE_TIME_FORMAT_3
private static final java.text.DateFormat DATE_FORMAT
private static final long serialVersionUID
    static void <clinit>()
    {
        java.text.SimpleDateFormat $r0;
        java.util.Locale $r1;

        $r0 = new java.text.SimpleDateFormat;

        $r1 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("dd-MMM-yyyy HH:mm:ss Z", $r1);

        <com.fsck.k9.mail.store.imap.ImapList: java.text.DateFormat DATE_FORMAT> = $r0;

        $r0 = new java.text.SimpleDateFormat;

        $r1 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("dd MMM yyyy HH:mm:ss Z", $r1);

        <com.fsck.k9.mail.store.imap.ImapList: java.text.DateFormat BAD_DATE_TIME_FORMAT> = $r0;

        $r0 = new java.text.SimpleDateFormat;

        $r1 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("E, dd MMM yyyy HH:mm:ss Z", $r1);

        <com.fsck.k9.mail.store.imap.ImapList: java.text.DateFormat BAD_DATE_TIME_FORMAT_2> = $r0;

        $r0 = new java.text.SimpleDateFormat;

        $r1 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("dd-MMM-yyyy HH:mm:ss", $r1);

        <com.fsck.k9.mail.store.imap.ImapList: java.text.DateFormat BAD_DATE_TIME_FORMAT_3> = $r0;

        return;
    }
    void <init>()
    {
        com.fsck.k9.mail.store.imap.ImapList r0;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapList;

        specialinvoke r0.<java.util.ArrayList: void <init>()>();

        return;
    }
    private java.util.Date getDate(java.lang.String) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.store.imap.ImapList r0;
        java.lang.String $r1;
        java.text.ParseException r2;
        java.util.Date $r3;
        com.fsck.k9.mail.MessagingException $r4;
        java.lang.StringBuilder $r5;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapList;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapList: java.util.Date parseDate(java.lang.String)>($r1);

     label2:
        return $r3;

     label3:
        r2 := @caughtexception;

        $r4 = new com.fsck.k9.mail.MessagingException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse IMAP datetime \'");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ");

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String,java.lang.Throwable)>($r1, r2);

        throw $r4;

        catch java.text.ParseException from label1 to label2 with label3;
    }
    private boolean inRange(int)
    {
        com.fsck.k9.mail.store.imap.ImapList r0;
        int $i0, $i1;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapList;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $i1 = virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapList: int size()>();

        if $i0 >= $i1 goto label1;

        return 1;

     label1:
        return 0;
    }
    private java.util.Date parseDate(java.lang.String) throws java.text.ParseException
    {
        com.fsck.k9.mail.store.imap.ImapList r0;
        java.lang.String $r1;
        java.lang.Exception r2, r3, r4;
        java.text.DateFormat $r5, $r6;
        java.util.Date $r7;
        java.lang.Throwable $r8, $r9, $r10, $r11;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapList;

        $r1 := @parameter0: java.lang.String;

        $r5 = <com.fsck.k9.mail.store.imap.ImapList: java.text.DateFormat DATE_FORMAT>;

     label01:
        entermonitor $r5;

     label02:
        $r6 = <com.fsck.k9.mail.store.imap.ImapList: java.text.DateFormat DATE_FORMAT>;

        $r7 = virtualinvoke $r6.<java.text.DateFormat: java.util.Date parse(java.lang.String)>($r1);

        exitmonitor $r5;

     label03:
        return $r7;

     label04:
        $r8 := @caughtexception;

        exitmonitor $r5;

     label05:
        throw $r8;

     label06:
        r2 := @caughtexception;

        $r5 = <com.fsck.k9.mail.store.imap.ImapList: java.text.DateFormat BAD_DATE_TIME_FORMAT>;

     label07:
        entermonitor $r5;

     label08:
        $r6 = <com.fsck.k9.mail.store.imap.ImapList: java.text.DateFormat BAD_DATE_TIME_FORMAT>;

        $r7 = virtualinvoke $r6.<java.text.DateFormat: java.util.Date parse(java.lang.String)>($r1);

        exitmonitor $r5;

     label09:
        return $r7;

     label10:
        $r9 := @caughtexception;

        exitmonitor $r5;

     label11:
        throw $r9;

     label12:
        r3 := @caughtexception;

        $r5 = <com.fsck.k9.mail.store.imap.ImapList: java.text.DateFormat BAD_DATE_TIME_FORMAT_2>;

     label13:
        entermonitor $r5;

     label14:
        $r6 = <com.fsck.k9.mail.store.imap.ImapList: java.text.DateFormat BAD_DATE_TIME_FORMAT_2>;

        $r7 = virtualinvoke $r6.<java.text.DateFormat: java.util.Date parse(java.lang.String)>($r1);

        exitmonitor $r5;

     label15:
        return $r7;

     label16:
        $r10 := @caughtexception;

        exitmonitor $r5;

     label17:
        throw $r10;

     label18:
        r4 := @caughtexception;

        $r5 = <com.fsck.k9.mail.store.imap.ImapList: java.text.DateFormat BAD_DATE_TIME_FORMAT_3>;

        entermonitor $r5;

     label19:
        $r6 = <com.fsck.k9.mail.store.imap.ImapList: java.text.DateFormat BAD_DATE_TIME_FORMAT_3>;

        $r7 = virtualinvoke $r6.<java.text.DateFormat: java.util.Date parse(java.lang.String)>($r1);

        exitmonitor $r5;

     label20:
        return $r7;

     label21:
        $r11 := @caughtexception;

        exitmonitor $r5;

     label22:
        throw $r11;

        catch java.lang.Exception from label01 to label02 with label06;
        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Exception from label05 to label06 with label06;
        catch java.lang.Exception from label07 to label08 with label12;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Exception from label11 to label12 with label12;
        catch java.lang.Exception from label13 to label14 with label18;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
        catch java.lang.Exception from label17 to label18 with label18;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
    }
    public boolean containsKey(java.lang.String)
    {
        com.fsck.k9.mail.store.imap.ImapList r0;
        java.lang.String $r1;
        int i0, i1;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapList;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        return 0;

     label1:
        i1 = 0;

        i0 = virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapList: int size()>();

        i0 = i0 + -1;

     label2:
        if i1 >= i0 goto label4;

        $r2 = virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapList: java.lang.Object get(int)>(i1);

        $z0 = staticinvoke <com.fsck.k9.mail.store.imap.ImapResponseParser: boolean equalsIgnoreCase(java.lang.Object,java.lang.String)>($r2, $r1);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;
    }
    public java.util.Date getDate(int) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.store.imap.ImapList r0;
        int $i0;
        java.lang.String $r1;
        java.util.Date $r2;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapList;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapList: java.lang.String getString(int)>($i0);

        $r2 = specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapList: java.util.Date getDate(java.lang.String)>($r1);

        return $r2;
    }
    public int getKeyIndex(java.lang.String)
    {
        com.fsck.k9.mail.store.imap.ImapList r0;
        java.lang.String $r1;
        int i0, i1;
        java.lang.Object $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapList;

        $r1 := @parameter0: java.lang.String;

        i1 = 0;

        i0 = virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapList: int size()>();

        i0 = i0 + -1;

     label1:
        if i1 >= i0 goto label3;

        $r2 = virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapList: java.lang.Object get(int)>(i1);

        $z0 = staticinvoke <com.fsck.k9.mail.store.imap.ImapResponseParser: boolean equalsIgnoreCase(java.lang.Object,java.lang.String)>($r2, $r1);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("getKeyIndex() only works for keys that are in the collection.");

        throw $r3;
    }
    public java.util.Date getKeyedDate(java.lang.String) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.store.imap.ImapList r0;
        java.lang.String $r1;
        java.util.Date $r2;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapList;

        $r1 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapList: java.lang.String getKeyedString(java.lang.String)>($r1);

        $r2 = specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapList: java.util.Date getDate(java.lang.String)>($r1);

        return $r2;
    }
    public com.fsck.k9.mail.store.imap.ImapList getKeyedList(java.lang.String)
    {
        com.fsck.k9.mail.store.imap.ImapList r0;
        java.lang.String $r1;
        java.lang.Object $r2;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapList;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapList: java.lang.Object getKeyedValue(java.lang.String)>($r1);

        r0 = (com.fsck.k9.mail.store.imap.ImapList) $r2;

        return r0;
    }
    public int getKeyedNumber(java.lang.String)
    {
        com.fsck.k9.mail.store.imap.ImapList r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapList;

        $r1 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapList: java.lang.String getKeyedString(java.lang.String)>($r1);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        return $i0;
    }
    public java.lang.String getKeyedString(java.lang.String)
    {
        com.fsck.k9.mail.store.imap.ImapList r0;
        java.lang.String $r1;
        java.lang.Object $r2;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapList;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapList: java.lang.Object getKeyedValue(java.lang.String)>($r1);

        $r1 = (java.lang.String) $r2;

        return $r1;
    }
    public java.lang.Object getKeyedValue(java.lang.String)
    {
        com.fsck.k9.mail.store.imap.ImapList r0;
        java.lang.String $r1;
        int i0, i1;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapList;

        $r1 := @parameter0: java.lang.String;

        i1 = 0;

        i0 = virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapList: int size()>();

        i0 = i0 + -1;

     label1:
        if i1 >= i0 goto label3;

        $r2 = virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapList: java.lang.Object get(int)>(i1);

        $z0 = staticinvoke <com.fsck.k9.mail.store.imap.ImapResponseParser: boolean equalsIgnoreCase(java.lang.Object,java.lang.String)>($r2, $r1);

        if $z0 == 0 goto label2;

        i1 = i1 + 1;

        $r2 = virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapList: java.lang.Object get(int)>(i1);

        return $r2;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }
    public com.fsck.k9.mail.store.imap.ImapList getList(int)
    {
        com.fsck.k9.mail.store.imap.ImapList r0;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapList;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapList: java.lang.Object get(int)>($i0);

        r0 = (com.fsck.k9.mail.store.imap.ImapList) $r1;

        return r0;
    }
    public long getLong(int)
    {
        com.fsck.k9.mail.store.imap.ImapList r0;
        int $i0;
        java.lang.String $r1;
        long $l1;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapList;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapList: java.lang.String getString(int)>($i0);

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r1);

        return $l1;
    }
    public int getNumber(int)
    {
        com.fsck.k9.mail.store.imap.ImapList r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapList;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapList: java.lang.String getString(int)>($i0);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        return $i0;
    }
    public java.lang.Object getObject(int)
    {
        com.fsck.k9.mail.store.imap.ImapList r0;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapList;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapList: java.lang.Object get(int)>($i0);

        return $r1;
    }
    public java.lang.String getString(int)
    {
        com.fsck.k9.mail.store.imap.ImapList r0;
        int $i0;
        java.lang.Object $r1;
        java.lang.String $r2;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapList;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapList: java.lang.Object get(int)>($i0);

        $r2 = (java.lang.String) $r1;

        return $r2;
    }
    public boolean isList(int)
    {
        com.fsck.k9.mail.store.imap.ImapList r0;
        int $i0;
        boolean $z0;
        java.lang.Object $r1;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapList;

        $i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapList: boolean inRange(int)>($i0);

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapList: java.lang.Object get(int)>($i0);

        $z0 = $r1 instanceof com.fsck.k9.mail.store.imap.ImapList;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean isString(int)
    {
        com.fsck.k9.mail.store.imap.ImapList r0;
        int $i0;
        boolean $z0;
        java.lang.Object $r1;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapList;

        $i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapList: boolean inRange(int)>($i0);

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.fsck.k9.mail.store.imap.ImapList: java.lang.Object get(int)>($i0);

        $z0 = $r1 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
