com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable extends java.lang.Object implements java.lang.Runnable com.fsck.k9.mail.store.imap.UntaggedHandler
private int delayTime
private int idleFailureCount
private boolean needsPoll
final com.fsck.k9.mail.store.imap.ImapFolderPusher this$0
    private void <init>(com.fsck.k9.mail.store.imap.ImapFolderPusher)
    {
        com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable r0;
        com.fsck.k9.mail.store.imap.ImapFolderPusher $r1;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable;

        $r1 := @parameter0: com.fsck.k9.mail.store.imap.ImapFolderPusher;

        r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: int delayTime> = 5000;

        r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: int idleFailureCount> = 0;

        r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: boolean needsPoll> = 0;

        return;
    }
    void <init>(com.fsck.k9.mail.store.imap.ImapFolderPusher, com.fsck.k9.mail.store.imap.ImapFolderPusher$1)
    {
        com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable r0;
        com.fsck.k9.mail.store.imap.ImapFolderPusher $r1;
        com.fsck.k9.mail.store.imap.ImapFolderPusher$1 $r2;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable;

        $r1 := @parameter0: com.fsck.k9.mail.store.imap.ImapFolderPusher;

        $r2 := @parameter1: com.fsck.k9.mail.store.imap.ImapFolderPusher$1;

        specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: void <init>(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r1);

        return;
    }
    private void checkConnectionIdleCapable(com.fsck.k9.mail.store.imap.ImapConnection) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable r0;
        com.fsck.k9.mail.store.imap.ImapConnection $r1;
        boolean $z0;
        com.fsck.k9.mail.store.imap.ImapFolderPusher $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        com.fsck.k9.mail.PushReceiver $r5;
        com.fsck.k9.mail.MessagingException $r6;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable;

        $r1 := @parameter0: com.fsck.k9.mail.store.imap.ImapConnection;

        $z0 = virtualinvoke $r1.<com.fsck.k9.mail.store.imap.ImapConnection: boolean isIdleCapable()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: boolean access$302(com.fsck.k9.mail.store.imap.ImapFolderPusher,boolean)>($r2, 1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IMAP server is not IDLE capable: ");

        $r4 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r5 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.PushReceiver access$400(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r2);

        interfaceinvoke $r5.<com.fsck.k9.mail.PushReceiver: void pushError(java.lang.String,java.lang.Exception)>($r4, null);

        $r6 = new com.fsck.k9.mail.MessagingException;

        specialinvoke $r6.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String)>($r4);

        throw $r6;

     label1:
        return;
    }
    private void checkConnectionNotNull(com.fsck.k9.mail.store.imap.ImapConnection) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable r0;
        com.fsck.k9.mail.store.imap.ImapConnection $r1;
        com.fsck.k9.mail.PushReceiver $r2;
        com.fsck.k9.mail.store.imap.ImapFolderPusher $r3;
        com.fsck.k9.mail.MessagingException $r4;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable;

        $r1 := @parameter0: com.fsck.k9.mail.store.imap.ImapConnection;

        if $r1 != null goto label1;

        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r2 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.PushReceiver access$400(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r3);

        interfaceinvoke $r2.<com.fsck.k9.mail.PushReceiver: void pushError(java.lang.String,java.lang.Exception)>("Could not establish connection for IDLE", null);

        $r4 = new com.fsck.k9.mail.MessagingException;

        specialinvoke $r4.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String)>("Could not establish connection for IDLE");

        throw $r4;

     label1:
        return;
    }
    private void clearStoredUntaggedResponses()
    {
        com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable r0;
        com.fsck.k9.mail.store.imap.ImapFolderPusher $r1;
        java.util.List $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable;

        $r1 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r2 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: java.util.List access$700(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r1);

        entermonitor $r2;

     label1:
        $r1 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r3 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: java.util.List access$700(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r1);

        interfaceinvoke $r3.<java.util.List: void clear()>();

        exitmonitor $r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
    private java.util.List getAndClearStoredUntaggedResponses()
    {
        com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable r0;
        com.fsck.k9.mail.store.imap.ImapFolderPusher $r1;
        java.util.List $r2, $r3;
        boolean $z0;
        java.util.ArrayList r4;
        java.lang.Throwable $r5;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable;

        $r1 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r2 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: java.util.List access$700(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r1);

        entermonitor $r2;

     label1:
        $r1 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r3 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: java.util.List access$700(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r1);

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        $r3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        exitmonitor $r2;

     label2:
        return $r3;

     label3:
        r4 = new java.util.ArrayList;

        $r1 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r3 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: java.util.List access$700(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r1);

        specialinvoke r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        $r1 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r3 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: java.util.List access$700(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r1);

        interfaceinvoke $r3.<java.util.List: void clear()>();

        exitmonitor $r2;

     label4:
        return r4;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }
    private long getNewUidNext() throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable r0;
        com.fsck.k9.mail.store.imap.ImapFolderPusher $r1;
        long l0, l2;
        byte $b1;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable;

        $r1 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        l0 = $r1.<com.fsck.k9.mail.store.imap.ImapFolderPusher: long uidNext>;

        $b1 = l0 cmp -1L;

        if $b1 == 0 goto label1;

        return l0;

     label1:
        $z0 = staticinvoke <com.fsck.k9.mail.K9MailLib: boolean isDebug()>();

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("k9", "uidNext is -1, using search to find highest UID");

     label2:
        $r1 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        l0 = virtualinvoke $r1.<com.fsck.k9.mail.store.imap.ImapFolderPusher: long getHighestUid()>();

        $b1 = l0 cmp -1L;

        if $b1 == 0 goto label4;

        l2 = l0 + 1L;

        $z0 = staticinvoke <com.fsck.k9.mail.K9MailLib: boolean isDebug()>();

        if $z0 == 0 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("highest UID = ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", set newUidNext to ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("k9", $r3);

     label3:
        return l2;

     label4:
        return -1L;
    }
    private long getOldUidNext()
    {
        com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable r0;
        java.lang.Exception r1;
        long l0;
        com.fsck.k9.mail.store.imap.ImapFolderPusher $r2;
        com.fsck.k9.mail.PushReceiver $r3;
        java.lang.String $r4;
        com.fsck.k9.mail.store.imap.ImapPushState $r5;
        boolean $z0;
        java.lang.StringBuilder $r6;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable;

        l0 = -1L;

     label1:
        $r2 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r3 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.PushReceiver access$400(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r2);

        $r2 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r4 = virtualinvoke $r2.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.lang.String getName()>();

        $r4 = interfaceinvoke $r3.<com.fsck.k9.mail.PushReceiver: java.lang.String getPushState(java.lang.String)>($r4);

        $r5 = staticinvoke <com.fsck.k9.mail.store.imap.ImapPushState: com.fsck.k9.mail.store.imap.ImapPushState parse(java.lang.String)>($r4);

        l0 = $r5.<com.fsck.k9.mail.store.imap.ImapPushState: long uidNext>;

        $z0 = staticinvoke <com.fsck.k9.mail.K9MailLib: boolean isDebug()>();

     label2:
        if $z0 == 0 goto label6;

        $r6 = new java.lang.StringBuilder;

     label3:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got oldUidNext ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r2 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r4 = virtualinvoke $r2.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.lang.String getLogId()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("k9", $r4);

     label4:
        return l0;

     label5:
        r1 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get oldUidNext for ");

        $r2 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r4 = virtualinvoke $r2.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.lang.String getLogId()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("k9", $r4, r1);

     label6:
        return l0;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
    private long getStartUid(long, long)
    {
        com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable r0;
        long $l0, $l1, l2, $l4;
        com.fsck.k9.mail.store.imap.ImapFolderPusher $r1;
        com.fsck.k9.mail.store.imap.ImapStore $r2;
        com.fsck.k9.mail.store.StoreConfig $r3;
        int $i3;
        byte $b5;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        l2 = $l0;

        $r1 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r2 = $r1.<com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.store.imap.ImapStore store>;

        $r3 = virtualinvoke $r2.<com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.store.StoreConfig getStoreConfig()>();

        $i3 = interfaceinvoke $r3.<com.fsck.k9.mail.store.StoreConfig: int getDisplayCount()>();

        $l4 = (long) $i3;

        $l4 = $l1 - $l4;

        $b5 = $l0 cmp $l4;

        if $b5 >= 0 goto label1;

        $l0 = (long) $i3;

        l2 = $l1 - $l0;

     label1:
        $b5 = l2 cmp 1L;

        if $b5 >= 0 goto label2;

        return 1L;

     label2:
        return l2;
    }
    private void notifyMessagesArrived(long, long)
    {
        com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable r0;
        long $l0, $l1, $l3;
        int i2;
        com.fsck.k9.mail.store.imap.ImapMessage r1;
        java.util.ArrayList r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        com.fsck.k9.mail.store.imap.ImapFolderPusher $r4;
        java.lang.String $r5;
        byte $b4;
        com.fsck.k9.mail.PushReceiver $r6;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $z0 = staticinvoke <com.fsck.k9.mail.K9MailLib: boolean isDebug()>();

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Needs sync from uid ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r4 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r5 = virtualinvoke $r4.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.lang.String getLogId()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("k9", $r5);

     label1:
        $l3 = $l1 - $l0;

        i2 = (int) $l3;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>(int)>(i2);

     label2:
        $b4 = $l0 cmp $l1;

        if $b4 >= 0 goto label3;

        r1 = new com.fsck.k9.mail.store.imap.ImapMessage;

        $r5 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        $r4 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        specialinvoke r1.<com.fsck.k9.mail.store.imap.ImapMessage: void <init>(java.lang.String,com.fsck.k9.mail.Folder)>($r5, $r4);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        $l0 = $l0 + 1L;

        goto label2;

     label3:
        $r4 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r6 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.PushReceiver access$400(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r4);

        $r4 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        interfaceinvoke $r6.<com.fsck.k9.mail.PushReceiver: void messagesArrived(com.fsck.k9.mail.Folder,java.util.List)>($r4, r2);

        return;
    }
    private boolean openConnectionIfNecessary() throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable r0;
        com.fsck.k9.mail.store.imap.ImapConnection r1, r2;
        com.fsck.k9.mail.store.imap.ImapFolderPusher $r3;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable;

        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        r2 = $r3.<com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.store.imap.ImapConnection connection>;

        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        virtualinvoke $r3.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.util.List internalOpen(int)>(1);

        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        r1 = $r3.<com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.store.imap.ImapConnection connection>;

        specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: void checkConnectionNotNull(com.fsck.k9.mail.store.imap.ImapConnection)>(r1);

        specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: void checkConnectionIdleCapable(com.fsck.k9.mail.store.imap.ImapConnection)>(r1);

        if r1 == r2 goto label1;

        return 1;

     label1:
        return 0;
    }
    private void prepareForIdle()
    {
        com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable r0;
        com.fsck.k9.mail.store.imap.ImapFolderPusher $r1;
        com.fsck.k9.mail.PushReceiver $r2;
        java.lang.String $r3;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable;

        $r1 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r2 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.PushReceiver access$400(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r1);

        $r1 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r3 = virtualinvoke $r1.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.lang.String getName()>();

        interfaceinvoke $r2.<com.fsck.k9.mail.PushReceiver: void setPushActive(java.lang.String,boolean)>($r3, 1);

        $r1 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: boolean access$502(com.fsck.k9.mail.store.imap.ImapFolderPusher,boolean)>($r1, 1);

        return;
    }
    private void processStoredUntaggedResponses() throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable r0;
        java.util.List $r1;
        boolean $z0;
        java.lang.StringBuilder $r2;
        int $i0;
        com.fsck.k9.mail.store.imap.ImapFolderPusher $r3;
        java.lang.String $r4;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable;

     label1:
        $r1 = specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: java.util.List getAndClearStoredUntaggedResponses()>();

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        return;

     label2:
        $z0 = staticinvoke <com.fsck.k9.mail.K9MailLib: boolean isDebug()>();

        if $z0 == 0 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Processing ");

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" untagged responses from previous commands for ");

        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r4 = virtualinvoke $r3.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.lang.String getLogId()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("k9", $r4);

     label3:
        specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: void processUntaggedResponses(java.util.List)>($r1);

        goto label1;
    }
    private int processUntaggedResponse(long, com.fsck.k9.mail.store.imap.ImapResponse, java.util.List, java.util.List)
    {
        com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable r0;
        long $l0, $l3, $l5;
        com.fsck.k9.mail.store.imap.ImapResponse $r1;
        java.util.List r2, r3;
        java.lang.Exception r4;
        java.util.ArrayList r5;
        com.fsck.k9.mail.store.imap.ImapFolderPusher $r6;
        byte b1, $b4;
        java.lang.String $r7, $r14;
        int $i2;
        java.lang.Object $r8;
        boolean $z0;
        java.lang.StringBuilder $r9;
        java.lang.Long $r10;
        java.util.Iterator $r11;
        java.util.Map $r12;
        java.util.Set $r13;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable;

        $l0 := @parameter0: long;

        $r1 := @parameter1: com.fsck.k9.mail.store.imap.ImapResponse;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: java.util.List;

        $r6 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: void access$800(com.fsck.k9.mail.store.imap.ImapFolderPusher,com.fsck.k9.mail.store.imap.ImapResponse)>($r6, $r1);

        b1 = 0;

        $r7 = virtualinvoke $r1.<com.fsck.k9.mail.store.imap.ImapResponse: java.lang.String getTag()>();

        if $r7 != null goto label51;

        $i2 = virtualinvoke $r1.<com.fsck.k9.mail.store.imap.ImapResponse: int size()>();

        if $i2 <= 1 goto label51;

     label01:
        $r8 = virtualinvoke $r1.<com.fsck.k9.mail.store.imap.ImapResponse: java.lang.Object get(int)>(1);

        $z0 = staticinvoke <com.fsck.k9.mail.store.imap.ImapResponseParser: boolean equalsIgnoreCase(java.lang.Object,java.lang.String)>($r8, "FETCH");

     label02:
        if $z0 == 0 goto label09;

        $r9 = new java.lang.StringBuilder;

     label03:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got FETCH ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("k9", $r7);

        $l3 = virtualinvoke $r1.<com.fsck.k9.mail.store.imap.ImapResponse: long getLong(int)>(0);

        $z0 = staticinvoke <com.fsck.k9.mail.K9MailLib: boolean isDebug()>();

     label04:
        if $z0 == 0 goto label06;

        $r9 = new java.lang.StringBuilder;

     label05:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got untagged FETCH for msgseq ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r6 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r7 = virtualinvoke $r6.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.lang.String getLogId()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("k9", $r7);

     label06:
        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $z0 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>($r10);

     label07:
        if $z0 != 0 goto label09;

     label08:
        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r10);

     label09:
        $z0 = staticinvoke <com.fsck.k9.mail.store.imap.ImapResponseParser: boolean equalsIgnoreCase(java.lang.Object,java.lang.String)>($r8, "EXPUNGE");

     label10:
        if $z0 == 0 goto label51;

     label11:
        $l3 = virtualinvoke $r1.<com.fsck.k9.mail.store.imap.ImapResponse: long getLong(int)>(0);

     label12:
        $b4 = $l3 cmp $l0;

        if $b4 > 0 goto label13;

        b1 = -1;

     label13:
        $z0 = staticinvoke <com.fsck.k9.mail.K9MailLib: boolean isDebug()>();

     label14:
        if $z0 == 0 goto label16;

        $r9 = new java.lang.StringBuilder;

     label15:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got untagged EXPUNGE for msgseq ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r6 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r7 = virtualinvoke $r6.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.lang.String getLogId()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("k9", $r7);

     label16:
        r5 = new java.util.ArrayList;

     label17:
        specialinvoke r5.<java.util.ArrayList: void <init>()>();

        $r11 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label18:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

     label19:
        if $z0 == 0 goto label27;

     label20:
        $r8 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (java.lang.Long) $r8;

        $l0 = virtualinvoke $r10.<java.lang.Long: long longValue()>();

     label21:
        $b4 = $l0 cmp $l3;

        if $b4 < 0 goto label18;

     label22:
        interfaceinvoke $r11.<java.util.Iterator: void remove()>();

     label23:
        $b4 = $l0 cmp $l3;

        if $b4 <= 0 goto label18;

     label24:
        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r10);

     label25:
        goto label18;

     label26:
        r4 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not handle untagged FETCH for ");

        $r6 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r7 = virtualinvoke $r6.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.lang.String getLogId()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("k9", $r7, r4);

        return b1;

     label27:
        interfaceinvoke r2.<java.util.List: boolean addAll(java.util.Collection)>(r5);

     label28:
        r5 = new java.util.ArrayList;

     label29:
        $r6 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r12 = $r6.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.util.Map msgSeqUidMap>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Set keySet()>();

        specialinvoke r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r13);

        staticinvoke <java.util.Collections: void sort(java.util.List)>(r5);

        $r11 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label30:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

     label31:
        if $z0 == 0 goto label52;

     label32:
        $r8 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (java.lang.Long) $r8;

        $l0 = virtualinvoke $r10.<java.lang.Long: long longValue()>();

        $z0 = staticinvoke <com.fsck.k9.mail.K9MailLib: boolean isDebug()>();

     label33:
        if $z0 == 0 goto label35;

        $r9 = new java.lang.StringBuilder;

     label34:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Comparing EXPUNGEd msgSeq ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("k9", $r7);

     label35:
        $b4 = $l0 cmp $l3;

        if $b4 != 0 goto label41;

     label36:
        $r6 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r12 = $r6.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.util.Map msgSeqUidMap>;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r8 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        $r7 = (java.lang.String) $r8;

        $z0 = staticinvoke <com.fsck.k9.mail.K9MailLib: boolean isDebug()>();

     label37:
        if $z0 == 0 goto label39;

        $r9 = new java.lang.StringBuilder;

     label38:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scheduling removal of UID ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because msgSeq ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was expunged");

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("k9", $r14);

     label39:
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r6 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r12 = $r6.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.util.Map msgSeqUidMap>;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        interfaceinvoke $r12.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r10);

     label40:
        goto label30;

     label41:
        $b4 = $l0 cmp $l3;

        if $b4 <= 0 goto label30;

     label42:
        $r6 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r12 = $r6.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.util.Map msgSeqUidMap>;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r8 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        $r7 = (java.lang.String) $r8;

        $z0 = staticinvoke <com.fsck.k9.mail.K9MailLib: boolean isDebug()>();

     label43:
        if $z0 == 0 goto label47;

        $r9 = new java.lang.StringBuilder;

     label44:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reducing msgSeq for UID ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

     label45:
        $l5 = $l0 - 1L;

     label46:
        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("k9", $r14);

     label47:
        $r6 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r12 = $r6.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.util.Map msgSeqUidMap>;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        interfaceinvoke $r12.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r10);

        $r6 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r12 = $r6.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.util.Map msgSeqUidMap>;

     label48:
        $l0 = $l0 - 1L;

     label49:
        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r7);

     label50:
        goto label30;

     label51:
        return 0;

     label52:
        return b1;

        catch java.lang.Exception from label01 to label02 with label26;
        catch java.lang.Exception from label03 to label04 with label26;
        catch java.lang.Exception from label05 to label07 with label26;
        catch java.lang.Exception from label08 to label10 with label26;
        catch java.lang.Exception from label11 to label12 with label26;
        catch java.lang.Exception from label13 to label14 with label26;
        catch java.lang.Exception from label15 to label16 with label26;
        catch java.lang.Exception from label17 to label19 with label26;
        catch java.lang.Exception from label20 to label21 with label26;
        catch java.lang.Exception from label22 to label23 with label26;
        catch java.lang.Exception from label24 to label25 with label26;
        catch java.lang.Exception from label27 to label28 with label26;
        catch java.lang.Exception from label29 to label31 with label26;
        catch java.lang.Exception from label32 to label33 with label26;
        catch java.lang.Exception from label34 to label35 with label26;
        catch java.lang.Exception from label36 to label37 with label26;
        catch java.lang.Exception from label38 to label40 with label26;
        catch java.lang.Exception from label42 to label43 with label26;
        catch java.lang.Exception from label44 to label45 with label26;
        catch java.lang.Exception from label46 to label48 with label26;
        catch java.lang.Exception from label49 to label50 with label26;
    }
    private void processUntaggedResponses(java.util.List) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable r0;
        java.util.List r1;
        java.util.ArrayList r2;
        java.util.LinkedList r3;
        boolean z0, $z1;
        com.fsck.k9.mail.store.imap.ImapFolderPusher $r4;
        int i0, $i2;
        java.util.Iterator $r5;
        java.lang.Object $r6;
        com.fsck.k9.mail.store.imap.ImapResponse r7;
        long $l1;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable;

        r1 := @parameter0: java.util.List;

        z0 = 0;

        $r4 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        i0 = $r4.<com.fsck.k9.mail.store.imap.ImapFolderPusher: int messageCount>;

        if i0 != -1 goto label1;

        z0 = 1;

     label1:
        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        r3 = new java.util.LinkedList;

        specialinvoke r3.<java.util.LinkedList: void <init>()>();

        $r5 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.fsck.k9.mail.store.imap.ImapResponse) $r6;

        $l1 = (long) i0;

        $i2 = specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: int processUntaggedResponse(long,com.fsck.k9.mail.store.imap.ImapResponse,java.util.List,java.util.List)>($l1, r7, r2, r3);

        i0 = i0 + $i2;

        goto label2;

     label3:
        if z0 != 0 goto label5;

        if i0 >= 0 goto label4;

        i0 = 0;

     label4:
        $r4 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $i2 = $r4.<com.fsck.k9.mail.store.imap.ImapFolderPusher: int messageCount>;

        if $i2 <= i0 goto label5;

        $r4 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        i0 = $r4.<com.fsck.k9.mail.store.imap.ImapFolderPusher: int messageCount>;

        specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: void syncMessages(int)>(i0);

     label5:
        z0 = staticinvoke <com.fsck.k9.mail.K9MailLib: boolean isDebug()>();

        if z0 == 0 goto label6;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UIDs for messages needing flag sync are ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  for ");

        $r4 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r9 = virtualinvoke $r4.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.lang.String getLogId()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("k9", $r9);

     label6:
        z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if z0 != 0 goto label7;

        specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: void syncMessages(java.util.List)>(r2);

     label7:
        z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();

        if z0 != 0 goto label8;

        specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: void removeMessages(java.util.List)>(r3);

     label8:
        return;
    }
    private void reacquireWakeLockAndCleanUp()
    {
        com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable r0;
        java.lang.Exception r1;
        com.fsck.k9.mail.store.imap.ImapFolderPusher $r2;
        com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock $r3;
        com.fsck.k9.mail.PushReceiver $r4;
        java.lang.String $r5;
        com.fsck.k9.mail.store.imap.ImapConnection $r6;
        java.lang.StringBuilder $r7;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable;

        $r2 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r3 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock access$200(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r2);

        virtualinvoke $r3.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock: void acquire(long)>(60000L);

        specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: void clearStoredUntaggedResponses()>();

        $r2 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: boolean access$502(com.fsck.k9.mail.store.imap.ImapFolderPusher,boolean)>($r2, 0);

        $r2 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r4 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.PushReceiver access$400(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r2);

        $r2 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r5 = virtualinvoke $r2.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.lang.String getName()>();

        interfaceinvoke $r4.<com.fsck.k9.mail.PushReceiver: void setPushActive(java.lang.String,boolean)>($r5, 0);

     label1:
        $r2 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r6 = $r2.<com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.store.imap.ImapConnection connection>;

        virtualinvoke $r6.<com.fsck.k9.mail.store.imap.ImapConnection: void close()>();

     label2:
        $r2 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r2.<com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.store.imap.ImapConnection connection> = null;

        return;

     label3:
        r1 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got exception while closing for exception for ");

        $r2 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r5 = virtualinvoke $r2.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.lang.String getLogId()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("k9", $r5, r1);

        goto label2;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    private void removeMessages(java.util.List)
    {
        com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable r0;
        java.util.List r1, $r7;
        java.lang.Exception r2;
        com.fsck.k9.mail.MessagingException r3;
        com.fsck.k9.mail.store.imap.ImapMessage r4;
        java.util.ArrayList r5;
        int $i0;
        com.fsck.k9.mail.store.imap.ImapFolderPusher $r6;
        java.util.Iterator $r8;
        boolean $z0;
        java.lang.Object $r9;
        com.fsck.k9.mail.Message r10;
        java.util.Map $r11;
        java.lang.String $r12, $r14;
        java.lang.StringBuilder $r13;
        com.fsck.k9.mail.Flag $r15;
        com.fsck.k9.mail.PushReceiver $r16;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable;

        r1 := @parameter0: java.util.List;

        r5 = new java.util.ArrayList;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        specialinvoke r5.<java.util.ArrayList: void <init>(int)>($i0);

     label01:
        $r6 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r7 = virtualinvoke $r6.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.util.List getMessagesFromUids(java.util.List)>(r1);

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

     label03:
        if $z0 == 0 goto label09;

     label04:
        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.fsck.k9.mail.Message) $r9;

        r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: boolean needsPoll> = 1;

        $r6 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r11 = $r6.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.util.Map msgSeqUidMap>;

        interfaceinvoke $r11.<java.util.Map: void clear()>();

        $r12 = virtualinvoke r10.<com.fsck.k9.mail.Message: java.lang.String getUid()>();

     label05:
        $r13 = new java.lang.StringBuilder;

     label06:
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Message with UID ");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" still exists on server, not expunging");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("k9", $r14);

        interfaceinvoke r1.<java.util.List: boolean remove(java.lang.Object)>($r12);

     label07:
        goto label02;

     label08:
        r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("k9", "Cannot remove EXPUNGEd messages", r2);

        return;

     label09:
        $r8 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

     label11:
        if $z0 == 0 goto label22;

     label12:
        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.lang.String) $r9;

     label13:
        r4 = new com.fsck.k9.mail.store.imap.ImapMessage;

     label14:
        $r6 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        specialinvoke r4.<com.fsck.k9.mail.store.imap.ImapMessage: void <init>(java.lang.String,com.fsck.k9.mail.Folder)>($r12, $r6);

     label15:
        $r15 = <com.fsck.k9.mail.Flag: com.fsck.k9.mail.Flag DELETED>;

     label16:
        virtualinvoke r4.<com.fsck.k9.mail.store.imap.ImapMessage: void setFlagInternal(com.fsck.k9.mail.Flag,boolean)>($r15, 1);

     label17:
        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r4);

     label18:
        goto label10;

     label19:
        r3 := @caughtexception;

        $r13 = new java.lang.StringBuilder;

     label20:
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to set DELETED flag on message ");

        $r12 = virtualinvoke r4.<com.fsck.k9.mail.store.imap.ImapMessage: java.lang.String getUid()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("k9", $r12);

     label21:
        goto label17;

     label22:
        $r6 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r16 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.PushReceiver access$400(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r6);

        $r6 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        interfaceinvoke $r16.<com.fsck.k9.mail.PushReceiver: void messagesRemoved(com.fsck.k9.mail.Folder,java.util.List)>($r6, r5);

     label23:
        return;

        catch java.lang.Exception from label01 to label03 with label08;
        catch java.lang.Exception from label04 to label05 with label08;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Exception from label09 to label11 with label08;
        catch java.lang.Exception from label12 to label13 with label08;
        catch java.lang.Exception from label14 to label15 with label08;
        catch com.fsck.k9.mail.MessagingException from label16 to label17 with label19;
        catch java.lang.Exception from label16 to label17 with label08;
        catch java.lang.Exception from label17 to label18 with label08;
        catch java.lang.Exception from label20 to label21 with label08;
        catch java.lang.Exception from label22 to label23 with label08;
    }
    private void returnFromIdle()
    {
        com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable r0;
        com.fsck.k9.mail.store.imap.ImapFolderPusher $r1;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable;

        $r1 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: boolean access$502(com.fsck.k9.mail.store.imap.ImapFolderPusher,boolean)>($r1, 0);

        r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: int delayTime> = 5000;

        r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: int idleFailureCount> = 0;

        return;
    }
    private void sendIdle(com.fsck.k9.mail.store.imap.ImapConnection) throws com.fsck.k9.mail.MessagingException, java.io.IOException
    {
        com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable r0;
        com.fsck.k9.mail.store.imap.ImapConnection $r1;
        java.io.IOException r2;
        java.lang.String $r3;
        java.util.List $r4;
        com.fsck.k9.mail.store.imap.ImapFolderPusher $r5;
        com.fsck.k9.mail.store.imap.ImapFolderPusher$IdleStopper $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable;

        $r1 := @parameter0: com.fsck.k9.mail.store.imap.ImapConnection;

        $r3 = virtualinvoke $r1.<com.fsck.k9.mail.store.imap.ImapConnection: java.lang.String sendCommand(java.lang.String,boolean)>("IDLE", 0);

     label1:
        $r4 = virtualinvoke $r1.<com.fsck.k9.mail.store.imap.ImapConnection: java.util.List readStatusResponse(java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.UntaggedHandler)>($r3, "IDLE", r0);

     label2:
        $r5 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

     label3:
        $r6 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.store.imap.ImapFolderPusher$IdleStopper access$600(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r5);

        virtualinvoke $r6.<com.fsck.k9.mail.store.imap.ImapFolderPusher$IdleStopper: void stopAcceptingDoneContinuation()>();

     label4:
        $r5 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        virtualinvoke $r5.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.util.List handleUntaggedResponses(java.util.List)>($r4);

        return;

     label5:
        $r7 := @caughtexception;

        $r5 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

     label6:
        $r6 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.store.imap.ImapFolderPusher$IdleStopper access$600(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r5);

        virtualinvoke $r6.<com.fsck.k9.mail.store.imap.ImapFolderPusher$IdleStopper: void stopAcceptingDoneContinuation()>();

        throw $r7;

     label7:
        r2 := @caughtexception;

        virtualinvoke $r1.<com.fsck.k9.mail.store.imap.ImapConnection: void close()>();

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label7;
        catch java.io.IOException from label6 to label7 with label7;
    }
    private void setReadTimeoutForIdle(com.fsck.k9.mail.store.imap.ImapConnection) throws java.net.SocketException
    {
        com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable r0;
        com.fsck.k9.mail.store.imap.ImapConnection $r1;
        int i0;
        com.fsck.k9.mail.store.imap.ImapFolderPusher $r2;
        com.fsck.k9.mail.store.imap.ImapStore $r3;
        com.fsck.k9.mail.store.StoreConfig $r4;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable;

        $r1 := @parameter0: com.fsck.k9.mail.store.imap.ImapConnection;

        $r2 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r3 = $r2.<com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.store.imap.ImapStore store>;

        $r4 = virtualinvoke $r3.<com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.store.StoreConfig getStoreConfig()>();

        i0 = interfaceinvoke $r4.<com.fsck.k9.mail.store.StoreConfig: int getIdleRefreshMinutes()>();

        i0 = i0 * 60;

        i0 = i0 * 1000;

        i0 = 300000 + i0;

        virtualinvoke $r1.<com.fsck.k9.mail.store.imap.ImapConnection: void setReadTimeout(int)>(i0);

        return;
    }
    private void syncFolderOnConnect() throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable r0;
        com.fsck.k9.mail.PushReceiver $r1;
        com.fsck.k9.mail.store.imap.ImapFolderPusher $r2;
        int $i0;
        com.fsck.k9.mail.MessagingException $r3;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable;

        specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: void processStoredUntaggedResponses()>();

        $r2 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $i0 = $r2.<com.fsck.k9.mail.store.imap.ImapFolderPusher: int messageCount>;

        if $i0 != -1 goto label1;

        $r3 = new com.fsck.k9.mail.MessagingException;

        specialinvoke $r3.<com.fsck.k9.mail.MessagingException: void <init>(java.lang.String)>("Message count = -1 for idling");

        throw $r3;

     label1:
        $r2 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r1 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.PushReceiver access$400(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r2);

        $r2 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        interfaceinvoke $r1.<com.fsck.k9.mail.PushReceiver: void syncFolder(com.fsck.k9.mail.Folder)>($r2);

        return;
    }
    private void syncMessages(int) throws com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable r0;
        int $i0, $i2;
        com.fsck.k9.mail.store.imap.ImapMessage r1;
        java.util.ArrayList r2;
        long $l1, $l3, l4, $l5;
        com.fsck.k9.mail.store.imap.ImapFolderPusher $r3;
        java.util.List $r4;
        java.lang.Object $r5;
        java.lang.String $r6;
        boolean $z0;
        java.lang.StringBuilder $r7;
        byte $b6;
        com.fsck.k9.mail.PushReceiver $r8;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable;

        $i0 := @parameter0: int;

        $l1 = specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: long getOldUidNext()>();

        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r4 = virtualinvoke $r3.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.util.List getMessages(int,int,java.util.Date,boolean,com.fsck.k9.mail.MessageRetrievalListener)>($i0, $i0, null, 1, null);

        if $r4 == null goto label7;

        $i2 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i2 <= 0 goto label7;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        r1 = (com.fsck.k9.mail.store.imap.ImapMessage) $r5;

        $r6 = virtualinvoke r1.<com.fsck.k9.mail.store.imap.ImapMessage: java.lang.String getUid()>();

        $l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r6);

        $z0 = staticinvoke <com.fsck.k9.mail.K9MailLib: boolean isDebug()>();

        if $z0 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got newUid ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for message ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on ");

        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r6 = virtualinvoke $r3.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.lang.String getLogId()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("k9", $r6);

     label1:
        l4 = $l1;

        $l5 = $l3 - 10L;

        $b6 = $l1 cmp $l5;

        if $b6 >= 0 goto label2;

        l4 = $l3 - 10L;

     label2:
        $b6 = l4 cmp 1L;

        if $b6 >= 0 goto label3;

        l4 = 1L;

     label3:
        $b6 = $l3 cmp l4;

        if $b6 < 0 goto label7;

        $z0 = staticinvoke <com.fsck.k9.mail.K9MailLib: boolean isDebug()>();

        if $z0 == 0 goto label4;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Needs sync from uid ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l4);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r6 = virtualinvoke $r3.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.lang.String getLogId()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("k9", $r6);

     label4:
        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $l1 = l4;

     label5:
        $b6 = $l1 cmp $l3;

        if $b6 > 0 goto label6;

        r1 = new com.fsck.k9.mail.store.imap.ImapMessage;

        $r6 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        specialinvoke r1.<com.fsck.k9.mail.store.imap.ImapMessage: void <init>(java.lang.String,com.fsck.k9.mail.Folder)>($r6, $r3);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        $l1 = $l1 + 1L;

        goto label5;

     label6:
        $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label7;

        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r8 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.PushReceiver access$400(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r3);

        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        interfaceinvoke $r8.<com.fsck.k9.mail.PushReceiver: void messagesArrived(com.fsck.k9.mail.Folder,java.util.List)>($r3, r2);

     label7:
        return;
    }
    private void syncMessages(java.util.List)
    {
        com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable r0;
        java.util.List r1;
        java.lang.Exception r2;
        java.util.ArrayList r3;
        com.fsck.k9.mail.store.imap.ImapFolderPusher $r4;
        com.fsck.k9.mail.PushReceiver $r5;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable;

        r1 := @parameter0: java.util.List;

     label1:
        $r4 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        r1 = virtualinvoke $r4.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.util.List getMessages(java.util.List,boolean,com.fsck.k9.mail.MessageRetrievalListener)>(r1, 1, null);

     label2:
        r3 = new java.util.ArrayList;

     label3:
        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        $r4 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r5 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.PushReceiver access$400(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r4);

        $r4 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        interfaceinvoke $r5.<com.fsck.k9.mail.PushReceiver: void messagesFlagsChanged(com.fsck.k9.mail.Folder,java.util.List)>($r4, r3);

     label4:
        return;

     label5:
        r2 := @caughtexception;

        $r4 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r5 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.PushReceiver access$400(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r4);

        interfaceinvoke $r5.<com.fsck.k9.mail.PushReceiver: void pushError(java.lang.String,java.lang.Exception)>("Exception while processing Push untagged responses", r2);

        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
    public void handleAsyncUntaggedResponse(com.fsck.k9.mail.store.imap.ImapResponse)
    {
        com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable r0;
        com.fsck.k9.mail.store.imap.ImapResponse $r1;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        com.fsck.k9.mail.store.imap.ImapFolderPusher $r4;
        com.fsck.k9.mail.store.imap.ImapFolderPusher$IdleStopper $r5;
        int $i0;
        java.lang.Object $r6;
        com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock $r7;
        com.fsck.k9.mail.store.imap.ImapConnection $r8;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable;

        $r1 := @parameter0: com.fsck.k9.mail.store.imap.ImapResponse;

        $z0 = staticinvoke <com.fsck.k9.mail.K9MailLib: boolean isDebug()>();

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got async response: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("k9", $r3);

     label1:
        $r4 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $z0 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: boolean access$300(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r4);

        if $z0 == 0 goto label3;

        $z0 = staticinvoke <com.fsck.k9.mail.K9MailLib: boolean isDebug()>();

        if $z0 == 0 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got async untagged response: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", but stop is set for ");

        $r4 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r3 = virtualinvoke $r4.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.lang.String getLogId()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("k9", $r3);

     label2:
        $r4 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r5 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.store.imap.ImapFolderPusher$IdleStopper access$600(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r4);

        virtualinvoke $r5.<com.fsck.k9.mail.store.imap.ImapFolderPusher$IdleStopper: void stopIdle()>();

        return;

     label3:
        $r3 = virtualinvoke $r1.<com.fsck.k9.mail.store.imap.ImapResponse: java.lang.String getTag()>();

        if $r3 != null goto label8;

        $i0 = virtualinvoke $r1.<com.fsck.k9.mail.store.imap.ImapResponse: int size()>();

        if $i0 <= 1 goto label6;

        $r6 = virtualinvoke $r1.<com.fsck.k9.mail.store.imap.ImapResponse: java.lang.Object get(int)>(1);

        $z0 = staticinvoke <com.fsck.k9.mail.store.imap.ImapResponseParser: boolean equalsIgnoreCase(java.lang.Object,java.lang.String)>($r6, "EXISTS");

        if $z0 != 0 goto label4;

        $z0 = staticinvoke <com.fsck.k9.mail.store.imap.ImapResponseParser: boolean equalsIgnoreCase(java.lang.Object,java.lang.String)>($r6, "EXPUNGE");

        if $z0 != 0 goto label4;

        $z0 = staticinvoke <com.fsck.k9.mail.store.imap.ImapResponseParser: boolean equalsIgnoreCase(java.lang.Object,java.lang.String)>($r6, "FETCH");

        if $z0 == 0 goto label8;

     label4:
        $r4 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r7 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock access$200(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r4);

        virtualinvoke $r7.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock: void acquire(long)>(60000L);

        $z0 = staticinvoke <com.fsck.k9.mail.K9MailLib: boolean isDebug()>();

        if $z0 == 0 goto label5;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got useful async untagged response: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r4 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r3 = virtualinvoke $r4.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.lang.String getLogId()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("k9", $r3);

     label5:
        $r4 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r5 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.store.imap.ImapFolderPusher$IdleStopper access$600(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r4);

        virtualinvoke $r5.<com.fsck.k9.mail.store.imap.ImapFolderPusher$IdleStopper: void stopIdle()>();

        return;

     label6:
        $z0 = virtualinvoke $r1.<com.fsck.k9.mail.store.imap.ImapResponse: boolean isContinuationRequested()>();

        if $z0 == 0 goto label8;

        $z0 = staticinvoke <com.fsck.k9.mail.K9MailLib: boolean isDebug()>();

        if $z0 == 0 goto label7;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Idling ");

        $r4 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r3 = virtualinvoke $r4.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.lang.String getLogId()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("k9", $r3);

     label7:
        $r4 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r5 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.store.imap.ImapFolderPusher$IdleStopper access$600(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r4);

        $r4 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r8 = $r4.<com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.store.imap.ImapConnection connection>;

        virtualinvoke $r5.<com.fsck.k9.mail.store.imap.ImapFolderPusher$IdleStopper: void startAcceptingDoneContinuation(com.fsck.k9.mail.store.imap.ImapConnection)>($r8);

        $r4 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r7 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock access$200(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r4);

        virtualinvoke $r7.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock: void release()>();

     label8:
        return;
    }
    public void run()
    {
        com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable r0;
        com.fsck.k9.mail.store.imap.ImapConnection r1;
        java.lang.Exception r2, r11;
        com.fsck.k9.mail.store.imap.ImapFolderPusher $r3;
        com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock $r4;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        long l0, $l1, l2;
        byte $b3;
        com.fsck.k9.mail.PushReceiver $r7;
        com.fsck.k9.mail.store.imap.ImapStore $r8;
        com.fsck.k9.mail.store.StoreConfig $r9;
        com.fsck.k9.mail.AuthenticationFailedException r10;
        int $i4;
        java.lang.Throwable $r12;

        r0 := @this: com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable;

        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r4 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock access$200(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r3);

        virtualinvoke $r4.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock: void acquire(long)>(60000L);

        $z0 = staticinvoke <com.fsck.k9.mail.K9MailLib: boolean isDebug()>();

        if $z0 == 0 goto label01;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pusher starting for ");

        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r6 = virtualinvoke $r3.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.lang.String getLogId()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("k9", $r6);

     label01:
        l0 = -1L;

     label02:
        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $z0 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: boolean access$300(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r3);

        if $z0 != 0 goto label09;

     label03:
        $l1 = specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: long getOldUidNext()>();

     label04:
        l2 = $l1;

        $b3 = $l1 cmp l0;

        if $b3 >= 0 goto label05;

        l2 = l0;

     label05:
        $z0 = specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: boolean openConnectionIfNecessary()>();

     label06:
        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

     label07:
        $z1 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: boolean access$300(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r3);

     label08:
        if $z1 == 0 goto label16;

     label09:
        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r7 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.PushReceiver access$400(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r3);

        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r6 = virtualinvoke $r3.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.lang.String getName()>();

        interfaceinvoke $r7.<com.fsck.k9.mail.PushReceiver: void setPushActive(java.lang.String,boolean)>($r6, 0);

     label10:
        $z0 = staticinvoke <com.fsck.k9.mail.K9MailLib: boolean isDebug()>();

     label11:
        if $z0 == 0 goto label14;

     label12:
        $r5 = new java.lang.StringBuilder;

     label13:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pusher for ");

        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r6 = virtualinvoke $r3.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.lang.String getLogId()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is exiting");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("k9", $r6);

     label14:
        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        virtualinvoke $r3.<com.fsck.k9.mail.store.imap.ImapFolderPusher: void close()>();

     label15:
        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r4 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock access$200(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r3);

        virtualinvoke $r4.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock: void release()>();

        return;

     label16:
        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r8 = $r3.<com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.store.imap.ImapStore store>;

     label17:
        $r9 = virtualinvoke $r8.<com.fsck.k9.mail.store.imap.ImapStore: com.fsck.k9.mail.store.StoreConfig getStoreConfig()>();

        $z1 = interfaceinvoke $r9.<com.fsck.k9.mail.store.StoreConfig: boolean isPushPollOnConnect()>();

     label18:
        if $z1 == 0 goto label23;

        if $z0 != 0 goto label21;

     label19:
        $z0 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: boolean needsPoll>;

     label20:
        if $z0 == 0 goto label23;

     label21:
        r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: boolean needsPoll> = 0;

     label22:
        specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: void syncFolderOnConnect()>();

     label23:
        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

     label24:
        $z0 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: boolean access$300(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r3);

     label25:
        if $z0 != 0 goto label09;

     label26:
        $l1 = specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: long getNewUidNext()>();

     label27:
        l0 = $l1;

     label28:
        l2 = specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: long getStartUid(long,long)>(l2, $l1);

     label29:
        $b3 = $l1 cmp l2;

        if $b3 <= 0 goto label34;

     label30:
        specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: void notifyMessagesArrived(long,long)>(l2, $l1);

     label31:
        goto label02;

     label32:
        r10 := @caughtexception;

        specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: void reacquireWakeLockAndCleanUp()>();

        $z0 = staticinvoke <com.fsck.k9.mail.K9MailLib: boolean isDebug()>();

        if $z0 == 0 goto label33;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("k9", "Authentication failed. Stopping ImapFolderPusher.", r10);

     label33:
        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r7 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.PushReceiver access$400(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r3);

        interfaceinvoke $r7.<com.fsck.k9.mail.PushReceiver: void authenticationFailed()>();

        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: boolean access$302(com.fsck.k9.mail.store.imap.ImapFolderPusher,boolean)>($r3, 1);

        goto label02;

     label34:
        specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: void processStoredUntaggedResponses()>();

        $z0 = staticinvoke <com.fsck.k9.mail.K9MailLib: boolean isDebug()>();

     label35:
        if $z0 == 0 goto label39;

        $r5 = new java.lang.StringBuilder;

     label36:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("About to IDLE for ");

     label37:
        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

     label38:
        $r6 = virtualinvoke $r3.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.lang.String getLogId()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("k9", $r6);

     label39:
        specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: void prepareForIdle()>();

     label40:
        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        r1 = $r3.<com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.store.imap.ImapConnection connection>;

     label41:
        specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: void setReadTimeoutForIdle(com.fsck.k9.mail.store.imap.ImapConnection)>(r1);

        specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: void sendIdle(com.fsck.k9.mail.store.imap.ImapConnection)>(r1);

        specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: void returnFromIdle()>();

     label42:
        goto label02;

     label43:
        r11 := @caughtexception;

        specialinvoke r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: void reacquireWakeLockAndCleanUp()>();

        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $z0 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: boolean access$300(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r3);

        if $z0 == 0 goto label44;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got exception while idling, but stop is set for ");

        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r6 = virtualinvoke $r3.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.lang.String getLogId()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("k9", $r6);

        goto label02;

     label44:
        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r7 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.PushReceiver access$400(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Push error for ");

        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r6 = virtualinvoke $r3.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.lang.String getName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<com.fsck.k9.mail.PushReceiver: void pushError(java.lang.String,java.lang.Exception)>($r6, r11);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got exception while idling for ");

        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r6 = virtualinvoke $r3.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.lang.String getLogId()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("k9", $r6, r11);

        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r7 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.PushReceiver access$400(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r3);

        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r4 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock access$200(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r3);

        $i4 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: int delayTime>;

        l2 = (long) $i4;

        interfaceinvoke $r7.<com.fsck.k9.mail.PushReceiver: void sleep(com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock,long)>($r4, l2);

        $i4 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: int delayTime>;

        $i4 = $i4 * 2;

        r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: int delayTime> = $i4;

        $i4 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: int delayTime>;

        if $i4 <= 300000 goto label45;

        r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: int delayTime> = 300000;

     label45:
        $i4 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: int idleFailureCount>;

        $i4 = $i4 + 1;

        r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: int idleFailureCount> = $i4;

        $i4 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: int idleFailureCount>;

        if $i4 <= 10 goto label02;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disabling pusher for ");

        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r6 = virtualinvoke $r3.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.lang.String getLogId()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" after ");

        $i4 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: int idleFailureCount>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" consecutive errors");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("k9", $r6);

        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r7 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.PushReceiver access$400(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Push disabled for ");

        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r6 = virtualinvoke $r3.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.lang.String getName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" after ");

        $i4 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: int idleFailureCount>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" consecutive errors");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<com.fsck.k9.mail.PushReceiver: void pushError(java.lang.String,java.lang.Exception)>($r6, r11);

        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: boolean access$302(com.fsck.k9.mail.store.imap.ImapFolderPusher,boolean)>($r3, 1);

        goto label02;

     label46:
        r2 := @caughtexception;

     label47:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got exception while closing for ");

        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r6 = virtualinvoke $r3.<com.fsck.k9.mail.store.imap.ImapFolderPusher: java.lang.String getLogId()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("k9", $r6, r2);

     label48:
        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r4 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock access$200(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r3);

        virtualinvoke $r4.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock: void release()>();

        return;

     label49:
        $r12 := @caughtexception;

        $r3 = r0.<com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable: com.fsck.k9.mail.store.imap.ImapFolderPusher this$0>;

        $r4 = staticinvoke <com.fsck.k9.mail.store.imap.ImapFolderPusher: com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock access$200(com.fsck.k9.mail.store.imap.ImapFolderPusher)>($r3);

        virtualinvoke $r4.<com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock: void release()>();

        throw $r12;

        catch com.fsck.k9.mail.AuthenticationFailedException from label03 to label04 with label32;
        catch com.fsck.k9.mail.AuthenticationFailedException from label05 to label06 with label32;
        catch com.fsck.k9.mail.AuthenticationFailedException from label07 to label08 with label32;
        catch java.lang.Exception from label03 to label04 with label43;
        catch java.lang.Exception from label05 to label08 with label43;
        catch java.lang.Exception from label10 to label11 with label46;
        catch java.lang.Exception from label13 to label15 with label46;
        catch java.lang.Throwable from label10 to label11 with label49;
        catch java.lang.Throwable from label12 to label15 with label49;
        catch com.fsck.k9.mail.AuthenticationFailedException from label17 to label18 with label32;
        catch com.fsck.k9.mail.AuthenticationFailedException from label22 to label23 with label32;
        catch com.fsck.k9.mail.AuthenticationFailedException from label24 to label25 with label32;
        catch com.fsck.k9.mail.AuthenticationFailedException from label26 to label27 with label32;
        catch com.fsck.k9.mail.AuthenticationFailedException from label28 to label29 with label32;
        catch com.fsck.k9.mail.AuthenticationFailedException from label30 to label31 with label32;
        catch java.lang.Exception from label16 to label18 with label43;
        catch java.lang.Exception from label19 to label20 with label43;
        catch java.lang.Exception from label21 to label25 with label43;
        catch java.lang.Exception from label26 to label27 with label43;
        catch java.lang.Exception from label28 to label29 with label43;
        catch java.lang.Exception from label30 to label31 with label43;
        catch com.fsck.k9.mail.AuthenticationFailedException from label34 to label35 with label32;
        catch com.fsck.k9.mail.AuthenticationFailedException from label36 to label37 with label32;
        catch com.fsck.k9.mail.AuthenticationFailedException from label38 to label40 with label32;
        catch com.fsck.k9.mail.AuthenticationFailedException from label41 to label42 with label32;
        catch java.lang.Exception from label34 to label35 with label43;
        catch java.lang.Exception from label36 to label42 with label43;
        catch java.lang.Throwable from label47 to label48 with label49;
    }
