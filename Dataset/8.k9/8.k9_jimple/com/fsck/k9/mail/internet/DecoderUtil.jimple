com.fsck.k9.mail.internet.DecoderUtil extends java.lang.Object
    void <init>()
    {
        com.fsck.k9.mail.internet.DecoderUtil r0;

        r0 := @this: com.fsck.k9.mail.internet.DecoderUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private static java.lang.String decodeB(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.io.IOException r2;
        org.apache.james.mime4j.codec.Base64InputStream r3;
        java.nio.charset.Charset $r4;
        byte[] $r5;
        java.io.ByteArrayInputStream $r6;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r4 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("US-ASCII");

        $r5 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r4);

        r3 = new org.apache.james.mime4j.codec.Base64InputStream;

        $r6 = new java.io.ByteArrayInputStream;

        specialinvoke $r6.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5);

        specialinvoke r3.<org.apache.james.mime4j.codec.Base64InputStream: void <init>(java.io.InputStream)>($r6);

     label1:
        $r0 = staticinvoke <com.fsck.k9.mail.internet.CharsetSupport: java.lang.String readToString(java.io.InputStream,java.lang.String)>(r3, $r1);

     label2:
        return $r0;

     label3:
        r2 := @caughtexception;

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }
    private static java.lang.String decodeEncodedWord(java.lang.String, int, int, com.fsck.k9.mail.Message)
    {
        java.lang.String $r0, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4;
        com.fsck.k9.mail.Message $r1;
        com.fsck.k9.mail.MessagingException r2;
        boolean $z0;
        java.lang.StringBuilder $r6;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: com.fsck.k9.mail.Message;

        $i2 = $i0 + 2;

        $i2 = virtualinvoke $r0.<java.lang.String: int indexOf(int,int)>(63, $i2);

        $i3 = $i1 + -2;

        if $i2 != $i3 goto label1;

        return null;

     label1:
        $i3 = $i2 + 1;

        $i3 = virtualinvoke $r0.<java.lang.String: int indexOf(int,int)>(63, $i3);

        $i4 = $i1 + -2;

        if $i3 == $i4 goto label8;

        $i4 = $i0 + 2;

        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i4, $i2);

        $i2 = $i2 + 1;

        $r4 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i2, $i3);

        $i2 = $i3 + 1;

        $i3 = $i1 + -2;

        $r5 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i2, $i3);

     label2:
        $r3 = staticinvoke <com.fsck.k9.mail.internet.CharsetSupport: java.lang.String fixupCharset(java.lang.String,com.fsck.k9.mail.Message)>($r3, $r1);

     label3:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing encoded text in encoded word: \'");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("k9", $r0);

        return null;

     label4:
        r2 := @caughtexception;

        return null;

     label5:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Q");

        if $z0 == 0 goto label6;

        $r0 = staticinvoke <com.fsck.k9.mail.internet.DecoderUtil: java.lang.String decodeQ(java.lang.String,java.lang.String)>($r5, $r3);

        return $r0;

     label6:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("B");

        if $z0 == 0 goto label7;

        $r0 = staticinvoke <com.fsck.k9.mail.internet.DecoderUtil: java.lang.String decodeB(java.lang.String,java.lang.String)>($r5, $r3);

        return $r0;

     label7:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Warning: Unknown encoding in encoded word \'");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("k9", $r0);

     label8:
        return null;

        catch com.fsck.k9.mail.MessagingException from label2 to label3 with label4;
    }
    public static java.lang.String decodeEncodedWords(java.lang.String, com.fsck.k9.mail.Message)
    {
        com.fsck.k9.mail.Message $r0;
        java.lang.StringBuilder r1;
        int $i0, i1, $i2;
        java.lang.String r2, $r3, $r4;
        boolean $z0;

        r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: com.fsck.k9.mail.Message;

        $z0 = virtualinvoke r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("=?");

        if $z0 != 0 goto label01;

        return r2;

     label01:
        i1 = 0;

        $z0 = 0;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

     label02:
        $i2 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String,int)>("=?", i1);

        if $i2 != -1 goto label03;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(i1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return r2;

     label03:
        $i0 = $i2 + 2;

        $i0 = virtualinvoke r2.<java.lang.String: int indexOf(int,int)>(63, $i0);

        if $i0 != -1 goto label04;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(i1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return r2;

     label04:
        $i0 = $i0 + 1;

        $i0 = virtualinvoke r2.<java.lang.String: int indexOf(int,int)>(63, $i0);

        if $i0 != -1 goto label05;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(i1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return r2;

     label05:
        $i0 = $i0 + 1;

        $i0 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String,int)>("?=", $i0);

        if $i0 != -1 goto label06;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(i1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return r2;

     label06:
        $i0 = $i0 + 2;

        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(i1, $i2);

        $r4 = staticinvoke <com.fsck.k9.mail.internet.DecoderUtil: java.lang.String decodeEncodedWord(java.lang.String,int,int,com.fsck.k9.mail.Message)>(r2, $i2, $i0, $r0);

        if $r4 != null goto label08;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>($i2, $i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label07:
        i1 = $i0;

        if $r4 == null goto label11;

        $z0 = 1;

        goto label02;

     label08:
        if $z0 == 0 goto label09;

        $z0 = staticinvoke <org.apache.james.mime4j.util.CharsetUtil: boolean isWhitespace(java.lang.String)>($r3);

        if $z0 != 0 goto label10;

     label09:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label10:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        goto label07;

     label11:
        $z0 = 0;

        goto label02;
    }
    private static java.lang.String decodeQ(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.io.IOException r2;
        org.apache.james.mime4j.codec.QuotedPrintableInputStream r3;
        java.lang.StringBuilder r4;
        int i0, $i1;
        char $c2;
        java.nio.charset.Charset $r5;
        byte[] $r6;
        java.io.ByteArrayInputStream $r7;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        r4 = new java.lang.StringBuilder;

        specialinvoke r4.<java.lang.StringBuilder: void <init>()>();

        i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if i0 >= $i1 goto label4;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i0);

        if $c2 != 95 goto label3;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=20");

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        goto label2;

     label4:
        $r0 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("US-ASCII");

        $r6 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r5);

        r3 = new org.apache.james.mime4j.codec.QuotedPrintableInputStream;

        $r7 = new java.io.ByteArrayInputStream;

        specialinvoke $r7.<java.io.ByteArrayInputStream: void <init>(byte[])>($r6);

        specialinvoke r3.<org.apache.james.mime4j.codec.QuotedPrintableInputStream: void <init>(java.io.InputStream)>($r7);

     label5:
        $r0 = staticinvoke <com.fsck.k9.mail.internet.CharsetSupport: java.lang.String readToString(java.io.InputStream,java.lang.String)>(r3, $r1);

     label6:
        return $r0;

     label7:
        r2 := @caughtexception;

        return null;

        catch java.io.IOException from label5 to label6 with label7;
    }
