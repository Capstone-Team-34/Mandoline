com.fsck.k9.mail.internet.EncoderUtil extends java.lang.Object
private static final int ENCODED_WORD_MAX_LENGTH
private static final java.lang.String ENC_WORD_PREFIX
private static final java.lang.String ENC_WORD_SUFFIX
private static final java.util.BitSet Q_RESTRICTED_CHARS
    static void <clinit>()
    {
        java.util.BitSet $r0;

        $r0 = staticinvoke <com.fsck.k9.mail.internet.EncoderUtil: java.util.BitSet initChars(java.lang.String)>("=_?\"#$%&\'(),.:;<>@[\\]^`{|}~");

        <com.fsck.k9.mail.internet.EncoderUtil: java.util.BitSet Q_RESTRICTED_CHARS> = $r0;

        return;
    }
    private void <init>()
    {
        com.fsck.k9.mail.internet.EncoderUtil r0;

        r0 := @this: com.fsck.k9.mail.internet.EncoderUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private static int bEncodedLength(byte[])
    {
        byte[] $r0;
        int $i0;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        $i0 = $i0 + 2;

        $i0 = $i0 / 3;

        $i0 = $i0 * 4;

        return $i0;
    }
    private static java.nio.charset.Charset determineCharset(java.lang.String)
    {
        java.lang.String $r0;
        boolean z0;
        int $i0, i1;
        char $c2;
        java.nio.charset.Charset r1;

        $r0 := @parameter0: java.lang.String;

        z0 = 1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label4;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i1);

        if $c2 <= 255 goto label2;

        r1 = <org.apache.james.mime4j.util.CharsetUtil: java.nio.charset.Charset UTF_8>;

        return r1;

     label2:
        if $c2 <= 127 goto label3;

        z0 = 0;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        if z0 == 0 goto label5;

        r1 = <org.apache.james.mime4j.util.CharsetUtil: java.nio.charset.Charset US_ASCII>;

        return r1;

     label5:
        r1 = <org.apache.james.mime4j.util.CharsetUtil: java.nio.charset.Charset ISO_8859_1>;

        return r1;
    }
    private static com.fsck.k9.mail.internet.EncoderUtil$Encoding determineEncoding(byte[])
    {
        byte[] $r0;
        int i0, i1, i2;
        boolean $z0;
        byte $b3;
        java.util.BitSet $r1;
        com.fsck.k9.mail.internet.EncoderUtil$Encoding r2;

        $r0 := @parameter0: byte[];

        i0 = lengthof $r0;

        if i0 != 0 goto label1;

        r2 = <com.fsck.k9.mail.internet.EncoderUtil$Encoding: com.fsck.k9.mail.internet.EncoderUtil$Encoding Q>;

        return r2;

     label1:
        i0 = 0;

        i2 = 0;

     label2:
        i1 = lengthof $r0;

        if i2 >= i1 goto label4;

        $b3 = $r0[i2];

        i1 = $b3 & 255;

        if i1 == 32 goto label3;

        $r1 = <com.fsck.k9.mail.internet.EncoderUtil: java.util.BitSet Q_RESTRICTED_CHARS>;

        $z0 = virtualinvoke $r1.<java.util.BitSet: boolean get(int)>(i1);

        if $z0 != 0 goto label3;

        i0 = i0 + 1;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        i2 = i0 * 100;

        i0 = lengthof $r0;

        i0 = i2 / i0;

        if i0 <= 30 goto label5;

        r2 = <com.fsck.k9.mail.internet.EncoderUtil$Encoding: com.fsck.k9.mail.internet.EncoderUtil$Encoding B>;

        return r2;

     label5:
        r2 = <com.fsck.k9.mail.internet.EncoderUtil$Encoding: com.fsck.k9.mail.internet.EncoderUtil$Encoding Q>;

        return r2;
    }
    private static byte[] encode(java.lang.String, java.nio.charset.Charset)
    {
        java.lang.String $r0;
        java.nio.charset.Charset $r1;
        byte[] r2;
        java.nio.ByteBuffer $r3;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.nio.charset.Charset;

        $r3 = virtualinvoke $r1.<java.nio.charset.Charset: java.nio.ByteBuffer encode(java.lang.String)>($r0);

        $i0 = virtualinvoke $r3.<java.nio.ByteBuffer: int limit()>();

        r2 = newarray (byte)[$i0];

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r2);

        return r2;
    }
    private static java.lang.String encodeB(java.lang.String, java.lang.String, java.nio.charset.Charset, byte[])
    {
        java.lang.String $r0, $r1, $r4;
        java.nio.charset.Charset $r2;
        byte[] $r3;
        int i0, $i1;
        java.lang.StringBuilder $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.nio.charset.Charset;

        $r3 := @parameter3: byte[];

        i0 = staticinvoke <com.fsck.k9.mail.internet.EncoderUtil: int bEncodedLength(byte[])>($r3);

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        i0 = $i1 + i0;

        $r4 = "?=";

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        i0 = i0 + $i1;

        if i0 > 75 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = staticinvoke <org.apache.james.mime4j.codec.EncoderUtil: java.lang.String encodeB(byte[])>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?=");

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label1:
        i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        i0 = i0 / 2;

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $r3 = staticinvoke <com.fsck.k9.mail.internet.EncoderUtil: byte[] encode(java.lang.String,java.nio.charset.Charset)>($r4, $r2);

        $r4 = staticinvoke <com.fsck.k9.mail.internet.EncoderUtil: java.lang.String encodeB(java.lang.String,java.lang.String,java.nio.charset.Charset,byte[])>($r0, $r4, $r2, $r3);

        i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        i0 = i0 / 2;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(i0);

        $r3 = staticinvoke <com.fsck.k9.mail.internet.EncoderUtil: byte[] encode(java.lang.String,java.nio.charset.Charset)>($r1, $r2);

        $r0 = staticinvoke <com.fsck.k9.mail.internet.EncoderUtil: java.lang.String encodeB(java.lang.String,java.lang.String,java.nio.charset.Charset,byte[])>($r0, $r1, $r2, $r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }
    public static java.lang.String encodeEncodedWord(java.lang.String, java.nio.charset.Charset)
    {
        java.lang.String $r0, $r3;
        java.nio.charset.Charset $r1;
        java.lang.IllegalArgumentException $r2;
        byte[] $r4;
        com.fsck.k9.mail.internet.EncoderUtil$Encoding $r5, $r6;
        java.lang.StringBuilder $r7;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.nio.charset.Charset;

        if $r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        if $r1 != null goto label2;

        $r1 = staticinvoke <com.fsck.k9.mail.internet.EncoderUtil: java.nio.charset.Charset determineCharset(java.lang.String)>($r0);

     label2:
        $r3 = virtualinvoke $r1.<java.nio.charset.Charset: java.lang.String name()>();

        $r3 = staticinvoke <com.fsck.k9.mail.internet.CharsetSupport: java.lang.String getExternalCharset(java.lang.String)>($r3);

        $r4 = staticinvoke <com.fsck.k9.mail.internet.EncoderUtil: byte[] encode(java.lang.String,java.nio.charset.Charset)>($r0, $r1);

        $r5 = staticinvoke <com.fsck.k9.mail.internet.EncoderUtil: com.fsck.k9.mail.internet.EncoderUtil$Encoding determineEncoding(byte[])>($r4);

        $r6 = <com.fsck.k9.mail.internet.EncoderUtil$Encoding: com.fsck.k9.mail.internet.EncoderUtil$Encoding B>;

        if $r5 != $r6 goto label3;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=?");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?B?");

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0 = staticinvoke <com.fsck.k9.mail.internet.EncoderUtil: java.lang.String encodeB(java.lang.String,java.lang.String,java.nio.charset.Charset,byte[])>($r3, $r0, $r1, $r4);

        return $r0;

     label3:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=?");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?Q?");

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0 = staticinvoke <com.fsck.k9.mail.internet.EncoderUtil: java.lang.String encodeQ(java.lang.String,java.lang.String,java.nio.charset.Charset,byte[])>($r3, $r0, $r1, $r4);

        return $r0;
    }
    private static java.lang.String encodeQ(java.lang.String, java.lang.String, java.nio.charset.Charset, byte[])
    {
        java.lang.String $r0, $r1, $r4;
        java.nio.charset.Charset $r2;
        byte[] $r3;
        int i0, $i1;
        java.lang.StringBuilder $r5;
        org.apache.james.mime4j.codec.EncoderUtil$Usage $r6;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.nio.charset.Charset;

        $r3 := @parameter3: byte[];

        i0 = staticinvoke <com.fsck.k9.mail.internet.EncoderUtil: int qEncodedLength(byte[])>($r3);

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        i0 = $i1 + i0;

        $r4 = "?=";

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        i0 = i0 + $i1;

        if i0 > 75 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r6 = <org.apache.james.mime4j.codec.EncoderUtil$Usage: org.apache.james.mime4j.codec.EncoderUtil$Usage WORD_ENTITY>;

        $r0 = staticinvoke <org.apache.james.mime4j.codec.EncoderUtil: java.lang.String encodeQ(byte[],org.apache.james.mime4j.codec.EncoderUtil$Usage)>($r3, $r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?=");

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label1:
        i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        i0 = i0 / 2;

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $r3 = staticinvoke <com.fsck.k9.mail.internet.EncoderUtil: byte[] encode(java.lang.String,java.nio.charset.Charset)>($r4, $r2);

        $r4 = staticinvoke <com.fsck.k9.mail.internet.EncoderUtil: java.lang.String encodeQ(java.lang.String,java.lang.String,java.nio.charset.Charset,byte[])>($r0, $r4, $r2, $r3);

        i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        i0 = i0 / 2;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(i0);

        $r3 = staticinvoke <com.fsck.k9.mail.internet.EncoderUtil: byte[] encode(java.lang.String,java.nio.charset.Charset)>($r1, $r2);

        $r0 = staticinvoke <com.fsck.k9.mail.internet.EncoderUtil: java.lang.String encodeQ(java.lang.String,java.lang.String,java.nio.charset.Charset,byte[])>($r0, $r1, $r2, $r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }
    private static java.util.BitSet initChars(java.lang.String)
    {
        java.lang.String $r0;
        java.util.BitSet r1;
        int $i0;
        char c1;

        $r0 := @parameter0: java.lang.String;

        r1 = new java.util.BitSet;

        specialinvoke r1.<java.util.BitSet: void <init>(int)>(128);

        c1 = 33;

     label1:
        if c1 >= 127 goto label3;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(c1);

        if $i0 != -1 goto label2;

        virtualinvoke r1.<java.util.BitSet: void set(int)>(c1);

     label2:
        $i0 = c1 + 1;

        c1 = (char) $i0;

        goto label1;

     label3:
        return r1;
    }
    private static int qEncodedLength(byte[])
    {
        byte[] $r0;
        byte b0;
        int i1, $i2, i3, $i4;
        boolean $z0;
        java.util.BitSet $r1;

        $r0 := @parameter0: byte[];

        i3 = 0;

        $i2 = lengthof $r0;

        $i4 = 0;

     label1:
        if $i4 >= $i2 goto label5;

        b0 = $r0[$i4];

        i1 = b0 & 255;

        if i1 != 32 goto label3;

        i3 = i3 + 1;

     label2:
        $i4 = $i4 + 1;

        goto label1;

     label3:
        $r1 = <com.fsck.k9.mail.internet.EncoderUtil: java.util.BitSet Q_RESTRICTED_CHARS>;

        $z0 = virtualinvoke $r1.<java.util.BitSet: boolean get(int)>(i1);

        if $z0 != 0 goto label4;

        i3 = i3 + 3;

        goto label2;

     label4:
        i3 = i3 + 1;

        goto label2;

     label5:
        return i3;
    }
