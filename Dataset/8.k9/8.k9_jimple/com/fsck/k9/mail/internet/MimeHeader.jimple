com.fsck.k9.mail.internet.MimeHeader extends java.lang.Object implements java.lang.Cloneable
public static final java.lang.String HEADER_CONTENT_DISPOSITION
public static final java.lang.String HEADER_CONTENT_ID
public static final java.lang.String HEADER_CONTENT_TRANSFER_ENCODING
public static final java.lang.String HEADER_CONTENT_TYPE
private java.lang.String mCharset
private java.util.List mFields
    public void <init>()
    {
        com.fsck.k9.mail.internet.MimeHeader r0;
        java.util.ArrayList $r1;

        r0 := @this: com.fsck.k9.mail.internet.MimeHeader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.fsck.k9.mail.internet.MimeHeader: java.util.List mFields> = $r1;

        r0.<com.fsck.k9.mail.internet.MimeHeader: java.lang.String mCharset> = null;

        return;
    }
    private boolean hasToBeEncoded(java.lang.String)
    {
        com.fsck.k9.mail.internet.MimeHeader r0;
        java.lang.String $r1;
        int i0, $i1;
        char $c2;

        r0 := @this: com.fsck.k9.mail.internet.MimeHeader;

        $r1 := @parameter0: java.lang.String;

        i0 = 0;

     label1:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i0 >= $i1 goto label4;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i0);

        if $c2 < 32 goto label2;

        if 126 >= $c2 goto label3;

     label2:
        if $c2 == 10 goto label3;

        if $c2 == 13 goto label3;

        if $c2 == 9 goto label3;

        return 1;

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        return 0;
    }
    private void writeNameValueField(java.io.BufferedWriter, com.fsck.k9.mail.internet.MimeHeader$Field) throws java.io.IOException
    {
        com.fsck.k9.mail.internet.MimeHeader r0;
        java.io.BufferedWriter $r1;
        com.fsck.k9.mail.internet.MimeHeader$Field $r2;
        java.lang.String $r3, r4;
        boolean $z0;
        java.nio.charset.Charset r5;

        r0 := @this: com.fsck.k9.mail.internet.MimeHeader;

        $r1 := @parameter0: java.io.BufferedWriter;

        $r2 := @parameter1: com.fsck.k9.mail.internet.MimeHeader$Field;

        $r3 = virtualinvoke $r2.<com.fsck.k9.mail.internet.MimeHeader$Field: java.lang.String getValue()>();

        r4 = $r3;

        $z0 = specialinvoke r0.<com.fsck.k9.mail.internet.MimeHeader: boolean hasToBeEncoded(java.lang.String)>($r3);

        if $z0 == 0 goto label2;

        r5 = null;

        r4 = r0.<com.fsck.k9.mail.internet.MimeHeader: java.lang.String mCharset>;

        if r4 == null goto label1;

        r4 = r0.<com.fsck.k9.mail.internet.MimeHeader: java.lang.String mCharset>;

        r5 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r4);

     label1:
        r4 = virtualinvoke $r2.<com.fsck.k9.mail.internet.MimeHeader$Field: java.lang.String getValue()>();

        r4 = staticinvoke <com.fsck.k9.mail.internet.EncoderUtil: java.lang.String encodeEncodedWord(java.lang.String,java.nio.charset.Charset)>(r4, r5);

     label2:
        $r3 = virtualinvoke $r2.<com.fsck.k9.mail.internet.MimeHeader$Field: java.lang.String getName()>();

        virtualinvoke $r1.<java.io.BufferedWriter: void write(java.lang.String)>($r3);

        virtualinvoke $r1.<java.io.BufferedWriter: void write(java.lang.String)>(": ");

        virtualinvoke $r1.<java.io.BufferedWriter: void write(java.lang.String)>(r4);

        return;
    }
    private void writeNameValueField(java.lang.StringBuilder, com.fsck.k9.mail.internet.MimeHeader$Field)
    {
        com.fsck.k9.mail.internet.MimeHeader r0;
        java.lang.StringBuilder $r1;
        com.fsck.k9.mail.internet.MimeHeader$Field $r2;
        java.lang.String $r3, r4;
        boolean $z0;
        java.nio.charset.Charset r5;

        r0 := @this: com.fsck.k9.mail.internet.MimeHeader;

        $r1 := @parameter0: java.lang.StringBuilder;

        $r2 := @parameter1: com.fsck.k9.mail.internet.MimeHeader$Field;

        $r3 = virtualinvoke $r2.<com.fsck.k9.mail.internet.MimeHeader$Field: java.lang.String getValue()>();

        r4 = $r3;

        $z0 = specialinvoke r0.<com.fsck.k9.mail.internet.MimeHeader: boolean hasToBeEncoded(java.lang.String)>($r3);

        if $z0 == 0 goto label2;

        r5 = null;

        r4 = r0.<com.fsck.k9.mail.internet.MimeHeader: java.lang.String mCharset>;

        if r4 == null goto label1;

        r4 = r0.<com.fsck.k9.mail.internet.MimeHeader: java.lang.String mCharset>;

        r5 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r4);

     label1:
        r4 = virtualinvoke $r2.<com.fsck.k9.mail.internet.MimeHeader$Field: java.lang.String getValue()>();

        r4 = staticinvoke <com.fsck.k9.mail.internet.EncoderUtil: java.lang.String encodeEncodedWord(java.lang.String,java.nio.charset.Charset)>(r4, r5);

     label2:
        $r3 = virtualinvoke $r2.<com.fsck.k9.mail.internet.MimeHeader$Field: java.lang.String getName()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        return;
    }
    public void addHeader(java.lang.String, java.lang.String)
    {
        com.fsck.k9.mail.internet.MimeHeader r0;
        java.lang.String $r1, $r2;
        com.fsck.k9.mail.internet.MimeHeader$Field $r3;
        java.util.List $r4;

        r0 := @this: com.fsck.k9.mail.internet.MimeHeader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.fsck.k9.mail.internet.MimeUtility: java.lang.String foldAndEncode(java.lang.String)>($r2);

        $r3 = staticinvoke <com.fsck.k9.mail.internet.MimeHeader$Field: com.fsck.k9.mail.internet.MimeHeader$Field newNameValueField(java.lang.String,java.lang.String)>($r1, $r2);

        $r4 = r0.<com.fsck.k9.mail.internet.MimeHeader: java.util.List mFields>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r3);

        return;
    }
    void addRawHeader(java.lang.String, java.lang.String)
    {
        com.fsck.k9.mail.internet.MimeHeader r0;
        java.lang.String $r1, $r2;
        java.util.List $r3;
        com.fsck.k9.mail.internet.MimeHeader$Field $r4;

        r0 := @this: com.fsck.k9.mail.internet.MimeHeader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r4 = staticinvoke <com.fsck.k9.mail.internet.MimeHeader$Field: com.fsck.k9.mail.internet.MimeHeader$Field newRawField(java.lang.String,java.lang.String)>($r1, $r2);

        $r3 = r0.<com.fsck.k9.mail.internet.MimeHeader: java.util.List mFields>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        return;
    }
    public void clear()
    {
        com.fsck.k9.mail.internet.MimeHeader r0;
        java.util.List $r1;

        r0 := @this: com.fsck.k9.mail.internet.MimeHeader;

        $r1 = r0.<com.fsck.k9.mail.internet.MimeHeader: java.util.List mFields>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }
    public com.fsck.k9.mail.internet.MimeHeader clone()
    {
        com.fsck.k9.mail.internet.MimeHeader r0, r4;
        java.lang.CloneNotSupportedException r1;
        java.util.List $r2;
        java.lang.Object $r3;
        java.util.ArrayList $r5;
        java.lang.AssertionError $r6;

        r0 := @this: com.fsck.k9.mail.internet.MimeHeader;

     label1:
        $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

     label2:
        r4 = (com.fsck.k9.mail.internet.MimeHeader) $r3;

        $r5 = new java.util.ArrayList;

        $r2 = r0.<com.fsck.k9.mail.internet.MimeHeader: java.util.List mFields>;

     label3:
        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

     label4:
        r4.<com.fsck.k9.mail.internet.MimeHeader: java.util.List mFields> = $r5;

        return r4;

     label5:
        r1 := @caughtexception;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>(r1);

        throw $r6;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label5;
        catch java.lang.CloneNotSupportedException from label3 to label4 with label5;
    }
    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        com.fsck.k9.mail.internet.MimeHeader r0;

        r0 := @this: com.fsck.k9.mail.internet.MimeHeader;

        r0 = virtualinvoke r0.<com.fsck.k9.mail.internet.MimeHeader: com.fsck.k9.mail.internet.MimeHeader clone()>();

        return r0;
    }
    public java.lang.String getFirstHeader(java.lang.String)
    {
        com.fsck.k9.mail.internet.MimeHeader r0;
        java.lang.String $r1;
        java.lang.String[] $r2;
        int $i0;

        r0 := @this: com.fsck.k9.mail.internet.MimeHeader;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.fsck.k9.mail.internet.MimeHeader: java.lang.String[] getHeader(java.lang.String)>($r1);

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r1 = $r2[0];

        return $r1;
    }
    public java.lang.String[] getHeader(java.lang.String)
    {
        com.fsck.k9.mail.internet.MimeHeader r0;
        java.lang.String $r1, $r7;
        java.util.ArrayList r2;
        java.util.List $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        com.fsck.k9.mail.internet.MimeHeader$Field r6;
        int $i0;
        java.lang.String[] $r8;
        java.lang.Object[] $r9;

        r0 := @this: com.fsck.k9.mail.internet.MimeHeader;

        $r1 := @parameter0: java.lang.String;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r3 = r0.<com.fsck.k9.mail.internet.MimeHeader: java.util.List mFields>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.fsck.k9.mail.internet.MimeHeader$Field) $r5;

        $r7 = virtualinvoke r6.<com.fsck.k9.mail.internet.MimeHeader$Field: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $r7 = virtualinvoke r6.<com.fsck.k9.mail.internet.MimeHeader$Field: java.lang.String getValue()>();

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $r8 = newarray (java.lang.String)[$i0];

        $r9 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        $r8 = (java.lang.String[]) $r9;

        return $r8;
    }
    public java.util.Set getHeaderNames()
    {
        com.fsck.k9.mail.internet.MimeHeader r0;
        java.util.LinkedHashSet r1;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.fsck.k9.mail.internet.MimeHeader$Field r5;
        java.lang.String $r6;

        r0 := @this: com.fsck.k9.mail.internet.MimeHeader;

        r1 = new java.util.LinkedHashSet;

        specialinvoke r1.<java.util.LinkedHashSet: void <init>()>();

        $r2 = r0.<com.fsck.k9.mail.internet.MimeHeader: java.util.List mFields>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.fsck.k9.mail.internet.MimeHeader$Field) $r4;

        $r6 = virtualinvoke r5.<com.fsck.k9.mail.internet.MimeHeader$Field: java.lang.String getName()>();

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        return r1;
    }
    public void removeHeader(java.lang.String)
    {
        com.fsck.k9.mail.internet.MimeHeader r0;
        java.lang.String $r1, $r7;
        java.util.ArrayList r2;
        java.util.List $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        com.fsck.k9.mail.internet.MimeHeader$Field r6;

        r0 := @this: com.fsck.k9.mail.internet.MimeHeader;

        $r1 := @parameter0: java.lang.String;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r3 = r0.<com.fsck.k9.mail.internet.MimeHeader: java.util.List mFields>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.fsck.k9.mail.internet.MimeHeader$Field) $r5;

        $r7 = virtualinvoke r6.<com.fsck.k9.mail.internet.MimeHeader$Field: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r6);

        goto label1;

     label2:
        $r3 = r0.<com.fsck.k9.mail.internet.MimeHeader: java.util.List mFields>;

        interfaceinvoke $r3.<java.util.List: boolean removeAll(java.util.Collection)>(r2);

        return;
    }
    public void setCharset(java.lang.String)
    {
        com.fsck.k9.mail.internet.MimeHeader r0;
        java.lang.String $r1;

        r0 := @this: com.fsck.k9.mail.internet.MimeHeader;

        $r1 := @parameter0: java.lang.String;

        r0.<com.fsck.k9.mail.internet.MimeHeader: java.lang.String mCharset> = $r1;

        return;
    }
    public void setHeader(java.lang.String, java.lang.String)
    {
        com.fsck.k9.mail.internet.MimeHeader r0;
        java.lang.String $r1, $r2;

        r0 := @this: com.fsck.k9.mail.internet.MimeHeader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 == null goto label2;

        if $r2 != null goto label1;

        return;

     label1:
        virtualinvoke r0.<com.fsck.k9.mail.internet.MimeHeader: void removeHeader(java.lang.String)>($r1);

        virtualinvoke r0.<com.fsck.k9.mail.internet.MimeHeader: void addHeader(java.lang.String,java.lang.String)>($r1, $r2);

     label2:
        return;
    }
    public java.lang.String toString()
    {
        com.fsck.k9.mail.internet.MimeHeader r0;
        java.lang.StringBuilder r1, $r7;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.fsck.k9.mail.internet.MimeHeader$Field r5;
        java.lang.String $r6;

        r0 := @this: com.fsck.k9.mail.internet.MimeHeader;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<com.fsck.k9.mail.internet.MimeHeader: java.util.List mFields>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.fsck.k9.mail.internet.MimeHeader$Field) $r4;

        $z0 = virtualinvoke r5.<com.fsck.k9.mail.internet.MimeHeader$Field: boolean hasRawData()>();

        if $z0 == 0 goto label3;

        $r6 = virtualinvoke r5.<com.fsck.k9.mail.internet.MimeHeader$Field: java.lang.String getRaw()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label2:
        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(13);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        goto label1;

     label3:
        specialinvoke r0.<com.fsck.k9.mail.internet.MimeHeader: void writeNameValueField(java.lang.StringBuilder,com.fsck.k9.mail.internet.MimeHeader$Field)>(r1, r5);

        goto label2;

     label4:
        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        com.fsck.k9.mail.internet.MimeHeader r0;
        java.io.OutputStream $r1;
        java.io.BufferedWriter r2;
        java.io.OutputStreamWriter $r3;
        java.util.List $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        com.fsck.k9.mail.internet.MimeHeader$Field r7;
        java.lang.String $r8;

        r0 := @this: com.fsck.k9.mail.internet.MimeHeader;

        $r1 := @parameter0: java.io.OutputStream;

        r2 = new java.io.BufferedWriter;

        $r3 = new java.io.OutputStreamWriter;

        specialinvoke $r3.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r1);

        specialinvoke r2.<java.io.BufferedWriter: void <init>(java.io.Writer,int)>($r3, 1024);

        $r4 = r0.<com.fsck.k9.mail.internet.MimeHeader: java.util.List mFields>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.fsck.k9.mail.internet.MimeHeader$Field) $r6;

        $z0 = virtualinvoke r7.<com.fsck.k9.mail.internet.MimeHeader$Field: boolean hasRawData()>();

        if $z0 == 0 goto label3;

        $r8 = virtualinvoke r7.<com.fsck.k9.mail.internet.MimeHeader$Field: java.lang.String getRaw()>();

        virtualinvoke r2.<java.io.BufferedWriter: void write(java.lang.String)>($r8);

     label2:
        virtualinvoke r2.<java.io.BufferedWriter: void write(java.lang.String)>("\r\n");

        goto label1;

     label3:
        specialinvoke r0.<com.fsck.k9.mail.internet.MimeHeader: void writeNameValueField(java.io.BufferedWriter,com.fsck.k9.mail.internet.MimeHeader$Field)>(r2, r7);

        goto label2;

     label4:
        virtualinvoke r2.<java.io.BufferedWriter: void flush()>();

        return;
    }
