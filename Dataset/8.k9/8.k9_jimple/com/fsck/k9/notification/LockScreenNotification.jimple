com.fsck.k9.notification.LockScreenNotification extends java.lang.Object
static final int MAX_NUMBER_OF_SENDERS_IN_LOCK_SCREEN_NOTIFICATION
private final android.content.Context context
private final com.fsck.k9.notification.NotificationController controller
    void <init>(com.fsck.k9.notification.NotificationController)
    {
        com.fsck.k9.notification.LockScreenNotification r0;
        com.fsck.k9.notification.NotificationController $r1;
        android.content.Context $r2;

        r0 := @this: com.fsck.k9.notification.LockScreenNotification;

        $r1 := @parameter0: com.fsck.k9.notification.NotificationController;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke $r1.<com.fsck.k9.notification.NotificationController: android.content.Context getContext()>();

        r0.<com.fsck.k9.notification.LockScreenNotification: android.content.Context context> = $r2;

        r0.<com.fsck.k9.notification.LockScreenNotification: com.fsck.k9.notification.NotificationController controller> = $r1;

        return;
    }
    private android.support.v4.app.NotificationCompat$Builder createPublicNotification(com.fsck.k9.notification.NotificationData)
    {
        com.fsck.k9.notification.LockScreenNotification r0;
        com.fsck.k9.notification.NotificationData $r1;
        com.fsck.k9.Account $r2;
        int $i0, $i1;
        android.content.Context $r3;
        android.content.res.Resources $r4;
        java.lang.Object[] $r5;
        java.lang.Integer $r6;
        java.lang.String $r7;
        com.fsck.k9.notification.NotificationController $r8;
        android.support.v4.app.NotificationCompat$Builder $r9;

        r0 := @this: com.fsck.k9.notification.LockScreenNotification;

        $r1 := @parameter0: com.fsck.k9.notification.NotificationData;

        $r2 = virtualinvoke $r1.<com.fsck.k9.notification.NotificationData: com.fsck.k9.Account getAccount()>();

        $i0 = virtualinvoke $r1.<com.fsck.k9.notification.NotificationData: int getNewMessagesCount()>();

        $i1 = virtualinvoke $r1.<com.fsck.k9.notification.NotificationData: int getUnreadMessageCount()>();

        $r3 = r0.<com.fsck.k9.notification.LockScreenNotification: android.content.Context context>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[0] = $r6;

        $r7 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>(2131165189, $i0, $r5);

        $r8 = r0.<com.fsck.k9.notification.LockScreenNotification: com.fsck.k9.notification.NotificationController controller>;

        $r9 = virtualinvoke $r8.<com.fsck.k9.notification.NotificationController: android.support.v4.app.NotificationCompat$Builder createNotificationBuilder()>();

        $r9 = virtualinvoke $r9.<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setSmallIcon(int)>(2130837635);

        $i0 = virtualinvoke $r2.<com.fsck.k9.Account: int getChipColor()>();

        $r9 = virtualinvoke $r9.<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setColor(int)>($i0);

        $r9 = virtualinvoke $r9.<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setNumber(int)>($i1);

        $r9 = virtualinvoke $r9.<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence)>($r7);

        return $r9;
    }
    private android.app.Notification createPublicNotificationWithNewMessagesCount(com.fsck.k9.notification.NotificationData)
    {
        com.fsck.k9.notification.LockScreenNotification r0;
        com.fsck.k9.notification.NotificationData $r1;
        android.support.v4.app.NotificationCompat$Builder $r2;
        com.fsck.k9.Account $r3;
        com.fsck.k9.notification.NotificationController $r4;
        java.lang.String $r5;
        android.app.Notification $r6;

        r0 := @this: com.fsck.k9.notification.LockScreenNotification;

        $r1 := @parameter0: com.fsck.k9.notification.NotificationData;

        $r2 = specialinvoke r0.<com.fsck.k9.notification.LockScreenNotification: android.support.v4.app.NotificationCompat$Builder createPublicNotification(com.fsck.k9.notification.NotificationData)>($r1);

        $r3 = virtualinvoke $r1.<com.fsck.k9.notification.NotificationData: com.fsck.k9.Account getAccount()>();

        $r4 = r0.<com.fsck.k9.notification.LockScreenNotification: com.fsck.k9.notification.NotificationController controller>;

        $r5 = virtualinvoke $r4.<com.fsck.k9.notification.NotificationController: java.lang.String getAccountName(com.fsck.k9.Account)>($r3);

        virtualinvoke $r2.<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence)>($r5);

        $r6 = virtualinvoke $r2.<android.support.v4.app.NotificationCompat$Builder: android.app.Notification build()>();

        return $r6;
    }
    private android.app.Notification createPublicNotificationWithSenderList(com.fsck.k9.notification.NotificationData)
    {
        com.fsck.k9.notification.LockScreenNotification r0;
        com.fsck.k9.notification.NotificationData $r1;
        android.support.v4.app.NotificationCompat$Builder $r2;
        int $i0;
        com.fsck.k9.notification.NotificationHolder $r3;
        com.fsck.k9.notification.NotificationContent $r4;
        java.lang.String $r5;
        android.app.Notification $r6;
        java.util.List $r7;

        r0 := @this: com.fsck.k9.notification.LockScreenNotification;

        $r1 := @parameter0: com.fsck.k9.notification.NotificationData;

        $r2 = specialinvoke r0.<com.fsck.k9.notification.LockScreenNotification: android.support.v4.app.NotificationCompat$Builder createPublicNotification(com.fsck.k9.notification.NotificationData)>($r1);

        $i0 = virtualinvoke $r1.<com.fsck.k9.notification.NotificationData: int getNewMessagesCount()>();

        if $i0 != 1 goto label2;

        $r3 = virtualinvoke $r1.<com.fsck.k9.notification.NotificationData: com.fsck.k9.notification.NotificationHolder getHolderForLatestNotification()>();

        $r4 = $r3.<com.fsck.k9.notification.NotificationHolder: com.fsck.k9.notification.NotificationContent content>;

        $r5 = $r4.<com.fsck.k9.notification.NotificationContent: java.lang.String sender>;

        virtualinvoke $r2.<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence)>($r5);

     label1:
        $r6 = virtualinvoke $r2.<android.support.v4.app.NotificationCompat$Builder: android.app.Notification build()>();

        return $r6;

     label2:
        $r7 = virtualinvoke $r1.<com.fsck.k9.notification.NotificationData: java.util.List getContentForSummaryNotification()>();

        $r5 = virtualinvoke r0.<com.fsck.k9.notification.LockScreenNotification: java.lang.String createCommaSeparatedListOfSenders(java.util.List)>($r7);

        virtualinvoke $r2.<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence)>($r5);

        goto label1;
    }
    public static com.fsck.k9.notification.LockScreenNotification newInstance(com.fsck.k9.notification.NotificationController)
    {
        com.fsck.k9.notification.NotificationController $r0;
        com.fsck.k9.notification.LockScreenNotification $r1;

        $r0 := @parameter0: com.fsck.k9.notification.NotificationController;

        $r1 = new com.fsck.k9.notification.LockScreenNotification;

        specialinvoke $r1.<com.fsck.k9.notification.LockScreenNotification: void <init>(com.fsck.k9.notification.NotificationController)>($r0);

        return $r1;
    }
    public void configureLockScreenNotification(android.support.v4.app.NotificationCompat$Builder, com.fsck.k9.notification.NotificationData)
    {
        com.fsck.k9.notification.LockScreenNotification r0;
        android.support.v4.app.NotificationCompat$Builder $r1;
        com.fsck.k9.notification.NotificationData $r2;
        boolean $z0;
        int[] $r3;
        com.fsck.k9.K9$LockScreenNotificationVisibility $r4;
        int $i0;
        android.app.Notification $r5;

        r0 := @this: com.fsck.k9.notification.LockScreenNotification;

        $r1 := @parameter0: android.support.v4.app.NotificationCompat$Builder;

        $r2 := @parameter1: com.fsck.k9.notification.NotificationData;

        $z0 = staticinvoke <com.fsck.k9.notification.NotificationController: boolean platformSupportsLockScreenNotifications()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = <com.fsck.k9.notification.LockScreenNotification$1: int[] $SwitchMap$com$fsck$k9$K9$LockScreenNotificationVisibility>;

        $r4 = staticinvoke <com.fsck.k9.K9: com.fsck.k9.K9$LockScreenNotificationVisibility getLockScreenNotificationVisibility()>();

        $i0 = virtualinvoke $r4.<com.fsck.k9.K9$LockScreenNotificationVisibility: int ordinal()>();

        $i0 = $r3[$i0];

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label7;
            default: goto label2;
        };

     label2:
        return;

     label3:
        virtualinvoke $r1.<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setVisibility(int)>(-1);

        return;

     label4:
        virtualinvoke $r1.<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setVisibility(int)>(0);

        return;

     label5:
        virtualinvoke $r1.<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setVisibility(int)>(1);

        return;

     label6:
        $r5 = specialinvoke r0.<com.fsck.k9.notification.LockScreenNotification: android.app.Notification createPublicNotificationWithSenderList(com.fsck.k9.notification.NotificationData)>($r2);

        virtualinvoke $r1.<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setPublicVersion(android.app.Notification)>($r5);

        return;

     label7:
        $r5 = specialinvoke r0.<com.fsck.k9.notification.LockScreenNotification: android.app.Notification createPublicNotificationWithNewMessagesCount(com.fsck.k9.notification.NotificationData)>($r2);

        virtualinvoke $r1.<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setPublicVersion(android.app.Notification)>($r5);

        return;
    }
    java.lang.String createCommaSeparatedListOfSenders(java.util.List)
    {
        com.fsck.k9.notification.LockScreenNotification r0;
        java.util.List r1;
        java.util.LinkedHashSet r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.fsck.k9.notification.NotificationContent r5;
        java.lang.String $r6;
        int $i0;

        r0 := @this: com.fsck.k9.notification.LockScreenNotification;

        r1 := @parameter0: java.util.List;

        r2 = new java.util.LinkedHashSet;

        specialinvoke r2.<java.util.LinkedHashSet: void <init>(int)>(5);

        $r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.fsck.k9.notification.NotificationContent) $r4;

        $r6 = r5.<com.fsck.k9.notification.NotificationContent: java.lang.String sender>;

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r6);

        $i0 = interfaceinvoke r2.<java.util.Set: int size()>();

        if $i0 != 5 goto label1;

     label2:
        $r6 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(", ", r2);

        return $r6;
    }
