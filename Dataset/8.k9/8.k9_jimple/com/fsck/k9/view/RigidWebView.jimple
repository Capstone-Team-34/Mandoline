com.fsck.k9.view.RigidWebView extends android.webkit.WebView
private static final int MAX_RESIZE_INTERVAL
private static final int MIN_RESIZE_INTERVAL
private static final boolean NO_THROTTLE
private final com.fsck.k9.Clock mClock
private boolean mIgnoreNext
private long mLastSizeChangeTime
private int mRealHeight
private int mRealWidth
private final com.fsck.k9.Throttle mThrottle
    static void <clinit>()
    {
        int $i0;
        boolean $z0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label2;

        $z0 = 1;

     label1:
        <com.fsck.k9.view.RigidWebView: boolean NO_THROTTLE> = $z0;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }
    public void <init>(android.content.Context)
    {
        com.fsck.k9.view.RigidWebView r0;
        android.content.Context $r1;
        com.fsck.k9.view.RigidWebView$1 $r2;
        com.fsck.k9.Clock $r3;
        com.fsck.k9.Throttle $r4;
        java.lang.Class $r5;
        java.lang.String $r6;
        android.os.Handler $r7;

        r0 := @this: com.fsck.k9.view.RigidWebView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.webkit.WebView: void <init>(android.content.Context)>($r1);

        $r3 = <com.fsck.k9.Clock: com.fsck.k9.Clock INSTANCE>;

        r0.<com.fsck.k9.view.RigidWebView: com.fsck.k9.Clock mClock> = $r3;

        $r4 = new com.fsck.k9.Throttle;

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r2 = new com.fsck.k9.view.RigidWebView$1;

        specialinvoke $r2.<com.fsck.k9.view.RigidWebView$1: void <init>(com.fsck.k9.view.RigidWebView)>(r0);

        $r7 = staticinvoke <com.fsck.k9.helper.Utility: android.os.Handler getMainThreadHandler()>();

        specialinvoke $r4.<com.fsck.k9.Throttle: void <init>(java.lang.String,java.lang.Runnable,android.os.Handler,int,int)>($r6, $r2, $r7, 200, 300);

        r0.<com.fsck.k9.view.RigidWebView: com.fsck.k9.Throttle mThrottle> = $r4;

        r0.<com.fsck.k9.view.RigidWebView: long mLastSizeChangeTime> = -1L;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.fsck.k9.view.RigidWebView r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        com.fsck.k9.view.RigidWebView$1 $r3;
        com.fsck.k9.Clock $r4;
        com.fsck.k9.Throttle $r5;
        java.lang.Class $r6;
        java.lang.String $r7;
        android.os.Handler $r8;

        r0 := @this: com.fsck.k9.view.RigidWebView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r4 = <com.fsck.k9.Clock: com.fsck.k9.Clock INSTANCE>;

        r0.<com.fsck.k9.view.RigidWebView: com.fsck.k9.Clock mClock> = $r4;

        $r5 = new com.fsck.k9.Throttle;

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r3 = new com.fsck.k9.view.RigidWebView$1;

        specialinvoke $r3.<com.fsck.k9.view.RigidWebView$1: void <init>(com.fsck.k9.view.RigidWebView)>(r0);

        $r8 = staticinvoke <com.fsck.k9.helper.Utility: android.os.Handler getMainThreadHandler()>();

        specialinvoke $r5.<com.fsck.k9.Throttle: void <init>(java.lang.String,java.lang.Runnable,android.os.Handler,int,int)>($r7, $r3, $r8, 200, 300);

        r0.<com.fsck.k9.view.RigidWebView: com.fsck.k9.Throttle mThrottle> = $r5;

        r0.<com.fsck.k9.view.RigidWebView: long mLastSizeChangeTime> = -1L;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.fsck.k9.view.RigidWebView r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        com.fsck.k9.view.RigidWebView$1 $r3;
        com.fsck.k9.Clock $r4;
        com.fsck.k9.Throttle $r5;
        java.lang.Class $r6;
        java.lang.String $r7;
        android.os.Handler $r8;

        r0 := @this: com.fsck.k9.view.RigidWebView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r4 = <com.fsck.k9.Clock: com.fsck.k9.Clock INSTANCE>;

        r0.<com.fsck.k9.view.RigidWebView: com.fsck.k9.Clock mClock> = $r4;

        $r5 = new com.fsck.k9.Throttle;

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r3 = new com.fsck.k9.view.RigidWebView$1;

        specialinvoke $r3.<com.fsck.k9.view.RigidWebView$1: void <init>(com.fsck.k9.view.RigidWebView)>(r0);

        $r8 = staticinvoke <com.fsck.k9.helper.Utility: android.os.Handler getMainThreadHandler()>();

        specialinvoke $r5.<com.fsck.k9.Throttle: void <init>(java.lang.String,java.lang.Runnable,android.os.Handler,int,int)>($r7, $r3, $r8, 200, 300);

        r0.<com.fsck.k9.view.RigidWebView: com.fsck.k9.Throttle mThrottle> = $r5;

        r0.<com.fsck.k9.view.RigidWebView: long mLastSizeChangeTime> = -1L;

        return;
    }
    static void access$000(com.fsck.k9.view.RigidWebView)
    {
        com.fsck.k9.view.RigidWebView $r0;

        $r0 := @parameter0: com.fsck.k9.view.RigidWebView;

        specialinvoke $r0.<com.fsck.k9.view.RigidWebView: void performSizeChangeDelayed()>();

        return;
    }
    private void performSizeChange(int, int)
    {
        com.fsck.k9.view.RigidWebView r0;
        int $i0, $i1, $i2, $i4;
        long $l3;
        com.fsck.k9.Clock $r1;

        r0 := @this: com.fsck.k9.view.RigidWebView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i4 = r0.<com.fsck.k9.view.RigidWebView: int mRealWidth>;

        $i2 = r0.<com.fsck.k9.view.RigidWebView: int mRealHeight>;

        specialinvoke r0.<android.webkit.WebView: void onSizeChanged(int,int,int,int)>($i4, $i2, $i0, $i1);

        $r1 = r0.<com.fsck.k9.view.RigidWebView: com.fsck.k9.Clock mClock>;

        $l3 = virtualinvoke $r1.<com.fsck.k9.Clock: long getTime()>();

        r0.<com.fsck.k9.view.RigidWebView: long mLastSizeChangeTime> = $l3;

        return;
    }
    private void performSizeChangeDelayed()
    {
        com.fsck.k9.view.RigidWebView r0;
        int $i0, $i1;

        r0 := @this: com.fsck.k9.view.RigidWebView;

        r0.<com.fsck.k9.view.RigidWebView: boolean mIgnoreNext> = 1;

        $i0 = virtualinvoke r0.<com.fsck.k9.view.RigidWebView: int getWidth()>();

        $i1 = virtualinvoke r0.<com.fsck.k9.view.RigidWebView: int getHeight()>();

        specialinvoke r0.<com.fsck.k9.view.RigidWebView: void performSizeChange(int,int)>($i0, $i1);

        return;
    }
    protected void onSizeChanged(int, int, int, int)
    {
        com.fsck.k9.view.RigidWebView r0;
        int $i0, $i1, $i2, $i3;
        long $l4, $l5;
        boolean $z0, $z1;
        com.fsck.k9.Clock $r1;
        byte $b6;
        com.fsck.k9.Throttle $r2;

        r0 := @this: com.fsck.k9.view.RigidWebView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $z0 = <com.fsck.k9.view.RigidWebView: boolean NO_THROTTLE>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.webkit.WebView: void onSizeChanged(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;

     label1:
        r0.<com.fsck.k9.view.RigidWebView: int mRealWidth> = $i0;

        r0.<com.fsck.k9.view.RigidWebView: int mRealHeight> = $i1;

        $r1 = r0.<com.fsck.k9.view.RigidWebView: com.fsck.k9.Clock mClock>;

        $l4 = virtualinvoke $r1.<com.fsck.k9.Clock: long getTime()>();

        $l5 = r0.<com.fsck.k9.view.RigidWebView: long mLastSizeChangeTime>;

        $l4 = $l4 - $l5;

        $b6 = $l4 cmp 200L;

        if $b6 >= 0 goto label3;

        $z0 = 1;

     label2:
        $z1 = r0.<com.fsck.k9.view.RigidWebView: boolean mIgnoreNext>;

        if $z1 == 0 goto label4;

        r0.<com.fsck.k9.view.RigidWebView: boolean mIgnoreNext> = 0;

        if $z0 == 0 goto label4;

        $z0 = <com.fsck.k9.K9: boolean DEBUG>;

        if $z0 == 0 goto label6;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("k9", "Supressing size change in RigidWebView");

        return;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        if $z0 == 0 goto label5;

        $r2 = r0.<com.fsck.k9.view.RigidWebView: com.fsck.k9.Throttle mThrottle>;

        virtualinvoke $r2.<com.fsck.k9.Throttle: void onEvent()>();

        return;

     label5:
        specialinvoke r0.<com.fsck.k9.view.RigidWebView: void performSizeChange(int,int)>($i2, $i3);

     label6:
        return;
    }
