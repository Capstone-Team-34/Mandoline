com.fsck.k9.view.NonLockingScrollView extends android.widget.ScrollView
private final java.util.List mChildrenNeedingAllTouches
private boolean mInCustomDrag
private boolean mSkipWebViewScroll
private final android.graphics.Rect sHitFrame
    public void <init>(android.content.Context)
    {
        com.fsck.k9.view.NonLockingScrollView r0;
        android.content.Context $r1;
        java.util.ArrayList $r2;
        android.graphics.Rect $r3;

        r0 := @this: com.fsck.k9.view.NonLockingScrollView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.ScrollView: void <init>(android.content.Context)>($r1);

        r0.<com.fsck.k9.view.NonLockingScrollView: boolean mInCustomDrag> = 0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.fsck.k9.view.NonLockingScrollView: java.util.List mChildrenNeedingAllTouches> = $r2;

        r0.<com.fsck.k9.view.NonLockingScrollView: boolean mSkipWebViewScroll> = 1;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<com.fsck.k9.view.NonLockingScrollView: android.graphics.Rect sHitFrame> = $r3;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.fsck.k9.view.NonLockingScrollView r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        java.util.ArrayList $r3;
        android.graphics.Rect $r4;

        r0 := @this: com.fsck.k9.view.NonLockingScrollView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.ScrollView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        r0.<com.fsck.k9.view.NonLockingScrollView: boolean mInCustomDrag> = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.fsck.k9.view.NonLockingScrollView: java.util.List mChildrenNeedingAllTouches> = $r3;

        r0.<com.fsck.k9.view.NonLockingScrollView: boolean mSkipWebViewScroll> = 1;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<com.fsck.k9.view.NonLockingScrollView: android.graphics.Rect sHitFrame> = $r4;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.fsck.k9.view.NonLockingScrollView r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        java.util.ArrayList $r3;
        android.graphics.Rect $r4;

        r0 := @this: com.fsck.k9.view.NonLockingScrollView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.widget.ScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        r0.<com.fsck.k9.view.NonLockingScrollView: boolean mInCustomDrag> = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.fsck.k9.view.NonLockingScrollView: java.util.List mChildrenNeedingAllTouches> = $r3;

        r0.<com.fsck.k9.view.NonLockingScrollView: boolean mSkipWebViewScroll> = 1;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<com.fsck.k9.view.NonLockingScrollView: android.graphics.Rect sHitFrame> = $r4;

        return;
    }
    private static boolean canViewReceivePointerEvents(android.view.View)
    {
        android.view.View $r0;
        int $i0;
        android.view.animation.Animation $r1;

        $r0 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r0.<android.view.View: int getVisibility()>();

        if $i0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<android.view.View: android.view.animation.Animation getAnimation()>();

        if $r1 == null goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    private void excludeChildrenFromInterceptions(android.view.View)
    {
        com.fsck.k9.view.NonLockingScrollView r0;
        android.view.View $r1;
        boolean $z0;
        java.util.List $r2;
        android.view.ViewGroup r3;
        int $i0, i1;

        r0 := @this: com.fsck.k9.view.NonLockingScrollView;

        $r1 := @parameter0: android.view.View;

        $z0 = $r1 instanceof android.webkit.WebView;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.fsck.k9.view.NonLockingScrollView: java.util.List mChildrenNeedingAllTouches>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;

     label1:
        $z0 = $r1 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label3;

        r3 = (android.view.ViewGroup) $r1;

        $i0 = virtualinvoke r3.<android.view.ViewGroup: int getChildCount()>();

        i1 = 0;

     label2:
        if i1 >= $i0 goto label3;

        $r1 = virtualinvoke r3.<android.view.ViewGroup: android.view.View getChildAt(int)>(i1);

        specialinvoke r0.<com.fsck.k9.view.NonLockingScrollView: void excludeChildrenFromInterceptions(android.view.View)>($r1);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }
    private int getActionMasked(android.view.MotionEvent)
    {
        com.fsck.k9.view.NonLockingScrollView r0;
        android.view.MotionEvent $r1;
        int $i0;

        r0 := @this: com.fsck.k9.view.NonLockingScrollView;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        $i0 = $i0 & 255;

        return $i0;
    }
    private boolean isEventOverChild(android.view.MotionEvent, java.util.List)
    {
        com.fsck.k9.view.NonLockingScrollView r0;
        android.view.MotionEvent $r1;
        java.util.List r2;
        float f0, f1, $f2;
        int $i0, $i1;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        android.view.View r5;
        android.graphics.Rect $r6;

        r0 := @this: com.fsck.k9.view.NonLockingScrollView;

        $r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: java.util.List;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getActionIndex()>();

        f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX(int)>($i0);

        $i1 = virtualinvoke r0.<com.fsck.k9.view.NonLockingScrollView: int getScrollX()>();

        f1 = (float) $i1;

        f0 = f0 + f1;

        f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY(int)>($i0);

        $i0 = virtualinvoke r0.<com.fsck.k9.view.NonLockingScrollView: int getScrollY()>();

        $f2 = (float) $i0;

        f1 = f1 + $f2;

        $r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.view.View) $r4;

        $z0 = staticinvoke <com.fsck.k9.view.NonLockingScrollView: boolean canViewReceivePointerEvents(android.view.View)>(r5);

        if $z0 == 0 goto label1;

        $r6 = r0.<com.fsck.k9.view.NonLockingScrollView: android.graphics.Rect sHitFrame>;

        virtualinvoke r5.<android.view.View: void getHitRect(android.graphics.Rect)>($r6);

        $r6 = r0.<com.fsck.k9.view.NonLockingScrollView: android.graphics.Rect sHitFrame>;

        $i0 = (int) f0;

        $i1 = (int) f1;

        $z0 = virtualinvoke $r6.<android.graphics.Rect: boolean contains(int,int)>($i0, $i1);

        if $z0 == 0 goto label1;

        return 1;

     label2:
        return 0;
    }
    protected void onFinishInflate()
    {
        com.fsck.k9.view.NonLockingScrollView r0;

        r0 := @this: com.fsck.k9.view.NonLockingScrollView;

        specialinvoke r0.<android.widget.ScrollView: void onFinishInflate()>();

        specialinvoke r0.<com.fsck.k9.view.NonLockingScrollView: void excludeChildrenFromInterceptions(android.view.View)>(r0);

        return;
    }
    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        com.fsck.k9.view.NonLockingScrollView r0;
        android.view.MotionEvent $r1;
        boolean $z0;
        int $i0;
        java.util.List $r2;

        r0 := @this: com.fsck.k9.view.NonLockingScrollView;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = specialinvoke r0.<com.fsck.k9.view.NonLockingScrollView: int getActionMasked(android.view.MotionEvent)>($r1);

        if $i0 != 1 goto label2;

        $z0 = 1;

     label1:
        if $z0 == 0 goto label3;

        $z0 = r0.<com.fsck.k9.view.NonLockingScrollView: boolean mInCustomDrag>;

        if $z0 == 0 goto label3;

        r0.<com.fsck.k9.view.NonLockingScrollView: boolean mInCustomDrag> = 0;

        virtualinvoke r0.<com.fsck.k9.view.NonLockingScrollView: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        return 1;

     label2:
        $z0 = 0;

        goto label1;

     label3:
        $z0 = r0.<com.fsck.k9.view.NonLockingScrollView: boolean mInCustomDrag>;

        if $z0 != 0 goto label4;

        $r2 = r0.<com.fsck.k9.view.NonLockingScrollView: java.util.List mChildrenNeedingAllTouches>;

        $z0 = specialinvoke r0.<com.fsck.k9.view.NonLockingScrollView: boolean isEventOverChild(android.view.MotionEvent,java.util.List)>($r1, $r2);

        if $z0 != 0 goto label4;

        $z0 = specialinvoke r0.<android.widget.ScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)>($r1);

        return $z0;

     label4:
        $z0 = specialinvoke r0.<android.widget.ScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)>($r1);

        r0.<com.fsck.k9.view.NonLockingScrollView: boolean mInCustomDrag> = $z0;

        $z0 = r0.<com.fsck.k9.view.NonLockingScrollView: boolean mInCustomDrag>;

        if $z0 == 0 goto label5;

        virtualinvoke r0.<com.fsck.k9.view.NonLockingScrollView: boolean onTouchEvent(android.view.MotionEvent)>($r1);

     label5:
        return 0;
    }
    public void requestChildFocus(android.view.View, android.view.View)
    {
        com.fsck.k9.view.NonLockingScrollView r0;
        android.view.View $r1, $r2;
        boolean $z0;
        android.graphics.Rect $r3;
        android.view.ViewParent $r4;

        r0 := @this: com.fsck.k9.view.NonLockingScrollView;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        $z0 = r0.<com.fsck.k9.view.NonLockingScrollView: boolean mSkipWebViewScroll>;

        if $z0 == 0 goto label1;

        $z0 = $r2 instanceof com.fsck.k9.view.MessageWebView;

        if $z0 == 0 goto label1;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        $z0 = virtualinvoke $r2.<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect)>($r3);

        if $z0 == 0 goto label1;

        r0.<com.fsck.k9.view.NonLockingScrollView: boolean mSkipWebViewScroll> = 0;

        specialinvoke r0.<android.widget.ScrollView: void requestChildFocus(android.view.View,android.view.View)>($r1, $r1);

        $r4 = virtualinvoke r0.<com.fsck.k9.view.NonLockingScrollView: android.view.ViewParent getParent()>();

        if $r4 == null goto label2;

        interfaceinvoke $r4.<android.view.ViewParent: void requestChildFocus(android.view.View,android.view.View)>(r0, $r2);

        return;

     label1:
        specialinvoke r0.<android.widget.ScrollView: void requestChildFocus(android.view.View,android.view.View)>($r1, $r2);

     label2:
        return;
    }
