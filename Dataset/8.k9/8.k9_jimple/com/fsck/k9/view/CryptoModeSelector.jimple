com.fsck.k9.view.CryptoModeSelector extends android.widget.FrameLayout implements android.widget.SeekBar$OnSeekBarChangeListener
private static final android.animation.ArgbEvaluator ARGB_EVALUATOR
public static final float CROSSFADE_DIVISOR_2
public static final float CROSSFADE_DIVISOR_3
public static final float CROSSFADE_DIVISOR_4
public static final int CROSSFADE_THRESH_2_HIGH
public static final int CROSSFADE_THRESH_2_LOW
public static final int CROSSFADE_THRESH_3_HIGH
public static final int CROSSFADE_THRESH_3_LOW
public static final int CROSSFADE_THRESH_4_LOW
private com.fsck.k9.view.CryptoModeSelector$CryptoStatusSelectedListener cryptoStatusListener
private int currentCryptoStatus
private android.animation.ObjectAnimator currentSeekbarAnim
private android.widget.ImageView modeIcon2
private android.widget.ImageView modeIcon3
private android.widget.ImageView modeIcon4
private android.widget.SeekBar seekbar
    static void <clinit>()
    {
        android.animation.ArgbEvaluator $r0;

        $r0 = new android.animation.ArgbEvaluator;

        specialinvoke $r0.<android.animation.ArgbEvaluator: void <init>()>();

        <com.fsck.k9.view.CryptoModeSelector: android.animation.ArgbEvaluator ARGB_EVALUATOR> = $r0;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.fsck.k9.view.CryptoModeSelector r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        r0 := @this: com.fsck.k9.view.CryptoModeSelector;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        virtualinvoke r0.<com.fsck.k9.view.CryptoModeSelector: void init()>();

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.fsck.k9.view.CryptoModeSelector r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;

        r0 := @this: com.fsck.k9.view.CryptoModeSelector;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        virtualinvoke r0.<com.fsck.k9.view.CryptoModeSelector: void init()>();

        return;
    }
    private void animateSnapTo(int)
    {
        com.fsck.k9.view.CryptoModeSelector r0;
        int $i0, $i1;
        android.animation.ObjectAnimator $r1;
        android.widget.SeekBar $r2, $r4;
        int[] $r3;

        r0 := @this: com.fsck.k9.view.CryptoModeSelector;

        $i0 := @parameter0: int;

        $r1 = r0.<com.fsck.k9.view.CryptoModeSelector: android.animation.ObjectAnimator currentSeekbarAnim>;

        if $r1 == null goto label1;

        $r1 = r0.<com.fsck.k9.view.CryptoModeSelector: android.animation.ObjectAnimator currentSeekbarAnim>;

        virtualinvoke $r1.<android.animation.ObjectAnimator: void cancel()>();

     label1:
        $r2 = r0.<com.fsck.k9.view.CryptoModeSelector: android.widget.SeekBar seekbar>;

        $r3 = newarray (int)[2];

        $r4 = r0.<com.fsck.k9.view.CryptoModeSelector: android.widget.SeekBar seekbar>;

        $i1 = virtualinvoke $r4.<android.widget.SeekBar: int getProgress()>();

        $r3[0] = $i1;

        $r3[1] = $i0;

        $r1 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[])>($r2, "progress", $r3);

        r0.<com.fsck.k9.view.CryptoModeSelector: android.animation.ObjectAnimator currentSeekbarAnim> = $r1;

        $r1 = r0.<com.fsck.k9.view.CryptoModeSelector: android.animation.ObjectAnimator currentSeekbarAnim>;

        virtualinvoke $r1.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(150L);

        $r1 = r0.<com.fsck.k9.view.CryptoModeSelector: android.animation.ObjectAnimator currentSeekbarAnim>;

        virtualinvoke $r1.<android.animation.ObjectAnimator: void start()>();

        return;
    }
    public static int crossfadeColor(int, int, float)
    {
        int $i0, $i1;
        float $f0;
        android.animation.ArgbEvaluator $r0;
        java.lang.Integer $r1, $r2;
        java.lang.Object $r3;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $f0 := @parameter2: float;

        $r0 = <com.fsck.k9.view.CryptoModeSelector: android.animation.ArgbEvaluator ARGB_EVALUATOR>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3 = virtualinvoke $r0.<android.animation.ArgbEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>($f0, $r1, $r2);

        $r1 = (java.lang.Integer) $r3;

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        return $i0;
    }
    public void init()
    {
        com.fsck.k9.view.CryptoModeSelector r0;
        android.content.Context $r1;
        android.view.View $r2;
        android.widget.SeekBar $r3, $r5;
        android.widget.ImageView $r4;
        int $i0;

        r0 := @this: com.fsck.k9.view.CryptoModeSelector;

        $r1 = virtualinvoke r0.<com.fsck.k9.view.CryptoModeSelector: android.content.Context getContext()>();

        staticinvoke <com.fsck.k9.view.CryptoModeSelector: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)>($r1, 2130903059, r0);

        $r2 = virtualinvoke r0.<com.fsck.k9.view.CryptoModeSelector: android.view.View findViewById(int)>(2131492975);

        $r3 = (android.widget.SeekBar) $r2;

        r0.<com.fsck.k9.view.CryptoModeSelector: android.widget.SeekBar seekbar> = $r3;

        $r2 = virtualinvoke r0.<com.fsck.k9.view.CryptoModeSelector: android.view.View findViewById(int)>(2131492972);

        $r4 = (android.widget.ImageView) $r2;

        r0.<com.fsck.k9.view.CryptoModeSelector: android.widget.ImageView modeIcon2> = $r4;

        $r2 = virtualinvoke r0.<com.fsck.k9.view.CryptoModeSelector: android.view.View findViewById(int)>(2131492973);

        $r4 = (android.widget.ImageView) $r2;

        r0.<com.fsck.k9.view.CryptoModeSelector: android.widget.ImageView modeIcon3> = $r4;

        $r2 = virtualinvoke r0.<com.fsck.k9.view.CryptoModeSelector: android.view.View findViewById(int)>(2131492974);

        $r4 = (android.widget.ImageView) $r2;

        r0.<com.fsck.k9.view.CryptoModeSelector: android.widget.ImageView modeIcon4> = $r4;

        $r3 = r0.<com.fsck.k9.view.CryptoModeSelector: android.widget.SeekBar seekbar>;

        virtualinvoke $r3.<android.widget.SeekBar: void setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener)>(r0);

        $r3 = r0.<com.fsck.k9.view.CryptoModeSelector: android.widget.SeekBar seekbar>;

        $r5 = r0.<com.fsck.k9.view.CryptoModeSelector: android.widget.SeekBar seekbar>;

        $i0 = virtualinvoke $r5.<android.widget.SeekBar: int getProgress()>();

        virtualinvoke r0.<com.fsck.k9.view.CryptoModeSelector: void onProgressChanged(android.widget.SeekBar,int,boolean)>($r3, $i0, 0);

        return;
    }
    public void onProgressChanged(android.widget.SeekBar, int, boolean)
    {
        com.fsck.k9.view.CryptoModeSelector r0;
        android.widget.SeekBar $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        android.content.Context $r2;
        float $f0, $f1, $f2;
        byte $b3;
        android.widget.ImageView $r3;
        android.graphics.PorterDuff$Mode $r4;

        r0 := @this: com.fsck.k9.view.CryptoModeSelector;

        $r1 := @parameter0: android.widget.SeekBar;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $r2 = virtualinvoke r0.<com.fsck.k9.view.CryptoModeSelector: android.content.Context getContext()>();

        $i1 = staticinvoke <com.fsck.k9.view.ThemeUtils: int getStyledColor(android.content.Context,int)>($r2, 2130772032);

        if $i0 <= 50 goto label4;

        if $i0 >= 150 goto label4;

        $i2 = $i0 + -50;

        $f0 = (float) $i2;

        $f0 = $f0 / 50.0F;

        $b3 = $f0 cmpl 1.0F;

        if $b3 <= 0 goto label1;

        $f0 = 2.0F - $f0;

     label1:
        if $i0 <= 150 goto label5;

        if $i0 >= 250 goto label5;

        $i2 = $i0 + -150;

        $f1 = (float) $i2;

        $f1 = $f1 / 50.0F;

        $b3 = $f1 cmpl 1.0F;

        if $b3 <= 0 goto label2;

        $f1 = 2.0F - $f1;

     label2:
        if $i0 <= 250 goto label6;

        $i0 = $i0 + -250;

        $f2 = (float) $i0;

        $f2 = $f2 / 50.0F;

     label3:
        $r2 = virtualinvoke r0.<com.fsck.k9.view.CryptoModeSelector: android.content.Context getContext()>();

        $i0 = staticinvoke <com.fsck.k9.view.ThemeUtils: int getStyledColor(android.content.Context,int)>($r2, 2130772031);

        $i0 = staticinvoke <com.fsck.k9.view.CryptoModeSelector: int crossfadeColor(int,int,float)>($i1, $i0, $f0);

        $r3 = r0.<com.fsck.k9.view.CryptoModeSelector: android.widget.ImageView modeIcon2>;

        $r4 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_ATOP>;

        virtualinvoke $r3.<android.widget.ImageView: void setColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r4);

        $r2 = virtualinvoke r0.<com.fsck.k9.view.CryptoModeSelector: android.content.Context getContext()>();

        $i0 = staticinvoke <com.fsck.k9.view.ThemeUtils: int getStyledColor(android.content.Context,int)>($r2, 2130772028);

        $i0 = staticinvoke <com.fsck.k9.view.CryptoModeSelector: int crossfadeColor(int,int,float)>($i1, $i0, $f1);

        $r3 = r0.<com.fsck.k9.view.CryptoModeSelector: android.widget.ImageView modeIcon3>;

        $r4 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_ATOP>;

        virtualinvoke $r3.<android.widget.ImageView: void setColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r4);

        $r2 = virtualinvoke r0.<com.fsck.k9.view.CryptoModeSelector: android.content.Context getContext()>();

        $i0 = staticinvoke <com.fsck.k9.view.ThemeUtils: int getStyledColor(android.content.Context,int)>($r2, 2130772030);

        $i0 = staticinvoke <com.fsck.k9.view.CryptoModeSelector: int crossfadeColor(int,int,float)>($i1, $i0, $f2);

        $r3 = r0.<com.fsck.k9.view.CryptoModeSelector: android.widget.ImageView modeIcon4>;

        $r4 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_ATOP>;

        virtualinvoke $r3.<android.widget.ImageView: void setColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r4);

        return;

     label4:
        $f0 = 0.0F;

        goto label1;

     label5:
        $f1 = 0.0F;

        goto label2;

     label6:
        $f2 = 0.0F;

        goto label3;
    }
    public void onStartTrackingTouch(android.widget.SeekBar)
    {
        com.fsck.k9.view.CryptoModeSelector r0;
        android.widget.SeekBar $r1;

        r0 := @this: com.fsck.k9.view.CryptoModeSelector;

        $r1 := @parameter0: android.widget.SeekBar;

        return;
    }
    public void onStopTrackingTouch(android.widget.SeekBar)
    {
        com.fsck.k9.view.CryptoModeSelector r0;
        android.widget.SeekBar $r1;
        int $i0;
        byte b1;
        com.fsck.k9.view.CryptoModeSelector$CryptoStatusSelectedListener $r2;

        r0 := @this: com.fsck.k9.view.CryptoModeSelector;

        $r1 := @parameter0: android.widget.SeekBar;

        $r1 = r0.<com.fsck.k9.view.CryptoModeSelector: android.widget.SeekBar seekbar>;

        $i0 = virtualinvoke $r1.<android.widget.SeekBar: int getProgress()>();

        if $i0 >= 50 goto label2;

        specialinvoke r0.<com.fsck.k9.view.CryptoModeSelector: void animateSnapTo(int)>(0);

        b1 = 0;

     label1:
        $i0 = r0.<com.fsck.k9.view.CryptoModeSelector: int currentCryptoStatus>;

        if $i0 == b1 goto label5;

        r0.<com.fsck.k9.view.CryptoModeSelector: int currentCryptoStatus> = b1;

        $r2 = r0.<com.fsck.k9.view.CryptoModeSelector: com.fsck.k9.view.CryptoModeSelector$CryptoStatusSelectedListener cryptoStatusListener>;

        interfaceinvoke $r2.<com.fsck.k9.view.CryptoModeSelector$CryptoStatusSelectedListener: void onCryptoStatusSelected(int)>(b1);

        return;

     label2:
        if $i0 >= 150 goto label3;

        specialinvoke r0.<com.fsck.k9.view.CryptoModeSelector: void animateSnapTo(int)>(100);

        b1 = 1;

        goto label1;

     label3:
        if $i0 >= 250 goto label4;

        specialinvoke r0.<com.fsck.k9.view.CryptoModeSelector: void animateSnapTo(int)>(200);

        b1 = 2;

        goto label1;

     label4:
        specialinvoke r0.<com.fsck.k9.view.CryptoModeSelector: void animateSnapTo(int)>(300);

        b1 = 3;

        goto label1;

     label5:
        return;
    }
    public void setCryptoStatus(int)
    {
        com.fsck.k9.view.CryptoModeSelector r0;
        int $i0;
        android.widget.SeekBar $r1;

        r0 := @this: com.fsck.k9.view.CryptoModeSelector;

        $i0 := @parameter0: int;

        r0.<com.fsck.k9.view.CryptoModeSelector: int currentCryptoStatus> = $i0;

        if $i0 != 0 goto label1;

        $r1 = r0.<com.fsck.k9.view.CryptoModeSelector: android.widget.SeekBar seekbar>;

        virtualinvoke $r1.<android.widget.SeekBar: void setProgress(int)>(0);

        return;

     label1:
        if $i0 != 1 goto label2;

        $r1 = r0.<com.fsck.k9.view.CryptoModeSelector: android.widget.SeekBar seekbar>;

        virtualinvoke $r1.<android.widget.SeekBar: void setProgress(int)>(100);

        return;

     label2:
        if $i0 != 2 goto label3;

        $r1 = r0.<com.fsck.k9.view.CryptoModeSelector: android.widget.SeekBar seekbar>;

        virtualinvoke $r1.<android.widget.SeekBar: void setProgress(int)>(200);

        return;

     label3:
        $r1 = r0.<com.fsck.k9.view.CryptoModeSelector: android.widget.SeekBar seekbar>;

        virtualinvoke $r1.<android.widget.SeekBar: void setProgress(int)>(300);

        return;
    }
    public void setCryptoStatusListener(com.fsck.k9.view.CryptoModeSelector$CryptoStatusSelectedListener)
    {
        com.fsck.k9.view.CryptoModeSelector r0;
        com.fsck.k9.view.CryptoModeSelector$CryptoStatusSelectedListener $r1;

        r0 := @this: com.fsck.k9.view.CryptoModeSelector;

        $r1 := @parameter0: com.fsck.k9.view.CryptoModeSelector$CryptoStatusSelectedListener;

        r0.<com.fsck.k9.view.CryptoModeSelector: com.fsck.k9.view.CryptoModeSelector$CryptoStatusSelectedListener cryptoStatusListener> = $r1;

        return;
    }
