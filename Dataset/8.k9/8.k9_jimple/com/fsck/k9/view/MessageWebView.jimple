com.fsck.k9.view.MessageWebView extends com.fsck.k9.view.RigidWebView
    public void <init>(android.content.Context)
    {
        com.fsck.k9.view.MessageWebView r0;
        android.content.Context $r1;

        r0 := @this: com.fsck.k9.view.MessageWebView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.fsck.k9.view.RigidWebView: void <init>(android.content.Context)>($r1);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.fsck.k9.view.MessageWebView r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        r0 := @this: com.fsck.k9.view.MessageWebView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.fsck.k9.view.RigidWebView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.fsck.k9.view.MessageWebView r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;

        r0 := @this: com.fsck.k9.view.MessageWebView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<com.fsck.k9.view.RigidWebView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        return;
    }
    private void disableDisplayZoomControls()
    {
        com.fsck.k9.view.MessageWebView r0;
        boolean $z0, $z1;
        android.content.Context $r1;
        android.content.pm.PackageManager $r2;
        android.webkit.WebSettings $r3;

        r0 := @this: com.fsck.k9.view.MessageWebView;

        $z0 = 1;

        $r1 = virtualinvoke r0.<com.fsck.k9.view.MessageWebView: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z1 = virtualinvoke $r2.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.hardware.touchscreen.multitouch");

        if $z1 != 0 goto label1;

        $z1 = virtualinvoke $r2.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.hardware.faketouch.multitouch.distinct");

        if $z1 == 0 goto label4;

     label1:
        $z1 = 1;

     label2:
        $r3 = virtualinvoke r0.<com.fsck.k9.view.MessageWebView: android.webkit.WebSettings getSettings()>();

        if $z1 != 0 goto label5;

     label3:
        virtualinvoke $r3.<android.webkit.WebSettings: void setDisplayZoomControls(boolean)>($z0);

        return;

     label4:
        $z1 = 0;

        goto label2;

     label5:
        $z0 = 0;

        goto label3;
    }
    private void setHtmlContent(java.lang.String)
    {
        com.fsck.k9.view.MessageWebView r0;
        java.lang.String $r1;

        r0 := @this: com.fsck.k9.view.MessageWebView;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.fsck.k9.view.MessageWebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("about:blank", $r1, "text/html", "utf-8", null);

        virtualinvoke r0.<com.fsck.k9.view.MessageWebView: void resumeTimers()>();

        return;
    }
    private void setWebViewClient(com.fsck.k9.mailstore.AttachmentResolver, com.fsck.k9.view.MessageWebView$OnPageFinishedListener)
    {
        com.fsck.k9.view.MessageWebView r0;
        com.fsck.k9.mailstore.AttachmentResolver $r1;
        com.fsck.k9.view.MessageWebView$OnPageFinishedListener $r2;
        com.fsck.k9.view.K9WebViewClient $r3;

        r0 := @this: com.fsck.k9.view.MessageWebView;

        $r1 := @parameter0: com.fsck.k9.mailstore.AttachmentResolver;

        $r2 := @parameter1: com.fsck.k9.view.MessageWebView$OnPageFinishedListener;

        $r3 = staticinvoke <com.fsck.k9.view.K9WebViewClient: com.fsck.k9.view.K9WebViewClient newInstance(com.fsck.k9.mailstore.AttachmentResolver)>($r1);

        if $r2 == null goto label1;

        virtualinvoke $r3.<com.fsck.k9.view.K9WebViewClient: void setOnPageFinishedListener(com.fsck.k9.view.MessageWebView$OnPageFinishedListener)>($r2);

     label1:
        virtualinvoke r0.<com.fsck.k9.view.MessageWebView: void setWebViewClient(android.webkit.WebViewClient)>($r3);

        return;
    }
    public void blockNetworkData(boolean)
    {
        com.fsck.k9.view.MessageWebView r0;
        boolean $z0;
        android.webkit.WebSettings $r1;

        r0 := @this: com.fsck.k9.view.MessageWebView;

        $z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<com.fsck.k9.view.MessageWebView: android.webkit.WebSettings getSettings()>();

        virtualinvoke $r1.<android.webkit.WebSettings: void setBlockNetworkLoads(boolean)>($z0);

        return;
    }
    public void configure()
    {
        com.fsck.k9.view.MessageWebView r0;
        com.fsck.k9.K9$Theme $r1, $r2;
        android.webkit.WebSettings $r3;
        boolean $z0;
        android.webkit.WebSettings$RenderPriority $r4;
        android.webkit.WebSettings$LayoutAlgorithm $r5;
        com.fsck.k9.FontSizes $r6;
        int $i0;

        r0 := @this: com.fsck.k9.view.MessageWebView;

        virtualinvoke r0.<com.fsck.k9.view.MessageWebView: void setVerticalScrollBarEnabled(boolean)>(1);

        virtualinvoke r0.<com.fsck.k9.view.MessageWebView: void setVerticalScrollbarOverlay(boolean)>(1);

        virtualinvoke r0.<com.fsck.k9.view.MessageWebView: void setScrollBarStyle(int)>(0);

        virtualinvoke r0.<com.fsck.k9.view.MessageWebView: void setLongClickable(boolean)>(1);

        $r2 = staticinvoke <com.fsck.k9.K9: com.fsck.k9.K9$Theme getK9MessageViewTheme()>();

        $r1 = <com.fsck.k9.K9$Theme: com.fsck.k9.K9$Theme DARK>;

        if $r2 != $r1 goto label1;

        virtualinvoke r0.<com.fsck.k9.view.MessageWebView: void setBackgroundColor(int)>(-16777216);

     label1:
        $r3 = virtualinvoke r0.<com.fsck.k9.view.MessageWebView: android.webkit.WebSettings getSettings()>();

        virtualinvoke $r3.<android.webkit.WebSettings: void setCacheMode(int)>(2);

        virtualinvoke $r3.<android.webkit.WebSettings: void setSupportZoom(boolean)>(1);

        virtualinvoke $r3.<android.webkit.WebSettings: void setBuiltInZoomControls(boolean)>(1);

        virtualinvoke $r3.<android.webkit.WebSettings: void setUseWideViewPort(boolean)>(1);

        $z0 = staticinvoke <com.fsck.k9.K9: boolean autofitWidth()>();

        if $z0 == 0 goto label2;

        virtualinvoke $r3.<android.webkit.WebSettings: void setLoadWithOverviewMode(boolean)>(1);

     label2:
        specialinvoke r0.<com.fsck.k9.view.MessageWebView: void disableDisplayZoomControls()>();

        virtualinvoke $r3.<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>(0);

        virtualinvoke $r3.<android.webkit.WebSettings: void setLoadsImagesAutomatically(boolean)>(1);

        $r4 = <android.webkit.WebSettings$RenderPriority: android.webkit.WebSettings$RenderPriority HIGH>;

        virtualinvoke $r3.<android.webkit.WebSettings: void setRenderPriority(android.webkit.WebSettings$RenderPriority)>($r4);

        $r5 = <android.webkit.WebSettings$LayoutAlgorithm: android.webkit.WebSettings$LayoutAlgorithm NARROW_COLUMNS>;

        virtualinvoke $r3.<android.webkit.WebSettings: void setLayoutAlgorithm(android.webkit.WebSettings$LayoutAlgorithm)>($r5);

        virtualinvoke r0.<com.fsck.k9.view.MessageWebView: void setOverScrollMode(int)>(2);

        $r6 = staticinvoke <com.fsck.k9.K9: com.fsck.k9.FontSizes getFontSizes()>();

        $i0 = virtualinvoke $r6.<com.fsck.k9.FontSizes: int getMessageViewContentAsPercent()>();

        virtualinvoke $r3.<android.webkit.WebSettings: void setTextZoom(int)>($i0);

        virtualinvoke r0.<com.fsck.k9.view.MessageWebView: void blockNetworkData(boolean)>(1);

        return;
    }
    public void displayHtmlContentWithInlineAttachments(java.lang.String, com.fsck.k9.mailstore.AttachmentResolver, com.fsck.k9.view.MessageWebView$OnPageFinishedListener)
    {
        com.fsck.k9.view.MessageWebView r0;
        java.lang.String $r1;
        com.fsck.k9.mailstore.AttachmentResolver $r2;
        com.fsck.k9.view.MessageWebView$OnPageFinishedListener $r3;

        r0 := @this: com.fsck.k9.view.MessageWebView;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.fsck.k9.mailstore.AttachmentResolver;

        $r3 := @parameter2: com.fsck.k9.view.MessageWebView$OnPageFinishedListener;

        specialinvoke r0.<com.fsck.k9.view.MessageWebView: void setWebViewClient(com.fsck.k9.mailstore.AttachmentResolver,com.fsck.k9.view.MessageWebView$OnPageFinishedListener)>($r2, $r3);

        specialinvoke r0.<com.fsck.k9.view.MessageWebView: void setHtmlContent(java.lang.String)>($r1);

        return;
    }
    public void emulateShiftHeld()
    {
        com.fsck.k9.view.MessageWebView r0;
        java.lang.Exception r1;
        android.view.KeyEvent r2;
        android.content.Context $r3;
        android.widget.Toast $r4;

        r0 := @this: com.fsck.k9.view.MessageWebView;

        r2 = new android.view.KeyEvent;

     label1:
        specialinvoke r2.<android.view.KeyEvent: void <init>(long,long,int,int,int,int)>(0L, 0L, 0, 59, 0, 0);

        virtualinvoke r2.<android.view.KeyEvent: boolean dispatch(android.view.KeyEvent$Callback,android.view.KeyEvent$DispatcherState,java.lang.Object)>(r0, null, null);

        $r3 = virtualinvoke r0.<com.fsck.k9.view.MessageWebView: android.content.Context getContext()>();

        $r4 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>($r3, 2131100290, 0);

        virtualinvoke $r4.<android.widget.Toast: void show()>();

     label2:
        return;

     label3:
        r1 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("k9", "Exception in emulateShiftHeld()", r1);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
