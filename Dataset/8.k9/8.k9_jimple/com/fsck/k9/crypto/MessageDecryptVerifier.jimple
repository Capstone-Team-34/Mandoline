com.fsck.k9.crypto.MessageDecryptVerifier extends java.lang.Object
private static final java.lang.String APPLICATION_PGP
private static final java.lang.String APPLICATION_PGP_ENCRYPTED
private static final java.lang.String APPLICATION_PGP_SIGNATURE
private static final java.lang.String MULTIPART_ENCRYPTED
private static final java.lang.String MULTIPART_SIGNED
public static final java.lang.String PGP_INLINE_SIGNED_START_MARKER
public static final java.lang.String PGP_INLINE_START_MARKER
private static final java.lang.String PROTOCOL_PARAMETER
public static final int TEXT_LENGTH_FOR_INLINE_CHECK
private static final java.lang.String TEXT_PLAIN
    public void <init>()
    {
        com.fsck.k9.crypto.MessageDecryptVerifier r0;

        r0 := @this: com.fsck.k9.crypto.MessageDecryptVerifier;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static java.util.List findEncryptedParts(com.fsck.k9.mail.Part)
    {
        com.fsck.k9.mail.Part $r0;
        java.util.ArrayList r1;
        java.util.Stack r2;
        boolean $z0;
        java.lang.Object $r3;
        com.fsck.k9.mail.Body $r4;
        com.fsck.k9.mail.Multipart r5;
        int $i0;
        com.fsck.k9.mail.BodyPart $r6;

        $r0 := @parameter0: com.fsck.k9.mail.Part;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        r2 = new java.util.Stack;

        specialinvoke r2.<java.util.Stack: void <init>()>();

        virtualinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r0);

     label1:
        $z0 = virtualinvoke r2.<java.util.Stack: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $r3 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>();

        $r0 = (com.fsck.k9.mail.Part) $r3;

        $r4 = interfaceinvoke $r0.<com.fsck.k9.mail.Part: com.fsck.k9.mail.Body getBody()>();

        $z0 = staticinvoke <com.fsck.k9.crypto.MessageDecryptVerifier: boolean isPartMultipartEncrypted(com.fsck.k9.mail.Part)>($r0);

        if $z0 == 0 goto label2;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r0);

        goto label1;

     label2:
        $z0 = $r4 instanceof com.fsck.k9.mail.Multipart;

        if $z0 == 0 goto label1;

        r5 = (com.fsck.k9.mail.Multipart) $r4;

        $i0 = virtualinvoke r5.<com.fsck.k9.mail.Multipart: int getCount()>();

        $i0 = $i0 + -1;

     label3:
        if $i0 < 0 goto label1;

        $r6 = virtualinvoke r5.<com.fsck.k9.mail.Multipart: com.fsck.k9.mail.BodyPart getBodyPart(int)>($i0);

        virtualinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r6);

        $i0 = $i0 + -1;

        goto label3;

     label4:
        return r1;
    }
    public static java.util.List findPgpInlineParts(com.fsck.k9.mail.Part)
    {
        com.fsck.k9.mail.Part $r0;
        java.util.ArrayList r1;
        java.util.Stack r2;
        boolean $z0;
        java.lang.Object $r3;
        com.fsck.k9.mail.Body $r4;
        com.fsck.k9.mail.Multipart r5;
        int $i0;
        com.fsck.k9.mail.BodyPart $r6;

        $r0 := @parameter0: com.fsck.k9.mail.Part;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        r2 = new java.util.Stack;

        specialinvoke r2.<java.util.Stack: void <init>()>();

        virtualinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r0);

     label1:
        $z0 = virtualinvoke r2.<java.util.Stack: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $r3 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>();

        $r0 = (com.fsck.k9.mail.Part) $r3;

        $r4 = interfaceinvoke $r0.<com.fsck.k9.mail.Part: com.fsck.k9.mail.Body getBody()>();

        $z0 = staticinvoke <com.fsck.k9.crypto.MessageDecryptVerifier: boolean isPartPgpInlineEncryptedOrSigned(com.fsck.k9.mail.Part)>($r0);

        if $z0 == 0 goto label2;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r0);

        goto label1;

     label2:
        $z0 = $r4 instanceof com.fsck.k9.mail.Multipart;

        if $z0 == 0 goto label1;

        r5 = (com.fsck.k9.mail.Multipart) $r4;

        $i0 = virtualinvoke r5.<com.fsck.k9.mail.Multipart: int getCount()>();

        $i0 = $i0 + -1;

     label3:
        if $i0 < 0 goto label1;

        $r6 = virtualinvoke r5.<com.fsck.k9.mail.Multipart: com.fsck.k9.mail.BodyPart getBodyPart(int)>($i0);

        virtualinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r6);

        $i0 = $i0 + -1;

        goto label3;

     label4:
        return r1;
    }
    public static com.fsck.k9.mail.Part findPrimaryEncryptedOrSignedPart(com.fsck.k9.mail.Part, java.util.List)
    {
        java.util.List r0;
        com.fsck.k9.mail.Part r1;
        boolean $z0;
        com.fsck.k9.mail.Body $r2;
        com.fsck.k9.mail.Multipart r3;
        com.fsck.k9.mail.BodyPart $r4, $r5;
        int i0, $i1;

        r1 := @parameter0: com.fsck.k9.mail.Part;

        r0 := @parameter1: java.util.List;

        $z0 = staticinvoke <com.fsck.k9.crypto.MessageDecryptVerifier: boolean isPartEncryptedOrSigned(com.fsck.k9.mail.Part)>(r1);

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $r2 = interfaceinvoke r1.<com.fsck.k9.mail.Part: com.fsck.k9.mail.Body getBody()>();

        $z0 = interfaceinvoke r1.<com.fsck.k9.mail.Part: boolean isMimeType(java.lang.String)>("multipart/mixed");

        if $z0 == 0 goto label4;

        $z0 = $r2 instanceof com.fsck.k9.mail.Multipart;

        if $z0 == 0 goto label4;

        r3 = (com.fsck.k9.mail.Multipart) $r2;

        $r4 = virtualinvoke r3.<com.fsck.k9.mail.Multipart: com.fsck.k9.mail.BodyPart getBodyPart(int)>(0);

        $z0 = staticinvoke <com.fsck.k9.crypto.MessageDecryptVerifier: boolean isPartEncryptedOrSigned(com.fsck.k9.mail.Part)>($r4);

        if $z0 == 0 goto label4;

        if r0 == null goto label3;

        i0 = 1;

     label2:
        $i1 = virtualinvoke r3.<com.fsck.k9.mail.Multipart: int getCount()>();

        if i0 >= $i1 goto label3;

        $r5 = virtualinvoke r3.<com.fsck.k9.mail.Multipart: com.fsck.k9.mail.BodyPart getBodyPart(int)>(i0);

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r5);

        i0 = i0 + 1;

        goto label2;

     label3:
        return $r4;

     label4:
        return null;
    }
    public static java.util.List findSignedParts(com.fsck.k9.mail.Part, com.fsck.k9.ui.crypto.MessageCryptoAnnotations)
    {
        com.fsck.k9.mail.Part $r0;
        com.fsck.k9.ui.crypto.MessageCryptoAnnotations $r1;
        java.util.Stack r2;
        java.util.ArrayList r3;
        boolean $z0;
        java.lang.Object $r4;
        com.fsck.k9.mailstore.CryptoResultAnnotation $r5;
        com.fsck.k9.mail.internet.MimeBodyPart $r6;
        com.fsck.k9.mail.Body $r7;
        com.fsck.k9.mail.Multipart r8;
        int $i0;
        com.fsck.k9.mail.BodyPart $r9;

        $r0 := @parameter0: com.fsck.k9.mail.Part;

        $r1 := @parameter1: com.fsck.k9.ui.crypto.MessageCryptoAnnotations;

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        r2 = new java.util.Stack;

        specialinvoke r2.<java.util.Stack: void <init>()>();

        virtualinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r0);

     label1:
        $z0 = virtualinvoke r2.<java.util.Stack: boolean isEmpty()>();

        if $z0 != 0 goto label5;

        $r4 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>();

        $r0 = (com.fsck.k9.mail.Part) $r4;

        $z0 = virtualinvoke $r1.<com.fsck.k9.ui.crypto.MessageCryptoAnnotations: boolean has(com.fsck.k9.mail.Part)>($r0);

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke $r1.<com.fsck.k9.ui.crypto.MessageCryptoAnnotations: com.fsck.k9.mailstore.CryptoResultAnnotation get(com.fsck.k9.mail.Part)>($r0);

        $r6 = virtualinvoke $r5.<com.fsck.k9.mailstore.CryptoResultAnnotation: com.fsck.k9.mail.internet.MimeBodyPart getReplacementData()>();

        if $r6 == null goto label2;

        $r0 = $r6;

     label2:
        $r7 = interfaceinvoke $r0.<com.fsck.k9.mail.Part: com.fsck.k9.mail.Body getBody()>();

        $z0 = staticinvoke <com.fsck.k9.crypto.MessageDecryptVerifier: boolean isPartMultipartSigned(com.fsck.k9.mail.Part)>($r0);

        if $z0 == 0 goto label3;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r0);

        goto label1;

     label3:
        $z0 = $r7 instanceof com.fsck.k9.mail.Multipart;

        if $z0 == 0 goto label1;

        r8 = (com.fsck.k9.mail.Multipart) $r7;

        $i0 = virtualinvoke r8.<com.fsck.k9.mail.Multipart: int getCount()>();

        $i0 = $i0 + -1;

     label4:
        if $i0 < 0 goto label1;

        $r9 = virtualinvoke r8.<com.fsck.k9.mail.Multipart: com.fsck.k9.mail.BodyPart getBodyPart(int)>($i0);

        virtualinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r9);

        $i0 = $i0 + -1;

        goto label4;

     label5:
        return r3;
    }
    public static byte[] getSignatureData(com.fsck.k9.mail.Part) throws java.io.IOException, com.fsck.k9.mail.MessagingException
    {
        com.fsck.k9.mail.Part $r0;
        java.io.ByteArrayOutputStream r1;
        boolean $z0;
        com.fsck.k9.mail.Body $r2;
        com.fsck.k9.mail.Multipart r3;
        com.fsck.k9.mail.BodyPart $r4;
        java.lang.String $r5;
        byte[] $r6;

        $r0 := @parameter0: com.fsck.k9.mail.Part;

        $z0 = staticinvoke <com.fsck.k9.crypto.MessageDecryptVerifier: boolean isPartMultipartSigned(com.fsck.k9.mail.Part)>($r0);

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r0.<com.fsck.k9.mail.Part: com.fsck.k9.mail.Body getBody()>();

        $z0 = $r2 instanceof com.fsck.k9.mail.Multipart;

        if $z0 == 0 goto label1;

        r3 = (com.fsck.k9.mail.Multipart) $r2;

        $r4 = virtualinvoke r3.<com.fsck.k9.mail.Multipart: com.fsck.k9.mail.BodyPart getBodyPart(int)>(1);

        $r5 = virtualinvoke $r4.<com.fsck.k9.mail.BodyPart: java.lang.String getMimeType()>();

        $z0 = staticinvoke <com.fsck.k9.mail.internet.MimeUtility: boolean isSameMimeType(java.lang.String,java.lang.String)>($r5, "application/pgp-signature");

        if $z0 == 0 goto label1;

        r1 = new java.io.ByteArrayOutputStream;

        specialinvoke r1.<java.io.ByteArrayOutputStream: void <init>()>();

        $r2 = virtualinvoke $r4.<com.fsck.k9.mail.BodyPart: com.fsck.k9.mail.Body getBody()>();

        interfaceinvoke $r2.<com.fsck.k9.mail.Body: void writeTo(java.io.OutputStream)>(r1);

        $r6 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r6;

     label1:
        return null;
    }
    private static boolean isPartEncryptedOrSigned(com.fsck.k9.mail.Part)
    {
        com.fsck.k9.mail.Part $r0;
        boolean $z0;

        $r0 := @parameter0: com.fsck.k9.mail.Part;

        $z0 = staticinvoke <com.fsck.k9.crypto.MessageDecryptVerifier: boolean isPartMultipartEncrypted(com.fsck.k9.mail.Part)>($r0);

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <com.fsck.k9.crypto.MessageDecryptVerifier: boolean isPartMultipartSigned(com.fsck.k9.mail.Part)>($r0);

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <com.fsck.k9.crypto.MessageDecryptVerifier: boolean isPartPgpInlineEncryptedOrSigned(com.fsck.k9.mail.Part)>($r0);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    private static boolean isPartMultipartEncrypted(com.fsck.k9.mail.Part)
    {
        com.fsck.k9.mail.Part $r0;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: com.fsck.k9.mail.Part;

        $r1 = interfaceinvoke $r0.<com.fsck.k9.mail.Part: java.lang.String getMimeType()>();

        $z0 = staticinvoke <com.fsck.k9.mail.internet.MimeUtility: boolean isSameMimeType(java.lang.String,java.lang.String)>($r1, "multipart/encrypted");

        return $z0;
    }
    private static boolean isPartMultipartSigned(com.fsck.k9.mail.Part)
    {
        com.fsck.k9.mail.Part $r0;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: com.fsck.k9.mail.Part;

        $r1 = interfaceinvoke $r0.<com.fsck.k9.mail.Part: java.lang.String getMimeType()>();

        $z0 = staticinvoke <com.fsck.k9.mail.internet.MimeUtility: boolean isSameMimeType(java.lang.String,java.lang.String)>($r1, "multipart/signed");

        return $z0;
    }
    public static boolean isPartPgpInlineEncrypted(com.fsck.k9.mail.Part)
    {
        com.fsck.k9.mail.Part $r0;
        boolean $z0;
        java.lang.String $r1;

        $r0 := @parameter0: com.fsck.k9.mail.Part;

        if $r0 != null goto label1;

        return 0;

     label1:
        $z0 = interfaceinvoke $r0.<com.fsck.k9.mail.Part: boolean isMimeType(java.lang.String)>("text/plain");

        if $z0 != 0 goto label2;

        $z0 = interfaceinvoke $r0.<com.fsck.k9.mail.Part: boolean isMimeType(java.lang.String)>("application/pgp");

        if $z0 == 0 goto label3;

     label2:
        $r1 = staticinvoke <com.fsck.k9.mail.internet.MessageExtractor: java.lang.String getTextFromPart(com.fsck.k9.mail.Part,long)>($r0, 36L);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("-----BEGIN PGP MESSAGE-----");

        if $z0 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }
    private static boolean isPartPgpInlineEncryptedOrSigned(com.fsck.k9.mail.Part)
    {
        com.fsck.k9.mail.Part $r0;
        boolean $z0;
        java.lang.String $r1;

        $r0 := @parameter0: com.fsck.k9.mail.Part;

        $z0 = interfaceinvoke $r0.<com.fsck.k9.mail.Part: boolean isMimeType(java.lang.String)>("text/plain");

        if $z0 != 0 goto label1;

        $z0 = interfaceinvoke $r0.<com.fsck.k9.mail.Part: boolean isMimeType(java.lang.String)>("application/pgp");

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = staticinvoke <com.fsck.k9.mail.internet.MessageExtractor: java.lang.String getTextFromPart(com.fsck.k9.mail.Part,long)>($r0, 36L);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("-----BEGIN PGP MESSAGE-----");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("-----BEGIN PGP SIGNED MESSAGE-----");

        if $z0 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }
    public static boolean isPgpMimeEncryptedOrSignedPart(com.fsck.k9.mail.Part)
    {
        com.fsck.k9.mail.Part $r0;
        java.lang.String $r1, $r2;
        boolean $z0, $z1;

        $r0 := @parameter0: com.fsck.k9.mail.Part;

        $r1 = interfaceinvoke $r0.<com.fsck.k9.mail.Part: java.lang.String getContentType()>();

        $r1 = staticinvoke <com.fsck.k9.mail.internet.MimeUtility: java.lang.String getHeaderParameter(java.lang.String,java.lang.String)>($r1, "protocol");

        $r2 = interfaceinvoke $r0.<com.fsck.k9.mail.Part: java.lang.String getMimeType()>();

        $z0 = staticinvoke <com.fsck.k9.mail.internet.MimeUtility: boolean isSameMimeType(java.lang.String,java.lang.String)>($r2, "multipart/encrypted");

        if $z0 == 0 goto label4;

        $r2 = "application/pgp-encrypted";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label4;

        $z0 = 1;

     label1:
        $r2 = interfaceinvoke $r0.<com.fsck.k9.mail.Part: java.lang.String getMimeType()>();

        $z1 = staticinvoke <com.fsck.k9.mail.internet.MimeUtility: boolean isSameMimeType(java.lang.String,java.lang.String)>($r2, "multipart/signed");

        if $z1 == 0 goto label5;

        $r2 = "application/pgp-signature";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z1 == 0 goto label5;

        $z1 = 1;

     label2:
        if $z0 != 0 goto label3;

        if $z1 == 0 goto label6;

     label3:
        return 1;

     label4:
        $z0 = 0;

        goto label1;

     label5:
        $z1 = 0;

        goto label2;

     label6:
        return 0;
    }
