com.fsck.k9.preferences.TimePickerPreference extends android.preference.DialogPreference implements android.widget.TimePicker$OnTimeChangedListener
public static final java.lang.String VALIDATION_EXPRESSION
private java.lang.String defaultValue
private int originalHour
private int originalMinute
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.fsck.k9.preferences.TimePickerPreference r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        r0 := @this: com.fsck.k9.preferences.TimePickerPreference;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.preference.DialogPreference: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        r0.<com.fsck.k9.preferences.TimePickerPreference: int originalHour> = 0;

        r0.<com.fsck.k9.preferences.TimePickerPreference: int originalMinute> = 0;

        specialinvoke r0.<com.fsck.k9.preferences.TimePickerPreference: void initialize()>();

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.fsck.k9.preferences.TimePickerPreference r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;

        r0 := @this: com.fsck.k9.preferences.TimePickerPreference;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.preference.DialogPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        r0.<com.fsck.k9.preferences.TimePickerPreference: int originalHour> = 0;

        r0.<com.fsck.k9.preferences.TimePickerPreference: int originalMinute> = 0;

        specialinvoke r0.<com.fsck.k9.preferences.TimePickerPreference: void initialize()>();

        return;
    }
    private int getHour()
    {
        com.fsck.k9.preferences.TimePickerPreference r0;
        java.lang.String $r1;
        boolean $z0;
        java.lang.String[] $r2;
        int $i0;

        r0 := @this: com.fsck.k9.preferences.TimePickerPreference;

        $r1 = virtualinvoke r0.<com.fsck.k9.preferences.TimePickerPreference: java.lang.String getTime()>();

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean matches(java.lang.String)>("[0-2]*[0-9]:[0-5]*[0-9]");

        if $z0 != 0 goto label2;

     label1:
        return -1;

     label2:
        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r1 = $r2[0];

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        return $i0;
    }
    private int getMinute()
    {
        com.fsck.k9.preferences.TimePickerPreference r0;
        java.lang.String $r1;
        boolean $z0;
        java.lang.String[] $r2;
        int $i0;

        r0 := @this: com.fsck.k9.preferences.TimePickerPreference;

        $r1 = virtualinvoke r0.<com.fsck.k9.preferences.TimePickerPreference: java.lang.String getTime()>();

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean matches(java.lang.String)>("[0-2]*[0-9]:[0-5]*[0-9]");

        if $z0 != 0 goto label2;

     label1:
        return -1;

     label2:
        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r1 = $r2[1];

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        return $i0;
    }
    private void initialize()
    {
        com.fsck.k9.preferences.TimePickerPreference r0;

        r0 := @this: com.fsck.k9.preferences.TimePickerPreference;

        virtualinvoke r0.<com.fsck.k9.preferences.TimePickerPreference: void setPersistent(boolean)>(1);

        return;
    }
    public java.lang.String getTime()
    {
        com.fsck.k9.preferences.TimePickerPreference r0;
        java.lang.String $r1;

        r0 := @this: com.fsck.k9.preferences.TimePickerPreference;

        $r1 = r0.<com.fsck.k9.preferences.TimePickerPreference: java.lang.String defaultValue>;

        $r1 = virtualinvoke r0.<com.fsck.k9.preferences.TimePickerPreference: java.lang.String getPersistedString(java.lang.String)>($r1);

        return $r1;
    }
    protected android.view.View onCreateDialogView()
    {
        com.fsck.k9.preferences.TimePickerPreference r0;
        android.widget.TimePicker r1;
        android.content.Context $r2;
        boolean $z0;
        java.lang.Boolean $r3;
        int $i0;
        java.lang.Integer $r4;

        r0 := @this: com.fsck.k9.preferences.TimePickerPreference;

        r1 = new android.widget.TimePicker;

        $r2 = virtualinvoke r0.<com.fsck.k9.preferences.TimePickerPreference: android.content.Context getContext()>();

        specialinvoke r1.<android.widget.TimePicker: void <init>(android.content.Context)>($r2);

        $r2 = virtualinvoke r0.<com.fsck.k9.preferences.TimePickerPreference: android.content.Context getContext()>();

        $z0 = staticinvoke <android.text.format.DateFormat: boolean is24HourFormat(android.content.Context)>($r2);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        virtualinvoke r1.<android.widget.TimePicker: void setIs24HourView(java.lang.Boolean)>($r3);

        virtualinvoke r1.<android.widget.TimePicker: void setOnTimeChangedListener(android.widget.TimePicker$OnTimeChangedListener)>(r0);

        $i0 = specialinvoke r0.<com.fsck.k9.preferences.TimePickerPreference: int getHour()>();

        r0.<com.fsck.k9.preferences.TimePickerPreference: int originalHour> = $i0;

        $i0 = specialinvoke r0.<com.fsck.k9.preferences.TimePickerPreference: int getMinute()>();

        r0.<com.fsck.k9.preferences.TimePickerPreference: int originalMinute> = $i0;

        $i0 = r0.<com.fsck.k9.preferences.TimePickerPreference: int originalHour>;

        if $i0 < 0 goto label1;

        $i0 = r0.<com.fsck.k9.preferences.TimePickerPreference: int originalMinute>;

        if $i0 < 0 goto label1;

        $i0 = r0.<com.fsck.k9.preferences.TimePickerPreference: int originalHour>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r1.<android.widget.TimePicker: void setCurrentHour(java.lang.Integer)>($r4);

        $i0 = r0.<com.fsck.k9.preferences.TimePickerPreference: int originalMinute>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r1.<android.widget.TimePicker: void setCurrentMinute(java.lang.Integer)>($r4);

     label1:
        return r1;
    }
    protected void onDialogClosed(boolean)
    {
        com.fsck.k9.preferences.TimePickerPreference r0;
        boolean $z0;
        java.util.Locale $r1;
        java.lang.Object[] $r2;
        int $i0;
        java.lang.Integer $r3;
        java.lang.String $r4;

        r0 := @this: com.fsck.k9.preferences.TimePickerPreference;

        $z0 := @parameter0: boolean;

        if $z0 != 0 goto label1;

        $r1 = <java.util.Locale: java.util.Locale US>;

        $r2 = newarray (java.lang.Object)[2];

        $i0 = r0.<com.fsck.k9.preferences.TimePickerPreference: int originalHour>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[0] = $r3;

        $i0 = r0.<com.fsck.k9.preferences.TimePickerPreference: int originalMinute>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[1] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r1, "%02d:%02d", $r2);

        virtualinvoke r0.<com.fsck.k9.preferences.TimePickerPreference: boolean persistString(java.lang.String)>($r4);

        $r1 = <java.util.Locale: java.util.Locale US>;

        $r2 = newarray (java.lang.Object)[2];

        $i0 = r0.<com.fsck.k9.preferences.TimePickerPreference: int originalHour>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[0] = $r3;

        $i0 = r0.<com.fsck.k9.preferences.TimePickerPreference: int originalMinute>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[1] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r1, "%02d:%02d", $r2);

        virtualinvoke r0.<com.fsck.k9.preferences.TimePickerPreference: boolean callChangeListener(java.lang.Object)>($r4);

     label1:
        specialinvoke r0.<android.preference.DialogPreference: void onDialogClosed(boolean)>($z0);

        return;
    }
    public void onTimeChanged(android.widget.TimePicker, int, int)
    {
        com.fsck.k9.preferences.TimePickerPreference r0;
        android.widget.TimePicker $r1;
        int $i0, $i1;
        java.util.Locale $r2;
        java.lang.Object[] $r3;
        java.lang.Integer $r4;
        java.lang.String $r5;

        r0 := @this: com.fsck.k9.preferences.TimePickerPreference;

        $r1 := @parameter0: android.widget.TimePicker;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = <java.util.Locale: java.util.Locale US>;

        $r3 = newarray (java.lang.Object)[2];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[0] = $r4;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3[1] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r2, "%02d:%02d", $r3);

        virtualinvoke r0.<com.fsck.k9.preferences.TimePickerPreference: boolean persistString(java.lang.String)>($r5);

        $r2 = <java.util.Locale: java.util.Locale US>;

        $r3 = newarray (java.lang.Object)[2];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[0] = $r4;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3[1] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r2, "%02d:%02d", $r3);

        virtualinvoke r0.<com.fsck.k9.preferences.TimePickerPreference: boolean callChangeListener(java.lang.Object)>($r5);

        return;
    }
    public void setDefaultValue(java.lang.Object)
    {
        com.fsck.k9.preferences.TimePickerPreference r0;
        boolean $z0;
        java.lang.Object r1;
        java.lang.String $r2;

        r0 := @this: com.fsck.k9.preferences.TimePickerPreference;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<android.preference.DialogPreference: void setDefaultValue(java.lang.Object)>(r1);

        $z0 = r1 instanceof java.lang.String;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = (java.lang.String) r1;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean matches(java.lang.String)>("[0-2]*[0-9]:[0-5]*[0-9]");

        if $z0 == 0 goto label2;

        $r2 = (java.lang.String) r1;

        r0.<com.fsck.k9.preferences.TimePickerPreference: java.lang.String defaultValue> = $r2;

     label2:
        return;
    }
