com.fsck.k9.preferences.AccountSettings$IntegerResourceSetting extends com.fsck.k9.preferences.Settings$PseudoEnumSetting
private final java.util.Map mMapping
    public void <init>(int, int)
    {
        com.fsck.k9.preferences.AccountSettings$IntegerResourceSetting r0;
        int $i0, $i1, $i2;
        java.util.HashMap r1;
        java.lang.String r2;
        java.lang.Integer $r3;
        android.app.Application $r4;
        android.content.res.Resources $r5;
        java.lang.String[] $r6;
        java.util.Map $r7;

        r0 := @this: com.fsck.k9.preferences.AccountSettings$IntegerResourceSetting;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        specialinvoke r0.<com.fsck.k9.preferences.Settings$PseudoEnumSetting: void <init>(java.lang.Object)>($r3);

        r1 = new java.util.HashMap;

        specialinvoke r1.<java.util.HashMap: void <init>()>();

        $r4 = <com.fsck.k9.K9: android.app.Application app>;

        $r5 = virtualinvoke $r4.<android.app.Application: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String[] getStringArray(int)>($i1);

        $i0 = lengthof $r6;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        r2 = $r6[$i1];

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r7 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r1);

        r0.<com.fsck.k9.preferences.AccountSettings$IntegerResourceSetting: java.util.Map mMapping> = $r7;

        return;
    }
    public java.lang.Object fromString(java.lang.String) throws com.fsck.k9.preferences.Settings$InvalidSettingValueException
    {
        com.fsck.k9.preferences.AccountSettings$IntegerResourceSetting r0;
        java.lang.String $r1;
        java.lang.NumberFormatException r2;
        int $i0;
        java.lang.Integer $r3;
        com.fsck.k9.preferences.Settings$InvalidSettingValueException $r4;

        r0 := @this: com.fsck.k9.preferences.AccountSettings$IntegerResourceSetting;

        $r1 := @parameter0: java.lang.String;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label2:
        return $r3;

     label3:
        r2 := @caughtexception;

        $r4 = new com.fsck.k9.preferences.Settings$InvalidSettingValueException;

        specialinvoke $r4.<com.fsck.k9.preferences.Settings$InvalidSettingValueException: void <init>()>();

        throw $r4;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }
    protected java.util.Map getMapping()
    {
        com.fsck.k9.preferences.AccountSettings$IntegerResourceSetting r0;
        java.util.Map r1;

        r0 := @this: com.fsck.k9.preferences.AccountSettings$IntegerResourceSetting;

        r1 = r0.<com.fsck.k9.preferences.AccountSettings$IntegerResourceSetting: java.util.Map mMapping>;

        return r1;
    }
