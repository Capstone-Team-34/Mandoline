com.beetstra.jutf7.UTF7StyleCharsetEncoder extends java.nio.charset.CharsetEncoder
private static final float AVG_BYTES_PER_CHAR
private static final float MAX_BYTES_PER_CHAR
static boolean useUglyHackToForceCallToFlushInJava5
private final com.beetstra.jutf7.Base64Util base64
private boolean base64mode
private int bitsToOutput
private final com.beetstra.jutf7.UTF7StyleCharset cs
private int sextet
private final byte shift
private final boolean strict
private final byte unshift
    static void <clinit>()
    {
        java.lang.String $r0, $r1, $r2;
        boolean $z0, $z1;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.specification.version");

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.vm.vendor");

        $r2 = "1.4";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 != 0 goto label1;

        $r2 = "1.5";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label3;

     label1:
        $z0 = 1;

     label2:
        <com.beetstra.jutf7.UTF7StyleCharsetEncoder: boolean useUglyHackToForceCallToFlushInJava5> = $z0;

        $z0 = <com.beetstra.jutf7.UTF7StyleCharsetEncoder: boolean useUglyHackToForceCallToFlushInJava5>;

        $r0 = "Sun Microsystems Inc.";

        $z1 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        $z0 = $z0 & $z1;

        <com.beetstra.jutf7.UTF7StyleCharsetEncoder: boolean useUglyHackToForceCallToFlushInJava5> = $z0;

        return;

     label3:
        $z0 = 0;

        goto label2;
    }
    void <init>(com.beetstra.jutf7.UTF7StyleCharset, com.beetstra.jutf7.Base64Util, boolean)
    {
        com.beetstra.jutf7.UTF7StyleCharsetEncoder r0;
        com.beetstra.jutf7.UTF7StyleCharset $r1;
        com.beetstra.jutf7.Base64Util $r2;
        boolean $z0;
        byte $b0;

        r0 := @this: com.beetstra.jutf7.UTF7StyleCharsetEncoder;

        $r1 := @parameter0: com.beetstra.jutf7.UTF7StyleCharset;

        $r2 := @parameter1: com.beetstra.jutf7.Base64Util;

        $z0 := @parameter2: boolean;

        specialinvoke r0.<java.nio.charset.CharsetEncoder: void <init>(java.nio.charset.Charset,float,float)>($r1, 1.5F, 5.0F);

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: com.beetstra.jutf7.UTF7StyleCharset cs> = $r1;

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: com.beetstra.jutf7.Base64Util base64> = $r2;

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: boolean strict> = $z0;

        $b0 = virtualinvoke $r1.<com.beetstra.jutf7.UTF7StyleCharset: byte shift()>();

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: byte shift> = $b0;

        $b0 = virtualinvoke $r1.<com.beetstra.jutf7.UTF7StyleCharset: byte unshift()>();

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: byte unshift> = $b0;

        return;
    }
    private void encodeBase64(char, java.nio.ByteBuffer)
    {
        com.beetstra.jutf7.UTF7StyleCharsetEncoder r0;
        char $c0;
        java.nio.ByteBuffer $r1;
        byte $b1;
        boolean $z0;
        int $i2, $i3;
        com.beetstra.jutf7.Base64Util $r2;

        r0 := @this: com.beetstra.jutf7.UTF7StyleCharsetEncoder;

        $c0 := @parameter0: char;

        $r1 := @parameter1: java.nio.ByteBuffer;

        $z0 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: boolean base64mode>;

        if $z0 != 0 goto label1;

        $b1 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: byte shift>;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b1);

     label1:
        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: boolean base64mode> = 1;

        $i2 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int bitsToOutput>;

        $i2 = $i2 + 16;

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int bitsToOutput> = $i2;

     label2:
        $i2 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int bitsToOutput>;

        if $i2 < 6 goto label3;

        $i2 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int bitsToOutput>;

        $i2 = $i2 + -6;

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int bitsToOutput> = $i2;

        $i2 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int sextet>;

        $i3 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int bitsToOutput>;

        $i3 = $c0 >> $i3;

        $i2 = $i2 + $i3;

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int sextet> = $i2;

        $i2 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int sextet>;

        $i2 = $i2 & 63;

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int sextet> = $i2;

        $r2 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: com.beetstra.jutf7.Base64Util base64>;

        $i2 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int sextet>;

        $b1 = virtualinvoke $r2.<com.beetstra.jutf7.Base64Util: byte getChar(int)>($i2);

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b1);

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int sextet> = 0;

        goto label2;

     label3:
        $i2 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int bitsToOutput>;

        $i2 = 6 - $i2;

        $i2 = $c0 << $i2;

        $i2 = $i2 & 63;

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int sextet> = $i2;

        return;
    }
    private void unshift(java.nio.ByteBuffer, char)
    {
        com.beetstra.jutf7.UTF7StyleCharsetEncoder r0;
        java.nio.ByteBuffer $r1;
        char $c0;
        int $i1;
        boolean $z0;
        com.beetstra.jutf7.Base64Util $r2;
        byte $b2;

        r0 := @this: com.beetstra.jutf7.UTF7StyleCharsetEncoder;

        $r1 := @parameter0: java.nio.ByteBuffer;

        $c0 := @parameter1: char;

        $z0 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: boolean base64mode>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $i1 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int bitsToOutput>;

        if $i1 == 0 goto label2;

        $r2 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: com.beetstra.jutf7.Base64Util base64>;

        $i1 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int sextet>;

        $b2 = virtualinvoke $r2.<com.beetstra.jutf7.Base64Util: byte getChar(int)>($i1);

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b2);

     label2:
        $r2 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: com.beetstra.jutf7.Base64Util base64>;

        $z0 = virtualinvoke $r2.<com.beetstra.jutf7.Base64Util: boolean contains(char)>($c0);

        if $z0 != 0 goto label3;

        $b2 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: byte unshift>;

        if $c0 == $b2 goto label3;

        $z0 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: boolean strict>;

        if $z0 == 0 goto label4;

     label3:
        $b2 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: byte unshift>;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b2);

     label4:
        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: boolean base64mode> = 0;

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int sextet> = 0;

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int bitsToOutput> = 0;

        return;
    }
    protected java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer, java.nio.ByteBuffer)
    {
        com.beetstra.jutf7.UTF7StyleCharsetEncoder r0;
        java.nio.CharBuffer $r1;
        java.nio.ByteBuffer $r2;
        boolean $z0;
        int $i0;
        char $c1;
        com.beetstra.jutf7.UTF7StyleCharset $r3;
        byte $b2;
        float $f0, $f1;
        java.nio.charset.CoderResult r4;

        r0 := @this: com.beetstra.jutf7.UTF7StyleCharsetEncoder;

        $r1 := @parameter0: java.nio.CharBuffer;

        $r2 := @parameter1: java.nio.ByteBuffer;

     label1:
        $z0 = virtualinvoke $r1.<java.nio.CharBuffer: boolean hasRemaining()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r2.<java.nio.ByteBuffer: int remaining()>();

        if $i0 >= 4 goto label2;

        r4 = <java.nio.charset.CoderResult: java.nio.charset.CoderResult OVERFLOW>;

        return r4;

     label2:
        $c1 = virtualinvoke $r1.<java.nio.CharBuffer: char get()>();

        $r3 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: com.beetstra.jutf7.UTF7StyleCharset cs>;

        $z0 = virtualinvoke $r3.<com.beetstra.jutf7.UTF7StyleCharset: boolean canEncodeDirectly(char)>($c1);

        if $z0 == 0 goto label3;

        specialinvoke r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: void unshift(java.nio.ByteBuffer,char)>($r2, $c1);

        $b2 = (byte) $c1;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b2);

        goto label1;

     label3:
        $z0 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: boolean base64mode>;

        if $z0 != 0 goto label4;

        $b2 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: byte shift>;

        if $c1 != $b2 goto label4;

        $b2 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: byte shift>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b2);

        $b2 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: byte unshift>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b2);

        goto label1;

     label4:
        specialinvoke r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: void encodeBase64(char,java.nio.ByteBuffer)>($c1, $r2);

        goto label1;

     label5:
        $z0 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: boolean base64mode>;

        if $z0 == 0 goto label6;

        $z0 = <com.beetstra.jutf7.UTF7StyleCharsetEncoder: boolean useUglyHackToForceCallToFlushInJava5>;

        if $z0 == 0 goto label6;

        $i0 = virtualinvoke $r2.<java.nio.ByteBuffer: int limit()>();

        $f0 = (float) $i0;

        $i0 = virtualinvoke $r1.<java.nio.CharBuffer: int limit()>();

        $f1 = (float) $i0;

        $f1 = 5.0F * $f1;

        $b2 = $f0 cmpl $f1;

        if $b2 == 0 goto label6;

        r4 = <java.nio.charset.CoderResult: java.nio.charset.CoderResult OVERFLOW>;

        return r4;

     label6:
        r4 = <java.nio.charset.CoderResult: java.nio.charset.CoderResult UNDERFLOW>;

        return r4;
    }
    protected java.nio.charset.CoderResult implFlush(java.nio.ByteBuffer)
    {
        com.beetstra.jutf7.UTF7StyleCharsetEncoder r0;
        java.nio.ByteBuffer $r1;
        boolean $z0;
        int $i0;
        com.beetstra.jutf7.Base64Util $r2;
        byte $b1;
        java.nio.charset.CoderResult r3;

        r0 := @this: com.beetstra.jutf7.UTF7StyleCharsetEncoder;

        $r1 := @parameter0: java.nio.ByteBuffer;

        $z0 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: boolean base64mode>;

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int remaining()>();

        if $i0 >= 2 goto label1;

        r3 = <java.nio.charset.CoderResult: java.nio.charset.CoderResult OVERFLOW>;

        return r3;

     label1:
        $i0 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int bitsToOutput>;

        if $i0 == 0 goto label2;

        $r2 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: com.beetstra.jutf7.Base64Util base64>;

        $i0 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int sextet>;

        $b1 = virtualinvoke $r2.<com.beetstra.jutf7.Base64Util: byte getChar(int)>($i0);

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b1);

     label2:
        $b1 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: byte unshift>;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b1);

     label3:
        r3 = <java.nio.charset.CoderResult: java.nio.charset.CoderResult UNDERFLOW>;

        return r3;
    }
    protected void implReset()
    {
        com.beetstra.jutf7.UTF7StyleCharsetEncoder r0;

        r0 := @this: com.beetstra.jutf7.UTF7StyleCharsetEncoder;

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: boolean base64mode> = 0;

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int sextet> = 0;

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int bitsToOutput> = 0;

        return;
    }
