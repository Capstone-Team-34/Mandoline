com.bumptech.glide.disklrucache.DiskLruCache$1 extends java.lang.Object implements java.util.concurrent.Callable
final com.bumptech.glide.disklrucache.DiskLruCache this$0
    void <init>(com.bumptech.glide.disklrucache.DiskLruCache)
    {
        com.bumptech.glide.disklrucache.DiskLruCache$1 r0;
        com.bumptech.glide.disklrucache.DiskLruCache $r1;

        r0 := @this: com.bumptech.glide.disklrucache.DiskLruCache$1;

        $r1 := @parameter0: com.bumptech.glide.disklrucache.DiskLruCache;

        r0.<com.bumptech.glide.disklrucache.DiskLruCache$1: com.bumptech.glide.disklrucache.DiskLruCache this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public volatile java.lang.Object call() throws java.lang.Exception
    {
        com.bumptech.glide.disklrucache.DiskLruCache$1 r0;
        java.lang.Void $r1;

        r0 := @this: com.bumptech.glide.disklrucache.DiskLruCache$1;

        $r1 = virtualinvoke r0.<com.bumptech.glide.disklrucache.DiskLruCache$1: java.lang.Void call()>();

        return $r1;
    }
    public java.lang.Void call() throws java.lang.Exception
    {
        com.bumptech.glide.disklrucache.DiskLruCache$1 r0;
        com.bumptech.glide.disklrucache.DiskLruCache $r1, $r2;
        java.io.Writer $r3;
        boolean $z0;
        java.lang.Throwable $r4;

        r0 := @this: com.bumptech.glide.disklrucache.DiskLruCache$1;

        $r1 = r0.<com.bumptech.glide.disklrucache.DiskLruCache$1: com.bumptech.glide.disklrucache.DiskLruCache this$0>;

        entermonitor $r1;

     label1:
        $r2 = r0.<com.bumptech.glide.disklrucache.DiskLruCache$1: com.bumptech.glide.disklrucache.DiskLruCache this$0>;

        $r3 = staticinvoke <com.bumptech.glide.disklrucache.DiskLruCache: java.io.Writer access$000(com.bumptech.glide.disklrucache.DiskLruCache)>($r2);

        if $r3 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        $r2 = r0.<com.bumptech.glide.disklrucache.DiskLruCache$1: com.bumptech.glide.disklrucache.DiskLruCache this$0>;

        staticinvoke <com.bumptech.glide.disklrucache.DiskLruCache: void access$100(com.bumptech.glide.disklrucache.DiskLruCache)>($r2);

        $r2 = r0.<com.bumptech.glide.disklrucache.DiskLruCache$1: com.bumptech.glide.disklrucache.DiskLruCache this$0>;

        $z0 = staticinvoke <com.bumptech.glide.disklrucache.DiskLruCache: boolean access$200(com.bumptech.glide.disklrucache.DiskLruCache)>($r2);

        if $z0 == 0 goto label4;

        $r2 = r0.<com.bumptech.glide.disklrucache.DiskLruCache$1: com.bumptech.glide.disklrucache.DiskLruCache this$0>;

        staticinvoke <com.bumptech.glide.disklrucache.DiskLruCache: void access$300(com.bumptech.glide.disklrucache.DiskLruCache)>($r2);

        $r2 = r0.<com.bumptech.glide.disklrucache.DiskLruCache$1: com.bumptech.glide.disklrucache.DiskLruCache this$0>;

        staticinvoke <com.bumptech.glide.disklrucache.DiskLruCache: int access$402(com.bumptech.glide.disklrucache.DiskLruCache,int)>($r2, 0);

     label4:
        exitmonitor $r1;

     label5:
        return null;

     label6:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }
