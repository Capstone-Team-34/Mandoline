com.bumptech.glide.disklrucache.DiskLruCache$Entry extends java.lang.Object
java.io.File[] cleanFiles
private com.bumptech.glide.disklrucache.DiskLruCache$Editor currentEditor
java.io.File[] dirtyFiles
private final java.lang.String key
private final long[] lengths
private boolean readable
private long sequenceNumber
final com.bumptech.glide.disklrucache.DiskLruCache this$0
    private void <init>(com.bumptech.glide.disklrucache.DiskLruCache, java.lang.String)
    {
        com.bumptech.glide.disklrucache.DiskLruCache$Entry r0;
        com.bumptech.glide.disklrucache.DiskLruCache $r1;
        java.lang.String $r2;
        int $i0, i1, $i2;
        long[] $r3;
        java.io.File[] $r4;
        java.lang.StringBuilder $r5;
        java.io.File $r6, $r7;

        r0 := @this: com.bumptech.glide.disklrucache.DiskLruCache$Entry;

        $r1 := @parameter0: com.bumptech.glide.disklrucache.DiskLruCache;

        $r2 := @parameter1: java.lang.String;

        r0.<com.bumptech.glide.disklrucache.DiskLruCache$Entry: com.bumptech.glide.disklrucache.DiskLruCache this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.disklrucache.DiskLruCache$Entry: java.lang.String key> = $r2;

        $i0 = staticinvoke <com.bumptech.glide.disklrucache.DiskLruCache: int access$1800(com.bumptech.glide.disklrucache.DiskLruCache)>($r1);

        $r3 = newarray (long)[$i0];

        r0.<com.bumptech.glide.disklrucache.DiskLruCache$Entry: long[] lengths> = $r3;

        $i0 = staticinvoke <com.bumptech.glide.disklrucache.DiskLruCache: int access$1800(com.bumptech.glide.disklrucache.DiskLruCache)>($r1);

        $r4 = newarray (java.io.File)[$i0];

        r0.<com.bumptech.glide.disklrucache.DiskLruCache$Entry: java.io.File[] cleanFiles> = $r4;

        $i0 = staticinvoke <com.bumptech.glide.disklrucache.DiskLruCache: int access$1800(com.bumptech.glide.disklrucache.DiskLruCache)>($r1);

        $r4 = newarray (java.io.File)[$i0];

        r0.<com.bumptech.glide.disklrucache.DiskLruCache$Entry: java.io.File[] dirtyFiles> = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $i0 = virtualinvoke $r5.<java.lang.StringBuilder: int length()>();

        i1 = 0;

     label1:
        $i2 = staticinvoke <com.bumptech.glide.disklrucache.DiskLruCache: int access$1800(com.bumptech.glide.disklrucache.DiskLruCache)>($r1);

        if i1 >= $i2 goto label2;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r4 = r0.<com.bumptech.glide.disklrucache.DiskLruCache$Entry: java.io.File[] cleanFiles>;

        $r6 = new java.io.File;

        $r7 = staticinvoke <com.bumptech.glide.disklrucache.DiskLruCache: java.io.File access$1900(com.bumptech.glide.disklrucache.DiskLruCache)>($r1);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, $r2);

        $r4[i1] = $r6;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r4 = r0.<com.bumptech.glide.disklrucache.DiskLruCache$Entry: java.io.File[] dirtyFiles>;

        $r6 = new java.io.File;

        $r7 = staticinvoke <com.bumptech.glide.disklrucache.DiskLruCache: java.io.File access$1900(com.bumptech.glide.disklrucache.DiskLruCache)>($r1);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, $r2);

        $r4[i1] = $r6;

        virtualinvoke $r5.<java.lang.StringBuilder: void setLength(int)>($i0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
    void <init>(com.bumptech.glide.disklrucache.DiskLruCache, java.lang.String, com.bumptech.glide.disklrucache.DiskLruCache$1)
    {
        com.bumptech.glide.disklrucache.DiskLruCache$Entry r0;
        com.bumptech.glide.disklrucache.DiskLruCache $r1;
        java.lang.String $r2;
        com.bumptech.glide.disklrucache.DiskLruCache$1 $r3;

        r0 := @this: com.bumptech.glide.disklrucache.DiskLruCache$Entry;

        $r1 := @parameter0: com.bumptech.glide.disklrucache.DiskLruCache;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.bumptech.glide.disklrucache.DiskLruCache$1;

        specialinvoke r0.<com.bumptech.glide.disklrucache.DiskLruCache$Entry: void <init>(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String)>($r1, $r2);

        return;
    }
    static long[] access$1000(com.bumptech.glide.disklrucache.DiskLruCache$Entry)
    {
        com.bumptech.glide.disklrucache.DiskLruCache$Entry $r0;
        long[] r1;

        $r0 := @parameter0: com.bumptech.glide.disklrucache.DiskLruCache$Entry;

        r1 = $r0.<com.bumptech.glide.disklrucache.DiskLruCache$Entry: long[] lengths>;

        return r1;
    }
    static java.lang.String access$1100(com.bumptech.glide.disklrucache.DiskLruCache$Entry)
    {
        com.bumptech.glide.disklrucache.DiskLruCache$Entry $r0;
        java.lang.String r1;

        $r0 := @parameter0: com.bumptech.glide.disklrucache.DiskLruCache$Entry;

        r1 = $r0.<com.bumptech.glide.disklrucache.DiskLruCache$Entry: java.lang.String key>;

        return r1;
    }
    static long access$1200(com.bumptech.glide.disklrucache.DiskLruCache$Entry)
    {
        com.bumptech.glide.disklrucache.DiskLruCache$Entry $r0;
        long l0;

        $r0 := @parameter0: com.bumptech.glide.disklrucache.DiskLruCache$Entry;

        l0 = $r0.<com.bumptech.glide.disklrucache.DiskLruCache$Entry: long sequenceNumber>;

        return l0;
    }
    static long access$1202(com.bumptech.glide.disklrucache.DiskLruCache$Entry, long)
    {
        com.bumptech.glide.disklrucache.DiskLruCache$Entry $r0;
        long $l0;

        $r0 := @parameter0: com.bumptech.glide.disklrucache.DiskLruCache$Entry;

        $l0 := @parameter1: long;

        $r0.<com.bumptech.glide.disklrucache.DiskLruCache$Entry: long sequenceNumber> = $l0;

        return $l0;
    }
    static boolean access$600(com.bumptech.glide.disklrucache.DiskLruCache$Entry)
    {
        com.bumptech.glide.disklrucache.DiskLruCache$Entry $r0;
        boolean z0;

        $r0 := @parameter0: com.bumptech.glide.disklrucache.DiskLruCache$Entry;

        z0 = $r0.<com.bumptech.glide.disklrucache.DiskLruCache$Entry: boolean readable>;

        return z0;
    }
    static boolean access$602(com.bumptech.glide.disklrucache.DiskLruCache$Entry, boolean)
    {
        com.bumptech.glide.disklrucache.DiskLruCache$Entry $r0;
        boolean $z0;

        $r0 := @parameter0: com.bumptech.glide.disklrucache.DiskLruCache$Entry;

        $z0 := @parameter1: boolean;

        $r0.<com.bumptech.glide.disklrucache.DiskLruCache$Entry: boolean readable> = $z0;

        return $z0;
    }
    static com.bumptech.glide.disklrucache.DiskLruCache$Editor access$700(com.bumptech.glide.disklrucache.DiskLruCache$Entry)
    {
        com.bumptech.glide.disklrucache.DiskLruCache$Entry $r0;
        com.bumptech.glide.disklrucache.DiskLruCache$Editor r1;

        $r0 := @parameter0: com.bumptech.glide.disklrucache.DiskLruCache$Entry;

        r1 = $r0.<com.bumptech.glide.disklrucache.DiskLruCache$Entry: com.bumptech.glide.disklrucache.DiskLruCache$Editor currentEditor>;

        return r1;
    }
    static com.bumptech.glide.disklrucache.DiskLruCache$Editor access$702(com.bumptech.glide.disklrucache.DiskLruCache$Entry, com.bumptech.glide.disklrucache.DiskLruCache$Editor)
    {
        com.bumptech.glide.disklrucache.DiskLruCache$Entry $r0;
        com.bumptech.glide.disklrucache.DiskLruCache$Editor $r1;

        $r0 := @parameter0: com.bumptech.glide.disklrucache.DiskLruCache$Entry;

        $r1 := @parameter1: com.bumptech.glide.disklrucache.DiskLruCache$Editor;

        $r0.<com.bumptech.glide.disklrucache.DiskLruCache$Entry: com.bumptech.glide.disklrucache.DiskLruCache$Editor currentEditor> = $r1;

        return $r1;
    }
    static void access$800(com.bumptech.glide.disklrucache.DiskLruCache$Entry, java.lang.String[]) throws java.io.IOException
    {
        com.bumptech.glide.disklrucache.DiskLruCache$Entry $r0;
        java.lang.String[] $r1;

        $r0 := @parameter0: com.bumptech.glide.disklrucache.DiskLruCache$Entry;

        $r1 := @parameter1: java.lang.String[];

        specialinvoke $r0.<com.bumptech.glide.disklrucache.DiskLruCache$Entry: void setLengths(java.lang.String[])>($r1);

        return;
    }
    private java.io.IOException invalidLengths(java.lang.String[]) throws java.io.IOException
    {
        com.bumptech.glide.disklrucache.DiskLruCache$Entry r0;
        java.lang.String[] $r1;
        java.io.IOException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        r0 := @this: com.bumptech.glide.disklrucache.DiskLruCache$Entry;

        $r1 := @parameter0: java.lang.String[];

        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected journal line: ");

        $r4 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw $r2;
    }
    private void setLengths(java.lang.String[]) throws java.io.IOException
    {
        com.bumptech.glide.disklrucache.DiskLruCache$Entry r0;
        java.lang.String[] $r1;
        java.lang.NumberFormatException r2;
        int $i0, $i1;
        com.bumptech.glide.disklrucache.DiskLruCache $r3;
        java.io.IOException $r4;
        long[] $r5;
        java.lang.String $r6;
        long $l2;

        r0 := @this: com.bumptech.glide.disklrucache.DiskLruCache$Entry;

        $r1 := @parameter0: java.lang.String[];

        $i0 = lengthof $r1;

        $r3 = r0.<com.bumptech.glide.disklrucache.DiskLruCache$Entry: com.bumptech.glide.disklrucache.DiskLruCache this$0>;

        $i1 = staticinvoke <com.bumptech.glide.disklrucache.DiskLruCache: int access$1800(com.bumptech.glide.disklrucache.DiskLruCache)>($r3);

        if $i0 == $i1 goto label1;

        $r4 = specialinvoke r0.<com.bumptech.glide.disklrucache.DiskLruCache$Entry: java.io.IOException invalidLengths(java.lang.String[])>($r1);

        throw $r4;

     label1:
        $i0 = 0;

     label2:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label6;

        $r5 = r0.<com.bumptech.glide.disklrucache.DiskLruCache$Entry: long[] lengths>;

        $r6 = $r1[$i0];

     label3:
        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r6);

     label4:
        $r5[$i0] = $l2;

        $i0 = $i0 + 1;

        goto label2;

     label5:
        r2 := @caughtexception;

        $r4 = specialinvoke r0.<com.bumptech.glide.disklrucache.DiskLruCache$Entry: java.io.IOException invalidLengths(java.lang.String[])>($r1);

        throw $r4;

     label6:
        return;

        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }
    public java.io.File getCleanFile(int)
    {
        com.bumptech.glide.disklrucache.DiskLruCache$Entry r0;
        int $i0;
        java.io.File[] $r1;
        java.io.File $r2;

        r0 := @this: com.bumptech.glide.disklrucache.DiskLruCache$Entry;

        $i0 := @parameter0: int;

        $r1 = r0.<com.bumptech.glide.disklrucache.DiskLruCache$Entry: java.io.File[] cleanFiles>;

        $r2 = $r1[$i0];

        return $r2;
    }
    public java.io.File getDirtyFile(int)
    {
        com.bumptech.glide.disklrucache.DiskLruCache$Entry r0;
        int $i0;
        java.io.File[] $r1;
        java.io.File $r2;

        r0 := @this: com.bumptech.glide.disklrucache.DiskLruCache$Entry;

        $i0 := @parameter0: int;

        $r1 = r0.<com.bumptech.glide.disklrucache.DiskLruCache$Entry: java.io.File[] dirtyFiles>;

        $r2 = $r1[$i0];

        return $r2;
    }
    public java.lang.String getLengths() throws java.io.IOException
    {
        com.bumptech.glide.disklrucache.DiskLruCache$Entry r0;
        long[] r1;
        int i0, i2;
        java.lang.StringBuilder r2, $r3;
        long l1;
        java.lang.String $r4;

        r0 := @this: com.bumptech.glide.disklrucache.DiskLruCache$Entry;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        r1 = r0.<com.bumptech.glide.disklrucache.DiskLruCache$Entry: long[] lengths>;

        i0 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        l1 = r1[i2];

        $r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
