com.bumptech.glide.GenericTranscodeRequest extends com.bumptech.glide.GenericRequestBuilder implements com.bumptech.glide.DownloadOptions
private final java.lang.Class dataClass
private final com.bumptech.glide.load.model.ModelLoader modelLoader
private final com.bumptech.glide.RequestManager$OptionsApplier optionsApplier
private final java.lang.Class resourceClass
    void <init>(android.content.Context, com.bumptech.glide.Glide, java.lang.Class, com.bumptech.glide.load.model.ModelLoader, java.lang.Class, java.lang.Class, com.bumptech.glide.manager.RequestTracker, com.bumptech.glide.manager.Lifecycle, com.bumptech.glide.RequestManager$OptionsApplier)
    {
        com.bumptech.glide.GenericTranscodeRequest r0;
        android.content.Context $r1;
        com.bumptech.glide.Glide $r2;
        java.lang.Class r3, r5, r6;
        com.bumptech.glide.load.model.ModelLoader r4;
        com.bumptech.glide.manager.RequestTracker $r7;
        com.bumptech.glide.manager.Lifecycle $r8;
        com.bumptech.glide.RequestManager$OptionsApplier $r9;
        com.bumptech.glide.load.resource.transcode.ResourceTranscoder $r10;
        com.bumptech.glide.provider.LoadProvider $r11;

        r0 := @this: com.bumptech.glide.GenericTranscodeRequest;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.bumptech.glide.Glide;

        r3 := @parameter2: java.lang.Class;

        r4 := @parameter3: com.bumptech.glide.load.model.ModelLoader;

        r5 := @parameter4: java.lang.Class;

        r6 := @parameter5: java.lang.Class;

        $r7 := @parameter6: com.bumptech.glide.manager.RequestTracker;

        $r8 := @parameter7: com.bumptech.glide.manager.Lifecycle;

        $r9 := @parameter8: com.bumptech.glide.RequestManager$OptionsApplier;

        $r10 = staticinvoke <com.bumptech.glide.load.resource.transcode.UnitTranscoder: com.bumptech.glide.load.resource.transcode.ResourceTranscoder get()>();

        $r11 = staticinvoke <com.bumptech.glide.GenericTranscodeRequest: com.bumptech.glide.provider.LoadProvider build(com.bumptech.glide.Glide,com.bumptech.glide.load.model.ModelLoader,java.lang.Class,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder)>($r2, r4, r5, r6, $r10);

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: void <init>(android.content.Context,java.lang.Class,com.bumptech.glide.provider.LoadProvider,java.lang.Class,com.bumptech.glide.Glide,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.manager.Lifecycle)>($r1, r3, $r11, r6, $r2, $r7, $r8);

        r0.<com.bumptech.glide.GenericTranscodeRequest: com.bumptech.glide.load.model.ModelLoader modelLoader> = r4;

        r0.<com.bumptech.glide.GenericTranscodeRequest: java.lang.Class dataClass> = r5;

        r0.<com.bumptech.glide.GenericTranscodeRequest: java.lang.Class resourceClass> = r6;

        r0.<com.bumptech.glide.GenericTranscodeRequest: com.bumptech.glide.RequestManager$OptionsApplier optionsApplier> = $r9;

        return;
    }
    void <init>(java.lang.Class, com.bumptech.glide.GenericRequestBuilder, com.bumptech.glide.load.model.ModelLoader, java.lang.Class, java.lang.Class, com.bumptech.glide.RequestManager$OptionsApplier)
    {
        com.bumptech.glide.GenericTranscodeRequest r0;
        java.lang.Class r1, r4, r5;
        com.bumptech.glide.GenericRequestBuilder r2;
        com.bumptech.glide.load.model.ModelLoader r3;
        com.bumptech.glide.RequestManager$OptionsApplier $r6;
        com.bumptech.glide.Glide $r7;
        com.bumptech.glide.load.resource.transcode.ResourceTranscoder $r8;
        com.bumptech.glide.provider.LoadProvider $r9;

        r0 := @this: com.bumptech.glide.GenericTranscodeRequest;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: com.bumptech.glide.GenericRequestBuilder;

        r3 := @parameter2: com.bumptech.glide.load.model.ModelLoader;

        r4 := @parameter3: java.lang.Class;

        r5 := @parameter4: java.lang.Class;

        $r6 := @parameter5: com.bumptech.glide.RequestManager$OptionsApplier;

        $r7 = r2.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Glide glide>;

        $r8 = staticinvoke <com.bumptech.glide.load.resource.transcode.UnitTranscoder: com.bumptech.glide.load.resource.transcode.ResourceTranscoder get()>();

        $r9 = staticinvoke <com.bumptech.glide.GenericTranscodeRequest: com.bumptech.glide.provider.LoadProvider build(com.bumptech.glide.Glide,com.bumptech.glide.load.model.ModelLoader,java.lang.Class,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder)>($r7, r3, r4, r5, $r8);

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: void <init>(com.bumptech.glide.provider.LoadProvider,java.lang.Class,com.bumptech.glide.GenericRequestBuilder)>($r9, r1, r2);

        r0.<com.bumptech.glide.GenericTranscodeRequest: com.bumptech.glide.load.model.ModelLoader modelLoader> = r3;

        r0.<com.bumptech.glide.GenericTranscodeRequest: java.lang.Class dataClass> = r4;

        r0.<com.bumptech.glide.GenericTranscodeRequest: java.lang.Class resourceClass> = r5;

        r0.<com.bumptech.glide.GenericTranscodeRequest: com.bumptech.glide.RequestManager$OptionsApplier optionsApplier> = $r6;

        return;
    }
    private static com.bumptech.glide.provider.LoadProvider build(com.bumptech.glide.Glide, com.bumptech.glide.load.model.ModelLoader, java.lang.Class, java.lang.Class, com.bumptech.glide.load.resource.transcode.ResourceTranscoder)
    {
        com.bumptech.glide.Glide $r0;
        com.bumptech.glide.load.model.ModelLoader r1;
        java.lang.Class r2, r3;
        com.bumptech.glide.load.resource.transcode.ResourceTranscoder r4;
        com.bumptech.glide.provider.FixedLoadProvider $r5;
        com.bumptech.glide.provider.DataLoadProvider $r6;

        $r0 := @parameter0: com.bumptech.glide.Glide;

        r1 := @parameter1: com.bumptech.glide.load.model.ModelLoader;

        r2 := @parameter2: java.lang.Class;

        r3 := @parameter3: java.lang.Class;

        r4 := @parameter4: com.bumptech.glide.load.resource.transcode.ResourceTranscoder;

        $r6 = virtualinvoke $r0.<com.bumptech.glide.Glide: com.bumptech.glide.provider.DataLoadProvider buildDataProvider(java.lang.Class,java.lang.Class)>(r2, r3);

        $r5 = new com.bumptech.glide.provider.FixedLoadProvider;

        specialinvoke $r5.<com.bumptech.glide.provider.FixedLoadProvider: void <init>(com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.load.resource.transcode.ResourceTranscoder,com.bumptech.glide.provider.DataLoadProvider)>(r1, r4, $r6);

        return $r5;
    }
    private com.bumptech.glide.GenericRequestBuilder getDownloadOnlyRequest()
    {
        com.bumptech.glide.GenericTranscodeRequest r0;
        com.bumptech.glide.provider.FixedLoadProvider r1;
        com.bumptech.glide.load.resource.transcode.ResourceTranscoder $r2;
        com.bumptech.glide.Glide $r3;
        java.lang.Class $r4;
        com.bumptech.glide.provider.DataLoadProvider $r5;
        com.bumptech.glide.load.model.ModelLoader $r6;
        com.bumptech.glide.RequestManager$OptionsApplier $r7;
        com.bumptech.glide.GenericRequestBuilder $r8;
        com.bumptech.glide.Priority $r9;
        com.bumptech.glide.load.engine.DiskCacheStrategy $r10;

        r0 := @this: com.bumptech.glide.GenericTranscodeRequest;

        $r2 = staticinvoke <com.bumptech.glide.load.resource.transcode.UnitTranscoder: com.bumptech.glide.load.resource.transcode.ResourceTranscoder get()>();

        $r3 = r0.<com.bumptech.glide.GenericTranscodeRequest: com.bumptech.glide.Glide glide>;

        $r4 = r0.<com.bumptech.glide.GenericTranscodeRequest: java.lang.Class dataClass>;

        $r5 = virtualinvoke $r3.<com.bumptech.glide.Glide: com.bumptech.glide.provider.DataLoadProvider buildDataProvider(java.lang.Class,java.lang.Class)>($r4, class "Ljava/io/File;");

        r1 = new com.bumptech.glide.provider.FixedLoadProvider;

        $r6 = r0.<com.bumptech.glide.GenericTranscodeRequest: com.bumptech.glide.load.model.ModelLoader modelLoader>;

        specialinvoke r1.<com.bumptech.glide.provider.FixedLoadProvider: void <init>(com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.load.resource.transcode.ResourceTranscoder,com.bumptech.glide.provider.DataLoadProvider)>($r6, $r2, $r5);

        $r7 = r0.<com.bumptech.glide.GenericTranscodeRequest: com.bumptech.glide.RequestManager$OptionsApplier optionsApplier>;

        $r8 = new com.bumptech.glide.GenericRequestBuilder;

        specialinvoke $r8.<com.bumptech.glide.GenericRequestBuilder: void <init>(com.bumptech.glide.provider.LoadProvider,java.lang.Class,com.bumptech.glide.GenericRequestBuilder)>(r1, class "Ljava/io/File;", r0);

        $r8 = virtualinvoke $r7.<com.bumptech.glide.RequestManager$OptionsApplier: com.bumptech.glide.GenericRequestBuilder apply(com.bumptech.glide.GenericRequestBuilder)>($r8);

        $r9 = <com.bumptech.glide.Priority: com.bumptech.glide.Priority LOW>;

        $r8 = virtualinvoke $r8.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder priority(com.bumptech.glide.Priority)>($r9);

        $r10 = <com.bumptech.glide.load.engine.DiskCacheStrategy: com.bumptech.glide.load.engine.DiskCacheStrategy SOURCE>;

        $r8 = virtualinvoke $r8.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder diskCacheStrategy(com.bumptech.glide.load.engine.DiskCacheStrategy)>($r10);

        $r8 = virtualinvoke $r8.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder skipMemoryCache(boolean)>(1);

        return $r8;
    }
    public com.bumptech.glide.request.FutureTarget downloadOnly(int, int)
    {
        com.bumptech.glide.GenericTranscodeRequest r0;
        int $i0, $i1;
        com.bumptech.glide.GenericRequestBuilder $r1;
        com.bumptech.glide.request.FutureTarget $r2;

        r0 := @this: com.bumptech.glide.GenericTranscodeRequest;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = specialinvoke r0.<com.bumptech.glide.GenericTranscodeRequest: com.bumptech.glide.GenericRequestBuilder getDownloadOnlyRequest()>();

        $r2 = virtualinvoke $r1.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.FutureTarget into(int,int)>($i0, $i1);

        return $r2;
    }
    public com.bumptech.glide.request.target.Target downloadOnly(com.bumptech.glide.request.target.Target)
    {
        com.bumptech.glide.GenericTranscodeRequest r0;
        com.bumptech.glide.request.target.Target r1;
        com.bumptech.glide.GenericRequestBuilder $r2;

        r0 := @this: com.bumptech.glide.GenericTranscodeRequest;

        r1 := @parameter0: com.bumptech.glide.request.target.Target;

        $r2 = specialinvoke r0.<com.bumptech.glide.GenericTranscodeRequest: com.bumptech.glide.GenericRequestBuilder getDownloadOnlyRequest()>();

        r1 = virtualinvoke $r2.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target)>(r1);

        return r1;
    }
    public com.bumptech.glide.GenericRequestBuilder transcode(com.bumptech.glide.load.resource.transcode.ResourceTranscoder, java.lang.Class)
    {
        com.bumptech.glide.GenericTranscodeRequest r0;
        com.bumptech.glide.load.resource.transcode.ResourceTranscoder r1;
        java.lang.Class r2, $r3, $r4;
        com.bumptech.glide.Glide $r5;
        com.bumptech.glide.load.model.ModelLoader $r6;
        com.bumptech.glide.provider.LoadProvider $r7;
        com.bumptech.glide.RequestManager$OptionsApplier $r8;
        com.bumptech.glide.GenericRequestBuilder $r9;

        r0 := @this: com.bumptech.glide.GenericTranscodeRequest;

        r1 := @parameter0: com.bumptech.glide.load.resource.transcode.ResourceTranscoder;

        r2 := @parameter1: java.lang.Class;

        $r5 = r0.<com.bumptech.glide.GenericTranscodeRequest: com.bumptech.glide.Glide glide>;

        $r6 = r0.<com.bumptech.glide.GenericTranscodeRequest: com.bumptech.glide.load.model.ModelLoader modelLoader>;

        $r3 = r0.<com.bumptech.glide.GenericTranscodeRequest: java.lang.Class dataClass>;

        $r4 = r0.<com.bumptech.glide.GenericTranscodeRequest: java.lang.Class resourceClass>;

        $r7 = staticinvoke <com.bumptech.glide.GenericTranscodeRequest: com.bumptech.glide.provider.LoadProvider build(com.bumptech.glide.Glide,com.bumptech.glide.load.model.ModelLoader,java.lang.Class,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder)>($r5, $r6, $r3, $r4, r1);

        $r8 = r0.<com.bumptech.glide.GenericTranscodeRequest: com.bumptech.glide.RequestManager$OptionsApplier optionsApplier>;

        $r9 = new com.bumptech.glide.GenericRequestBuilder;

        specialinvoke $r9.<com.bumptech.glide.GenericRequestBuilder: void <init>(com.bumptech.glide.provider.LoadProvider,java.lang.Class,com.bumptech.glide.GenericRequestBuilder)>($r7, r2, r0);

        $r9 = virtualinvoke $r8.<com.bumptech.glide.RequestManager$OptionsApplier: com.bumptech.glide.GenericRequestBuilder apply(com.bumptech.glide.GenericRequestBuilder)>($r9);

        return $r9;
    }
