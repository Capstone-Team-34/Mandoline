com.bumptech.glide.load.engine.CacheLoader extends java.lang.Object
private static final java.lang.String TAG
private final com.bumptech.glide.load.engine.cache.DiskCache diskCache
    public void <init>(com.bumptech.glide.load.engine.cache.DiskCache)
    {
        com.bumptech.glide.load.engine.CacheLoader r0;
        com.bumptech.glide.load.engine.cache.DiskCache $r1;

        r0 := @this: com.bumptech.glide.load.engine.CacheLoader;

        $r1 := @parameter0: com.bumptech.glide.load.engine.cache.DiskCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.load.engine.CacheLoader: com.bumptech.glide.load.engine.cache.DiskCache diskCache> = $r1;

        return;
    }
    public com.bumptech.glide.load.engine.Resource load(com.bumptech.glide.load.Key, com.bumptech.glide.load.ResourceDecoder, int, int)
    {
        com.bumptech.glide.load.engine.CacheLoader r0;
        com.bumptech.glide.load.Key $r1;
        com.bumptech.glide.load.ResourceDecoder r2;
        int $i0, $i1;
        java.io.IOException r3;
        com.bumptech.glide.load.engine.cache.DiskCache $r4;
        java.io.File $r5;
        com.bumptech.glide.load.engine.Resource r6, $r7;
        boolean $z0;

        r0 := @this: com.bumptech.glide.load.engine.CacheLoader;

        $r1 := @parameter0: com.bumptech.glide.load.Key;

        r2 := @parameter1: com.bumptech.glide.load.ResourceDecoder;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r4 = r0.<com.bumptech.glide.load.engine.CacheLoader: com.bumptech.glide.load.engine.cache.DiskCache diskCache>;

        $r5 = interfaceinvoke $r4.<com.bumptech.glide.load.engine.cache.DiskCache: java.io.File get(com.bumptech.glide.load.Key)>($r1);

        if $r5 != null goto label1;

        return null;

     label1:
        r6 = null;

     label2:
        $r7 = interfaceinvoke r2.<com.bumptech.glide.load.ResourceDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int)>($r5, $i0, $i1);

     label3:
        r6 = $r7;

     label4:
        if r6 != null goto label7;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("CacheLoader", 3);

        if $z0 == 0 goto label5;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CacheLoader", "Failed to decode image from cache or not present in cache");

     label5:
        $r4 = r0.<com.bumptech.glide.load.engine.CacheLoader: com.bumptech.glide.load.engine.cache.DiskCache diskCache>;

        interfaceinvoke $r4.<com.bumptech.glide.load.engine.cache.DiskCache: void delete(com.bumptech.glide.load.Key)>($r1);

        return r6;

     label6:
        r3 := @caughtexception;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("CacheLoader", 3);

        if $z0 == 0 goto label4;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("CacheLoader", "Exception decoding image from cache", r3);

        goto label4;

     label7:
        return r6;

        catch java.io.IOException from label2 to label3 with label6;
    }
