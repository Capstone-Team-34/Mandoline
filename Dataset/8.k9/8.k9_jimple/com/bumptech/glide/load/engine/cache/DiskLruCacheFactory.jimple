com.bumptech.glide.load.engine.cache.DiskLruCacheFactory extends java.lang.Object implements com.bumptech.glide.load.engine.cache.DiskCache$Factory
private final com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$CacheDirectoryGetter cacheDirectoryGetter
private final int diskCacheSize
    public void <init>(com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$CacheDirectoryGetter, int)
    {
        com.bumptech.glide.load.engine.cache.DiskLruCacheFactory r0;
        com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$CacheDirectoryGetter $r1;
        int $i0;

        r0 := @this: com.bumptech.glide.load.engine.cache.DiskLruCacheFactory;

        $r1 := @parameter0: com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$CacheDirectoryGetter;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.load.engine.cache.DiskLruCacheFactory: int diskCacheSize> = $i0;

        r0.<com.bumptech.glide.load.engine.cache.DiskLruCacheFactory: com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$CacheDirectoryGetter cacheDirectoryGetter> = $r1;

        return;
    }
    public void <init>(java.lang.String, int)
    {
        com.bumptech.glide.load.engine.cache.DiskLruCacheFactory r0;
        java.lang.String $r1;
        int $i0;
        com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$1 $r2;

        r0 := @this: com.bumptech.glide.load.engine.cache.DiskLruCacheFactory;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = new com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$1;

        specialinvoke $r2.<com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$1: void <init>(java.lang.String)>($r1);

        specialinvoke r0.<com.bumptech.glide.load.engine.cache.DiskLruCacheFactory: void <init>(com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$CacheDirectoryGetter,int)>($r2, $i0);

        return;
    }
    public void <init>(java.lang.String, java.lang.String, int)
    {
        com.bumptech.glide.load.engine.cache.DiskLruCacheFactory r0;
        java.lang.String $r1, $r2;
        int $i0;
        com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$2 $r3;

        r0 := @this: com.bumptech.glide.load.engine.cache.DiskLruCacheFactory;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r3 = new com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$2;

        specialinvoke $r3.<com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$2: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        specialinvoke r0.<com.bumptech.glide.load.engine.cache.DiskLruCacheFactory: void <init>(com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$CacheDirectoryGetter,int)>($r3, $i0);

        return;
    }
    public com.bumptech.glide.load.engine.cache.DiskCache build()
    {
        com.bumptech.glide.load.engine.cache.DiskLruCacheFactory r0;
        com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$CacheDirectoryGetter $r1;
        java.io.File $r2;
        boolean $z0;
        int $i0;
        com.bumptech.glide.load.engine.cache.DiskCache $r3;

        r0 := @this: com.bumptech.glide.load.engine.cache.DiskLruCacheFactory;

        $r1 = r0.<com.bumptech.glide.load.engine.cache.DiskLruCacheFactory: com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$CacheDirectoryGetter cacheDirectoryGetter>;

        $r2 = interfaceinvoke $r1.<com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$CacheDirectoryGetter: java.io.File getCacheDirectory()>();

        if $r2 != null goto label1;

        return null;

     label1:
        $z0 = virtualinvoke $r2.<java.io.File: boolean mkdirs()>();

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label3;

        $z0 = virtualinvoke $r2.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label3;

     label2:
        $i0 = r0.<com.bumptech.glide.load.engine.cache.DiskLruCacheFactory: int diskCacheSize>;

        $r3 = staticinvoke <com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: com.bumptech.glide.load.engine.cache.DiskCache get(java.io.File,int)>($r2, $i0);

        return $r3;

     label3:
        return null;
    }
