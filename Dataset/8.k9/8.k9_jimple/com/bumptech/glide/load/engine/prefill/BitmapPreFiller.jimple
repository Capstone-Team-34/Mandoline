com.bumptech.glide.load.engine.prefill.BitmapPreFiller extends java.lang.Object
private final com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool
private com.bumptech.glide.load.engine.prefill.BitmapPreFillRunner current
private final com.bumptech.glide.load.DecodeFormat defaultFormat
private final android.os.Handler handler
private final com.bumptech.glide.load.engine.cache.MemoryCache memoryCache
    public void <init>(com.bumptech.glide.load.engine.cache.MemoryCache, com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool, com.bumptech.glide.load.DecodeFormat)
    {
        com.bumptech.glide.load.engine.prefill.BitmapPreFiller r0;
        com.bumptech.glide.load.engine.cache.MemoryCache $r1;
        com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool $r2;
        com.bumptech.glide.load.DecodeFormat $r3;
        android.os.Handler $r4;
        android.os.Looper $r5;

        r0 := @this: com.bumptech.glide.load.engine.prefill.BitmapPreFiller;

        $r1 := @parameter0: com.bumptech.glide.load.engine.cache.MemoryCache;

        $r2 := @parameter1: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;

        $r3 := @parameter2: com.bumptech.glide.load.DecodeFormat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new android.os.Handler;

        $r5 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r4.<android.os.Handler: void <init>(android.os.Looper)>($r5);

        r0.<com.bumptech.glide.load.engine.prefill.BitmapPreFiller: android.os.Handler handler> = $r4;

        r0.<com.bumptech.glide.load.engine.prefill.BitmapPreFiller: com.bumptech.glide.load.engine.cache.MemoryCache memoryCache> = $r1;

        r0.<com.bumptech.glide.load.engine.prefill.BitmapPreFiller: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool> = $r2;

        r0.<com.bumptech.glide.load.engine.prefill.BitmapPreFiller: com.bumptech.glide.load.DecodeFormat defaultFormat> = $r3;

        return;
    }
    private static int getSizeInBytes(com.bumptech.glide.load.engine.prefill.PreFillType)
    {
        com.bumptech.glide.load.engine.prefill.PreFillType $r0;
        int $i0, $i1;
        android.graphics.Bitmap$Config $r1;

        $r0 := @parameter0: com.bumptech.glide.load.engine.prefill.PreFillType;

        $i0 = virtualinvoke $r0.<com.bumptech.glide.load.engine.prefill.PreFillType: int getWidth()>();

        $i1 = virtualinvoke $r0.<com.bumptech.glide.load.engine.prefill.PreFillType: int getHeight()>();

        $r1 = virtualinvoke $r0.<com.bumptech.glide.load.engine.prefill.PreFillType: android.graphics.Bitmap$Config getConfig()>();

        $i0 = staticinvoke <com.bumptech.glide.util.Util: int getBitmapByteSize(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r1);

        return $i0;
    }
    com.bumptech.glide.load.engine.prefill.PreFillQueue generateAllocationOrder(com.bumptech.glide.load.engine.prefill.PreFillType[])
    {
        com.bumptech.glide.load.engine.prefill.BitmapPreFiller r0;
        com.bumptech.glide.load.engine.prefill.PreFillType[] $r1;
        java.util.HashMap r2;
        int i0, i1, $i2, i3, $i4;
        float f0, $f1;
        com.bumptech.glide.load.engine.cache.MemoryCache $r3;
        com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool $r4;
        com.bumptech.glide.load.engine.prefill.PreFillType r5;
        java.lang.Integer $r6;
        com.bumptech.glide.load.engine.prefill.PreFillQueue $r7;

        r0 := @this: com.bumptech.glide.load.engine.prefill.BitmapPreFiller;

        $r1 := @parameter0: com.bumptech.glide.load.engine.prefill.PreFillType[];

        $r3 = r0.<com.bumptech.glide.load.engine.prefill.BitmapPreFiller: com.bumptech.glide.load.engine.cache.MemoryCache memoryCache>;

        i1 = interfaceinvoke $r3.<com.bumptech.glide.load.engine.cache.MemoryCache: int getMaxSize()>();

        $r3 = r0.<com.bumptech.glide.load.engine.prefill.BitmapPreFiller: com.bumptech.glide.load.engine.cache.MemoryCache memoryCache>;

        $i2 = interfaceinvoke $r3.<com.bumptech.glide.load.engine.cache.MemoryCache: int getCurrentSize()>();

        i1 = i1 - $i2;

        $r4 = r0.<com.bumptech.glide.load.engine.prefill.BitmapPreFiller: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool>;

        $i2 = interfaceinvoke $r4.<com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool: int getMaxSize()>();

        i1 = i1 + $i2;

        $i2 = 0;

        i0 = lengthof $r1;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        r5 = $r1[i3];

        $i4 = virtualinvoke r5.<com.bumptech.glide.load.engine.prefill.PreFillType: int getWeight()>();

        $i2 = $i2 + $i4;

        i3 = i3 + 1;

        goto label1;

     label2:
        f0 = (float) i1;

        $f1 = (float) $i2;

        f0 = f0 / $f1;

        r2 = new java.util.HashMap;

        specialinvoke r2.<java.util.HashMap: void <init>()>();

        i1 = lengthof $r1;

        $i2 = 0;

     label3:
        if $i2 >= i1 goto label4;

        r5 = $r1[$i2];

        i0 = virtualinvoke r5.<com.bumptech.glide.load.engine.prefill.PreFillType: int getWeight()>();

        $f1 = (float) i0;

        $f1 = $f1 * f0;

        i0 = staticinvoke <java.lang.Math: int round(float)>($f1);

        i3 = staticinvoke <com.bumptech.glide.load.engine.prefill.BitmapPreFiller: int getSizeInBytes(com.bumptech.glide.load.engine.prefill.PreFillType)>(r5);

        i0 = i0 / i3;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r6);

        $i2 = $i2 + 1;

        goto label3;

     label4:
        $r7 = new com.bumptech.glide.load.engine.prefill.PreFillQueue;

        specialinvoke $r7.<com.bumptech.glide.load.engine.prefill.PreFillQueue: void <init>(java.util.Map)>(r2);

        return $r7;
    }
    public transient void preFill(com.bumptech.glide.load.engine.prefill.PreFillType$Builder[])
    {
        com.bumptech.glide.load.engine.prefill.BitmapPreFiller r0;
        com.bumptech.glide.load.engine.prefill.PreFillType$Builder[] $r1;
        com.bumptech.glide.load.engine.prefill.PreFillType[] r2;
        com.bumptech.glide.load.engine.prefill.PreFillType$Builder r3;
        com.bumptech.glide.load.engine.cache.MemoryCache $r4;
        com.bumptech.glide.load.engine.prefill.BitmapPreFillRunner $r5;
        int $i0, $i1;
        android.graphics.Bitmap$Config $r6;
        com.bumptech.glide.load.DecodeFormat $r7, $r8;
        com.bumptech.glide.load.engine.prefill.PreFillType $r9;
        com.bumptech.glide.load.engine.prefill.PreFillQueue $r10;
        com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool $r11;
        android.os.Handler $r12;

        r0 := @this: com.bumptech.glide.load.engine.prefill.BitmapPreFiller;

        $r1 := @parameter0: com.bumptech.glide.load.engine.prefill.PreFillType$Builder[];

        $r5 = r0.<com.bumptech.glide.load.engine.prefill.BitmapPreFiller: com.bumptech.glide.load.engine.prefill.BitmapPreFillRunner current>;

        if $r5 == null goto label1;

        $r5 = r0.<com.bumptech.glide.load.engine.prefill.BitmapPreFiller: com.bumptech.glide.load.engine.prefill.BitmapPreFillRunner current>;

        virtualinvoke $r5.<com.bumptech.glide.load.engine.prefill.BitmapPreFillRunner: void cancel()>();

     label1:
        $i0 = lengthof $r1;

        r2 = newarray (com.bumptech.glide.load.engine.prefill.PreFillType)[$i0];

        $i0 = 0;

     label2:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label7;

        r3 = $r1[$i0];

        $r6 = virtualinvoke r3.<com.bumptech.glide.load.engine.prefill.PreFillType$Builder: android.graphics.Bitmap$Config getConfig()>();

        if $r6 != null goto label5;

        $r7 = r0.<com.bumptech.glide.load.engine.prefill.BitmapPreFiller: com.bumptech.glide.load.DecodeFormat defaultFormat>;

        $r8 = <com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat ALWAYS_ARGB_8888>;

        if $r7 == $r8 goto label3;

        $r7 = r0.<com.bumptech.glide.load.engine.prefill.BitmapPreFiller: com.bumptech.glide.load.DecodeFormat defaultFormat>;

        $r8 = <com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat PREFER_ARGB_8888>;

        if $r7 != $r8 goto label6;

     label3:
        $r6 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

     label4:
        virtualinvoke r3.<com.bumptech.glide.load.engine.prefill.PreFillType$Builder: com.bumptech.glide.load.engine.prefill.PreFillType$Builder setConfig(android.graphics.Bitmap$Config)>($r6);

     label5:
        $r9 = virtualinvoke r3.<com.bumptech.glide.load.engine.prefill.PreFillType$Builder: com.bumptech.glide.load.engine.prefill.PreFillType build()>();

        r2[$i0] = $r9;

        $i0 = $i0 + 1;

        goto label2;

     label6:
        $r6 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;

        goto label4;

     label7:
        $r10 = virtualinvoke r0.<com.bumptech.glide.load.engine.prefill.BitmapPreFiller: com.bumptech.glide.load.engine.prefill.PreFillQueue generateAllocationOrder(com.bumptech.glide.load.engine.prefill.PreFillType[])>(r2);

        $r5 = new com.bumptech.glide.load.engine.prefill.BitmapPreFillRunner;

        $r11 = r0.<com.bumptech.glide.load.engine.prefill.BitmapPreFiller: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool>;

        $r4 = r0.<com.bumptech.glide.load.engine.prefill.BitmapPreFiller: com.bumptech.glide.load.engine.cache.MemoryCache memoryCache>;

        specialinvoke $r5.<com.bumptech.glide.load.engine.prefill.BitmapPreFillRunner: void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.prefill.PreFillQueue)>($r11, $r4, $r10);

        r0.<com.bumptech.glide.load.engine.prefill.BitmapPreFiller: com.bumptech.glide.load.engine.prefill.BitmapPreFillRunner current> = $r5;

        $r12 = r0.<com.bumptech.glide.load.engine.prefill.BitmapPreFiller: android.os.Handler handler>;

        $r5 = r0.<com.bumptech.glide.load.engine.prefill.BitmapPreFiller: com.bumptech.glide.load.engine.prefill.BitmapPreFillRunner current>;

        virtualinvoke $r12.<android.os.Handler: boolean post(java.lang.Runnable)>($r5);

        return;
    }
