com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key extends java.lang.Object implements com.bumptech.glide.load.engine.bitmap_recycle.Poolable
private android.graphics.Bitmap$Config config
private final com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool pool
private int size
    public void <init>(com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool)
    {
        com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key r0;
        com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool $r1;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key;

        $r1 := @parameter0: com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key: com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool pool> = $r1;

        return;
    }
    void <init>(com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool, int, android.graphics.Bitmap$Config)
    {
        com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key r0;
        com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool $r1;
        int $i0;
        android.graphics.Bitmap$Config $r2;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key;

        $r1 := @parameter0: com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.graphics.Bitmap$Config;

        specialinvoke r0.<com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key: void <init>(com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool)>($r1);

        virtualinvoke r0.<com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key: void init(int,android.graphics.Bitmap$Config)>($i0, $r2);

        return;
    }
    static int access$000(com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key)
    {
        com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key $r0;
        int i0;

        $r0 := @parameter0: com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key;

        i0 = $r0.<com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key: int size>;

        return i0;
    }
    public boolean equals(java.lang.Object)
    {
        com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key r0, r2;
        java.lang.Object $r1;
        boolean $z0;
        int $i0, $i1;
        android.graphics.Bitmap$Config $r3, $r4;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key;

        if $z0 == 0 goto label3;

        r2 = (com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key) $r1;

        $i0 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key: int size>;

        $i1 = r2.<com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key: int size>;

        if $i0 != $i1 goto label3;

        $r3 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key: android.graphics.Bitmap$Config config>;

        if $r3 != null goto label2;

        $r3 = r2.<com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key: android.graphics.Bitmap$Config config>;

        if $r3 != null goto label3;

     label1:
        return 1;

     label2:
        $r3 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key: android.graphics.Bitmap$Config config>;

        $r4 = r2.<com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key: android.graphics.Bitmap$Config config>;

        $z0 = virtualinvoke $r3.<android.graphics.Bitmap$Config: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        goto label1;

     label3:
        return 0;
    }
    public int hashCode()
    {
        com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key r0;
        int $i0, $i1;
        android.graphics.Bitmap$Config $r1;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key;

        $i0 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key: int size>;

        $i0 = $i0 * 31;

        $r1 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key: android.graphics.Bitmap$Config config>;

        if $r1 == null goto label2;

        $r1 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key: android.graphics.Bitmap$Config config>;

        $i1 = virtualinvoke $r1.<android.graphics.Bitmap$Config: int hashCode()>();

     label1:
        $i0 = $i0 + $i1;

        return $i0;

     label2:
        $i1 = 0;

        goto label1;
    }
    public void init(int, android.graphics.Bitmap$Config)
    {
        com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key r0;
        int $i0;
        android.graphics.Bitmap$Config $r1;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.graphics.Bitmap$Config;

        r0.<com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key: int size> = $i0;

        r0.<com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key: android.graphics.Bitmap$Config config> = $r1;

        return;
    }
    public void offer()
    {
        com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key r0;
        com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool $r1;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key;

        $r1 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key: com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool pool>;

        virtualinvoke $r1.<com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool: void offer(com.bumptech.glide.load.engine.bitmap_recycle.Poolable)>(r0);

        return;
    }
    public java.lang.String toString()
    {
        com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key r0;
        android.graphics.Bitmap$Config $r1;
        java.lang.String $r2;
        int $i0;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key;

        $i0 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key: int size>;

        $r1 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key: android.graphics.Bitmap$Config config>;

        $r2 = staticinvoke <com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: java.lang.String access$100(int,android.graphics.Bitmap$Config)>($i0, $r1);

        return $r2;
    }
