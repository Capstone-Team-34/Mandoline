com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy extends java.lang.Object implements com.bumptech.glide.load.engine.bitmap_recycle.LruPoolStrategy
private final com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap groupedMap
private final com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool keyPool
    void <init>()
    {
        com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy r0;
        com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool $r1;
        com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap $r2;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool;

        specialinvoke $r1.<com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool: void <init>()>();

        r0.<com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy: com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool keyPool> = $r1;

        $r2 = new com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap;

        specialinvoke $r2.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: void <init>()>();

        r0.<com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap groupedMap> = $r2;

        return;
    }
    static java.lang.String access$000(int, int, android.graphics.Bitmap$Config)
    {
        int $i0, $i1;
        android.graphics.Bitmap$Config $r0;
        java.lang.String $r1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0 := @parameter2: android.graphics.Bitmap$Config;

        $r1 = staticinvoke <com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy: java.lang.String getBitmapString(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r0);

        return $r1;
    }
    private static java.lang.String getBitmapString(int, int, android.graphics.Bitmap$Config)
    {
        int $i0, $i1;
        android.graphics.Bitmap$Config $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0 := @parameter2: android.graphics.Bitmap$Config;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
    private static java.lang.String getBitmapString(android.graphics.Bitmap)
    {
        android.graphics.Bitmap $r0;
        int $i0, $i1;
        android.graphics.Bitmap$Config $r1;
        java.lang.String $r2;

        $r0 := @parameter0: android.graphics.Bitmap;

        $i0 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        $r1 = virtualinvoke $r0.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        $r2 = staticinvoke <com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy: java.lang.String getBitmapString(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r1);

        return $r2;
    }
    public android.graphics.Bitmap get(int, int, android.graphics.Bitmap$Config)
    {
        com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy r0;
        int $i0, $i1;
        android.graphics.Bitmap$Config $r1;
        com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool $r2;
        com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key $r3;
        com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap $r4;
        java.lang.Object $r5;
        android.graphics.Bitmap $r6;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.graphics.Bitmap$Config;

        $r2 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy: com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool keyPool>;

        $r3 = virtualinvoke $r2.<com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool: com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key get(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r1);

        $r4 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap groupedMap>;

        $r5 = virtualinvoke $r4.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: java.lang.Object get(com.bumptech.glide.load.engine.bitmap_recycle.Poolable)>($r3);

        $r6 = (android.graphics.Bitmap) $r5;

        return $r6;
    }
    public int getSize(android.graphics.Bitmap)
    {
        com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy r0;
        android.graphics.Bitmap $r1;
        int $i0;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy;

        $r1 := @parameter0: android.graphics.Bitmap;

        $i0 = staticinvoke <com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>($r1);

        return $i0;
    }
    public java.lang.String logBitmap(int, int, android.graphics.Bitmap$Config)
    {
        com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy r0;
        int $i0, $i1;
        android.graphics.Bitmap$Config $r1;
        java.lang.String $r2;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.graphics.Bitmap$Config;

        $r2 = staticinvoke <com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy: java.lang.String getBitmapString(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r1);

        return $r2;
    }
    public java.lang.String logBitmap(android.graphics.Bitmap)
    {
        com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy r0;
        android.graphics.Bitmap $r1;
        java.lang.String $r2;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy;

        $r1 := @parameter0: android.graphics.Bitmap;

        $r2 = staticinvoke <com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy: java.lang.String getBitmapString(android.graphics.Bitmap)>($r1);

        return $r2;
    }
    public void put(android.graphics.Bitmap)
    {
        com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy r0;
        android.graphics.Bitmap $r1;
        com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool $r2;
        int $i0, $i1;
        android.graphics.Bitmap$Config $r3;
        com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key $r4;
        com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap $r5;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy;

        $r1 := @parameter0: android.graphics.Bitmap;

        $r2 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy: com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool keyPool>;

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();

        $r3 = virtualinvoke $r1.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        $r4 = virtualinvoke $r2.<com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool: com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key get(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r3);

        $r5 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap groupedMap>;

        virtualinvoke $r5.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: void put(com.bumptech.glide.load.engine.bitmap_recycle.Poolable,java.lang.Object)>($r4, $r1);

        return;
    }
    public android.graphics.Bitmap removeLast()
    {
        com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy r0;
        java.lang.Object $r1;
        com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap $r2;
        android.graphics.Bitmap $r3;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy;

        $r2 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap groupedMap>;

        $r1 = virtualinvoke $r2.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: java.lang.Object removeLast()>();

        $r3 = (android.graphics.Bitmap) $r1;

        return $r3;
    }
    public java.lang.String toString()
    {
        com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy r0;
        java.lang.StringBuilder $r1;
        com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap $r2;
        java.lang.String $r3;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AttributeStrategy:\n  ");

        $r2 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap groupedMap>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
