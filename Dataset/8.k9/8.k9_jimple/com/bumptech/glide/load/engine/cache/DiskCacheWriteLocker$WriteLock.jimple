com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock extends java.lang.Object
int interestedThreads
final java.util.concurrent.locks.Lock lock
    private void <init>()
    {
        com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock r0;
        java.util.concurrent.locks.ReentrantLock $r1;

        r0 := @this: com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock: java.util.concurrent.locks.Lock lock> = $r1;

        return;
    }
    void <init>(com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$1)
    {
        com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock r0;
        com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$1 $r1;

        r0 := @this: com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock;

        $r1 := @parameter0: com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$1;

        specialinvoke r0.<com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock: void <init>()>();

        return;
    }
