com.bumptech.glide.load.model.UrlLoader extends java.lang.Object implements com.bumptech.glide.load.model.ModelLoader
private final com.bumptech.glide.load.model.ModelLoader glideUrlLoader
    public void <init>(com.bumptech.glide.load.model.ModelLoader)
    {
        com.bumptech.glide.load.model.UrlLoader r0;
        com.bumptech.glide.load.model.ModelLoader r1;

        r0 := @this: com.bumptech.glide.load.model.UrlLoader;

        r1 := @parameter0: com.bumptech.glide.load.model.ModelLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.load.model.UrlLoader: com.bumptech.glide.load.model.ModelLoader glideUrlLoader> = r1;

        return;
    }
    public volatile com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.Object, int, int)
    {
        com.bumptech.glide.load.model.UrlLoader r0;
        int $i0, $i1;
        com.bumptech.glide.load.data.DataFetcher $r1;
        java.lang.Object $r2;
        java.net.URL $r3;

        r0 := @this: com.bumptech.glide.load.model.UrlLoader;

        $r2 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r3 = (java.net.URL) $r2;

        $r1 = virtualinvoke r0.<com.bumptech.glide.load.model.UrlLoader: com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.net.URL,int,int)>($r3, $i0, $i1);

        return $r1;
    }
    public com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.net.URL, int, int)
    {
        com.bumptech.glide.load.model.UrlLoader r0;
        java.net.URL $r1;
        int $i0, $i1;
        com.bumptech.glide.load.model.GlideUrl $r2;
        com.bumptech.glide.load.data.DataFetcher $r3;
        com.bumptech.glide.load.model.ModelLoader $r4;

        r0 := @this: com.bumptech.glide.load.model.UrlLoader;

        $r1 := @parameter0: java.net.URL;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r4 = r0.<com.bumptech.glide.load.model.UrlLoader: com.bumptech.glide.load.model.ModelLoader glideUrlLoader>;

        $r2 = new com.bumptech.glide.load.model.GlideUrl;

        specialinvoke $r2.<com.bumptech.glide.load.model.GlideUrl: void <init>(java.net.URL)>($r1);

        $r3 = interfaceinvoke $r4.<com.bumptech.glide.load.model.ModelLoader: com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.Object,int,int)>($r2, $i0, $i1);

        return $r3;
    }
