com.bumptech.glide.load.resource.bitmap.BitmapTransformation extends java.lang.Object implements com.bumptech.glide.load.Transformation
private com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool
    public void <init>(android.content.Context)
    {
        com.bumptech.glide.load.resource.bitmap.BitmapTransformation r0;
        android.content.Context $r1;
        com.bumptech.glide.Glide $r2;
        com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool $r3;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.BitmapTransformation;

        $r1 := @parameter0: android.content.Context;

        $r2 = staticinvoke <com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>($r1);

        $r3 = virtualinvoke $r2.<com.bumptech.glide.Glide: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool getBitmapPool()>();

        specialinvoke r0.<com.bumptech.glide.load.resource.bitmap.BitmapTransformation: void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)>($r3);

        return;
    }
    public void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)
    {
        com.bumptech.glide.load.resource.bitmap.BitmapTransformation r0;
        com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool $r1;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.BitmapTransformation;

        $r1 := @parameter0: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.load.resource.bitmap.BitmapTransformation: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool> = $r1;

        return;
    }
protected abstract android.graphics.Bitmap transform(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool, android.graphics.Bitmap, int, int) { 
// no body
} 
    public final com.bumptech.glide.load.engine.Resource transform(com.bumptech.glide.load.engine.Resource, int, int)
    {
        com.bumptech.glide.load.resource.bitmap.BitmapTransformation r0;
        com.bumptech.glide.load.engine.Resource r1;
        int $i0, $i1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.lang.Object $r5;
        android.graphics.Bitmap r6, $r8;
        com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool $r7;
        com.bumptech.glide.load.resource.bitmap.BitmapResource $r9;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.BitmapTransformation;

        r1 := @parameter0: com.bumptech.glide.load.engine.Resource;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = staticinvoke <com.bumptech.glide.util.Util: boolean isValidDimensions(int,int)>($i0, $i1);

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot apply transformation on width: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or height: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" less than or equal to zero and not Target.SIZE_ORIGINAL");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        $r5 = interfaceinvoke r1.<com.bumptech.glide.load.engine.Resource: java.lang.Object get()>();

        r6 = (android.graphics.Bitmap) $r5;

        if $i0 != -2147483648 goto label4;

        $i0 = virtualinvoke r6.<android.graphics.Bitmap: int getWidth()>();

     label2:
        if $i1 != -2147483648 goto label5;

        $i1 = virtualinvoke r6.<android.graphics.Bitmap: int getHeight()>();

     label3:
        $r7 = r0.<com.bumptech.glide.load.resource.bitmap.BitmapTransformation: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool>;

        $r8 = virtualinvoke r0.<com.bumptech.glide.load.resource.bitmap.BitmapTransformation: android.graphics.Bitmap transform(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int)>($r7, r6, $i0, $i1);

        $z0 = virtualinvoke r6.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label6;

        return r1;

     label4:
        goto label2;

     label5:
        goto label3;

     label6:
        $r7 = r0.<com.bumptech.glide.load.resource.bitmap.BitmapTransformation: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool>;

        $r9 = staticinvoke <com.bumptech.glide.load.resource.bitmap.BitmapResource: com.bumptech.glide.load.resource.bitmap.BitmapResource obtain(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)>($r8, $r7);

        return $r9;
    }
