com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder extends java.lang.Object implements com.bumptech.glide.load.resource.bitmap.BitmapDecoder
private static final com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory DEFAULT_FACTORY
private static final int NO_FRAME
private com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory factory
private int frame
    static void <clinit>()
    {
        com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory $r0;

        $r0 = new com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory;

        specialinvoke $r0.<com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory: void <init>()>();

        <com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder: com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory DEFAULT_FACTORY> = $r0;

        return;
    }
    public void <init>()
    {
        com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder r0;
        com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory $r1;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder;

        $r1 = <com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder: com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory DEFAULT_FACTORY>;

        specialinvoke r0.<com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder: void <init>(com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory,int)>($r1, -1);

        return;
    }
    public void <init>(int)
    {
        com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder r0;
        int $i0;
        com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory $r1;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder;

        $i0 := @parameter0: int;

        $r1 = <com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder: com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory DEFAULT_FACTORY>;

        $i0 = staticinvoke <com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder: int checkValidFrame(int)>($i0);

        specialinvoke r0.<com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder: void <init>(com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory,int)>($r1, $i0);

        return;
    }
    void <init>(com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory)
    {
        com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder r0;
        com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory $r1;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder;

        $r1 := @parameter0: com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory;

        specialinvoke r0.<com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder: void <init>(com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory,int)>($r1, -1);

        return;
    }
    void <init>(com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory, int)
    {
        com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder r0;
        com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory $r1;
        int $i0;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder;

        $r1 := @parameter0: com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder: com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory factory> = $r1;

        r0.<com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder: int frame> = $i0;

        return;
    }
    private static int checkValidFrame(int)
    {
        int $i0;
        java.lang.IllegalArgumentException $r0;

        $i0 := @parameter0: int;

        if $i0 >= 0 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Requested frame must be non-negative");

        throw $r0;

     label1:
        return $i0;
    }
    public android.graphics.Bitmap decode(android.os.ParcelFileDescriptor, com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool, int, int, com.bumptech.glide.load.DecodeFormat) throws java.io.IOException
    {
        com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder r0;
        android.os.ParcelFileDescriptor $r1;
        com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool $r2;
        int $i0, $i1;
        com.bumptech.glide.load.DecodeFormat $r3;
        com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory $r4;
        android.media.MediaMetadataRetriever $r5;
        java.io.FileDescriptor $r6;
        long $l2;
        android.graphics.Bitmap $r7;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder;

        $r1 := @parameter0: android.os.ParcelFileDescriptor;

        $r2 := @parameter1: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 := @parameter4: com.bumptech.glide.load.DecodeFormat;

        $r4 = r0.<com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder: com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory factory>;

        $r5 = virtualinvoke $r4.<com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory: android.media.MediaMetadataRetriever build()>();

        $r6 = virtualinvoke $r1.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        virtualinvoke $r5.<android.media.MediaMetadataRetriever: void setDataSource(java.io.FileDescriptor)>($r6);

        $i0 = r0.<com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder: int frame>;

        if $i0 < 0 goto label2;

        $i0 = r0.<com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder: int frame>;

        $l2 = (long) $i0;

        $r7 = virtualinvoke $r5.<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long)>($l2);

     label1:
        virtualinvoke $r5.<android.media.MediaMetadataRetriever: void release()>();

        virtualinvoke $r1.<android.os.ParcelFileDescriptor: void close()>();

        return $r7;

     label2:
        $r7 = virtualinvoke $r5.<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime()>();

        goto label1;
    }
    public volatile android.graphics.Bitmap decode(java.lang.Object, com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool, int, int, com.bumptech.glide.load.DecodeFormat) throws java.lang.Exception
    {
        com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder r0;
        java.lang.Object $r1;
        com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool $r2;
        int $i0, $i1;
        com.bumptech.glide.load.DecodeFormat $r3;
        android.graphics.Bitmap $r4;
        android.os.ParcelFileDescriptor $r5;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 := @parameter4: com.bumptech.glide.load.DecodeFormat;

        $r5 = (android.os.ParcelFileDescriptor) $r1;

        $r4 = virtualinvoke r0.<com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder: android.graphics.Bitmap decode(android.os.ParcelFileDescriptor,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int,com.bumptech.glide.load.DecodeFormat)>($r5, $r2, $i0, $i1, $r3);

        return $r4;
    }
    public java.lang.String getId()
    {
        com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder r0;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder;

        return "VideoBitmapDecoder.com.bumptech.glide.load.resource.bitmap";
    }
