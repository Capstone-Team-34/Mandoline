com.bumptech.glide.load.resource.gif.GifResourceEncoder extends java.lang.Object implements com.bumptech.glide.load.ResourceEncoder
private static final com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory FACTORY
private static final java.lang.String TAG
private final com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool
private final com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory factory
private final com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider provider
    static void <clinit>()
    {
        com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory $r0;

        $r0 = new com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory;

        specialinvoke $r0.<com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory: void <init>()>();

        <com.bumptech.glide.load.resource.gif.GifResourceEncoder: com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory FACTORY> = $r0;

        return;
    }
    public void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)
    {
        com.bumptech.glide.load.resource.gif.GifResourceEncoder r0;
        com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool $r1;
        com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory $r2;

        r0 := @this: com.bumptech.glide.load.resource.gif.GifResourceEncoder;

        $r1 := @parameter0: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;

        $r2 = <com.bumptech.glide.load.resource.gif.GifResourceEncoder: com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory FACTORY>;

        specialinvoke r0.<com.bumptech.glide.load.resource.gif.GifResourceEncoder: void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory)>($r1, $r2);

        return;
    }
    void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool, com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory)
    {
        com.bumptech.glide.load.resource.gif.GifResourceEncoder r0;
        com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool $r1;
        com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory $r2;
        com.bumptech.glide.load.resource.gif.GifBitmapProvider $r3;

        r0 := @this: com.bumptech.glide.load.resource.gif.GifResourceEncoder;

        $r1 := @parameter0: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;

        $r2 := @parameter1: com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.load.resource.gif.GifResourceEncoder: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool> = $r1;

        $r3 = new com.bumptech.glide.load.resource.gif.GifBitmapProvider;

        specialinvoke $r3.<com.bumptech.glide.load.resource.gif.GifBitmapProvider: void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)>($r1);

        r0.<com.bumptech.glide.load.resource.gif.GifResourceEncoder: com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider provider> = $r3;

        r0.<com.bumptech.glide.load.resource.gif.GifResourceEncoder: com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory factory> = $r2;

        return;
    }
    private com.bumptech.glide.gifdecoder.GifDecoder decodeHeaders(byte[])
    {
        com.bumptech.glide.load.resource.gif.GifResourceEncoder r0;
        byte[] $r1;
        com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider $r2;
        com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory $r3;
        com.bumptech.glide.gifdecoder.GifHeaderParser $r4;
        com.bumptech.glide.gifdecoder.GifHeader $r5;
        com.bumptech.glide.gifdecoder.GifDecoder $r6;

        r0 := @this: com.bumptech.glide.load.resource.gif.GifResourceEncoder;

        $r1 := @parameter0: byte[];

        $r3 = r0.<com.bumptech.glide.load.resource.gif.GifResourceEncoder: com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory factory>;

        $r4 = virtualinvoke $r3.<com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory: com.bumptech.glide.gifdecoder.GifHeaderParser buildParser()>();

        virtualinvoke $r4.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeaderParser setData(byte[])>($r1);

        $r5 = virtualinvoke $r4.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader parseHeader()>();

        $r3 = r0.<com.bumptech.glide.load.resource.gif.GifResourceEncoder: com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory factory>;

        $r2 = r0.<com.bumptech.glide.load.resource.gif.GifResourceEncoder: com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider provider>;

        $r6 = virtualinvoke $r3.<com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory: com.bumptech.glide.gifdecoder.GifDecoder buildDecoder(com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider)>($r2);

        virtualinvoke $r6.<com.bumptech.glide.gifdecoder.GifDecoder: void setData(com.bumptech.glide.gifdecoder.GifHeader,byte[])>($r5, $r1);

        virtualinvoke $r6.<com.bumptech.glide.gifdecoder.GifDecoder: void advance()>();

        return $r6;
    }
    private com.bumptech.glide.load.engine.Resource getTransformedFrame(android.graphics.Bitmap, com.bumptech.glide.load.Transformation, com.bumptech.glide.load.resource.gif.GifDrawable)
    {
        com.bumptech.glide.load.resource.gif.GifResourceEncoder r0;
        android.graphics.Bitmap $r1;
        com.bumptech.glide.load.Transformation r2;
        com.bumptech.glide.load.resource.gif.GifDrawable $r3;
        com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory $r4;
        com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool $r5;
        com.bumptech.glide.load.engine.Resource $r6, $r7;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.bumptech.glide.load.resource.gif.GifResourceEncoder;

        $r1 := @parameter0: android.graphics.Bitmap;

        r2 := @parameter1: com.bumptech.glide.load.Transformation;

        $r3 := @parameter2: com.bumptech.glide.load.resource.gif.GifDrawable;

        $r4 = r0.<com.bumptech.glide.load.resource.gif.GifResourceEncoder: com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory factory>;

        $r5 = r0.<com.bumptech.glide.load.resource.gif.GifResourceEncoder: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool>;

        $r6 = virtualinvoke $r4.<com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory: com.bumptech.glide.load.engine.Resource buildFrameResource(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)>($r1, $r5);

        $i0 = virtualinvoke $r3.<com.bumptech.glide.load.resource.gif.GifDrawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke $r3.<com.bumptech.glide.load.resource.gif.GifDrawable: int getIntrinsicHeight()>();

        $r7 = interfaceinvoke r2.<com.bumptech.glide.load.Transformation: com.bumptech.glide.load.engine.Resource transform(com.bumptech.glide.load.engine.Resource,int,int)>($r6, $i0, $i1);

        $z0 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label1;

        interfaceinvoke $r6.<com.bumptech.glide.load.engine.Resource: void recycle()>();

     label1:
        return $r7;
    }
    private boolean writeDataDirect(byte[], java.io.OutputStream)
    {
        com.bumptech.glide.load.resource.gif.GifResourceEncoder r0;
        byte[] $r1;
        java.io.OutputStream $r2;
        java.io.IOException r3;
        boolean $z0;

        r0 := @this: com.bumptech.glide.load.resource.gif.GifResourceEncoder;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: java.io.OutputStream;

     label1:
        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r1);

     label2:
        return 1;

     label3:
        r3 := @caughtexception;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("GifEncoder", 3);

        if $z0 == 0 goto label4;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("GifEncoder", "Failed to write data to output stream in GifResourceEncoder", r3);

     label4:
        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public boolean encode(com.bumptech.glide.load.engine.Resource, java.io.OutputStream)
    {
        com.bumptech.glide.load.resource.gif.GifResourceEncoder r0;
        com.bumptech.glide.load.engine.Resource r1;
        java.io.OutputStream $r2;
        long $l0;
        java.lang.Object $r3;
        com.bumptech.glide.load.resource.gif.GifDrawable r4;
        com.bumptech.glide.load.Transformation $r5;
        boolean $z0, $z1;
        byte[] $r6;
        com.bumptech.glide.gifdecoder.GifDecoder $r7;
        com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory $r8;
        com.bumptech.glide.gifencoder.AnimatedGifEncoder $r9;
        int i1, $i2;
        android.graphics.Bitmap $r10;
        java.lang.Throwable $r11;
        java.lang.StringBuilder $r12;
        double $d0;
        java.lang.String $r13;

        r0 := @this: com.bumptech.glide.load.resource.gif.GifResourceEncoder;

        r1 := @parameter0: com.bumptech.glide.load.engine.Resource;

        $r2 := @parameter1: java.io.OutputStream;

        $l0 = staticinvoke <com.bumptech.glide.util.LogTime: long getLogTime()>();

        $r3 = interfaceinvoke r1.<com.bumptech.glide.load.engine.Resource: java.lang.Object get()>();

        r4 = (com.bumptech.glide.load.resource.gif.GifDrawable) $r3;

        $r5 = virtualinvoke r4.<com.bumptech.glide.load.resource.gif.GifDrawable: com.bumptech.glide.load.Transformation getFrameTransformation()>();

        $z0 = $r5 instanceof com.bumptech.glide.load.resource.UnitTransformation;

        if $z0 == 0 goto label01;

        $r6 = virtualinvoke r4.<com.bumptech.glide.load.resource.gif.GifDrawable: byte[] getData()>();

        $z0 = specialinvoke r0.<com.bumptech.glide.load.resource.gif.GifResourceEncoder: boolean writeDataDirect(byte[],java.io.OutputStream)>($r6, $r2);

        return $z0;

     label01:
        $r6 = virtualinvoke r4.<com.bumptech.glide.load.resource.gif.GifDrawable: byte[] getData()>();

        $r7 = specialinvoke r0.<com.bumptech.glide.load.resource.gif.GifResourceEncoder: com.bumptech.glide.gifdecoder.GifDecoder decodeHeaders(byte[])>($r6);

        $r8 = r0.<com.bumptech.glide.load.resource.gif.GifResourceEncoder: com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory factory>;

        $r9 = virtualinvoke $r8.<com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory: com.bumptech.glide.gifencoder.AnimatedGifEncoder buildEncoder()>();

        $z0 = virtualinvoke $r9.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean start(java.io.OutputStream)>($r2);

        if $z0 != 0 goto label02;

        return 0;

     label02:
        i1 = 0;

     label03:
        $i2 = virtualinvoke $r7.<com.bumptech.glide.gifdecoder.GifDecoder: int getFrameCount()>();

        if i1 >= $i2 goto label09;

        $r10 = virtualinvoke $r7.<com.bumptech.glide.gifdecoder.GifDecoder: android.graphics.Bitmap getNextFrame()>();

        r1 = specialinvoke r0.<com.bumptech.glide.load.resource.gif.GifResourceEncoder: com.bumptech.glide.load.engine.Resource getTransformedFrame(android.graphics.Bitmap,com.bumptech.glide.load.Transformation,com.bumptech.glide.load.resource.gif.GifDrawable)>($r10, $r5, r4);

     label04:
        $r3 = interfaceinvoke r1.<com.bumptech.glide.load.engine.Resource: java.lang.Object get()>();

        $r10 = (android.graphics.Bitmap) $r3;

        $z0 = virtualinvoke $r9.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean addFrame(android.graphics.Bitmap)>($r10);

     label05:
        if $z0 != 0 goto label06;

        interfaceinvoke r1.<com.bumptech.glide.load.engine.Resource: void recycle()>();

        return 0;

     label06:
        $i2 = virtualinvoke $r7.<com.bumptech.glide.gifdecoder.GifDecoder: int getCurrentFrameIndex()>();

        $i2 = virtualinvoke $r7.<com.bumptech.glide.gifdecoder.GifDecoder: int getDelay(int)>($i2);

        virtualinvoke $r9.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: void setDelay(int)>($i2);

        virtualinvoke $r7.<com.bumptech.glide.gifdecoder.GifDecoder: void advance()>();

     label07:
        interfaceinvoke r1.<com.bumptech.glide.load.engine.Resource: void recycle()>();

        i1 = i1 + 1;

        goto label03;

     label08:
        $r11 := @caughtexception;

        interfaceinvoke r1.<com.bumptech.glide.load.engine.Resource: void recycle()>();

        throw $r11;

     label09:
        $z0 = virtualinvoke $r9.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean finish()>();

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("GifEncoder", 2);

        if $z1 == 0 goto label10;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Encoded gif with ");

        i1 = virtualinvoke $r7.<com.bumptech.glide.gifdecoder.GifDecoder: int getFrameCount()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" frames and ");

        $r6 = virtualinvoke r4.<com.bumptech.glide.load.resource.gif.GifDrawable: byte[] getData()>();

        i1 = lengthof $r6;

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes in ");

        $d0 = staticinvoke <com.bumptech.glide.util.LogTime: double getElapsedMillis(long)>($l0);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("GifEncoder", $r13);

     label10:
        return $z0;

        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
    }
    public volatile boolean encode(java.lang.Object, java.io.OutputStream)
    {
        com.bumptech.glide.load.resource.gif.GifResourceEncoder r0;
        java.io.OutputStream $r1;
        boolean $z0;
        java.lang.Object $r2;
        com.bumptech.glide.load.engine.Resource $r3;

        r0 := @this: com.bumptech.glide.load.resource.gif.GifResourceEncoder;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.io.OutputStream;

        $r3 = (com.bumptech.glide.load.engine.Resource) $r2;

        $z0 = virtualinvoke r0.<com.bumptech.glide.load.resource.gif.GifResourceEncoder: boolean encode(com.bumptech.glide.load.engine.Resource,java.io.OutputStream)>($r3, $r1);

        return $z0;
    }
    public java.lang.String getId()
    {
        com.bumptech.glide.load.resource.gif.GifResourceEncoder r0;

        r0 := @this: com.bumptech.glide.load.resource.gif.GifResourceEncoder;

        return "";
    }
