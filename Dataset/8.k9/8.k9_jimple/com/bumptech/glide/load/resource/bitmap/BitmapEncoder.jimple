com.bumptech.glide.load.resource.bitmap.BitmapEncoder extends java.lang.Object implements com.bumptech.glide.load.ResourceEncoder
private static final int DEFAULT_COMPRESSION_QUALITY
private static final java.lang.String TAG
private android.graphics.Bitmap$CompressFormat compressFormat
private int quality
    public void <init>()
    {
        com.bumptech.glide.load.resource.bitmap.BitmapEncoder r0;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.BitmapEncoder;

        specialinvoke r0.<com.bumptech.glide.load.resource.bitmap.BitmapEncoder: void <init>(android.graphics.Bitmap$CompressFormat,int)>(null, 90);

        return;
    }
    public void <init>(android.graphics.Bitmap$CompressFormat, int)
    {
        com.bumptech.glide.load.resource.bitmap.BitmapEncoder r0;
        android.graphics.Bitmap$CompressFormat $r1;
        int $i0;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.BitmapEncoder;

        $r1 := @parameter0: android.graphics.Bitmap$CompressFormat;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.load.resource.bitmap.BitmapEncoder: android.graphics.Bitmap$CompressFormat compressFormat> = $r1;

        r0.<com.bumptech.glide.load.resource.bitmap.BitmapEncoder: int quality> = $i0;

        return;
    }
    private android.graphics.Bitmap$CompressFormat getFormat(android.graphics.Bitmap)
    {
        com.bumptech.glide.load.resource.bitmap.BitmapEncoder r0;
        android.graphics.Bitmap $r1;
        boolean $z0;
        android.graphics.Bitmap$CompressFormat $r2;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.BitmapEncoder;

        $r1 := @parameter0: android.graphics.Bitmap;

        $r2 = r0.<com.bumptech.glide.load.resource.bitmap.BitmapEncoder: android.graphics.Bitmap$CompressFormat compressFormat>;

        if $r2 == null goto label1;

        $r2 = r0.<com.bumptech.glide.load.resource.bitmap.BitmapEncoder: android.graphics.Bitmap$CompressFormat compressFormat>;

        return $r2;

     label1:
        $z0 = virtualinvoke $r1.<android.graphics.Bitmap: boolean hasAlpha()>();

        if $z0 == 0 goto label2;

        $r2 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

        return $r2;

     label2:
        $r2 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

        return $r2;
    }
    public boolean encode(com.bumptech.glide.load.engine.Resource, java.io.OutputStream)
    {
        com.bumptech.glide.load.resource.bitmap.BitmapEncoder r0;
        com.bumptech.glide.load.engine.Resource r1;
        java.io.OutputStream $r2;
        java.lang.Object $r3;
        android.graphics.Bitmap r4;
        long $l0;
        android.graphics.Bitmap$CompressFormat $r5;
        int $i1;
        boolean $z0;
        java.lang.StringBuilder $r6;
        double $d0;
        java.lang.String $r7;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.BitmapEncoder;

        r1 := @parameter0: com.bumptech.glide.load.engine.Resource;

        $r2 := @parameter1: java.io.OutputStream;

        $r3 = interfaceinvoke r1.<com.bumptech.glide.load.engine.Resource: java.lang.Object get()>();

        r4 = (android.graphics.Bitmap) $r3;

        $l0 = staticinvoke <com.bumptech.glide.util.LogTime: long getLogTime()>();

        $r5 = specialinvoke r0.<com.bumptech.glide.load.resource.bitmap.BitmapEncoder: android.graphics.Bitmap$CompressFormat getFormat(android.graphics.Bitmap)>(r4);

        $i1 = r0.<com.bumptech.glide.load.resource.bitmap.BitmapEncoder: int quality>;

        virtualinvoke r4.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r5, $i1, $r2);

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("BitmapEncoder", 2);

        if $z0 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Compressed with type: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of size ");

        $i1 = staticinvoke <com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>(r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $d0 = staticinvoke <com.bumptech.glide.util.LogTime: double getElapsedMillis(long)>($l0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("BitmapEncoder", $r7);

     label1:
        return 1;
    }
    public volatile boolean encode(java.lang.Object, java.io.OutputStream)
    {
        com.bumptech.glide.load.resource.bitmap.BitmapEncoder r0;
        java.io.OutputStream $r1;
        boolean $z0;
        java.lang.Object $r2;
        com.bumptech.glide.load.engine.Resource $r3;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.BitmapEncoder;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.io.OutputStream;

        $r3 = (com.bumptech.glide.load.engine.Resource) $r2;

        $z0 = virtualinvoke r0.<com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(com.bumptech.glide.load.engine.Resource,java.io.OutputStream)>($r3, $r1);

        return $z0;
    }
    public java.lang.String getId()
    {
        com.bumptech.glide.load.resource.bitmap.BitmapEncoder r0;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.BitmapEncoder;

        return "BitmapEncoder.com.bumptech.glide.load.resource.bitmap";
    }
