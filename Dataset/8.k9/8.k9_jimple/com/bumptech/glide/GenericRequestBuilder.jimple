com.bumptech.glide.GenericRequestBuilder extends java.lang.Object implements java.lang.Cloneable
private com.bumptech.glide.request.animation.GlideAnimationFactory animationFactory
protected final android.content.Context context
private com.bumptech.glide.load.engine.DiskCacheStrategy diskCacheStrategy
private int errorId
private android.graphics.drawable.Drawable errorPlaceholder
private android.graphics.drawable.Drawable fallbackDrawable
private int fallbackResource
protected final com.bumptech.glide.Glide glide
private boolean isCacheable
private boolean isModelSet
private boolean isThumbnailBuilt
private boolean isTransformationSet
protected final com.bumptech.glide.manager.Lifecycle lifecycle
private com.bumptech.glide.provider.ChildLoadProvider loadProvider
private java.lang.Object model
protected final java.lang.Class modelClass
private int overrideHeight
private int overrideWidth
private android.graphics.drawable.Drawable placeholderDrawable
private int placeholderId
private com.bumptech.glide.Priority priority
private com.bumptech.glide.request.RequestListener requestListener
protected final com.bumptech.glide.manager.RequestTracker requestTracker
private com.bumptech.glide.load.Key signature
private java.lang.Float sizeMultiplier
private java.lang.Float thumbSizeMultiplier
private com.bumptech.glide.GenericRequestBuilder thumbnailRequestBuilder
protected final java.lang.Class transcodeClass
private com.bumptech.glide.load.Transformation transformation
    void <init>(android.content.Context, java.lang.Class, com.bumptech.glide.provider.LoadProvider, java.lang.Class, com.bumptech.glide.Glide, com.bumptech.glide.manager.RequestTracker, com.bumptech.glide.manager.Lifecycle)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        android.content.Context $r1;
        java.lang.Class r2, r4;
        com.bumptech.glide.provider.LoadProvider r3;
        com.bumptech.glide.Glide $r5;
        com.bumptech.glide.manager.RequestTracker $r6;
        com.bumptech.glide.manager.Lifecycle $r7;
        com.bumptech.glide.provider.ChildLoadProvider $r8;
        com.bumptech.glide.signature.EmptySignature $r9;
        java.lang.Float $r10;
        com.bumptech.glide.request.animation.GlideAnimationFactory $r11;
        com.bumptech.glide.load.engine.DiskCacheStrategy $r12;
        com.bumptech.glide.load.resource.UnitTransformation $r13;
        java.lang.NullPointerException $r14;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        $r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: com.bumptech.glide.provider.LoadProvider;

        r4 := @parameter3: java.lang.Class;

        $r5 := @parameter4: com.bumptech.glide.Glide;

        $r6 := @parameter5: com.bumptech.glide.manager.RequestTracker;

        $r7 := @parameter6: com.bumptech.glide.manager.Lifecycle;

        $r8 = null;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r9 = staticinvoke <com.bumptech.glide.signature.EmptySignature: com.bumptech.glide.signature.EmptySignature obtain()>();

        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.load.Key signature> = $r9;

        $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);

        r0.<com.bumptech.glide.GenericRequestBuilder: java.lang.Float sizeMultiplier> = $r10;

        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Priority priority> = null;

        r0.<com.bumptech.glide.GenericRequestBuilder: boolean isCacheable> = 1;

        $r11 = staticinvoke <com.bumptech.glide.request.animation.NoAnimation: com.bumptech.glide.request.animation.GlideAnimationFactory getFactory()>();

        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.animation.GlideAnimationFactory animationFactory> = $r11;

        r0.<com.bumptech.glide.GenericRequestBuilder: int overrideHeight> = -1;

        r0.<com.bumptech.glide.GenericRequestBuilder: int overrideWidth> = -1;

        $r12 = <com.bumptech.glide.load.engine.DiskCacheStrategy: com.bumptech.glide.load.engine.DiskCacheStrategy RESULT>;

        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.load.engine.DiskCacheStrategy diskCacheStrategy> = $r12;

        $r13 = staticinvoke <com.bumptech.glide.load.resource.UnitTransformation: com.bumptech.glide.load.resource.UnitTransformation get()>();

        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.load.Transformation transformation> = $r13;

        r0.<com.bumptech.glide.GenericRequestBuilder: android.content.Context context> = $r1;

        r0.<com.bumptech.glide.GenericRequestBuilder: java.lang.Class modelClass> = r2;

        r0.<com.bumptech.glide.GenericRequestBuilder: java.lang.Class transcodeClass> = r4;

        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Glide glide> = $r5;

        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.manager.RequestTracker requestTracker> = $r6;

        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.manager.Lifecycle lifecycle> = $r7;

        if r3 == null goto label1;

        $r8 = new com.bumptech.glide.provider.ChildLoadProvider;

        specialinvoke $r8.<com.bumptech.glide.provider.ChildLoadProvider: void <init>(com.bumptech.glide.provider.LoadProvider)>(r3);

     label1:
        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider> = $r8;

        if $r1 != null goto label2;

        $r14 = new java.lang.NullPointerException;

        specialinvoke $r14.<java.lang.NullPointerException: void <init>(java.lang.String)>("Context can\'t be null");

        throw $r14;

     label2:
        if r2 == null goto label3;

        if r3 != null goto label3;

        $r14 = new java.lang.NullPointerException;

        specialinvoke $r14.<java.lang.NullPointerException: void <init>(java.lang.String)>("LoadProvider must not be null");

        throw $r14;

     label3:
        return;
    }
    void <init>(com.bumptech.glide.provider.LoadProvider, java.lang.Class, com.bumptech.glide.GenericRequestBuilder)
    {
        com.bumptech.glide.GenericRequestBuilder r0, r3;
        com.bumptech.glide.provider.LoadProvider r1;
        java.lang.Class r2, $r5;
        android.content.Context $r4;
        com.bumptech.glide.Glide $r6;
        com.bumptech.glide.manager.RequestTracker $r7;
        com.bumptech.glide.manager.Lifecycle $r8;
        java.lang.Object $r9;
        boolean $z0;
        com.bumptech.glide.load.Key $r10;
        com.bumptech.glide.load.engine.DiskCacheStrategy $r11;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.provider.LoadProvider;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: com.bumptech.glide.GenericRequestBuilder;

        $r4 = r3.<com.bumptech.glide.GenericRequestBuilder: android.content.Context context>;

        $r5 = r3.<com.bumptech.glide.GenericRequestBuilder: java.lang.Class modelClass>;

        $r6 = r3.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Glide glide>;

        $r7 = r3.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.manager.RequestTracker requestTracker>;

        $r8 = r3.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.manager.Lifecycle lifecycle>;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: void <init>(android.content.Context,java.lang.Class,com.bumptech.glide.provider.LoadProvider,java.lang.Class,com.bumptech.glide.Glide,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.manager.Lifecycle)>($r4, $r5, r1, r2, $r6, $r7, $r8);

        $r9 = r3.<com.bumptech.glide.GenericRequestBuilder: java.lang.Object model>;

        r0.<com.bumptech.glide.GenericRequestBuilder: java.lang.Object model> = $r9;

        $z0 = r3.<com.bumptech.glide.GenericRequestBuilder: boolean isModelSet>;

        r0.<com.bumptech.glide.GenericRequestBuilder: boolean isModelSet> = $z0;

        $r10 = r3.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.load.Key signature>;

        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.load.Key signature> = $r10;

        $r11 = r3.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.load.engine.DiskCacheStrategy diskCacheStrategy>;

        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.load.engine.DiskCacheStrategy diskCacheStrategy> = $r11;

        $z0 = r3.<com.bumptech.glide.GenericRequestBuilder: boolean isCacheable>;

        r0.<com.bumptech.glide.GenericRequestBuilder: boolean isCacheable> = $z0;

        return;
    }
    private com.bumptech.glide.request.Request buildRequest(com.bumptech.glide.request.target.Target)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.request.target.Target r1;
        com.bumptech.glide.request.Request $r2;
        com.bumptech.glide.Priority $r3;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.request.target.Target;

        $r3 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Priority priority>;

        if $r3 != null goto label1;

        $r3 = <com.bumptech.glide.Priority: com.bumptech.glide.Priority NORMAL>;

        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Priority priority> = $r3;

     label1:
        $r2 = specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.Request buildRequestRecursive(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.ThumbnailRequestCoordinator)>(r1, null);

        return $r2;
    }
    private com.bumptech.glide.request.Request buildRequestRecursive(com.bumptech.glide.request.target.Target, com.bumptech.glide.request.ThumbnailRequestCoordinator)
    {
        com.bumptech.glide.GenericRequestBuilder r0, $r3;
        com.bumptech.glide.request.target.Target r1;
        com.bumptech.glide.request.ThumbnailRequestCoordinator $r2, r8;
        int $i0, $i1;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        com.bumptech.glide.request.animation.GlideAnimationFactory $r5, $r6;
        com.bumptech.glide.Priority $r7;
        java.lang.Float $r9;
        float $f0;
        com.bumptech.glide.request.Request $r10, $r11;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.request.target.Target;

        $r2 := @parameter1: com.bumptech.glide.request.ThumbnailRequestCoordinator;

        $r3 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder thumbnailRequestBuilder>;

        if $r3 == null goto label5;

        $z0 = r0.<com.bumptech.glide.GenericRequestBuilder: boolean isThumbnailBuilt>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You cannot use a request as both the main request and a thumbnail, consider using clone() on the request(s) passed to thumbnail()");

        throw $r4;

     label1:
        $r3 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder thumbnailRequestBuilder>;

        $r5 = $r3.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.animation.GlideAnimationFactory animationFactory>;

        $r6 = staticinvoke <com.bumptech.glide.request.animation.NoAnimation: com.bumptech.glide.request.animation.GlideAnimationFactory getFactory()>();

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        $r3 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder thumbnailRequestBuilder>;

        $r5 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.animation.GlideAnimationFactory animationFactory>;

        $r3.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.animation.GlideAnimationFactory animationFactory> = $r5;

     label2:
        $r3 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder thumbnailRequestBuilder>;

        $r7 = $r3.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Priority priority>;

        if $r7 != null goto label3;

        $r3 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder thumbnailRequestBuilder>;

        $r7 = specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Priority getThumbnailPriority()>();

        $r3.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Priority priority> = $r7;

     label3:
        $i0 = r0.<com.bumptech.glide.GenericRequestBuilder: int overrideWidth>;

        $i1 = r0.<com.bumptech.glide.GenericRequestBuilder: int overrideHeight>;

        $z0 = staticinvoke <com.bumptech.glide.util.Util: boolean isValidDimensions(int,int)>($i0, $i1);

        if $z0 == 0 goto label4;

        $r3 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder thumbnailRequestBuilder>;

        $i0 = $r3.<com.bumptech.glide.GenericRequestBuilder: int overrideWidth>;

        $r3 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder thumbnailRequestBuilder>;

        $i1 = $r3.<com.bumptech.glide.GenericRequestBuilder: int overrideHeight>;

        $z0 = staticinvoke <com.bumptech.glide.util.Util: boolean isValidDimensions(int,int)>($i0, $i1);

        if $z0 != 0 goto label4;

        $r3 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder thumbnailRequestBuilder>;

        $i1 = r0.<com.bumptech.glide.GenericRequestBuilder: int overrideWidth>;

        $i0 = r0.<com.bumptech.glide.GenericRequestBuilder: int overrideHeight>;

        virtualinvoke $r3.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder override(int,int)>($i1, $i0);

     label4:
        r8 = new com.bumptech.glide.request.ThumbnailRequestCoordinator;

        specialinvoke r8.<com.bumptech.glide.request.ThumbnailRequestCoordinator: void <init>(com.bumptech.glide.request.RequestCoordinator)>($r2);

        $r9 = r0.<com.bumptech.glide.GenericRequestBuilder: java.lang.Float sizeMultiplier>;

        $f0 = virtualinvoke $r9.<java.lang.Float: float floatValue()>();

        $r7 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Priority priority>;

        $r10 = specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.Request obtainRequest(com.bumptech.glide.request.target.Target,float,com.bumptech.glide.Priority,com.bumptech.glide.request.RequestCoordinator)>(r1, $f0, $r7, r8);

        r0.<com.bumptech.glide.GenericRequestBuilder: boolean isThumbnailBuilt> = 1;

        $r3 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder thumbnailRequestBuilder>;

        $r11 = specialinvoke $r3.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.Request buildRequestRecursive(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.ThumbnailRequestCoordinator)>(r1, r8);

        r0.<com.bumptech.glide.GenericRequestBuilder: boolean isThumbnailBuilt> = 0;

        virtualinvoke r8.<com.bumptech.glide.request.ThumbnailRequestCoordinator: void setRequests(com.bumptech.glide.request.Request,com.bumptech.glide.request.Request)>($r10, $r11);

        return r8;

     label5:
        $r9 = r0.<com.bumptech.glide.GenericRequestBuilder: java.lang.Float thumbSizeMultiplier>;

        if $r9 == null goto label6;

        r8 = new com.bumptech.glide.request.ThumbnailRequestCoordinator;

        specialinvoke r8.<com.bumptech.glide.request.ThumbnailRequestCoordinator: void <init>(com.bumptech.glide.request.RequestCoordinator)>($r2);

        $r9 = r0.<com.bumptech.glide.GenericRequestBuilder: java.lang.Float sizeMultiplier>;

        $f0 = virtualinvoke $r9.<java.lang.Float: float floatValue()>();

        $r7 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Priority priority>;

        $r10 = specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.Request obtainRequest(com.bumptech.glide.request.target.Target,float,com.bumptech.glide.Priority,com.bumptech.glide.request.RequestCoordinator)>(r1, $f0, $r7, r8);

        $r9 = r0.<com.bumptech.glide.GenericRequestBuilder: java.lang.Float thumbSizeMultiplier>;

        $f0 = virtualinvoke $r9.<java.lang.Float: float floatValue()>();

        $r7 = specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Priority getThumbnailPriority()>();

        $r11 = specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.Request obtainRequest(com.bumptech.glide.request.target.Target,float,com.bumptech.glide.Priority,com.bumptech.glide.request.RequestCoordinator)>(r1, $f0, $r7, r8);

        virtualinvoke r8.<com.bumptech.glide.request.ThumbnailRequestCoordinator: void setRequests(com.bumptech.glide.request.Request,com.bumptech.glide.request.Request)>($r10, $r11);

        return r8;

     label6:
        $r9 = r0.<com.bumptech.glide.GenericRequestBuilder: java.lang.Float sizeMultiplier>;

        $f0 = virtualinvoke $r9.<java.lang.Float: float floatValue()>();

        $r7 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Priority priority>;

        $r10 = specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.Request obtainRequest(com.bumptech.glide.request.target.Target,float,com.bumptech.glide.Priority,com.bumptech.glide.request.RequestCoordinator)>(r1, $f0, $r7, $r2);

        return $r10;
    }
    private com.bumptech.glide.Priority getThumbnailPriority()
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.Priority $r1, $r2;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        $r1 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Priority priority>;

        $r2 = <com.bumptech.glide.Priority: com.bumptech.glide.Priority LOW>;

        if $r1 != $r2 goto label1;

        $r1 = <com.bumptech.glide.Priority: com.bumptech.glide.Priority NORMAL>;

        return $r1;

     label1:
        $r1 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Priority priority>;

        $r2 = <com.bumptech.glide.Priority: com.bumptech.glide.Priority NORMAL>;

        if $r1 != $r2 goto label2;

        $r1 = <com.bumptech.glide.Priority: com.bumptech.glide.Priority HIGH>;

        return $r1;

     label2:
        $r1 = <com.bumptech.glide.Priority: com.bumptech.glide.Priority IMMEDIATE>;

        return $r1;
    }
    private com.bumptech.glide.request.Request obtainRequest(com.bumptech.glide.request.target.Target, float, com.bumptech.glide.Priority, com.bumptech.glide.request.RequestCoordinator)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.request.target.Target r1;
        float $f0;
        com.bumptech.glide.Priority $r2;
        com.bumptech.glide.request.RequestCoordinator $r3;
        java.lang.Object $r4;
        com.bumptech.glide.load.Key $r5;
        android.content.Context $r6;
        android.graphics.drawable.Drawable $r7, $r8, $r9;
        int $i0, $i1, $i2, $i3, $i4;
        com.bumptech.glide.request.RequestListener $r10;
        com.bumptech.glide.provider.ChildLoadProvider $r11;
        com.bumptech.glide.Glide $r12;
        com.bumptech.glide.load.engine.Engine $r13;
        com.bumptech.glide.load.Transformation $r14;
        java.lang.Class $r15;
        boolean $z0;
        com.bumptech.glide.request.animation.GlideAnimationFactory $r16;
        com.bumptech.glide.load.engine.DiskCacheStrategy $r17;
        com.bumptech.glide.request.GenericRequest $r18;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.request.target.Target;

        $f0 := @parameter1: float;

        $r2 := @parameter2: com.bumptech.glide.Priority;

        $r3 := @parameter3: com.bumptech.glide.request.RequestCoordinator;

        $r11 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider>;

        $r4 = r0.<com.bumptech.glide.GenericRequestBuilder: java.lang.Object model>;

        $r5 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.load.Key signature>;

        $r6 = r0.<com.bumptech.glide.GenericRequestBuilder: android.content.Context context>;

        $r7 = r0.<com.bumptech.glide.GenericRequestBuilder: android.graphics.drawable.Drawable placeholderDrawable>;

        $i0 = r0.<com.bumptech.glide.GenericRequestBuilder: int placeholderId>;

        $r8 = r0.<com.bumptech.glide.GenericRequestBuilder: android.graphics.drawable.Drawable errorPlaceholder>;

        $i1 = r0.<com.bumptech.glide.GenericRequestBuilder: int errorId>;

        $r9 = r0.<com.bumptech.glide.GenericRequestBuilder: android.graphics.drawable.Drawable fallbackDrawable>;

        $i2 = r0.<com.bumptech.glide.GenericRequestBuilder: int fallbackResource>;

        $r10 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.RequestListener requestListener>;

        $r12 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Glide glide>;

        $r13 = virtualinvoke $r12.<com.bumptech.glide.Glide: com.bumptech.glide.load.engine.Engine getEngine()>();

        $r14 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.load.Transformation transformation>;

        $r15 = r0.<com.bumptech.glide.GenericRequestBuilder: java.lang.Class transcodeClass>;

        $z0 = r0.<com.bumptech.glide.GenericRequestBuilder: boolean isCacheable>;

        $r16 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.animation.GlideAnimationFactory animationFactory>;

        $i3 = r0.<com.bumptech.glide.GenericRequestBuilder: int overrideWidth>;

        $i4 = r0.<com.bumptech.glide.GenericRequestBuilder: int overrideHeight>;

        $r17 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.load.engine.DiskCacheStrategy diskCacheStrategy>;

        $r18 = staticinvoke <com.bumptech.glide.request.GenericRequest: com.bumptech.glide.request.GenericRequest obtain(com.bumptech.glide.provider.LoadProvider,java.lang.Object,com.bumptech.glide.load.Key,android.content.Context,com.bumptech.glide.Priority,com.bumptech.glide.request.target.Target,float,android.graphics.drawable.Drawable,int,android.graphics.drawable.Drawable,int,android.graphics.drawable.Drawable,int,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.load.engine.Engine,com.bumptech.glide.load.Transformation,java.lang.Class,boolean,com.bumptech.glide.request.animation.GlideAnimationFactory,int,int,com.bumptech.glide.load.engine.DiskCacheStrategy)>($r11, $r4, $r5, $r6, $r2, r1, $f0, $r7, $i0, $r8, $i1, $r9, $i2, $r10, $r3, $r13, $r14, $r15, $z0, $r16, $i3, $i4, $r17);

        return $r18;
    }
    public com.bumptech.glide.GenericRequestBuilder animate(int)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        int $i0;
        android.content.Context $r1;
        com.bumptech.glide.request.animation.ViewAnimationFactory $r2;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        $i0 := @parameter0: int;

        $r2 = new com.bumptech.glide.request.animation.ViewAnimationFactory;

        $r1 = r0.<com.bumptech.glide.GenericRequestBuilder: android.content.Context context>;

        specialinvoke $r2.<com.bumptech.glide.request.animation.ViewAnimationFactory: void <init>(android.content.Context,int)>($r1, $i0);

        r0 = virtualinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder animate(com.bumptech.glide.request.animation.GlideAnimationFactory)>($r2);

        return r0;
    }
    public com.bumptech.glide.GenericRequestBuilder animate(android.view.animation.Animation)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        android.view.animation.Animation $r1;
        com.bumptech.glide.request.animation.ViewAnimationFactory $r2;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        $r1 := @parameter0: android.view.animation.Animation;

        $r2 = new com.bumptech.glide.request.animation.ViewAnimationFactory;

        specialinvoke $r2.<com.bumptech.glide.request.animation.ViewAnimationFactory: void <init>(android.view.animation.Animation)>($r1);

        r0 = virtualinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder animate(com.bumptech.glide.request.animation.GlideAnimationFactory)>($r2);

        return r0;
    }
    com.bumptech.glide.GenericRequestBuilder animate(com.bumptech.glide.request.animation.GlideAnimationFactory)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.request.animation.GlideAnimationFactory r1;
        java.lang.NullPointerException $r2;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.request.animation.GlideAnimationFactory;

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Animation factory must not be null!");

        throw $r2;

     label1:
        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.animation.GlideAnimationFactory animationFactory> = r1;

        return r0;
    }
    public com.bumptech.glide.GenericRequestBuilder animate(com.bumptech.glide.request.animation.ViewPropertyAnimation$Animator)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.request.animation.ViewPropertyAnimation$Animator $r1;
        com.bumptech.glide.request.animation.ViewPropertyAnimationFactory $r2;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        $r1 := @parameter0: com.bumptech.glide.request.animation.ViewPropertyAnimation$Animator;

        $r2 = new com.bumptech.glide.request.animation.ViewPropertyAnimationFactory;

        specialinvoke $r2.<com.bumptech.glide.request.animation.ViewPropertyAnimationFactory: void <init>(com.bumptech.glide.request.animation.ViewPropertyAnimation$Animator)>($r1);

        r0 = virtualinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder animate(com.bumptech.glide.request.animation.GlideAnimationFactory)>($r2);

        return r0;
    }
    void applyCenterCrop()
    {
        com.bumptech.glide.GenericRequestBuilder r0;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        return;
    }
    void applyFitCenter()
    {
        com.bumptech.glide.GenericRequestBuilder r0;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        return;
    }
    public com.bumptech.glide.GenericRequestBuilder cacheDecoder(com.bumptech.glide.load.ResourceDecoder)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.load.ResourceDecoder r1;
        com.bumptech.glide.provider.ChildLoadProvider $r2;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.ResourceDecoder;

        $r2 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider>;

        if $r2 == null goto label1;

        $r2 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider>;

        virtualinvoke $r2.<com.bumptech.glide.provider.ChildLoadProvider: void setCacheDecoder(com.bumptech.glide.load.ResourceDecoder)>(r1);

     label1:
        return r0;
    }
    public com.bumptech.glide.GenericRequestBuilder clone()
    {
        com.bumptech.glide.GenericRequestBuilder r0, r3;
        java.lang.CloneNotSupportedException r1;
        java.lang.Object $r2;
        com.bumptech.glide.provider.ChildLoadProvider $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

     label1:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

     label2:
        r3 = (com.bumptech.glide.GenericRequestBuilder) $r2;

        $r4 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider>;

        if $r4 == null goto label5;

        $r4 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider>;

     label3:
        $r4 = virtualinvoke $r4.<com.bumptech.glide.provider.ChildLoadProvider: com.bumptech.glide.provider.ChildLoadProvider clone()>();

     label4:
        r3.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider> = $r4;

        return r3;

     label5:
        $r4 = null;

        goto label4;

     label6:
        r1 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r5;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label6;
        catch java.lang.CloneNotSupportedException from label3 to label4 with label6;
    }
    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        com.bumptech.glide.GenericRequestBuilder r0;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r0 = virtualinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder clone()>();

        return r0;
    }
    public com.bumptech.glide.GenericRequestBuilder decoder(com.bumptech.glide.load.ResourceDecoder)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.load.ResourceDecoder r1;
        com.bumptech.glide.provider.ChildLoadProvider $r2;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.ResourceDecoder;

        $r2 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider>;

        if $r2 == null goto label1;

        $r2 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider>;

        virtualinvoke $r2.<com.bumptech.glide.provider.ChildLoadProvider: void setSourceDecoder(com.bumptech.glide.load.ResourceDecoder)>(r1);

     label1:
        return r0;
    }
    public com.bumptech.glide.GenericRequestBuilder diskCacheStrategy(com.bumptech.glide.load.engine.DiskCacheStrategy)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.load.engine.DiskCacheStrategy $r1;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        $r1 := @parameter0: com.bumptech.glide.load.engine.DiskCacheStrategy;

        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.load.engine.DiskCacheStrategy diskCacheStrategy> = $r1;

        return r0;
    }
    public com.bumptech.glide.GenericRequestBuilder dontAnimate()
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.request.animation.GlideAnimationFactory $r1;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        $r1 = staticinvoke <com.bumptech.glide.request.animation.NoAnimation: com.bumptech.glide.request.animation.GlideAnimationFactory getFactory()>();

        r0 = virtualinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder animate(com.bumptech.glide.request.animation.GlideAnimationFactory)>($r1);

        return r0;
    }
    public com.bumptech.glide.GenericRequestBuilder dontTransform()
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.load.resource.UnitTransformation $r1;
        com.bumptech.glide.load.Transformation[] $r2;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        $r1 = staticinvoke <com.bumptech.glide.load.resource.UnitTransformation: com.bumptech.glide.load.resource.UnitTransformation get()>();

        $r2 = newarray (com.bumptech.glide.load.Transformation)[1];

        $r2[0] = $r1;

        r0 = virtualinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder transform(com.bumptech.glide.load.Transformation[])>($r2);

        return r0;
    }
    public com.bumptech.glide.GenericRequestBuilder encoder(com.bumptech.glide.load.ResourceEncoder)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.load.ResourceEncoder r1;
        com.bumptech.glide.provider.ChildLoadProvider $r2;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.ResourceEncoder;

        $r2 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider>;

        if $r2 == null goto label1;

        $r2 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider>;

        virtualinvoke $r2.<com.bumptech.glide.provider.ChildLoadProvider: void setEncoder(com.bumptech.glide.load.ResourceEncoder)>(r1);

     label1:
        return r0;
    }
    public com.bumptech.glide.GenericRequestBuilder error(int)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        int $i0;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        $i0 := @parameter0: int;

        r0.<com.bumptech.glide.GenericRequestBuilder: int errorId> = $i0;

        return r0;
    }
    public com.bumptech.glide.GenericRequestBuilder error(android.graphics.drawable.Drawable)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        r0.<com.bumptech.glide.GenericRequestBuilder: android.graphics.drawable.Drawable errorPlaceholder> = $r1;

        return r0;
    }
    public com.bumptech.glide.GenericRequestBuilder fallback(int)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        int $i0;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        $i0 := @parameter0: int;

        r0.<com.bumptech.glide.GenericRequestBuilder: int fallbackResource> = $i0;

        return r0;
    }
    public com.bumptech.glide.GenericRequestBuilder fallback(android.graphics.drawable.Drawable)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        r0.<com.bumptech.glide.GenericRequestBuilder: android.graphics.drawable.Drawable fallbackDrawable> = $r1;

        return r0;
    }
    public com.bumptech.glide.request.FutureTarget into(int, int)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        int $i0, $i1;
        com.bumptech.glide.request.RequestFutureTarget r1;
        com.bumptech.glide.GenericRequestBuilder$1 $r2;
        com.bumptech.glide.Glide $r3;
        android.os.Handler $r4;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        r1 = new com.bumptech.glide.request.RequestFutureTarget;

        $r3 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Glide glide>;

        $r4 = virtualinvoke $r3.<com.bumptech.glide.Glide: android.os.Handler getMainHandler()>();

        specialinvoke r1.<com.bumptech.glide.request.RequestFutureTarget: void <init>(android.os.Handler,int,int)>($r4, $i0, $i1);

        $r3 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Glide glide>;

        $r4 = virtualinvoke $r3.<com.bumptech.glide.Glide: android.os.Handler getMainHandler()>();

        $r2 = new com.bumptech.glide.GenericRequestBuilder$1;

        specialinvoke $r2.<com.bumptech.glide.GenericRequestBuilder$1: void <init>(com.bumptech.glide.GenericRequestBuilder,com.bumptech.glide.request.RequestFutureTarget)>(r0, r1);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return r1;
    }
    public com.bumptech.glide.request.target.Target into(android.widget.ImageView)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        android.widget.ImageView $r1;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;
        android.widget.ImageView$ScaleType $r3;
        int[] $r4;
        int $i0;
        com.bumptech.glide.Glide $r5;
        java.lang.Class $r6;
        com.bumptech.glide.request.target.Target $r7;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        $r1 := @parameter0: android.widget.ImageView;

        staticinvoke <com.bumptech.glide.util.Util: void assertMainThread()>();

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("You must pass in a non null View");

        throw $r2;

     label1:
        $z0 = r0.<com.bumptech.glide.GenericRequestBuilder: boolean isTransformationSet>;

        if $z0 != 0 goto label2;

        $r3 = virtualinvoke $r1.<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()>();

        if $r3 == null goto label2;

        $r4 = <com.bumptech.glide.GenericRequestBuilder$2: int[] $SwitchMap$android$widget$ImageView$ScaleType>;

        $r3 = virtualinvoke $r1.<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()>();

        $i0 = virtualinvoke $r3.<android.widget.ImageView$ScaleType: int ordinal()>();

        $i0 = $r4[$i0];

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label4;
            case 4: goto label4;
            default: goto label2;
        };

     label2:
        $r5 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Glide glide>;

        $r6 = r0.<com.bumptech.glide.GenericRequestBuilder: java.lang.Class transcodeClass>;

        $r7 = virtualinvoke $r5.<com.bumptech.glide.Glide: com.bumptech.glide.request.target.Target buildImageViewTarget(android.widget.ImageView,java.lang.Class)>($r1, $r6);

        $r7 = virtualinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target)>($r7);

        return $r7;

     label3:
        virtualinvoke r0.<com.bumptech.glide.GenericRequestBuilder: void applyCenterCrop()>();

        goto label2;

     label4:
        virtualinvoke r0.<com.bumptech.glide.GenericRequestBuilder: void applyFitCenter()>();

        goto label2;
    }
    public com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.request.target.Target r1;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;
        com.bumptech.glide.request.Request $r3;
        com.bumptech.glide.manager.RequestTracker $r4;
        com.bumptech.glide.manager.Lifecycle $r5;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.request.target.Target;

        staticinvoke <com.bumptech.glide.util.Util: void assertMainThread()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("You must pass in a non null Target");

        throw $r2;

     label1:
        $z0 = r0.<com.bumptech.glide.GenericRequestBuilder: boolean isModelSet>;

        if $z0 != 0 goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("You must first set a model (try #load())");

        throw $r2;

     label2:
        $r3 = interfaceinvoke r1.<com.bumptech.glide.request.target.Target: com.bumptech.glide.request.Request getRequest()>();

        if $r3 == null goto label3;

        interfaceinvoke $r3.<com.bumptech.glide.request.Request: void clear()>();

        $r4 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.manager.RequestTracker requestTracker>;

        virtualinvoke $r4.<com.bumptech.glide.manager.RequestTracker: void removeRequest(com.bumptech.glide.request.Request)>($r3);

        interfaceinvoke $r3.<com.bumptech.glide.request.Request: void recycle()>();

     label3:
        $r3 = specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.Request buildRequest(com.bumptech.glide.request.target.Target)>(r1);

        interfaceinvoke r1.<com.bumptech.glide.request.target.Target: void setRequest(com.bumptech.glide.request.Request)>($r3);

        $r5 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.manager.Lifecycle lifecycle>;

        interfaceinvoke $r5.<com.bumptech.glide.manager.Lifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>(r1);

        $r4 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.manager.RequestTracker requestTracker>;

        virtualinvoke $r4.<com.bumptech.glide.manager.RequestTracker: void runRequest(com.bumptech.glide.request.Request)>($r3);

        return r1;
    }
    public com.bumptech.glide.GenericRequestBuilder listener(com.bumptech.glide.request.RequestListener)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.request.RequestListener r1;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.request.RequestListener;

        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.RequestListener requestListener> = r1;

        return r0;
    }
    public com.bumptech.glide.GenericRequestBuilder load(java.lang.Object)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        java.lang.Object r1;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: java.lang.Object;

        r0.<com.bumptech.glide.GenericRequestBuilder: java.lang.Object model> = r1;

        r0.<com.bumptech.glide.GenericRequestBuilder: boolean isModelSet> = 1;

        return r0;
    }
    public com.bumptech.glide.GenericRequestBuilder override(int, int)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        int $i0, $i1;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 = staticinvoke <com.bumptech.glide.util.Util: boolean isValidDimensions(int,int)>($i0, $i1);

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Width and height must be Target#SIZE_ORIGINAL or > 0");

        throw $r1;

     label1:
        r0.<com.bumptech.glide.GenericRequestBuilder: int overrideWidth> = $i0;

        r0.<com.bumptech.glide.GenericRequestBuilder: int overrideHeight> = $i1;

        return r0;
    }
    public com.bumptech.glide.GenericRequestBuilder placeholder(int)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        int $i0;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        $i0 := @parameter0: int;

        r0.<com.bumptech.glide.GenericRequestBuilder: int placeholderId> = $i0;

        return r0;
    }
    public com.bumptech.glide.GenericRequestBuilder placeholder(android.graphics.drawable.Drawable)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        r0.<com.bumptech.glide.GenericRequestBuilder: android.graphics.drawable.Drawable placeholderDrawable> = $r1;

        return r0;
    }
    public com.bumptech.glide.request.target.Target preload()
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.request.target.Target $r1;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        $r1 = virtualinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.target.Target preload(int,int)>(-2147483648, -2147483648);

        return $r1;
    }
    public com.bumptech.glide.request.target.Target preload(int, int)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        int $i0, $i1;
        com.bumptech.glide.request.target.PreloadTarget $r1;
        com.bumptech.glide.request.target.Target $r2;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = staticinvoke <com.bumptech.glide.request.target.PreloadTarget: com.bumptech.glide.request.target.PreloadTarget obtain(int,int)>($i0, $i1);

        $r2 = virtualinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target)>($r1);

        return $r2;
    }
    public com.bumptech.glide.GenericRequestBuilder priority(com.bumptech.glide.Priority)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.Priority $r1;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        $r1 := @parameter0: com.bumptech.glide.Priority;

        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Priority priority> = $r1;

        return r0;
    }
    public com.bumptech.glide.GenericRequestBuilder signature(com.bumptech.glide.load.Key)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.load.Key $r1;
        java.lang.NullPointerException $r2;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        $r1 := @parameter0: com.bumptech.glide.load.Key;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Signature must not be null");

        throw $r2;

     label1:
        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.load.Key signature> = $r1;

        return r0;
    }
    public com.bumptech.glide.GenericRequestBuilder sizeMultiplier(float)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        float $f0;
        java.lang.Float $r1;
        byte $b0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        $f0 := @parameter0: float;

        $b0 = $f0 cmpg 0.0F;

        if $b0 < 0 goto label1;

        $b0 = $f0 cmpl 1.0F;

        if $b0 <= 0 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("sizeMultiplier must be between 0 and 1");

        throw $r2;

     label2:
        $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        r0.<com.bumptech.glide.GenericRequestBuilder: java.lang.Float sizeMultiplier> = $r1;

        return r0;
    }
    public com.bumptech.glide.GenericRequestBuilder skipMemoryCache(boolean)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        boolean $z0;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        $z0 := @parameter0: boolean;

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        r0.<com.bumptech.glide.GenericRequestBuilder: boolean isCacheable> = $z0;

        return r0;

     label2:
        $z0 = 0;

        goto label1;
    }
    public com.bumptech.glide.GenericRequestBuilder sourceEncoder(com.bumptech.glide.load.Encoder)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.load.Encoder r1;
        com.bumptech.glide.provider.ChildLoadProvider $r2;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.Encoder;

        $r2 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider>;

        if $r2 == null goto label1;

        $r2 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider>;

        virtualinvoke $r2.<com.bumptech.glide.provider.ChildLoadProvider: void setSourceEncoder(com.bumptech.glide.load.Encoder)>(r1);

     label1:
        return r0;
    }
    public com.bumptech.glide.GenericRequestBuilder thumbnail(float)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        float $f0;
        java.lang.Float $r1;
        byte $b0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        $f0 := @parameter0: float;

        $b0 = $f0 cmpg 0.0F;

        if $b0 < 0 goto label1;

        $b0 = $f0 cmpl 1.0F;

        if $b0 <= 0 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("sizeMultiplier must be between 0 and 1");

        throw $r2;

     label2:
        $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        r0.<com.bumptech.glide.GenericRequestBuilder: java.lang.Float thumbSizeMultiplier> = $r1;

        return r0;
    }
    public com.bumptech.glide.GenericRequestBuilder thumbnail(com.bumptech.glide.GenericRequestBuilder)
    {
        com.bumptech.glide.GenericRequestBuilder r0, r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.GenericRequestBuilder;

        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("You cannot set a request as a thumbnail for itself. Consider using clone() on the request you are passing to thumbnail()");

        throw $r2;

     label1:
        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder thumbnailRequestBuilder> = r1;

        return r0;
    }
    public com.bumptech.glide.GenericRequestBuilder transcoder(com.bumptech.glide.load.resource.transcode.ResourceTranscoder)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.load.resource.transcode.ResourceTranscoder r1;
        com.bumptech.glide.provider.ChildLoadProvider $r2;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.resource.transcode.ResourceTranscoder;

        $r2 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider>;

        if $r2 == null goto label1;

        $r2 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider>;

        virtualinvoke $r2.<com.bumptech.glide.provider.ChildLoadProvider: void setTranscoder(com.bumptech.glide.load.resource.transcode.ResourceTranscoder)>(r1);

     label1:
        return r0;
    }
    public transient com.bumptech.glide.GenericRequestBuilder transform(com.bumptech.glide.load.Transformation[])
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.load.Transformation[] r1;
        int $i0;
        com.bumptech.glide.load.Transformation $r2;
        com.bumptech.glide.load.MultiTransformation $r3;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.Transformation[];

        r0.<com.bumptech.glide.GenericRequestBuilder: boolean isTransformationSet> = 1;

        $i0 = lengthof r1;

        if $i0 != 1 goto label1;

        $r2 = r1[0];

        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.load.Transformation transformation> = $r2;

        return r0;

     label1:
        $r3 = new com.bumptech.glide.load.MultiTransformation;

        specialinvoke $r3.<com.bumptech.glide.load.MultiTransformation: void <init>(com.bumptech.glide.load.Transformation[])>(r1);

        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.load.Transformation transformation> = $r3;

        return r0;
    }
