com.bumptech.glide.gifencoder.AnimatedGifEncoder extends java.lang.Object
private static final double MIN_TRANSPARENT_PERCENTAGE
private static final java.lang.String TAG
private boolean closeStream
private int colorDepth
private byte[] colorTab
private int delay
private int dispose
private boolean firstFrame
private boolean hasTransparentPixels
private int height
private android.graphics.Bitmap image
private byte[] indexedPixels
private java.io.OutputStream out
private int palSize
private byte[] pixels
private int repeat
private int sample
private boolean sizeSet
private boolean started
private int transIndex
private java.lang.Integer transparent
private boolean[] usedEntry
private int width
    public void <init>()
    {
        com.bumptech.glide.gifencoder.AnimatedGifEncoder r0;
        boolean[] $r1;

        r0 := @this: com.bumptech.glide.gifencoder.AnimatedGifEncoder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.lang.Integer transparent> = null;

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int repeat> = -1;

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int delay> = 0;

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean started> = 0;

        $r1 = newarray (boolean)[256];

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean[] usedEntry> = $r1;

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int palSize> = 7;

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int dispose> = -1;

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean closeStream> = 0;

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean firstFrame> = 1;

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean sizeSet> = 0;

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int sample> = 10;

        return;
    }
    private void analyzePixels()
    {
        com.bumptech.glide.gifencoder.AnimatedGifEncoder r0;
        int i0, i1, $i3, i5, i6, $i7;
        com.bumptech.glide.gifencoder.NeuQuant r1;
        byte b2, $b4;
        byte[] $r2, $r3;
        boolean[] $r4;
        java.lang.Integer $r5;
        boolean $z0;

        r0 := @this: com.bumptech.glide.gifencoder.AnimatedGifEncoder;

        $r2 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: byte[] pixels>;

        i0 = lengthof $r2;

        i1 = i0 / 3;

        $r2 = newarray (byte)[i1];

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: byte[] indexedPixels> = $r2;

        r1 = new com.bumptech.glide.gifencoder.NeuQuant;

        $r2 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: byte[] pixels>;

        $i3 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int sample>;

        specialinvoke r1.<com.bumptech.glide.gifencoder.NeuQuant: void <init>(byte[],int,int)>($r2, i0, $i3);

        $r2 = virtualinvoke r1.<com.bumptech.glide.gifencoder.NeuQuant: byte[] process()>();

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: byte[] colorTab> = $r2;

        i0 = 0;

     label1:
        $r2 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: byte[] colorTab>;

        $i3 = lengthof $r2;

        if i0 >= $i3 goto label2;

        $r2 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: byte[] colorTab>;

        b2 = $r2[i0];

        $r2 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: byte[] colorTab>;

        $r3 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: byte[] colorTab>;

        $i3 = i0 + 2;

        $b4 = $r3[$i3];

        $r2[i0] = $b4;

        $r2 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: byte[] colorTab>;

        $i3 = i0 + 2;

        $r2[$i3] = b2;

        $r4 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean[] usedEntry>;

        $i3 = i0 / 3;

        $r4[$i3] = 0;

        i0 = i0 + 3;

        goto label1;

     label2:
        i0 = 0;

        $i3 = 0;

     label3:
        if i0 >= i1 goto label4;

        $r2 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: byte[] pixels>;

        i5 = $i3 + 1;

        b2 = $r2[$i3];

        $i3 = b2 & 255;

        $r2 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: byte[] pixels>;

        i6 = i5 + 1;

        b2 = $r2[i5];

        $i7 = b2 & 255;

        $r2 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: byte[] pixels>;

        i5 = i6 + 1;

        b2 = $r2[i6];

        i6 = b2 & 255;

        $i3 = virtualinvoke r1.<com.bumptech.glide.gifencoder.NeuQuant: int map(int,int,int)>($i3, $i7, i6);

        $r4 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean[] usedEntry>;

        $r4[$i3] = 1;

        $r2 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: byte[] indexedPixels>;

        b2 = (byte) $i3;

        $r2[i0] = b2;

        i0 = i0 + 1;

        $i3 = i5;

        goto label3;

     label4:
        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: byte[] pixels> = null;

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int colorDepth> = 8;

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int palSize> = 7;

        $r5 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.lang.Integer transparent>;

        if $r5 == null goto label5;

        $r5 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.lang.Integer transparent>;

        i1 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        i1 = specialinvoke r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int findClosest(int)>(i1);

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int transIndex> = i1;

        return;

     label5:
        $z0 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean hasTransparentPixels>;

        if $z0 == 0 goto label6;

        i1 = specialinvoke r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int findClosest(int)>(0);

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int transIndex> = i1;

     label6:
        return;
    }
    private int findClosest(int)
    {
        com.bumptech.glide.gifencoder.AnimatedGifEncoder r0;
        int $i0, i1, i2, i3, $i4, $i5, $i6, i7, i8, i9;
        byte[] $r1;
        byte $b10;
        boolean[] $r2;
        boolean $z0;

        r0 := @this: com.bumptech.glide.gifencoder.AnimatedGifEncoder;

        $i0 := @parameter0: int;

        $r1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: byte[] colorTab>;

        if $r1 != null goto label1;

        return -1;

     label1:
        $i4 = staticinvoke <android.graphics.Color: int red(int)>($i0);

        $i5 = staticinvoke <android.graphics.Color: int green(int)>($i0);

        $i6 = staticinvoke <android.graphics.Color: int blue(int)>($i0);

        i7 = 0;

        i8 = 16777216;

        $r1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: byte[] colorTab>;

        $i0 = lengthof $r1;

        i9 = 0;

     label2:
        if i9 >= $i0 goto label4;

        $r1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: byte[] colorTab>;

        i1 = i9 + 1;

        $b10 = $r1[i9];

        i9 = $b10 & 255;

        i3 = $i4 - i9;

        $r1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: byte[] colorTab>;

        i9 = i1 + 1;

        $b10 = $r1[i1];

        i1 = $b10 & 255;

        i2 = $i5 - i1;

        $r1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: byte[] colorTab>;

        $b10 = $r1[i9];

        i1 = $b10 & 255;

        i1 = $i6 - i1;

        i3 = i3 * i3;

        i2 = i2 * i2;

        i3 = i3 + i2;

        i1 = i1 * i1;

        i1 = i3 + i1;

        i3 = i9 / 3;

        $r2 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean[] usedEntry>;

        $z0 = $r2[i3];

        if $z0 == 0 goto label3;

        if i1 >= i8 goto label3;

        i8 = i1;

        i7 = i3;

     label3:
        i9 = i9 + 1;

        goto label2;

     label4:
        return i7;
    }
    private void getImagePixels()
    {
        com.bumptech.glide.gifencoder.AnimatedGifEncoder r0;
        int[] r1;
        android.graphics.Canvas r2;
        int i0, i1, $i2, $i3, i4, i5, $i6;
        double d0, $d1;
        android.graphics.Bitmap $r3;
        android.graphics.Bitmap$Config $r4;
        byte[] $r5;
        byte $b7;
        boolean $z0;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;

        r0 := @this: com.bumptech.glide.gifencoder.AnimatedGifEncoder;

        $r3 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: android.graphics.Bitmap image>;

        i0 = virtualinvoke $r3.<android.graphics.Bitmap: int getWidth()>();

        $r3 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: android.graphics.Bitmap image>;

        $i2 = virtualinvoke $r3.<android.graphics.Bitmap: int getHeight()>();

        $i3 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int width>;

        if i0 != $i3 goto label1;

        $i3 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int height>;

        if $i2 == $i3 goto label2;

     label1:
        $i3 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int width>;

        i1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int height>;

        $r4 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i3, i1, $r4);

        r2 = new android.graphics.Canvas;

        specialinvoke r2.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r3);

        virtualinvoke r2.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r3, 0.0F, 0.0F, null);

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: android.graphics.Bitmap image> = $r3;

     label2:
        $i3 = i0 * $i2;

        r1 = newarray (int)[$i3];

        $r3 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: android.graphics.Bitmap image>;

        virtualinvoke $r3.<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>(r1, 0, i0, 0, 0, i0, $i2);

        i0 = lengthof r1;

        i0 = i0 * 3;

        $r5 = newarray (byte)[i0];

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: byte[] pixels> = $r5;

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean hasTransparentPixels> = 0;

        $i2 = 0;

        i0 = lengthof r1;

        $i3 = 0;

        i4 = 0;

     label3:
        if $i3 >= i0 goto label5;

        i1 = r1[$i3];

        if i1 != 0 goto label4;

        $i2 = $i2 + 1;

     label4:
        $r5 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: byte[] pixels>;

        i5 = i4 + 1;

        $i6 = i1 & 255;

        $b7 = (byte) $i6;

        $r5[i4] = $b7;

        $r5 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: byte[] pixels>;

        i4 = i5 + 1;

        $i6 = i1 >> 8;

        $i6 = $i6 & 255;

        $b7 = (byte) $i6;

        $r5[i5] = $b7;

        $r5 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: byte[] pixels>;

        i1 = i1 >> 16;

        i1 = i1 & 255;

        $b7 = (byte) i1;

        $r5[i4] = $b7;

        $i3 = $i3 + 1;

        i4 = i4 + 1;

        goto label3;

     label5:
        i0 = $i2 * 100;

        d0 = (double) i0;

        i0 = lengthof r1;

        $d1 = (double) i0;

        d0 = d0 / $d1;

        $b7 = d0 cmpl 4.0;

        if $b7 <= 0 goto label7;

        $z0 = 1;

     label6:
        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean hasTransparentPixels> = $z0;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AnimatedGifEncoder", 3);

        if $z0 == 0 goto label8;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("got pixels for frame with ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("% transparent pixels");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AnimatedGifEncoder", $r7);

        return;

     label7:
        $z0 = 0;

        goto label6;

     label8:
        return;
    }
    private void writeGraphicCtrlExt() throws java.io.IOException
    {
        com.bumptech.glide.gifencoder.AnimatedGifEncoder r0;
        java.io.OutputStream $r1;
        java.lang.Integer $r2;
        boolean $z0;
        byte b0;
        int i1, $i2;

        r0 := @this: com.bumptech.glide.gifencoder.AnimatedGifEncoder;

        $r1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(33);

        $r1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(249);

        $r1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(4);

        $r2 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.lang.Integer transparent>;

        if $r2 != null goto label3;

        $z0 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean hasTransparentPixels>;

        if $z0 != 0 goto label3;

        b0 = 0;

        i1 = 0;

     label1:
        $i2 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int dispose>;

        if $i2 < 0 goto label2;

        i1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int dispose>;

        i1 = i1 & 7;

     label2:
        i1 = i1 << 2;

        $r1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.io.OutputStream out>;

        i1 = i1 | b0;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(i1);

        i1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int delay>;

        specialinvoke r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: void writeShort(int)>(i1);

        $r1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.io.OutputStream out>;

        i1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int transIndex>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(i1);

        $r1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(0);

        return;

     label3:
        b0 = 1;

        i1 = 2;

        goto label1;
    }
    private void writeImageDesc() throws java.io.IOException
    {
        com.bumptech.glide.gifencoder.AnimatedGifEncoder r0;
        java.io.OutputStream $r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.bumptech.glide.gifencoder.AnimatedGifEncoder;

        $r1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(44);

        specialinvoke r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: void writeShort(int)>(0);

        specialinvoke r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: void writeShort(int)>(0);

        $i0 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int width>;

        specialinvoke r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: void writeShort(int)>($i0);

        $i0 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int height>;

        specialinvoke r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: void writeShort(int)>($i0);

        $z0 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean firstFrame>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(0);

        return;

     label1:
        $r1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.io.OutputStream out>;

        $i0 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int palSize>;

        $i0 = $i0 | 128;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>($i0);

        return;
    }
    private void writeLSD() throws java.io.IOException
    {
        com.bumptech.glide.gifencoder.AnimatedGifEncoder r0;
        int $i0;
        java.io.OutputStream $r1;

        r0 := @this: com.bumptech.glide.gifencoder.AnimatedGifEncoder;

        $i0 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int width>;

        specialinvoke r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: void writeShort(int)>($i0);

        $i0 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int height>;

        specialinvoke r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: void writeShort(int)>($i0);

        $r1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.io.OutputStream out>;

        $i0 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int palSize>;

        $i0 = $i0 | 240;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>($i0);

        $r1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(0);

        $r1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(0);

        return;
    }
    private void writeNetscapeExt() throws java.io.IOException
    {
        com.bumptech.glide.gifencoder.AnimatedGifEncoder r0;
        java.io.OutputStream $r1;
        int $i0;

        r0 := @this: com.bumptech.glide.gifencoder.AnimatedGifEncoder;

        $r1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(33);

        $r1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(255);

        $r1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(11);

        specialinvoke r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: void writeString(java.lang.String)>("NETSCAPE2.0");

        $r1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(3);

        $r1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(1);

        $i0 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int repeat>;

        specialinvoke r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: void writeShort(int)>($i0);

        $r1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(0);

        return;
    }
    private void writePalette() throws java.io.IOException
    {
        com.bumptech.glide.gifencoder.AnimatedGifEncoder r0;
        int i0, i1;
        byte[] $r1, $r3;
        java.io.OutputStream $r2;

        r0 := @this: com.bumptech.glide.gifencoder.AnimatedGifEncoder;

        $r2 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.io.OutputStream out>;

        $r1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: byte[] colorTab>;

        $r3 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: byte[] colorTab>;

        i0 = lengthof $r3;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, i0);

        $r1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: byte[] colorTab>;

        i0 = lengthof $r1;

        i0 = 768 - i0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.io.OutputStream out>;

        virtualinvoke $r2.<java.io.OutputStream: void write(int)>(0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
    private void writePixels() throws java.io.IOException
    {
        com.bumptech.glide.gifencoder.AnimatedGifEncoder r0;
        com.bumptech.glide.gifencoder.LZWEncoder r1;
        int $i0, $i1, $i2;
        byte[] $r2;
        java.io.OutputStream $r3;

        r0 := @this: com.bumptech.glide.gifencoder.AnimatedGifEncoder;

        r1 = new com.bumptech.glide.gifencoder.LZWEncoder;

        $i2 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int width>;

        $i0 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int height>;

        $r2 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: byte[] indexedPixels>;

        $i1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int colorDepth>;

        specialinvoke r1.<com.bumptech.glide.gifencoder.LZWEncoder: void <init>(int,int,byte[],int)>($i2, $i0, $r2, $i1);

        $r3 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.io.OutputStream out>;

        virtualinvoke r1.<com.bumptech.glide.gifencoder.LZWEncoder: void encode(java.io.OutputStream)>($r3);

        return;
    }
    private void writeShort(int) throws java.io.IOException
    {
        com.bumptech.glide.gifencoder.AnimatedGifEncoder r0;
        int $i0, $i1;
        java.io.OutputStream $r1;

        r0 := @this: com.bumptech.glide.gifencoder.AnimatedGifEncoder;

        $i0 := @parameter0: int;

        $r1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.io.OutputStream out>;

        $i1 = $i0 & 255;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>($i1);

        $r1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.io.OutputStream out>;

        $i0 = $i0 >> 8;

        $i0 = $i0 & 255;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>($i0);

        return;
    }
    private void writeString(java.lang.String) throws java.io.IOException
    {
        com.bumptech.glide.gifencoder.AnimatedGifEncoder r0;
        java.lang.String $r1;
        int i0, $i1;
        java.io.OutputStream $r2;
        char $c2;
        byte $b3;

        r0 := @this: com.bumptech.glide.gifencoder.AnimatedGifEncoder;

        $r1 := @parameter0: java.lang.String;

        i0 = 0;

     label1:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i0 >= $i1 goto label2;

        $r2 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.io.OutputStream out>;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i0);

        $b3 = (byte) $c2;

        virtualinvoke $r2.<java.io.OutputStream: void write(int)>($b3);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }
    public boolean addFrame(android.graphics.Bitmap)
    {
        com.bumptech.glide.gifencoder.AnimatedGifEncoder r0;
        android.graphics.Bitmap $r1;
        java.io.IOException r2;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: com.bumptech.glide.gifencoder.AnimatedGifEncoder;

        $r1 := @parameter0: android.graphics.Bitmap;

        if $r1 == null goto label15;

        $z0 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean started>;

        if $z0 != 0 goto label01;

        return 0;

     label01:
        $z0 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean sizeSet>;

        if $z0 != 0 goto label03;

     label02:
        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();

        virtualinvoke r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: void setSize(int,int)>($i0, $i1);

     label03:
        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: android.graphics.Bitmap image> = $r1;

     label04:
        specialinvoke r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: void getImagePixels()>();

        specialinvoke r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: void analyzePixels()>();

     label05:
        $z0 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean firstFrame>;

        if $z0 == 0 goto label09;

     label06:
        specialinvoke r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: void writeLSD()>();

        specialinvoke r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: void writePalette()>();

     label07:
        $i0 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int repeat>;

        if $i0 < 0 goto label09;

     label08:
        specialinvoke r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: void writeNetscapeExt()>();

     label09:
        specialinvoke r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: void writeGraphicCtrlExt()>();

        specialinvoke r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: void writeImageDesc()>();

     label10:
        $z0 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean firstFrame>;

        if $z0 != 0 goto label12;

     label11:
        specialinvoke r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: void writePalette()>();

     label12:
        specialinvoke r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: void writePixels()>();

     label13:
        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean firstFrame> = 0;

        return 1;

     label14:
        r2 := @caughtexception;

        return 0;

     label15:
        return 0;

        catch java.io.IOException from label02 to label03 with label14;
        catch java.io.IOException from label04 to label05 with label14;
        catch java.io.IOException from label06 to label07 with label14;
        catch java.io.IOException from label08 to label10 with label14;
        catch java.io.IOException from label11 to label13 with label14;
    }
    public boolean finish()
    {
        com.bumptech.glide.gifencoder.AnimatedGifEncoder r0;
        java.io.IOException r1;
        boolean $z0, $z1;
        java.io.OutputStream $r2;

        r0 := @this: com.bumptech.glide.gifencoder.AnimatedGifEncoder;

        $z0 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean started>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z0 = 1;

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean started> = 0;

        $r2 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.io.OutputStream out>;

     label2:
        virtualinvoke $r2.<java.io.OutputStream: void write(int)>(59);

     label3:
        $r2 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.io.OutputStream out>;

     label4:
        virtualinvoke $r2.<java.io.OutputStream: void flush()>();

     label5:
        $z1 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean closeStream>;

        if $z1 == 0 goto label7;

        $r2 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.io.OutputStream out>;

     label6:
        virtualinvoke $r2.<java.io.OutputStream: void close()>();

     label7:
        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int transIndex> = 0;

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.io.OutputStream out> = null;

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: android.graphics.Bitmap image> = null;

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: byte[] pixels> = null;

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: byte[] indexedPixels> = null;

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: byte[] colorTab> = null;

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean closeStream> = 0;

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean firstFrame> = 1;

        return $z0;

     label8:
        r1 := @caughtexception;

        $z0 = 0;

        goto label7;

        catch java.io.IOException from label2 to label3 with label8;
        catch java.io.IOException from label4 to label5 with label8;
        catch java.io.IOException from label6 to label7 with label8;
    }
    public void setDelay(int)
    {
        com.bumptech.glide.gifencoder.AnimatedGifEncoder r0;
        int $i0;
        float $f0;

        r0 := @this: com.bumptech.glide.gifencoder.AnimatedGifEncoder;

        $i0 := @parameter0: int;

        $f0 = (float) $i0;

        $f0 = $f0 / 10.0F;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int delay> = $i0;

        return;
    }
    public void setDispose(int)
    {
        com.bumptech.glide.gifencoder.AnimatedGifEncoder r0;
        int $i0;

        r0 := @this: com.bumptech.glide.gifencoder.AnimatedGifEncoder;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int dispose> = $i0;

     label1:
        return;
    }
    public void setFrameRate(float)
    {
        com.bumptech.glide.gifencoder.AnimatedGifEncoder r0;
        float $f0;
        int $i0;
        byte $b1;

        r0 := @this: com.bumptech.glide.gifencoder.AnimatedGifEncoder;

        $f0 := @parameter0: float;

        $b1 = $f0 cmpl 0.0F;

        if $b1 == 0 goto label1;

        $f0 = 100.0F / $f0;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int delay> = $i0;

     label1:
        return;
    }
    public void setQuality(int)
    {
        com.bumptech.glide.gifencoder.AnimatedGifEncoder r0;
        int $i0;

        r0 := @this: com.bumptech.glide.gifencoder.AnimatedGifEncoder;

        $i0 := @parameter0: int;

        if $i0 >= 1 goto label1;

        $i0 = 1;

     label1:
        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int sample> = $i0;

        return;
    }
    public void setRepeat(int)
    {
        com.bumptech.glide.gifencoder.AnimatedGifEncoder r0;
        int $i0;

        r0 := @this: com.bumptech.glide.gifencoder.AnimatedGifEncoder;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int repeat> = $i0;

     label1:
        return;
    }
    public void setSize(int, int)
    {
        com.bumptech.glide.gifencoder.AnimatedGifEncoder r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.bumptech.glide.gifencoder.AnimatedGifEncoder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean started>;

        if $z0 == 0 goto label1;

        $z0 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean firstFrame>;

        if $z0 != 0 goto label1;

        return;

     label1:
        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int width> = $i0;

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int height> = $i1;

        $i0 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int width>;

        if $i0 >= 1 goto label2;

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int width> = 320;

     label2:
        $i0 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int height>;

        if $i0 >= 1 goto label3;

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: int height> = 240;

     label3:
        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean sizeSet> = 1;

        return;
    }
    public void setTransparent(int)
    {
        com.bumptech.glide.gifencoder.AnimatedGifEncoder r0;
        int $i0;
        java.lang.Integer $r1;

        r0 := @this: com.bumptech.glide.gifencoder.AnimatedGifEncoder;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.lang.Integer transparent> = $r1;

        return;
    }
    public boolean start(java.io.OutputStream)
    {
        com.bumptech.glide.gifencoder.AnimatedGifEncoder r0;
        java.io.OutputStream $r1;
        java.io.IOException r2;
        boolean z0;

        r0 := @this: com.bumptech.glide.gifencoder.AnimatedGifEncoder;

        $r1 := @parameter0: java.io.OutputStream;

        if $r1 != null goto label1;

        return 0;

     label1:
        z0 = 1;

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean closeStream> = 0;

        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.io.OutputStream out> = $r1;

     label2:
        specialinvoke r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: void writeString(java.lang.String)>("GIF89a");

     label3:
        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean started> = z0;

        return z0;

     label4:
        r2 := @caughtexception;

        z0 = 0;

        goto label3;

        catch java.io.IOException from label2 to label3 with label4;
    }
    public boolean start(java.lang.String)
    {
        com.bumptech.glide.gifencoder.AnimatedGifEncoder r0;
        java.lang.String $r1;
        java.io.IOException r2;
        java.io.FileOutputStream $r3;
        boolean $z0;
        java.io.BufferedOutputStream $r4;
        java.io.OutputStream $r5;

        r0 := @this: com.bumptech.glide.gifencoder.AnimatedGifEncoder;

        $r1 := @parameter0: java.lang.String;

        $r4 = new java.io.BufferedOutputStream;

        $r3 = new java.io.FileOutputStream;

     label1:
        specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.lang.String)>($r1);

        specialinvoke $r4.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r3);

     label2:
        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.io.OutputStream out> = $r4;

        $r5 = r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: java.io.OutputStream out>;

     label3:
        $z0 = virtualinvoke r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean start(java.io.OutputStream)>($r5);

     label4:
        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean closeStream> = 1;

     label5:
        r0.<com.bumptech.glide.gifencoder.AnimatedGifEncoder: boolean started> = $z0;

        return $z0;

     label6:
        r2 := @caughtexception;

        $z0 = 0;

        goto label5;

        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.IOException from label3 to label4 with label6;
    }
