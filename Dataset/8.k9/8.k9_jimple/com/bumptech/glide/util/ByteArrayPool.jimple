com.bumptech.glide.util.ByteArrayPool extends java.lang.Object
private static final com.bumptech.glide.util.ByteArrayPool BYTE_ARRAY_POOL
private static final int MAX_BYTE_ARRAY_COUNT
private static final int MAX_SIZE
private static final java.lang.String TAG
private static final int TEMP_BYTES_SIZE
private final java.util.Queue tempQueue
    static void <clinit>()
    {
        com.bumptech.glide.util.ByteArrayPool $r0;

        $r0 = new com.bumptech.glide.util.ByteArrayPool;

        specialinvoke $r0.<com.bumptech.glide.util.ByteArrayPool: void <init>()>();

        <com.bumptech.glide.util.ByteArrayPool: com.bumptech.glide.util.ByteArrayPool BYTE_ARRAY_POOL> = $r0;

        return;
    }
    private void <init>()
    {
        com.bumptech.glide.util.ByteArrayPool r0;
        java.util.Queue $r1;

        r0 := @this: com.bumptech.glide.util.ByteArrayPool;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.bumptech.glide.util.Util: java.util.Queue createQueue(int)>(0);

        r0.<com.bumptech.glide.util.ByteArrayPool: java.util.Queue tempQueue> = $r1;

        return;
    }
    public static com.bumptech.glide.util.ByteArrayPool get()
    {
        com.bumptech.glide.util.ByteArrayPool r0;

        r0 = <com.bumptech.glide.util.ByteArrayPool: com.bumptech.glide.util.ByteArrayPool BYTE_ARRAY_POOL>;

        return r0;
    }
    public void clear()
    {
        com.bumptech.glide.util.ByteArrayPool r0;
        java.util.Queue $r1, $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.bumptech.glide.util.ByteArrayPool;

        $r1 = r0.<com.bumptech.glide.util.ByteArrayPool: java.util.Queue tempQueue>;

        entermonitor $r1;

     label1:
        $r2 = r0.<com.bumptech.glide.util.ByteArrayPool: java.util.Queue tempQueue>;

        interfaceinvoke $r2.<java.util.Queue: void clear()>();

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
    public byte[] getBytes()
    {
        com.bumptech.glide.util.ByteArrayPool r0;
        java.util.Queue $r1, $r2;
        java.lang.Object $r3;
        byte[] r4;
        boolean $z0;
        java.lang.Throwable $r5;

        r0 := @this: com.bumptech.glide.util.ByteArrayPool;

        $r1 = r0.<com.bumptech.glide.util.ByteArrayPool: java.util.Queue tempQueue>;

        entermonitor $r1;

     label1:
        $r2 = r0.<com.bumptech.glide.util.ByteArrayPool: java.util.Queue tempQueue>;

        $r3 = interfaceinvoke $r2.<java.util.Queue: java.lang.Object poll()>();

        r4 = (byte[]) $r3;

        exitmonitor $r1;

     label2:
        if r4 != null goto label6;

        r4 = newarray (byte)[65536];

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("ByteArrayPool", 3);

        if $z0 == 0 goto label6;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ByteArrayPool", "Created temp bytes");

        return r4;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor $r1;

     label5:
        throw $r5;

     label6:
        return r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
    public boolean releaseBytes(byte[])
    {
        com.bumptech.glide.util.ByteArrayPool r0;
        byte[] $r1;
        int $i0;
        boolean z0;
        java.util.Queue $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.bumptech.glide.util.ByteArrayPool;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        if $i0 == 65536 goto label1;

        return 0;

     label1:
        z0 = 0;

        $r2 = r0.<com.bumptech.glide.util.ByteArrayPool: java.util.Queue tempQueue>;

        entermonitor $r2;

     label2:
        $r3 = r0.<com.bumptech.glide.util.ByteArrayPool: java.util.Queue tempQueue>;

        $i0 = interfaceinvoke $r3.<java.util.Queue: int size()>();

        if $i0 >= 32 goto label3;

        z0 = 1;

        $r3 = r0.<com.bumptech.glide.util.ByteArrayPool: java.util.Queue tempQueue>;

        interfaceinvoke $r3.<java.util.Queue: boolean offer(java.lang.Object)>($r1);

     label3:
        exitmonitor $r2;

     label4:
        return z0;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r2;

     label6:
        throw $r4;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }
