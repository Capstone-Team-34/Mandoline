com.bumptech.glide.manager.ConnectivityMonitorFactory extends java.lang.Object
    public void <init>()
    {
        com.bumptech.glide.manager.ConnectivityMonitorFactory r0;

        r0 := @this: com.bumptech.glide.manager.ConnectivityMonitorFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public com.bumptech.glide.manager.ConnectivityMonitor build(android.content.Context, com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener)
    {
        com.bumptech.glide.manager.ConnectivityMonitorFactory r0;
        android.content.Context $r1;
        com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener $r2;
        int $i0;
        boolean z0;
        com.bumptech.glide.manager.DefaultConnectivityMonitor $r3;
        com.bumptech.glide.manager.NullConnectivityMonitor $r4;

        r0 := @this: com.bumptech.glide.manager.ConnectivityMonitorFactory;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener;

        $i0 = virtualinvoke $r1.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.ACCESS_NETWORK_STATE");

        if $i0 != 0 goto label2;

        z0 = 1;

     label1:
        if z0 == 0 goto label3;

        $r3 = new com.bumptech.glide.manager.DefaultConnectivityMonitor;

        specialinvoke $r3.<com.bumptech.glide.manager.DefaultConnectivityMonitor: void <init>(android.content.Context,com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener)>($r1, $r2);

        return $r3;

     label2:
        z0 = 0;

        goto label1;

     label3:
        $r4 = new com.bumptech.glide.manager.NullConnectivityMonitor;

        specialinvoke $r4.<com.bumptech.glide.manager.NullConnectivityMonitor: void <init>()>();

        return $r4;
    }
