com.bumptech.glide.manager.RequestManagerRetriever extends java.lang.Object implements android.os.Handler$Callback
static final java.lang.String FRAGMENT_TAG
private static final int ID_REMOVE_FRAGMENT_MANAGER
private static final int ID_REMOVE_SUPPORT_FRAGMENT_MANAGER
private static final com.bumptech.glide.manager.RequestManagerRetriever INSTANCE
private static final java.lang.String TAG
private volatile com.bumptech.glide.RequestManager applicationManager
private final android.os.Handler handler
final java.util.Map pendingRequestManagerFragments
final java.util.Map pendingSupportRequestManagerFragments
    static void <clinit>()
    {
        com.bumptech.glide.manager.RequestManagerRetriever $r0;

        $r0 = new com.bumptech.glide.manager.RequestManagerRetriever;

        specialinvoke $r0.<com.bumptech.glide.manager.RequestManagerRetriever: void <init>()>();

        <com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerRetriever INSTANCE> = $r0;

        return;
    }
    void <init>()
    {
        com.bumptech.glide.manager.RequestManagerRetriever r0;
        android.os.Looper $r1;
        java.util.HashMap $r2;
        android.os.Handler $r3;

        r0 := @this: com.bumptech.glide.manager.RequestManagerRetriever;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.bumptech.glide.manager.RequestManagerRetriever: java.util.Map pendingRequestManagerFragments> = $r2;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.bumptech.glide.manager.RequestManagerRetriever: java.util.Map pendingSupportRequestManagerFragments> = $r2;

        $r3 = new android.os.Handler;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r3.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>($r1, r0);

        r0.<com.bumptech.glide.manager.RequestManagerRetriever: android.os.Handler handler> = $r3;

        return;
    }
    private static void assertNotDestroyed(android.app.Activity)
    {
        android.app.Activity $r0;
        boolean $z0;
        int $i0;
        java.lang.IllegalArgumentException $r1;

        $r0 := @parameter0: android.app.Activity;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 17 goto label1;

        $z0 = virtualinvoke $r0.<android.app.Activity: boolean isDestroyed()>();

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("You cannot start a load for a destroyed activity");

        throw $r1;

     label1:
        return;
    }
    public static com.bumptech.glide.manager.RequestManagerRetriever get()
    {
        com.bumptech.glide.manager.RequestManagerRetriever r0;

        r0 = <com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerRetriever INSTANCE>;

        return r0;
    }
    private com.bumptech.glide.RequestManager getApplicationManager(android.content.Context)
    {
        com.bumptech.glide.manager.RequestManagerRetriever r0;
        android.content.Context $r1;
        com.bumptech.glide.manager.ApplicationLifecycle $r2;
        com.bumptech.glide.manager.EmptyRequestManagerTreeNode $r3;
        com.bumptech.glide.RequestManager $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.bumptech.glide.manager.RequestManagerRetriever;

        $r1 := @parameter0: android.content.Context;

        $r4 = r0.<com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager applicationManager>;

        if $r4 != null goto label3;

        entermonitor r0;

     label1:
        $r4 = r0.<com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager applicationManager>;

        if $r4 != null goto label2;

        $r4 = new com.bumptech.glide.RequestManager;

        $r1 = virtualinvoke $r1.<android.content.Context: android.content.Context getApplicationContext()>();

        $r2 = new com.bumptech.glide.manager.ApplicationLifecycle;

        specialinvoke $r2.<com.bumptech.glide.manager.ApplicationLifecycle: void <init>()>();

        $r3 = new com.bumptech.glide.manager.EmptyRequestManagerTreeNode;

        specialinvoke $r3.<com.bumptech.glide.manager.EmptyRequestManagerTreeNode: void <init>()>();

        specialinvoke $r4.<com.bumptech.glide.RequestManager: void <init>(android.content.Context,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode)>($r1, $r2, $r3);

        r0.<com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager applicationManager> = $r4;

     label2:
        exitmonitor r0;

     label3:
        $r4 = r0.<com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager applicationManager>;

        return $r4;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
    com.bumptech.glide.RequestManager fragmentGet(android.content.Context, android.app.FragmentManager)
    {
        com.bumptech.glide.manager.RequestManagerRetriever r0;
        android.content.Context $r1;
        android.app.FragmentManager $r2;
        com.bumptech.glide.manager.RequestManagerFragment $r3;
        com.bumptech.glide.RequestManager $r4;
        com.bumptech.glide.manager.ActivityFragmentLifecycle $r5;
        com.bumptech.glide.manager.RequestManagerTreeNode $r6;

        r0 := @this: com.bumptech.glide.manager.RequestManagerRetriever;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.app.FragmentManager;

        $r3 = virtualinvoke r0.<com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)>($r2);

        $r4 = virtualinvoke $r3.<com.bumptech.glide.manager.RequestManagerFragment: com.bumptech.glide.RequestManager getRequestManager()>();

        if $r4 != null goto label1;

        $r4 = new com.bumptech.glide.RequestManager;

        $r5 = virtualinvoke $r3.<com.bumptech.glide.manager.RequestManagerFragment: com.bumptech.glide.manager.ActivityFragmentLifecycle getLifecycle()>();

        $r6 = virtualinvoke $r3.<com.bumptech.glide.manager.RequestManagerFragment: com.bumptech.glide.manager.RequestManagerTreeNode getRequestManagerTreeNode()>();

        specialinvoke $r4.<com.bumptech.glide.RequestManager: void <init>(android.content.Context,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode)>($r1, $r5, $r6);

        virtualinvoke $r3.<com.bumptech.glide.manager.RequestManagerFragment: void setRequestManager(com.bumptech.glide.RequestManager)>($r4);

     label1:
        return $r4;
    }
    public com.bumptech.glide.RequestManager get(android.app.Activity)
    {
        com.bumptech.glide.manager.RequestManagerRetriever r0;
        android.app.Activity $r1;
        boolean $z0;
        int $i0;
        android.content.Context $r2;
        com.bumptech.glide.RequestManager $r3;
        android.app.FragmentManager $r4;

        r0 := @this: com.bumptech.glide.manager.RequestManagerRetriever;

        $r1 := @parameter0: android.app.Activity;

        $z0 = staticinvoke <com.bumptech.glide.util.Util: boolean isOnBackgroundThread()>();

        if $z0 != 0 goto label1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 11 goto label2;

     label1:
        $r2 = virtualinvoke $r1.<android.app.Activity: android.content.Context getApplicationContext()>();

        $r3 = virtualinvoke r0.<com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)>($r2);

        return $r3;

     label2:
        staticinvoke <com.bumptech.glide.manager.RequestManagerRetriever: void assertNotDestroyed(android.app.Activity)>($r1);

        $r4 = virtualinvoke $r1.<android.app.Activity: android.app.FragmentManager getFragmentManager()>();

        $r3 = virtualinvoke r0.<com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)>($r1, $r4);

        return $r3;
    }
    public com.bumptech.glide.RequestManager get(android.app.Fragment)
    {
        com.bumptech.glide.manager.RequestManagerRetriever r0;
        android.app.Fragment $r1;
        android.app.Activity $r2;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;
        int $i0;
        android.content.Context $r4;
        com.bumptech.glide.RequestManager $r5;
        android.app.FragmentManager $r6;

        r0 := @this: com.bumptech.glide.manager.RequestManagerRetriever;

        $r1 := @parameter0: android.app.Fragment;

        $r2 = virtualinvoke $r1.<android.app.Fragment: android.app.Activity getActivity()>();

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("You cannot start a load on a fragment before it is attached");

        throw $r3;

     label1:
        $z0 = staticinvoke <com.bumptech.glide.util.Util: boolean isOnBackgroundThread()>();

        if $z0 != 0 goto label2;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 17 goto label3;

     label2:
        $r2 = virtualinvoke $r1.<android.app.Fragment: android.app.Activity getActivity()>();

        $r4 = virtualinvoke $r2.<android.app.Activity: android.content.Context getApplicationContext()>();

        $r5 = virtualinvoke r0.<com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)>($r4);

        return $r5;

     label3:
        $r6 = virtualinvoke $r1.<android.app.Fragment: android.app.FragmentManager getChildFragmentManager()>();

        $r2 = virtualinvoke $r1.<android.app.Fragment: android.app.Activity getActivity()>();

        $r5 = virtualinvoke r0.<com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)>($r2, $r6);

        return $r5;
    }
    public com.bumptech.glide.RequestManager get(android.content.Context)
    {
        com.bumptech.glide.manager.RequestManagerRetriever r0;
        android.content.Context r1;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;
        android.support.v4.app.FragmentActivity r3;
        com.bumptech.glide.RequestManager $r4;
        android.app.Activity r5;
        android.content.ContextWrapper r6;

        r0 := @this: com.bumptech.glide.manager.RequestManagerRetriever;

        r1 := @parameter0: android.content.Context;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("You cannot start a load on a null Context");

        throw $r2;

     label1:
        $z0 = staticinvoke <com.bumptech.glide.util.Util: boolean isOnMainThread()>();

        if $z0 == 0 goto label4;

        $z0 = r1 instanceof android.app.Application;

        if $z0 != 0 goto label4;

        $z0 = r1 instanceof android.support.v4.app.FragmentActivity;

        if $z0 == 0 goto label2;

        r3 = (android.support.v4.app.FragmentActivity) r1;

        $r4 = virtualinvoke r0.<com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)>(r3);

        return $r4;

     label2:
        $z0 = r1 instanceof android.app.Activity;

        if $z0 == 0 goto label3;

        r5 = (android.app.Activity) r1;

        $r4 = virtualinvoke r0.<com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Activity)>(r5);

        return $r4;

     label3:
        $z0 = r1 instanceof android.content.ContextWrapper;

        if $z0 == 0 goto label4;

        r6 = (android.content.ContextWrapper) r1;

        r1 = virtualinvoke r6.<android.content.ContextWrapper: android.content.Context getBaseContext()>();

        $r4 = virtualinvoke r0.<com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)>(r1);

        return $r4;

     label4:
        $r4 = specialinvoke r0.<com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager getApplicationManager(android.content.Context)>(r1);

        return $r4;
    }
    public com.bumptech.glide.RequestManager get(android.support.v4.app.Fragment)
    {
        com.bumptech.glide.manager.RequestManagerRetriever r0;
        android.support.v4.app.Fragment $r1;
        android.support.v4.app.FragmentActivity $r2;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;
        android.content.Context $r4;
        com.bumptech.glide.RequestManager $r5;
        android.support.v4.app.FragmentManager $r6;

        r0 := @this: com.bumptech.glide.manager.RequestManagerRetriever;

        $r1 := @parameter0: android.support.v4.app.Fragment;

        $r2 = virtualinvoke $r1.<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>();

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("You cannot start a load on a fragment before it is attached");

        throw $r3;

     label1:
        $z0 = staticinvoke <com.bumptech.glide.util.Util: boolean isOnBackgroundThread()>();

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke $r1.<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>();

        $r4 = virtualinvoke $r2.<android.support.v4.app.FragmentActivity: android.content.Context getApplicationContext()>();

        $r5 = virtualinvoke r0.<com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)>($r4);

        return $r5;

     label2:
        $r6 = virtualinvoke $r1.<android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getChildFragmentManager()>();

        $r2 = virtualinvoke $r1.<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>();

        $r5 = virtualinvoke r0.<com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager supportFragmentGet(android.content.Context,android.support.v4.app.FragmentManager)>($r2, $r6);

        return $r5;
    }
    public com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)
    {
        com.bumptech.glide.manager.RequestManagerRetriever r0;
        android.support.v4.app.FragmentActivity $r1;
        boolean $z0;
        android.content.Context $r2;
        com.bumptech.glide.RequestManager $r3;
        android.support.v4.app.FragmentManager $r4;

        r0 := @this: com.bumptech.glide.manager.RequestManagerRetriever;

        $r1 := @parameter0: android.support.v4.app.FragmentActivity;

        $z0 = staticinvoke <com.bumptech.glide.util.Util: boolean isOnBackgroundThread()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r1.<android.support.v4.app.FragmentActivity: android.content.Context getApplicationContext()>();

        $r3 = virtualinvoke r0.<com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)>($r2);

        return $r3;

     label1:
        staticinvoke <com.bumptech.glide.manager.RequestManagerRetriever: void assertNotDestroyed(android.app.Activity)>($r1);

        $r4 = virtualinvoke $r1.<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>();

        $r3 = virtualinvoke r0.<com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager supportFragmentGet(android.content.Context,android.support.v4.app.FragmentManager)>($r1, $r4);

        return $r3;
    }
    com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)
    {
        com.bumptech.glide.manager.RequestManagerRetriever r0;
        android.app.FragmentManager $r1;
        android.app.Fragment $r2;
        com.bumptech.glide.manager.RequestManagerFragment r3;
        java.util.Map $r4;
        java.lang.Object $r5;
        android.app.FragmentTransaction $r6;
        android.os.Handler $r7;
        android.os.Message $r8;

        r0 := @this: com.bumptech.glide.manager.RequestManagerRetriever;

        $r1 := @parameter0: android.app.FragmentManager;

        $r2 = virtualinvoke $r1.<android.app.FragmentManager: android.app.Fragment findFragmentByTag(java.lang.String)>("com.bumptech.glide.manager");

        r3 = (com.bumptech.glide.manager.RequestManagerFragment) $r2;

        if r3 != null goto label1;

        $r4 = r0.<com.bumptech.glide.manager.RequestManagerRetriever: java.util.Map pendingRequestManagerFragments>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r3 = (com.bumptech.glide.manager.RequestManagerFragment) $r5;

        if r3 != null goto label1;

        r3 = new com.bumptech.glide.manager.RequestManagerFragment;

        specialinvoke r3.<com.bumptech.glide.manager.RequestManagerFragment: void <init>()>();

        $r4 = r0.<com.bumptech.glide.manager.RequestManagerRetriever: java.util.Map pendingRequestManagerFragments>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r3);

        $r6 = virtualinvoke $r1.<android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()>();

        $r6 = virtualinvoke $r6.<android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)>(r3, "com.bumptech.glide.manager");

        virtualinvoke $r6.<android.app.FragmentTransaction: int commitAllowingStateLoss()>();

        $r7 = r0.<com.bumptech.glide.manager.RequestManagerRetriever: android.os.Handler handler>;

        $r8 = virtualinvoke $r7.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1, $r1);

        virtualinvoke $r8.<android.os.Message: void sendToTarget()>();

     label1:
        return r3;
    }
    com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)
    {
        com.bumptech.glide.manager.RequestManagerRetriever r0;
        android.support.v4.app.FragmentManager $r1;
        android.support.v4.app.Fragment $r2;
        com.bumptech.glide.manager.SupportRequestManagerFragment r3;
        java.util.Map $r4;
        java.lang.Object $r5;
        android.support.v4.app.FragmentTransaction $r6;
        android.os.Handler $r7;
        android.os.Message $r8;

        r0 := @this: com.bumptech.glide.manager.RequestManagerRetriever;

        $r1 := @parameter0: android.support.v4.app.FragmentManager;

        $r2 = virtualinvoke $r1.<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentByTag(java.lang.String)>("com.bumptech.glide.manager");

        r3 = (com.bumptech.glide.manager.SupportRequestManagerFragment) $r2;

        if r3 != null goto label1;

        $r4 = r0.<com.bumptech.glide.manager.RequestManagerRetriever: java.util.Map pendingSupportRequestManagerFragments>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r3 = (com.bumptech.glide.manager.SupportRequestManagerFragment) $r5;

        if r3 != null goto label1;

        r3 = new com.bumptech.glide.manager.SupportRequestManagerFragment;

        specialinvoke r3.<com.bumptech.glide.manager.SupportRequestManagerFragment: void <init>()>();

        $r4 = r0.<com.bumptech.glide.manager.RequestManagerRetriever: java.util.Map pendingSupportRequestManagerFragments>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r3);

        $r6 = virtualinvoke $r1.<android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()>();

        $r6 = virtualinvoke $r6.<android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)>(r3, "com.bumptech.glide.manager");

        virtualinvoke $r6.<android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()>();

        $r7 = r0.<com.bumptech.glide.manager.RequestManagerRetriever: android.os.Handler handler>;

        $r8 = virtualinvoke $r7.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(2, $r1);

        virtualinvoke $r8.<android.os.Message: void sendToTarget()>();

     label1:
        return r3;
    }
    public boolean handleMessage(android.os.Message)
    {
        com.bumptech.glide.manager.RequestManagerRetriever r0;
        android.os.Message $r1;
        boolean z0, $z1;
        java.lang.Object r2, r3;
        int $i0;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        android.app.FragmentManager r6;
        java.util.Map $r7;
        android.support.v4.app.FragmentManager r8;

        r0 := @this: com.bumptech.glide.manager.RequestManagerRetriever;

        $r1 := @parameter0: android.os.Message;

        z0 = 1;

        r2 = null;

        r3 = null;

        $i0 = $r1.<android.os.Message: int what>;

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label4;
            default: goto label1;
        };

     label1:
        z0 = 0;

     label2:
        if z0 == 0 goto label5;

        if r2 != null goto label5;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("RMRetriever", 5);

        if $z1 == 0 goto label5;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to remove expected request manager fragment, manager: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RMRetriever", $r5);

        return z0;

     label3:
        r3 = $r1.<android.os.Message: java.lang.Object obj>;

        r6 = (android.app.FragmentManager) r3;

        r3 = r6;

        $r7 = r0.<com.bumptech.glide.manager.RequestManagerRetriever: java.util.Map pendingRequestManagerFragments>;

        r2 = interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r6);

        goto label2;

     label4:
        r3 = $r1.<android.os.Message: java.lang.Object obj>;

        r8 = (android.support.v4.app.FragmentManager) r3;

        r3 = r8;

        $r7 = r0.<com.bumptech.glide.manager.RequestManagerRetriever: java.util.Map pendingSupportRequestManagerFragments>;

        r2 = interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r8);

        goto label2;

     label5:
        return z0;
    }
    com.bumptech.glide.RequestManager supportFragmentGet(android.content.Context, android.support.v4.app.FragmentManager)
    {
        com.bumptech.glide.manager.RequestManagerRetriever r0;
        android.content.Context $r1;
        android.support.v4.app.FragmentManager $r2;
        com.bumptech.glide.manager.SupportRequestManagerFragment $r3;
        com.bumptech.glide.RequestManager $r4;
        com.bumptech.glide.manager.ActivityFragmentLifecycle $r5;
        com.bumptech.glide.manager.RequestManagerTreeNode $r6;

        r0 := @this: com.bumptech.glide.manager.RequestManagerRetriever;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.support.v4.app.FragmentManager;

        $r3 = virtualinvoke r0.<com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)>($r2);

        $r4 = virtualinvoke $r3.<com.bumptech.glide.manager.SupportRequestManagerFragment: com.bumptech.glide.RequestManager getRequestManager()>();

        if $r4 != null goto label1;

        $r4 = new com.bumptech.glide.RequestManager;

        $r5 = virtualinvoke $r3.<com.bumptech.glide.manager.SupportRequestManagerFragment: com.bumptech.glide.manager.ActivityFragmentLifecycle getLifecycle()>();

        $r6 = virtualinvoke $r3.<com.bumptech.glide.manager.SupportRequestManagerFragment: com.bumptech.glide.manager.RequestManagerTreeNode getRequestManagerTreeNode()>();

        specialinvoke $r4.<com.bumptech.glide.RequestManager: void <init>(android.content.Context,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode)>($r1, $r5, $r6);

        virtualinvoke $r3.<com.bumptech.glide.manager.SupportRequestManagerFragment: void setRequestManager(com.bumptech.glide.RequestManager)>($r4);

     label1:
        return $r4;
    }
