com.bumptech.glide.request.target.ViewTarget extends com.bumptech.glide.request.target.BaseTarget
private static final java.lang.String TAG
private static boolean isTagUsedAtLeastOnce
private static java.lang.Integer tagId
private final com.bumptech.glide.request.target.ViewTarget$SizeDeterminer sizeDeterminer
protected final android.view.View view
    static void <clinit>()
    {
        <com.bumptech.glide.request.target.ViewTarget: boolean isTagUsedAtLeastOnce> = 0;

        <com.bumptech.glide.request.target.ViewTarget: java.lang.Integer tagId> = null;

        return;
    }
    public void <init>(android.view.View)
    {
        com.bumptech.glide.request.target.ViewTarget r0;
        android.view.View r1;
        java.lang.NullPointerException $r2;
        com.bumptech.glide.request.target.ViewTarget$SizeDeterminer $r3;

        r0 := @this: com.bumptech.glide.request.target.ViewTarget;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<com.bumptech.glide.request.target.BaseTarget: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("View must not be null!");

        throw $r2;

     label1:
        r0.<com.bumptech.glide.request.target.ViewTarget: android.view.View view> = r1;

        $r3 = new com.bumptech.glide.request.target.ViewTarget$SizeDeterminer;

        specialinvoke $r3.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: void <init>(android.view.View)>(r1);

        r0.<com.bumptech.glide.request.target.ViewTarget: com.bumptech.glide.request.target.ViewTarget$SizeDeterminer sizeDeterminer> = $r3;

        return;
    }
    private java.lang.Object getTag()
    {
        com.bumptech.glide.request.target.ViewTarget r0;
        java.lang.Integer $r1;
        android.view.View $r2;
        java.lang.Object $r3;
        int $i0;

        r0 := @this: com.bumptech.glide.request.target.ViewTarget;

        $r1 = <com.bumptech.glide.request.target.ViewTarget: java.lang.Integer tagId>;

        if $r1 != null goto label1;

        $r2 = r0.<com.bumptech.glide.request.target.ViewTarget: android.view.View view>;

        $r3 = virtualinvoke $r2.<android.view.View: java.lang.Object getTag()>();

        return $r3;

     label1:
        $r2 = r0.<com.bumptech.glide.request.target.ViewTarget: android.view.View view>;

        $r1 = <com.bumptech.glide.request.target.ViewTarget: java.lang.Integer tagId>;

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        $r3 = virtualinvoke $r2.<android.view.View: java.lang.Object getTag(int)>($i0);

        return $r3;
    }
    private void setTag(java.lang.Object)
    {
        com.bumptech.glide.request.target.ViewTarget r0;
        java.lang.Object $r1;
        int $i0;
        java.lang.Integer $r2;
        android.view.View $r3;

        r0 := @this: com.bumptech.glide.request.target.ViewTarget;

        $r1 := @parameter0: java.lang.Object;

        $r2 = <com.bumptech.glide.request.target.ViewTarget: java.lang.Integer tagId>;

        if $r2 != null goto label1;

        <com.bumptech.glide.request.target.ViewTarget: boolean isTagUsedAtLeastOnce> = 1;

        $r3 = r0.<com.bumptech.glide.request.target.ViewTarget: android.view.View view>;

        virtualinvoke $r3.<android.view.View: void setTag(java.lang.Object)>($r1);

        return;

     label1:
        $r3 = r0.<com.bumptech.glide.request.target.ViewTarget: android.view.View view>;

        $r2 = <com.bumptech.glide.request.target.ViewTarget: java.lang.Integer tagId>;

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        virtualinvoke $r3.<android.view.View: void setTag(int,java.lang.Object)>($i0, $r1);

        return;
    }
    public static void setTagId(int)
    {
        int $i0;
        java.lang.Integer $r0;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;

        $i0 := @parameter0: int;

        $r0 = <com.bumptech.glide.request.target.ViewTarget: java.lang.Integer tagId>;

        if $r0 != null goto label1;

        $z0 = <com.bumptech.glide.request.target.ViewTarget: boolean isTagUsedAtLeastOnce>;

        if $z0 == 0 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("You cannot set the tag id more than once or change the tag id after the first request has been made");

        throw $r1;

     label2:
        $r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        <com.bumptech.glide.request.target.ViewTarget: java.lang.Integer tagId> = $r0;

        return;
    }
    public com.bumptech.glide.request.Request getRequest()
    {
        com.bumptech.glide.request.target.ViewTarget r0;
        java.lang.Object $r1;
        boolean $z0;
        com.bumptech.glide.request.Request r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: com.bumptech.glide.request.target.ViewTarget;

        $r1 = specialinvoke r0.<com.bumptech.glide.request.target.ViewTarget: java.lang.Object getTag()>();

        if $r1 == null goto label2;

        $z0 = $r1 instanceof com.bumptech.glide.request.Request;

        if $z0 == 0 goto label1;

        r2 = (com.bumptech.glide.request.Request) $r1;

        return r2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("You must not call setTag() on a view Glide is targeting");

        throw $r3;

     label2:
        return null;
    }
    public void getSize(com.bumptech.glide.request.target.SizeReadyCallback)
    {
        com.bumptech.glide.request.target.ViewTarget r0;
        com.bumptech.glide.request.target.SizeReadyCallback $r1;
        com.bumptech.glide.request.target.ViewTarget$SizeDeterminer $r2;

        r0 := @this: com.bumptech.glide.request.target.ViewTarget;

        $r1 := @parameter0: com.bumptech.glide.request.target.SizeReadyCallback;

        $r2 = r0.<com.bumptech.glide.request.target.ViewTarget: com.bumptech.glide.request.target.ViewTarget$SizeDeterminer sizeDeterminer>;

        virtualinvoke $r2.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: void getSize(com.bumptech.glide.request.target.SizeReadyCallback)>($r1);

        return;
    }
    public android.view.View getView()
    {
        com.bumptech.glide.request.target.ViewTarget r0;
        android.view.View r1;

        r0 := @this: com.bumptech.glide.request.target.ViewTarget;

        r1 = r0.<com.bumptech.glide.request.target.ViewTarget: android.view.View view>;

        return r1;
    }
    public void setRequest(com.bumptech.glide.request.Request)
    {
        com.bumptech.glide.request.target.ViewTarget r0;
        com.bumptech.glide.request.Request $r1;

        r0 := @this: com.bumptech.glide.request.target.ViewTarget;

        $r1 := @parameter0: com.bumptech.glide.request.Request;

        specialinvoke r0.<com.bumptech.glide.request.target.ViewTarget: void setTag(java.lang.Object)>($r1);

        return;
    }
    public java.lang.String toString()
    {
        com.bumptech.glide.request.target.ViewTarget r0;
        java.lang.StringBuilder $r1;
        android.view.View $r2;
        java.lang.String $r3;

        r0 := @this: com.bumptech.glide.request.target.ViewTarget;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Target for: ");

        $r2 = r0.<com.bumptech.glide.request.target.ViewTarget: android.view.View view>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
