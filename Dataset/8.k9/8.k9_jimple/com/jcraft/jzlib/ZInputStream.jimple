com.jcraft.jzlib.ZInputStream extends java.io.FilterInputStream
protected byte[] buf
protected byte[] buf1
protected int bufsize
protected boolean compress
protected int flush
protected java.io.InputStream in
private boolean nomoreinput
protected com.jcraft.jzlib.ZStream z
    public void <init>(java.io.InputStream)
    {
        com.jcraft.jzlib.ZInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: com.jcraft.jzlib.ZInputStream;

        $r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<com.jcraft.jzlib.ZInputStream: void <init>(java.io.InputStream,boolean)>($r1, 0);

        return;
    }
    public void <init>(java.io.InputStream, int)
    {
        com.jcraft.jzlib.ZInputStream r0;
        java.io.InputStream $r1;
        int $i0, $i1;
        com.jcraft.jzlib.ZStream $r2;
        byte[] $r3;

        r0 := @this: com.jcraft.jzlib.ZInputStream;

        $r1 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>($r1);

        $r2 = new com.jcraft.jzlib.ZStream;

        specialinvoke $r2.<com.jcraft.jzlib.ZStream: void <init>()>();

        r0.<com.jcraft.jzlib.ZInputStream: com.jcraft.jzlib.ZStream z> = $r2;

        r0.<com.jcraft.jzlib.ZInputStream: int bufsize> = 512;

        r0.<com.jcraft.jzlib.ZInputStream: int flush> = 0;

        $i1 = r0.<com.jcraft.jzlib.ZInputStream: int bufsize>;

        $r3 = newarray (byte)[$i1];

        r0.<com.jcraft.jzlib.ZInputStream: byte[] buf> = $r3;

        $r3 = newarray (byte)[1];

        r0.<com.jcraft.jzlib.ZInputStream: byte[] buf1> = $r3;

        r0.<com.jcraft.jzlib.ZInputStream: java.io.InputStream in> = null;

        r0.<com.jcraft.jzlib.ZInputStream: boolean nomoreinput> = 0;

        r0.<com.jcraft.jzlib.ZInputStream: java.io.InputStream in> = $r1;

        $r2 = r0.<com.jcraft.jzlib.ZInputStream: com.jcraft.jzlib.ZStream z>;

        virtualinvoke $r2.<com.jcraft.jzlib.ZStream: int deflateInit(int)>($i0);

        r0.<com.jcraft.jzlib.ZInputStream: boolean compress> = 1;

        $r2 = r0.<com.jcraft.jzlib.ZInputStream: com.jcraft.jzlib.ZStream z>;

        $r3 = r0.<com.jcraft.jzlib.ZInputStream: byte[] buf>;

        $r2.<com.jcraft.jzlib.ZStream: byte[] next_in> = $r3;

        $r2 = r0.<com.jcraft.jzlib.ZInputStream: com.jcraft.jzlib.ZStream z>;

        $r2.<com.jcraft.jzlib.ZStream: int next_in_index> = 0;

        $r2 = r0.<com.jcraft.jzlib.ZInputStream: com.jcraft.jzlib.ZStream z>;

        $r2.<com.jcraft.jzlib.ZStream: int avail_in> = 0;

        return;
    }
    public void <init>(java.io.InputStream, boolean)
    {
        com.jcraft.jzlib.ZInputStream r0;
        java.io.InputStream $r1;
        boolean $z0;
        byte[] $r2;
        com.jcraft.jzlib.ZStream $r3;
        int $i0;

        r0 := @this: com.jcraft.jzlib.ZInputStream;

        $r1 := @parameter0: java.io.InputStream;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>($r1);

        $r3 = new com.jcraft.jzlib.ZStream;

        specialinvoke $r3.<com.jcraft.jzlib.ZStream: void <init>()>();

        r0.<com.jcraft.jzlib.ZInputStream: com.jcraft.jzlib.ZStream z> = $r3;

        r0.<com.jcraft.jzlib.ZInputStream: int bufsize> = 512;

        r0.<com.jcraft.jzlib.ZInputStream: int flush> = 0;

        $i0 = r0.<com.jcraft.jzlib.ZInputStream: int bufsize>;

        $r2 = newarray (byte)[$i0];

        r0.<com.jcraft.jzlib.ZInputStream: byte[] buf> = $r2;

        $r2 = newarray (byte)[1];

        r0.<com.jcraft.jzlib.ZInputStream: byte[] buf1> = $r2;

        r0.<com.jcraft.jzlib.ZInputStream: java.io.InputStream in> = null;

        r0.<com.jcraft.jzlib.ZInputStream: boolean nomoreinput> = 0;

        r0.<com.jcraft.jzlib.ZInputStream: java.io.InputStream in> = $r1;

        $r3 = r0.<com.jcraft.jzlib.ZInputStream: com.jcraft.jzlib.ZStream z>;

        virtualinvoke $r3.<com.jcraft.jzlib.ZStream: int inflateInit(boolean)>($z0);

        r0.<com.jcraft.jzlib.ZInputStream: boolean compress> = 0;

        $r3 = r0.<com.jcraft.jzlib.ZInputStream: com.jcraft.jzlib.ZStream z>;

        $r2 = r0.<com.jcraft.jzlib.ZInputStream: byte[] buf>;

        $r3.<com.jcraft.jzlib.ZStream: byte[] next_in> = $r2;

        $r3 = r0.<com.jcraft.jzlib.ZInputStream: com.jcraft.jzlib.ZStream z>;

        $r3.<com.jcraft.jzlib.ZStream: int next_in_index> = 0;

        $r3 = r0.<com.jcraft.jzlib.ZInputStream: com.jcraft.jzlib.ZStream z>;

        $r3.<com.jcraft.jzlib.ZStream: int avail_in> = 0;

        return;
    }
    public void close() throws java.io.IOException
    {
        com.jcraft.jzlib.ZInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: com.jcraft.jzlib.ZInputStream;

        $r1 = r0.<com.jcraft.jzlib.ZInputStream: java.io.InputStream in>;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        return;
    }
    public int getFlushMode()
    {
        com.jcraft.jzlib.ZInputStream r0;
        int i0;

        r0 := @this: com.jcraft.jzlib.ZInputStream;

        i0 = r0.<com.jcraft.jzlib.ZInputStream: int flush>;

        return i0;
    }
    public long getTotalIn()
    {
        com.jcraft.jzlib.ZInputStream r0;
        com.jcraft.jzlib.ZStream $r1;
        long l0;

        r0 := @this: com.jcraft.jzlib.ZInputStream;

        $r1 = r0.<com.jcraft.jzlib.ZInputStream: com.jcraft.jzlib.ZStream z>;

        l0 = $r1.<com.jcraft.jzlib.ZStream: long total_in>;

        return l0;
    }
    public long getTotalOut()
    {
        com.jcraft.jzlib.ZInputStream r0;
        com.jcraft.jzlib.ZStream $r1;
        long l0;

        r0 := @this: com.jcraft.jzlib.ZInputStream;

        $r1 = r0.<com.jcraft.jzlib.ZInputStream: com.jcraft.jzlib.ZStream z>;

        l0 = $r1.<com.jcraft.jzlib.ZStream: long total_out>;

        return l0;
    }
    public int read() throws java.io.IOException
    {
        com.jcraft.jzlib.ZInputStream r0;
        int $i0;
        byte[] $r1;
        byte $b1;

        r0 := @this: com.jcraft.jzlib.ZInputStream;

        $r1 = r0.<com.jcraft.jzlib.ZInputStream: byte[] buf1>;

        $i0 = virtualinvoke r0.<com.jcraft.jzlib.ZInputStream: int read(byte[],int,int)>($r1, 0, 1);

        if $i0 != -1 goto label1;

        return -1;

     label1:
        $r1 = r0.<com.jcraft.jzlib.ZInputStream: byte[] buf1>;

        $b1 = $r1[0];

        $i0 = $b1 & 255;

        return $i0;
    }
    public int read(byte[], int, int) throws java.io.IOException
    {
        com.jcraft.jzlib.ZInputStream r0;
        byte[] $r1;
        int $i0, $i1, $i2;
        com.jcraft.jzlib.ZStream $r2;
        boolean $z0;
        java.io.InputStream $r3;
        com.jcraft.jzlib.ZStreamException $r4;
        java.lang.StringBuffer $r5;
        java.lang.String $r6;

        r0 := @this: com.jcraft.jzlib.ZInputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $i1 != 0 goto label01;

        return 0;

     label01:
        $r2 = r0.<com.jcraft.jzlib.ZInputStream: com.jcraft.jzlib.ZStream z>;

        $r2.<com.jcraft.jzlib.ZStream: byte[] next_out> = $r1;

        $r2 = r0.<com.jcraft.jzlib.ZInputStream: com.jcraft.jzlib.ZStream z>;

        $r2.<com.jcraft.jzlib.ZStream: int next_out_index> = $i0;

        $r2 = r0.<com.jcraft.jzlib.ZInputStream: com.jcraft.jzlib.ZStream z>;

        $r2.<com.jcraft.jzlib.ZStream: int avail_out> = $i1;

     label02:
        $r2 = r0.<com.jcraft.jzlib.ZInputStream: com.jcraft.jzlib.ZStream z>;

        $i0 = $r2.<com.jcraft.jzlib.ZStream: int avail_in>;

        if $i0 != 0 goto label03;

        $z0 = r0.<com.jcraft.jzlib.ZInputStream: boolean nomoreinput>;

        if $z0 != 0 goto label03;

        $r2 = r0.<com.jcraft.jzlib.ZInputStream: com.jcraft.jzlib.ZStream z>;

        $r2.<com.jcraft.jzlib.ZStream: int next_in_index> = 0;

        $r2 = r0.<com.jcraft.jzlib.ZInputStream: com.jcraft.jzlib.ZStream z>;

        $r3 = r0.<com.jcraft.jzlib.ZInputStream: java.io.InputStream in>;

        $r1 = r0.<com.jcraft.jzlib.ZInputStream: byte[] buf>;

        $i0 = r0.<com.jcraft.jzlib.ZInputStream: int bufsize>;

        $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, $i0);

        $r2.<com.jcraft.jzlib.ZStream: int avail_in> = $i0;

        $r2 = r0.<com.jcraft.jzlib.ZInputStream: com.jcraft.jzlib.ZStream z>;

        $i0 = $r2.<com.jcraft.jzlib.ZStream: int avail_in>;

        if $i0 != -1 goto label03;

        $r2 = r0.<com.jcraft.jzlib.ZInputStream: com.jcraft.jzlib.ZStream z>;

        $r2.<com.jcraft.jzlib.ZStream: int avail_in> = 0;

        r0.<com.jcraft.jzlib.ZInputStream: boolean nomoreinput> = 1;

     label03:
        $z0 = r0.<com.jcraft.jzlib.ZInputStream: boolean compress>;

        if $z0 == 0 goto label05;

        $r2 = r0.<com.jcraft.jzlib.ZInputStream: com.jcraft.jzlib.ZStream z>;

        $i0 = r0.<com.jcraft.jzlib.ZInputStream: int flush>;

        $i0 = virtualinvoke $r2.<com.jcraft.jzlib.ZStream: int deflate(int)>($i0);

     label04:
        $z0 = r0.<com.jcraft.jzlib.ZInputStream: boolean nomoreinput>;

        if $z0 == 0 goto label06;

        if $i0 != -5 goto label06;

        return -1;

     label05:
        $r2 = r0.<com.jcraft.jzlib.ZInputStream: com.jcraft.jzlib.ZStream z>;

        $i0 = r0.<com.jcraft.jzlib.ZInputStream: int flush>;

        $i0 = virtualinvoke $r2.<com.jcraft.jzlib.ZStream: int inflate(int)>($i0);

        goto label04;

     label06:
        if $i0 == 0 goto label09;

        if $i0 == 1 goto label09;

        $r4 = new com.jcraft.jzlib.ZStreamException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $z0 = r0.<com.jcraft.jzlib.ZInputStream: boolean compress>;

        if $z0 == 0 goto label08;

        $r6 = "de";

     label07:
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("flating: ");

        $r2 = r0.<com.jcraft.jzlib.ZInputStream: com.jcraft.jzlib.ZStream z>;

        $r6 = $r2.<com.jcraft.jzlib.ZStream: java.lang.String msg>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<com.jcraft.jzlib.ZStreamException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label08:
        $r6 = "in";

        goto label07;

     label09:
        $z0 = r0.<com.jcraft.jzlib.ZInputStream: boolean nomoreinput>;

        if $z0 != 0 goto label10;

        if $i0 != 1 goto label11;

     label10:
        $r2 = r0.<com.jcraft.jzlib.ZInputStream: com.jcraft.jzlib.ZStream z>;

        $i2 = $r2.<com.jcraft.jzlib.ZStream: int avail_out>;

        if $i2 != $i1 goto label11;

        return -1;

     label11:
        $r2 = r0.<com.jcraft.jzlib.ZInputStream: com.jcraft.jzlib.ZStream z>;

        $i2 = $r2.<com.jcraft.jzlib.ZStream: int avail_out>;

        if $i2 != $i1 goto label12;

        if $i0 == 0 goto label02;

     label12:
        $r2 = r0.<com.jcraft.jzlib.ZInputStream: com.jcraft.jzlib.ZStream z>;

        $i0 = $r2.<com.jcraft.jzlib.ZStream: int avail_out>;

        $i0 = $i1 - $i0;

        return $i0;
    }
    public void setFlushMode(int)
    {
        com.jcraft.jzlib.ZInputStream r0;
        int $i0;

        r0 := @this: com.jcraft.jzlib.ZInputStream;

        $i0 := @parameter0: int;

        r0.<com.jcraft.jzlib.ZInputStream: int flush> = $i0;

        return;
    }
    public long skip(long) throws java.io.IOException
    {
        com.jcraft.jzlib.ZInputStream r0;
        long $l0, $l2;
        byte[] r1;
        int $i1;
        byte $b3;

        r0 := @this: com.jcraft.jzlib.ZInputStream;

        $l0 := @parameter0: long;

        $i1 = 512;

        $l2 = (long) 512;

        $b3 = $l0 cmp $l2;

        if $b3 >= 0 goto label1;

        $i1 = (int) $l0;

     label1:
        r1 = newarray (byte)[$i1];

        $i1 = virtualinvoke r0.<java.io.FilterInputStream: int read(byte[])>(r1);

        $l0 = (long) $i1;

        return $l0;
    }
