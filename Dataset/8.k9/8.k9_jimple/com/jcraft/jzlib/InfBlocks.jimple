com.jcraft.jzlib.InfBlocks extends java.lang.Object
private static final int BAD
private static final int BTREE
private static final int CODES
private static final int DONE
private static final int DRY
private static final int DTREE
private static final int LENS
private static final int MANY
private static final int STORED
private static final int TABLE
private static final int TYPE
private static final int Z_BUF_ERROR
private static final int Z_DATA_ERROR
private static final int Z_ERRNO
private static final int Z_MEM_ERROR
private static final int Z_NEED_DICT
private static final int Z_OK
private static final int Z_STREAM_END
private static final int Z_STREAM_ERROR
private static final int Z_VERSION_ERROR
static final int[] border
private static final int[] inflate_mask
int[] bb
int bitb
int bitk
int[] blens
long check
java.lang.Object checkfn
com.jcraft.jzlib.InfCodes codes
int end
int[] hufts
int index
com.jcraft.jzlib.InfTree inftree
int last
int left
int mode
int read
int table
int[] tb
byte[] window
int write
    static void <clinit>()
    {
        int[] $r0;

        $r0 = newarray (int)[17];

        $r0[0] = 0;

        $r0[1] = 1;

        $r0[2] = 3;

        $r0[3] = 7;

        $r0[4] = 15;

        $r0[5] = 31;

        $r0[6] = 63;

        $r0[7] = 127;

        $r0[8] = 255;

        $r0[9] = 511;

        $r0[10] = 1023;

        $r0[11] = 2047;

        $r0[12] = 4095;

        $r0[13] = 8191;

        $r0[14] = 16383;

        $r0[15] = 32767;

        $r0[16] = 65535;

        <com.jcraft.jzlib.InfBlocks: int[] inflate_mask> = $r0;

        $r0 = newarray (int)[19];

        $r0[0] = 16;

        $r0[1] = 17;

        $r0[2] = 18;

        $r0[3] = 0;

        $r0[4] = 8;

        $r0[5] = 7;

        $r0[6] = 9;

        $r0[7] = 6;

        $r0[8] = 10;

        $r0[9] = 5;

        $r0[10] = 11;

        $r0[11] = 4;

        $r0[12] = 12;

        $r0[13] = 3;

        $r0[14] = 13;

        $r0[15] = 2;

        $r0[16] = 14;

        $r0[17] = 1;

        $r0[18] = 15;

        <com.jcraft.jzlib.InfBlocks: int[] border> = $r0;

        return;
    }
    void <init>(com.jcraft.jzlib.ZStream, java.lang.Object, int)
    {
        com.jcraft.jzlib.InfBlocks r0;
        com.jcraft.jzlib.ZStream $r1;
        java.lang.Object $r2;
        int $i0;
        int[] $r3;
        com.jcraft.jzlib.InfCodes $r4;
        com.jcraft.jzlib.InfTree $r5;
        byte[] $r6;

        r0 := @this: com.jcraft.jzlib.InfBlocks;

        $r1 := @parameter0: com.jcraft.jzlib.ZStream;

        $r2 := @parameter1: java.lang.Object;

        $i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = newarray (int)[1];

        r0.<com.jcraft.jzlib.InfBlocks: int[] bb> = $r3;

        $r3 = newarray (int)[1];

        r0.<com.jcraft.jzlib.InfBlocks: int[] tb> = $r3;

        $r4 = new com.jcraft.jzlib.InfCodes;

        specialinvoke $r4.<com.jcraft.jzlib.InfCodes: void <init>()>();

        r0.<com.jcraft.jzlib.InfBlocks: com.jcraft.jzlib.InfCodes codes> = $r4;

        $r5 = new com.jcraft.jzlib.InfTree;

        specialinvoke $r5.<com.jcraft.jzlib.InfTree: void <init>()>();

        r0.<com.jcraft.jzlib.InfBlocks: com.jcraft.jzlib.InfTree inftree> = $r5;

        $r3 = newarray (int)[4320];

        r0.<com.jcraft.jzlib.InfBlocks: int[] hufts> = $r3;

        $r6 = newarray (byte)[$i0];

        r0.<com.jcraft.jzlib.InfBlocks: byte[] window> = $r6;

        r0.<com.jcraft.jzlib.InfBlocks: int end> = $i0;

        r0.<com.jcraft.jzlib.InfBlocks: java.lang.Object checkfn> = $r2;

        r0.<com.jcraft.jzlib.InfBlocks: int mode> = 0;

        virtualinvoke r0.<com.jcraft.jzlib.InfBlocks: void reset(com.jcraft.jzlib.ZStream,long[])>($r1, null);

        return;
    }
    void free(com.jcraft.jzlib.ZStream)
    {
        com.jcraft.jzlib.InfBlocks r0;
        com.jcraft.jzlib.ZStream $r1;

        r0 := @this: com.jcraft.jzlib.InfBlocks;

        $r1 := @parameter0: com.jcraft.jzlib.ZStream;

        virtualinvoke r0.<com.jcraft.jzlib.InfBlocks: void reset(com.jcraft.jzlib.ZStream,long[])>($r1, null);

        r0.<com.jcraft.jzlib.InfBlocks: byte[] window> = null;

        r0.<com.jcraft.jzlib.InfBlocks: int[] hufts> = null;

        return;
    }
    int inflate_flush(com.jcraft.jzlib.ZStream, int)
    {
        com.jcraft.jzlib.InfBlocks r0;
        com.jcraft.jzlib.ZStream $r1;
        int $i0, i1, i2, $i3, $i4;
        long $l5, $l6;
        java.lang.Object $r2;
        com.jcraft.jzlib.Adler32 $r3;
        byte[] $r4, $r5;

        r0 := @this: com.jcraft.jzlib.InfBlocks;

        $r1 := @parameter0: com.jcraft.jzlib.ZStream;

        $i0 := @parameter1: int;

        i1 = $r1.<com.jcraft.jzlib.ZStream: int next_out_index>;

        i2 = r0.<com.jcraft.jzlib.InfBlocks: int read>;

        $i3 = r0.<com.jcraft.jzlib.InfBlocks: int write>;

        if i2 > $i3 goto label10;

        $i3 = r0.<com.jcraft.jzlib.InfBlocks: int write>;

     label01:
        $i3 = $i3 - i2;

        $i4 = $r1.<com.jcraft.jzlib.ZStream: int avail_out>;

        if $i3 <= $i4 goto label02;

        $i3 = $r1.<com.jcraft.jzlib.ZStream: int avail_out>;

     label02:
        if $i3 == 0 goto label03;

        if $i0 != -5 goto label03;

        $i0 = 0;

     label03:
        $i4 = $r1.<com.jcraft.jzlib.ZStream: int avail_out>;

        $i4 = $i4 - $i3;

        $r1.<com.jcraft.jzlib.ZStream: int avail_out> = $i4;

        $l5 = $r1.<com.jcraft.jzlib.ZStream: long total_out>;

        $l6 = (long) $i3;

        $l5 = $l5 + $l6;

        $r1.<com.jcraft.jzlib.ZStream: long total_out> = $l5;

        $r2 = r0.<com.jcraft.jzlib.InfBlocks: java.lang.Object checkfn>;

        if $r2 == null goto label04;

        $r3 = $r1.<com.jcraft.jzlib.ZStream: com.jcraft.jzlib.Adler32 _adler>;

        $l5 = r0.<com.jcraft.jzlib.InfBlocks: long check>;

        $r4 = r0.<com.jcraft.jzlib.InfBlocks: byte[] window>;

        $l5 = virtualinvoke $r3.<com.jcraft.jzlib.Adler32: long adler32(long,byte[],int,int)>($l5, $r4, i2, $i3);

        r0.<com.jcraft.jzlib.InfBlocks: long check> = $l5;

        $r1.<com.jcraft.jzlib.ZStream: long adler> = $l5;

     label04:
        $r4 = r0.<com.jcraft.jzlib.InfBlocks: byte[] window>;

        $r5 = $r1.<com.jcraft.jzlib.ZStream: byte[] next_out>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, i2, $r5, i1, $i3);

        i1 = i1 + $i3;

        i2 = i2 + $i3;

        $i3 = r0.<com.jcraft.jzlib.InfBlocks: int end>;

        if i2 != $i3 goto label09;

        i2 = r0.<com.jcraft.jzlib.InfBlocks: int write>;

        $i3 = r0.<com.jcraft.jzlib.InfBlocks: int end>;

        if i2 != $i3 goto label05;

        r0.<com.jcraft.jzlib.InfBlocks: int write> = 0;

     label05:
        i2 = r0.<com.jcraft.jzlib.InfBlocks: int write>;

        $i3 = $r1.<com.jcraft.jzlib.ZStream: int avail_out>;

        if i2 <= $i3 goto label06;

        i2 = $r1.<com.jcraft.jzlib.ZStream: int avail_out>;

     label06:
        if i2 == 0 goto label07;

        if $i0 != -5 goto label07;

        $i0 = 0;

     label07:
        $i3 = $r1.<com.jcraft.jzlib.ZStream: int avail_out>;

        $i3 = $i3 - i2;

        $r1.<com.jcraft.jzlib.ZStream: int avail_out> = $i3;

        $l5 = $r1.<com.jcraft.jzlib.ZStream: long total_out>;

        $l6 = (long) i2;

        $l5 = $l5 + $l6;

        $r1.<com.jcraft.jzlib.ZStream: long total_out> = $l5;

        $r2 = r0.<com.jcraft.jzlib.InfBlocks: java.lang.Object checkfn>;

        if $r2 == null goto label08;

        $r3 = $r1.<com.jcraft.jzlib.ZStream: com.jcraft.jzlib.Adler32 _adler>;

        $l5 = r0.<com.jcraft.jzlib.InfBlocks: long check>;

        $r4 = r0.<com.jcraft.jzlib.InfBlocks: byte[] window>;

        $l5 = virtualinvoke $r3.<com.jcraft.jzlib.Adler32: long adler32(long,byte[],int,int)>($l5, $r4, 0, i2);

        r0.<com.jcraft.jzlib.InfBlocks: long check> = $l5;

        $r1.<com.jcraft.jzlib.ZStream: long adler> = $l5;

     label08:
        $r4 = r0.<com.jcraft.jzlib.InfBlocks: byte[] window>;

        $r5 = $r1.<com.jcraft.jzlib.ZStream: byte[] next_out>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r5, i1, i2);

        i1 = i1 + i2;

     label09:
        $r1.<com.jcraft.jzlib.ZStream: int next_out_index> = i1;

        r0.<com.jcraft.jzlib.InfBlocks: int read> = i2;

        return $i0;

     label10:
        $i3 = r0.<com.jcraft.jzlib.InfBlocks: int end>;

        goto label01;
    }
    int proc(com.jcraft.jzlib.ZStream, int)
    {
        com.jcraft.jzlib.InfBlocks r0;
        com.jcraft.jzlib.ZStream $r1;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, $i12, $i14, $i15, $i16;
        int[] $r2, r4, r5, r11, $r12, $r13;
        long $l9, $l10;
        byte[] $r3, $r9;
        byte $b11, $b13;
        int[][] r6, r7;
        com.jcraft.jzlib.InfCodes $r8;
        com.jcraft.jzlib.InfTree $r10;

        r0 := @this: com.jcraft.jzlib.InfBlocks;

        $r1 := @parameter0: com.jcraft.jzlib.ZStream;

        $i3 := @parameter1: int;

        i5 = $r1.<com.jcraft.jzlib.ZStream: int next_in_index>;

        i6 = $r1.<com.jcraft.jzlib.ZStream: int avail_in>;

        i7 = r0.<com.jcraft.jzlib.InfBlocks: int bitb>;

        i8 = r0.<com.jcraft.jzlib.InfBlocks: int bitk>;

        $i0 = r0.<com.jcraft.jzlib.InfBlocks: int write>;

        $i4 = $i0;

        $i1 = r0.<com.jcraft.jzlib.InfBlocks: int read>;

        if $i0 >= $i1 goto label03;

        $i1 = r0.<com.jcraft.jzlib.InfBlocks: int read>;

        $i0 = $i1 - $i0;

        $i0 = $i0 + -1;

     label01:
        $i1 = r0.<com.jcraft.jzlib.InfBlocks: int mode>;

        lookupswitch($i1)
        {
            case 0: goto label82;
            case 1: goto label81;
            case 2: goto label19;
            case 3: goto label80;
            case 4: goto label39;
            case 5: goto label49;
            case 6: goto label68;
            case 7: goto label73;
            case 8: goto label77;
            case 9: goto label78;
            default: goto label02;
        };

     label02:
        r0.<com.jcraft.jzlib.InfBlocks: int bitb> = i7;

        r0.<com.jcraft.jzlib.InfBlocks: int bitk> = i8;

        $r1.<com.jcraft.jzlib.ZStream: int avail_in> = i6;

        $l9 = $r1.<com.jcraft.jzlib.ZStream: long total_in>;

        $i3 = $r1.<com.jcraft.jzlib.ZStream: int next_in_index>;

        $i3 = i5 - $i3;

        $l10 = (long) $i3;

        $l9 = $l9 + $l10;

        $r1.<com.jcraft.jzlib.ZStream: long total_in> = $l9;

        $r1.<com.jcraft.jzlib.ZStream: int next_in_index> = i5;

        r0.<com.jcraft.jzlib.InfBlocks: int write> = $i4;

        $i3 = virtualinvoke r0.<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>($r1, -2);

        return $i3;

     label03:
        $i1 = r0.<com.jcraft.jzlib.InfBlocks: int end>;

        $i0 = $i1 - $i0;

        goto label01;

     label04:
        if i8 >= 3 goto label06;

        if i6 == 0 goto label05;

        $i3 = 0;

        i6 = i6 + -1;

        $r3 = $r1.<com.jcraft.jzlib.ZStream: byte[] next_in>;

        $i1 = i5 + 1;

        $b11 = $r3[i5];

        i5 = $b11 & 255;

        i5 = i5 << i8;

        i7 = i7 | i5;

        i8 = i8 + 8;

        i5 = $i1;

        goto label04;

     label05:
        r0.<com.jcraft.jzlib.InfBlocks: int bitb> = i7;

        r0.<com.jcraft.jzlib.InfBlocks: int bitk> = i8;

        $r1.<com.jcraft.jzlib.ZStream: int avail_in> = i6;

        $l9 = $r1.<com.jcraft.jzlib.ZStream: long total_in>;

        i6 = $r1.<com.jcraft.jzlib.ZStream: int next_in_index>;

        i6 = i5 - i6;

        $l10 = (long) i6;

        $l9 = $l9 + $l10;

        $r1.<com.jcraft.jzlib.ZStream: long total_in> = $l9;

        $r1.<com.jcraft.jzlib.ZStream: int next_in_index> = i5;

        r0.<com.jcraft.jzlib.InfBlocks: int write> = $i4;

        $i3 = virtualinvoke r0.<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>($r1, $i3);

        return $i3;

     label06:
        $i1 = i7 & 7;

        $i2 = $i1 & 1;

        r0.<com.jcraft.jzlib.InfBlocks: int last> = $i2;

        $i1 = $i1 >>> 1;

        lookupswitch($i1)
        {
            case 0: goto label08;
            case 1: goto label09;
            case 2: goto label10;
            case 3: goto label11;
            default: goto label07;
        };

     label07:
        goto label01;

     label08:
        i7 = i7 >>> 3;

        i8 = i8 + -3;

        $i1 = i8 & 7;

        i7 = i7 >>> $i1;

        i8 = i8 - $i1;

        r0.<com.jcraft.jzlib.InfBlocks: int mode> = 1;

        goto label07;

     label09:
        r4 = newarray (int)[1];

        r5 = newarray (int)[1];

        r6 = newarray (int[])[1];

        r7 = newarray (int[])[1];

        staticinvoke <com.jcraft.jzlib.InfTree: int inflate_trees_fixed(int[],int[],int[][],int[][],com.jcraft.jzlib.ZStream)>(r4, r5, r6, r7, $r1);

        $r8 = r0.<com.jcraft.jzlib.InfBlocks: com.jcraft.jzlib.InfCodes codes>;

        $i1 = r4[0];

        $i2 = r5[0];

        r4 = r6[0];

        r5 = r7[0];

        virtualinvoke $r8.<com.jcraft.jzlib.InfCodes: void init(int,int,int[],int,int[],int,com.jcraft.jzlib.ZStream)>($i1, $i2, r4, 0, r5, 0, $r1);

        i7 = i7 >>> 3;

        i8 = i8 + -3;

        r0.<com.jcraft.jzlib.InfBlocks: int mode> = 6;

        goto label07;

     label10:
        i7 = i7 >>> 3;

        i8 = i8 + -3;

        r0.<com.jcraft.jzlib.InfBlocks: int mode> = 3;

        goto label07;

     label11:
        $i3 = i7 >>> 3;

        i7 = i8 + -3;

        r0.<com.jcraft.jzlib.InfBlocks: int mode> = 9;

        $r1.<com.jcraft.jzlib.ZStream: java.lang.String msg> = "invalid block type";

        r0.<com.jcraft.jzlib.InfBlocks: int bitb> = $i3;

        r0.<com.jcraft.jzlib.InfBlocks: int bitk> = i7;

        $r1.<com.jcraft.jzlib.ZStream: int avail_in> = i6;

        $l9 = $r1.<com.jcraft.jzlib.ZStream: long total_in>;

        $i3 = $r1.<com.jcraft.jzlib.ZStream: int next_in_index>;

        $i3 = i5 - $i3;

        $l10 = (long) $i3;

        $l9 = $l9 + $l10;

        $r1.<com.jcraft.jzlib.ZStream: long total_in> = $l9;

        $r1.<com.jcraft.jzlib.ZStream: int next_in_index> = i5;

        r0.<com.jcraft.jzlib.InfBlocks: int write> = $i4;

        $i3 = virtualinvoke r0.<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>($r1, -3);

        return $i3;

     label12:
        if i8 >= 32 goto label14;

        if i6 == 0 goto label13;

        $i3 = 0;

        i6 = i6 + -1;

        $r3 = $r1.<com.jcraft.jzlib.ZStream: byte[] next_in>;

        $i1 = i5 + 1;

        $b11 = $r3[i5];

        i5 = $b11 & 255;

        i5 = i5 << i8;

        i7 = i7 | i5;

        i8 = i8 + 8;

        i5 = $i1;

        goto label12;

     label13:
        r0.<com.jcraft.jzlib.InfBlocks: int bitb> = i7;

        r0.<com.jcraft.jzlib.InfBlocks: int bitk> = i8;

        $r1.<com.jcraft.jzlib.ZStream: int avail_in> = i6;

        $l9 = $r1.<com.jcraft.jzlib.ZStream: long total_in>;

        i6 = $r1.<com.jcraft.jzlib.ZStream: int next_in_index>;

        i6 = i5 - i6;

        $l10 = (long) i6;

        $l9 = $l9 + $l10;

        $r1.<com.jcraft.jzlib.ZStream: long total_in> = $l9;

        $r1.<com.jcraft.jzlib.ZStream: int next_in_index> = i5;

        r0.<com.jcraft.jzlib.InfBlocks: int write> = $i4;

        $i3 = virtualinvoke r0.<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>($r1, $i3);

        return $i3;

     label14:
        $i1 = i7 ^ -1;

        $i1 = $i1 >>> 16;

        $i1 = $i1 & 65535;

        $i2 = 65535 & i7;

        if $i1 == $i2 goto label15;

        r0.<com.jcraft.jzlib.InfBlocks: int mode> = 9;

        $r1.<com.jcraft.jzlib.ZStream: java.lang.String msg> = "invalid stored block lengths";

        r0.<com.jcraft.jzlib.InfBlocks: int bitb> = i7;

        r0.<com.jcraft.jzlib.InfBlocks: int bitk> = i8;

        $r1.<com.jcraft.jzlib.ZStream: int avail_in> = i6;

        $l9 = $r1.<com.jcraft.jzlib.ZStream: long total_in>;

        $i3 = $r1.<com.jcraft.jzlib.ZStream: int next_in_index>;

        $i3 = i5 - $i3;

        $l10 = (long) $i3;

        $l9 = $l9 + $l10;

        $r1.<com.jcraft.jzlib.ZStream: long total_in> = $l9;

        $r1.<com.jcraft.jzlib.ZStream: int next_in_index> = i5;

        r0.<com.jcraft.jzlib.InfBlocks: int write> = $i4;

        $i3 = virtualinvoke r0.<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>($r1, -3);

        return $i3;

     label15:
        i7 = 65535 & i7;

        r0.<com.jcraft.jzlib.InfBlocks: int left> = i7;

        i8 = 0;

        i7 = 0;

        $i1 = r0.<com.jcraft.jzlib.InfBlocks: int left>;

        if $i1 == 0 goto label17;

        $b11 = 2;

     label16:
        r0.<com.jcraft.jzlib.InfBlocks: int mode> = $b11;

        goto label01;

     label17:
        $i1 = r0.<com.jcraft.jzlib.InfBlocks: int last>;

        if $i1 == 0 goto label18;

        $b11 = 7;

        goto label16;

     label18:
        $b11 = 0;

        goto label16;

     label19:
        if i6 != 0 goto label20;

        r0.<com.jcraft.jzlib.InfBlocks: int bitb> = i7;

        r0.<com.jcraft.jzlib.InfBlocks: int bitk> = i8;

        $r1.<com.jcraft.jzlib.ZStream: int avail_in> = i6;

        $l9 = $r1.<com.jcraft.jzlib.ZStream: long total_in>;

        i6 = $r1.<com.jcraft.jzlib.ZStream: int next_in_index>;

        i6 = i5 - i6;

        $l10 = (long) i6;

        $l9 = $l9 + $l10;

        $r1.<com.jcraft.jzlib.ZStream: long total_in> = $l9;

        $r1.<com.jcraft.jzlib.ZStream: int next_in_index> = i5;

        r0.<com.jcraft.jzlib.InfBlocks: int write> = $i4;

        $i3 = virtualinvoke r0.<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>($r1, $i3);

        return $i3;

     label20:
        if $i0 != 0 goto label27;

        $i1 = r0.<com.jcraft.jzlib.InfBlocks: int end>;

        if $i4 != $i1 goto label21;

        $i1 = r0.<com.jcraft.jzlib.InfBlocks: int read>;

        if $i1 == 0 goto label21;

        $i4 = 0;

        $i0 = r0.<com.jcraft.jzlib.InfBlocks: int read>;

        if 0 >= $i0 goto label24;

        $i0 = r0.<com.jcraft.jzlib.InfBlocks: int read>;

        $i0 = $i0 + -1;

     label21:
        if $i0 != 0 goto label27;

        r0.<com.jcraft.jzlib.InfBlocks: int write> = $i4;

        $i3 = virtualinvoke r0.<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>($r1, $i3);

        $i1 = r0.<com.jcraft.jzlib.InfBlocks: int write>;

        $i4 = $i1;

        $i0 = r0.<com.jcraft.jzlib.InfBlocks: int read>;

        if $i1 >= $i0 goto label25;

        $i0 = r0.<com.jcraft.jzlib.InfBlocks: int read>;

        $i0 = $i0 - $i1;

        $i0 = $i0 + -1;

     label22:
        $i2 = r0.<com.jcraft.jzlib.InfBlocks: int end>;

        if $i1 != $i2 goto label23;

        $i1 = r0.<com.jcraft.jzlib.InfBlocks: int read>;

        if $i1 == 0 goto label23;

        $i4 = 0;

        $i0 = r0.<com.jcraft.jzlib.InfBlocks: int read>;

        if 0 >= $i0 goto label26;

        $i0 = r0.<com.jcraft.jzlib.InfBlocks: int read>;

        $i0 = $i0 + -1;

     label23:
        if $i0 != 0 goto label27;

        r0.<com.jcraft.jzlib.InfBlocks: int bitb> = i7;

        r0.<com.jcraft.jzlib.InfBlocks: int bitk> = i8;

        $r1.<com.jcraft.jzlib.ZStream: int avail_in> = i6;

        $l9 = $r1.<com.jcraft.jzlib.ZStream: long total_in>;

        i6 = $r1.<com.jcraft.jzlib.ZStream: int next_in_index>;

        i6 = i5 - i6;

        $l10 = (long) i6;

        $l9 = $l9 + $l10;

        $r1.<com.jcraft.jzlib.ZStream: long total_in> = $l9;

        $r1.<com.jcraft.jzlib.ZStream: int next_in_index> = i5;

        r0.<com.jcraft.jzlib.InfBlocks: int write> = $i4;

        $i3 = virtualinvoke r0.<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>($r1, $i3);

        return $i3;

     label24:
        $i0 = r0.<com.jcraft.jzlib.InfBlocks: int end>;

        goto label21;

     label25:
        $i0 = r0.<com.jcraft.jzlib.InfBlocks: int end>;

        $i0 = $i0 - $i1;

        goto label22;

     label26:
        $i0 = r0.<com.jcraft.jzlib.InfBlocks: int end>;

        goto label23;

     label27:
        $i3 = 0;

        $i2 = r0.<com.jcraft.jzlib.InfBlocks: int left>;

        $i1 = $i2;

        if $i2 <= i6 goto label28;

        $i1 = i6;

     label28:
        if $i1 <= $i0 goto label29;

        $i1 = $i0;

     label29:
        $r3 = $r1.<com.jcraft.jzlib.ZStream: byte[] next_in>;

        $r9 = r0.<com.jcraft.jzlib.InfBlocks: byte[] window>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, i5, $r9, $i4, $i1);

        i5 = i5 + $i1;

        i6 = i6 - $i1;

        $i4 = $i4 + $i1;

        $i0 = $i0 - $i1;

        $i2 = r0.<com.jcraft.jzlib.InfBlocks: int left>;

        $i1 = $i2 - $i1;

        r0.<com.jcraft.jzlib.InfBlocks: int left> = $i1;

        if $i1 != 0 goto label01;

        $i1 = r0.<com.jcraft.jzlib.InfBlocks: int last>;

        if $i1 == 0 goto label31;

        $b11 = 7;

     label30:
        r0.<com.jcraft.jzlib.InfBlocks: int mode> = $b11;

        goto label01;

     label31:
        $b11 = 0;

        goto label30;

     label32:
        if i8 >= 14 goto label34;

        if i6 == 0 goto label33;

        $i3 = 0;

        i6 = i6 + -1;

        $r3 = $r1.<com.jcraft.jzlib.ZStream: byte[] next_in>;

        $i0 = i5 + 1;

        $b11 = $r3[i5];

        i5 = $b11 & 255;

        i5 = i5 << i8;

        i7 = i7 | i5;

        i8 = i8 + 8;

        i5 = $i0;

        goto label32;

     label33:
        r0.<com.jcraft.jzlib.InfBlocks: int bitb> = i7;

        r0.<com.jcraft.jzlib.InfBlocks: int bitk> = i8;

        $r1.<com.jcraft.jzlib.ZStream: int avail_in> = i6;

        $l9 = $r1.<com.jcraft.jzlib.ZStream: long total_in>;

        i6 = $r1.<com.jcraft.jzlib.ZStream: int next_in_index>;

        i6 = i5 - i6;

        $l10 = (long) i6;

        $l9 = $l9 + $l10;

        $r1.<com.jcraft.jzlib.ZStream: long total_in> = $l9;

        $r1.<com.jcraft.jzlib.ZStream: int next_in_index> = i5;

        r0.<com.jcraft.jzlib.InfBlocks: int write> = $i4;

        $i3 = virtualinvoke r0.<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>($r1, $i3);

        return $i3;

     label34:
        $i0 = i7 & 16383;

        r0.<com.jcraft.jzlib.InfBlocks: int table> = $i0;

        $i1 = $i0 & 31;

        if $i1 > 29 goto label35;

        $i1 = $i0 >> 5;

        $i1 = $i1 & 31;

        if $i1 <= 29 goto label36;

     label35:
        r0.<com.jcraft.jzlib.InfBlocks: int mode> = 9;

        $r1.<com.jcraft.jzlib.ZStream: java.lang.String msg> = "too many length or distance symbols";

        r0.<com.jcraft.jzlib.InfBlocks: int bitb> = i7;

        r0.<com.jcraft.jzlib.InfBlocks: int bitk> = i8;

        $r1.<com.jcraft.jzlib.ZStream: int avail_in> = i6;

        $l9 = $r1.<com.jcraft.jzlib.ZStream: long total_in>;

        $i3 = $r1.<com.jcraft.jzlib.ZStream: int next_in_index>;

        $i3 = i5 - $i3;

        $l10 = (long) $i3;

        $l9 = $l9 + $l10;

        $r1.<com.jcraft.jzlib.ZStream: long total_in> = $l9;

        $r1.<com.jcraft.jzlib.ZStream: int next_in_index> = i5;

        r0.<com.jcraft.jzlib.InfBlocks: int write> = $i4;

        $i3 = virtualinvoke r0.<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>($r1, -3);

        return $i3;

     label36:
        $i1 = $i0 & 31;

        $i1 = $i1 + 258;

        $i0 = $i0 >> 5;

        $i0 = $i0 & 31;

        $i0 = $i1 + $i0;

        r4 = r0.<com.jcraft.jzlib.InfBlocks: int[] blens>;

        if r4 == null goto label37;

        r4 = r0.<com.jcraft.jzlib.InfBlocks: int[] blens>;

        $i1 = lengthof r4;

        if $i1 >= $i0 goto label41;

     label37:
        r4 = newarray (int)[$i0];

        r0.<com.jcraft.jzlib.InfBlocks: int[] blens> = r4;

     label38:
        i7 = i7 >>> 14;

        i8 = i8 + -14;

        r0.<com.jcraft.jzlib.InfBlocks: int index> = 0;

        r0.<com.jcraft.jzlib.InfBlocks: int mode> = 4;

     label39:
        $i0 = r0.<com.jcraft.jzlib.InfBlocks: int index>;

        $i1 = r0.<com.jcraft.jzlib.InfBlocks: int table>;

        $i1 = $i1 >>> 10;

        $i1 = $i1 + 4;

        if $i0 >= $i1 goto label45;

     label40:
        if i8 >= 3 goto label44;

        if i6 == 0 goto label43;

        $i3 = 0;

        i6 = i6 + -1;

        $r3 = $r1.<com.jcraft.jzlib.ZStream: byte[] next_in>;

        $i0 = i5 + 1;

        $b11 = $r3[i5];

        i5 = $b11 & 255;

        i5 = i5 << i8;

        i7 = i7 | i5;

        i8 = i8 + 8;

        i5 = $i0;

        goto label40;

     label41:
        $i1 = 0;

     label42:
        if $i1 >= $i0 goto label38;

        r4 = r0.<com.jcraft.jzlib.InfBlocks: int[] blens>;

        r4[$i1] = 0;

        $i1 = $i1 + 1;

        goto label42;

     label43:
        r0.<com.jcraft.jzlib.InfBlocks: int bitb> = i7;

        r0.<com.jcraft.jzlib.InfBlocks: int bitk> = i8;

        $r1.<com.jcraft.jzlib.ZStream: int avail_in> = i6;

        $l9 = $r1.<com.jcraft.jzlib.ZStream: long total_in>;

        i6 = $r1.<com.jcraft.jzlib.ZStream: int next_in_index>;

        i6 = i5 - i6;

        $l10 = (long) i6;

        $l9 = $l9 + $l10;

        $r1.<com.jcraft.jzlib.ZStream: long total_in> = $l9;

        $r1.<com.jcraft.jzlib.ZStream: int next_in_index> = i5;

        r0.<com.jcraft.jzlib.InfBlocks: int write> = $i4;

        $i3 = virtualinvoke r0.<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>($r1, $i3);

        return $i3;

     label44:
        r4 = r0.<com.jcraft.jzlib.InfBlocks: int[] blens>;

        r5 = <com.jcraft.jzlib.InfBlocks: int[] border>;

        $i0 = r0.<com.jcraft.jzlib.InfBlocks: int index>;

        $i1 = $i0 + 1;

        r0.<com.jcraft.jzlib.InfBlocks: int index> = $i1;

        $i0 = r5[$i0];

        $i1 = i7 & 7;

        r4[$i0] = $i1;

        i7 = i7 >>> 3;

        i8 = i8 + -3;

        goto label39;

     label45:
        $i0 = r0.<com.jcraft.jzlib.InfBlocks: int index>;

        if $i0 >= 19 goto label46;

        r4 = r0.<com.jcraft.jzlib.InfBlocks: int[] blens>;

        r5 = <com.jcraft.jzlib.InfBlocks: int[] border>;

        $i0 = r0.<com.jcraft.jzlib.InfBlocks: int index>;

        $i1 = $i0 + 1;

        r0.<com.jcraft.jzlib.InfBlocks: int index> = $i1;

        $i0 = r5[$i0];

        r4[$i0] = 0;

        goto label45;

     label46:
        r4 = r0.<com.jcraft.jzlib.InfBlocks: int[] bb>;

        r4[0] = 7;

        $r10 = r0.<com.jcraft.jzlib.InfBlocks: com.jcraft.jzlib.InfTree inftree>;

        r4 = r0.<com.jcraft.jzlib.InfBlocks: int[] blens>;

        r5 = r0.<com.jcraft.jzlib.InfBlocks: int[] bb>;

        $r2 = r0.<com.jcraft.jzlib.InfBlocks: int[] tb>;

        r11 = r0.<com.jcraft.jzlib.InfBlocks: int[] hufts>;

        $i0 = virtualinvoke $r10.<com.jcraft.jzlib.InfTree: int inflate_trees_bits(int[],int[],int[],int[],com.jcraft.jzlib.ZStream)>(r4, r5, $r2, r11, $r1);

        if $i0 == 0 goto label48;

        if $i0 != -3 goto label47;

        r0.<com.jcraft.jzlib.InfBlocks: int[] blens> = null;

        r0.<com.jcraft.jzlib.InfBlocks: int mode> = 9;

     label47:
        r0.<com.jcraft.jzlib.InfBlocks: int bitb> = i7;

        r0.<com.jcraft.jzlib.InfBlocks: int bitk> = i8;

        $r1.<com.jcraft.jzlib.ZStream: int avail_in> = i6;

        $l9 = $r1.<com.jcraft.jzlib.ZStream: long total_in>;

        $i3 = $r1.<com.jcraft.jzlib.ZStream: int next_in_index>;

        $i3 = i5 - $i3;

        $l10 = (long) $i3;

        $l9 = $l9 + $l10;

        $r1.<com.jcraft.jzlib.ZStream: long total_in> = $l9;

        $r1.<com.jcraft.jzlib.ZStream: int next_in_index> = i5;

        r0.<com.jcraft.jzlib.InfBlocks: int write> = $i4;

        $i3 = virtualinvoke r0.<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>($r1, $i0);

        return $i3;

     label48:
        r0.<com.jcraft.jzlib.InfBlocks: int index> = 0;

        r0.<com.jcraft.jzlib.InfBlocks: int mode> = 5;

     label49:
        $i2 = r0.<com.jcraft.jzlib.InfBlocks: int table>;

        $i0 = r0.<com.jcraft.jzlib.InfBlocks: int index>;

        $i1 = $i2 & 31;

        $i1 = $i1 + 258;

        $i2 = $i2 >> 5;

        $i2 = $i2 & 31;

        $i1 = $i1 + $i2;

        if $i0 < $i1 goto label51;

        r4 = r0.<com.jcraft.jzlib.InfBlocks: int[] tb>;

        r4[0] = -1;

        $r2 = newarray (int)[1];

        r11 = newarray (int)[1];

        r5 = newarray (int)[1];

        r4 = newarray (int)[1];

        $r2[0] = 9;

        r11[0] = 6;

        $i1 = r0.<com.jcraft.jzlib.InfBlocks: int table>;

        $r10 = r0.<com.jcraft.jzlib.InfBlocks: com.jcraft.jzlib.InfTree inftree>;

        $i0 = $i1 & 31;

        $i0 = $i0 + 257;

        $i1 = $i1 >> 5;

        $i1 = $i1 & 31;

        $i1 = $i1 + 1;

        $r12 = r0.<com.jcraft.jzlib.InfBlocks: int[] blens>;

        $r13 = r0.<com.jcraft.jzlib.InfBlocks: int[] hufts>;

        $i0 = virtualinvoke $r10.<com.jcraft.jzlib.InfTree: int inflate_trees_dynamic(int,int,int[],int[],int[],int[],int[],int[],com.jcraft.jzlib.ZStream)>($i0, $i1, $r12, $r2, r11, r5, r4, $r13, $r1);

        if $i0 == 0 goto label67;

        if $i0 != -3 goto label50;

        r0.<com.jcraft.jzlib.InfBlocks: int[] blens> = null;

        r0.<com.jcraft.jzlib.InfBlocks: int mode> = 9;

     label50:
        r0.<com.jcraft.jzlib.InfBlocks: int bitb> = i7;

        r0.<com.jcraft.jzlib.InfBlocks: int bitk> = i8;

        $r1.<com.jcraft.jzlib.ZStream: int avail_in> = i6;

        $l9 = $r1.<com.jcraft.jzlib.ZStream: long total_in>;

        $i3 = $r1.<com.jcraft.jzlib.ZStream: int next_in_index>;

        $i3 = i5 - $i3;

        $l10 = (long) $i3;

        $l9 = $l9 + $l10;

        $r1.<com.jcraft.jzlib.ZStream: long total_in> = $l9;

        $r1.<com.jcraft.jzlib.ZStream: int next_in_index> = i5;

        r0.<com.jcraft.jzlib.InfBlocks: int write> = $i4;

        $i3 = virtualinvoke r0.<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>($r1, $i0);

        return $i3;

     label51:
        r4 = r0.<com.jcraft.jzlib.InfBlocks: int[] bb>;

        $i0 = r4[0];

     label52:
        if i8 >= $i0 goto label54;

        if i6 == 0 goto label53;

        $i3 = 0;

        i6 = i6 + -1;

        $r3 = $r1.<com.jcraft.jzlib.ZStream: byte[] next_in>;

        $i1 = i5 + 1;

        $b11 = $r3[i5];

        i5 = $b11 & 255;

        i5 = i5 << i8;

        i7 = i7 | i5;

        i8 = i8 + 8;

        i5 = $i1;

        goto label52;

     label53:
        r0.<com.jcraft.jzlib.InfBlocks: int bitb> = i7;

        r0.<com.jcraft.jzlib.InfBlocks: int bitk> = i8;

        $r1.<com.jcraft.jzlib.ZStream: int avail_in> = i6;

        $l9 = $r1.<com.jcraft.jzlib.ZStream: long total_in>;

        i6 = $r1.<com.jcraft.jzlib.ZStream: int next_in_index>;

        i6 = i5 - i6;

        $l10 = (long) i6;

        $l9 = $l9 + $l10;

        $r1.<com.jcraft.jzlib.ZStream: long total_in> = $l9;

        $r1.<com.jcraft.jzlib.ZStream: int next_in_index> = i5;

        r0.<com.jcraft.jzlib.InfBlocks: int write> = $i4;

        $i3 = virtualinvoke r0.<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>($r1, $i3);

        return $i3;

     label54:
        r4 = r0.<com.jcraft.jzlib.InfBlocks: int[] tb>;

        $i1 = r4[0];

        if $i1 != -1 goto label55;

     label55:
        r4 = r0.<com.jcraft.jzlib.InfBlocks: int[] hufts>;

        r5 = r0.<com.jcraft.jzlib.InfBlocks: int[] tb>;

        $i1 = r5[0];

        r5 = <com.jcraft.jzlib.InfBlocks: int[] inflate_mask>;

        $i0 = r5[$i0];

        $i0 = $i0 & i7;

        $i0 = $i1 + $i0;

        $i0 = $i0 * 3;

        $i0 = $i0 + 1;

        $i1 = r4[$i0];

        r4 = r0.<com.jcraft.jzlib.InfBlocks: int[] hufts>;

        r5 = r0.<com.jcraft.jzlib.InfBlocks: int[] tb>;

        $i0 = r5[0];

        r5 = <com.jcraft.jzlib.InfBlocks: int[] inflate_mask>;

        $i2 = r5[$i1];

        $i2 = $i2 & i7;

        $i0 = $i0 + $i2;

        $i0 = $i0 * 3;

        $i0 = $i0 + 2;

        $i0 = r4[$i0];

        if $i0 >= 16 goto label56;

        i7 = i7 >>> $i1;

        i8 = i8 - $i1;

        r4 = r0.<com.jcraft.jzlib.InfBlocks: int[] blens>;

        $i1 = r0.<com.jcraft.jzlib.InfBlocks: int index>;

        $i2 = $i1 + 1;

        r0.<com.jcraft.jzlib.InfBlocks: int index> = $i2;

        r4[$i1] = $i0;

        goto label49;

     label56:
        if $i0 != 18 goto label59;

        $i2 = 7;

     label57:
        if $i0 != 18 goto label60;

        $b11 = 11;

     label58:
        $i12 = $i1 + $i2;

        if i8 >= $i12 goto label62;

        if i6 == 0 goto label61;

        $i3 = 0;

        i6 = i6 + -1;

        $r3 = $r1.<com.jcraft.jzlib.ZStream: byte[] next_in>;

        $i12 = i5 + 1;

        $b13 = $r3[i5];

        i5 = $b13 & 255;

        i5 = i5 << i8;

        i7 = i7 | i5;

        i8 = i8 + 8;

        i5 = $i12;

        goto label58;

     label59:
        $i2 = $i0 + -14;

        goto label57;

     label60:
        $b11 = 3;

        goto label58;

     label61:
        r0.<com.jcraft.jzlib.InfBlocks: int bitb> = i7;

        r0.<com.jcraft.jzlib.InfBlocks: int bitk> = i8;

        $r1.<com.jcraft.jzlib.ZStream: int avail_in> = i6;

        $l9 = $r1.<com.jcraft.jzlib.ZStream: long total_in>;

        i6 = $r1.<com.jcraft.jzlib.ZStream: int next_in_index>;

        i6 = i5 - i6;

        $l10 = (long) i6;

        $l9 = $l9 + $l10;

        $r1.<com.jcraft.jzlib.ZStream: long total_in> = $l9;

        $r1.<com.jcraft.jzlib.ZStream: int next_in_index> = i5;

        r0.<com.jcraft.jzlib.InfBlocks: int write> = $i4;

        $i3 = virtualinvoke r0.<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>($r1, $i3);

        return $i3;

     label62:
        i7 = i7 >>> $i1;

        i8 = i8 - $i1;

        r4 = <com.jcraft.jzlib.InfBlocks: int[] inflate_mask>;

        $i1 = r4[$i2];

        $i1 = $i1 & i7;

        $i1 = $b11 + $i1;

        i7 = i7 >>> $i2;

        i8 = i8 - $i2;

        $i12 = r0.<com.jcraft.jzlib.InfBlocks: int index>;

        $i2 = $i12;

        $i14 = r0.<com.jcraft.jzlib.InfBlocks: int table>;

        $i15 = $i12 + $i1;

        $i16 = $i14 & 31;

        $i16 = $i16 + 258;

        $i14 = $i14 >> 5;

        $i14 = $i14 & 31;

        $i16 = $i16 + $i14;

        if $i15 > $i16 goto label63;

        if $i0 != 16 goto label64;

        if $i12 >= 1 goto label64;

     label63:
        r0.<com.jcraft.jzlib.InfBlocks: int[] blens> = null;

        r0.<com.jcraft.jzlib.InfBlocks: int mode> = 9;

        $r1.<com.jcraft.jzlib.ZStream: java.lang.String msg> = "invalid bit length repeat";

        r0.<com.jcraft.jzlib.InfBlocks: int bitb> = i7;

        r0.<com.jcraft.jzlib.InfBlocks: int bitk> = i8;

        $r1.<com.jcraft.jzlib.ZStream: int avail_in> = i6;

        $l9 = $r1.<com.jcraft.jzlib.ZStream: long total_in>;

        $i3 = $r1.<com.jcraft.jzlib.ZStream: int next_in_index>;

        $i3 = i5 - $i3;

        $l10 = (long) $i3;

        $l9 = $l9 + $l10;

        $r1.<com.jcraft.jzlib.ZStream: long total_in> = $l9;

        $r1.<com.jcraft.jzlib.ZStream: int next_in_index> = i5;

        r0.<com.jcraft.jzlib.InfBlocks: int write> = $i4;

        $i3 = virtualinvoke r0.<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>($r1, -3);

        return $i3;

     label64:
        if $i0 != 16 goto label66;

        r4 = r0.<com.jcraft.jzlib.InfBlocks: int[] blens>;

        $i0 = $i12 + -1;

        $i12 = r4[$i0];

     label65:
        r4 = r0.<com.jcraft.jzlib.InfBlocks: int[] blens>;

        $i0 = $i2 + 1;

        r4[$i2] = $i12;

        $i1 = $i1 + -1;

        if $i1 != 0 goto label79;

        r0.<com.jcraft.jzlib.InfBlocks: int index> = $i0;

        goto label49;

     label66:
        $i12 = 0;

        goto label65;

     label67:
        $r8 = r0.<com.jcraft.jzlib.InfBlocks: com.jcraft.jzlib.InfCodes codes>;

        $i12 = $r2[0];

        $i0 = r11[0];

        $r2 = r0.<com.jcraft.jzlib.InfBlocks: int[] hufts>;

        $i1 = r5[0];

        r5 = r0.<com.jcraft.jzlib.InfBlocks: int[] hufts>;

        $i2 = r4[0];

        virtualinvoke $r8.<com.jcraft.jzlib.InfCodes: void init(int,int,int[],int,int[],int,com.jcraft.jzlib.ZStream)>($i12, $i0, $r2, $i1, r5, $i2, $r1);

        r0.<com.jcraft.jzlib.InfBlocks: int mode> = 6;

     label68:
        r0.<com.jcraft.jzlib.InfBlocks: int bitb> = i7;

        r0.<com.jcraft.jzlib.InfBlocks: int bitk> = i8;

        $r1.<com.jcraft.jzlib.ZStream: int avail_in> = i6;

        $l9 = $r1.<com.jcraft.jzlib.ZStream: long total_in>;

        i6 = $r1.<com.jcraft.jzlib.ZStream: int next_in_index>;

        i6 = i5 - i6;

        $l10 = (long) i6;

        $l9 = $l9 + $l10;

        $r1.<com.jcraft.jzlib.ZStream: long total_in> = $l9;

        $r1.<com.jcraft.jzlib.ZStream: int next_in_index> = i5;

        r0.<com.jcraft.jzlib.InfBlocks: int write> = $i4;

        $r8 = r0.<com.jcraft.jzlib.InfBlocks: com.jcraft.jzlib.InfCodes codes>;

        $i3 = virtualinvoke $r8.<com.jcraft.jzlib.InfCodes: int proc(com.jcraft.jzlib.InfBlocks,com.jcraft.jzlib.ZStream,int)>(r0, $r1, $i3);

        if $i3 == 1 goto label69;

        $i3 = virtualinvoke r0.<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>($r1, $i3);

        return $i3;

     label69:
        $i3 = 0;

        $r8 = r0.<com.jcraft.jzlib.InfBlocks: com.jcraft.jzlib.InfCodes codes>;

        virtualinvoke $r8.<com.jcraft.jzlib.InfCodes: void free(com.jcraft.jzlib.ZStream)>($r1);

        i5 = $r1.<com.jcraft.jzlib.ZStream: int next_in_index>;

        i6 = $r1.<com.jcraft.jzlib.ZStream: int avail_in>;

        i7 = r0.<com.jcraft.jzlib.InfBlocks: int bitb>;

        i8 = r0.<com.jcraft.jzlib.InfBlocks: int bitk>;

        $i0 = r0.<com.jcraft.jzlib.InfBlocks: int write>;

        $i4 = $i0;

        $i1 = r0.<com.jcraft.jzlib.InfBlocks: int read>;

        if $i0 >= $i1 goto label71;

        $i1 = r0.<com.jcraft.jzlib.InfBlocks: int read>;

        $i0 = $i1 - $i0;

        $i0 = $i0 + -1;

     label70:
        $i1 = r0.<com.jcraft.jzlib.InfBlocks: int last>;

        if $i1 != 0 goto label72;

        r0.<com.jcraft.jzlib.InfBlocks: int mode> = 0;

        goto label01;

     label71:
        $i1 = r0.<com.jcraft.jzlib.InfBlocks: int end>;

        $i0 = $i1 - $i0;

        goto label70;

     label72:
        r0.<com.jcraft.jzlib.InfBlocks: int mode> = 7;

     label73:
        r0.<com.jcraft.jzlib.InfBlocks: int write> = $i4;

        $i3 = virtualinvoke r0.<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>($r1, $i3);

        $i0 = r0.<com.jcraft.jzlib.InfBlocks: int write>;

        $i4 = $i0;

        $i1 = r0.<com.jcraft.jzlib.InfBlocks: int read>;

        if $i0 >= $i1 goto label75;

     label74:
        $i1 = r0.<com.jcraft.jzlib.InfBlocks: int read>;

        $i2 = r0.<com.jcraft.jzlib.InfBlocks: int write>;

        if $i1 == $i2 goto label76;

        r0.<com.jcraft.jzlib.InfBlocks: int bitb> = i7;

        r0.<com.jcraft.jzlib.InfBlocks: int bitk> = i8;

        $r1.<com.jcraft.jzlib.ZStream: int avail_in> = i6;

        $l9 = $r1.<com.jcraft.jzlib.ZStream: long total_in>;

        $i4 = $r1.<com.jcraft.jzlib.ZStream: int next_in_index>;

        $i4 = i5 - $i4;

        $l10 = (long) $i4;

        $l9 = $l9 + $l10;

        $r1.<com.jcraft.jzlib.ZStream: long total_in> = $l9;

        $r1.<com.jcraft.jzlib.ZStream: int next_in_index> = i5;

        r0.<com.jcraft.jzlib.InfBlocks: int write> = $i0;

        $i3 = virtualinvoke r0.<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>($r1, $i3);

        return $i3;

     label75:
        goto label74;

     label76:
        r0.<com.jcraft.jzlib.InfBlocks: int mode> = 8;

     label77:
        r0.<com.jcraft.jzlib.InfBlocks: int bitb> = i7;

        r0.<com.jcraft.jzlib.InfBlocks: int bitk> = i8;

        $r1.<com.jcraft.jzlib.ZStream: int avail_in> = i6;

        $l9 = $r1.<com.jcraft.jzlib.ZStream: long total_in>;

        $i3 = $r1.<com.jcraft.jzlib.ZStream: int next_in_index>;

        $i3 = i5 - $i3;

        $l10 = (long) $i3;

        $l9 = $l9 + $l10;

        $r1.<com.jcraft.jzlib.ZStream: long total_in> = $l9;

        $r1.<com.jcraft.jzlib.ZStream: int next_in_index> = i5;

        r0.<com.jcraft.jzlib.InfBlocks: int write> = $i4;

        $i3 = virtualinvoke r0.<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>($r1, 1);

        return $i3;

     label78:
        r0.<com.jcraft.jzlib.InfBlocks: int bitb> = i7;

        r0.<com.jcraft.jzlib.InfBlocks: int bitk> = i8;

        $r1.<com.jcraft.jzlib.ZStream: int avail_in> = i6;

        $l9 = $r1.<com.jcraft.jzlib.ZStream: long total_in>;

        $i3 = $r1.<com.jcraft.jzlib.ZStream: int next_in_index>;

        $i3 = i5 - $i3;

        $l10 = (long) $i3;

        $l9 = $l9 + $l10;

        $r1.<com.jcraft.jzlib.ZStream: long total_in> = $l9;

        $r1.<com.jcraft.jzlib.ZStream: int next_in_index> = i5;

        r0.<com.jcraft.jzlib.InfBlocks: int write> = $i4;

        $i3 = virtualinvoke r0.<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>($r1, -3);

        return $i3;

     label79:
        $i2 = $i0;

        goto label65;

     label80:
        goto label32;

     label81:
        goto label12;

     label82:
        goto label04;
    }
    void reset(com.jcraft.jzlib.ZStream, long[])
    {
        com.jcraft.jzlib.InfBlocks r0;
        com.jcraft.jzlib.ZStream $r1;
        long[] $r2;
        long $l0;
        int $i1;
        com.jcraft.jzlib.InfCodes $r3;
        java.lang.Object $r4;
        com.jcraft.jzlib.Adler32 $r5;

        r0 := @this: com.jcraft.jzlib.InfBlocks;

        $r1 := @parameter0: com.jcraft.jzlib.ZStream;

        $r2 := @parameter1: long[];

        if $r2 == null goto label1;

        $l0 = r0.<com.jcraft.jzlib.InfBlocks: long check>;

        $r2[0] = $l0;

     label1:
        $i1 = r0.<com.jcraft.jzlib.InfBlocks: int mode>;

        if $i1 == 4 goto label2;

        $i1 = r0.<com.jcraft.jzlib.InfBlocks: int mode>;

        if $i1 != 5 goto label2;

     label2:
        $i1 = r0.<com.jcraft.jzlib.InfBlocks: int mode>;

        if $i1 != 6 goto label3;

        $r3 = r0.<com.jcraft.jzlib.InfBlocks: com.jcraft.jzlib.InfCodes codes>;

        virtualinvoke $r3.<com.jcraft.jzlib.InfCodes: void free(com.jcraft.jzlib.ZStream)>($r1);

     label3:
        r0.<com.jcraft.jzlib.InfBlocks: int mode> = 0;

        r0.<com.jcraft.jzlib.InfBlocks: int bitk> = 0;

        r0.<com.jcraft.jzlib.InfBlocks: int bitb> = 0;

        r0.<com.jcraft.jzlib.InfBlocks: int write> = 0;

        r0.<com.jcraft.jzlib.InfBlocks: int read> = 0;

        $r4 = r0.<com.jcraft.jzlib.InfBlocks: java.lang.Object checkfn>;

        if $r4 == null goto label4;

        $r5 = $r1.<com.jcraft.jzlib.ZStream: com.jcraft.jzlib.Adler32 _adler>;

        $l0 = virtualinvoke $r5.<com.jcraft.jzlib.Adler32: long adler32(long,byte[],int,int)>(0L, null, 0, 0);

        r0.<com.jcraft.jzlib.InfBlocks: long check> = $l0;

        $r1.<com.jcraft.jzlib.ZStream: long adler> = $l0;

     label4:
        return;
    }
    void set_dictionary(byte[], int, int)
    {
        com.jcraft.jzlib.InfBlocks r0;
        byte[] $r1, $r2;
        int $i0, $i1;

        r0 := @this: com.jcraft.jzlib.InfBlocks;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<com.jcraft.jzlib.InfBlocks: byte[] window>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r2, 0, $i1);

        r0.<com.jcraft.jzlib.InfBlocks: int write> = $i1;

        r0.<com.jcraft.jzlib.InfBlocks: int read> = $i1;

        return;
    }
    int sync_point()
    {
        com.jcraft.jzlib.InfBlocks r0;
        int $i0;

        r0 := @this: com.jcraft.jzlib.InfBlocks;

        $i0 = r0.<com.jcraft.jzlib.InfBlocks: int mode>;

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }
