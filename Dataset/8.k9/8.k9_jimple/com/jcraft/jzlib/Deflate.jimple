com.jcraft.jzlib.Deflate extends java.lang.Object
private static final int BL_CODES
private static final int BUSY_STATE
private static final int BlockDone
private static final int Buf_size
private static final int DEF_MEM_LEVEL
private static final int DYN_TREES
private static final int D_CODES
private static final int END_BLOCK
private static final int FAST
private static final int FINISH_STATE
private static final int FinishDone
private static final int FinishStarted
private static final int HEAP_SIZE
private static final int INIT_STATE
private static final int LENGTH_CODES
private static final int LITERALS
private static final int L_CODES
private static final int MAX_BITS
private static final int MAX_MATCH
private static final int MAX_MEM_LEVEL
private static final int MAX_WBITS
private static final int MIN_LOOKAHEAD
private static final int MIN_MATCH
private static final int NeedMore
private static final int PRESET_DICT
private static final int REPZ_11_138
private static final int REPZ_3_10
private static final int REP_3_6
private static final int SLOW
private static final int STATIC_TREES
private static final int STORED
private static final int STORED_BLOCK
private static final int Z_ASCII
private static final int Z_BINARY
private static final int Z_BUF_ERROR
private static final int Z_DATA_ERROR
private static final int Z_DEFAULT_COMPRESSION
private static final int Z_DEFAULT_STRATEGY
private static final int Z_DEFLATED
private static final int Z_ERRNO
private static final int Z_FILTERED
private static final int Z_FINISH
private static final int Z_FULL_FLUSH
private static final int Z_HUFFMAN_ONLY
private static final int Z_MEM_ERROR
private static final int Z_NEED_DICT
private static final int Z_NO_FLUSH
private static final int Z_OK
private static final int Z_PARTIAL_FLUSH
private static final int Z_STREAM_END
private static final int Z_STREAM_ERROR
private static final int Z_SYNC_FLUSH
private static final int Z_UNKNOWN
private static final int Z_VERSION_ERROR
private static final com.jcraft.jzlib.Deflate$Config[] config_table
private static final java.lang.String[] z_errmsg
short bi_buf
int bi_valid
short[] bl_count
com.jcraft.jzlib.Tree bl_desc
short[] bl_tree
int block_start
int d_buf
com.jcraft.jzlib.Tree d_desc
byte data_type
byte[] depth
short[] dyn_dtree
short[] dyn_ltree
int good_match
int hash_bits
int hash_mask
int hash_shift
int hash_size
short[] head
int[] heap
int heap_len
int heap_max
int ins_h
int l_buf
com.jcraft.jzlib.Tree l_desc
int last_eob_len
int last_flush
int last_lit
int level
int lit_bufsize
int lookahead
int match_available
int match_length
int match_start
int matches
int max_chain_length
int max_lazy_match
byte method
int nice_match
int noheader
int opt_len
int pending
byte[] pending_buf
int pending_buf_size
int pending_out
short[] prev
int prev_length
int prev_match
int static_len
int status
int strategy
com.jcraft.jzlib.ZStream strm
int strstart
int w_bits
int w_mask
int w_size
byte[] window
int window_size
    static void <clinit>()
    {
        com.jcraft.jzlib.Deflate$Config[] $r0;
        com.jcraft.jzlib.Deflate$Config $r1;
        java.lang.String[] $r2;

        $r0 = newarray (com.jcraft.jzlib.Deflate$Config)[10];

        <com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Deflate$Config[] config_table> = $r0;

        $r0 = <com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Deflate$Config[] config_table>;

        $r1 = new com.jcraft.jzlib.Deflate$Config;

        specialinvoke $r1.<com.jcraft.jzlib.Deflate$Config: void <init>(int,int,int,int,int)>(0, 0, 0, 0, 0);

        $r0[0] = $r1;

        $r0 = <com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Deflate$Config[] config_table>;

        $r1 = new com.jcraft.jzlib.Deflate$Config;

        specialinvoke $r1.<com.jcraft.jzlib.Deflate$Config: void <init>(int,int,int,int,int)>(4, 4, 8, 4, 1);

        $r0[1] = $r1;

        $r0 = <com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Deflate$Config[] config_table>;

        $r1 = new com.jcraft.jzlib.Deflate$Config;

        specialinvoke $r1.<com.jcraft.jzlib.Deflate$Config: void <init>(int,int,int,int,int)>(4, 5, 16, 8, 1);

        $r0[2] = $r1;

        $r0 = <com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Deflate$Config[] config_table>;

        $r1 = new com.jcraft.jzlib.Deflate$Config;

        specialinvoke $r1.<com.jcraft.jzlib.Deflate$Config: void <init>(int,int,int,int,int)>(4, 6, 32, 32, 1);

        $r0[3] = $r1;

        $r0 = <com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Deflate$Config[] config_table>;

        $r1 = new com.jcraft.jzlib.Deflate$Config;

        specialinvoke $r1.<com.jcraft.jzlib.Deflate$Config: void <init>(int,int,int,int,int)>(4, 4, 16, 16, 2);

        $r0[4] = $r1;

        $r0 = <com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Deflate$Config[] config_table>;

        $r1 = new com.jcraft.jzlib.Deflate$Config;

        specialinvoke $r1.<com.jcraft.jzlib.Deflate$Config: void <init>(int,int,int,int,int)>(8, 16, 32, 32, 2);

        $r0[5] = $r1;

        $r0 = <com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Deflate$Config[] config_table>;

        $r1 = new com.jcraft.jzlib.Deflate$Config;

        specialinvoke $r1.<com.jcraft.jzlib.Deflate$Config: void <init>(int,int,int,int,int)>(8, 16, 128, 128, 2);

        $r0[6] = $r1;

        $r0 = <com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Deflate$Config[] config_table>;

        $r1 = new com.jcraft.jzlib.Deflate$Config;

        specialinvoke $r1.<com.jcraft.jzlib.Deflate$Config: void <init>(int,int,int,int,int)>(8, 32, 128, 256, 2);

        $r0[7] = $r1;

        $r0 = <com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Deflate$Config[] config_table>;

        $r1 = new com.jcraft.jzlib.Deflate$Config;

        specialinvoke $r1.<com.jcraft.jzlib.Deflate$Config: void <init>(int,int,int,int,int)>(32, 128, 258, 1024, 2);

        $r0[8] = $r1;

        $r0 = <com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Deflate$Config[] config_table>;

        $r1 = new com.jcraft.jzlib.Deflate$Config;

        specialinvoke $r1.<com.jcraft.jzlib.Deflate$Config: void <init>(int,int,int,int,int)>(32, 258, 258, 4096, 2);

        $r0[9] = $r1;

        $r2 = newarray (java.lang.String)[10];

        $r2[0] = "need dictionary";

        $r2[1] = "stream end";

        $r2[2] = "";

        $r2[3] = "file error";

        $r2[4] = "stream error";

        $r2[5] = "data error";

        $r2[6] = "insufficient memory";

        $r2[7] = "buffer error";

        $r2[8] = "incompatible version";

        $r2[9] = "";

        <com.jcraft.jzlib.Deflate: java.lang.String[] z_errmsg> = $r2;

        return;
    }
    void <init>()
    {
        com.jcraft.jzlib.Deflate r0;
        com.jcraft.jzlib.Tree $r1;
        short[] $r2;
        int[] $r3;
        byte[] $r4;

        r0 := @this: com.jcraft.jzlib.Deflate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.jcraft.jzlib.Tree;

        specialinvoke $r1.<com.jcraft.jzlib.Tree: void <init>()>();

        r0.<com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Tree l_desc> = $r1;

        $r1 = new com.jcraft.jzlib.Tree;

        specialinvoke $r1.<com.jcraft.jzlib.Tree: void <init>()>();

        r0.<com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Tree d_desc> = $r1;

        $r1 = new com.jcraft.jzlib.Tree;

        specialinvoke $r1.<com.jcraft.jzlib.Tree: void <init>()>();

        r0.<com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Tree bl_desc> = $r1;

        $r2 = newarray (short)[16];

        r0.<com.jcraft.jzlib.Deflate: short[] bl_count> = $r2;

        $r3 = newarray (int)[573];

        r0.<com.jcraft.jzlib.Deflate: int[] heap> = $r3;

        $r4 = newarray (byte)[573];

        r0.<com.jcraft.jzlib.Deflate: byte[] depth> = $r4;

        $r2 = newarray (short)[1146];

        r0.<com.jcraft.jzlib.Deflate: short[] dyn_ltree> = $r2;

        $r2 = newarray (short)[122];

        r0.<com.jcraft.jzlib.Deflate: short[] dyn_dtree> = $r2;

        $r2 = newarray (short)[78];

        r0.<com.jcraft.jzlib.Deflate: short[] bl_tree> = $r2;

        return;
    }
    static boolean smaller(short[], int, int, byte[])
    {
        short[] $r0;
        int $i0, $i1, $i5;
        byte[] $r1;
        short s2, s3;
        byte $b4, $b6;

        $r0 := @parameter0: short[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: byte[];

        $i5 = $i0 * 2;

        s3 = $r0[$i5];

        $i5 = $i1 * 2;

        s2 = $r0[$i5];

        if s3 < s2 goto label1;

        if s3 != s2 goto label2;

        $b6 = $r1[$i0];

        $b4 = $r1[$i1];

        if $b6 > $b4 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    void _tr_align()
    {
        com.jcraft.jzlib.Deflate r0;
        short[] $r1;
        int $i0, $i1;

        r0 := @this: com.jcraft.jzlib.Deflate;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void send_bits(int,int)>(2, 3);

        $r1 = <com.jcraft.jzlib.StaticTree: short[] static_ltree>;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void send_code(int,short[])>(256, $r1);

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void bi_flush()>();

        $i0 = r0.<com.jcraft.jzlib.Deflate: int last_eob_len>;

        $i0 = $i0 + 1;

        $i0 = $i0 + 10;

        $i1 = r0.<com.jcraft.jzlib.Deflate: int bi_valid>;

        $i0 = $i0 - $i1;

        if $i0 >= 9 goto label1;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void send_bits(int,int)>(2, 3);

        $r1 = <com.jcraft.jzlib.StaticTree: short[] static_ltree>;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void send_code(int,short[])>(256, $r1);

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void bi_flush()>();

     label1:
        r0.<com.jcraft.jzlib.Deflate: int last_eob_len> = 7;

        return;
    }
    void _tr_flush_block(int, int, boolean)
    {
        com.jcraft.jzlib.Deflate r0;
        int $i0, $i1, $i2, $i4, $i6, $i7;
        boolean $z0;
        byte $b3, $b5;
        com.jcraft.jzlib.Tree $r1;
        short[] $r2, $r3;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $b3 = 1;

        $i2 = 0;

        $i4 = r0.<com.jcraft.jzlib.Deflate: int level>;

        if $i4 <= 0 goto label04;

        $b5 = r0.<com.jcraft.jzlib.Deflate: byte data_type>;

        if $b5 != 2 goto label01;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void set_data_type()>();

     label01:
        $r1 = r0.<com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Tree l_desc>;

        virtualinvoke $r1.<com.jcraft.jzlib.Tree: void build_tree(com.jcraft.jzlib.Deflate)>(r0);

        $r1 = r0.<com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Tree d_desc>;

        virtualinvoke $r1.<com.jcraft.jzlib.Tree: void build_tree(com.jcraft.jzlib.Deflate)>(r0);

        $i2 = virtualinvoke r0.<com.jcraft.jzlib.Deflate: int build_bl_tree()>();

        $i4 = r0.<com.jcraft.jzlib.Deflate: int opt_len>;

        $i4 = $i4 + 3;

        $i4 = $i4 + 7;

        $i4 = $i4 >>> 3;

        $i6 = r0.<com.jcraft.jzlib.Deflate: int static_len>;

        $i6 = $i6 + 3;

        $i6 = $i6 + 7;

        $i6 = $i6 >>> 3;

        if $i6 > $i4 goto label02;

        $i4 = $i6;

     label02:
        $i7 = $i1 + 4;

        if $i7 > $i4 goto label05;

        if $i0 == -1 goto label05;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void _tr_stored_block(int,int,boolean)>($i0, $i1, $z0);

     label03:
        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void init_block()>();

        if $z0 == 0 goto label11;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void bi_windup()>();

        return;

     label04:
        $i6 = $i1 + 5;

        $i4 = $i6;

        goto label02;

     label05:
        if $i6 != $i4 goto label08;

        if $z0 == 0 goto label07;

     label06:
        $i0 = $b3 + 2;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void send_bits(int,int)>($i0, 3);

        $r2 = <com.jcraft.jzlib.StaticTree: short[] static_ltree>;

        $r3 = <com.jcraft.jzlib.StaticTree: short[] static_dtree>;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void compress_block(short[],short[])>($r2, $r3);

        goto label03;

     label07:
        $b3 = 0;

        goto label06;

     label08:
        if $z0 == 0 goto label10;

     label09:
        $i0 = $b3 + 4;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void send_bits(int,int)>($i0, 3);

        $r1 = r0.<com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Tree l_desc>;

        $i0 = $r1.<com.jcraft.jzlib.Tree: int max_code>;

        $i0 = $i0 + 1;

        $r1 = r0.<com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Tree d_desc>;

        $i1 = $r1.<com.jcraft.jzlib.Tree: int max_code>;

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void send_all_trees(int,int,int)>($i0, $i1, $i2);

        $r2 = r0.<com.jcraft.jzlib.Deflate: short[] dyn_ltree>;

        $r3 = r0.<com.jcraft.jzlib.Deflate: short[] dyn_dtree>;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void compress_block(short[],short[])>($r2, $r3);

        goto label03;

     label10:
        $b3 = 0;

        goto label09;

     label11:
        return;
    }
    void _tr_stored_block(int, int, boolean)
    {
        com.jcraft.jzlib.Deflate r0;
        int $i0, $i1;
        boolean $z0;
        byte $b2;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 := @parameter2: boolean;

        if $z0 == 0 goto label2;

        $b2 = 1;

     label1:
        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void send_bits(int,int)>($b2, 3);

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void copy_block(int,int,boolean)>($i0, $i1, 1);

        return;

     label2:
        $b2 = 0;

        goto label1;
    }
    boolean _tr_tally(int, int)
    {
        com.jcraft.jzlib.Deflate r0;
        int $i0, i1, $i2, $i3;
        byte[] $r1;
        byte $b4;
        short[] $r2;
        short $s5;
        long $l6, $l7, $l8;
        int[] $r3;

        r0 := @this: com.jcraft.jzlib.Deflate;

        i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] pending_buf>;

        $i2 = r0.<com.jcraft.jzlib.Deflate: int d_buf>;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int last_lit>;

        $i3 = $i3 * 2;

        $i2 = $i2 + $i3;

        $i3 = i1 >>> 8;

        $b4 = (byte) $i3;

        $r1[$i2] = $b4;

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] pending_buf>;

        $i2 = r0.<com.jcraft.jzlib.Deflate: int d_buf>;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int last_lit>;

        $i3 = $i3 * 2;

        $i2 = $i2 + $i3;

        $i2 = $i2 + 1;

        $b4 = (byte) i1;

        $r1[$i2] = $b4;

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] pending_buf>;

        $i2 = r0.<com.jcraft.jzlib.Deflate: int l_buf>;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int last_lit>;

        $i2 = $i2 + $i3;

        $b4 = (byte) $i0;

        $r1[$i2] = $b4;

        $i2 = r0.<com.jcraft.jzlib.Deflate: int last_lit>;

        $i2 = $i2 + 1;

        r0.<com.jcraft.jzlib.Deflate: int last_lit> = $i2;

        if i1 != 0 goto label3;

        $r2 = r0.<com.jcraft.jzlib.Deflate: short[] dyn_ltree>;

        i1 = $i0 * 2;

        $s5 = $r2[i1];

        $i0 = $s5 + 1;

        $s5 = (short) $i0;

        $r2[i1] = $s5;

     label1:
        i1 = r0.<com.jcraft.jzlib.Deflate: int last_lit>;

        i1 = i1 & 8191;

        if i1 != 0 goto label5;

        i1 = r0.<com.jcraft.jzlib.Deflate: int level>;

        if i1 <= 2 goto label5;

        i1 = r0.<com.jcraft.jzlib.Deflate: int last_lit>;

        $i0 = i1 * 8;

        i1 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $i2 = r0.<com.jcraft.jzlib.Deflate: int block_start>;

        i1 = i1 - $i2;

        $i2 = 0;

     label2:
        if $i2 >= 30 goto label4;

        $l6 = (long) $i0;

        $r2 = r0.<com.jcraft.jzlib.Deflate: short[] dyn_dtree>;

        $i0 = $i2 * 2;

        $s5 = $r2[$i0];

        $l7 = (long) $s5;

        $r3 = <com.jcraft.jzlib.Tree: int[] extra_dbits>;

        $i0 = $r3[$i2];

        $l8 = (long) $i0;

        $l8 = 5L + $l8;

        $l7 = $l7 * $l8;

        $l6 = $l6 + $l7;

        $i0 = (int) $l6;

        $i2 = $i2 + 1;

        goto label2;

     label3:
        $i2 = r0.<com.jcraft.jzlib.Deflate: int matches>;

        $i2 = $i2 + 1;

        r0.<com.jcraft.jzlib.Deflate: int matches> = $i2;

        i1 = i1 + -1;

        $r2 = r0.<com.jcraft.jzlib.Deflate: short[] dyn_ltree>;

        $r1 = <com.jcraft.jzlib.Tree: byte[] _length_code>;

        $b4 = $r1[$i0];

        $i0 = $b4 + 256;

        $i0 = $i0 + 1;

        $i0 = $i0 * 2;

        $s5 = $r2[$i0];

        $i2 = $s5 + 1;

        $s5 = (short) $i2;

        $r2[$i0] = $s5;

        $r2 = r0.<com.jcraft.jzlib.Deflate: short[] dyn_dtree>;

        i1 = staticinvoke <com.jcraft.jzlib.Tree: int d_code(int)>(i1);

        i1 = i1 * 2;

        $s5 = $r2[i1];

        $i0 = $s5 + 1;

        $s5 = (short) $i0;

        $r2[i1] = $s5;

        goto label1;

     label4:
        $i0 = $i0 >>> 3;

        $i2 = r0.<com.jcraft.jzlib.Deflate: int matches>;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int last_lit>;

        $i3 = $i3 / 2;

        if $i2 >= $i3 goto label5;

        i1 = i1 / 2;

        if $i0 >= i1 goto label5;

        return 1;

     label5:
        i1 = r0.<com.jcraft.jzlib.Deflate: int last_lit>;

        $i0 = r0.<com.jcraft.jzlib.Deflate: int lit_bufsize>;

        $i0 = $i0 + -1;

        if i1 == $i0 goto label6;

        return 0;

     label6:
        return 1;
    }
    void bi_flush()
    {
        com.jcraft.jzlib.Deflate r0;
        int $i0;
        short $s1;
        byte $b2;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $i0 = r0.<com.jcraft.jzlib.Deflate: int bi_valid>;

        if $i0 != 16 goto label1;

        $s1 = r0.<com.jcraft.jzlib.Deflate: short bi_buf>;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void put_short(int)>($s1);

        r0.<com.jcraft.jzlib.Deflate: short bi_buf> = 0;

        r0.<com.jcraft.jzlib.Deflate: int bi_valid> = 0;

        return;

     label1:
        $i0 = r0.<com.jcraft.jzlib.Deflate: int bi_valid>;

        if $i0 < 8 goto label2;

        $s1 = r0.<com.jcraft.jzlib.Deflate: short bi_buf>;

        $b2 = (byte) $s1;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void put_byte(byte)>($b2);

        $s1 = r0.<com.jcraft.jzlib.Deflate: short bi_buf>;

        $i0 = $s1 >>> 8;

        $s1 = (short) $i0;

        r0.<com.jcraft.jzlib.Deflate: short bi_buf> = $s1;

        $i0 = r0.<com.jcraft.jzlib.Deflate: int bi_valid>;

        $i0 = $i0 + -8;

        r0.<com.jcraft.jzlib.Deflate: int bi_valid> = $i0;

     label2:
        return;
    }
    void bi_windup()
    {
        com.jcraft.jzlib.Deflate r0;
        int $i0;
        short $s1;
        byte $b2;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $i0 = r0.<com.jcraft.jzlib.Deflate: int bi_valid>;

        if $i0 <= 8 goto label2;

        $s1 = r0.<com.jcraft.jzlib.Deflate: short bi_buf>;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void put_short(int)>($s1);

     label1:
        r0.<com.jcraft.jzlib.Deflate: short bi_buf> = 0;

        r0.<com.jcraft.jzlib.Deflate: int bi_valid> = 0;

        return;

     label2:
        $i0 = r0.<com.jcraft.jzlib.Deflate: int bi_valid>;

        if $i0 <= 0 goto label1;

        $s1 = r0.<com.jcraft.jzlib.Deflate: short bi_buf>;

        $b2 = (byte) $s1;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void put_byte(byte)>($b2);

        goto label1;
    }
    int build_bl_tree()
    {
        com.jcraft.jzlib.Deflate r0;
        short[] $r1;
        com.jcraft.jzlib.Tree $r2;
        int $i0, $i2, $i4;
        byte[] $r3;
        byte $b1;
        short $s3;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $r1 = r0.<com.jcraft.jzlib.Deflate: short[] dyn_ltree>;

        $r2 = r0.<com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Tree l_desc>;

        $i0 = $r2.<com.jcraft.jzlib.Tree: int max_code>;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void scan_tree(short[],int)>($r1, $i0);

        $r1 = r0.<com.jcraft.jzlib.Deflate: short[] dyn_dtree>;

        $r2 = r0.<com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Tree d_desc>;

        $i0 = $r2.<com.jcraft.jzlib.Tree: int max_code>;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void scan_tree(short[],int)>($r1, $i0);

        $r2 = r0.<com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Tree bl_desc>;

        virtualinvoke $r2.<com.jcraft.jzlib.Tree: void build_tree(com.jcraft.jzlib.Deflate)>(r0);

        $i0 = 18;

     label1:
        if $i0 < 3 goto label2;

        $r1 = r0.<com.jcraft.jzlib.Deflate: short[] bl_tree>;

        $r3 = <com.jcraft.jzlib.Tree: byte[] bl_order>;

        $b1 = $r3[$i0];

        $i2 = $b1 * 2;

        $i2 = $i2 + 1;

        $s3 = $r1[$i2];

        if $s3 == 0 goto label3;

     label2:
        $i2 = r0.<com.jcraft.jzlib.Deflate: int opt_len>;

        $i4 = $i0 + 1;

        $i4 = $i4 * 3;

        $i4 = $i4 + 5;

        $i4 = $i4 + 5;

        $i4 = $i4 + 4;

        $i2 = $i2 + $i4;

        r0.<com.jcraft.jzlib.Deflate: int opt_len> = $i2;

        return $i0;

     label3:
        $i0 = $i0 + -1;

        goto label1;
    }
    void compress_block(short[], short[])
    {
        com.jcraft.jzlib.Deflate r0;
        short[] $r1, $r2;
        int $i0, $i1, i2, $i3, $i6;
        byte[] $r3;
        byte $b4;
        short $s5;
        int[] $r4;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $r1 := @parameter0: short[];

        $r2 := @parameter1: short[];

        i2 = 0;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int last_lit>;

        if $i3 == 0 goto label3;

     label1:
        $r3 = r0.<com.jcraft.jzlib.Deflate: byte[] pending_buf>;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int d_buf>;

        $i0 = i2 * 2;

        $i3 = $i3 + $i0;

        $b4 = $r3[$i3];

        $i3 = $b4 << 8;

        $i3 = $i3 & 65280;

        $r3 = r0.<com.jcraft.jzlib.Deflate: byte[] pending_buf>;

        $i1 = r0.<com.jcraft.jzlib.Deflate: int d_buf>;

        $i0 = i2 * 2;

        $i0 = $i1 + $i0;

        $i0 = $i0 + 1;

        $b4 = $r3[$i0];

        $i0 = $b4 & 255;

        $i3 = $i3 | $i0;

        $r3 = r0.<com.jcraft.jzlib.Deflate: byte[] pending_buf>;

        $i0 = r0.<com.jcraft.jzlib.Deflate: int l_buf>;

        $i0 = $i0 + i2;

        $b4 = $r3[$i0];

        $i0 = $b4 & 255;

        i2 = i2 + 1;

        if $i3 != 0 goto label4;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void send_code(int,short[])>($i0, $r1);

     label2:
        $i3 = r0.<com.jcraft.jzlib.Deflate: int last_lit>;

        if i2 < $i3 goto label1;

     label3:
        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void send_code(int,short[])>(256, $r1);

        $s5 = $r1[513];

        r0.<com.jcraft.jzlib.Deflate: int last_eob_len> = $s5;

        return;

     label4:
        $r3 = <com.jcraft.jzlib.Tree: byte[] _length_code>;

        $b4 = $r3[$i0];

        $i1 = $b4 + 256;

        $i1 = $i1 + 1;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void send_code(int,short[])>($i1, $r1);

        $r4 = <com.jcraft.jzlib.Tree: int[] extra_lbits>;

        $i1 = $r4[$b4];

        if $i1 == 0 goto label5;

        $r4 = <com.jcraft.jzlib.Tree: int[] base_length>;

        $i6 = $r4[$b4];

        $i0 = $i0 - $i6;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void send_bits(int,int)>($i0, $i1);

     label5:
        $i0 = $i3 + -1;

        $i1 = staticinvoke <com.jcraft.jzlib.Tree: int d_code(int)>($i0);

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void send_code(int,short[])>($i1, $r2);

        $r4 = <com.jcraft.jzlib.Tree: int[] extra_dbits>;

        $i3 = $r4[$i1];

        if $i3 == 0 goto label2;

        $r4 = <com.jcraft.jzlib.Tree: int[] base_dist>;

        $i1 = $r4[$i1];

        $i0 = $i0 - $i1;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void send_bits(int,int)>($i0, $i3);

        goto label2;
    }
    void copy_block(int, int, boolean)
    {
        com.jcraft.jzlib.Deflate r0;
        int $i0, $i1, $i3;
        boolean $z0;
        short $s2;
        byte[] $r1;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 := @parameter2: boolean;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void bi_windup()>();

        r0.<com.jcraft.jzlib.Deflate: int last_eob_len> = 8;

        if $z0 == 0 goto label1;

        $s2 = (short) $i1;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void put_short(int)>($s2);

        $i3 = $i1 ^ -1;

        $s2 = (short) $i3;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void put_short(int)>($s2);

     label1:
        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void put_byte(byte[],int,int)>($r1, $i0, $i1);

        return;
    }
    int deflate(com.jcraft.jzlib.ZStream, int)
    {
        com.jcraft.jzlib.Deflate r0;
        com.jcraft.jzlib.ZStream $r1;
        int $i0, i1, $i2, $i3;
        byte[] $r2;
        java.lang.String[] $r3;
        java.lang.String $r4;
        long $l4;
        com.jcraft.jzlib.Adler32 $r5;
        com.jcraft.jzlib.Deflate$Config[] $r6;
        com.jcraft.jzlib.Deflate$Config $r7;
        short[] $r8;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $r1 := @parameter0: com.jcraft.jzlib.ZStream;

        $i0 := @parameter1: int;

        if $i0 > 4 goto label01;

        if $i0 >= 0 goto label02;

     label01:
        return -2;

     label02:
        $r2 = $r1.<com.jcraft.jzlib.ZStream: byte[] next_out>;

        if $r2 == null goto label04;

        $r2 = $r1.<com.jcraft.jzlib.ZStream: byte[] next_in>;

        if $r2 != null goto label03;

        i1 = $r1.<com.jcraft.jzlib.ZStream: int avail_in>;

        if i1 != 0 goto label04;

     label03:
        i1 = r0.<com.jcraft.jzlib.Deflate: int status>;

        if i1 != 666 goto label05;

        if $i0 == 4 goto label05;

     label04:
        $r3 = <com.jcraft.jzlib.Deflate: java.lang.String[] z_errmsg>;

        $r4 = $r3[4];

        $r1.<com.jcraft.jzlib.ZStream: java.lang.String msg> = $r4;

        return -2;

     label05:
        i1 = $r1.<com.jcraft.jzlib.ZStream: int avail_out>;

        if i1 != 0 goto label06;

        $r3 = <com.jcraft.jzlib.Deflate: java.lang.String[] z_errmsg>;

        $r4 = $r3[7];

        $r1.<com.jcraft.jzlib.ZStream: java.lang.String msg> = $r4;

        return -5;

     label06:
        r0.<com.jcraft.jzlib.Deflate: com.jcraft.jzlib.ZStream strm> = $r1;

        i1 = r0.<com.jcraft.jzlib.Deflate: int last_flush>;

        r0.<com.jcraft.jzlib.Deflate: int last_flush> = $i0;

        $i2 = r0.<com.jcraft.jzlib.Deflate: int status>;

        if $i2 != 42 goto label10;

        $i2 = r0.<com.jcraft.jzlib.Deflate: int w_bits>;

        $i2 = $i2 + -8;

        $i2 = $i2 << 4;

        $i2 = $i2 + 8;

        $i2 = $i2 << 8;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int level>;

        $i3 = $i3 + -1;

        $i3 = $i3 & 255;

        $i3 = $i3 >> 1;

        if $i3 <= 3 goto label07;

        $i3 = 3;

     label07:
        $i3 = $i3 << 6;

        $i2 = $i2 | $i3;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        if $i3 == 0 goto label08;

        $i2 = $i2 | 32;

     label08:
        $i3 = $i2 % 31;

        $i3 = 31 - $i3;

        $i2 = $i2 + $i3;

        r0.<com.jcraft.jzlib.Deflate: int status> = 113;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void putShortMSB(int)>($i2);

        $i2 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        if $i2 == 0 goto label09;

        $l4 = $r1.<com.jcraft.jzlib.ZStream: long adler>;

        $l4 = $l4 >>> 16;

        $i2 = (int) $l4;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void putShortMSB(int)>($i2);

        $l4 = $r1.<com.jcraft.jzlib.ZStream: long adler>;

        $l4 = $l4 & 65535L;

        $i2 = (int) $l4;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void putShortMSB(int)>($i2);

     label09:
        $r5 = $r1.<com.jcraft.jzlib.ZStream: com.jcraft.jzlib.Adler32 _adler>;

        $l4 = virtualinvoke $r5.<com.jcraft.jzlib.Adler32: long adler32(long,byte[],int,int)>(0L, null, 0, 0);

        $r1.<com.jcraft.jzlib.ZStream: long adler> = $l4;

     label10:
        $i2 = r0.<com.jcraft.jzlib.Deflate: int pending>;

        if $i2 == 0 goto label11;

        virtualinvoke $r1.<com.jcraft.jzlib.ZStream: void flush_pending()>();

        i1 = $r1.<com.jcraft.jzlib.ZStream: int avail_out>;

        if i1 != 0 goto label12;

        r0.<com.jcraft.jzlib.Deflate: int last_flush> = -1;

        return 0;

     label11:
        $i2 = $r1.<com.jcraft.jzlib.ZStream: int avail_in>;

        if $i2 != 0 goto label12;

        if $i0 > i1 goto label12;

        if $i0 == 4 goto label12;

        $r3 = <com.jcraft.jzlib.Deflate: java.lang.String[] z_errmsg>;

        $r4 = $r3[7];

        $r1.<com.jcraft.jzlib.ZStream: java.lang.String msg> = $r4;

        return -5;

     label12:
        i1 = r0.<com.jcraft.jzlib.Deflate: int status>;

        if i1 != 666 goto label13;

        i1 = $r1.<com.jcraft.jzlib.ZStream: int avail_in>;

        if i1 == 0 goto label13;

        $r3 = <com.jcraft.jzlib.Deflate: java.lang.String[] z_errmsg>;

        $r4 = $r3[7];

        $r1.<com.jcraft.jzlib.ZStream: java.lang.String msg> = $r4;

        return -5;

     label13:
        i1 = $r1.<com.jcraft.jzlib.ZStream: int avail_in>;

        if i1 != 0 goto label14;

        i1 = r0.<com.jcraft.jzlib.Deflate: int lookahead>;

        if i1 != 0 goto label14;

        if $i0 == 0 goto label27;

        i1 = r0.<com.jcraft.jzlib.Deflate: int status>;

        if i1 == 666 goto label27;

     label14:
        i1 = -1;

        $r6 = <com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Deflate$Config[] config_table>;

        $i2 = r0.<com.jcraft.jzlib.Deflate: int level>;

        $r7 = $r6[$i2];

        $i2 = $r7.<com.jcraft.jzlib.Deflate$Config: int func>;

        lookupswitch($i2)
        {
            case 0: goto label20;
            case 1: goto label21;
            case 2: goto label22;
            default: goto label15;
        };

     label15:
        if i1 == 2 goto label16;

        if i1 != 3 goto label17;

     label16:
        r0.<com.jcraft.jzlib.Deflate: int status> = 666;

     label17:
        if i1 == 0 goto label18;

        if i1 != 2 goto label23;

     label18:
        $i0 = $r1.<com.jcraft.jzlib.ZStream: int avail_out>;

        if $i0 != 0 goto label19;

        r0.<com.jcraft.jzlib.Deflate: int last_flush> = -1;

     label19:
        return 0;

     label20:
        i1 = virtualinvoke r0.<com.jcraft.jzlib.Deflate: int deflate_stored(int)>($i0);

        goto label15;

     label21:
        i1 = virtualinvoke r0.<com.jcraft.jzlib.Deflate: int deflate_fast(int)>($i0);

        goto label15;

     label22:
        i1 = virtualinvoke r0.<com.jcraft.jzlib.Deflate: int deflate_slow(int)>($i0);

        goto label15;

     label23:
        if i1 != 1 goto label27;

        if $i0 != 1 goto label25;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void _tr_align()>();

     label24:
        virtualinvoke $r1.<com.jcraft.jzlib.ZStream: void flush_pending()>();

        i1 = $r1.<com.jcraft.jzlib.ZStream: int avail_out>;

        if i1 != 0 goto label27;

        r0.<com.jcraft.jzlib.Deflate: int last_flush> = -1;

        return 0;

     label25:
        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void _tr_stored_block(int,int,boolean)>(0, 0, 0);

        if $i0 != 3 goto label24;

        i1 = 0;

     label26:
        $i2 = r0.<com.jcraft.jzlib.Deflate: int hash_size>;

        if i1 >= $i2 goto label24;

        $r8 = r0.<com.jcraft.jzlib.Deflate: short[] head>;

        $r8[i1] = 0;

        i1 = i1 + 1;

        goto label26;

     label27:
        if $i0 == 4 goto label28;

        return 0;

     label28:
        $i0 = r0.<com.jcraft.jzlib.Deflate: int noheader>;

        if $i0 == 0 goto label29;

        return 1;

     label29:
        $l4 = $r1.<com.jcraft.jzlib.ZStream: long adler>;

        $l4 = $l4 >>> 16;

        $i0 = (int) $l4;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void putShortMSB(int)>($i0);

        $l4 = $r1.<com.jcraft.jzlib.ZStream: long adler>;

        $l4 = $l4 & 65535L;

        $i0 = (int) $l4;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void putShortMSB(int)>($i0);

        virtualinvoke $r1.<com.jcraft.jzlib.ZStream: void flush_pending()>();

        r0.<com.jcraft.jzlib.Deflate: int noheader> = -1;

        $i0 = r0.<com.jcraft.jzlib.Deflate: int pending>;

        if $i0 == 0 goto label30;

        return 0;

     label30:
        return 1;
    }
    int deflateEnd()
    {
        com.jcraft.jzlib.Deflate r0;
        int $i0;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $i0 = r0.<com.jcraft.jzlib.Deflate: int status>;

        if $i0 == 42 goto label1;

        $i0 = r0.<com.jcraft.jzlib.Deflate: int status>;

        if $i0 == 113 goto label1;

        $i0 = r0.<com.jcraft.jzlib.Deflate: int status>;

        if $i0 == 666 goto label1;

        return -2;

     label1:
        r0.<com.jcraft.jzlib.Deflate: byte[] pending_buf> = null;

        r0.<com.jcraft.jzlib.Deflate: short[] head> = null;

        r0.<com.jcraft.jzlib.Deflate: short[] prev> = null;

        r0.<com.jcraft.jzlib.Deflate: byte[] window> = null;

        $i0 = r0.<com.jcraft.jzlib.Deflate: int status>;

        if $i0 != 113 goto label2;

        return -3;

     label2:
        return 0;
    }
    int deflateInit(com.jcraft.jzlib.ZStream, int)
    {
        com.jcraft.jzlib.Deflate r0;
        com.jcraft.jzlib.ZStream $r1;
        int $i0;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $r1 := @parameter0: com.jcraft.jzlib.ZStream;

        $i0 := @parameter1: int;

        $i0 = virtualinvoke r0.<com.jcraft.jzlib.Deflate: int deflateInit(com.jcraft.jzlib.ZStream,int,int)>($r1, $i0, 15);

        return $i0;
    }
    int deflateInit(com.jcraft.jzlib.ZStream, int, int)
    {
        com.jcraft.jzlib.Deflate r0;
        com.jcraft.jzlib.ZStream $r1;
        int $i0, $i1;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $r1 := @parameter0: com.jcraft.jzlib.ZStream;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i0 = virtualinvoke r0.<com.jcraft.jzlib.Deflate: int deflateInit2(com.jcraft.jzlib.ZStream,int,int,int,int,int)>($r1, $i0, 8, $i1, 8, 0);

        return $i0;
    }
    int deflateInit2(com.jcraft.jzlib.ZStream, int, int, int, int, int)
    {
        com.jcraft.jzlib.Deflate r0;
        com.jcraft.jzlib.ZStream $r1;
        int $i0, $i1, $i2, $i3, $i4;
        byte b5;
        byte[] $r2;
        short[] $r3;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $r1 := @parameter0: com.jcraft.jzlib.ZStream;

        $i3 := @parameter1: int;

        $i0 := @parameter2: int;

        $i4 := @parameter3: int;

        $i1 := @parameter4: int;

        $i2 := @parameter5: int;

        b5 = 0;

        $r1.<com.jcraft.jzlib.ZStream: java.lang.String msg> = null;

        if $i3 != -1 goto label1;

        $i3 = 6;

     label1:
        if $i4 >= 0 goto label2;

        b5 = 1;

        $i4 = neg $i4;

     label2:
        if $i1 < 1 goto label3;

        if $i1 > 9 goto label3;

        if $i0 != 8 goto label3;

        if $i4 < 9 goto label3;

        if $i4 > 15 goto label3;

        if $i3 < 0 goto label3;

        if $i3 > 9 goto label3;

        if $i2 < 0 goto label3;

        if $i2 <= 2 goto label4;

     label3:
        return -2;

     label4:
        $r1.<com.jcraft.jzlib.ZStream: com.jcraft.jzlib.Deflate dstate> = r0;

        r0.<com.jcraft.jzlib.Deflate: int noheader> = b5;

        r0.<com.jcraft.jzlib.Deflate: int w_bits> = $i4;

        $i4 = r0.<com.jcraft.jzlib.Deflate: int w_bits>;

        $i4 = 1 << $i4;

        r0.<com.jcraft.jzlib.Deflate: int w_size> = $i4;

        $i4 = r0.<com.jcraft.jzlib.Deflate: int w_size>;

        $i4 = $i4 + -1;

        r0.<com.jcraft.jzlib.Deflate: int w_mask> = $i4;

        $i4 = $i1 + 7;

        r0.<com.jcraft.jzlib.Deflate: int hash_bits> = $i4;

        $i4 = r0.<com.jcraft.jzlib.Deflate: int hash_bits>;

        $i4 = 1 << $i4;

        r0.<com.jcraft.jzlib.Deflate: int hash_size> = $i4;

        $i4 = r0.<com.jcraft.jzlib.Deflate: int hash_size>;

        $i4 = $i4 + -1;

        r0.<com.jcraft.jzlib.Deflate: int hash_mask> = $i4;

        $i4 = r0.<com.jcraft.jzlib.Deflate: int hash_bits>;

        $i4 = $i4 + 3;

        $i4 = $i4 + -1;

        $i4 = $i4 / 3;

        r0.<com.jcraft.jzlib.Deflate: int hash_shift> = $i4;

        $i4 = r0.<com.jcraft.jzlib.Deflate: int w_size>;

        $i4 = $i4 * 2;

        $r2 = newarray (byte)[$i4];

        r0.<com.jcraft.jzlib.Deflate: byte[] window> = $r2;

        $i4 = r0.<com.jcraft.jzlib.Deflate: int w_size>;

        $r3 = newarray (short)[$i4];

        r0.<com.jcraft.jzlib.Deflate: short[] prev> = $r3;

        $i4 = r0.<com.jcraft.jzlib.Deflate: int hash_size>;

        $r3 = newarray (short)[$i4];

        r0.<com.jcraft.jzlib.Deflate: short[] head> = $r3;

        $i4 = $i1 + 6;

        $i4 = 1 << $i4;

        r0.<com.jcraft.jzlib.Deflate: int lit_bufsize> = $i4;

        $i4 = r0.<com.jcraft.jzlib.Deflate: int lit_bufsize>;

        $i4 = $i4 * 4;

        $r2 = newarray (byte)[$i4];

        r0.<com.jcraft.jzlib.Deflate: byte[] pending_buf> = $r2;

        $i4 = r0.<com.jcraft.jzlib.Deflate: int lit_bufsize>;

        $i4 = $i4 * 4;

        r0.<com.jcraft.jzlib.Deflate: int pending_buf_size> = $i4;

        $i4 = r0.<com.jcraft.jzlib.Deflate: int lit_bufsize>;

        $i4 = $i4 / 2;

        r0.<com.jcraft.jzlib.Deflate: int d_buf> = $i4;

        $i4 = r0.<com.jcraft.jzlib.Deflate: int lit_bufsize>;

        $i4 = $i4 * 3;

        r0.<com.jcraft.jzlib.Deflate: int l_buf> = $i4;

        r0.<com.jcraft.jzlib.Deflate: int level> = $i3;

        r0.<com.jcraft.jzlib.Deflate: int strategy> = $i2;

        b5 = (byte) $i0;

        r0.<com.jcraft.jzlib.Deflate: byte method> = b5;

        $i3 = virtualinvoke r0.<com.jcraft.jzlib.Deflate: int deflateReset(com.jcraft.jzlib.ZStream)>($r1);

        return $i3;
    }
    int deflateParams(com.jcraft.jzlib.ZStream, int, int)
    {
        com.jcraft.jzlib.Deflate r0;
        com.jcraft.jzlib.ZStream $r1;
        int $i0, $i1, $i2, $i3, $i4;
        com.jcraft.jzlib.Deflate$Config[] $r2;
        com.jcraft.jzlib.Deflate$Config $r3;
        long $l5;
        byte $b6;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $r1 := @parameter0: com.jcraft.jzlib.ZStream;

        $i2 := @parameter1: int;

        $i0 := @parameter2: int;

        $i1 = 0;

        if $i2 != -1 goto label1;

        $i2 = 6;

     label1:
        if $i2 < 0 goto label2;

        if $i2 > 9 goto label2;

        if $i0 < 0 goto label2;

        if $i0 <= 2 goto label3;

     label2:
        return -2;

     label3:
        $r2 = <com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Deflate$Config[] config_table>;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int level>;

        $r3 = $r2[$i3];

        $i3 = $r3.<com.jcraft.jzlib.Deflate$Config: int func>;

        $r2 = <com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Deflate$Config[] config_table>;

        $r3 = $r2[$i2];

        $i4 = $r3.<com.jcraft.jzlib.Deflate$Config: int func>;

        if $i3 == $i4 goto label4;

        $l5 = $r1.<com.jcraft.jzlib.ZStream: long total_in>;

        $b6 = $l5 cmp 0L;

        if $b6 == 0 goto label4;

        $i1 = virtualinvoke $r1.<com.jcraft.jzlib.ZStream: int deflate(int)>(1);

     label4:
        $i3 = r0.<com.jcraft.jzlib.Deflate: int level>;

        if $i3 == $i2 goto label5;

        r0.<com.jcraft.jzlib.Deflate: int level> = $i2;

        $r2 = <com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Deflate$Config[] config_table>;

        $i2 = r0.<com.jcraft.jzlib.Deflate: int level>;

        $r3 = $r2[$i2];

        $i2 = $r3.<com.jcraft.jzlib.Deflate$Config: int max_lazy>;

        r0.<com.jcraft.jzlib.Deflate: int max_lazy_match> = $i2;

        $r2 = <com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Deflate$Config[] config_table>;

        $i2 = r0.<com.jcraft.jzlib.Deflate: int level>;

        $r3 = $r2[$i2];

        $i2 = $r3.<com.jcraft.jzlib.Deflate$Config: int good_length>;

        r0.<com.jcraft.jzlib.Deflate: int good_match> = $i2;

        $r2 = <com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Deflate$Config[] config_table>;

        $i2 = r0.<com.jcraft.jzlib.Deflate: int level>;

        $r3 = $r2[$i2];

        $i2 = $r3.<com.jcraft.jzlib.Deflate$Config: int nice_length>;

        r0.<com.jcraft.jzlib.Deflate: int nice_match> = $i2;

        $r2 = <com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Deflate$Config[] config_table>;

        $i2 = r0.<com.jcraft.jzlib.Deflate: int level>;

        $r3 = $r2[$i2];

        $i2 = $r3.<com.jcraft.jzlib.Deflate$Config: int max_chain>;

        r0.<com.jcraft.jzlib.Deflate: int max_chain_length> = $i2;

     label5:
        r0.<com.jcraft.jzlib.Deflate: int strategy> = $i0;

        return $i1;
    }
    int deflateReset(com.jcraft.jzlib.ZStream)
    {
        com.jcraft.jzlib.Deflate r0;
        com.jcraft.jzlib.ZStream $r1;
        com.jcraft.jzlib.Adler32 $r2;
        long $l0;
        int $i1;
        byte $b2;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $r1 := @parameter0: com.jcraft.jzlib.ZStream;

        $r1.<com.jcraft.jzlib.ZStream: long total_out> = 0L;

        $r1.<com.jcraft.jzlib.ZStream: long total_in> = 0L;

        $r1.<com.jcraft.jzlib.ZStream: java.lang.String msg> = null;

        $r1.<com.jcraft.jzlib.ZStream: int data_type> = 2;

        r0.<com.jcraft.jzlib.Deflate: int pending> = 0;

        r0.<com.jcraft.jzlib.Deflate: int pending_out> = 0;

        $i1 = r0.<com.jcraft.jzlib.Deflate: int noheader>;

        if $i1 >= 0 goto label1;

        r0.<com.jcraft.jzlib.Deflate: int noheader> = 0;

     label1:
        $i1 = r0.<com.jcraft.jzlib.Deflate: int noheader>;

        if $i1 == 0 goto label3;

        $b2 = 113;

     label2:
        r0.<com.jcraft.jzlib.Deflate: int status> = $b2;

        $r2 = $r1.<com.jcraft.jzlib.ZStream: com.jcraft.jzlib.Adler32 _adler>;

        $l0 = virtualinvoke $r2.<com.jcraft.jzlib.Adler32: long adler32(long,byte[],int,int)>(0L, null, 0, 0);

        $r1.<com.jcraft.jzlib.ZStream: long adler> = $l0;

        r0.<com.jcraft.jzlib.Deflate: int last_flush> = 0;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void tr_init()>();

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void lm_init()>();

        return 0;

     label3:
        $b2 = 42;

        goto label2;
    }
    int deflateSetDictionary(com.jcraft.jzlib.ZStream, byte[], int)
    {
        com.jcraft.jzlib.Deflate r0;
        com.jcraft.jzlib.ZStream $r1;
        byte[] $r2, $r4;
        int $i0, i2, i3, $i4;
        long $l1;
        com.jcraft.jzlib.Adler32 $r3;
        byte $b5;
        short[] $r5, $r6;
        short $s6;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $r1 := @parameter0: com.jcraft.jzlib.ZStream;

        $r2 := @parameter1: byte[];

        $i0 := @parameter2: int;

        i2 = $i0;

        i3 = 0;

        if $r2 == null goto label1;

        $i4 = r0.<com.jcraft.jzlib.Deflate: int status>;

        if $i4 == 42 goto label2;

     label1:
        return -2;

     label2:
        $r3 = $r1.<com.jcraft.jzlib.ZStream: com.jcraft.jzlib.Adler32 _adler>;

        $l1 = $r1.<com.jcraft.jzlib.ZStream: long adler>;

        $l1 = virtualinvoke $r3.<com.jcraft.jzlib.Adler32: long adler32(long,byte[],int,int)>($l1, $r2, 0, $i0);

        $r1.<com.jcraft.jzlib.ZStream: long adler> = $l1;

        if $i0 < 3 goto label5;

        $i4 = r0.<com.jcraft.jzlib.Deflate: int w_size>;

        $i4 = $i4 + -262;

        if $i0 <= $i4 goto label3;

        i2 = r0.<com.jcraft.jzlib.Deflate: int w_size>;

        i2 = i2 + -262;

        i3 = $i0 - i2;

     label3:
        $r4 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, i3, $r4, 0, i2);

        r0.<com.jcraft.jzlib.Deflate: int strstart> = i2;

        r0.<com.jcraft.jzlib.Deflate: int block_start> = i2;

        $r2 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        $b5 = $r2[0];

        $i0 = $b5 & 255;

        r0.<com.jcraft.jzlib.Deflate: int ins_h> = $i0;

        $i0 = r0.<com.jcraft.jzlib.Deflate: int ins_h>;

        i3 = r0.<com.jcraft.jzlib.Deflate: int hash_shift>;

        $i0 = $i0 << i3;

        $r2 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        $b5 = $r2[1];

        i3 = $b5 & 255;

        $i0 = $i0 ^ i3;

        i3 = r0.<com.jcraft.jzlib.Deflate: int hash_mask>;

        $i0 = $i0 & i3;

        r0.<com.jcraft.jzlib.Deflate: int ins_h> = $i0;

        $i0 = 0;

     label4:
        i3 = i2 + -3;

        if $i0 > i3 goto label5;

        i3 = r0.<com.jcraft.jzlib.Deflate: int ins_h>;

        $i4 = r0.<com.jcraft.jzlib.Deflate: int hash_shift>;

        i3 = i3 << $i4;

        $r2 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        $i4 = $i0 + 2;

        $b5 = $r2[$i4];

        $i4 = $b5 & 255;

        i3 = i3 ^ $i4;

        $i4 = r0.<com.jcraft.jzlib.Deflate: int hash_mask>;

        i3 = i3 & $i4;

        r0.<com.jcraft.jzlib.Deflate: int ins_h> = i3;

        $r5 = r0.<com.jcraft.jzlib.Deflate: short[] prev>;

        i3 = r0.<com.jcraft.jzlib.Deflate: int w_mask>;

        i3 = i3 & $i0;

        $r6 = r0.<com.jcraft.jzlib.Deflate: short[] head>;

        $i4 = r0.<com.jcraft.jzlib.Deflate: int ins_h>;

        $s6 = $r6[$i4];

        $r5[i3] = $s6;

        $r5 = r0.<com.jcraft.jzlib.Deflate: short[] head>;

        i3 = r0.<com.jcraft.jzlib.Deflate: int ins_h>;

        $s6 = (short) $i0;

        $r5[i3] = $s6;

        $i0 = $i0 + 1;

        goto label4;

     label5:
        return 0;
    }
    int deflate_fast(int)
    {
        com.jcraft.jzlib.Deflate r0;
        int $i0, i2, $i3, $i6;
        byte $b1, $b4;
        boolean $z0;
        com.jcraft.jzlib.ZStream $r1;
        byte[] $r2;
        short[] $r3, $r4;
        short $s5;
        long $l7;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $i0 := @parameter0: int;

        $b1 = 1;

        i2 = 0;

     label01:
        $i3 = r0.<com.jcraft.jzlib.Deflate: int lookahead>;

        if $i3 >= 262 goto label04;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void fill_window()>();

        $i3 = r0.<com.jcraft.jzlib.Deflate: int lookahead>;

        if $i3 >= 262 goto label02;

        if $i0 != 0 goto label02;

        return 0;

     label02:
        $i3 = r0.<com.jcraft.jzlib.Deflate: int lookahead>;

        if $i3 != 0 goto label04;

        if $i0 != 4 goto label11;

        $z0 = 1;

     label03:
        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void flush_block_only(boolean)>($z0);

        $r1 = r0.<com.jcraft.jzlib.Deflate: com.jcraft.jzlib.ZStream strm>;

        i2 = $r1.<com.jcraft.jzlib.ZStream: int avail_out>;

        if i2 != 0 goto label12;

        if $i0 != 4 goto label14;

        return 2;

     label04:
        $i3 = r0.<com.jcraft.jzlib.Deflate: int lookahead>;

        if $i3 < 3 goto label05;

        i2 = r0.<com.jcraft.jzlib.Deflate: int ins_h>;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int hash_shift>;

        i2 = i2 << $i3;

        $r2 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $i3 = $i3 + 2;

        $b4 = $r2[$i3];

        $i3 = $b4 & 255;

        i2 = i2 ^ $i3;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int hash_mask>;

        i2 = i2 & $i3;

        r0.<com.jcraft.jzlib.Deflate: int ins_h> = i2;

        $r3 = r0.<com.jcraft.jzlib.Deflate: short[] head>;

        i2 = r0.<com.jcraft.jzlib.Deflate: int ins_h>;

        $s5 = $r3[i2];

        i2 = $s5 & 65535;

        $r3 = r0.<com.jcraft.jzlib.Deflate: short[] prev>;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $i6 = r0.<com.jcraft.jzlib.Deflate: int w_mask>;

        $i3 = $i3 & $i6;

        $r4 = r0.<com.jcraft.jzlib.Deflate: short[] head>;

        $i6 = r0.<com.jcraft.jzlib.Deflate: int ins_h>;

        $s5 = $r4[$i6];

        $r3[$i3] = $s5;

        $r3 = r0.<com.jcraft.jzlib.Deflate: short[] head>;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int ins_h>;

        $i6 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $s5 = (short) $i6;

        $r3[$i3] = $s5;

     label05:
        $l7 = (long) i2;

        $b4 = $l7 cmp 0L;

        if $b4 == 0 goto label06;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $i3 = $i3 - i2;

        $i3 = $i3 & 65535;

        $i6 = r0.<com.jcraft.jzlib.Deflate: int w_size>;

        $i6 = $i6 + -262;

        if $i3 > $i6 goto label06;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int strategy>;

        if $i3 == 2 goto label06;

        $i3 = virtualinvoke r0.<com.jcraft.jzlib.Deflate: int longest_match(int)>(i2);

        r0.<com.jcraft.jzlib.Deflate: int match_length> = $i3;

     label06:
        $i3 = r0.<com.jcraft.jzlib.Deflate: int match_length>;

        if $i3 < 3 goto label10;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $i6 = r0.<com.jcraft.jzlib.Deflate: int match_start>;

        $i3 = $i3 - $i6;

        $i6 = r0.<com.jcraft.jzlib.Deflate: int match_length>;

        $i6 = $i6 + -3;

        $z0 = virtualinvoke r0.<com.jcraft.jzlib.Deflate: boolean _tr_tally(int,int)>($i3, $i6);

        $i3 = r0.<com.jcraft.jzlib.Deflate: int lookahead>;

        $i6 = r0.<com.jcraft.jzlib.Deflate: int match_length>;

        $i3 = $i3 - $i6;

        r0.<com.jcraft.jzlib.Deflate: int lookahead> = $i3;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int match_length>;

        $i6 = r0.<com.jcraft.jzlib.Deflate: int max_lazy_match>;

        if $i3 > $i6 goto label09;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int lookahead>;

        if $i3 < 3 goto label09;

        i2 = r0.<com.jcraft.jzlib.Deflate: int match_length>;

        i2 = i2 + -1;

        r0.<com.jcraft.jzlib.Deflate: int match_length> = i2;

     label07:
        i2 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        i2 = i2 + 1;

        r0.<com.jcraft.jzlib.Deflate: int strstart> = i2;

        i2 = r0.<com.jcraft.jzlib.Deflate: int ins_h>;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int hash_shift>;

        i2 = i2 << $i3;

        $r2 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $i3 = $i3 + 2;

        $b4 = $r2[$i3];

        $i3 = $b4 & 255;

        i2 = i2 ^ $i3;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int hash_mask>;

        i2 = i2 & $i3;

        r0.<com.jcraft.jzlib.Deflate: int ins_h> = i2;

        $r3 = r0.<com.jcraft.jzlib.Deflate: short[] head>;

        i2 = r0.<com.jcraft.jzlib.Deflate: int ins_h>;

        $s5 = $r3[i2];

        i2 = $s5 & 65535;

        $r3 = r0.<com.jcraft.jzlib.Deflate: short[] prev>;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $i6 = r0.<com.jcraft.jzlib.Deflate: int w_mask>;

        $i3 = $i3 & $i6;

        $r4 = r0.<com.jcraft.jzlib.Deflate: short[] head>;

        $i6 = r0.<com.jcraft.jzlib.Deflate: int ins_h>;

        $s5 = $r4[$i6];

        $r3[$i3] = $s5;

        $r3 = r0.<com.jcraft.jzlib.Deflate: short[] head>;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int ins_h>;

        $i6 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $s5 = (short) $i6;

        $r3[$i3] = $s5;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int match_length>;

        $i3 = $i3 + -1;

        r0.<com.jcraft.jzlib.Deflate: int match_length> = $i3;

        if $i3 != 0 goto label07;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $i3 = $i3 + 1;

        r0.<com.jcraft.jzlib.Deflate: int strstart> = $i3;

     label08:
        if $z0 == 0 goto label01;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void flush_block_only(boolean)>(0);

        $r1 = r0.<com.jcraft.jzlib.Deflate: com.jcraft.jzlib.ZStream strm>;

        $i3 = $r1.<com.jcraft.jzlib.ZStream: int avail_out>;

        if $i3 != 0 goto label01;

        return 0;

     label09:
        $i3 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $i6 = r0.<com.jcraft.jzlib.Deflate: int match_length>;

        $i3 = $i3 + $i6;

        r0.<com.jcraft.jzlib.Deflate: int strstart> = $i3;

        r0.<com.jcraft.jzlib.Deflate: int match_length> = 0;

        $r2 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $b4 = $r2[$i3];

        $i3 = $b4 & 255;

        r0.<com.jcraft.jzlib.Deflate: int ins_h> = $i3;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int ins_h>;

        $i6 = r0.<com.jcraft.jzlib.Deflate: int hash_shift>;

        $i3 = $i3 << $i6;

        $r2 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        $i6 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $i6 = $i6 + 1;

        $b4 = $r2[$i6];

        $i6 = $b4 & 255;

        $i3 = $i3 ^ $i6;

        $i6 = r0.<com.jcraft.jzlib.Deflate: int hash_mask>;

        $i3 = $i3 & $i6;

        r0.<com.jcraft.jzlib.Deflate: int ins_h> = $i3;

        goto label08;

     label10:
        $r2 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $b4 = $r2[$i3];

        $i3 = $b4 & 255;

        $z0 = virtualinvoke r0.<com.jcraft.jzlib.Deflate: boolean _tr_tally(int,int)>(0, $i3);

        $i3 = r0.<com.jcraft.jzlib.Deflate: int lookahead>;

        $i3 = $i3 + -1;

        r0.<com.jcraft.jzlib.Deflate: int lookahead> = $i3;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $i3 = $i3 + 1;

        r0.<com.jcraft.jzlib.Deflate: int strstart> = $i3;

        goto label08;

     label11:
        $z0 = 0;

        goto label03;

     label12:
        if $i0 != 4 goto label13;

        $b1 = 3;

     label13:
        return $b1;

     label14:
        return 0;
    }
    int deflate_slow(int)
    {
        com.jcraft.jzlib.Deflate r0;
        int $i0, i1, i3, $i6, $i7;
        byte $b2, $b4;
        byte[] $r1;
        boolean $z0;
        com.jcraft.jzlib.ZStream $r2;
        short[] $r3, $r4;
        short $s5;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $i0 := @parameter0: int;

        $b2 = 1;

        i3 = 0;

     label01:
        i1 = r0.<com.jcraft.jzlib.Deflate: int lookahead>;

        if i1 >= 262 goto label05;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void fill_window()>();

        i1 = r0.<com.jcraft.jzlib.Deflate: int lookahead>;

        if i1 >= 262 goto label02;

        if $i0 != 0 goto label02;

        return 0;

     label02:
        i1 = r0.<com.jcraft.jzlib.Deflate: int lookahead>;

        if i1 != 0 goto label05;

        i3 = r0.<com.jcraft.jzlib.Deflate: int match_available>;

        if i3 == 0 goto label03;

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        i3 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        i3 = i3 + -1;

        $b4 = $r1[i3];

        i3 = $b4 & 255;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: boolean _tr_tally(int,int)>(0, i3);

        r0.<com.jcraft.jzlib.Deflate: int match_available> = 0;

     label03:
        if $i0 != 4 goto label15;

        $z0 = 1;

     label04:
        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void flush_block_only(boolean)>($z0);

        $r2 = r0.<com.jcraft.jzlib.Deflate: com.jcraft.jzlib.ZStream strm>;

        i3 = $r2.<com.jcraft.jzlib.ZStream: int avail_out>;

        if i3 != 0 goto label16;

        if $i0 != 4 goto label18;

        return 2;

     label05:
        i1 = r0.<com.jcraft.jzlib.Deflate: int lookahead>;

        if i1 < 3 goto label06;

        i3 = r0.<com.jcraft.jzlib.Deflate: int ins_h>;

        i1 = r0.<com.jcraft.jzlib.Deflate: int hash_shift>;

        i3 = i3 << i1;

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        i1 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        i1 = i1 + 2;

        $b4 = $r1[i1];

        i1 = $b4 & 255;

        i3 = i3 ^ i1;

        i1 = r0.<com.jcraft.jzlib.Deflate: int hash_mask>;

        i3 = i3 & i1;

        r0.<com.jcraft.jzlib.Deflate: int ins_h> = i3;

        $r3 = r0.<com.jcraft.jzlib.Deflate: short[] head>;

        i3 = r0.<com.jcraft.jzlib.Deflate: int ins_h>;

        $s5 = $r3[i3];

        i3 = $s5 & 65535;

        $r3 = r0.<com.jcraft.jzlib.Deflate: short[] prev>;

        i1 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $i6 = r0.<com.jcraft.jzlib.Deflate: int w_mask>;

        i1 = i1 & $i6;

        $r4 = r0.<com.jcraft.jzlib.Deflate: short[] head>;

        $i6 = r0.<com.jcraft.jzlib.Deflate: int ins_h>;

        $s5 = $r4[$i6];

        $r3[i1] = $s5;

        $r3 = r0.<com.jcraft.jzlib.Deflate: short[] head>;

        i1 = r0.<com.jcraft.jzlib.Deflate: int ins_h>;

        $i6 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $s5 = (short) $i6;

        $r3[i1] = $s5;

     label06:
        i1 = r0.<com.jcraft.jzlib.Deflate: int match_length>;

        r0.<com.jcraft.jzlib.Deflate: int prev_length> = i1;

        i1 = r0.<com.jcraft.jzlib.Deflate: int match_start>;

        r0.<com.jcraft.jzlib.Deflate: int prev_match> = i1;

        r0.<com.jcraft.jzlib.Deflate: int match_length> = 2;

        if i3 == 0 goto label09;

        i1 = r0.<com.jcraft.jzlib.Deflate: int prev_length>;

        $i6 = r0.<com.jcraft.jzlib.Deflate: int max_lazy_match>;

        if i1 >= $i6 goto label09;

        i1 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        i1 = i1 - i3;

        i1 = i1 & 65535;

        $i6 = r0.<com.jcraft.jzlib.Deflate: int w_size>;

        $i6 = $i6 + -262;

        if i1 > $i6 goto label09;

        i1 = r0.<com.jcraft.jzlib.Deflate: int strategy>;

        if i1 == 2 goto label07;

        i1 = virtualinvoke r0.<com.jcraft.jzlib.Deflate: int longest_match(int)>(i3);

        r0.<com.jcraft.jzlib.Deflate: int match_length> = i1;

     label07:
        i1 = r0.<com.jcraft.jzlib.Deflate: int match_length>;

        if i1 > 5 goto label09;

        i1 = r0.<com.jcraft.jzlib.Deflate: int strategy>;

        if i1 == 1 goto label08;

        i1 = r0.<com.jcraft.jzlib.Deflate: int match_length>;

        if i1 != 3 goto label09;

        i1 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $i6 = r0.<com.jcraft.jzlib.Deflate: int match_start>;

        i1 = i1 - $i6;

        if i1 <= 4096 goto label09;

     label08:
        r0.<com.jcraft.jzlib.Deflate: int match_length> = 2;

     label09:
        i1 = r0.<com.jcraft.jzlib.Deflate: int prev_length>;

        if i1 < 3 goto label12;

        i1 = r0.<com.jcraft.jzlib.Deflate: int match_length>;

        $i6 = r0.<com.jcraft.jzlib.Deflate: int prev_length>;

        if i1 > $i6 goto label12;

        i1 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $i6 = r0.<com.jcraft.jzlib.Deflate: int lookahead>;

        i1 = i1 + $i6;

        i1 = i1 + -3;

        $i6 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $i6 = $i6 + -1;

        $i7 = r0.<com.jcraft.jzlib.Deflate: int prev_match>;

        $i6 = $i6 - $i7;

        $i7 = r0.<com.jcraft.jzlib.Deflate: int prev_length>;

        $i7 = $i7 + -3;

        $z0 = virtualinvoke r0.<com.jcraft.jzlib.Deflate: boolean _tr_tally(int,int)>($i6, $i7);

        $i6 = r0.<com.jcraft.jzlib.Deflate: int lookahead>;

        $i7 = r0.<com.jcraft.jzlib.Deflate: int prev_length>;

        $i7 = $i7 + -1;

        $i6 = $i6 - $i7;

        r0.<com.jcraft.jzlib.Deflate: int lookahead> = $i6;

        $i6 = r0.<com.jcraft.jzlib.Deflate: int prev_length>;

        $i6 = $i6 + -2;

        r0.<com.jcraft.jzlib.Deflate: int prev_length> = $i6;

     label10:
        $i6 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $i6 = $i6 + 1;

        r0.<com.jcraft.jzlib.Deflate: int strstart> = $i6;

        if $i6 > i1 goto label11;

        i3 = r0.<com.jcraft.jzlib.Deflate: int ins_h>;

        $i6 = r0.<com.jcraft.jzlib.Deflate: int hash_shift>;

        i3 = i3 << $i6;

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        $i6 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $i6 = $i6 + 2;

        $b4 = $r1[$i6];

        $i6 = $b4 & 255;

        i3 = i3 ^ $i6;

        $i6 = r0.<com.jcraft.jzlib.Deflate: int hash_mask>;

        i3 = i3 & $i6;

        r0.<com.jcraft.jzlib.Deflate: int ins_h> = i3;

        $r3 = r0.<com.jcraft.jzlib.Deflate: short[] head>;

        i3 = r0.<com.jcraft.jzlib.Deflate: int ins_h>;

        $s5 = $r3[i3];

        i3 = $s5 & 65535;

        $r3 = r0.<com.jcraft.jzlib.Deflate: short[] prev>;

        $i6 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $i7 = r0.<com.jcraft.jzlib.Deflate: int w_mask>;

        $i6 = $i6 & $i7;

        $r4 = r0.<com.jcraft.jzlib.Deflate: short[] head>;

        $i7 = r0.<com.jcraft.jzlib.Deflate: int ins_h>;

        $s5 = $r4[$i7];

        $r3[$i6] = $s5;

        $r3 = r0.<com.jcraft.jzlib.Deflate: short[] head>;

        $i6 = r0.<com.jcraft.jzlib.Deflate: int ins_h>;

        $i7 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $s5 = (short) $i7;

        $r3[$i6] = $s5;

     label11:
        $i6 = r0.<com.jcraft.jzlib.Deflate: int prev_length>;

        $i6 = $i6 + -1;

        r0.<com.jcraft.jzlib.Deflate: int prev_length> = $i6;

        if $i6 != 0 goto label10;

        r0.<com.jcraft.jzlib.Deflate: int match_available> = 0;

        r0.<com.jcraft.jzlib.Deflate: int match_length> = 2;

        i1 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        i1 = i1 + 1;

        r0.<com.jcraft.jzlib.Deflate: int strstart> = i1;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void flush_block_only(boolean)>(0);

        $r2 = r0.<com.jcraft.jzlib.Deflate: com.jcraft.jzlib.ZStream strm>;

        i1 = $r2.<com.jcraft.jzlib.ZStream: int avail_out>;

        if i1 != 0 goto label01;

        return 0;

     label12:
        i1 = r0.<com.jcraft.jzlib.Deflate: int match_available>;

        if i1 == 0 goto label14;

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        i1 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        i1 = i1 + -1;

        $b4 = $r1[i1];

        i1 = $b4 & 255;

        $z0 = virtualinvoke r0.<com.jcraft.jzlib.Deflate: boolean _tr_tally(int,int)>(0, i1);

        if $z0 == 0 goto label13;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void flush_block_only(boolean)>(0);

     label13:
        i1 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        i1 = i1 + 1;

        r0.<com.jcraft.jzlib.Deflate: int strstart> = i1;

        i1 = r0.<com.jcraft.jzlib.Deflate: int lookahead>;

        i1 = i1 + -1;

        r0.<com.jcraft.jzlib.Deflate: int lookahead> = i1;

        $r2 = r0.<com.jcraft.jzlib.Deflate: com.jcraft.jzlib.ZStream strm>;

        i1 = $r2.<com.jcraft.jzlib.ZStream: int avail_out>;

        if i1 != 0 goto label01;

        return 0;

     label14:
        r0.<com.jcraft.jzlib.Deflate: int match_available> = 1;

        i1 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        i1 = i1 + 1;

        r0.<com.jcraft.jzlib.Deflate: int strstart> = i1;

        i1 = r0.<com.jcraft.jzlib.Deflate: int lookahead>;

        i1 = i1 + -1;

        r0.<com.jcraft.jzlib.Deflate: int lookahead> = i1;

        goto label01;

     label15:
        $z0 = 0;

        goto label04;

     label16:
        if $i0 != 4 goto label17;

        $b2 = 3;

     label17:
        return $b2;

     label18:
        return 0;
    }
    int deflate_stored(int)
    {
        com.jcraft.jzlib.Deflate r0;
        int $i0, i1, i3, $i4;
        byte $b2;
        boolean $z0;
        com.jcraft.jzlib.ZStream $r1;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $i0 := @parameter0: int;

        $b2 = 1;

        i3 = 65535;

        i1 = r0.<com.jcraft.jzlib.Deflate: int pending_buf_size>;

        i1 = i1 + -5;

        if 65535 <= i1 goto label01;

        i3 = r0.<com.jcraft.jzlib.Deflate: int pending_buf_size>;

        i3 = i3 + -5;

     label01:
        i1 = r0.<com.jcraft.jzlib.Deflate: int lookahead>;

        if i1 > 1 goto label04;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void fill_window()>();

        i1 = r0.<com.jcraft.jzlib.Deflate: int lookahead>;

        if i1 != 0 goto label02;

        if $i0 != 0 goto label02;

        return 0;

     label02:
        i1 = r0.<com.jcraft.jzlib.Deflate: int lookahead>;

        if i1 != 0 goto label04;

        if $i0 != 4 goto label07;

        $z0 = 1;

     label03:
        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void flush_block_only(boolean)>($z0);

        $r1 = r0.<com.jcraft.jzlib.Deflate: com.jcraft.jzlib.ZStream strm>;

        i3 = $r1.<com.jcraft.jzlib.ZStream: int avail_out>;

        if i3 != 0 goto label08;

        if $i0 != 4 goto label10;

        return 2;

     label04:
        i1 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $i4 = r0.<com.jcraft.jzlib.Deflate: int lookahead>;

        i1 = i1 + $i4;

        r0.<com.jcraft.jzlib.Deflate: int strstart> = i1;

        r0.<com.jcraft.jzlib.Deflate: int lookahead> = 0;

        i1 = r0.<com.jcraft.jzlib.Deflate: int block_start>;

        i1 = i1 + i3;

        $i4 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        if $i4 == 0 goto label05;

        $i4 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        if $i4 < i1 goto label06;

     label05:
        $i4 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $i4 = $i4 - i1;

        r0.<com.jcraft.jzlib.Deflate: int lookahead> = $i4;

        r0.<com.jcraft.jzlib.Deflate: int strstart> = i1;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void flush_block_only(boolean)>(0);

        $r1 = r0.<com.jcraft.jzlib.Deflate: com.jcraft.jzlib.ZStream strm>;

        i1 = $r1.<com.jcraft.jzlib.ZStream: int avail_out>;

        if i1 == 0 goto label10;

     label06:
        i1 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $i4 = r0.<com.jcraft.jzlib.Deflate: int block_start>;

        i1 = i1 - $i4;

        $i4 = r0.<com.jcraft.jzlib.Deflate: int w_size>;

        $i4 = $i4 + -262;

        if i1 < $i4 goto label01;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void flush_block_only(boolean)>(0);

        $r1 = r0.<com.jcraft.jzlib.Deflate: com.jcraft.jzlib.ZStream strm>;

        i1 = $r1.<com.jcraft.jzlib.ZStream: int avail_out>;

        if i1 != 0 goto label01;

        return 0;

     label07:
        $z0 = 0;

        goto label03;

     label08:
        if $i0 != 4 goto label09;

        $b2 = 3;

     label09:
        return $b2;

     label10:
        return 0;
    }
    void fill_window()
    {
        com.jcraft.jzlib.Deflate r0;
        int $i0, $i1, $i2, $i3, $i5;
        com.jcraft.jzlib.ZStream $r1;
        byte[] $r2, $r3;
        short[] $r4;
        short $s4;
        byte $b6;

        r0 := @this: com.jcraft.jzlib.Deflate;

     label01:
        $i0 = r0.<com.jcraft.jzlib.Deflate: int window_size>;

        $i1 = r0.<com.jcraft.jzlib.Deflate: int lookahead>;

        $i0 = $i0 - $i1;

        $i1 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $i0 = $i0 - $i1;

        if $i0 != 0 goto label03;

        $i1 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        if $i1 != 0 goto label03;

        $i1 = r0.<com.jcraft.jzlib.Deflate: int lookahead>;

        if $i1 != 0 goto label03;

        $i0 = r0.<com.jcraft.jzlib.Deflate: int w_size>;

     label02:
        $r1 = r0.<com.jcraft.jzlib.Deflate: com.jcraft.jzlib.ZStream strm>;

        $i1 = $r1.<com.jcraft.jzlib.ZStream: int avail_in>;

        if $i1 != 0 goto label11;

        return;

     label03:
        if $i0 != -1 goto label04;

        $i0 = $i0 + -1;

        goto label02;

     label04:
        $i1 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $i2 = r0.<com.jcraft.jzlib.Deflate: int w_size>;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int w_size>;

        $i2 = $i2 + $i3;

        $i2 = $i2 + -262;

        if $i1 < $i2 goto label02;

        $r2 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        $i1 = r0.<com.jcraft.jzlib.Deflate: int w_size>;

        $r3 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        $i2 = r0.<com.jcraft.jzlib.Deflate: int w_size>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i1, $r3, 0, $i2);

        $i1 = r0.<com.jcraft.jzlib.Deflate: int match_start>;

        $i2 = r0.<com.jcraft.jzlib.Deflate: int w_size>;

        $i1 = $i1 - $i2;

        r0.<com.jcraft.jzlib.Deflate: int match_start> = $i1;

        $i1 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $i2 = r0.<com.jcraft.jzlib.Deflate: int w_size>;

        $i1 = $i1 - $i2;

        r0.<com.jcraft.jzlib.Deflate: int strstart> = $i1;

        $i1 = r0.<com.jcraft.jzlib.Deflate: int block_start>;

        $i2 = r0.<com.jcraft.jzlib.Deflate: int w_size>;

        $i1 = $i1 - $i2;

        r0.<com.jcraft.jzlib.Deflate: int block_start> = $i1;

        $i1 = r0.<com.jcraft.jzlib.Deflate: int hash_size>;

        $i2 = $i1;

     label05:
        $r4 = r0.<com.jcraft.jzlib.Deflate: short[] head>;

        $i2 = $i2 + -1;

        $s4 = $r4[$i2];

        $i3 = $s4 & 65535;

        $r4 = r0.<com.jcraft.jzlib.Deflate: short[] head>;

        $i5 = r0.<com.jcraft.jzlib.Deflate: int w_size>;

        if $i3 < $i5 goto label09;

        $i5 = r0.<com.jcraft.jzlib.Deflate: int w_size>;

        $i3 = $i3 - $i5;

        $s4 = (short) $i3;

     label06:
        $r4[$i2] = $s4;

        $i1 = $i1 + -1;

        if $i1 != 0 goto label05;

        $i1 = r0.<com.jcraft.jzlib.Deflate: int w_size>;

        $i2 = $i1;

     label07:
        $r4 = r0.<com.jcraft.jzlib.Deflate: short[] prev>;

        $i2 = $i2 + -1;

        $s4 = $r4[$i2];

        $i3 = $s4 & 65535;

        $r4 = r0.<com.jcraft.jzlib.Deflate: short[] prev>;

        $i5 = r0.<com.jcraft.jzlib.Deflate: int w_size>;

        if $i3 < $i5 goto label10;

        $i5 = r0.<com.jcraft.jzlib.Deflate: int w_size>;

        $i3 = $i3 - $i5;

        $s4 = (short) $i3;

     label08:
        $r4[$i2] = $s4;

        $i1 = $i1 + -1;

        if $i1 != 0 goto label07;

        $i1 = r0.<com.jcraft.jzlib.Deflate: int w_size>;

        $i0 = $i0 + $i1;

        goto label02;

     label09:
        $s4 = 0;

        goto label06;

     label10:
        $s4 = 0;

        goto label08;

     label11:
        $r1 = r0.<com.jcraft.jzlib.Deflate: com.jcraft.jzlib.ZStream strm>;

        $r2 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        $i1 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $i2 = r0.<com.jcraft.jzlib.Deflate: int lookahead>;

        $i1 = $i1 + $i2;

        $i0 = virtualinvoke $r1.<com.jcraft.jzlib.ZStream: int read_buf(byte[],int,int)>($r2, $i1, $i0);

        $i1 = r0.<com.jcraft.jzlib.Deflate: int lookahead>;

        $i0 = $i1 + $i0;

        r0.<com.jcraft.jzlib.Deflate: int lookahead> = $i0;

        $i0 = r0.<com.jcraft.jzlib.Deflate: int lookahead>;

        if $i0 < 3 goto label12;

        $r2 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        $i0 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $b6 = $r2[$i0];

        $i0 = $b6 & 255;

        r0.<com.jcraft.jzlib.Deflate: int ins_h> = $i0;

        $i0 = r0.<com.jcraft.jzlib.Deflate: int ins_h>;

        $i1 = r0.<com.jcraft.jzlib.Deflate: int hash_shift>;

        $i0 = $i0 << $i1;

        $r2 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        $i1 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $i1 = $i1 + 1;

        $b6 = $r2[$i1];

        $i1 = $b6 & 255;

        $i0 = $i0 ^ $i1;

        $i1 = r0.<com.jcraft.jzlib.Deflate: int hash_mask>;

        $i0 = $i0 & $i1;

        r0.<com.jcraft.jzlib.Deflate: int ins_h> = $i0;

     label12:
        $i0 = r0.<com.jcraft.jzlib.Deflate: int lookahead>;

        if $i0 >= 262 goto label13;

        $r1 = r0.<com.jcraft.jzlib.Deflate: com.jcraft.jzlib.ZStream strm>;

        $i0 = $r1.<com.jcraft.jzlib.ZStream: int avail_in>;

        if $i0 != 0 goto label01;

     label13:
        return;
    }
    void flush_block_only(boolean)
    {
        com.jcraft.jzlib.Deflate r0;
        boolean $z0;
        int $i0, $i1, $i2;
        com.jcraft.jzlib.ZStream $r1;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $z0 := @parameter0: boolean;

        $i1 = r0.<com.jcraft.jzlib.Deflate: int block_start>;

        if $i1 < 0 goto label2;

        $i1 = r0.<com.jcraft.jzlib.Deflate: int block_start>;

     label1:
        $i2 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $i0 = r0.<com.jcraft.jzlib.Deflate: int block_start>;

        $i0 = $i2 - $i0;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void _tr_flush_block(int,int,boolean)>($i1, $i0, $z0);

        $i1 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        r0.<com.jcraft.jzlib.Deflate: int block_start> = $i1;

        $r1 = r0.<com.jcraft.jzlib.Deflate: com.jcraft.jzlib.ZStream strm>;

        virtualinvoke $r1.<com.jcraft.jzlib.ZStream: void flush_pending()>();

        return;

     label2:
        $i1 = -1;

        goto label1;
    }
    void init_block()
    {
        com.jcraft.jzlib.Deflate r0;
        int i0, $i1;
        short[] $r1;

        r0 := @this: com.jcraft.jzlib.Deflate;

        i0 = 0;

     label1:
        if i0 >= 286 goto label2;

        $r1 = r0.<com.jcraft.jzlib.Deflate: short[] dyn_ltree>;

        $i1 = i0 * 2;

        $r1[$i1] = 0;

        i0 = i0 + 1;

        goto label1;

     label2:
        i0 = 0;

     label3:
        if i0 >= 30 goto label4;

        $r1 = r0.<com.jcraft.jzlib.Deflate: short[] dyn_dtree>;

        $i1 = i0 * 2;

        $r1[$i1] = 0;

        i0 = i0 + 1;

        goto label3;

     label4:
        i0 = 0;

     label5:
        if i0 >= 19 goto label6;

        $r1 = r0.<com.jcraft.jzlib.Deflate: short[] bl_tree>;

        $i1 = i0 * 2;

        $r1[$i1] = 0;

        i0 = i0 + 1;

        goto label5;

     label6:
        $r1 = r0.<com.jcraft.jzlib.Deflate: short[] dyn_ltree>;

        $r1[512] = 1;

        r0.<com.jcraft.jzlib.Deflate: int static_len> = 0;

        r0.<com.jcraft.jzlib.Deflate: int opt_len> = 0;

        r0.<com.jcraft.jzlib.Deflate: int matches> = 0;

        r0.<com.jcraft.jzlib.Deflate: int last_lit> = 0;

        return;
    }
    void lm_init()
    {
        com.jcraft.jzlib.Deflate r0;
        int $i0, $i1;
        short[] $r1;
        com.jcraft.jzlib.Deflate$Config[] $r2;
        com.jcraft.jzlib.Deflate$Config $r3;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $i0 = r0.<com.jcraft.jzlib.Deflate: int w_size>;

        $i0 = $i0 * 2;

        r0.<com.jcraft.jzlib.Deflate: int window_size> = $i0;

        $r1 = r0.<com.jcraft.jzlib.Deflate: short[] head>;

        $i0 = r0.<com.jcraft.jzlib.Deflate: int hash_size>;

        $i0 = $i0 + -1;

        $r1[$i0] = 0;

        $i0 = 0;

     label1:
        $i1 = r0.<com.jcraft.jzlib.Deflate: int hash_size>;

        $i1 = $i1 + -1;

        if $i0 >= $i1 goto label2;

        $r1 = r0.<com.jcraft.jzlib.Deflate: short[] head>;

        $r1[$i0] = 0;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r2 = <com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Deflate$Config[] config_table>;

        $i0 = r0.<com.jcraft.jzlib.Deflate: int level>;

        $r3 = $r2[$i0];

        $i0 = $r3.<com.jcraft.jzlib.Deflate$Config: int max_lazy>;

        r0.<com.jcraft.jzlib.Deflate: int max_lazy_match> = $i0;

        $r2 = <com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Deflate$Config[] config_table>;

        $i0 = r0.<com.jcraft.jzlib.Deflate: int level>;

        $r3 = $r2[$i0];

        $i0 = $r3.<com.jcraft.jzlib.Deflate$Config: int good_length>;

        r0.<com.jcraft.jzlib.Deflate: int good_match> = $i0;

        $r2 = <com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Deflate$Config[] config_table>;

        $i0 = r0.<com.jcraft.jzlib.Deflate: int level>;

        $r3 = $r2[$i0];

        $i0 = $r3.<com.jcraft.jzlib.Deflate$Config: int nice_length>;

        r0.<com.jcraft.jzlib.Deflate: int nice_match> = $i0;

        $r2 = <com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Deflate$Config[] config_table>;

        $i0 = r0.<com.jcraft.jzlib.Deflate: int level>;

        $r3 = $r2[$i0];

        $i0 = $r3.<com.jcraft.jzlib.Deflate$Config: int max_chain>;

        r0.<com.jcraft.jzlib.Deflate: int max_chain_length> = $i0;

        r0.<com.jcraft.jzlib.Deflate: int strstart> = 0;

        r0.<com.jcraft.jzlib.Deflate: int block_start> = 0;

        r0.<com.jcraft.jzlib.Deflate: int lookahead> = 0;

        r0.<com.jcraft.jzlib.Deflate: int prev_length> = 2;

        r0.<com.jcraft.jzlib.Deflate: int match_length> = 2;

        r0.<com.jcraft.jzlib.Deflate: int match_available> = 0;

        r0.<com.jcraft.jzlib.Deflate: int ins_h> = 0;

        return;
    }
    int longest_match(int)
    {
        com.jcraft.jzlib.Deflate r0;
        int i0, i1, i2, $i3, $i4, i5, i6, i7, $i8, i9;
        byte[] $r1;
        byte b10, b11, $b12, $b13;
        short[] $r2;
        short $s14;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $i4 := @parameter0: int;

        i5 = r0.<com.jcraft.jzlib.Deflate: int max_chain_length>;

        i6 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        i7 = r0.<com.jcraft.jzlib.Deflate: int prev_length>;

        i2 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $i8 = r0.<com.jcraft.jzlib.Deflate: int w_size>;

        $i8 = $i8 + -262;

        if i2 <= $i8 goto label06;

        i2 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        $i8 = r0.<com.jcraft.jzlib.Deflate: int w_size>;

        $i8 = $i8 + -262;

        $i8 = i2 - $i8;

     label01:
        i9 = r0.<com.jcraft.jzlib.Deflate: int nice_match>;

        i2 = r0.<com.jcraft.jzlib.Deflate: int w_mask>;

        i1 = r0.<com.jcraft.jzlib.Deflate: int strstart>;

        i1 = i1 + 258;

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        i0 = i6 + i7;

        i0 = i0 + -1;

        b10 = $r1[i0];

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        i0 = i6 + i7;

        b11 = $r1[i0];

        i0 = r0.<com.jcraft.jzlib.Deflate: int prev_length>;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int good_match>;

        if i0 < $i3 goto label02;

        i5 = i5 >> 2;

     label02:
        i0 = r0.<com.jcraft.jzlib.Deflate: int lookahead>;

        if i9 <= i0 goto label03;

        i9 = r0.<com.jcraft.jzlib.Deflate: int lookahead>;

     label03:
        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        i0 = $i4 + i7;

        $b12 = $r1[i0];

        if $b12 != b11 goto label04;

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        i0 = $i4 + i7;

        i0 = i0 + -1;

        $b12 = $r1[i0];

        if $b12 != b10 goto label04;

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        $b12 = $r1[$i4];

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        $b13 = $r1[i6];

        if $b12 != $b13 goto label04;

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        i0 = $i4 + 1;

        $b12 = $r1[i0];

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        $i3 = i6 + 1;

        $b13 = $r1[$i3];

        if $b12 == $b13 goto label07;

     label04:
        $r2 = r0.<com.jcraft.jzlib.Deflate: short[] prev>;

        $i4 = $i4 & i2;

        $s14 = $r2[$i4];

        $i4 = $s14 & 65535;

        if $i4 <= $i8 goto label05;

        i5 = i5 + -1;

        if i5 != 0 goto label03;

     label05:
        $i4 = r0.<com.jcraft.jzlib.Deflate: int lookahead>;

        if i7 > $i4 goto label10;

        return i7;

     label06:
        $i8 = 0;

        goto label01;

     label07:
        i6 = i6 + 2;

        i0 = i0 + 1;

     label08:
        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        i6 = i6 + 1;

        $b12 = $r1[i6];

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        i0 = i0 + 1;

        $b13 = $r1[i0];

        if $b12 != $b13 goto label09;

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        i6 = i6 + 1;

        $b12 = $r1[i6];

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        i0 = i0 + 1;

        $b13 = $r1[i0];

        if $b12 != $b13 goto label09;

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        i6 = i6 + 1;

        $b12 = $r1[i6];

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        i0 = i0 + 1;

        $b13 = $r1[i0];

        if $b12 != $b13 goto label09;

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        i6 = i6 + 1;

        $b12 = $r1[i6];

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        i0 = i0 + 1;

        $b13 = $r1[i0];

        if $b12 != $b13 goto label09;

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        i6 = i6 + 1;

        $b12 = $r1[i6];

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        i0 = i0 + 1;

        $b13 = $r1[i0];

        if $b12 != $b13 goto label09;

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        i6 = i6 + 1;

        $b12 = $r1[i6];

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        i0 = i0 + 1;

        $b13 = $r1[i0];

        if $b12 != $b13 goto label09;

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        i6 = i6 + 1;

        $b12 = $r1[i6];

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        i0 = i0 + 1;

        $b13 = $r1[i0];

        if $b12 != $b13 goto label09;

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        i6 = i6 + 1;

        $b12 = $r1[i6];

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        i0 = i0 + 1;

        $b13 = $r1[i0];

        if $b12 != $b13 goto label09;

        if i6 < i1 goto label08;

     label09:
        i6 = i1 - i6;

        i0 = 258 - i6;

        i6 = i1 + -258;

        if i0 <= i7 goto label04;

        r0.<com.jcraft.jzlib.Deflate: int match_start> = $i4;

        i7 = i0;

        if i0 >= i9 goto label05;

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        $i3 = i6 + i0;

        $i3 = $i3 + -1;

        b10 = $r1[$i3];

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] window>;

        i0 = i6 + i0;

        b11 = $r1[i0];

        goto label04;

     label10:
        $i4 = r0.<com.jcraft.jzlib.Deflate: int lookahead>;

        return $i4;
    }
    void pqdownheap(short[], int)
    {
        com.jcraft.jzlib.Deflate r0;
        short[] $r1;
        int i0, $i1, i2, $i3, $i4;
        byte[] $r2;
        int[] $r3, $r4;
        boolean $z0;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $r1 := @parameter0: short[];

        $i1 := @parameter1: int;

        $r3 = r0.<com.jcraft.jzlib.Deflate: int[] heap>;

        i0 = $r3[$i1];

        i2 = $i1 << 1;

     label1:
        $i3 = r0.<com.jcraft.jzlib.Deflate: int heap_len>;

        if i2 > $i3 goto label3;

        $i3 = r0.<com.jcraft.jzlib.Deflate: int heap_len>;

        if i2 >= $i3 goto label2;

        $r3 = r0.<com.jcraft.jzlib.Deflate: int[] heap>;

        $i3 = i2 + 1;

        $i3 = $r3[$i3];

        $r3 = r0.<com.jcraft.jzlib.Deflate: int[] heap>;

        $i4 = $r3[i2];

        $r2 = r0.<com.jcraft.jzlib.Deflate: byte[] depth>;

        $z0 = staticinvoke <com.jcraft.jzlib.Deflate: boolean smaller(short[],int,int,byte[])>($r1, $i3, $i4, $r2);

        if $z0 == 0 goto label2;

        i2 = i2 + 1;

     label2:
        $r3 = r0.<com.jcraft.jzlib.Deflate: int[] heap>;

        $i3 = $r3[i2];

        $r2 = r0.<com.jcraft.jzlib.Deflate: byte[] depth>;

        $z0 = staticinvoke <com.jcraft.jzlib.Deflate: boolean smaller(short[],int,int,byte[])>($r1, i0, $i3, $r2);

        if $z0 == 0 goto label4;

     label3:
        $r3 = r0.<com.jcraft.jzlib.Deflate: int[] heap>;

        $r3[$i1] = i0;

        return;

     label4:
        $r3 = r0.<com.jcraft.jzlib.Deflate: int[] heap>;

        $r4 = r0.<com.jcraft.jzlib.Deflate: int[] heap>;

        $i3 = $r4[i2];

        $r3[$i1] = $i3;

        $i1 = i2;

        i2 = i2 << 1;

        goto label1;
    }
    final void putShortMSB(int)
    {
        com.jcraft.jzlib.Deflate r0;
        int $i0, $i1;
        byte $b2;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $i0 := @parameter0: int;

        $i1 = $i0 >> 8;

        $b2 = (byte) $i1;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void put_byte(byte)>($b2);

        $b2 = (byte) $i0;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void put_byte(byte)>($b2);

        return;
    }
    final void put_byte(byte)
    {
        com.jcraft.jzlib.Deflate r0;
        byte $b0;
        byte[] $r1;
        int $i1, $i2;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $b0 := @parameter0: byte;

        $r1 = r0.<com.jcraft.jzlib.Deflate: byte[] pending_buf>;

        $i1 = r0.<com.jcraft.jzlib.Deflate: int pending>;

        $i2 = $i1 + 1;

        r0.<com.jcraft.jzlib.Deflate: int pending> = $i2;

        $r1[$i1] = $b0;

        return;
    }
    final void put_byte(byte[], int, int)
    {
        com.jcraft.jzlib.Deflate r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<com.jcraft.jzlib.Deflate: byte[] pending_buf>;

        $i2 = r0.<com.jcraft.jzlib.Deflate: int pending>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r2, $i2, $i1);

        $i0 = r0.<com.jcraft.jzlib.Deflate: int pending>;

        $i0 = $i0 + $i1;

        r0.<com.jcraft.jzlib.Deflate: int pending> = $i0;

        return;
    }
    final void put_short(int)
    {
        com.jcraft.jzlib.Deflate r0;
        int $i0;
        byte $b1;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $i0 := @parameter0: int;

        $b1 = (byte) $i0;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void put_byte(byte)>($b1);

        $i0 = $i0 >>> 8;

        $b1 = (byte) $i0;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void put_byte(byte)>($b1);

        return;
    }
    void scan_tree(short[], int)
    {
        com.jcraft.jzlib.Deflate r0;
        short[] $r1, $r2;
        int $i0, i4, $i7, $i8;
        short s1, s2, s3, s5;
        byte b6;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $r1 := @parameter0: short[];

        $i0 := @parameter1: int;

        s2 = -1;

        s3 = $r1[1];

        i4 = 0;

        s5 = 7;

        b6 = 4;

        if s3 != 0 goto label01;

        s5 = 138;

        b6 = 3;

     label01:
        $i7 = $i0 + 1;

        $i7 = $i7 * 2;

        $i7 = $i7 + 1;

        $r1[$i7] = -1;

        $i7 = 0;

     label02:
        if $i7 > $i0 goto label12;

        s1 = s3;

        $i8 = $i7 + 1;

        $i8 = $i8 * 2;

        $i8 = $i8 + 1;

        s3 = $r1[$i8];

        i4 = i4 + 1;

        if i4 >= s5 goto label04;

        if s1 != s3 goto label04;

     label03:
        $i7 = $i7 + 1;

        goto label02;

     label04:
        if i4 >= b6 goto label06;

        $r2 = r0.<com.jcraft.jzlib.Deflate: short[] bl_tree>;

        $i8 = s1 * 2;

        s2 = $r2[$i8];

        i4 = s2 + i4;

        s2 = (short) i4;

        $r2[$i8] = s2;

     label05:
        i4 = 0;

        s2 = s1;

        if s3 != 0 goto label10;

        s5 = 138;

        b6 = 3;

        goto label03;

     label06:
        if s1 == 0 goto label08;

        if s1 == s2 goto label07;

        $r2 = r0.<com.jcraft.jzlib.Deflate: short[] bl_tree>;

        i4 = s1 * 2;

        s2 = $r2[i4];

        $i8 = s2 + 1;

        s2 = (short) $i8;

        $r2[i4] = s2;

     label07:
        $r2 = r0.<com.jcraft.jzlib.Deflate: short[] bl_tree>;

        s2 = $r2[32];

        i4 = s2 + 1;

        s2 = (short) i4;

        $r2[32] = s2;

        goto label05;

     label08:
        if i4 > 10 goto label09;

        $r2 = r0.<com.jcraft.jzlib.Deflate: short[] bl_tree>;

        s2 = $r2[34];

        i4 = s2 + 1;

        s2 = (short) i4;

        $r2[34] = s2;

        goto label05;

     label09:
        $r2 = r0.<com.jcraft.jzlib.Deflate: short[] bl_tree>;

        s2 = $r2[36];

        i4 = s2 + 1;

        s2 = (short) i4;

        $r2[36] = s2;

        goto label05;

     label10:
        if s1 != s3 goto label11;

        s5 = 6;

        b6 = 3;

        goto label03;

     label11:
        s5 = 7;

        b6 = 4;

        goto label03;

     label12:
        return;
    }
    void send_all_trees(int, int, int)
    {
        com.jcraft.jzlib.Deflate r0;
        int $i0, $i1, $i2, $i3, $i5;
        short[] $r1;
        byte[] $r2;
        byte $b4;
        short $s6;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 = $i0 + -257;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void send_bits(int,int)>($i3, 5);

        $i3 = $i1 + -1;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void send_bits(int,int)>($i3, 5);

        $i3 = $i2 + -4;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void send_bits(int,int)>($i3, 4);

        $i3 = 0;

     label1:
        if $i3 >= $i2 goto label2;

        $r1 = r0.<com.jcraft.jzlib.Deflate: short[] bl_tree>;

        $r2 = <com.jcraft.jzlib.Tree: byte[] bl_order>;

        $b4 = $r2[$i3];

        $i5 = $b4 * 2;

        $i5 = $i5 + 1;

        $s6 = $r1[$i5];

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void send_bits(int,int)>($s6, 3);

        $i3 = $i3 + 1;

        goto label1;

     label2:
        $r1 = r0.<com.jcraft.jzlib.Deflate: short[] dyn_ltree>;

        $i0 = $i0 + -1;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void send_tree(short[],int)>($r1, $i0);

        $r1 = r0.<com.jcraft.jzlib.Deflate: short[] dyn_dtree>;

        $i0 = $i1 + -1;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void send_tree(short[],int)>($r1, $i0);

        return;
    }
    void send_bits(int, int)
    {
        com.jcraft.jzlib.Deflate r0;
        int $i0, $i1, $i2, $i3;
        short $s4;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = r0.<com.jcraft.jzlib.Deflate: int bi_valid>;

        $i3 = 16 - $i1;

        if $i2 <= $i3 goto label1;

        $s4 = r0.<com.jcraft.jzlib.Deflate: short bi_buf>;

        $i2 = r0.<com.jcraft.jzlib.Deflate: int bi_valid>;

        $i2 = $i0 << $i2;

        $i2 = $i2 & 65535;

        $i2 = $s4 | $i2;

        $s4 = (short) $i2;

        r0.<com.jcraft.jzlib.Deflate: short bi_buf> = $s4;

        $s4 = r0.<com.jcraft.jzlib.Deflate: short bi_buf>;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void put_short(int)>($s4);

        $i2 = r0.<com.jcraft.jzlib.Deflate: int bi_valid>;

        $i2 = 16 - $i2;

        $i0 = $i0 >>> $i2;

        $s4 = (short) $i0;

        r0.<com.jcraft.jzlib.Deflate: short bi_buf> = $s4;

        $i0 = r0.<com.jcraft.jzlib.Deflate: int bi_valid>;

        $i1 = $i1 + -16;

        $i0 = $i0 + $i1;

        r0.<com.jcraft.jzlib.Deflate: int bi_valid> = $i0;

        return;

     label1:
        $s4 = r0.<com.jcraft.jzlib.Deflate: short bi_buf>;

        $i2 = r0.<com.jcraft.jzlib.Deflate: int bi_valid>;

        $i0 = $i0 << $i2;

        $i0 = $i0 & 65535;

        $i0 = $s4 | $i0;

        $s4 = (short) $i0;

        r0.<com.jcraft.jzlib.Deflate: short bi_buf> = $s4;

        $i0 = r0.<com.jcraft.jzlib.Deflate: int bi_valid>;

        $i0 = $i0 + $i1;

        r0.<com.jcraft.jzlib.Deflate: int bi_valid> = $i0;

        return;
    }
    final void send_code(int, short[])
    {
        com.jcraft.jzlib.Deflate r0;
        int $i0, i1;
        short[] $r1;
        short $s2;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $i0 := @parameter0: int;

        $r1 := @parameter1: short[];

        i1 = $i0 * 2;

        $s2 = $r1[i1];

        $i0 = $s2 & 65535;

        i1 = i1 + 1;

        $s2 = $r1[i1];

        i1 = $s2 & 65535;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void send_bits(int,int)>($i0, i1);

        return;
    }
    void send_tree(short[], int)
    {
        com.jcraft.jzlib.Deflate r0;
        short[] $r1, $r2;
        int $i0, i4, i7, $i8;
        short s1, s2, s3, s5;
        byte b6;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $r1 := @parameter0: short[];

        $i0 := @parameter1: int;

        s2 = -1;

        s3 = $r1[1];

        i4 = 0;

        s5 = 7;

        b6 = 4;

        if s3 != 0 goto label01;

        s5 = 138;

        b6 = 3;

     label01:
        i7 = 0;

     label02:
        if i7 > $i0 goto label13;

        s1 = s3;

        $i8 = i7 + 1;

        $i8 = $i8 * 2;

        $i8 = $i8 + 1;

        s3 = $r1[$i8];

        i4 = i4 + 1;

        if i4 >= s5 goto label04;

        if s1 != s3 goto label04;

     label03:
        i7 = i7 + 1;

        goto label02;

     label04:
        if i4 >= b6 goto label07;

     label05:
        $r2 = r0.<com.jcraft.jzlib.Deflate: short[] bl_tree>;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void send_code(int,short[])>(s1, $r2);

        i4 = i4 + -1;

        if i4 != 0 goto label05;

     label06:
        i4 = 0;

        s2 = s1;

        if s3 != 0 goto label11;

        s5 = 138;

        b6 = 3;

        goto label03;

     label07:
        if s1 == 0 goto label09;

        if s1 == s2 goto label08;

        $r2 = r0.<com.jcraft.jzlib.Deflate: short[] bl_tree>;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void send_code(int,short[])>(s1, $r2);

        i4 = i4 + -1;

     label08:
        $r2 = r0.<com.jcraft.jzlib.Deflate: short[] bl_tree>;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void send_code(int,short[])>(16, $r2);

        i4 = i4 + -3;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void send_bits(int,int)>(i4, 2);

        goto label06;

     label09:
        if i4 > 10 goto label10;

        $r2 = r0.<com.jcraft.jzlib.Deflate: short[] bl_tree>;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void send_code(int,short[])>(17, $r2);

        i4 = i4 + -3;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void send_bits(int,int)>(i4, 3);

        goto label06;

     label10:
        $r2 = r0.<com.jcraft.jzlib.Deflate: short[] bl_tree>;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void send_code(int,short[])>(18, $r2);

        i4 = i4 + -11;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void send_bits(int,int)>(i4, 7);

        goto label06;

     label11:
        if s1 != s3 goto label12;

        s5 = 6;

        b6 = 3;

        goto label03;

     label12:
        s5 = 7;

        b6 = 4;

        goto label03;

     label13:
        return;
    }
    void set_data_type()
    {
        com.jcraft.jzlib.Deflate r0;
        int i0, i1, i2, $i3;
        short[] $r1;
        short $s4;
        boolean $z0;
        byte $b5;

        r0 := @this: com.jcraft.jzlib.Deflate;

        i0 = 0;

        i1 = 0;

        i2 = 0;

     label1:
        if i0 >= 7 goto label2;

        $r1 = r0.<com.jcraft.jzlib.Deflate: short[] dyn_ltree>;

        $i3 = i0 * 2;

        $s4 = $r1[$i3];

        i2 = i2 + $s4;

        i0 = i0 + 1;

        goto label1;

     label2:
        if i0 >= 128 goto label3;

        $r1 = r0.<com.jcraft.jzlib.Deflate: short[] dyn_ltree>;

        $i3 = i0 * 2;

        $s4 = $r1[$i3];

        i1 = i1 + $s4;

        i0 = i0 + 1;

        goto label2;

     label3:
        if i0 >= 256 goto label4;

        $r1 = r0.<com.jcraft.jzlib.Deflate: short[] dyn_ltree>;

        $i3 = i0 * 2;

        $s4 = $r1[$i3];

        i2 = i2 + $s4;

        i0 = i0 + 1;

        goto label3;

     label4:
        i0 = i1 >>> 2;

        if i2 <= i0 goto label6;

        $z0 = 0;

     label5:
        $b5 = (byte) $z0;

        r0.<com.jcraft.jzlib.Deflate: byte data_type> = $b5;

        return;

     label6:
        $z0 = 1;

        goto label5;
    }
    void tr_init()
    {
        com.jcraft.jzlib.Deflate r0;
        com.jcraft.jzlib.Tree $r1;
        short[] $r2;
        com.jcraft.jzlib.StaticTree $r3;

        r0 := @this: com.jcraft.jzlib.Deflate;

        $r1 = r0.<com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Tree l_desc>;

        $r2 = r0.<com.jcraft.jzlib.Deflate: short[] dyn_ltree>;

        $r1.<com.jcraft.jzlib.Tree: short[] dyn_tree> = $r2;

        $r1 = r0.<com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Tree l_desc>;

        $r3 = <com.jcraft.jzlib.StaticTree: com.jcraft.jzlib.StaticTree static_l_desc>;

        $r1.<com.jcraft.jzlib.Tree: com.jcraft.jzlib.StaticTree stat_desc> = $r3;

        $r1 = r0.<com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Tree d_desc>;

        $r2 = r0.<com.jcraft.jzlib.Deflate: short[] dyn_dtree>;

        $r1.<com.jcraft.jzlib.Tree: short[] dyn_tree> = $r2;

        $r1 = r0.<com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Tree d_desc>;

        $r3 = <com.jcraft.jzlib.StaticTree: com.jcraft.jzlib.StaticTree static_d_desc>;

        $r1.<com.jcraft.jzlib.Tree: com.jcraft.jzlib.StaticTree stat_desc> = $r3;

        $r1 = r0.<com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Tree bl_desc>;

        $r2 = r0.<com.jcraft.jzlib.Deflate: short[] bl_tree>;

        $r1.<com.jcraft.jzlib.Tree: short[] dyn_tree> = $r2;

        $r1 = r0.<com.jcraft.jzlib.Deflate: com.jcraft.jzlib.Tree bl_desc>;

        $r3 = <com.jcraft.jzlib.StaticTree: com.jcraft.jzlib.StaticTree static_bl_desc>;

        $r1.<com.jcraft.jzlib.Tree: com.jcraft.jzlib.StaticTree stat_desc> = $r3;

        r0.<com.jcraft.jzlib.Deflate: short bi_buf> = 0;

        r0.<com.jcraft.jzlib.Deflate: int bi_valid> = 0;

        r0.<com.jcraft.jzlib.Deflate: int last_eob_len> = 8;

        virtualinvoke r0.<com.jcraft.jzlib.Deflate: void init_block()>();

        return;
    }
