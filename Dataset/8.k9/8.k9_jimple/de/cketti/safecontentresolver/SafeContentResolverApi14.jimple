de.cketti.safecontentresolver.SafeContentResolverApi14 extends de.cketti.safecontentresolver.SafeContentResolver
    void <init>(android.content.Context)
    {
        de.cketti.safecontentresolver.SafeContentResolverApi14 r0;
        android.content.Context $r1;

        r0 := @this: de.cketti.safecontentresolver.SafeContentResolverApi14;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<de.cketti.safecontentresolver.SafeContentResolver: void <init>(android.content.Context)>($r1);

        staticinvoke <de.cketti.safecontentresolver.Os: void init(android.content.Context)>($r1);

        return;
    }
    private int extractSystemFileDescriptor(java.io.FileDescriptor) throws java.io.FileNotFoundException
    {
        de.cketti.safecontentresolver.SafeContentResolverApi14 r0;
        java.io.FileDescriptor $r1;
        java.lang.Class $r2;
        java.lang.reflect.Field $r3;
        int $i0;
        java.lang.NoSuchFieldException r4;
        java.io.FileNotFoundException $r5;
        java.lang.IllegalAccessException r6;

        r0 := @this: de.cketti.safecontentresolver.SafeContentResolverApi14;

        $r1 := @parameter0: java.io.FileDescriptor;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("descriptor");

     label2:
        virtualinvoke $r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label3:
        $i0 = virtualinvoke $r3.<java.lang.reflect.Field: int getInt(java.lang.Object)>($r1);

     label4:
        return $i0;

     label5:
        r4 := @caughtexception;

        $r5 = new java.io.FileNotFoundException;

        specialinvoke $r5.<java.io.FileNotFoundException: void <init>(java.lang.String)>("Couldn\'t find field that holds system file descriptor");

        throw $r5;

     label6:
        r6 := @caughtexception;

        $r5 = new java.io.FileNotFoundException;

        specialinvoke $r5.<java.io.FileNotFoundException: void <init>(java.lang.String)>("Couldn\'t read system file descriptor");

        throw $r5;

        catch java.lang.NoSuchFieldException from label1 to label2 with label5;
        catch java.lang.IllegalAccessException from label3 to label4 with label6;
    }
    protected int getFileUidOrThrow(java.io.FileDescriptor) throws java.io.FileNotFoundException
    {
        de.cketti.safecontentresolver.SafeContentResolverApi14 r0;
        java.io.FileDescriptor $r1;
        int $i0;
        java.lang.Exception r2;
        java.io.FileNotFoundException $r3;
        java.lang.String $r4;

        r0 := @this: de.cketti.safecontentresolver.SafeContentResolverApi14;

        $r1 := @parameter0: java.io.FileDescriptor;

     label1:
        $i0 = specialinvoke r0.<de.cketti.safecontentresolver.SafeContentResolverApi14: int extractSystemFileDescriptor(java.io.FileDescriptor)>($r1);

        $i0 = staticinvoke <de.cketti.safecontentresolver.Os: int fstat(int)>($i0);

     label2:
        return $i0;

     label3:
        r2 := @caughtexception;

     label4:
        $r3 = new java.io.FileNotFoundException;

        $r4 = virtualinvoke r2.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r3.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label5:
        r2 := @caughtexception;

        goto label4;

        catch de.cketti.safecontentresolver.ErrnoException from label1 to label2 with label5;
        catch java.lang.UnsupportedOperationException from label1 to label2 with label3;
    }
