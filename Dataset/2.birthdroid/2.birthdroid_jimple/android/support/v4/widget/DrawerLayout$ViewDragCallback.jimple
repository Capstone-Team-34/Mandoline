android.support.v4.widget.DrawerLayout$ViewDragCallback extends android.support.v4.widget.ViewDragHelper$Callback
private final int mAbsGravity
private android.support.v4.widget.ViewDragHelper mDragger
private final java.lang.Runnable mPeekRunnable
final android.support.v4.widget.DrawerLayout this$0
    private void closeOtherDrawer()
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback r0;
        android.view.View $r1;
        byte b0;
        int $i1;
        android.support.v4.widget.DrawerLayout $r2;

        r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        b0 = 3;

        $i1 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: int mAbsGravity>;

        if $i1 != 3 goto label1;

        b0 = 5;

     label1:
        $r2 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $r1 = virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>(b0);

        if $r1 == null goto label2;

        $r2 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: void closeDrawer(android.view.View)>($r1);

     label2:
        return;
    }
    public int clampViewPositionHorizontal(android.view.View, int, int)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback r0;
        android.view.View $r1;
        int $i0, $i1, $i2;
        android.support.v4.widget.DrawerLayout $r2;
        boolean $z0;

        r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $z0 = virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>($r1, 3);

        if $z0 == 0 goto label1;

        $i1 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $i1 = neg $i1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 0);

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i0);

        return $i0;

     label1:
        $r2 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $i1 = virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: int getWidth()>();

        $i2 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $i2 = $i1 - $i2;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i0);

        return $i0;
    }
    public int clampViewPositionVertical(android.view.View, int, int)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback r0;
        android.view.View $r1;
        int $i0, $i1;

        r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i0 = virtualinvoke $r1.<android.view.View: int getTop()>();

        return $i0;
    }
    public int getViewHorizontalDragRange(android.view.View)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback r0;
        android.view.View $r1;
        int $i0;

        r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        $r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        return $i0;
    }
    public void onEdgeDragStarted(int, int)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback r0;
        int $i0, $i1;
        android.support.v4.widget.DrawerLayout $r1;
        android.view.View $r2;
        android.support.v4.widget.ViewDragHelper $r3;

        r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = $i0 & 1;

        if $i0 != 1 goto label2;

        $r1 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $r2 = virtualinvoke $r1.<android.support.v4.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>(3);

     label1:
        if $r2 == null goto label3;

        $r1 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $i0 = virtualinvoke $r1.<android.support.v4.widget.DrawerLayout: int getDrawerLockMode(android.view.View)>($r2);

        if $i0 != 0 goto label3;

        $r3 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.ViewDragHelper mDragger>;

        virtualinvoke $r3.<android.support.v4.widget.ViewDragHelper: void captureChildView(android.view.View,int)>($r2, $i1);

        return;

     label2:
        $r1 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $r2 = virtualinvoke $r1.<android.support.v4.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>(5);

        goto label1;

     label3:
        return;
    }
    public boolean onEdgeLock(int)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback r0;
        int $i0;

        r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        $i0 := @parameter0: int;

        return 0;
    }
    public void onEdgeTouched(int, int)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback r0;
        int $i0, $i1;
        android.support.v4.widget.DrawerLayout $r1;
        java.lang.Runnable $r2;

        r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $r2 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: java.lang.Runnable mPeekRunnable>;

        virtualinvoke $r1.<android.support.v4.widget.DrawerLayout: boolean postDelayed(java.lang.Runnable,long)>($r2, 160L);

        return;
    }
    public void onViewCaptured(android.view.View, int)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback r0;
        android.view.View $r1;
        int $i0;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v4.widget.DrawerLayout$LayoutParams r3;

        r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.v4.widget.DrawerLayout$LayoutParams) $r2;

        r3.<android.support.v4.widget.DrawerLayout$LayoutParams: boolean isPeeking> = 0;

        specialinvoke r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: void closeOtherDrawer()>();

        return;
    }
    public void onViewDragStateChanged(int)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback r0;
        int $i0, $i1;
        android.support.v4.widget.DrawerLayout $r1;
        android.view.View $r2;
        android.support.v4.widget.ViewDragHelper $r3;

        r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $i1 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: int mAbsGravity>;

        $r3 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.ViewDragHelper mDragger>;

        $r2 = virtualinvoke $r3.<android.support.v4.widget.ViewDragHelper: android.view.View getCapturedView()>();

        virtualinvoke $r1.<android.support.v4.widget.DrawerLayout: void updateDrawerState(int,int,android.view.View)>($i1, $i0, $r2);

        return;
    }
    public void onViewPositionChanged(android.view.View, int, int, int, int)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3;
        android.support.v4.widget.DrawerLayout $r2;
        boolean $z0;
        float $f0, $f1;
        byte $b4;

        r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i1 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $r2 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $z0 = virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>($r1, 3);

        if $z0 == 0 goto label3;

        $i0 = $i1 + $i0;

        $f0 = (float) $i0;

        $f1 = (float) $i1;

        $f0 = $f0 / $f1;

     label1:
        $r2 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: void setDrawerViewOffset(android.view.View,float)>($r1, $f0);

        $b4 = $f0 cmpl 0.0F;

        if $b4 != 0 goto label4;

        $b4 = 4;

     label2:
        virtualinvoke $r1.<android.view.View: void setVisibility(int)>($b4);

        $r2 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: void invalidate()>();

        return;

     label3:
        $r2 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $i2 = virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: int getWidth()>();

        $i0 = $i2 - $i0;

        $f0 = (float) $i0;

        $f1 = (float) $i1;

        $f0 = $f0 / $f1;

        goto label1;

     label4:
        $b4 = 0;

        goto label2;
    }
    public void onViewReleased(android.view.View, float, float)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback r0;
        android.view.View $r1;
        float $f0, $f1;
        android.support.v4.widget.DrawerLayout $r2;
        int $i0, $i2;
        boolean $z0;
        byte $b1;
        android.support.v4.widget.ViewDragHelper $r3;

        r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        $r1 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $r2 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $f1 = virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: float getDrawerViewOffset(android.view.View)>($r1);

        $i0 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $r2 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $z0 = virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>($r1, 3);

        if $z0 == 0 goto label4;

        $b1 = $f0 cmpl 0.0F;

        if $b1 > 0 goto label1;

        $b1 = $f0 cmpl 0.0F;

        if $b1 != 0 goto label3;

        $b1 = $f1 cmpl 0.5F;

        if $b1 <= 0 goto label3;

     label1:
        $i0 = 0;

     label2:
        $r3 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.ViewDragHelper mDragger>;

        $i2 = virtualinvoke $r1.<android.view.View: int getTop()>();

        virtualinvoke $r3.<android.support.v4.widget.ViewDragHelper: boolean settleCapturedViewAt(int,int)>($i0, $i2);

        $r2 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: void invalidate()>();

        return;

     label3:
        $i0 = neg $i0;

        goto label2;

     label4:
        $r2 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $i2 = virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: int getWidth()>();

        $b1 = $f0 cmpg 0.0F;

        if $b1 < 0 goto label5;

        $b1 = $f0 cmpl 0.0F;

        if $b1 != 0 goto label6;

        $b1 = $f1 cmpl 0.5F;

        if $b1 <= 0 goto label6;

     label5:
        $i0 = $i2 - $i0;

        goto label2;

     label6:
        $i0 = $i2;

        goto label2;
    }
    public void removeCallbacks()
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback r0;
        android.support.v4.widget.DrawerLayout $r1;
        java.lang.Runnable $r2;

        r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        $r1 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $r2 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: java.lang.Runnable mPeekRunnable>;

        virtualinvoke $r1.<android.support.v4.widget.DrawerLayout: boolean removeCallbacks(java.lang.Runnable)>($r2);

        return;
    }
    public boolean tryCaptureView(android.view.View, int)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback r0;
        android.view.View $r1;
        int $i0;
        android.support.v4.widget.DrawerLayout $r2;
        boolean $z0;

        r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $z0 = virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: boolean isDrawerView(android.view.View)>($r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $i0 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: int mAbsGravity>;

        $z0 = virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>($r1, $i0);

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $i0 = virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: int getDrawerLockMode(android.view.View)>($r1);

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
