org.apache.commons.math3.stat.correlation.SpearmansCorrelation extends java.lang.Object
private final org.apache.commons.math3.linear.RealMatrix data
private final org.apache.commons.math3.stat.correlation.PearsonsCorrelation rankCorrelation
private final org.apache.commons.math3.stat.ranking.RankingAlgorithm rankingAlgorithm
    public void <init>()
    {
        org.apache.commons.math3.stat.correlation.SpearmansCorrelation r0;
        org.apache.commons.math3.stat.ranking.NaturalRanking $r1;

        r0 := @this: org.apache.commons.math3.stat.correlation.SpearmansCorrelation;

        $r1 = new org.apache.commons.math3.stat.ranking.NaturalRanking;

        specialinvoke $r1.<org.apache.commons.math3.stat.ranking.NaturalRanking: void <init>()>();

        specialinvoke r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: void <init>(org.apache.commons.math3.stat.ranking.RankingAlgorithm)>($r1);

        return;
    }
    public void <init>(org.apache.commons.math3.linear.RealMatrix)
    {
        org.apache.commons.math3.stat.correlation.SpearmansCorrelation r0;
        org.apache.commons.math3.linear.RealMatrix $r1;
        org.apache.commons.math3.stat.ranking.NaturalRanking $r2;

        r0 := @this: org.apache.commons.math3.stat.correlation.SpearmansCorrelation;

        $r1 := @parameter0: org.apache.commons.math3.linear.RealMatrix;

        $r2 = new org.apache.commons.math3.stat.ranking.NaturalRanking;

        specialinvoke $r2.<org.apache.commons.math3.stat.ranking.NaturalRanking: void <init>()>();

        specialinvoke r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: void <init>(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.stat.ranking.RankingAlgorithm)>($r1, $r2);

        return;
    }
    public void <init>(org.apache.commons.math3.linear.RealMatrix, org.apache.commons.math3.stat.ranking.RankingAlgorithm)
    {
        org.apache.commons.math3.stat.correlation.SpearmansCorrelation r0;
        org.apache.commons.math3.linear.RealMatrix $r1;
        org.apache.commons.math3.stat.ranking.RankingAlgorithm $r2;
        org.apache.commons.math3.stat.correlation.PearsonsCorrelation $r3;

        r0 := @this: org.apache.commons.math3.stat.correlation.SpearmansCorrelation;

        $r1 := @parameter0: org.apache.commons.math3.linear.RealMatrix;

        $r2 := @parameter1: org.apache.commons.math3.stat.ranking.RankingAlgorithm;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.stat.ranking.RankingAlgorithm rankingAlgorithm> = $r2;

        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.linear.RealMatrix rankTransform(org.apache.commons.math3.linear.RealMatrix)>($r1);

        r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.linear.RealMatrix data> = $r1;

        $r3 = new org.apache.commons.math3.stat.correlation.PearsonsCorrelation;

        $r1 = r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.linear.RealMatrix data>;

        specialinvoke $r3.<org.apache.commons.math3.stat.correlation.PearsonsCorrelation: void <init>(org.apache.commons.math3.linear.RealMatrix)>($r1);

        r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.stat.correlation.PearsonsCorrelation rankCorrelation> = $r3;

        return;
    }
    public void <init>(org.apache.commons.math3.stat.ranking.RankingAlgorithm)
    {
        org.apache.commons.math3.stat.correlation.SpearmansCorrelation r0;
        org.apache.commons.math3.stat.ranking.RankingAlgorithm $r1;

        r0 := @this: org.apache.commons.math3.stat.correlation.SpearmansCorrelation;

        $r1 := @parameter0: org.apache.commons.math3.stat.ranking.RankingAlgorithm;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.linear.RealMatrix data> = null;

        r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.stat.ranking.RankingAlgorithm rankingAlgorithm> = $r1;

        r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.stat.correlation.PearsonsCorrelation rankCorrelation> = null;

        return;
    }
    private java.util.List getNaNPositions(double[])
    {
        org.apache.commons.math3.stat.correlation.SpearmansCorrelation r0;
        double[] $r1;
        java.util.ArrayList r2;
        int i0, $i1;
        double $d0;
        boolean $z0;
        java.lang.Integer $r3;

        r0 := @this: org.apache.commons.math3.stat.correlation.SpearmansCorrelation;

        $r1 := @parameter0: double[];

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if i0 >= $i1 goto label3;

        $d0 = $r1[i0];

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return r2;
    }
    private org.apache.commons.math3.linear.RealMatrix rankTransform(org.apache.commons.math3.linear.RealMatrix)
    {
        org.apache.commons.math3.stat.correlation.SpearmansCorrelation r0;
        org.apache.commons.math3.linear.RealMatrix $r1, r3;
        org.apache.commons.math3.stat.ranking.RankingAlgorithm $r4;
        boolean $z0;
        org.apache.commons.math3.stat.ranking.NaturalRanking $r5;
        org.apache.commons.math3.stat.ranking.NaNStrategy $r6, $r7;
        int i0, $i1;
        double[] $r8;
        java.util.List $r9;
        java.util.HashSet $r10;
        org.apache.commons.math3.linear.BlockRealMatrix $r11;

        r0 := @this: org.apache.commons.math3.stat.correlation.SpearmansCorrelation;

        $r1 := @parameter0: org.apache.commons.math3.linear.RealMatrix;

        r3 = null;

        $r4 = r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.stat.ranking.RankingAlgorithm rankingAlgorithm>;

        $z0 = $r4 instanceof org.apache.commons.math3.stat.ranking.NaturalRanking;

        if $z0 == 0 goto label4;

        $r4 = r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.stat.ranking.RankingAlgorithm rankingAlgorithm>;

        $r5 = (org.apache.commons.math3.stat.ranking.NaturalRanking) $r4;

        $r6 = virtualinvoke $r5.<org.apache.commons.math3.stat.ranking.NaturalRanking: org.apache.commons.math3.stat.ranking.NaNStrategy getNanStrategy()>();

        $r7 = <org.apache.commons.math3.stat.ranking.NaNStrategy: org.apache.commons.math3.stat.ranking.NaNStrategy REMOVED>;

        if $r6 != $r7 goto label4;

        $r10 = new java.util.HashSet;

        specialinvoke $r10.<java.util.HashSet: void <init>()>();

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r1.<org.apache.commons.math3.linear.RealMatrix: int getColumnDimension()>();

        if i0 >= $i1 goto label2;

        $r8 = interfaceinvoke $r1.<org.apache.commons.math3.linear.RealMatrix: double[] getColumn(int)>(i0);

        $r9 = specialinvoke r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: java.util.List getNaNPositions(double[])>($r8);

        interfaceinvoke $r10.<java.util.Set: boolean addAll(java.util.Collection)>($r9);

        i0 = i0 + 1;

        goto label1;

     label2:
        $z0 = interfaceinvoke $r10.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $r11 = new org.apache.commons.math3.linear.BlockRealMatrix;

        r3 = $r11;

        i0 = interfaceinvoke $r1.<org.apache.commons.math3.linear.RealMatrix: int getRowDimension()>();

        $i1 = interfaceinvoke $r10.<java.util.Set: int size()>();

        i0 = i0 - $i1;

        $i1 = interfaceinvoke $r1.<org.apache.commons.math3.linear.RealMatrix: int getColumnDimension()>();

        specialinvoke $r11.<org.apache.commons.math3.linear.BlockRealMatrix: void <init>(int,int)>(i0, $i1);

        i0 = 0;

     label3:
        $i1 = interfaceinvoke $r11.<org.apache.commons.math3.linear.RealMatrix: int getColumnDimension()>();

        if i0 >= $i1 goto label4;

        $r8 = interfaceinvoke $r1.<org.apache.commons.math3.linear.RealMatrix: double[] getColumn(int)>(i0);

        $r8 = specialinvoke r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: double[] removeValues(double[],java.util.Set)>($r8, $r10);

        interfaceinvoke $r11.<org.apache.commons.math3.linear.RealMatrix: void setColumn(int,double[])>(i0, $r8);

        i0 = i0 + 1;

        goto label3;

     label4:
        if r3 != null goto label5;

        r3 = interfaceinvoke $r1.<org.apache.commons.math3.linear.RealMatrix: org.apache.commons.math3.linear.RealMatrix copy()>();

     label5:
        i0 = 0;

     label6:
        $i1 = interfaceinvoke r3.<org.apache.commons.math3.linear.RealMatrix: int getColumnDimension()>();

        if i0 >= $i1 goto label7;

        $r4 = r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.stat.ranking.RankingAlgorithm rankingAlgorithm>;

        $r8 = interfaceinvoke r3.<org.apache.commons.math3.linear.RealMatrix: double[] getColumn(int)>(i0);

        $r8 = interfaceinvoke $r4.<org.apache.commons.math3.stat.ranking.RankingAlgorithm: double[] rank(double[])>($r8);

        interfaceinvoke r3.<org.apache.commons.math3.linear.RealMatrix: void setColumn(int,double[])>(i0, $r8);

        i0 = i0 + 1;

        goto label6;

     label7:
        return r3;
    }
    private double[] removeValues(double[], java.util.Set)
    {
        org.apache.commons.math3.stat.correlation.SpearmansCorrelation r0;
        java.util.Set r1;
        int i0, $i1, $i2;
        double[] r2, r3;
        boolean $z0;
        java.lang.Integer $r4;
        double $d0;

        r0 := @this: org.apache.commons.math3.stat.correlation.SpearmansCorrelation;

        r3 := @parameter0: double[];

        r1 := @parameter1: java.util.Set;

        $z0 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return r3;

     label1:
        $i1 = lengthof r3;

        $i2 = interfaceinvoke r1.<java.util.Set: int size()>();

        $i1 = $i1 - $i2;

        r2 = newarray (double)[$i1];

        $i1 = 0;

        $i2 = 0;

     label2:
        i0 = lengthof r3;

        if $i1 >= i0 goto label4;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $z0 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>($r4);

        if $z0 != 0 goto label3;

        $d0 = r3[$i1];

        r2[$i2] = $d0;

        $i2 = $i2 + 1;

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        return r2;
    }
    public org.apache.commons.math3.linear.RealMatrix computeCorrelationMatrix(org.apache.commons.math3.linear.RealMatrix)
    {
        org.apache.commons.math3.stat.correlation.SpearmansCorrelation r0;
        org.apache.commons.math3.linear.RealMatrix $r1;
        org.apache.commons.math3.stat.correlation.PearsonsCorrelation $r2;

        r0 := @this: org.apache.commons.math3.stat.correlation.SpearmansCorrelation;

        $r1 := @parameter0: org.apache.commons.math3.linear.RealMatrix;

        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.linear.RealMatrix rankTransform(org.apache.commons.math3.linear.RealMatrix)>($r1);

        $r2 = new org.apache.commons.math3.stat.correlation.PearsonsCorrelation;

        specialinvoke $r2.<org.apache.commons.math3.stat.correlation.PearsonsCorrelation: void <init>()>();

        $r1 = virtualinvoke $r2.<org.apache.commons.math3.stat.correlation.PearsonsCorrelation: org.apache.commons.math3.linear.RealMatrix computeCorrelationMatrix(org.apache.commons.math3.linear.RealMatrix)>($r1);

        return $r1;
    }
    public org.apache.commons.math3.linear.RealMatrix computeCorrelationMatrix(double[][])
    {
        org.apache.commons.math3.stat.correlation.SpearmansCorrelation r0;
        double[][] $r1;
        org.apache.commons.math3.linear.RealMatrix $r2;
        org.apache.commons.math3.linear.BlockRealMatrix $r3;

        r0 := @this: org.apache.commons.math3.stat.correlation.SpearmansCorrelation;

        $r1 := @parameter0: double[][];

        $r3 = new org.apache.commons.math3.linear.BlockRealMatrix;

        specialinvoke $r3.<org.apache.commons.math3.linear.BlockRealMatrix: void <init>(double[][])>($r1);

        $r2 = virtualinvoke r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.linear.RealMatrix computeCorrelationMatrix(org.apache.commons.math3.linear.RealMatrix)>($r3);

        return $r2;
    }
    public double correlation(double[], double[])
    {
        org.apache.commons.math3.stat.correlation.SpearmansCorrelation r0;
        double[] $r1, $r2, r9, r10;
        java.util.HashSet r3;
        int $i0, $i1;
        org.apache.commons.math3.exception.DimensionMismatchException $r4;
        org.apache.commons.math3.exception.MathIllegalArgumentException $r5;
        org.apache.commons.math3.exception.util.LocalizedFormats $r6;
        java.lang.Object[] $r7;
        java.lang.Integer $r8;
        org.apache.commons.math3.stat.ranking.RankingAlgorithm $r11;
        boolean $z0;
        org.apache.commons.math3.stat.ranking.NaNStrategy $r12, $r14;
        org.apache.commons.math3.stat.ranking.NaturalRanking $r13;
        java.util.List $r15;
        org.apache.commons.math3.stat.correlation.PearsonsCorrelation $r16;
        double $d0;

        r0 := @this: org.apache.commons.math3.stat.correlation.SpearmansCorrelation;

        $r1 := @parameter0: double[];

        $r2 := @parameter1: double[];

        $i0 = lengthof $r1;

        $i1 = lengthof $r2;

        if $i0 == $i1 goto label1;

        $r4 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i0 = lengthof $r1;

        $i1 = lengthof $r2;

        specialinvoke $r4.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i0, $i1);

        throw $r4;

     label1:
        $i0 = lengthof $r1;

        if $i0 >= 2 goto label2;

        $r5 = new org.apache.commons.math3.exception.MathIllegalArgumentException;

        $r6 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats INSUFFICIENT_DIMENSION>;

        $r7 = newarray (java.lang.Object)[2];

        $i0 = lengthof $r1;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r7[0] = $r8;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r7[1] = $r8;

        specialinvoke $r5.<org.apache.commons.math3.exception.MathIllegalArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r6, $r7);

        throw $r5;

     label2:
        r9 = $r1;

        r10 = $r2;

        $r11 = r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.stat.ranking.RankingAlgorithm rankingAlgorithm>;

        $z0 = $r11 instanceof org.apache.commons.math3.stat.ranking.NaturalRanking;

        if $z0 == 0 goto label3;

        $r12 = <org.apache.commons.math3.stat.ranking.NaNStrategy: org.apache.commons.math3.stat.ranking.NaNStrategy REMOVED>;

        $r11 = r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.stat.ranking.RankingAlgorithm rankingAlgorithm>;

        $r13 = (org.apache.commons.math3.stat.ranking.NaturalRanking) $r11;

        $r14 = virtualinvoke $r13.<org.apache.commons.math3.stat.ranking.NaturalRanking: org.apache.commons.math3.stat.ranking.NaNStrategy getNanStrategy()>();

        if $r12 != $r14 goto label3;

        r3 = new java.util.HashSet;

        specialinvoke r3.<java.util.HashSet: void <init>()>();

        $r15 = specialinvoke r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: java.util.List getNaNPositions(double[])>($r1);

        interfaceinvoke r3.<java.util.Set: boolean addAll(java.util.Collection)>($r15);

        $r15 = specialinvoke r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: java.util.List getNaNPositions(double[])>($r2);

        interfaceinvoke r3.<java.util.Set: boolean addAll(java.util.Collection)>($r15);

        r9 = specialinvoke r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: double[] removeValues(double[],java.util.Set)>($r1, r3);

        r10 = specialinvoke r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: double[] removeValues(double[],java.util.Set)>($r2, r3);

     label3:
        $r16 = new org.apache.commons.math3.stat.correlation.PearsonsCorrelation;

        specialinvoke $r16.<org.apache.commons.math3.stat.correlation.PearsonsCorrelation: void <init>()>();

        $r11 = r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.stat.ranking.RankingAlgorithm rankingAlgorithm>;

        $r1 = interfaceinvoke $r11.<org.apache.commons.math3.stat.ranking.RankingAlgorithm: double[] rank(double[])>(r9);

        $r11 = r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.stat.ranking.RankingAlgorithm rankingAlgorithm>;

        $r2 = interfaceinvoke $r11.<org.apache.commons.math3.stat.ranking.RankingAlgorithm: double[] rank(double[])>(r10);

        $d0 = virtualinvoke $r16.<org.apache.commons.math3.stat.correlation.PearsonsCorrelation: double correlation(double[],double[])>($r1, $r2);

        return $d0;
    }
    public org.apache.commons.math3.linear.RealMatrix getCorrelationMatrix()
    {
        org.apache.commons.math3.stat.correlation.SpearmansCorrelation r0;
        org.apache.commons.math3.linear.RealMatrix $r1;
        org.apache.commons.math3.stat.correlation.PearsonsCorrelation $r2;

        r0 := @this: org.apache.commons.math3.stat.correlation.SpearmansCorrelation;

        $r2 = r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.stat.correlation.PearsonsCorrelation rankCorrelation>;

        $r1 = virtualinvoke $r2.<org.apache.commons.math3.stat.correlation.PearsonsCorrelation: org.apache.commons.math3.linear.RealMatrix getCorrelationMatrix()>();

        return $r1;
    }
    public org.apache.commons.math3.stat.correlation.PearsonsCorrelation getRankCorrelation()
    {
        org.apache.commons.math3.stat.correlation.SpearmansCorrelation r0;
        org.apache.commons.math3.stat.correlation.PearsonsCorrelation r1;

        r0 := @this: org.apache.commons.math3.stat.correlation.SpearmansCorrelation;

        r1 = r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.stat.correlation.PearsonsCorrelation rankCorrelation>;

        return r1;
    }
