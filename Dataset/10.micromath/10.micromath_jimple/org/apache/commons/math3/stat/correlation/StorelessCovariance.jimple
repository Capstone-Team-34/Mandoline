org.apache.commons.math3.stat.correlation.StorelessCovariance extends org.apache.commons.math3.stat.correlation.Covariance
private org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance[] covMatrix
private int dimension
    public void <init>(int)
    {
        org.apache.commons.math3.stat.correlation.StorelessCovariance r0;
        int $i0;

        r0 := @this: org.apache.commons.math3.stat.correlation.StorelessCovariance;

        $i0 := @parameter0: int;

        specialinvoke r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: void <init>(int,boolean)>($i0, 1);

        return;
    }
    public void <init>(int, boolean)
    {
        org.apache.commons.math3.stat.correlation.StorelessCovariance r0;
        int $i0, $i1;
        boolean $z0;
        org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance[] $r1;

        r0 := @this: org.apache.commons.math3.stat.correlation.StorelessCovariance;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.commons.math3.stat.correlation.Covariance: void <init>()>();

        r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension> = $i0;

        $i0 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        $i1 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        $i1 = $i1 + 1;

        $i0 = $i0 * $i1;

        $i0 = $i0 / 2;

        $r1 = newarray (org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance)[$i0];

        r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance[] covMatrix> = $r1;

        specialinvoke r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: void initializeMatrix(boolean)>($z0);

        return;
    }
    private org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance getElement(int, int)
    {
        org.apache.commons.math3.stat.correlation.StorelessCovariance r0;
        int $i0, $i1;
        org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance[] $r1;
        org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance $r2;

        r0 := @this: org.apache.commons.math3.stat.correlation.StorelessCovariance;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance[] covMatrix>;

        $i0 = specialinvoke r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int indexOf(int,int)>($i0, $i1);

        $r2 = $r1[$i0];

        return $r2;
    }
    private int indexOf(int, int)
    {
        org.apache.commons.math3.stat.correlation.StorelessCovariance r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.commons.math3.stat.correlation.StorelessCovariance;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i1 >= $i0 goto label1;

        $i2 = $i0 + 1;

        $i0 = $i2 * $i0;

        $i0 = $i0 / 2;

        $i0 = $i0 + $i1;

        return $i0;

     label1:
        $i2 = $i1 + 1;

        $i1 = $i2 * $i1;

        $i1 = $i1 / 2;

        $i0 = $i1 + $i0;

        return $i0;
    }
    private void initializeMatrix(boolean)
    {
        org.apache.commons.math3.stat.correlation.StorelessCovariance r0;
        boolean $z0;
        int i0, $i1, $i2;
        org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance $r1;

        r0 := @this: org.apache.commons.math3.stat.correlation.StorelessCovariance;

        $z0 := @parameter0: boolean;

        i0 = 0;

     label1:
        $i1 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        if i0 >= $i1 goto label4;

        $i1 = 0;

     label2:
        $i2 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        if $i1 >= $i2 goto label3;

        $r1 = new org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance;

        specialinvoke $r1.<org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance: void <init>(boolean)>($z0);

        specialinvoke r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: void setElement(int,int,org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance)>(i0, $i1, $r1);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        return;
    }
    private void setElement(int, int, org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance)
    {
        org.apache.commons.math3.stat.correlation.StorelessCovariance r0;
        int $i0, $i1;
        org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance $r1;
        org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance[] $r2;

        r0 := @this: org.apache.commons.math3.stat.correlation.StorelessCovariance;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance;

        $r2 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance[] covMatrix>;

        $i0 = specialinvoke r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int indexOf(int,int)>($i0, $i1);

        $r2[$i0] = $r1;

        return;
    }
    public void append(org.apache.commons.math3.stat.correlation.StorelessCovariance) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.correlation.StorelessCovariance r0, $r1;
        int $i0, $i1, $i2;
        org.apache.commons.math3.exception.DimensionMismatchException $r2;
        org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance $r3, $r4;

        r0 := @this: org.apache.commons.math3.stat.correlation.StorelessCovariance;

        $r1 := @parameter0: org.apache.commons.math3.stat.correlation.StorelessCovariance;

        $i0 = $r1.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        $i1 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        if $i0 == $i1 goto label1;

        $r2 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i1 = $r1.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        $i0 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        specialinvoke $r2.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i1, $i0);

        throw $r2;

     label1:
        $i0 = 0;

     label2:
        $i1 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        if $i0 >= $i1 goto label5;

        $i1 = $i0;

     label3:
        $i2 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        if $i1 >= $i2 goto label4;

        $r3 = specialinvoke r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance getElement(int,int)>($i0, $i1);

        $r4 = specialinvoke $r1.<org.apache.commons.math3.stat.correlation.StorelessCovariance: org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance getElement(int,int)>($i0, $i1);

        virtualinvoke $r3.<org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance: void append(org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance)>($r4);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $i0 = $i0 + 1;

        goto label2;

     label5:
        return;
    }
    public double getCovariance(int, int) throws org.apache.commons.math3.exception.NumberIsTooSmallException
    {
        org.apache.commons.math3.stat.correlation.StorelessCovariance r0;
        int $i0, $i1;
        org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance $r1;
        double $d0;

        r0 := @this: org.apache.commons.math3.stat.correlation.StorelessCovariance;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance getElement(int,int)>($i0, $i1);

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance: double getResult()>();

        return $d0;
    }
    public org.apache.commons.math3.linear.RealMatrix getCovarianceMatrix() throws org.apache.commons.math3.exception.NumberIsTooSmallException
    {
        org.apache.commons.math3.stat.correlation.StorelessCovariance r0;
        double[][] $r1;
        org.apache.commons.math3.linear.RealMatrix $r2;

        r0 := @this: org.apache.commons.math3.stat.correlation.StorelessCovariance;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: double[][] getData()>();

        $r2 = staticinvoke <org.apache.commons.math3.linear.MatrixUtils: org.apache.commons.math3.linear.RealMatrix createRealMatrix(double[][])>($r1);

        return $r2;
    }
    public double[][] getData() throws org.apache.commons.math3.exception.NumberIsTooSmallException
    {
        org.apache.commons.math3.stat.correlation.StorelessCovariance r0;
        int $i0, $i1, $i2;
        int[] $r1;
        java.lang.Class $r2;
        java.lang.Object $r3;
        double[][] r4;
        double[] $r5;
        org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance $r6;
        double $d0;

        r0 := @this: org.apache.commons.math3.stat.correlation.StorelessCovariance;

        $i0 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        $i1 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        $r1 = newarray (int)[2];

        $r1[0] = $i0;

        $r1[1] = $i1;

        $r2 = <java.lang.Double: java.lang.Class TYPE>;

        $r3 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r2, $r1);

        r4 = (double[][]) $r3;

        $i0 = 0;

     label1:
        $i1 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        if $i0 >= $i1 goto label4;

        $i1 = 0;

     label2:
        $i2 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        if $i1 >= $i2 goto label3;

        $r5 = r4[$i0];

        $r6 = specialinvoke r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance getElement(int,int)>($i0, $i1);

        $d0 = virtualinvoke $r6.<org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance: double getResult()>();

        $r5[$i1] = $d0;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $i0 = $i0 + 1;

        goto label1;

     label4:
        return r4;
    }
    public int getN() throws org.apache.commons.math3.exception.MathUnsupportedOperationException
    {
        org.apache.commons.math3.stat.correlation.StorelessCovariance r0;
        org.apache.commons.math3.exception.MathUnsupportedOperationException $r1;

        r0 := @this: org.apache.commons.math3.stat.correlation.StorelessCovariance;

        $r1 = new org.apache.commons.math3.exception.MathUnsupportedOperationException;

        specialinvoke $r1.<org.apache.commons.math3.exception.MathUnsupportedOperationException: void <init>()>();

        throw $r1;
    }
    public void increment(double[]) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.correlation.StorelessCovariance r0;
        double[] $r1;
        int i0, $i1, i2;
        double $d0, $d1;
        org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance $r2;
        org.apache.commons.math3.exception.DimensionMismatchException $r3;

        r0 := @this: org.apache.commons.math3.stat.correlation.StorelessCovariance;

        $r1 := @parameter0: double[];

        i0 = lengthof $r1;

        $i1 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        if i0 == $i1 goto label1;

        $r3 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i1 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        specialinvoke $r3.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>(i0, $i1);

        throw $r3;

     label1:
        $i1 = 0;

     label2:
        if $i1 >= i0 goto label5;

        i2 = $i1;

     label3:
        if i2 >= i0 goto label4;

        $r2 = specialinvoke r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance getElement(int,int)>($i1, i2);

        $d1 = $r1[$i1];

        $d0 = $r1[i2];

        virtualinvoke $r2.<org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance: void increment(double,double)>($d1, $d0);

        i2 = i2 + 1;

        goto label3;

     label4:
        $i1 = $i1 + 1;

        goto label2;

     label5:
        return;
    }
