org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance extends java.lang.Object implements java.io.Serializable
private static final long serialVersionUID
private final boolean isBiasCorrected
private long n
private final double[] productsSums
private final double[] sums
    public void <init>(int, boolean)
    {
        org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance r0;
        int $i0, $i1;
        boolean $z0;
        double[] $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (double)[$i0];

        r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: double[] sums> = $r1;

        $i1 = $i0 + 1;

        $i0 = $i1 * $i0;

        $i0 = $i0 / 2;

        $r1 = newarray (double)[$i0];

        r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: double[] productsSums> = $r1;

        r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: long n> = 0L;

        r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: boolean isBiasCorrected> = $z0;

        return;
    }
    public void clear()
    {
        org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance r0;
        double[] $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance;

        r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: long n> = 0L;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: double[] sums>;

        staticinvoke <java.util.Arrays: void fill(double[],double)>($r1, 0.0);

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: double[] productsSums>;

        staticinvoke <java.util.Arrays: void fill(double[],double)>($r1, 0.0);

        return;
    }
    public boolean equals(java.lang.Object)
    {
        org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance r0, r2;
        java.lang.Object $r1;
        long $l0, $l1;
        boolean $z0, $z1;
        byte $b2;
        double[] $r3, $r4;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance) $r1;

        $z0 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: boolean isBiasCorrected>;

        $z1 = r2.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: boolean isBiasCorrected>;

        if $z0 == $z1 goto label3;

        return 0;

     label3:
        $l1 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: long n>;

        $l0 = r2.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: long n>;

        $b2 = $l1 cmp $l0;

        if $b2 == 0 goto label4;

        return 0;

     label4:
        $r3 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: double[] productsSums>;

        $r4 = r2.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: double[] productsSums>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>($r3, $r4);

        if $z0 != 0 goto label5;

        return 0;

     label5:
        $r3 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: double[] sums>;

        $r4 = r2.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: double[] sums>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>($r3, $r4);

        if $z0 != 0 goto label6;

        return 0;

     label6:
        return 1;
    }
    public long getN()
    {
        org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance r0;
        long l0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance;

        l0 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: long n>;

        return l0;
    }
    public org.apache.commons.math3.linear.RealMatrix getResult()
    {
        org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance r0;
        double d0, d1, $d2, $d3;
        int i0, i4, i5, i6;
        org.apache.commons.math3.linear.RealMatrix $r1;
        double[] $r2;
        long $l1, $l3;
        byte $b2;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: double[] sums>;

        i0 = lengthof $r2;

        $r1 = staticinvoke <org.apache.commons.math3.linear.MatrixUtils: org.apache.commons.math3.linear.RealMatrix createRealMatrix(int,int)>(i0, i0);

        $l1 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: long n>;

        $b2 = $l1 cmp 1L;

        if $b2 <= 0 goto label6;

        $l1 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: long n>;

        $z0 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: boolean isBiasCorrected>;

        if $z0 == 0 goto label4;

        $l3 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: long n>;

        $l3 = $l3 - 1L;

     label1:
        $l1 = $l3 * $l1;

        d0 = (double) $l1;

        d0 = 1.0 / d0;

        i4 = 0;

        i5 = 0;

     label2:
        if i5 >= i0 goto label6;

        i6 = 0;

     label3:
        if i6 > i5 goto label5;

        $l1 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: long n>;

        d1 = (double) $l1;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: double[] productsSums>;

        $d2 = $r2[i4];

        d1 = d1 * $d2;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: double[] sums>;

        $d2 = $r2[i5];

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: double[] sums>;

        $d3 = $r2[i6];

        $d2 = $d2 * $d3;

        d1 = d1 - $d2;

        d1 = d0 * d1;

        interfaceinvoke $r1.<org.apache.commons.math3.linear.RealMatrix: void setEntry(int,int,double)>(i5, i6, d1);

        interfaceinvoke $r1.<org.apache.commons.math3.linear.RealMatrix: void setEntry(int,int,double)>(i6, i5, d1);

        i6 = i6 + 1;

        i4 = i4 + 1;

        goto label3;

     label4:
        $l3 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: long n>;

        goto label1;

     label5:
        i5 = i5 + 1;

        goto label2;

     label6:
        return $r1;
    }
    public int hashCode()
    {
        org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance r0;
        boolean $z0;
        short $s0;
        int i1, $i4;
        long $l2, $l3;
        double[] $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance;

        $z0 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: boolean isBiasCorrected>;

        if $z0 == 0 goto label2;

        $s0 = 1231;

     label1:
        i1 = $s0 + 31;

        i1 = i1 * 31;

        $l2 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: long n>;

        $l3 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: long n>;

        $l3 = $l3 >>> 32;

        $l2 = $l2 ^ $l3;

        $i4 = (int) $l2;

        i1 = i1 + $i4;

        i1 = i1 * 31;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: double[] productsSums>;

        $i4 = staticinvoke <java.util.Arrays: int hashCode(double[])>($r1);

        i1 = i1 + $i4;

        i1 = i1 * 31;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: double[] sums>;

        $i4 = staticinvoke <java.util.Arrays: int hashCode(double[])>($r1);

        i1 = i1 + $i4;

        return i1;

     label2:
        $s0 = 1237;

        goto label1;
    }
    public void increment(double[]) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance r0;
        double[] $r1, $r2;
        double $d0, $d1, $d2;
        int $i0, $i1, i2;
        org.apache.commons.math3.exception.DimensionMismatchException $r3;
        long $l3;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance;

        $r1 := @parameter0: double[];

        $i0 = lengthof $r1;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: double[] sums>;

        $i1 = lengthof $r2;

        if $i0 == $i1 goto label1;

        $r3 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i0 = lengthof $r1;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: double[] sums>;

        $i1 = lengthof $r1;

        specialinvoke $r3.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i0, $i1);

        throw $r3;

     label1:
        i2 = 0;

        $i0 = 0;

     label2:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label5;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: double[] sums>;

        $d1 = $r2[$i0];

        $d0 = $r1[$i0];

        $d1 = $d1 + $d0;

        $r2[$i0] = $d1;

        $i1 = 0;

     label3:
        if $i1 > $i0 goto label4;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: double[] productsSums>;

        $d1 = $r2[i2];

        $d2 = $r1[$i0];

        $d0 = $r1[$i1];

        $d0 = $d2 * $d0;

        $d1 = $d1 + $d0;

        $r2[i2] = $d1;

        $i1 = $i1 + 1;

        i2 = i2 + 1;

        goto label3;

     label4:
        $i0 = $i0 + 1;

        goto label2;

     label5:
        $l3 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: long n>;

        $l3 = $l3 + 1L;

        r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: long n> = $l3;

        return;
    }
