org.apache.commons.math3.stat.correlation.KendallsCorrelation extends java.lang.Object
private final org.apache.commons.math3.linear.RealMatrix correlationMatrix
    public void <init>()
    {
        org.apache.commons.math3.stat.correlation.KendallsCorrelation r0;

        r0 := @this: org.apache.commons.math3.stat.correlation.KendallsCorrelation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.stat.correlation.KendallsCorrelation: org.apache.commons.math3.linear.RealMatrix correlationMatrix> = null;

        return;
    }
    public void <init>(org.apache.commons.math3.linear.RealMatrix)
    {
        org.apache.commons.math3.stat.correlation.KendallsCorrelation r0;
        org.apache.commons.math3.linear.RealMatrix $r1;

        r0 := @this: org.apache.commons.math3.stat.correlation.KendallsCorrelation;

        $r1 := @parameter0: org.apache.commons.math3.linear.RealMatrix;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<org.apache.commons.math3.stat.correlation.KendallsCorrelation: org.apache.commons.math3.linear.RealMatrix computeCorrelationMatrix(org.apache.commons.math3.linear.RealMatrix)>($r1);

        r0.<org.apache.commons.math3.stat.correlation.KendallsCorrelation: org.apache.commons.math3.linear.RealMatrix correlationMatrix> = $r1;

        return;
    }
    public void <init>(double[][])
    {
        org.apache.commons.math3.stat.correlation.KendallsCorrelation r0;
        double[][] $r1;
        org.apache.commons.math3.linear.RealMatrix $r2;

        r0 := @this: org.apache.commons.math3.stat.correlation.KendallsCorrelation;

        $r1 := @parameter0: double[][];

        $r2 = staticinvoke <org.apache.commons.math3.linear.MatrixUtils: org.apache.commons.math3.linear.RealMatrix createRealMatrix(double[][])>($r1);

        specialinvoke r0.<org.apache.commons.math3.stat.correlation.KendallsCorrelation: void <init>(org.apache.commons.math3.linear.RealMatrix)>($r2);

        return;
    }
    private static long sum(long)
    {
        long $l0, $l1;

        $l0 := @parameter0: long;

        $l1 = 1L + $l0;

        $l0 = $l1 * $l0;

        $l0 = $l0 / 2L;

        return $l0;
    }
    public org.apache.commons.math3.linear.RealMatrix computeCorrelationMatrix(org.apache.commons.math3.linear.RealMatrix)
    {
        org.apache.commons.math3.stat.correlation.KendallsCorrelation r0;
        org.apache.commons.math3.linear.RealMatrix $r1;
        org.apache.commons.math3.linear.BlockRealMatrix r2;
        int $i0, i1, i2;
        double[] $r3, $r4;
        double $d0;

        r0 := @this: org.apache.commons.math3.stat.correlation.KendallsCorrelation;

        $r1 := @parameter0: org.apache.commons.math3.linear.RealMatrix;

        $i0 = interfaceinvoke $r1.<org.apache.commons.math3.linear.RealMatrix: int getColumnDimension()>();

        r2 = new org.apache.commons.math3.linear.BlockRealMatrix;

        specialinvoke r2.<org.apache.commons.math3.linear.BlockRealMatrix: void <init>(int,int)>($i0, $i0);

        i1 = 0;

     label1:
        if i1 >= $i0 goto label4;

        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        $r3 = interfaceinvoke $r1.<org.apache.commons.math3.linear.RealMatrix: double[] getColumn(int)>(i1);

        $r4 = interfaceinvoke $r1.<org.apache.commons.math3.linear.RealMatrix: double[] getColumn(int)>(i2);

        $d0 = virtualinvoke r0.<org.apache.commons.math3.stat.correlation.KendallsCorrelation: double correlation(double[],double[])>($r3, $r4);

        interfaceinvoke r2.<org.apache.commons.math3.linear.RealMatrix: void setEntry(int,int,double)>(i1, i2, $d0);

        interfaceinvoke r2.<org.apache.commons.math3.linear.RealMatrix: void setEntry(int,int,double)>(i2, i1, $d0);

        i2 = i2 + 1;

        goto label2;

     label3:
        interfaceinvoke r2.<org.apache.commons.math3.linear.RealMatrix: void setEntry(int,int,double)>(i1, i1, 1.0);

        i1 = i1 + 1;

        goto label1;

     label4:
        return r2;
    }
    public org.apache.commons.math3.linear.RealMatrix computeCorrelationMatrix(double[][])
    {
        org.apache.commons.math3.stat.correlation.KendallsCorrelation r0;
        double[][] $r1;
        org.apache.commons.math3.linear.RealMatrix $r2;
        org.apache.commons.math3.linear.BlockRealMatrix $r3;

        r0 := @this: org.apache.commons.math3.stat.correlation.KendallsCorrelation;

        $r1 := @parameter0: double[][];

        $r3 = new org.apache.commons.math3.linear.BlockRealMatrix;

        specialinvoke $r3.<org.apache.commons.math3.linear.BlockRealMatrix: void <init>(double[][])>($r1);

        $r2 = virtualinvoke r0.<org.apache.commons.math3.stat.correlation.KendallsCorrelation: org.apache.commons.math3.linear.RealMatrix computeCorrelationMatrix(org.apache.commons.math3.linear.RealMatrix)>($r3);

        return $r2;
    }
    public double correlation(double[], double[]) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.correlation.KendallsCorrelation r0;
        double[] $r1, $r2;
        long l0, $l3, l4, l5, l6, l14;
        double d0, $d1;
        org.apache.commons.math3.util.Pair[] r3, r5, r12;
        int $i1, $i2, i7, i8, $i9, i10, $i11, i12, $i13;
        org.apache.commons.math3.exception.DimensionMismatchException $r4;
        org.apache.commons.math3.util.Pair $r6, r10;
        java.lang.Double $r7, $r8;
        org.apache.commons.math3.stat.correlation.KendallsCorrelation$1 $r9;
        java.lang.Object $r11;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.stat.correlation.KendallsCorrelation;

        $r1 := @parameter0: double[];

        $r2 := @parameter1: double[];

        $i1 = lengthof $r1;

        $i2 = lengthof $r2;

        if $i1 == $i2 goto label01;

        $r4 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i1 = lengthof $r1;

        $i2 = lengthof $r2;

        specialinvoke $r4.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i1, $i2);

        throw $r4;

     label01:
        $i1 = lengthof $r1;

        $i2 = $i1 + -1;

        $l3 = (long) $i2;

        $l3 = staticinvoke <org.apache.commons.math3.stat.correlation.KendallsCorrelation: long sum(long)>($l3);

        r3 = newarray (org.apache.commons.math3.util.Pair)[$i1];

        r5 = r3;

        $i2 = 0;

     label02:
        if $i2 >= $i1 goto label03;

        $r6 = new org.apache.commons.math3.util.Pair;

        $d1 = $r1[$i2];

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $d1 = $r2[$i2];

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        specialinvoke $r6.<org.apache.commons.math3.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r7, $r8);

        r3[$i2] = $r6;

        $i2 = $i2 + 1;

        goto label02;

     label03:
        $r9 = new org.apache.commons.math3.stat.correlation.KendallsCorrelation$1;

        specialinvoke $r9.<org.apache.commons.math3.stat.correlation.KendallsCorrelation$1: void <init>(org.apache.commons.math3.stat.correlation.KendallsCorrelation)>(r0);

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r3, $r9);

        l4 = 0L;

        l0 = 0L;

        l5 = 1L;

        l6 = 1L;

        $r6 = r3[0];

        $i2 = 1;

     label04:
        if $i2 >= $i1 goto label08;

        r10 = r3[$i2];

        $r11 = virtualinvoke r10.<org.apache.commons.math3.util.Pair: java.lang.Object getFirst()>();

        $r7 = (java.lang.Double) $r11;

        $r11 = virtualinvoke $r6.<org.apache.commons.math3.util.Pair: java.lang.Object getFirst()>();

        $z0 = virtualinvoke $r7.<java.lang.Double: boolean equals(java.lang.Object)>($r11);

        if $z0 == 0 goto label07;

        l5 = l5 + 1L;

        $r11 = virtualinvoke r10.<org.apache.commons.math3.util.Pair: java.lang.Object getSecond()>();

        $r7 = (java.lang.Double) $r11;

        $r11 = virtualinvoke $r6.<org.apache.commons.math3.util.Pair: java.lang.Object getSecond()>();

        $z0 = virtualinvoke $r7.<java.lang.Double: boolean equals(java.lang.Object)>($r11);

        if $z0 == 0 goto label06;

        l6 = l6 + 1L;

     label05:
        $r6 = r10;

        $i2 = $i2 + 1;

        goto label04;

     label06:
        l6 = l6 - 1L;

        l6 = staticinvoke <org.apache.commons.math3.stat.correlation.KendallsCorrelation: long sum(long)>(l6);

        l0 = l0 + l6;

        l6 = 1L;

        goto label05;

     label07:
        l5 = l5 - 1L;

        l5 = staticinvoke <org.apache.commons.math3.stat.correlation.KendallsCorrelation: long sum(long)>(l5);

        l4 = l4 + l5;

        l5 = 1L;

        l6 = l6 - 1L;

        l6 = staticinvoke <org.apache.commons.math3.stat.correlation.KendallsCorrelation: long sum(long)>(l6);

        l0 = l0 + l6;

        l6 = 1L;

        goto label05;

     label08:
        l5 = l5 - 1L;

        l5 = staticinvoke <org.apache.commons.math3.stat.correlation.KendallsCorrelation: long sum(long)>(l5);

        l4 = l4 + l5;

        l6 = l6 - 1L;

        l6 = staticinvoke <org.apache.commons.math3.stat.correlation.KendallsCorrelation: long sum(long)>(l6);

        l6 = l0 + l6;

        l0 = 0L;

        r12 = newarray (org.apache.commons.math3.util.Pair)[$i1];

        $i2 = 1;

     label09:
        if $i2 >= $i1 goto label19;

        i7 = 0;

     label10:
        if i7 >= $i1 goto label18;

        i8 = i7;

        $i9 = i7 + $i2;

        $i9 = staticinvoke <org.apache.commons.math3.util.FastMath: int min(int,int)>($i9, $i1);

        i10 = $i9;

        $i11 = $i9 + $i2;

        $i11 = staticinvoke <org.apache.commons.math3.util.FastMath: int min(int,int)>($i11, $i1);

        i12 = i7;

     label11:
        if i8 < $i9 goto label12;

        if i10 >= $i11 goto label17;

     label12:
        if i8 >= $i9 goto label16;

        if i10 >= $i11 goto label15;

        $r6 = r5[i8];

        $r11 = virtualinvoke $r6.<org.apache.commons.math3.util.Pair: java.lang.Object getSecond()>();

        $r7 = (java.lang.Double) $r11;

        $r6 = r5[i10];

        $r11 = virtualinvoke $r6.<org.apache.commons.math3.util.Pair: java.lang.Object getSecond()>();

        $r8 = (java.lang.Double) $r11;

        $i13 = virtualinvoke $r7.<java.lang.Double: int compareTo(java.lang.Double)>($r8);

        if $i13 > 0 goto label14;

        $r6 = r5[i8];

        r12[i12] = $r6;

        i8 = i8 + 1;

     label13:
        i12 = i12 + 1;

        goto label11;

     label14:
        $r6 = r5[i10];

        r12[i12] = $r6;

        i10 = i10 + 1;

        $i13 = $i9 - i8;

        l5 = (long) $i13;

        l0 = l0 + l5;

        goto label13;

     label15:
        $r6 = r5[i8];

        r12[i12] = $r6;

        i8 = i8 + 1;

        goto label13;

     label16:
        $r6 = r5[i10];

        r12[i12] = $r6;

        i10 = i10 + 1;

        goto label13;

     label17:
        i8 = $i2 * 2;

        i7 = i7 + i8;

        goto label10;

     label18:
        r3 = r5;

        r5 = r12;

        r12 = r3;

        $i2 = $i2 << 1;

        goto label09;

     label19:
        l5 = 0L;

        l14 = 1L;

        $r6 = r5[0];

        $i2 = 1;

     label20:
        if $i2 >= $i1 goto label23;

        r10 = r5[$i2];

        $r11 = virtualinvoke r10.<org.apache.commons.math3.util.Pair: java.lang.Object getSecond()>();

        $r7 = (java.lang.Double) $r11;

        $r11 = virtualinvoke $r6.<org.apache.commons.math3.util.Pair: java.lang.Object getSecond()>();

        $z0 = virtualinvoke $r7.<java.lang.Double: boolean equals(java.lang.Object)>($r11);

        if $z0 == 0 goto label22;

        l14 = l14 + 1L;

     label21:
        $r6 = r10;

        $i2 = $i2 + 1;

        goto label20;

     label22:
        l14 = l14 - 1L;

        l14 = staticinvoke <org.apache.commons.math3.stat.correlation.KendallsCorrelation: long sum(long)>(l14);

        l5 = l5 + l14;

        l14 = 1L;

        goto label21;

     label23:
        l14 = l14 - 1L;

        l14 = staticinvoke <org.apache.commons.math3.stat.correlation.KendallsCorrelation: long sum(long)>(l14);

        l5 = l5 + l14;

        l14 = $l3 - l4;

        l14 = l14 - l5;

        l6 = l14 + l6;

        l0 = 2L * l0;

        l0 = l6 - l0;

        l4 = $l3 - l4;

        $d1 = (double) l4;

        $l3 = $l3 - l5;

        d0 = (double) $l3;

        d0 = $d1 * d0;

        $d1 = (double) l0;

        d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(d0);

        $d1 = $d1 / d0;

        return $d1;
    }
    public org.apache.commons.math3.linear.RealMatrix getCorrelationMatrix()
    {
        org.apache.commons.math3.stat.correlation.KendallsCorrelation r0;
        org.apache.commons.math3.linear.RealMatrix r1;

        r0 := @this: org.apache.commons.math3.stat.correlation.KendallsCorrelation;

        r1 = r0.<org.apache.commons.math3.stat.correlation.KendallsCorrelation: org.apache.commons.math3.linear.RealMatrix correlationMatrix>;

        return r1;
    }
