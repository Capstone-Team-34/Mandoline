org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic extends java.lang.Object implements org.apache.commons.math3.stat.descriptive.UnivariateStatistic
private double[] storedData
    public void <init>()
    {
        org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic r0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
public abstract org.apache.commons.math3.stat.descriptive.UnivariateStatistic copy() { 
// no body
} 
    public double evaluate() throws org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic r0;
        double $d0;
        double[] $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic: double[] storedData>;

        $d0 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic: double evaluate(double[])>($r1);

        return $d0;
    }
    public double evaluate(double[]) throws org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic r0;
        double[] $r1;
        double $d0;
        int $i0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic;

        $r1 := @parameter0: double[];

        virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic: boolean test(double[],int,int)>($r1, 0, 0);

        $i0 = lengthof $r1;

        $d0 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic: double evaluate(double[],int,int)>($r1, 0, $i0);

        return $d0;
    }
public abstract double evaluate(double[], int, int) throws org.apache.commons.math3.exception.MathIllegalArgumentException { 
// no body
} 
    public double[] getData()
    {
        org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic r0;
        java.lang.Object $r1;
        double[] $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic: double[] storedData>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic: double[] storedData>;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (double[]) $r1;

        return $r2;
    }
    protected double[] getDataRef()
    {
        org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic r0;
        double[] r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic;

        r1 = r0.<org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic: double[] storedData>;

        return r1;
    }
    public void setData(double[])
    {
        org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic r0;
        double[] $r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic;

        $r1 := @parameter0: double[];

        if $r1 != null goto label2;

        $r1 = null;

     label1:
        r0.<org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic: double[] storedData> = $r1;

        return;

     label2:
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (double[]) $r2;

        goto label1;
    }
    public void setData(double[], int, int) throws org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic r0;
        double[] $r1, $r9;
        int $i0, $i1, $i2, $i3;
        org.apache.commons.math3.exception.NullArgumentException $r2;
        org.apache.commons.math3.exception.util.LocalizedFormats $r3;
        java.lang.Object[] $r4;
        org.apache.commons.math3.exception.NotPositiveException $r5;
        java.lang.Integer $r6, $r8;
        org.apache.commons.math3.exception.NumberIsTooLargeException $r7;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic;

        $r1 := @parameter0: double[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $r1 != null goto label1;

        $r2 = new org.apache.commons.math3.exception.NullArgumentException;

        $r3 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats INPUT_ARRAY>;

        $r4 = newarray (java.lang.Object)[0];

        specialinvoke $r2.<org.apache.commons.math3.exception.NullArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r3, $r4);

        throw $r2;

     label1:
        if $i0 >= 0 goto label2;

        $r5 = new org.apache.commons.math3.exception.NotPositiveException;

        $r3 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats START_POSITION>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        specialinvoke $r5.<org.apache.commons.math3.exception.NotPositiveException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)>($r3, $r6);

        throw $r5;

     label2:
        if $i1 >= 0 goto label3;

        $r5 = new org.apache.commons.math3.exception.NotPositiveException;

        $r3 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats LENGTH>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        specialinvoke $r5.<org.apache.commons.math3.exception.NotPositiveException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)>($r3, $r6);

        throw $r5;

     label3:
        $i2 = $i0 + $i1;

        $i3 = lengthof $r1;

        if $i2 <= $i3 goto label4;

        $r7 = new org.apache.commons.math3.exception.NumberIsTooLargeException;

        $r3 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats SUBARRAY_ENDS_AFTER_ARRAY_END>;

        $i0 = $i0 + $i1;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i0 = lengthof $r1;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        specialinvoke $r7.<org.apache.commons.math3.exception.NumberIsTooLargeException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)>($r3, $r6, $r8, 1);

        throw $r7;

     label4:
        $r9 = newarray (double)[$i1];

        r0.<org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic: double[] storedData> = $r9;

        $r9 = r0.<org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic: double[] storedData>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r9, 0, $i1);

        return;
    }
    protected boolean test(double[], int, int) throws org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic r0;
        double[] $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic;

        $r1 := @parameter0: double[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = staticinvoke <org.apache.commons.math3.util.MathArrays: boolean verifyValues(double[],int,int,boolean)>($r1, $i0, $i1, 0);

        return $z0;
    }
    protected boolean test(double[], int, int, boolean) throws org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic r0;
        double[] $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic;

        $r1 := @parameter0: double[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $z0 = staticinvoke <org.apache.commons.math3.util.MathArrays: boolean verifyValues(double[],int,int,boolean)>($r1, $i0, $i1, $z0);

        return $z0;
    }
    protected boolean test(double[], double[], int, int) throws org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic r0;
        double[] $r1, $r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic;

        $r1 := @parameter0: double[];

        $r2 := @parameter1: double[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $z0 = staticinvoke <org.apache.commons.math3.util.MathArrays: boolean verifyValues(double[],double[],int,int,boolean)>($r1, $r2, $i0, $i1, 0);

        return $z0;
    }
    protected boolean test(double[], double[], int, int, boolean) throws org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic r0;
        double[] $r1, $r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic;

        $r1 := @parameter0: double[];

        $r2 := @parameter1: double[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $z0 := @parameter4: boolean;

        $z0 = staticinvoke <org.apache.commons.math3.util.MathArrays: boolean verifyValues(double[],double[],int,int,boolean)>($r1, $r2, $i0, $i1, $z0);

        return $z0;
    }
