org.apache.commons.math3.stat.inference.OneWayAnova extends java.lang.Object
    public void <init>()
    {
        org.apache.commons.math3.stat.inference.OneWayAnova r0;

        r0 := @this: org.apache.commons.math3.stat.inference.OneWayAnova;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats anovaStats(java.util.Collection) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.inference.OneWayAnova r0;
        java.util.Collection r1;
        java.util.ArrayList r2;
        org.apache.commons.math3.stat.descriptive.SummaryStatistics r3;
        int i0, i1;
        double d0;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        double[] r6;
        org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats $r7;

        r0 := @this: org.apache.commons.math3.stat.inference.OneWayAnova;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>(r1);

        r2 = new java.util.ArrayList;

        i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        specialinvoke r2.<java.util.ArrayList: void <init>(int)>(i0);

        $r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (double[]) $r5;

        r3 = new org.apache.commons.math3.stat.descriptive.SummaryStatistics;

        specialinvoke r3.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: void <init>()>();

        interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>(r3);

        i0 = lengthof r6;

        i1 = 0;

     label2:
        if i1 >= i0 goto label1;

        d0 = r6[i1];

        virtualinvoke r3.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: void addValue(double)>(d0);

        i1 = i1 + 1;

        goto label2;

     label3:
        $r7 = specialinvoke r0.<org.apache.commons.math3.stat.inference.OneWayAnova: org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats anovaStats(java.util.Collection,boolean)>(r2, 0);

        return $r7;
    }
    private org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats anovaStats(java.util.Collection, boolean) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.inference.OneWayAnova r0;
        java.util.Collection r1;
        boolean $z0;
        int i0, $i1, i4, $i5;
        double d0, d1, d2, d3, $d4, $d5;
        org.apache.commons.math3.exception.DimensionMismatchException $r2;
        org.apache.commons.math3.exception.util.LocalizedFormats $r3;
        java.util.Iterator $r4;
        java.lang.Object $r5;
        org.apache.commons.math3.stat.descriptive.SummaryStatistics r6;
        long $l2;
        byte $b3;
        org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats $r7;

        r0 := @this: org.apache.commons.math3.stat.inference.OneWayAnova;

        r1 := @parameter0: java.util.Collection;

        $z0 := @parameter1: boolean;

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>(r1);

        if $z0 != 0 goto label3;

        $i1 = interfaceinvoke r1.<java.util.Collection: int size()>();

        if $i1 >= 2 goto label1;

        $r2 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $r3 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats TWO_OR_MORE_CATEGORIES_REQUIRED>;

        $i1 = interfaceinvoke r1.<java.util.Collection: int size()>();

        specialinvoke $r2.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(org.apache.commons.math3.exception.util.Localizable,int,int)>($r3, $i1, 2);

        throw $r2;

     label1:
        $r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.commons.math3.stat.descriptive.SummaryStatistics) $r5;

        $l2 = virtualinvoke r6.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: long getN()>();

        $b3 = $l2 cmp 1L;

        if $b3 > 0 goto label2;

        $r2 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $r3 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats TWO_OR_MORE_VALUES_IN_CATEGORY_REQUIRED>;

        $l2 = virtualinvoke r6.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: long getN()>();

        $i1 = (int) $l2;

        specialinvoke $r2.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(org.apache.commons.math3.exception.util.Localizable,int,int)>($r3, $i1, 2);

        throw $r2;

     label3:
        $i1 = 0;

        d0 = 0.0;

        d3 = 0.0;

        d1 = 0.0;

        i4 = 0;

        $r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.commons.math3.stat.descriptive.SummaryStatistics) $r5;

        $d4 = virtualinvoke r6.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: double getSum()>();

        d2 = virtualinvoke r6.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: double getSumsq()>();

        $l2 = virtualinvoke r6.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: long getN()>();

        i0 = (int) $l2;

        i4 = i4 + i0;

        d3 = d3 + $d4;

        d1 = d1 + d2;

        $i5 = i0 + -1;

        $i1 = $i1 + $i5;

        $d4 = $d4 * $d4;

        $d5 = (double) i0;

        $d4 = $d4 / $d5;

        d2 = d2 - $d4;

        d0 = d0 + d2;

        goto label4;

     label5:
        d3 = d3 * d3;

        d2 = (double) i4;

        d3 = d3 / d2;

        d1 = d1 - d3;

        d1 = d1 - d0;

        i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        i0 = i0 + -1;

        d3 = (double) i0;

        d1 = d1 / d3;

        d3 = (double) $i1;

        d0 = d0 / d3;

        d0 = d1 / d0;

        $r7 = new org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats;

        specialinvoke $r7.<org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats: void <init>(int,int,double,org.apache.commons.math3.stat.inference.OneWayAnova$1)>(i0, $i1, d0, null);

        return $r7;
    }
    public double anovaFValue(java.util.Collection) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.inference.OneWayAnova r0;
        java.util.Collection r1;
        org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats $r2;
        double $d0;

        r0 := @this: org.apache.commons.math3.stat.inference.OneWayAnova;

        r1 := @parameter0: java.util.Collection;

        $r2 = specialinvoke r0.<org.apache.commons.math3.stat.inference.OneWayAnova: org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats anovaStats(java.util.Collection)>(r1);

        $d0 = staticinvoke <org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats: double access$000(org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats)>($r2);

        return $d0;
    }
    public double anovaPValue(java.util.Collection) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.ConvergenceException, org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.stat.inference.OneWayAnova r0;
        java.util.Collection r1;
        org.apache.commons.math3.distribution.FDistribution r2;
        org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats $r3;
        int $i0;
        double $d0, $d1;

        r0 := @this: org.apache.commons.math3.stat.inference.OneWayAnova;

        r1 := @parameter0: java.util.Collection;

        $r3 = specialinvoke r0.<org.apache.commons.math3.stat.inference.OneWayAnova: org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats anovaStats(java.util.Collection)>(r1);

        r2 = new org.apache.commons.math3.distribution.FDistribution;

        $i0 = staticinvoke <org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats: int access$100(org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats)>($r3);

        $d0 = (double) $i0;

        $i0 = staticinvoke <org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats: int access$200(org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats)>($r3);

        $d1 = (double) $i0;

        specialinvoke r2.<org.apache.commons.math3.distribution.FDistribution: void <init>(org.apache.commons.math3.random.RandomGenerator,double,double)>(null, $d0, $d1);

        $d0 = staticinvoke <org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats: double access$000(org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats)>($r3);

        $d0 = virtualinvoke r2.<org.apache.commons.math3.distribution.FDistribution: double cumulativeProbability(double)>($d0);

        $d0 = 1.0 - $d0;

        return $d0;
    }
    public double anovaPValue(java.util.Collection, boolean) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.ConvergenceException, org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.stat.inference.OneWayAnova r0;
        java.util.Collection r1;
        boolean $z0;
        org.apache.commons.math3.distribution.FDistribution r2;
        org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats $r3;
        int $i0;
        double $d0, $d1;

        r0 := @this: org.apache.commons.math3.stat.inference.OneWayAnova;

        r1 := @parameter0: java.util.Collection;

        $z0 := @parameter1: boolean;

        $r3 = specialinvoke r0.<org.apache.commons.math3.stat.inference.OneWayAnova: org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats anovaStats(java.util.Collection,boolean)>(r1, $z0);

        r2 = new org.apache.commons.math3.distribution.FDistribution;

        $i0 = staticinvoke <org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats: int access$100(org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats)>($r3);

        $d0 = (double) $i0;

        $i0 = staticinvoke <org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats: int access$200(org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats)>($r3);

        $d1 = (double) $i0;

        specialinvoke r2.<org.apache.commons.math3.distribution.FDistribution: void <init>(org.apache.commons.math3.random.RandomGenerator,double,double)>(null, $d0, $d1);

        $d0 = staticinvoke <org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats: double access$000(org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats)>($r3);

        $d0 = virtualinvoke r2.<org.apache.commons.math3.distribution.FDistribution: double cumulativeProbability(double)>($d0);

        $d0 = 1.0 - $d0;

        return $d0;
    }
    public boolean anovaTest(java.util.Collection, double) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.ConvergenceException, org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.stat.inference.OneWayAnova r0;
        java.util.Collection r1;
        double $d0, $d1;
        byte $b0;
        org.apache.commons.math3.exception.OutOfRangeException $r2;
        org.apache.commons.math3.exception.util.LocalizedFormats $r3;
        java.lang.Double $r4, $r6;
        java.lang.Integer $r5;

        r0 := @this: org.apache.commons.math3.stat.inference.OneWayAnova;

        r1 := @parameter0: java.util.Collection;

        $d0 := @parameter1: double;

        $b0 = $d0 cmpg 0.0;

        if $b0 <= 0 goto label1;

        $b0 = $d0 cmpl 0.5;

        if $b0 <= 0 goto label2;

     label1:
        $r2 = new org.apache.commons.math3.exception.OutOfRangeException;

        $r3 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats OUT_OF_BOUND_SIGNIFICANCE_LEVEL>;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.5);

        specialinvoke $r2.<org.apache.commons.math3.exception.OutOfRangeException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)>($r3, $r4, $r5, $r6);

        throw $r2;

     label2:
        $d1 = virtualinvoke r0.<org.apache.commons.math3.stat.inference.OneWayAnova: double anovaPValue(java.util.Collection)>(r1);

        $b0 = $d1 cmpg $d0;

        if $b0 >= 0 goto label3;

        return 1;

     label3:
        return 0;
    }
