org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$9 extends org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType
    void <init>(java.lang.String, int, java.lang.String)
    {
        org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$9 r0;
        java.lang.String $r1, $r2;
        int $i0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$9;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType: void <init>(java.lang.String,int,java.lang.String,org.apache.commons.math3.stat.descriptive.rank.Percentile$1)>($r1, $i0, $r2, null);

        return;
    }
    protected double index(double, int)
    {
        org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$9 r0;
        double $d0, d1, d2, $d3;
        int $i0, $i1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$9;

        $d0 := @parameter0: double;

        $i0 := @parameter1: int;

        d2 = (double) $i0;

        d2 = d2 + 0.3333333333333333;

        d2 = 0.6666666666666666 / d2;

        d1 = (double) $i0;

        d1 = d1 - 0.3333333333333333;

        $d3 = (double) $i0;

        $d3 = $d3 + 0.3333333333333333;

        d1 = d1 / $d3;

        $i1 = staticinvoke <java.lang.Double: int compare(double,double)>($d0, d2);

        if $i1 >= 0 goto label1;

        return 0.0;

     label1:
        $i1 = staticinvoke <java.lang.Double: int compare(double,double)>($d0, d1);

        if $i1 < 0 goto label2;

        $d0 = (double) $i0;

        return $d0;

     label2:
        d2 = (double) $i0;

        d2 = d2 + 0.3333333333333333;

        $d0 = d2 * $d0;

        $d0 = $d0 + 0.3333333333333333;

        return $d0;
    }
