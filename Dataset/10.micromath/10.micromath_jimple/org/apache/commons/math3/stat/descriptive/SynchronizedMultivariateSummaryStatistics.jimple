org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics extends org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics
private static final long serialVersionUID
    public void <init>(int, boolean)
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void <init>(int,boolean)>($i0, $z0);

        return;
    }
    public void addValue(double[]) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        double[] $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        $r1 := @parameter0: double[];

        entermonitor r0;

     label1:
        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void addValue(double[])>($r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void clear()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        java.lang.Throwable $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        entermonitor r0;

     label1:
        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void clear()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public boolean equals(java.lang.Object)
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        java.lang.Object $r1;
        boolean $z0;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        $r1 := @parameter0: java.lang.Object;

        entermonitor r0;

     label1:
        $z0 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: boolean equals(java.lang.Object)>($r1);

     label2:
        exitmonitor r0;

        return $z0;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public org.apache.commons.math3.linear.RealMatrix getCovariance()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        org.apache.commons.math3.linear.RealMatrix $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        entermonitor r0;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.linear.RealMatrix getCovariance()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public int getDimension()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        int $i0;
        java.lang.Throwable $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        entermonitor r0;

     label1:
        $i0 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: int getDimension()>();

     label2:
        exitmonitor r0;

        return $i0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getGeoMeanImpl()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        entermonitor r0;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getGeoMeanImpl()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public double[] getGeometricMean()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        double[] $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        entermonitor r0;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getGeometricMean()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public double[] getMax()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        double[] $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        entermonitor r0;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getMax()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getMaxImpl()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        entermonitor r0;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getMaxImpl()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public double[] getMean()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        double[] $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        entermonitor r0;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getMean()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getMeanImpl()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        entermonitor r0;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getMeanImpl()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public double[] getMin()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        double[] $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        entermonitor r0;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getMin()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getMinImpl()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        entermonitor r0;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getMinImpl()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public long getN()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        long $l0;
        java.lang.Throwable $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        entermonitor r0;

     label1:
        $l0 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: long getN()>();

     label2:
        exitmonitor r0;

        return $l0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public double[] getStandardDeviation()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        double[] $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        entermonitor r0;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getStandardDeviation()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public double[] getSum()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        double[] $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        entermonitor r0;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getSum()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getSumImpl()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        entermonitor r0;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getSumImpl()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public double[] getSumLog()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        double[] $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        entermonitor r0;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getSumLog()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getSumLogImpl()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        entermonitor r0;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getSumLogImpl()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public double[] getSumSq()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        double[] $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        entermonitor r0;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getSumSq()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getSumsqImpl()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        entermonitor r0;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getSumsqImpl()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public int hashCode()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        int $i0;
        java.lang.Throwable $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        entermonitor r0;

     label1:
        $i0 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: int hashCode()>();

     label2:
        exitmonitor r0;

        return $i0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void setGeoMeanImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MathIllegalStateException
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        entermonitor r0;

     label1:
        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void setGeoMeanImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>($r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void setMaxImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MathIllegalStateException
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        entermonitor r0;

     label1:
        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void setMaxImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>($r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void setMeanImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MathIllegalStateException
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        entermonitor r0;

     label1:
        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void setMeanImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>($r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void setMinImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MathIllegalStateException
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        entermonitor r0;

     label1:
        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void setMinImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>($r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void setSumImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MathIllegalStateException
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        entermonitor r0;

     label1:
        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void setSumImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>($r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void setSumLogImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MathIllegalStateException
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        entermonitor r0;

     label1:
        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void setSumLogImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>($r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void setSumsqImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MathIllegalStateException
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        entermonitor r0;

     label1:
        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void setSumsqImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>($r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public java.lang.String toString()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        java.lang.String $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        entermonitor r0;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: java.lang.String toString()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
