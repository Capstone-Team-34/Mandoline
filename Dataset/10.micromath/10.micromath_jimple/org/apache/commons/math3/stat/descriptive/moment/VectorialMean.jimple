org.apache.commons.math3.stat.descriptive.moment.VectorialMean extends java.lang.Object implements java.io.Serializable
private static final long serialVersionUID
private final org.apache.commons.math3.stat.descriptive.moment.Mean[] means
    public void <init>(int)
    {
        org.apache.commons.math3.stat.descriptive.moment.VectorialMean r0;
        int $i0, i1;
        org.apache.commons.math3.stat.descriptive.moment.Mean $r1;
        org.apache.commons.math3.stat.descriptive.moment.Mean[] $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.VectorialMean;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (org.apache.commons.math3.stat.descriptive.moment.Mean)[$i0];

        r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialMean: org.apache.commons.math3.stat.descriptive.moment.Mean[] means> = $r2;

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialMean: org.apache.commons.math3.stat.descriptive.moment.Mean[] means>;

        $r1 = new org.apache.commons.math3.stat.descriptive.moment.Mean;

        specialinvoke $r1.<org.apache.commons.math3.stat.descriptive.moment.Mean: void <init>()>();

        $r2[i1] = $r1;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
    public boolean equals(java.lang.Object)
    {
        org.apache.commons.math3.stat.descriptive.moment.VectorialMean r0, r3;
        java.lang.Object $r1;
        org.apache.commons.math3.stat.descriptive.moment.Mean[] $r2, $r4;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.VectorialMean;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof org.apache.commons.math3.stat.descriptive.moment.VectorialMean;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r3 = (org.apache.commons.math3.stat.descriptive.moment.VectorialMean) $r1;

        $r4 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialMean: org.apache.commons.math3.stat.descriptive.moment.Mean[] means>;

        $r2 = r3.<org.apache.commons.math3.stat.descriptive.moment.VectorialMean: org.apache.commons.math3.stat.descriptive.moment.Mean[] means>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r4, $r2);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }
    public long getN()
    {
        org.apache.commons.math3.stat.descriptive.moment.VectorialMean r0;
        long $l0;
        org.apache.commons.math3.stat.descriptive.moment.Mean[] $r1;
        int $i1;
        org.apache.commons.math3.stat.descriptive.moment.Mean $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.VectorialMean;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialMean: org.apache.commons.math3.stat.descriptive.moment.Mean[] means>;

        $i1 = lengthof $r1;

        if $i1 != 0 goto label1;

        return 0L;

     label1:
        $r1 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialMean: org.apache.commons.math3.stat.descriptive.moment.Mean[] means>;

        $r2 = $r1[0];

        $l0 = virtualinvoke $r2.<org.apache.commons.math3.stat.descriptive.moment.Mean: long getN()>();

        return $l0;
    }
    public double[] getResult()
    {
        org.apache.commons.math3.stat.descriptive.moment.VectorialMean r0;
        double[] r1;
        double $d0;
        org.apache.commons.math3.stat.descriptive.moment.Mean[] $r2;
        int $i0, $i1;
        org.apache.commons.math3.stat.descriptive.moment.Mean $r3;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.VectorialMean;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialMean: org.apache.commons.math3.stat.descriptive.moment.Mean[] means>;

        $i0 = lengthof $r2;

        r1 = newarray (double)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof r1;

        if $i0 >= $i1 goto label2;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialMean: org.apache.commons.math3.stat.descriptive.moment.Mean[] means>;

        $r3 = $r2[$i0];

        $d0 = virtualinvoke $r3.<org.apache.commons.math3.stat.descriptive.moment.Mean: double getResult()>();

        r1[$i0] = $d0;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r1;
    }
    public int hashCode()
    {
        org.apache.commons.math3.stat.descriptive.moment.VectorialMean r0;
        int $i0;
        org.apache.commons.math3.stat.descriptive.moment.Mean[] $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.VectorialMean;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialMean: org.apache.commons.math3.stat.descriptive.moment.Mean[] means>;

        $i0 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r1);

        $i0 = $i0 + 31;

        return $i0;
    }
    public void increment(double[]) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.descriptive.moment.VectorialMean r0;
        double[] $r1;
        int $i0, $i1;
        org.apache.commons.math3.stat.descriptive.moment.Mean[] $r2;
        org.apache.commons.math3.exception.DimensionMismatchException $r3;
        org.apache.commons.math3.stat.descriptive.moment.Mean $r4;
        double $d0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.VectorialMean;

        $r1 := @parameter0: double[];

        $i0 = lengthof $r1;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialMean: org.apache.commons.math3.stat.descriptive.moment.Mean[] means>;

        $i1 = lengthof $r2;

        if $i0 == $i1 goto label1;

        $r3 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i0 = lengthof $r1;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialMean: org.apache.commons.math3.stat.descriptive.moment.Mean[] means>;

        $i1 = lengthof $r2;

        specialinvoke $r3.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i0, $i1);

        throw $r3;

     label1:
        $i0 = 0;

     label2:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label3;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialMean: org.apache.commons.math3.stat.descriptive.moment.Mean[] means>;

        $r4 = $r2[$i0];

        $d0 = $r1[$i0];

        virtualinvoke $r4.<org.apache.commons.math3.stat.descriptive.moment.Mean: void increment(double)>($d0);

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return;
    }
