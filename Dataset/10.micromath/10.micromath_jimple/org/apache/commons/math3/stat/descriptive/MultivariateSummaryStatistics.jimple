org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics extends java.lang.Object implements org.apache.commons.math3.stat.descriptive.StatisticalMultivariateSummary java.io.Serializable
private static final long serialVersionUID
private org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance covarianceImpl
private org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] geoMeanImpl
private int k
private org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] maxImpl
private org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] meanImpl
private org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] minImpl
private long n
private org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumImpl
private org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumLogImpl
private org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumSqImpl
    public void <init>(int, boolean)
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        int $i0, i1;
        boolean $z0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1;
        org.apache.commons.math3.stat.descriptive.summary.Sum $r2;
        org.apache.commons.math3.stat.descriptive.summary.SumOfSquares $r3;
        org.apache.commons.math3.stat.descriptive.rank.Min $r4;
        org.apache.commons.math3.stat.descriptive.rank.Max $r5;
        org.apache.commons.math3.stat.descriptive.summary.SumOfLogs $r6;
        org.apache.commons.math3.stat.descriptive.moment.GeometricMean $r7;
        org.apache.commons.math3.stat.descriptive.moment.Mean $r8;
        org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance $r9;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: long n> = 0L;

        r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: int k> = $i0;

        $r1 = newarray (org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic)[$i0];

        r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumImpl> = $r1;

        $r1 = newarray (org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic)[$i0];

        r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumSqImpl> = $r1;

        $r1 = newarray (org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic)[$i0];

        r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] minImpl> = $r1;

        $r1 = newarray (org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic)[$i0];

        r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] maxImpl> = $r1;

        $r1 = newarray (org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic)[$i0];

        r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumLogImpl> = $r1;

        $r1 = newarray (org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic)[$i0];

        r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] geoMeanImpl> = $r1;

        $r1 = newarray (org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic)[$i0];

        r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] meanImpl> = $r1;

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumImpl>;

        $r2 = new org.apache.commons.math3.stat.descriptive.summary.Sum;

        specialinvoke $r2.<org.apache.commons.math3.stat.descriptive.summary.Sum: void <init>()>();

        $r1[i1] = $r2;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumSqImpl>;

        $r3 = new org.apache.commons.math3.stat.descriptive.summary.SumOfSquares;

        specialinvoke $r3.<org.apache.commons.math3.stat.descriptive.summary.SumOfSquares: void <init>()>();

        $r1[i1] = $r3;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] minImpl>;

        $r4 = new org.apache.commons.math3.stat.descriptive.rank.Min;

        specialinvoke $r4.<org.apache.commons.math3.stat.descriptive.rank.Min: void <init>()>();

        $r1[i1] = $r4;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] maxImpl>;

        $r5 = new org.apache.commons.math3.stat.descriptive.rank.Max;

        specialinvoke $r5.<org.apache.commons.math3.stat.descriptive.rank.Max: void <init>()>();

        $r1[i1] = $r5;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumLogImpl>;

        $r6 = new org.apache.commons.math3.stat.descriptive.summary.SumOfLogs;

        specialinvoke $r6.<org.apache.commons.math3.stat.descriptive.summary.SumOfLogs: void <init>()>();

        $r1[i1] = $r6;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] geoMeanImpl>;

        $r7 = new org.apache.commons.math3.stat.descriptive.moment.GeometricMean;

        specialinvoke $r7.<org.apache.commons.math3.stat.descriptive.moment.GeometricMean: void <init>()>();

        $r1[i1] = $r7;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] meanImpl>;

        $r8 = new org.apache.commons.math3.stat.descriptive.moment.Mean;

        specialinvoke $r8.<org.apache.commons.math3.stat.descriptive.moment.Mean: void <init>()>();

        $r1[i1] = $r8;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r9 = new org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance;

        specialinvoke $r9.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: void <init>(int,boolean)>($i0, $z0);

        r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance covarianceImpl> = $r9;

        return;
    }
    private void append(java.lang.StringBuilder, double[], java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        java.lang.StringBuilder $r1;
        double[] $r2;
        java.lang.String $r3, $r4, $r5;
        int $i0, i1;
        double $d0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r1 := @parameter0: java.lang.StringBuilder;

        $r2 := @parameter1: double[];

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: java.lang.String;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        i1 = 0;

     label1:
        $i0 = lengthof $r2;

        if i1 >= $i0 goto label3;

        if i1 <= 0 goto label2;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

     label2:
        $d0 = $r2[i1];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        i1 = i1 + 1;

        goto label1;

     label3:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        return;
    }
    private void checkDimension(int) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        int $i0, $i1;
        org.apache.commons.math3.exception.DimensionMismatchException $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $i0 := @parameter0: int;

        $i1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: int k>;

        if $i0 == $i1 goto label1;

        $r1 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: int k>;

        specialinvoke $r1.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i0, $i1);

        throw $r1;

     label1:
        return;
    }
    private void checkEmpty() throws org.apache.commons.math3.exception.MathIllegalStateException
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.exception.util.LocalizedFormats $r1;
        java.lang.Long $r2;
        long $l0;
        byte $b1;
        org.apache.commons.math3.exception.MathIllegalStateException $r3;
        java.lang.Object[] $r4;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $l0 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: long n>;

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label1;

        $r3 = new org.apache.commons.math3.exception.MathIllegalStateException;

        $r1 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC>;

        $r4 = newarray (java.lang.Object)[1];

        $l0 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: long n>;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r4[0] = $r2;

        specialinvoke $r3.<org.apache.commons.math3.exception.MathIllegalStateException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r1, $r4);

        throw $r3;

     label1:
        return;
    }
    private double[] getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1;
        double[] r2;
        double $d0;
        int $i0, $i1;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic $r3;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        $i0 = lengthof $r1;

        r2 = newarray (double)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof r2;

        if $i0 >= $i1 goto label2;

        $r3 = $r1[$i0];

        $d0 = interfaceinvoke $r3.<org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic: double getResult()>();

        r2[$i0] = $d0;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r2;
    }
    private void setImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[], org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) throws org.apache.commons.math3.exception.MathIllegalStateException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1, $r2;
        int $i0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        $r2 := @parameter1: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void checkEmpty()>();

        $i0 = lengthof $r1;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void checkDimension(int)>($i0);

        $i0 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i0);

        return;
    }
    public void addValue(double[]) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        double[] $r1;
        double d0;
        int $i0, $i1;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r2;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic $r3;
        org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance $r4;
        long $l2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r1 := @parameter0: double[];

        $i0 = lengthof $r1;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void checkDimension(int)>($i0);

        $i0 = 0;

     label1:
        $i1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: int k>;

        if $i0 >= $i1 goto label2;

        d0 = $r1[$i0];

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumImpl>;

        $r3 = $r2[$i0];

        interfaceinvoke $r3.<org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic: void increment(double)>(d0);

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumSqImpl>;

        $r3 = $r2[$i0];

        interfaceinvoke $r3.<org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic: void increment(double)>(d0);

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] minImpl>;

        $r3 = $r2[$i0];

        interfaceinvoke $r3.<org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic: void increment(double)>(d0);

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] maxImpl>;

        $r3 = $r2[$i0];

        interfaceinvoke $r3.<org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic: void increment(double)>(d0);

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumLogImpl>;

        $r3 = $r2[$i0];

        interfaceinvoke $r3.<org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic: void increment(double)>(d0);

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] geoMeanImpl>;

        $r3 = $r2[$i0];

        interfaceinvoke $r3.<org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic: void increment(double)>(d0);

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] meanImpl>;

        $r3 = $r2[$i0];

        interfaceinvoke $r3.<org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic: void increment(double)>(d0);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r4 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance covarianceImpl>;

        virtualinvoke $r4.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: void increment(double[])>($r1);

        $l2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: long n>;

        $l2 = $l2 + 1L;

        r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: long n> = $l2;

        return;
    }
    public void clear()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        int i0, $i1;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic $r2;
        org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance $r3;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: long n> = 0L;

        i0 = 0;

     label1:
        $i1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: int k>;

        if i0 >= $i1 goto label2;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] minImpl>;

        $r2 = $r1[i0];

        interfaceinvoke $r2.<org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic: void clear()>();

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] maxImpl>;

        $r2 = $r1[i0];

        interfaceinvoke $r2.<org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic: void clear()>();

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumImpl>;

        $r2 = $r1[i0];

        interfaceinvoke $r2.<org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic: void clear()>();

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumLogImpl>;

        $r2 = $r1[i0];

        interfaceinvoke $r2.<org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic: void clear()>();

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumSqImpl>;

        $r2 = $r1[i0];

        interfaceinvoke $r2.<org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic: void clear()>();

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] geoMeanImpl>;

        $r2 = $r1[i0];

        interfaceinvoke $r2.<org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic: void clear()>();

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] meanImpl>;

        $r2 = $r1[i0];

        interfaceinvoke $r2.<org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic: void clear()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        $r3 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance covarianceImpl>;

        virtualinvoke $r3.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: void clear()>();

        return;
    }
    public boolean equals(java.lang.Object)
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0, r2;
        java.lang.Object $r1;
        boolean $z0;
        double[] $r3, $r4;
        long $l0;
        float $f0, $f1;
        org.apache.commons.math3.linear.RealMatrix $r5, $r6;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics) $r1;

        $r3 = virtualinvoke r2.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getGeometricMean()>();

        $r4 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getGeometricMean()>();

        $z0 = staticinvoke <org.apache.commons.math3.util.MathArrays: boolean equalsIncludingNaN(double[],double[])>($r3, $r4);

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke r2.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getMax()>();

        $r4 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getMax()>();

        $z0 = staticinvoke <org.apache.commons.math3.util.MathArrays: boolean equalsIncludingNaN(double[],double[])>($r3, $r4);

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke r2.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getMean()>();

        $r4 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getMean()>();

        $z0 = staticinvoke <org.apache.commons.math3.util.MathArrays: boolean equalsIncludingNaN(double[],double[])>($r3, $r4);

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke r2.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getMin()>();

        $r4 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getMin()>();

        $z0 = staticinvoke <org.apache.commons.math3.util.MathArrays: boolean equalsIncludingNaN(double[],double[])>($r3, $r4);

        if $z0 == 0 goto label3;

        $l0 = virtualinvoke r2.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: long getN()>();

        $f0 = (float) $l0;

        $l0 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: long getN()>();

        $f1 = (float) $l0;

        $z0 = staticinvoke <org.apache.commons.math3.util.Precision: boolean equalsIncludingNaN(float,float)>($f0, $f1);

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke r2.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getSum()>();

        $r4 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getSum()>();

        $z0 = staticinvoke <org.apache.commons.math3.util.MathArrays: boolean equalsIncludingNaN(double[],double[])>($r3, $r4);

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke r2.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getSumSq()>();

        $r4 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getSumSq()>();

        $z0 = staticinvoke <org.apache.commons.math3.util.MathArrays: boolean equalsIncludingNaN(double[],double[])>($r3, $r4);

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke r2.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getSumLog()>();

        $r4 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getSumLog()>();

        $z0 = staticinvoke <org.apache.commons.math3.util.MathArrays: boolean equalsIncludingNaN(double[],double[])>($r3, $r4);

        if $z0 == 0 goto label3;

        $r5 = virtualinvoke r2.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.linear.RealMatrix getCovariance()>();

        $r6 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.linear.RealMatrix getCovariance()>();

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label4;

     label3:
        return 0;

     label4:
        return 1;
    }
    public org.apache.commons.math3.linear.RealMatrix getCovariance()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.linear.RealMatrix $r1;
        org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance covarianceImpl>;

        $r1 = virtualinvoke $r2.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: org.apache.commons.math3.linear.RealMatrix getResult()>();

        return $r1;
    }
    public int getDimension()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        int i0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        i0 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: int k>;

        return i0;
    }
    public org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getGeoMeanImpl()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        java.lang.Object $r1;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] geoMeanImpl>;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) $r1;

        return $r2;
    }
    public double[] getGeometricMean()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        double[] $r1;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] geoMeanImpl>;

        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>($r2);

        return $r1;
    }
    public double[] getMax()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        double[] $r1;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] maxImpl>;

        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>($r2);

        return $r1;
    }
    public org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getMaxImpl()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        java.lang.Object $r1;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] maxImpl>;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) $r1;

        return $r2;
    }
    public double[] getMean()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        double[] $r1;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] meanImpl>;

        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>($r2);

        return $r1;
    }
    public org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getMeanImpl()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        java.lang.Object $r1;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] meanImpl>;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) $r1;

        return $r2;
    }
    public double[] getMin()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        double[] $r1;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] minImpl>;

        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>($r2);

        return $r1;
    }
    public org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getMinImpl()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        java.lang.Object $r1;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] minImpl>;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) $r1;

        return $r2;
    }
    public long getN()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        long l0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        l0 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: long n>;

        return l0;
    }
    public double[] getStandardDeviation()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        double[] r1;
        int $i0, $i3;
        long $l1;
        byte $b2;
        org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance $r2;
        org.apache.commons.math3.linear.RealMatrix $r3;
        double $d0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $i0 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: int k>;

        r1 = newarray (double)[$i0];

        $l1 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: long getN()>();

        $b2 = $l1 cmp 1L;

        if $b2 >= 0 goto label1;

        staticinvoke <java.util.Arrays: void fill(double[],double)>(r1, #NaN);

        return r1;

     label1:
        $l1 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: long getN()>();

        $b2 = $l1 cmp 2L;

        if $b2 >= 0 goto label2;

        staticinvoke <java.util.Arrays: void fill(double[],double)>(r1, 0.0);

        return r1;

     label2:
        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance covarianceImpl>;

        $r3 = virtualinvoke $r2.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: org.apache.commons.math3.linear.RealMatrix getResult()>();

        $i0 = 0;

     label3:
        $i3 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: int k>;

        if $i0 >= $i3 goto label4;

        $d0 = interfaceinvoke $r3.<org.apache.commons.math3.linear.RealMatrix: double getEntry(int,int)>($i0, $i0);

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>($d0);

        r1[$i0] = $d0;

        $i0 = $i0 + 1;

        goto label3;

     label4:
        return r1;
    }
    public double[] getSum()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        double[] $r1;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumImpl>;

        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>($r2);

        return $r1;
    }
    public org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getSumImpl()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        java.lang.Object $r1;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumImpl>;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) $r1;

        return $r2;
    }
    public double[] getSumLog()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        double[] $r1;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumLogImpl>;

        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>($r2);

        return $r1;
    }
    public org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getSumLogImpl()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        java.lang.Object $r1;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumLogImpl>;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) $r1;

        return $r2;
    }
    public double[] getSumSq()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        double[] $r1;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumSqImpl>;

        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>($r2);

        return $r1;
    }
    public org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getSumsqImpl()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        java.lang.Object $r1;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumSqImpl>;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) $r1;

        return $r2;
    }
    public int hashCode()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        double[] $r1;
        int $i0, $i1;
        long $l2;
        double $d0;
        org.apache.commons.math3.linear.RealMatrix $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getGeometricMean()>();

        $i0 = staticinvoke <org.apache.commons.math3.util.MathUtils: int hash(double[])>($r1);

        $i0 = $i0 + 31;

        $i0 = $i0 * 31;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getGeometricMean()>();

        $i1 = staticinvoke <org.apache.commons.math3.util.MathUtils: int hash(double[])>($r1);

        $i0 = $i0 + $i1;

        $i0 = $i0 * 31;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getMax()>();

        $i1 = staticinvoke <org.apache.commons.math3.util.MathUtils: int hash(double[])>($r1);

        $i0 = $i0 + $i1;

        $i0 = $i0 * 31;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getMean()>();

        $i1 = staticinvoke <org.apache.commons.math3.util.MathUtils: int hash(double[])>($r1);

        $i0 = $i0 + $i1;

        $i0 = $i0 * 31;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getMin()>();

        $i1 = staticinvoke <org.apache.commons.math3.util.MathUtils: int hash(double[])>($r1);

        $i0 = $i0 + $i1;

        $i0 = $i0 * 31;

        $l2 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: long getN()>();

        $d0 = (double) $l2;

        $i1 = staticinvoke <org.apache.commons.math3.util.MathUtils: int hash(double)>($d0);

        $i0 = $i0 + $i1;

        $i0 = $i0 * 31;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getSum()>();

        $i1 = staticinvoke <org.apache.commons.math3.util.MathUtils: int hash(double[])>($r1);

        $i0 = $i0 + $i1;

        $i0 = $i0 * 31;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getSumSq()>();

        $i1 = staticinvoke <org.apache.commons.math3.util.MathUtils: int hash(double[])>($r1);

        $i0 = $i0 + $i1;

        $i0 = $i0 * 31;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getSumLog()>();

        $i1 = staticinvoke <org.apache.commons.math3.util.MathUtils: int hash(double[])>($r1);

        $i0 = $i0 + $i1;

        $i0 = $i0 * 31;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.linear.RealMatrix getCovariance()>();

        $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $i0 = $i0 + $i1;

        return $i0;
    }
    public void setGeoMeanImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) throws org.apache.commons.math3.exception.MathIllegalStateException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1, $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] geoMeanImpl>;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void setImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[],org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>($r1, $r2);

        return;
    }
    public void setMaxImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) throws org.apache.commons.math3.exception.MathIllegalStateException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1, $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] maxImpl>;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void setImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[],org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>($r1, $r2);

        return;
    }
    public void setMeanImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) throws org.apache.commons.math3.exception.MathIllegalStateException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1, $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] meanImpl>;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void setImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[],org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>($r1, $r2);

        return;
    }
    public void setMinImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) throws org.apache.commons.math3.exception.MathIllegalStateException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1, $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] minImpl>;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void setImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[],org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>($r1, $r2);

        return;
    }
    public void setSumImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) throws org.apache.commons.math3.exception.MathIllegalStateException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1, $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumImpl>;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void setImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[],org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>($r1, $r2);

        return;
    }
    public void setSumLogImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) throws org.apache.commons.math3.exception.MathIllegalStateException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1, $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumLogImpl>;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void setImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[],org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>($r1, $r2);

        return;
    }
    public void setSumsqImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) throws org.apache.commons.math3.exception.MathIllegalStateException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1, $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumSqImpl>;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void setImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[],org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>($r1, $r2);

        return;
    }
    public java.lang.String toString()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        java.lang.StringBuilder r1, $r3;
        java.lang.String $r2, $r4;
        long $l0;
        double[] $r5;
        org.apache.commons.math3.linear.RealMatrix $r6;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MultivariateSummaryStatistics:");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("n: ");

        $l0 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: long getN()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getMin()>();

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void append(java.lang.StringBuilder,double[],java.lang.String,java.lang.String,java.lang.String)>(r1, $r5, "min: ", ", ", $r2);

        $r5 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getMax()>();

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void append(java.lang.StringBuilder,double[],java.lang.String,java.lang.String,java.lang.String)>(r1, $r5, "max: ", ", ", $r2);

        $r5 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getMean()>();

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void append(java.lang.StringBuilder,double[],java.lang.String,java.lang.String,java.lang.String)>(r1, $r5, "mean: ", ", ", $r2);

        $r5 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getGeometricMean()>();

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void append(java.lang.StringBuilder,double[],java.lang.String,java.lang.String,java.lang.String)>(r1, $r5, "geometric mean: ", ", ", $r2);

        $r5 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getSumSq()>();

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void append(java.lang.StringBuilder,double[],java.lang.String,java.lang.String,java.lang.String)>(r1, $r5, "sum of squares: ", ", ", $r2);

        $r5 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getSumLog()>();

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void append(java.lang.StringBuilder,double[],java.lang.String,java.lang.String,java.lang.String)>(r1, $r5, "sum of logarithms: ", ", ", $r2);

        $r5 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getStandardDeviation()>();

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void append(java.lang.StringBuilder,double[],java.lang.String,java.lang.String,java.lang.String)>(r1, $r5, "standard deviation: ", ", ", $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("covariance: ");

        $r6 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.linear.RealMatrix getCovariance()>();

        $r4 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
