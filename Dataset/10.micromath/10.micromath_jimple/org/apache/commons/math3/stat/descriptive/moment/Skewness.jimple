org.apache.commons.math3.stat.descriptive.moment.Skewness extends org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic implements java.io.Serializable
private static final long serialVersionUID
protected boolean incMoment
protected org.apache.commons.math3.stat.descriptive.moment.ThirdMoment moment
    public void <init>()
    {
        org.apache.commons.math3.stat.descriptive.moment.Skewness r0;
        org.apache.commons.math3.stat.descriptive.moment.ThirdMoment $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.Skewness;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic: void <init>()>();

        r0.<org.apache.commons.math3.stat.descriptive.moment.Skewness: org.apache.commons.math3.stat.descriptive.moment.ThirdMoment moment> = null;

        r0.<org.apache.commons.math3.stat.descriptive.moment.Skewness: boolean incMoment> = 1;

        $r1 = new org.apache.commons.math3.stat.descriptive.moment.ThirdMoment;

        specialinvoke $r1.<org.apache.commons.math3.stat.descriptive.moment.ThirdMoment: void <init>()>();

        r0.<org.apache.commons.math3.stat.descriptive.moment.Skewness: org.apache.commons.math3.stat.descriptive.moment.ThirdMoment moment> = $r1;

        return;
    }
    public void <init>(org.apache.commons.math3.stat.descriptive.moment.Skewness) throws org.apache.commons.math3.exception.NullArgumentException
    {
        org.apache.commons.math3.stat.descriptive.moment.Skewness r0, $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.Skewness;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.moment.Skewness;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic: void <init>()>();

        r0.<org.apache.commons.math3.stat.descriptive.moment.Skewness: org.apache.commons.math3.stat.descriptive.moment.ThirdMoment moment> = null;

        staticinvoke <org.apache.commons.math3.stat.descriptive.moment.Skewness: void copy(org.apache.commons.math3.stat.descriptive.moment.Skewness,org.apache.commons.math3.stat.descriptive.moment.Skewness)>($r1, r0);

        return;
    }
    public void <init>(org.apache.commons.math3.stat.descriptive.moment.ThirdMoment)
    {
        org.apache.commons.math3.stat.descriptive.moment.Skewness r0;
        org.apache.commons.math3.stat.descriptive.moment.ThirdMoment $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.Skewness;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.moment.ThirdMoment;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic: void <init>()>();

        r0.<org.apache.commons.math3.stat.descriptive.moment.Skewness: org.apache.commons.math3.stat.descriptive.moment.ThirdMoment moment> = null;

        r0.<org.apache.commons.math3.stat.descriptive.moment.Skewness: boolean incMoment> = 0;

        r0.<org.apache.commons.math3.stat.descriptive.moment.Skewness: org.apache.commons.math3.stat.descriptive.moment.ThirdMoment moment> = $r1;

        return;
    }
    public static void copy(org.apache.commons.math3.stat.descriptive.moment.Skewness, org.apache.commons.math3.stat.descriptive.moment.Skewness) throws org.apache.commons.math3.exception.NullArgumentException
    {
        org.apache.commons.math3.stat.descriptive.moment.Skewness $r0, $r1;
        double[] $r2;
        org.apache.commons.math3.stat.descriptive.moment.ThirdMoment $r3, $r4;
        boolean $z0;

        $r0 := @parameter0: org.apache.commons.math3.stat.descriptive.moment.Skewness;

        $r1 := @parameter1: org.apache.commons.math3.stat.descriptive.moment.Skewness;

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>($r0);

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>($r1);

        $r2 = virtualinvoke $r0.<org.apache.commons.math3.stat.descriptive.moment.Skewness: double[] getDataRef()>();

        virtualinvoke $r1.<org.apache.commons.math3.stat.descriptive.moment.Skewness: void setData(double[])>($r2);

        $r3 = new org.apache.commons.math3.stat.descriptive.moment.ThirdMoment;

        $r4 = $r0.<org.apache.commons.math3.stat.descriptive.moment.Skewness: org.apache.commons.math3.stat.descriptive.moment.ThirdMoment moment>;

        $r4 = virtualinvoke $r4.<org.apache.commons.math3.stat.descriptive.moment.ThirdMoment: org.apache.commons.math3.stat.descriptive.moment.ThirdMoment copy()>();

        specialinvoke $r3.<org.apache.commons.math3.stat.descriptive.moment.ThirdMoment: void <init>(org.apache.commons.math3.stat.descriptive.moment.ThirdMoment)>($r4);

        $r1.<org.apache.commons.math3.stat.descriptive.moment.Skewness: org.apache.commons.math3.stat.descriptive.moment.ThirdMoment moment> = $r3;

        $z0 = $r0.<org.apache.commons.math3.stat.descriptive.moment.Skewness: boolean incMoment>;

        $r1.<org.apache.commons.math3.stat.descriptive.moment.Skewness: boolean incMoment> = $z0;

        return;
    }
    public void clear()
    {
        org.apache.commons.math3.stat.descriptive.moment.Skewness r0;
        boolean $z0;
        org.apache.commons.math3.stat.descriptive.moment.ThirdMoment $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.Skewness;

        $z0 = r0.<org.apache.commons.math3.stat.descriptive.moment.Skewness: boolean incMoment>;

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.moment.Skewness: org.apache.commons.math3.stat.descriptive.moment.ThirdMoment moment>;

        virtualinvoke $r1.<org.apache.commons.math3.stat.descriptive.moment.ThirdMoment: void clear()>();

     label1:
        return;
    }
    public volatile org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy()
    {
        org.apache.commons.math3.stat.descriptive.moment.Skewness r0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.Skewness;

        r0 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.moment.Skewness: org.apache.commons.math3.stat.descriptive.moment.Skewness copy()>();

        return r0;
    }
    public volatile org.apache.commons.math3.stat.descriptive.UnivariateStatistic copy()
    {
        org.apache.commons.math3.stat.descriptive.moment.Skewness r0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.Skewness;

        r0 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.moment.Skewness: org.apache.commons.math3.stat.descriptive.moment.Skewness copy()>();

        return r0;
    }
    public org.apache.commons.math3.stat.descriptive.moment.Skewness copy()
    {
        org.apache.commons.math3.stat.descriptive.moment.Skewness r0, r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.Skewness;

        r1 = new org.apache.commons.math3.stat.descriptive.moment.Skewness;

        specialinvoke r1.<org.apache.commons.math3.stat.descriptive.moment.Skewness: void <init>()>();

        staticinvoke <org.apache.commons.math3.stat.descriptive.moment.Skewness: void copy(org.apache.commons.math3.stat.descriptive.moment.Skewness,org.apache.commons.math3.stat.descriptive.moment.Skewness)>(r0, r1);

        return r1;
    }
    public double evaluate(double[], int, int) throws org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.stat.descriptive.moment.Skewness r0;
        double[] $r1;
        int $i0, $i1, i2, $i3;
        org.apache.commons.math3.stat.descriptive.moment.Mean r2;
        double d0, $d1, d2, $d3, $d4;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.Skewness;

        $r1 := @parameter0: double[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.moment.Skewness: boolean test(double[],int,int)>($r1, $i0, $i1);

        if $z0 == 0 goto label5;

        if $i1 <= 2 goto label5;

        r2 = new org.apache.commons.math3.stat.descriptive.moment.Mean;

        specialinvoke r2.<org.apache.commons.math3.stat.descriptive.moment.Mean: void <init>()>();

        $d1 = virtualinvoke r2.<org.apache.commons.math3.stat.descriptive.moment.Mean: double evaluate(double[],int,int)>($r1, $i0, $i1);

        d2 = 0.0;

        d0 = 0.0;

        i2 = $i0;

     label1:
        $i3 = $i0 + $i1;

        if i2 >= $i3 goto label2;

        $d3 = $r1[i2];

        $d3 = $d3 - $d1;

        $d4 = $d3 * $d3;

        d2 = d2 + $d4;

        d0 = d0 + $d3;

        i2 = i2 + 1;

        goto label1;

     label2:
        d0 = d0 * d0;

        $d3 = (double) $i1;

        d0 = d0 / $d3;

        d2 = d2 - d0;

        i2 = $i1 + -1;

        d0 = (double) i2;

        d0 = d2 / d0;

        d2 = 0.0;

        i2 = $i0;

     label3:
        $i3 = $i0 + $i1;

        if i2 >= $i3 goto label4;

        $d3 = $r1[i2];

        $d3 = $d3 - $d1;

        $d4 = $d3 * $d3;

        $d3 = $d4 * $d3;

        d2 = d2 + $d3;

        i2 = i2 + 1;

        goto label3;

     label4:
        $d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(d0);

        $d1 = $d1 * d0;

        $d1 = d2 / $d1;

        d2 = (double) $i1;

        d0 = d2 - 1.0;

        $d3 = d2 - 2.0;

        d0 = d0 * $d3;

        d2 = d2 / d0;

        $d1 = d2 * $d1;

        return $d1;

     label5:
        return #NaN;
    }
    public long getN()
    {
        org.apache.commons.math3.stat.descriptive.moment.Skewness r0;
        long $l0;
        org.apache.commons.math3.stat.descriptive.moment.ThirdMoment $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.Skewness;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.moment.Skewness: org.apache.commons.math3.stat.descriptive.moment.ThirdMoment moment>;

        $l0 = virtualinvoke $r1.<org.apache.commons.math3.stat.descriptive.moment.ThirdMoment: long getN()>();

        return $l0;
    }
    public double getResult()
    {
        org.apache.commons.math3.stat.descriptive.moment.Skewness r0;
        double d0, d1, $d2, $d3;
        org.apache.commons.math3.stat.descriptive.moment.ThirdMoment $r1;
        long $l0;
        byte $b1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.Skewness;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.moment.Skewness: org.apache.commons.math3.stat.descriptive.moment.ThirdMoment moment>;

        $l0 = $r1.<org.apache.commons.math3.stat.descriptive.moment.ThirdMoment: long n>;

        $b1 = $l0 cmp 3L;

        if $b1 >= 0 goto label1;

        return #NaN;

     label1:
        $r1 = r0.<org.apache.commons.math3.stat.descriptive.moment.Skewness: org.apache.commons.math3.stat.descriptive.moment.ThirdMoment moment>;

        d1 = $r1.<org.apache.commons.math3.stat.descriptive.moment.ThirdMoment: double m2>;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.moment.Skewness: org.apache.commons.math3.stat.descriptive.moment.ThirdMoment moment>;

        $l0 = $r1.<org.apache.commons.math3.stat.descriptive.moment.ThirdMoment: long n>;

        $l0 = $l0 - 1L;

        $d2 = (double) $l0;

        d1 = d1 / $d2;

        $b1 = d1 cmpg 1.0E-19;

        if $b1 >= 0 goto label2;

        return 0.0;

     label2:
        $r1 = r0.<org.apache.commons.math3.stat.descriptive.moment.Skewness: org.apache.commons.math3.stat.descriptive.moment.ThirdMoment moment>;

        $l0 = virtualinvoke $r1.<org.apache.commons.math3.stat.descriptive.moment.ThirdMoment: long getN()>();

        d0 = (double) $l0;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.moment.Skewness: org.apache.commons.math3.stat.descriptive.moment.ThirdMoment moment>;

        $d2 = $r1.<org.apache.commons.math3.stat.descriptive.moment.ThirdMoment: double m3>;

        $d2 = $d2 * d0;

        $d3 = d0 - 1.0;

        d0 = d0 - 2.0;

        d0 = $d3 * d0;

        $d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(d1);

        d0 = d0 * $d3;

        d1 = d0 * d1;

        d1 = $d2 / d1;

        return d1;
    }
    public void increment(double)
    {
        org.apache.commons.math3.stat.descriptive.moment.Skewness r0;
        double $d0;
        boolean $z0;
        org.apache.commons.math3.stat.descriptive.moment.ThirdMoment $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.Skewness;

        $d0 := @parameter0: double;

        $z0 = r0.<org.apache.commons.math3.stat.descriptive.moment.Skewness: boolean incMoment>;

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.moment.Skewness: org.apache.commons.math3.stat.descriptive.moment.ThirdMoment moment>;

        virtualinvoke $r1.<org.apache.commons.math3.stat.descriptive.moment.ThirdMoment: void increment(double)>($d0);

     label1:
        return;
    }
