org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic extends org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic implements org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic
    public void <init>()
    {
        org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic r0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic: void <init>()>();

        return;
    }
public abstract void clear() { 
// no body
} 
public abstract org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy() { 
// no body
} 
    public volatile org.apache.commons.math3.stat.descriptive.UnivariateStatistic copy()
    {
        org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy()>();

        return $r1;
    }
    public boolean equals(java.lang.Object)
    {
        org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic r0, r2;
        java.lang.Object $r1;
        boolean $z0;
        double $d0, $d1;
        long $l0;
        float $f0, $f1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic) $r1;

        $d0 = virtualinvoke r2.<org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic: double getResult()>();

        $d1 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic: double getResult()>();

        $z0 = staticinvoke <org.apache.commons.math3.util.Precision: boolean equalsIncludingNaN(double,double)>($d0, $d1);

        if $z0 == 0 goto label3;

        $l0 = virtualinvoke r2.<org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic: long getN()>();

        $f0 = (float) $l0;

        $l0 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic: long getN()>();

        $f1 = (float) $l0;

        $z0 = staticinvoke <org.apache.commons.math3.util.Precision: boolean equalsIncludingNaN(float,float)>($f0, $f1);

        if $z0 != 0 goto label4;

     label3:
        return 0;

     label4:
        return 1;
    }
    public double evaluate(double[]) throws org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic r0;
        double[] $r1;
        org.apache.commons.math3.exception.util.LocalizedFormats $r2;
        double $d0;
        org.apache.commons.math3.exception.NullArgumentException $r3;
        java.lang.Object[] $r4;
        int $i0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic;

        $r1 := @parameter0: double[];

        if $r1 != null goto label1;

        $r3 = new org.apache.commons.math3.exception.NullArgumentException;

        $r2 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats INPUT_ARRAY>;

        $r4 = newarray (java.lang.Object)[0];

        specialinvoke $r3.<org.apache.commons.math3.exception.NullArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r2, $r4);

        throw $r3;

     label1:
        $i0 = lengthof $r1;

        $d0 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic: double evaluate(double[],int,int)>($r1, 0, $i0);

        return $d0;
    }
    public double evaluate(double[], int, int) throws org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic r0;
        double[] $r1;
        int $i0, $i1;
        boolean $z0;
        double $d0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic;

        $r1 := @parameter0: double[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic: boolean test(double[],int,int)>($r1, $i0, $i1);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic: void clear()>();

        virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic: void incrementAll(double[],int,int)>($r1, $i0, $i1);

     label1:
        $d0 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic: double getResult()>();

        return $d0;
    }
public abstract double getResult() { 
// no body
} 
    public int hashCode()
    {
        org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic r0;
        double $d0;
        int $i0, $i2;
        long $l1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic;

        $d0 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic: double getResult()>();

        $i0 = staticinvoke <org.apache.commons.math3.util.MathUtils: int hash(double)>($d0);

        $i0 = $i0 + 31;

        $i0 = $i0 * 31;

        $l1 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic: long getN()>();

        $d0 = (double) $l1;

        $i2 = staticinvoke <org.apache.commons.math3.util.MathUtils: int hash(double)>($d0);

        $i0 = $i0 + $i2;

        return $i0;
    }
public abstract void increment(double) { 
// no body
} 
    public void incrementAll(double[]) throws org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic r0;
        double[] $r1;
        org.apache.commons.math3.exception.util.LocalizedFormats $r2;
        org.apache.commons.math3.exception.NullArgumentException $r3;
        java.lang.Object[] $r4;
        int $i0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic;

        $r1 := @parameter0: double[];

        if $r1 != null goto label1;

        $r3 = new org.apache.commons.math3.exception.NullArgumentException;

        $r2 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats INPUT_ARRAY>;

        $r4 = newarray (java.lang.Object)[0];

        specialinvoke $r3.<org.apache.commons.math3.exception.NullArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r2, $r4);

        throw $r3;

     label1:
        $i0 = lengthof $r1;

        virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic: void incrementAll(double[],int,int)>($r1, 0, $i0);

        return;
    }
    public void incrementAll(double[], int, int) throws org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic r0;
        double[] $r1;
        int $i0, $i1;
        boolean $z0;
        double $d0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic;

        $r1 := @parameter0: double[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic: boolean test(double[],int,int)>($r1, $i0, $i1);

        if $z0 == 0 goto label2;

        $i1 = $i0 + $i1;

     label1:
        if $i0 >= $i1 goto label2;

        $d0 = $r1[$i0];

        virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic: void increment(double)>($d0);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }
