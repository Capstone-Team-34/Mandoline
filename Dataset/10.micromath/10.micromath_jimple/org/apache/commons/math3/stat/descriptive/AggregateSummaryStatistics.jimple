org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics extends java.lang.Object implements org.apache.commons.math3.stat.descriptive.StatisticalSummary java.io.Serializable
private static final long serialVersionUID
private final org.apache.commons.math3.stat.descriptive.SummaryStatistics statistics
private final org.apache.commons.math3.stat.descriptive.SummaryStatistics statisticsPrototype
    public void <init>()
    {
        org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.SummaryStatistics $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics;

        $r1 = new org.apache.commons.math3.stat.descriptive.SummaryStatistics;

        specialinvoke $r1.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: void <init>()>();

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: void <init>(org.apache.commons.math3.stat.descriptive.SummaryStatistics)>($r1);

        return;
    }
    public void <init>(org.apache.commons.math3.stat.descriptive.SummaryStatistics) throws org.apache.commons.math3.exception.NullArgumentException
    {
        org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.SummaryStatistics $r1, $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.SummaryStatistics;

        if $r1 != null goto label2;

        $r2 = null;

     label1:
        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: void <init>(org.apache.commons.math3.stat.descriptive.SummaryStatistics,org.apache.commons.math3.stat.descriptive.SummaryStatistics)>($r1, $r2);

        return;

     label2:
        $r2 = new org.apache.commons.math3.stat.descriptive.SummaryStatistics;

        specialinvoke $r2.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: void <init>(org.apache.commons.math3.stat.descriptive.SummaryStatistics)>($r1);

        goto label1;
    }
    public void <init>(org.apache.commons.math3.stat.descriptive.SummaryStatistics, org.apache.commons.math3.stat.descriptive.SummaryStatistics)
    {
        org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.SummaryStatistics $r1, $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.SummaryStatistics;

        $r2 := @parameter1: org.apache.commons.math3.stat.descriptive.SummaryStatistics;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $r1 != null goto label1;

        $r1 = new org.apache.commons.math3.stat.descriptive.SummaryStatistics;

        specialinvoke $r1.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: void <init>()>();

     label1:
        r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: org.apache.commons.math3.stat.descriptive.SummaryStatistics statisticsPrototype> = $r1;

        if $r2 != null goto label2;

        $r2 = new org.apache.commons.math3.stat.descriptive.SummaryStatistics;

        specialinvoke $r2.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: void <init>()>();

     label2:
        r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: org.apache.commons.math3.stat.descriptive.SummaryStatistics statistics> = $r2;

        return;
    }
    public static org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues aggregate(java.util.Collection)
    {
        java.util.Collection r0;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        java.util.Iterator $r1;
        boolean $z0;
        java.lang.Object $r2;
        org.apache.commons.math3.stat.descriptive.StatisticalSummary r3;
        long $l0, l1;
        byte $b2;
        org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues $r4;

        r0 := @parameter0: java.util.Collection;

        if r0 != null goto label01;

        return null;

     label01:
        $r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label02;

        return null;

     label02:
        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.commons.math3.stat.descriptive.StatisticalSummary) $r2;

        $l0 = interfaceinvoke r3.<org.apache.commons.math3.stat.descriptive.StatisticalSummary: long getN()>();

        l1 = $l0;

        $d2 = interfaceinvoke r3.<org.apache.commons.math3.stat.descriptive.StatisticalSummary: double getMin()>();

        $d3 = interfaceinvoke r3.<org.apache.commons.math3.stat.descriptive.StatisticalSummary: double getSum()>();

        $d4 = interfaceinvoke r3.<org.apache.commons.math3.stat.descriptive.StatisticalSummary: double getMax()>();

        $d5 = interfaceinvoke r3.<org.apache.commons.math3.stat.descriptive.StatisticalSummary: double getVariance()>();

        $d6 = (double) $l0;

        $d6 = $d6 - 1.0;

        $d6 = $d5 * $d6;

        $d5 = interfaceinvoke r3.<org.apache.commons.math3.stat.descriptive.StatisticalSummary: double getMean()>();

     label03:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.commons.math3.stat.descriptive.StatisticalSummary) $r2;

        $d7 = interfaceinvoke r3.<org.apache.commons.math3.stat.descriptive.StatisticalSummary: double getMin()>();

        $b2 = $d7 cmpg $d2;

        if $b2 < 0 goto label04;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d2);

        if $z0 == 0 goto label05;

     label04:
        $d2 = interfaceinvoke r3.<org.apache.commons.math3.stat.descriptive.StatisticalSummary: double getMin()>();

     label05:
        $d7 = interfaceinvoke r3.<org.apache.commons.math3.stat.descriptive.StatisticalSummary: double getMax()>();

        $b2 = $d7 cmpl $d4;

        if $b2 > 0 goto label06;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d4);

        if $z0 == 0 goto label07;

     label06:
        $d4 = interfaceinvoke r3.<org.apache.commons.math3.stat.descriptive.StatisticalSummary: double getMax()>();

     label07:
        $d7 = interfaceinvoke r3.<org.apache.commons.math3.stat.descriptive.StatisticalSummary: double getSum()>();

        $d3 = $d3 + $d7;

        $d8 = (double) l1;

        $l0 = interfaceinvoke r3.<org.apache.commons.math3.stat.descriptive.StatisticalSummary: long getN()>();

        $d7 = (double) $l0;

        d1 = (double) l1;

        d1 = d1 + $d7;

        l1 = (long) d1;

        d1 = interfaceinvoke r3.<org.apache.commons.math3.stat.descriptive.StatisticalSummary: double getMean()>();

        d1 = d1 - $d5;

        $d5 = (double) l1;

        $d5 = $d3 / $d5;

        d0 = interfaceinvoke r3.<org.apache.commons.math3.stat.descriptive.StatisticalSummary: double getVariance()>();

        $d9 = $d7 - 1.0;

        d0 = d0 * $d9;

        $d6 = $d6 + d0;

        d1 = d1 * d1;

        $d8 = d1 * $d8;

        $d7 = $d8 * $d7;

        $d8 = (double) l1;

        $d7 = $d7 / $d8;

        $d6 = $d6 + $d7;

        goto label03;

     label08:
        $b2 = l1 cmp 0L;

        if $b2 != 0 goto label10;

        $d6 = #NaN;

     label09:
        $r4 = new org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues;

        specialinvoke $r4.<org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues: void <init>(double,double,long,double,double,double)>($d5, $d6, l1, $d4, $d2, $d3);

        return $r4;

     label10:
        $b2 = l1 cmp 1L;

        if $b2 != 0 goto label11;

        $d6 = 0.0;

        goto label09;

     label11:
        $l0 = l1 - 1L;

        $d7 = (double) $l0;

        $d6 = $d6 / $d7;

        goto label09;
    }
    public org.apache.commons.math3.stat.descriptive.SummaryStatistics createContributingStatistics()
    {
        org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics$AggregatingSummaryStatistics r1;
        org.apache.commons.math3.stat.descriptive.SummaryStatistics $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics;

        r1 = new org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics$AggregatingSummaryStatistics;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: org.apache.commons.math3.stat.descriptive.SummaryStatistics statistics>;

        specialinvoke r1.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics$AggregatingSummaryStatistics: void <init>(org.apache.commons.math3.stat.descriptive.SummaryStatistics)>($r2);

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: org.apache.commons.math3.stat.descriptive.SummaryStatistics statisticsPrototype>;

        staticinvoke <org.apache.commons.math3.stat.descriptive.SummaryStatistics: void copy(org.apache.commons.math3.stat.descriptive.SummaryStatistics,org.apache.commons.math3.stat.descriptive.SummaryStatistics)>($r2, r1);

        return r1;
    }
    public double getGeometricMean()
    {
        org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.SummaryStatistics $r1, $r2;
        double $d0;
        java.lang.Throwable $r3;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: org.apache.commons.math3.stat.descriptive.SummaryStatistics statistics>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: org.apache.commons.math3.stat.descriptive.SummaryStatistics statistics>;

        $d0 = virtualinvoke $r2.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: double getGeometricMean()>();

        exitmonitor $r1;

     label2:
        return $d0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
    public double getMax()
    {
        org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.SummaryStatistics $r1, $r2;
        double $d0;
        java.lang.Throwable $r3;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: org.apache.commons.math3.stat.descriptive.SummaryStatistics statistics>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: org.apache.commons.math3.stat.descriptive.SummaryStatistics statistics>;

        $d0 = virtualinvoke $r2.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: double getMax()>();

        exitmonitor $r1;

     label2:
        return $d0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
    public double getMean()
    {
        org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.SummaryStatistics $r1, $r2;
        double $d0;
        java.lang.Throwable $r3;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: org.apache.commons.math3.stat.descriptive.SummaryStatistics statistics>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: org.apache.commons.math3.stat.descriptive.SummaryStatistics statistics>;

        $d0 = virtualinvoke $r2.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: double getMean()>();

        exitmonitor $r1;

     label2:
        return $d0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
    public double getMin()
    {
        org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.SummaryStatistics $r1, $r2;
        double $d0;
        java.lang.Throwable $r3;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: org.apache.commons.math3.stat.descriptive.SummaryStatistics statistics>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: org.apache.commons.math3.stat.descriptive.SummaryStatistics statistics>;

        $d0 = virtualinvoke $r2.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: double getMin()>();

        exitmonitor $r1;

     label2:
        return $d0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
    public long getN()
    {
        org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.SummaryStatistics $r1, $r2;
        long $l0;
        java.lang.Throwable $r3;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: org.apache.commons.math3.stat.descriptive.SummaryStatistics statistics>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: org.apache.commons.math3.stat.descriptive.SummaryStatistics statistics>;

        $l0 = virtualinvoke $r2.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: long getN()>();

        exitmonitor $r1;

     label2:
        return $l0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
    public double getSecondMoment()
    {
        org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.SummaryStatistics $r1, $r2;
        double $d0;
        java.lang.Throwable $r3;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: org.apache.commons.math3.stat.descriptive.SummaryStatistics statistics>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: org.apache.commons.math3.stat.descriptive.SummaryStatistics statistics>;

        $d0 = virtualinvoke $r2.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: double getSecondMoment()>();

        exitmonitor $r1;

     label2:
        return $d0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
    public double getStandardDeviation()
    {
        org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.SummaryStatistics $r1, $r2;
        double $d0;
        java.lang.Throwable $r3;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: org.apache.commons.math3.stat.descriptive.SummaryStatistics statistics>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: org.apache.commons.math3.stat.descriptive.SummaryStatistics statistics>;

        $d0 = virtualinvoke $r2.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: double getStandardDeviation()>();

        exitmonitor $r1;

     label2:
        return $d0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
    public double getSum()
    {
        org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.SummaryStatistics $r1, $r2;
        double $d0;
        java.lang.Throwable $r3;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: org.apache.commons.math3.stat.descriptive.SummaryStatistics statistics>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: org.apache.commons.math3.stat.descriptive.SummaryStatistics statistics>;

        $d0 = virtualinvoke $r2.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: double getSum()>();

        exitmonitor $r1;

     label2:
        return $d0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
    public double getSumOfLogs()
    {
        org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.SummaryStatistics $r1, $r2;
        double $d0;
        java.lang.Throwable $r3;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: org.apache.commons.math3.stat.descriptive.SummaryStatistics statistics>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: org.apache.commons.math3.stat.descriptive.SummaryStatistics statistics>;

        $d0 = virtualinvoke $r2.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: double getSumOfLogs()>();

        exitmonitor $r1;

     label2:
        return $d0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
    public org.apache.commons.math3.stat.descriptive.StatisticalSummary getSummary()
    {
        org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics r0;
        java.lang.Throwable $r1;
        org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues $r2;
        org.apache.commons.math3.stat.descriptive.SummaryStatistics $r3;
        double $d0, $d1, $d2, $d3, $d4;
        long $l0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics;

        $r3 = r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: org.apache.commons.math3.stat.descriptive.SummaryStatistics statistics>;

        entermonitor $r3;

     label1:
        $r2 = new org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues;

        $d0 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: double getMean()>();

        $d1 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: double getVariance()>();

        $l0 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: long getN()>();

        $d2 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: double getMax()>();

        $d3 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: double getMin()>();

        $d4 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: double getSum()>();

        specialinvoke $r2.<org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues: void <init>(double,double,long,double,double,double)>($d0, $d1, $l0, $d2, $d3, $d4);

        exitmonitor $r3;

     label2:
        return $r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r3;

     label4:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
    public double getSumsq()
    {
        org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.SummaryStatistics $r1, $r2;
        double $d0;
        java.lang.Throwable $r3;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: org.apache.commons.math3.stat.descriptive.SummaryStatistics statistics>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: org.apache.commons.math3.stat.descriptive.SummaryStatistics statistics>;

        $d0 = virtualinvoke $r2.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: double getSumsq()>();

        exitmonitor $r1;

     label2:
        return $d0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
    public double getVariance()
    {
        org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.SummaryStatistics $r1, $r2;
        double $d0;
        java.lang.Throwable $r3;

        r0 := @this: org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: org.apache.commons.math3.stat.descriptive.SummaryStatistics statistics>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics: org.apache.commons.math3.stat.descriptive.SummaryStatistics statistics>;

        $d0 = virtualinvoke $r2.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: double getVariance()>();

        exitmonitor $r1;

     label2:
        return $d0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
