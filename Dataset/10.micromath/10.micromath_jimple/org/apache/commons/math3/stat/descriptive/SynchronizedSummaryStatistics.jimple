org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics extends org.apache.commons.math3.stat.descriptive.SummaryStatistics
private static final long serialVersionUID
    public void <init>()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: void <init>()>();

        return;
    }
    public void <init>(org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics) throws org.apache.commons.math3.exception.NullArgumentException
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0, $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: void <init>()>();

        staticinvoke <org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics: void copy(org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics,org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics)>($r1, r0);

        return;
    }
    public static void copy(org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics) throws org.apache.commons.math3.exception.NullArgumentException
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics $r0, $r1;
        java.lang.Throwable $r2, $r3;

        $r0 := @parameter0: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        $r1 := @parameter1: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>($r0);

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>($r1);

        entermonitor $r0;

     label1:
        entermonitor $r1;

     label2:
        staticinvoke <org.apache.commons.math3.stat.descriptive.SummaryStatistics: void copy(org.apache.commons.math3.stat.descriptive.SummaryStatistics,org.apache.commons.math3.stat.descriptive.SummaryStatistics)>($r0, $r1);

        exitmonitor $r1;

     label3:
        exitmonitor $r0;

     label4:
        return;

     label5:
        $r2 := @caughtexception;

     label6:
        exitmonitor $r1;

     label7:
        throw $r2;

     label8:
        $r3 := @caughtexception;

        exitmonitor $r0;

     label9:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Throwable from label7 to label9 with label8;
    }
    public void addValue(double)
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        double $d0;
        java.lang.Throwable $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        $d0 := @parameter0: double;

        entermonitor r0;

     label1:
        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: void addValue(double)>($d0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void clear()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        java.lang.Throwable $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        entermonitor r0;

     label1:
        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: void clear()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public volatile org.apache.commons.math3.stat.descriptive.SummaryStatistics copy()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        r0 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics copy()>();

        return r0;
    }
    public org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics copy()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0, r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        entermonitor r0;

     label1:
        r1 = new org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        specialinvoke r1.<org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics: void <init>()>();

        staticinvoke <org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics: void copy(org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics,org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics)>(r0, r1);

     label2:
        exitmonitor r0;

        return r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public boolean equals(java.lang.Object)
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        java.lang.Object $r1;
        boolean $z0;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        $r1 := @parameter0: java.lang.Object;

        entermonitor r0;

     label1:
        $z0 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: boolean equals(java.lang.Object)>($r1);

     label2:
        exitmonitor r0;

        return $z0;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getGeoMeanImpl()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        entermonitor r0;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getGeoMeanImpl()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public double getGeometricMean()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        double $d0;
        java.lang.Throwable $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        entermonitor r0;

     label1:
        $d0 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: double getGeometricMean()>();

     label2:
        exitmonitor r0;

        return $d0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public double getMax()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        double $d0;
        java.lang.Throwable $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        entermonitor r0;

     label1:
        $d0 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: double getMax()>();

     label2:
        exitmonitor r0;

        return $d0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getMaxImpl()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        entermonitor r0;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getMaxImpl()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public double getMean()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        double $d0;
        java.lang.Throwable $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        entermonitor r0;

     label1:
        $d0 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: double getMean()>();

     label2:
        exitmonitor r0;

        return $d0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getMeanImpl()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        entermonitor r0;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getMeanImpl()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public double getMin()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        double $d0;
        java.lang.Throwable $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        entermonitor r0;

     label1:
        $d0 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: double getMin()>();

     label2:
        exitmonitor r0;

        return $d0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getMinImpl()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        entermonitor r0;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getMinImpl()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public long getN()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        long $l0;
        java.lang.Throwable $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        entermonitor r0;

     label1:
        $l0 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: long getN()>();

     label2:
        exitmonitor r0;

        return $l0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public double getPopulationVariance()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        double $d0;
        java.lang.Throwable $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        entermonitor r0;

     label1:
        $d0 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: double getPopulationVariance()>();

     label2:
        exitmonitor r0;

        return $d0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public double getQuadraticMean()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        double $d0;
        java.lang.Throwable $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        entermonitor r0;

     label1:
        $d0 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: double getQuadraticMean()>();

     label2:
        exitmonitor r0;

        return $d0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public double getStandardDeviation()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        double $d0;
        java.lang.Throwable $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        entermonitor r0;

     label1:
        $d0 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: double getStandardDeviation()>();

     label2:
        exitmonitor r0;

        return $d0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public double getSum()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        double $d0;
        java.lang.Throwable $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        entermonitor r0;

     label1:
        $d0 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: double getSum()>();

     label2:
        exitmonitor r0;

        return $d0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getSumImpl()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        entermonitor r0;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getSumImpl()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getSumLogImpl()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        entermonitor r0;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getSumLogImpl()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public org.apache.commons.math3.stat.descriptive.StatisticalSummary getSummary()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StatisticalSummary $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        entermonitor r0;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: org.apache.commons.math3.stat.descriptive.StatisticalSummary getSummary()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public double getSumsq()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        double $d0;
        java.lang.Throwable $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        entermonitor r0;

     label1:
        $d0 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: double getSumsq()>();

     label2:
        exitmonitor r0;

        return $d0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getSumsqImpl()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        entermonitor r0;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getSumsqImpl()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public double getVariance()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        double $d0;
        java.lang.Throwable $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        entermonitor r0;

     label1:
        $d0 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: double getVariance()>();

     label2:
        exitmonitor r0;

        return $d0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getVarianceImpl()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        entermonitor r0;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getVarianceImpl()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public int hashCode()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        int $i0;
        java.lang.Throwable $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        entermonitor r0;

     label1:
        $i0 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: int hashCode()>();

     label2:
        exitmonitor r0;

        return $i0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void setGeoMeanImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic) throws org.apache.commons.math3.exception.MathIllegalStateException
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic;

        entermonitor r0;

     label1:
        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: void setGeoMeanImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic)>($r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void setMaxImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic) throws org.apache.commons.math3.exception.MathIllegalStateException
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic;

        entermonitor r0;

     label1:
        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: void setMaxImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic)>($r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void setMeanImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic) throws org.apache.commons.math3.exception.MathIllegalStateException
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic;

        entermonitor r0;

     label1:
        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: void setMeanImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic)>($r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void setMinImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic) throws org.apache.commons.math3.exception.MathIllegalStateException
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic;

        entermonitor r0;

     label1:
        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: void setMinImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic)>($r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void setSumImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic) throws org.apache.commons.math3.exception.MathIllegalStateException
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic;

        entermonitor r0;

     label1:
        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: void setSumImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic)>($r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void setSumLogImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic) throws org.apache.commons.math3.exception.MathIllegalStateException
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic;

        entermonitor r0;

     label1:
        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: void setSumLogImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic)>($r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void setSumsqImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic) throws org.apache.commons.math3.exception.MathIllegalStateException
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic;

        entermonitor r0;

     label1:
        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: void setSumsqImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic)>($r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void setVarianceImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic) throws org.apache.commons.math3.exception.MathIllegalStateException
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic;

        entermonitor r0;

     label1:
        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: void setVarianceImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic)>($r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public java.lang.String toString()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics r0;
        java.lang.String $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics;

        entermonitor r0;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: java.lang.String toString()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
