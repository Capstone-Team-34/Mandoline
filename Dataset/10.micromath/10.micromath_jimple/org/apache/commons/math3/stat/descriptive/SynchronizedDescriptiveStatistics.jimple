org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics extends org.apache.commons.math3.stat.descriptive.DescriptiveStatistics
private static final long serialVersionUID
    public void <init>()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics r0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics: void <init>(int)>(-1);

        return;
    }
    public void <init>(int) throws org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics r0;
        int $i0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics;

        $i0 := @parameter0: int;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.DescriptiveStatistics: void <init>(int)>($i0);

        return;
    }
    public void <init>(org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics) throws org.apache.commons.math3.exception.NullArgumentException
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics r0, $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.DescriptiveStatistics: void <init>()>();

        staticinvoke <org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics: void copy(org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics,org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics)>($r1, r0);

        return;
    }
    public static void copy(org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics) throws org.apache.commons.math3.exception.NullArgumentException
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics $r0, $r1;
        java.lang.Throwable $r2, $r3;

        $r0 := @parameter0: org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics;

        $r1 := @parameter1: org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics;

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>($r0);

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>($r1);

        entermonitor $r0;

     label1:
        entermonitor $r1;

     label2:
        staticinvoke <org.apache.commons.math3.stat.descriptive.DescriptiveStatistics: void copy(org.apache.commons.math3.stat.descriptive.DescriptiveStatistics,org.apache.commons.math3.stat.descriptive.DescriptiveStatistics)>($r0, $r1);

        exitmonitor $r1;

     label3:
        exitmonitor $r0;

     label4:
        return;

     label5:
        $r2 := @caughtexception;

     label6:
        exitmonitor $r1;

     label7:
        throw $r2;

     label8:
        $r3 := @caughtexception;

        exitmonitor $r0;

     label9:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Throwable from label7 to label9 with label8;
    }
    public void addValue(double)
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics r0;
        double $d0;
        java.lang.Throwable $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics;

        $d0 := @parameter0: double;

        entermonitor r0;

     label1:
        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.DescriptiveStatistics: void addValue(double)>($d0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public double apply(org.apache.commons.math3.stat.descriptive.UnivariateStatistic)
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics r0;
        org.apache.commons.math3.stat.descriptive.UnivariateStatistic $r1;
        double $d0;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.UnivariateStatistic;

        entermonitor r0;

     label1:
        $d0 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.DescriptiveStatistics: double apply(org.apache.commons.math3.stat.descriptive.UnivariateStatistic)>($r1);

     label2:
        exitmonitor r0;

        return $d0;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void clear()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics r0;
        java.lang.Throwable $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics;

        entermonitor r0;

     label1:
        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.DescriptiveStatistics: void clear()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public volatile org.apache.commons.math3.stat.descriptive.DescriptiveStatistics copy()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics r0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics;

        r0 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics: org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics copy()>();

        return r0;
    }
    public org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics copy()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics r0, r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics;

        entermonitor r0;

     label1:
        r1 = new org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics;

        specialinvoke r1.<org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics: void <init>()>();

        staticinvoke <org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics: void copy(org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics,org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics)>(r0, r1);

     label2:
        exitmonitor r0;

        return r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public double getElement(int)
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics r0;
        int $i0;
        double $d0;
        java.lang.Throwable $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics;

        $i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $d0 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.DescriptiveStatistics: double getElement(int)>($i0);

     label2:
        exitmonitor r0;

        return $d0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public long getN()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics r0;
        long $l0;
        java.lang.Throwable $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics;

        entermonitor r0;

     label1:
        $l0 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.DescriptiveStatistics: long getN()>();

     label2:
        exitmonitor r0;

        return $l0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public double getQuadraticMean()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics r0;
        double $d0;
        java.lang.Throwable $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics;

        entermonitor r0;

     label1:
        $d0 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.DescriptiveStatistics: double getQuadraticMean()>();

     label2:
        exitmonitor r0;

        return $d0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public double getStandardDeviation()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics r0;
        double $d0;
        java.lang.Throwable $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics;

        entermonitor r0;

     label1:
        $d0 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.DescriptiveStatistics: double getStandardDeviation()>();

     label2:
        exitmonitor r0;

        return $d0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public double[] getValues()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics r0;
        double[] $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics;

        entermonitor r0;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.DescriptiveStatistics: double[] getValues()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public int getWindowSize()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics r0;
        int $i0;
        java.lang.Throwable $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics;

        entermonitor r0;

     label1:
        $i0 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.DescriptiveStatistics: int getWindowSize()>();

     label2:
        exitmonitor r0;

        return $i0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void setWindowSize(int) throws org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics r0;
        int $i0;
        java.lang.Throwable $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics;

        $i0 := @parameter0: int;

        entermonitor r0;

     label1:
        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.DescriptiveStatistics: void setWindowSize(int)>($i0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public java.lang.String toString()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics r0;
        java.lang.String $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics;

        entermonitor r0;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.DescriptiveStatistics: java.lang.String toString()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
