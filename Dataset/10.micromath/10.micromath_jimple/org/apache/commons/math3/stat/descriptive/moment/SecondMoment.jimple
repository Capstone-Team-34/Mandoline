org.apache.commons.math3.stat.descriptive.moment.SecondMoment extends org.apache.commons.math3.stat.descriptive.moment.FirstMoment implements java.io.Serializable
private static final long serialVersionUID
protected double m2
    public void <init>()
    {
        org.apache.commons.math3.stat.descriptive.moment.SecondMoment r0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.SecondMoment;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.moment.FirstMoment: void <init>()>();

        r0.<org.apache.commons.math3.stat.descriptive.moment.SecondMoment: double m2> = #NaN;

        return;
    }
    public void <init>(org.apache.commons.math3.stat.descriptive.moment.SecondMoment) throws org.apache.commons.math3.exception.NullArgumentException
    {
        org.apache.commons.math3.stat.descriptive.moment.SecondMoment r0, $r1;
        double $d0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.SecondMoment;

        $r1 := @parameter0: org.apache.commons.math3.stat.descriptive.moment.SecondMoment;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.moment.FirstMoment: void <init>(org.apache.commons.math3.stat.descriptive.moment.FirstMoment)>($r1);

        $d0 = $r1.<org.apache.commons.math3.stat.descriptive.moment.SecondMoment: double m2>;

        r0.<org.apache.commons.math3.stat.descriptive.moment.SecondMoment: double m2> = $d0;

        return;
    }
    public static void copy(org.apache.commons.math3.stat.descriptive.moment.SecondMoment, org.apache.commons.math3.stat.descriptive.moment.SecondMoment) throws org.apache.commons.math3.exception.NullArgumentException
    {
        org.apache.commons.math3.stat.descriptive.moment.SecondMoment $r0, $r1;
        double $d0;

        $r0 := @parameter0: org.apache.commons.math3.stat.descriptive.moment.SecondMoment;

        $r1 := @parameter1: org.apache.commons.math3.stat.descriptive.moment.SecondMoment;

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>($r0);

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>($r1);

        staticinvoke <org.apache.commons.math3.stat.descriptive.moment.FirstMoment: void copy(org.apache.commons.math3.stat.descriptive.moment.FirstMoment,org.apache.commons.math3.stat.descriptive.moment.FirstMoment)>($r0, $r1);

        $d0 = $r0.<org.apache.commons.math3.stat.descriptive.moment.SecondMoment: double m2>;

        $r1.<org.apache.commons.math3.stat.descriptive.moment.SecondMoment: double m2> = $d0;

        return;
    }
    public void clear()
    {
        org.apache.commons.math3.stat.descriptive.moment.SecondMoment r0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.SecondMoment;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.moment.FirstMoment: void clear()>();

        r0.<org.apache.commons.math3.stat.descriptive.moment.SecondMoment: double m2> = #NaN;

        return;
    }
    public volatile org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy()
    {
        org.apache.commons.math3.stat.descriptive.moment.SecondMoment r0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.SecondMoment;

        r0 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.moment.SecondMoment: org.apache.commons.math3.stat.descriptive.moment.SecondMoment copy()>();

        return r0;
    }
    public volatile org.apache.commons.math3.stat.descriptive.UnivariateStatistic copy()
    {
        org.apache.commons.math3.stat.descriptive.moment.SecondMoment r0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.SecondMoment;

        r0 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.moment.SecondMoment: org.apache.commons.math3.stat.descriptive.moment.SecondMoment copy()>();

        return r0;
    }
    public volatile org.apache.commons.math3.stat.descriptive.moment.FirstMoment copy()
    {
        org.apache.commons.math3.stat.descriptive.moment.SecondMoment r0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.SecondMoment;

        r0 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.moment.SecondMoment: org.apache.commons.math3.stat.descriptive.moment.SecondMoment copy()>();

        return r0;
    }
    public org.apache.commons.math3.stat.descriptive.moment.SecondMoment copy()
    {
        org.apache.commons.math3.stat.descriptive.moment.SecondMoment r0, r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.SecondMoment;

        r1 = new org.apache.commons.math3.stat.descriptive.moment.SecondMoment;

        specialinvoke r1.<org.apache.commons.math3.stat.descriptive.moment.SecondMoment: void <init>()>();

        staticinvoke <org.apache.commons.math3.stat.descriptive.moment.SecondMoment: void copy(org.apache.commons.math3.stat.descriptive.moment.SecondMoment,org.apache.commons.math3.stat.descriptive.moment.SecondMoment)>(r0, r1);

        return r1;
    }
    public volatile long getN()
    {
        org.apache.commons.math3.stat.descriptive.moment.SecondMoment r0;
        long $l0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.SecondMoment;

        $l0 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.moment.FirstMoment: long getN()>();

        return $l0;
    }
    public double getResult()
    {
        org.apache.commons.math3.stat.descriptive.moment.SecondMoment r0;
        double d0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.SecondMoment;

        d0 = r0.<org.apache.commons.math3.stat.descriptive.moment.SecondMoment: double m2>;

        return d0;
    }
    public void increment(double)
    {
        org.apache.commons.math3.stat.descriptive.moment.SecondMoment r0;
        double $d0, $d1, $d2;
        long $l0;
        byte $b1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.SecondMoment;

        $d0 := @parameter0: double;

        $l0 = r0.<org.apache.commons.math3.stat.descriptive.moment.SecondMoment: long n>;

        $b1 = $l0 cmp 1L;

        if $b1 >= 0 goto label1;

        r0.<org.apache.commons.math3.stat.descriptive.moment.SecondMoment: double m2> = 0.0;

        r0.<org.apache.commons.math3.stat.descriptive.moment.SecondMoment: double m1> = 0.0;

     label1:
        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.moment.FirstMoment: void increment(double)>($d0);

        $d0 = r0.<org.apache.commons.math3.stat.descriptive.moment.SecondMoment: double m2>;

        $l0 = r0.<org.apache.commons.math3.stat.descriptive.moment.SecondMoment: long n>;

        $d1 = (double) $l0;

        $d1 = $d1 - 1.0;

        $d2 = r0.<org.apache.commons.math3.stat.descriptive.moment.SecondMoment: double dev>;

        $d1 = $d1 * $d2;

        $d2 = r0.<org.apache.commons.math3.stat.descriptive.moment.SecondMoment: double nDev>;

        $d1 = $d1 * $d2;

        $d0 = $d0 + $d1;

        r0.<org.apache.commons.math3.stat.descriptive.moment.SecondMoment: double m2> = $d0;

        return;
    }
