org.apache.commons.math3.util.Incrementor$2 extends org.apache.commons.math3.util.Incrementor
private org.apache.commons.math3.util.IntegerSequence$Incrementor delegate
final org.apache.commons.math3.util.IntegerSequence$Incrementor val$incrementor
    void <init>(org.apache.commons.math3.util.IntegerSequence$Incrementor)
    {
        org.apache.commons.math3.util.Incrementor$2 r0;
        org.apache.commons.math3.util.IntegerSequence$Incrementor $r1;
        int $i0;

        r0 := @this: org.apache.commons.math3.util.Incrementor$2;

        $r1 := @parameter0: org.apache.commons.math3.util.IntegerSequence$Incrementor;

        r0.<org.apache.commons.math3.util.Incrementor$2: org.apache.commons.math3.util.IntegerSequence$Incrementor val$incrementor> = $r1;

        specialinvoke r0.<org.apache.commons.math3.util.Incrementor: void <init>()>();

        $r1 = r0.<org.apache.commons.math3.util.Incrementor$2: org.apache.commons.math3.util.IntegerSequence$Incrementor val$incrementor>;

        r0.<org.apache.commons.math3.util.Incrementor$2: org.apache.commons.math3.util.IntegerSequence$Incrementor delegate> = $r1;

        $r1 = r0.<org.apache.commons.math3.util.Incrementor$2: org.apache.commons.math3.util.IntegerSequence$Incrementor delegate>;

        $i0 = virtualinvoke $r1.<org.apache.commons.math3.util.IntegerSequence$Incrementor: int getMaximalCount()>();

        specialinvoke r0.<org.apache.commons.math3.util.Incrementor: void setMaximalCount(int)>($i0);

        $r1 = r0.<org.apache.commons.math3.util.Incrementor$2: org.apache.commons.math3.util.IntegerSequence$Incrementor delegate>;

        $i0 = virtualinvoke $r1.<org.apache.commons.math3.util.IntegerSequence$Incrementor: int getCount()>();

        specialinvoke r0.<org.apache.commons.math3.util.Incrementor: void incrementCount(int)>($i0);

        return;
    }
    public void incrementCount()
    {
        org.apache.commons.math3.util.Incrementor$2 r0;
        org.apache.commons.math3.util.IntegerSequence$Incrementor $r1;

        r0 := @this: org.apache.commons.math3.util.Incrementor$2;

        specialinvoke r0.<org.apache.commons.math3.util.Incrementor: void incrementCount()>();

        $r1 = r0.<org.apache.commons.math3.util.Incrementor$2: org.apache.commons.math3.util.IntegerSequence$Incrementor delegate>;

        virtualinvoke $r1.<org.apache.commons.math3.util.IntegerSequence$Incrementor: void increment()>();

        return;
    }
    public void resetCount()
    {
        org.apache.commons.math3.util.Incrementor$2 r0;
        org.apache.commons.math3.util.IntegerSequence$Incrementor $r1;

        r0 := @this: org.apache.commons.math3.util.Incrementor$2;

        specialinvoke r0.<org.apache.commons.math3.util.Incrementor: void resetCount()>();

        $r1 = r0.<org.apache.commons.math3.util.Incrementor$2: org.apache.commons.math3.util.IntegerSequence$Incrementor delegate>;

        $r1 = virtualinvoke $r1.<org.apache.commons.math3.util.IntegerSequence$Incrementor: org.apache.commons.math3.util.IntegerSequence$Incrementor withStart(int)>(0);

        r0.<org.apache.commons.math3.util.Incrementor$2: org.apache.commons.math3.util.IntegerSequence$Incrementor delegate> = $r1;

        return;
    }
    public void setMaximalCount(int)
    {
        org.apache.commons.math3.util.Incrementor$2 r0;
        int $i0;
        org.apache.commons.math3.util.IntegerSequence$Incrementor $r1;

        r0 := @this: org.apache.commons.math3.util.Incrementor$2;

        $i0 := @parameter0: int;

        specialinvoke r0.<org.apache.commons.math3.util.Incrementor: void setMaximalCount(int)>($i0);

        $r1 = r0.<org.apache.commons.math3.util.Incrementor$2: org.apache.commons.math3.util.IntegerSequence$Incrementor delegate>;

        $r1 = virtualinvoke $r1.<org.apache.commons.math3.util.IntegerSequence$Incrementor: org.apache.commons.math3.util.IntegerSequence$Incrementor withMaximalCount(int)>($i0);

        r0.<org.apache.commons.math3.util.Incrementor$2: org.apache.commons.math3.util.IntegerSequence$Incrementor delegate> = $r1;

        return;
    }
