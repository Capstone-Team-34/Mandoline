org.apache.commons.math3.util.MathArrays$1 extends java.lang.Object implements java.util.Comparator
    void <init>()
    {
        org.apache.commons.math3.util.MathArrays$1 r0;

        r0 := @this: org.apache.commons.math3.util.MathArrays$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.math3.util.MathArrays$1 r0;
        int $i0;
        java.lang.Object $r1, $r2;
        org.apache.commons.math3.util.MathArrays$PairDoubleInteger $r3, $r4;

        r0 := @this: org.apache.commons.math3.util.MathArrays$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (org.apache.commons.math3.util.MathArrays$PairDoubleInteger) $r1;

        $r4 = (org.apache.commons.math3.util.MathArrays$PairDoubleInteger) $r2;

        $i0 = virtualinvoke r0.<org.apache.commons.math3.util.MathArrays$1: int compare(org.apache.commons.math3.util.MathArrays$PairDoubleInteger,org.apache.commons.math3.util.MathArrays$PairDoubleInteger)>($r3, $r4);

        return $i0;
    }
    public int compare(org.apache.commons.math3.util.MathArrays$PairDoubleInteger, org.apache.commons.math3.util.MathArrays$PairDoubleInteger)
    {
        org.apache.commons.math3.util.MathArrays$1 r0;
        org.apache.commons.math3.util.MathArrays$PairDoubleInteger $r1, $r2;
        double $d0, $d1;
        int $i0;

        r0 := @this: org.apache.commons.math3.util.MathArrays$1;

        $r1 := @parameter0: org.apache.commons.math3.util.MathArrays$PairDoubleInteger;

        $r2 := @parameter1: org.apache.commons.math3.util.MathArrays$PairDoubleInteger;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.util.MathArrays$PairDoubleInteger: double getKey()>();

        $d1 = virtualinvoke $r2.<org.apache.commons.math3.util.MathArrays$PairDoubleInteger: double getKey()>();

        $i0 = staticinvoke <java.lang.Double: int compare(double,double)>($d0, $d1);

        return $i0;
    }
