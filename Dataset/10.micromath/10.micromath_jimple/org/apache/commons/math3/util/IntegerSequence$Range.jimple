org.apache.commons.math3.util.IntegerSequence$Range extends java.lang.Object implements java.lang.Iterable
private final int max
private final int size
private final int start
private final int step
    public void <init>(int, int, int)
    {
        org.apache.commons.math3.util.IntegerSequence$Range r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.commons.math3.util.IntegerSequence$Range;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.util.IntegerSequence$Range: int start> = $i0;

        r0.<org.apache.commons.math3.util.IntegerSequence$Range: int max> = $i1;

        r0.<org.apache.commons.math3.util.IntegerSequence$Range: int step> = $i2;

        $i0 = $i1 - $i0;

        $i0 = $i0 / $i2;

        $i0 = $i0 + 1;

        if $i0 >= 0 goto label1;

        $i0 = 0;

     label1:
        r0.<org.apache.commons.math3.util.IntegerSequence$Range: int size> = $i0;

        return;
    }
    public java.util.Iterator iterator()
    {
        org.apache.commons.math3.util.IntegerSequence$Range r0;
        int $i0, $i1;
        org.apache.commons.math3.util.IntegerSequence$Incrementor $r1;
        byte $b2;

        r0 := @this: org.apache.commons.math3.util.IntegerSequence$Range;

        $r1 = staticinvoke <org.apache.commons.math3.util.IntegerSequence$Incrementor: org.apache.commons.math3.util.IntegerSequence$Incrementor create()>();

        $i0 = r0.<org.apache.commons.math3.util.IntegerSequence$Range: int start>;

        $r1 = virtualinvoke $r1.<org.apache.commons.math3.util.IntegerSequence$Incrementor: org.apache.commons.math3.util.IntegerSequence$Incrementor withStart(int)>($i0);

        $i0 = r0.<org.apache.commons.math3.util.IntegerSequence$Range: int max>;

        $i1 = r0.<org.apache.commons.math3.util.IntegerSequence$Range: int step>;

        if $i1 <= 0 goto label2;

        $b2 = 1;

     label1:
        $i0 = $b2 + $i0;

        $r1 = virtualinvoke $r1.<org.apache.commons.math3.util.IntegerSequence$Incrementor: org.apache.commons.math3.util.IntegerSequence$Incrementor withMaximalCount(int)>($i0);

        $i0 = r0.<org.apache.commons.math3.util.IntegerSequence$Range: int step>;

        $r1 = virtualinvoke $r1.<org.apache.commons.math3.util.IntegerSequence$Incrementor: org.apache.commons.math3.util.IntegerSequence$Incrementor withIncrement(int)>($i0);

        return $r1;

     label2:
        $b2 = -1;

        goto label1;
    }
    public int size()
    {
        org.apache.commons.math3.util.IntegerSequence$Range r0;
        int i0;

        r0 := @this: org.apache.commons.math3.util.IntegerSequence$Range;

        i0 = r0.<org.apache.commons.math3.util.IntegerSequence$Range: int size>;

        return i0;
    }
