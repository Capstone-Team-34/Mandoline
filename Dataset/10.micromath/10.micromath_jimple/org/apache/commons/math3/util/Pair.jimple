org.apache.commons.math3.util.Pair extends java.lang.Object
private final java.lang.Object key
private final java.lang.Object value
    public void <init>(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.math3.util.Pair r0;
        java.lang.Object r1, r2;

        r0 := @this: org.apache.commons.math3.util.Pair;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.util.Pair: java.lang.Object key> = r1;

        r0.<org.apache.commons.math3.util.Pair: java.lang.Object value> = r2;

        return;
    }
    public void <init>(org.apache.commons.math3.util.Pair)
    {
        org.apache.commons.math3.util.Pair r0, r1;
        java.lang.Object $r2, $r3;

        r0 := @this: org.apache.commons.math3.util.Pair;

        r1 := @parameter0: org.apache.commons.math3.util.Pair;

        $r2 = virtualinvoke r1.<org.apache.commons.math3.util.Pair: java.lang.Object getKey()>();

        $r3 = virtualinvoke r1.<org.apache.commons.math3.util.Pair: java.lang.Object getValue()>();

        specialinvoke r0.<org.apache.commons.math3.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r2, $r3);

        return;
    }
    public static org.apache.commons.math3.util.Pair create(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        org.apache.commons.math3.util.Pair $r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $r2 = new org.apache.commons.math3.util.Pair;

        specialinvoke $r2.<org.apache.commons.math3.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r0, r1);

        return $r2;
    }
    public boolean equals(java.lang.Object)
    {
        org.apache.commons.math3.util.Pair r0, r2;
        java.lang.Object $r1, $r3;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.util.Pair;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof org.apache.commons.math3.util.Pair;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.apache.commons.math3.util.Pair) $r1;

        $r1 = r0.<org.apache.commons.math3.util.Pair: java.lang.Object key>;

        if $r1 != null goto label5;

        $r1 = r2.<org.apache.commons.math3.util.Pair: java.lang.Object key>;

        if $r1 != null goto label4;

     label3:
        $r1 = r0.<org.apache.commons.math3.util.Pair: java.lang.Object value>;

        if $r1 != null goto label6;

        $r1 = r2.<org.apache.commons.math3.util.Pair: java.lang.Object value>;

        if $r1 == null goto label7;

     label4:
        return 0;

     label5:
        $r1 = r0.<org.apache.commons.math3.util.Pair: java.lang.Object key>;

        $r3 = r2.<org.apache.commons.math3.util.Pair: java.lang.Object key>;

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label4;

        goto label3;

     label6:
        $r1 = r0.<org.apache.commons.math3.util.Pair: java.lang.Object value>;

        $r3 = r2.<org.apache.commons.math3.util.Pair: java.lang.Object value>;

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label4;

     label7:
        return 1;
    }
    public java.lang.Object getFirst()
    {
        org.apache.commons.math3.util.Pair r0;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.math3.util.Pair;

        r1 = r0.<org.apache.commons.math3.util.Pair: java.lang.Object key>;

        return r1;
    }
    public java.lang.Object getKey()
    {
        org.apache.commons.math3.util.Pair r0;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.math3.util.Pair;

        r1 = r0.<org.apache.commons.math3.util.Pair: java.lang.Object key>;

        return r1;
    }
    public java.lang.Object getSecond()
    {
        org.apache.commons.math3.util.Pair r0;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.math3.util.Pair;

        r1 = r0.<org.apache.commons.math3.util.Pair: java.lang.Object value>;

        return r1;
    }
    public java.lang.Object getValue()
    {
        org.apache.commons.math3.util.Pair r0;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.math3.util.Pair;

        r1 = r0.<org.apache.commons.math3.util.Pair: java.lang.Object value>;

        return r1;
    }
    public int hashCode()
    {
        org.apache.commons.math3.util.Pair r0;
        java.lang.Object $r1;
        int i0, i1;

        r0 := @this: org.apache.commons.math3.util.Pair;

        $r1 = r0.<org.apache.commons.math3.util.Pair: java.lang.Object key>;

        if $r1 != null goto label3;

        i0 = 0;

     label1:
        $r1 = r0.<org.apache.commons.math3.util.Pair: java.lang.Object value>;

        if $r1 != null goto label4;

        i1 = 0;

     label2:
        i0 = i0 * 37;

        i0 = i0 + i1;

        i1 = i1 >>> 16;

        i1 = i0 ^ i1;

        return i1;

     label3:
        $r1 = r0.<org.apache.commons.math3.util.Pair: java.lang.Object key>;

        i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        goto label1;

     label4:
        $r1 = r0.<org.apache.commons.math3.util.Pair: java.lang.Object value>;

        i1 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        goto label2;
    }
    public java.lang.String toString()
    {
        org.apache.commons.math3.util.Pair r0;
        java.lang.StringBuilder $r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.math3.util.Pair;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r2 = virtualinvoke r0.<org.apache.commons.math3.util.Pair: java.lang.Object getKey()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r2 = virtualinvoke r0.<org.apache.commons.math3.util.Pair: java.lang.Object getValue()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
