org.apache.commons.math3.ml.neuralnet.twod.util.LocationFinder extends java.lang.Object
private final java.util.Map locations
    public void <init>(org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D)
    {
        org.apache.commons.math3.ml.neuralnet.twod.util.LocationFinder r0;
        org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D $r1;
        java.util.HashMap $r2;
        int $i0, $i1, i2, i3;
        org.apache.commons.math3.ml.neuralnet.Neuron $r3;
        long $l4;
        java.lang.Long $r4;
        java.util.Map $r5;
        java.lang.Object $r6;
        org.apache.commons.math3.exception.MathIllegalStateException $r7;
        org.apache.commons.math3.ml.neuralnet.twod.util.LocationFinder$Location $r8;

        r0 := @this: org.apache.commons.math3.ml.neuralnet.twod.util.LocationFinder;

        $r1 := @parameter0: org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.commons.math3.ml.neuralnet.twod.util.LocationFinder: java.util.Map locations> = $r2;

        $i0 = virtualinvoke $r1.<org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D: int getNumberOfRows()>();

        $i1 = virtualinvoke $r1.<org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D: int getNumberOfColumns()>();

        i2 = 0;

     label1:
        if i2 >= $i0 goto label5;

        i3 = 0;

     label2:
        if i3 >= $i1 goto label4;

        $r3 = virtualinvoke $r1.<org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D: org.apache.commons.math3.ml.neuralnet.Neuron getNeuron(int,int)>(i2, i3);

        $l4 = virtualinvoke $r3.<org.apache.commons.math3.ml.neuralnet.Neuron: long getIdentifier()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $r5 = r0.<org.apache.commons.math3.ml.neuralnet.twod.util.LocationFinder: java.util.Map locations>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        if $r6 == null goto label3;

        $r7 = new org.apache.commons.math3.exception.MathIllegalStateException;

        specialinvoke $r7.<org.apache.commons.math3.exception.MathIllegalStateException: void <init>()>();

        throw $r7;

     label3:
        $r5 = r0.<org.apache.commons.math3.ml.neuralnet.twod.util.LocationFinder: java.util.Map locations>;

        $r8 = new org.apache.commons.math3.ml.neuralnet.twod.util.LocationFinder$Location;

        specialinvoke $r8.<org.apache.commons.math3.ml.neuralnet.twod.util.LocationFinder$Location: void <init>(int,int)>(i2, i3);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r8);

        i3 = i3 + 1;

        goto label2;

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        return;
    }
    public org.apache.commons.math3.ml.neuralnet.twod.util.LocationFinder$Location getLocation(org.apache.commons.math3.ml.neuralnet.Neuron)
    {
        org.apache.commons.math3.ml.neuralnet.twod.util.LocationFinder r0;
        org.apache.commons.math3.ml.neuralnet.Neuron $r1;
        java.util.Map $r2;
        long $l0;
        java.lang.Long $r3;
        java.lang.Object $r4;
        org.apache.commons.math3.ml.neuralnet.twod.util.LocationFinder$Location $r5;

        r0 := @this: org.apache.commons.math3.ml.neuralnet.twod.util.LocationFinder;

        $r1 := @parameter0: org.apache.commons.math3.ml.neuralnet.Neuron;

        $r2 = r0.<org.apache.commons.math3.ml.neuralnet.twod.util.LocationFinder: java.util.Map locations>;

        $l0 = virtualinvoke $r1.<org.apache.commons.math3.ml.neuralnet.Neuron: long getIdentifier()>();

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (org.apache.commons.math3.ml.neuralnet.twod.util.LocationFinder$Location) $r4;

        return $r5;
    }
