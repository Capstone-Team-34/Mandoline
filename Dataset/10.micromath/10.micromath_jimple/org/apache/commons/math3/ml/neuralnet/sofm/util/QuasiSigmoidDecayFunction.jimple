org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction extends java.lang.Object
private final double scale
private final org.apache.commons.math3.analysis.function.Logistic sigmoid
    public void <init>(double, double, long)
    {
        org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction r0;
        double $d0, $d1, d2;
        long $l0;
        byte $b1;
        org.apache.commons.math3.exception.NotStrictlyPositiveException $r1;
        java.lang.Double $r2;
        org.apache.commons.math3.exception.NumberIsTooLargeException $r3;
        java.lang.Integer $r4;
        java.lang.Long $r5;
        org.apache.commons.math3.analysis.function.Logistic $r6;

        r0 := @this: org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $l0 := @parameter2: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $b1 = $d0 cmpg 0.0;

        if $b1 > 0 goto label1;

        $r1 = new org.apache.commons.math3.exception.NotStrictlyPositiveException;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        specialinvoke $r1.<org.apache.commons.math3.exception.NotStrictlyPositiveException: void <init>(java.lang.Number)>($r2);

        throw $r1;

     label1:
        $b1 = $d1 cmpl 0.0;

        if $b1 < 0 goto label2;

        $r3 = new org.apache.commons.math3.exception.NumberIsTooLargeException;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        specialinvoke $r3.<org.apache.commons.math3.exception.NumberIsTooLargeException: void <init>(java.lang.Number,java.lang.Number,boolean)>($r2, $r4, 0);

        throw $r3;

     label2:
        $b1 = $l0 cmp 1L;

        if $b1 > 0 goto label3;

        $r1 = new org.apache.commons.math3.exception.NotStrictlyPositiveException;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        specialinvoke $r1.<org.apache.commons.math3.exception.NotStrictlyPositiveException: void <init>(java.lang.Number)>($r5);

        throw $r1;

     label3:
        d2 = (double) $l0;

        $d1 = 4.0 * $d1;

        $d1 = $d1 / $d0;

        $r6 = new org.apache.commons.math3.analysis.function.Logistic;

        specialinvoke $r6.<org.apache.commons.math3.analysis.function.Logistic: void <init>(double,double,double,double,double,double)>($d0, d2, $d1, 1.0, 0.0, 1.0);

        r0.<org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction: org.apache.commons.math3.analysis.function.Logistic sigmoid> = $r6;

        $r6 = r0.<org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction: org.apache.commons.math3.analysis.function.Logistic sigmoid>;

        $d1 = virtualinvoke $r6.<org.apache.commons.math3.analysis.function.Logistic: double value(double)>(0.0);

        $d0 = $d0 / $d1;

        r0.<org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction: double scale> = $d0;

        return;
    }
    public double value(long)
    {
        org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction r0;
        long $l0;
        double $d0, $d1;
        org.apache.commons.math3.analysis.function.Logistic $r1;

        r0 := @this: org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction;

        $l0 := @parameter0: long;

        $d1 = r0.<org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction: double scale>;

        $r1 = r0.<org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction: org.apache.commons.math3.analysis.function.Logistic sigmoid>;

        $d0 = (double) $l0;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.analysis.function.Logistic: double value(double)>($d0);

        $d1 = $d1 * $d0;

        return $d1;
    }
