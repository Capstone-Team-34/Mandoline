org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection extends java.lang.Enum
private static final org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection[] $VALUES
public static final enum org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection CENTER
public static final enum org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection LEFT
public static final enum org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection RIGHT
    static void <clinit>()
    {
        org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection $r0;
        org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection[] $r1;

        $r0 = new org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection;

        specialinvoke $r0.<org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection: void <init>(java.lang.String,int)>("RIGHT", 0);

        <org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection: org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection RIGHT> = $r0;

        $r0 = new org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection;

        specialinvoke $r0.<org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection: void <init>(java.lang.String,int)>("CENTER", 1);

        <org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection: org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection CENTER> = $r0;

        $r0 = new org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection;

        specialinvoke $r0.<org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection: void <init>(java.lang.String,int)>("LEFT", 2);

        <org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection: org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection LEFT> = $r0;

        $r1 = newarray (org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection)[3];

        $r0 = <org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection: org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection RIGHT>;

        $r1[0] = $r0;

        $r0 = <org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection: org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection CENTER>;

        $r1[1] = $r0;

        $r0 = <org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection: org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection LEFT>;

        $r1[2] = $r0;

        <org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection: org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection[] $VALUES> = $r1;

        return;
    }
    private void <init>(java.lang.String, int)
    {
        org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }
    public static org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D$HorizontalDirection;", $r0);

        $r2 = (org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection) $r1;

        return $r2;
    }
    public static org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection[] values()
    {
        java.lang.Object $r0;
        org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection[] $r1;

        $r1 = <org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection: org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection[]) $r0;

        return $r1;
    }
