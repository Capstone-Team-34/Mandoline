org.apache.commons.math3.ml.neuralnet.Network$NeuronIdentifierComparator extends java.lang.Object implements java.util.Comparator java.io.Serializable
private static final long serialVersionUID
    public void <init>()
    {
        org.apache.commons.math3.ml.neuralnet.Network$NeuronIdentifierComparator r0;

        r0 := @this: org.apache.commons.math3.ml.neuralnet.Network$NeuronIdentifierComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.math3.ml.neuralnet.Network$NeuronIdentifierComparator r0;
        int $i0;
        java.lang.Object $r1, $r2;
        org.apache.commons.math3.ml.neuralnet.Neuron $r3, $r4;

        r0 := @this: org.apache.commons.math3.ml.neuralnet.Network$NeuronIdentifierComparator;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (org.apache.commons.math3.ml.neuralnet.Neuron) $r1;

        $r4 = (org.apache.commons.math3.ml.neuralnet.Neuron) $r2;

        $i0 = virtualinvoke r0.<org.apache.commons.math3.ml.neuralnet.Network$NeuronIdentifierComparator: int compare(org.apache.commons.math3.ml.neuralnet.Neuron,org.apache.commons.math3.ml.neuralnet.Neuron)>($r3, $r4);

        return $i0;
    }
    public int compare(org.apache.commons.math3.ml.neuralnet.Neuron, org.apache.commons.math3.ml.neuralnet.Neuron)
    {
        org.apache.commons.math3.ml.neuralnet.Network$NeuronIdentifierComparator r0;
        org.apache.commons.math3.ml.neuralnet.Neuron $r1, $r2;
        long $l0, $l1;
        byte $b2;

        r0 := @this: org.apache.commons.math3.ml.neuralnet.Network$NeuronIdentifierComparator;

        $r1 := @parameter0: org.apache.commons.math3.ml.neuralnet.Neuron;

        $r2 := @parameter1: org.apache.commons.math3.ml.neuralnet.Neuron;

        $l0 = virtualinvoke $r1.<org.apache.commons.math3.ml.neuralnet.Neuron: long getIdentifier()>();

        $l1 = virtualinvoke $r2.<org.apache.commons.math3.ml.neuralnet.Neuron: long getIdentifier()>();

        $b2 = $l0 cmp $l1;

        if $b2 >= 0 goto label1;

        return -1;

     label1:
        $b2 = $l0 cmp $l1;

        if $b2 <= 0 goto label2;

        return 1;

     label2:
        return 0;
    }
