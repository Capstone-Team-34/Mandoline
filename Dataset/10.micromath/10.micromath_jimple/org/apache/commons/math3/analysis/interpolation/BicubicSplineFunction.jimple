org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction extends java.lang.Object implements org.apache.commons.math3.analysis.BivariateFunction
private static final short N
private final double[][] a
private final org.apache.commons.math3.analysis.BivariateFunction partialDerivativeX
private final org.apache.commons.math3.analysis.BivariateFunction partialDerivativeXX
private final org.apache.commons.math3.analysis.BivariateFunction partialDerivativeXY
private final org.apache.commons.math3.analysis.BivariateFunction partialDerivativeY
private final org.apache.commons.math3.analysis.BivariateFunction partialDerivativeYY
    void <init>(double[])
    {
        org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction r0;
        double[] $r1;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction;

        $r1 := @parameter0: double[];

        specialinvoke r0.<org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction: void <init>(double[],boolean)>($r1, 0);

        return;
    }
    void <init>(double[], boolean)
    {
        org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction r0;
        double[] $r1, $r6;
        boolean $z0;
        double d0, $d1;
        int[] $r2;
        java.lang.Class $r3;
        java.lang.Object $r4;
        double[][] $r5, r7, r8, r9, r10, $r11;
        int i0, i1, $i2;
        org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$1 $r12;
        org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$2 $r13;
        org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$3 $r14;
        org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$4 $r15;
        org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$5 $r16;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction;

        $r1 := @parameter0: double[];

        $z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (int)[2];

        $r2[0] = 4;

        $r2[1] = 4;

        $r3 = <java.lang.Double: java.lang.Class TYPE>;

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r3, $r2);

        $r5 = (double[][]) $r4;

        r0.<org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction: double[][] a> = $r5;

        i0 = 0;

     label1:
        if i0 >= 4 goto label4;

        i1 = 0;

     label2:
        if i1 >= 4 goto label3;

        $r5 = r0.<org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction: double[][] a>;

        $r6 = $r5[i0];

        $i2 = i0 * 4;

        $i2 = $i2 + i1;

        d0 = $r1[$i2];

        $r6[i1] = d0;

        i1 = i1 + 1;

        goto label2;

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        if $z0 == 0 goto label9;

        $r2 = newarray (int)[2];

        $r2[0] = 4;

        $r2[1] = 4;

        $r3 = <java.lang.Double: java.lang.Class TYPE>;

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r3, $r2);

        $r5 = (double[][]) $r4;

        $r2 = newarray (int)[2];

        $r2[0] = 4;

        $r2[1] = 4;

        $r3 = <java.lang.Double: java.lang.Class TYPE>;

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r3, $r2);

        r7 = (double[][]) $r4;

        $r2 = newarray (int)[2];

        $r2[0] = 4;

        $r2[1] = 4;

        $r3 = <java.lang.Double: java.lang.Class TYPE>;

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r3, $r2);

        r8 = (double[][]) $r4;

        $r2 = newarray (int)[2];

        $r2[0] = 4;

        $r2[1] = 4;

        $r3 = <java.lang.Double: java.lang.Class TYPE>;

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r3, $r2);

        r9 = (double[][]) $r4;

        $r2 = newarray (int)[2];

        $r2[0] = 4;

        $r2[1] = 4;

        $r3 = <java.lang.Double: java.lang.Class TYPE>;

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r3, $r2);

        r10 = (double[][]) $r4;

        i0 = 0;

     label5:
        if i0 >= 4 goto label8;

        i1 = 0;

     label6:
        if i1 >= 4 goto label7;

        $r11 = r0.<org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction: double[][] a>;

        $r1 = $r11[i0];

        d0 = $r1[i1];

        $r1 = $r5[i0];

        $d1 = (double) i0;

        $d1 = $d1 * d0;

        $r1[i1] = $d1;

        $r1 = r7[i0];

        $d1 = (double) i1;

        d0 = $d1 * d0;

        $r1[i1] = d0;

        $r1 = r8[i0];

        $i2 = i0 + -1;

        d0 = (double) $i2;

        $r6 = $r5[i0];

        $d1 = $r6[i1];

        d0 = d0 * $d1;

        $r1[i1] = d0;

        $r1 = r9[i0];

        $i2 = i1 + -1;

        d0 = (double) $i2;

        $r6 = r7[i0];

        $d1 = $r6[i1];

        d0 = d0 * $d1;

        $r1[i1] = d0;

        $r1 = r10[i0];

        d0 = (double) i1;

        $r6 = $r5[i0];

        $d1 = $r6[i1];

        d0 = d0 * $d1;

        $r1[i1] = d0;

        i1 = i1 + 1;

        goto label6;

     label7:
        i0 = i0 + 1;

        goto label5;

     label8:
        $r12 = new org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$1;

        specialinvoke $r12.<org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$1: void <init>(org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction,double[][])>(r0, $r5);

        r0.<org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction: org.apache.commons.math3.analysis.BivariateFunction partialDerivativeX> = $r12;

        $r13 = new org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$2;

        specialinvoke $r13.<org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$2: void <init>(org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction,double[][])>(r0, r7);

        r0.<org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction: org.apache.commons.math3.analysis.BivariateFunction partialDerivativeY> = $r13;

        $r14 = new org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$3;

        specialinvoke $r14.<org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$3: void <init>(org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction,double[][])>(r0, r8);

        r0.<org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction: org.apache.commons.math3.analysis.BivariateFunction partialDerivativeXX> = $r14;

        $r15 = new org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$4;

        specialinvoke $r15.<org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$4: void <init>(org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction,double[][])>(r0, r9);

        r0.<org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction: org.apache.commons.math3.analysis.BivariateFunction partialDerivativeYY> = $r15;

        $r16 = new org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$5;

        specialinvoke $r16.<org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$5: void <init>(org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction,double[][])>(r0, r10);

        r0.<org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction: org.apache.commons.math3.analysis.BivariateFunction partialDerivativeXY> = $r16;

        return;

     label9:
        r0.<org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction: org.apache.commons.math3.analysis.BivariateFunction partialDerivativeX> = null;

        r0.<org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction: org.apache.commons.math3.analysis.BivariateFunction partialDerivativeY> = null;

        r0.<org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction: org.apache.commons.math3.analysis.BivariateFunction partialDerivativeXX> = null;

        r0.<org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction: org.apache.commons.math3.analysis.BivariateFunction partialDerivativeYY> = null;

        r0.<org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction: org.apache.commons.math3.analysis.BivariateFunction partialDerivativeXY> = null;

        return;
    }
    static double access$000(org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction, double[], double[], double[][])
    {
        org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction $r0;
        double[] $r1, $r2;
        double[][] $r3;
        double $d0;

        $r0 := @parameter0: org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction;

        $r1 := @parameter1: double[];

        $r2 := @parameter2: double[];

        $r3 := @parameter3: double[][];

        $d0 = specialinvoke $r0.<org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction: double apply(double[],double[],double[][])>($r1, $r2, $r3);

        return $d0;
    }
    private double apply(double[], double[], double[][])
    {
        org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction r0;
        double[] $r1, $r2, $r4;
        double[][] $r3;
        double d0, $d1, $d2;
        int i0, i1;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction;

        $r1 := @parameter0: double[];

        $r2 := @parameter1: double[];

        $r3 := @parameter2: double[][];

        d0 = 0.0;

        i0 = 0;

     label1:
        if i0 >= 4 goto label4;

        i1 = 0;

     label2:
        if i1 >= 4 goto label3;

        $r4 = $r3[i0];

        $d1 = $r4[i1];

        $d2 = $r1[i0];

        $d1 = $d1 * $d2;

        $d2 = $r2[i1];

        $d1 = $d1 * $d2;

        d0 = d0 + $d1;

        i1 = i1 + 1;

        goto label2;

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        return d0;
    }
    public org.apache.commons.math3.analysis.BivariateFunction partialDerivativeX()
    {
        org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction r0;
        org.apache.commons.math3.analysis.BivariateFunction r1;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction;

        r1 = r0.<org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction: org.apache.commons.math3.analysis.BivariateFunction partialDerivativeX>;

        return r1;
    }
    public org.apache.commons.math3.analysis.BivariateFunction partialDerivativeXX()
    {
        org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction r0;
        org.apache.commons.math3.analysis.BivariateFunction r1;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction;

        r1 = r0.<org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction: org.apache.commons.math3.analysis.BivariateFunction partialDerivativeXX>;

        return r1;
    }
    public org.apache.commons.math3.analysis.BivariateFunction partialDerivativeXY()
    {
        org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction r0;
        org.apache.commons.math3.analysis.BivariateFunction r1;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction;

        r1 = r0.<org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction: org.apache.commons.math3.analysis.BivariateFunction partialDerivativeXY>;

        return r1;
    }
    public org.apache.commons.math3.analysis.BivariateFunction partialDerivativeY()
    {
        org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction r0;
        org.apache.commons.math3.analysis.BivariateFunction r1;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction;

        r1 = r0.<org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction: org.apache.commons.math3.analysis.BivariateFunction partialDerivativeY>;

        return r1;
    }
    public org.apache.commons.math3.analysis.BivariateFunction partialDerivativeYY()
    {
        org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction r0;
        org.apache.commons.math3.analysis.BivariateFunction r1;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction;

        r1 = r0.<org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction: org.apache.commons.math3.analysis.BivariateFunction partialDerivativeYY>;

        return r1;
    }
    public double value(double, double)
    {
        org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction r0;
        double $d0, $d1, d2, d3, $d4;
        double[] r1, r2;
        byte $b0;
        java.lang.Double $r3;
        java.lang.Integer $r4, $r5;
        double[][] $r6;
        org.apache.commons.math3.exception.OutOfRangeException $r7;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $b0 = $d0 cmpg 0.0;

        if $b0 < 0 goto label1;

        $b0 = $d0 cmpl 1.0;

        if $b0 <= 0 goto label2;

     label1:
        $r7 = new org.apache.commons.math3.exception.OutOfRangeException;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        specialinvoke $r7.<org.apache.commons.math3.exception.OutOfRangeException: void <init>(java.lang.Number,java.lang.Number,java.lang.Number)>($r3, $r4, $r5);

        throw $r7;

     label2:
        $b0 = $d1 cmpg 0.0;

        if $b0 < 0 goto label3;

        $b0 = $d1 cmpl 1.0;

        if $b0 <= 0 goto label4;

     label3:
        $r7 = new org.apache.commons.math3.exception.OutOfRangeException;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        specialinvoke $r7.<org.apache.commons.math3.exception.OutOfRangeException: void <init>(java.lang.Number,java.lang.Number,java.lang.Number)>($r3, $r4, $r5);

        throw $r7;

     label4:
        d2 = $d0 * $d0;

        d3 = d2 * $d0;

        r1 = newarray (double)[4];

        $d4 = (double) 4607182418800017408L;

        r1[0] = $d4;

        r1[1] = $d0;

        r1[2] = d2;

        r1[3] = d3;

        $d0 = $d1 * $d1;

        d2 = $d0 * $d1;

        r2 = newarray (double)[4];

        d3 = (double) 4607182418800017408L;

        r2[0] = d3;

        r2[1] = $d1;

        r2[2] = $d0;

        r2[3] = d2;

        $r6 = r0.<org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction: double[][] a>;

        $d0 = specialinvoke r0.<org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction: double apply(double[],double[],double[][])>(r1, r2, $r6);

        return $d0;
    }
