org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3 extends java.lang.Object implements org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableMatrixFunction
final org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0
final org.apache.commons.math3.analysis.UnivariateMatrixFunction val$function
    void <init>(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator, org.apache.commons.math3.analysis.UnivariateMatrixFunction)
    {
        org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3 r0;
        org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator $r1;
        org.apache.commons.math3.analysis.UnivariateMatrixFunction $r2;

        r0 := @this: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3;

        $r1 := @parameter0: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator;

        $r2 := @parameter1: org.apache.commons.math3.analysis.UnivariateMatrixFunction;

        r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0> = $r1;

        r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3: org.apache.commons.math3.analysis.UnivariateMatrixFunction val$function> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public double[][] value(double) throws org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3 r0;
        double $d0;
        double[][] $r1;
        org.apache.commons.math3.analysis.UnivariateMatrixFunction $r2;

        r0 := @this: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3;

        $d0 := @parameter0: double;

        $r2 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3: org.apache.commons.math3.analysis.UnivariateMatrixFunction val$function>;

        $r1 = interfaceinvoke $r2.<org.apache.commons.math3.analysis.UnivariateMatrixFunction: double[][] value(double)>($d0);

        return $r1;
    }
    public org.apache.commons.math3.analysis.differentiation.DerivativeStructure[][] value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3 r0;
        org.apache.commons.math3.analysis.differentiation.DerivativeStructure $r1, $r17;
        double d0, $d1, $d2;
        int $i0, $i1, $i2, $i3;
        org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator $r2;
        org.apache.commons.math3.exception.NumberIsTooLargeException $r3;
        java.lang.Integer $r4, $r5;
        double[][][] r6;
        org.apache.commons.math3.analysis.UnivariateMatrixFunction $r7;
        double[][] $r8, $r13;
        double[] $r9, $r14;
        int[] $r10;
        java.lang.Class $r11;
        java.lang.Object $r12;
        org.apache.commons.math3.analysis.differentiation.DerivativeStructure[][] r15;
        org.apache.commons.math3.analysis.differentiation.DerivativeStructure[] $r16;

        r0 := @this: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3;

        $r1 := @parameter0: org.apache.commons.math3.analysis.differentiation.DerivativeStructure;

        $i0 = virtualinvoke $r1.<org.apache.commons.math3.analysis.differentiation.DerivativeStructure: int getOrder()>();

        $r2 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0>;

        $i1 = staticinvoke <org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator: int access$000(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator)>($r2);

        if $i0 < $i1 goto label01;

        $r3 = new org.apache.commons.math3.exception.NumberIsTooLargeException;

        $i0 = virtualinvoke $r1.<org.apache.commons.math3.analysis.differentiation.DerivativeStructure: int getOrder()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0>;

        $i0 = staticinvoke <org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator: int access$000(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator)>($r2);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        specialinvoke $r3.<org.apache.commons.math3.exception.NumberIsTooLargeException: void <init>(java.lang.Number,java.lang.Number,boolean)>($r4, $r5, 0);

        throw $r3;

     label01:
        d0 = virtualinvoke $r1.<org.apache.commons.math3.analysis.differentiation.DerivativeStructure: double getValue()>();

        $r2 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0>;

        $d1 = staticinvoke <org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator: double access$100(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator)>($r2);

        d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>(d0, $d1);

        $r2 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0>;

        $d1 = staticinvoke <org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator: double access$200(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator)>($r2);

        d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(d0, $d1);

        $r2 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0>;

        $d1 = staticinvoke <org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator: double access$300(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator)>($r2);

        d0 = d0 - $d1;

        r6 = null;

        $i0 = 0;

     label02:
        $r2 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0>;

        $i1 = staticinvoke <org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator: int access$000(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator)>($r2);

        if $i0 >= $i1 goto label08;

        $r7 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3: org.apache.commons.math3.analysis.UnivariateMatrixFunction val$function>;

        $d1 = (double) $i0;

        $r2 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0>;

        $d2 = staticinvoke <org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator: double access$400(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator)>($r2);

        $d1 = $d1 * $d2;

        $d1 = $d1 + d0;

        $r8 = interfaceinvoke $r7.<org.apache.commons.math3.analysis.UnivariateMatrixFunction: double[][] value(double)>($d1);

        if $i0 != 0 goto label03;

        $i1 = lengthof $r8;

        $r9 = $r8[0];

        $i2 = lengthof $r9;

        $r2 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0>;

        $i3 = staticinvoke <org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator: int access$000(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator)>($r2);

        $r10 = newarray (int)[3];

        $r10[0] = $i1;

        $r10[1] = $i2;

        $r10[2] = $i3;

        $r11 = <java.lang.Double: java.lang.Class TYPE>;

        $r12 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r11, $r10);

        r6 = (double[][][]) $r12;

     label03:
        $i1 = 0;

     label04:
        $i2 = lengthof $r8;

        if $i1 >= $i2 goto label07;

        $i2 = 0;

     label05:
        $r9 = $r8[$i1];

        $i3 = lengthof $r9;

        if $i2 >= $i3 goto label06;

        $r13 = r6[$i1];

        $r9 = $r13[$i2];

        $r14 = $r8[$i1];

        $d1 = $r14[$i2];

        $r9[$i0] = $d1;

        $i2 = $i2 + 1;

        goto label05;

     label06:
        $i1 = $i1 + 1;

        goto label04;

     label07:
        $i0 = $i0 + 1;

        goto label02;

     label08:
        $i0 = lengthof r6;

        $r8 = r6[0];

        $i1 = lengthof $r8;

        $r10 = newarray (int)[2];

        $r10[0] = $i0;

        $r10[1] = $i1;

        $r12 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>(class "Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;", $r10);

        r15 = (org.apache.commons.math3.analysis.differentiation.DerivativeStructure[][]) $r12;

        $i0 = 0;

     label09:
        $i1 = lengthof r15;

        if $i0 >= $i1 goto label12;

        $i1 = 0;

     label10:
        $r8 = r6[$i0];

        $i2 = lengthof $r8;

        if $i1 >= $i2 goto label11;

        $r16 = r15[$i0];

        $r2 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0>;

        $r8 = r6[$i0];

        $r9 = $r8[$i1];

        $r17 = staticinvoke <org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator: org.apache.commons.math3.analysis.differentiation.DerivativeStructure access$500(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,double[])>($r2, $r1, d0, $r9);

        $r16[$i1] = $r17;

        $i1 = $i1 + 1;

        goto label10;

     label11:
        $i0 = $i0 + 1;

        goto label09;

     label12:
        return r15;
    }
