org.apache.commons.math3.analysis.integration.gauss.LegendreRuleFactory extends org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory
    public void <init>()
    {
        org.apache.commons.math3.analysis.integration.gauss.LegendreRuleFactory r0;

        r0 := @this: org.apache.commons.math3.analysis.integration.gauss.LegendreRuleFactory;

        specialinvoke r0.<org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory: void <init>()>();

        return;
    }
    protected org.apache.commons.math3.util.Pair computeRule(int) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.analysis.integration.gauss.LegendreRuleFactory r0;
        int $i0, i1, i2, i3, i4, i5;
        double d0, d1, d2, d3, d4, d5, d6, d7;
        org.apache.commons.math3.util.Pair $r1;
        java.lang.Double[] $r2, $r4, $r6;
        java.lang.Double $r3;
        java.lang.Object $r5;
        boolean z0;
        byte $b6;

        r0 := @this: org.apache.commons.math3.analysis.integration.gauss.LegendreRuleFactory;

        $i0 := @parameter0: int;

        if $i0 != 1 goto label01;

        $r1 = new org.apache.commons.math3.util.Pair;

        $r2 = newarray (java.lang.Double)[1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        $r2[0] = $r3;

        $r4 = newarray (java.lang.Double)[1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(2.0);

        $r4[0] = $r3;

        specialinvoke $r1.<org.apache.commons.math3.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r2, $r4);

        return $r1;

     label01:
        i1 = $i0 + -1;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.analysis.integration.gauss.LegendreRuleFactory: org.apache.commons.math3.util.Pair getRuleInternal(int)>(i1);

        $r5 = virtualinvoke $r1.<org.apache.commons.math3.util.Pair: java.lang.Object getFirst()>();

        $r2 = (java.lang.Double[]) $r5;

        $r4 = newarray (java.lang.Double)[$i0];

        $r6 = newarray (java.lang.Double)[$i0];

        i1 = $i0 / 2;

        i5 = 0;

     label02:
        if i5 >= i1 goto label17;

        if i5 != 0 goto label06;

        d3 = -1.0;

     label03:
        if i1 != 1 goto label07;

        d4 = 1.0;

     label04:
        d2 = 1.0;

        d5 = d3;

        i2 = 1;

     label05:
        if i2 >= $i0 goto label08;

        i3 = i2 * 2;

        i4 = i3 + 1;

        i3 = i2 + 1;

        d0 = (double) i4;

        d0 = d0 * d3;

        d0 = d0 * d5;

        d1 = (double) i2;

        d2 = d1 * d2;

        d0 = d0 - d2;

        d2 = (double) i3;

        d0 = d0 / d2;

        d2 = d5;

        d5 = d0;

        i2 = i2 + 1;

        goto label05;

     label06:
        i2 = i5 + -1;

        $r3 = $r2[i2];

        d3 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        goto label03;

     label07:
        $r3 = $r2[i5];

        d4 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        goto label04;

     label08:
        d7 = d3 + d4;

        d7 = 0.5 * d7;

        d0 = 1.0;

        d6 = d7;

        z0 = 0;

     label09:
        if z0 != 0 goto label16;

        d6 = d4 - d3;

        d0 = staticinvoke <java.lang.Math: double ulp(double)>(d7);

        $b6 = d6 cmpg d0;

        if $b6 > 0 goto label12;

        z0 = 1;

     label10:
        d0 = 1.0;

        d6 = d7;

        i2 = 1;

     label11:
        if i2 >= $i0 goto label13;

        i3 = i2 * 2;

        i3 = i3 + 1;

        d2 = (double) i3;

        d2 = d2 * d7;

        d2 = d2 * d6;

        d1 = (double) i2;

        d0 = d1 * d0;

        d0 = d2 - d0;

        i3 = i2 + 1;

        d2 = (double) i3;

        d2 = d0 / d2;

        d0 = d6;

        d6 = d2;

        i2 = i2 + 1;

        goto label11;

     label12:
        z0 = 0;

        goto label10;

     label13:
        if z0 != 0 goto label09;

        d2 = d5 * d6;

        $b6 = d2 cmpg 0.0;

        if $b6 > 0 goto label15;

        d4 = d7;

     label14:
        d7 = d3 + d4;

        d7 = 0.5 * d7;

        goto label09;

     label15:
        d3 = d7;

        d5 = d6;

        goto label14;

     label16:
        d3 = (double) $i0;

        d4 = d7 * d6;

        d4 = d0 - d4;

        d3 = d3 * d4;

        d4 = d7 * d7;

        d4 = 1.0 - d4;

        d4 = 2.0 * d4;

        d3 = d3 * d3;

        d3 = d4 / d3;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d7);

        $r4[i5] = $r3;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r6[i5] = $r3;

        i2 = $i0 - i5;

        i2 = i2 + -1;

        d4 = neg d7;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d4);

        $r4[i2] = $r3;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r6[i2] = $r3;

        i5 = i5 + 1;

        goto label02;

     label17:
        i5 = $i0 % 2;

        if i5 == 0 goto label20;

        d3 = 1.0;

        i5 = 1;

     label18:
        if i5 >= $i0 goto label19;

        i2 = neg i5;

        d4 = (double) i2;

        d3 = d4 * d3;

        i2 = i5 + 1;

        d4 = (double) i2;

        d3 = d3 / d4;

        i5 = i5 + 2;

        goto label18;

     label19:
        d4 = (double) $i0;

        d3 = d4 * d3;

        d3 = d3 * d3;

        d3 = 2.0 / d3;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        $r4[i1] = $r3;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r6[i1] = $r3;

     label20:
        $r1 = new org.apache.commons.math3.util.Pair;

        specialinvoke $r1.<org.apache.commons.math3.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r4, $r6);

        return $r1;
    }
