org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory extends java.lang.Object
private final java.util.Map pointsAndWeights
private final java.util.Map pointsAndWeightsDouble
    public void <init>()
    {
        org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory r0;
        java.util.TreeMap $r1;

        r0 := @this: org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.TreeMap;

        specialinvoke $r1.<java.util.TreeMap: void <init>()>();

        r0.<org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory: java.util.Map pointsAndWeights> = $r1;

        $r1 = new java.util.TreeMap;

        specialinvoke $r1.<java.util.TreeMap: void <init>()>();

        r0.<org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory: java.util.Map pointsAndWeightsDouble> = $r1;

        return;
    }
    private static org.apache.commons.math3.util.Pair convertToDouble(org.apache.commons.math3.util.Pair)
    {
        org.apache.commons.math3.util.Pair r0;
        int i0, i1;
        double[] r1, r2;
        java.lang.Object $r3;
        java.lang.Number[] r4, r5;
        java.lang.Number $r6;
        double $d0;

        r0 := @parameter0: org.apache.commons.math3.util.Pair;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.util.Pair: java.lang.Object getFirst()>();

        r4 = (java.lang.Number[]) $r3;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.util.Pair: java.lang.Object getSecond()>();

        r5 = (java.lang.Number[]) $r3;

        i0 = lengthof r4;

        r1 = newarray (double)[i0];

        r2 = newarray (double)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r6 = r4[i1];

        $d0 = virtualinvoke $r6.<java.lang.Number: double doubleValue()>();

        r1[i1] = $d0;

        $r6 = r5[i1];

        $d0 = virtualinvoke $r6.<java.lang.Number: double doubleValue()>();

        r2[i1] = $d0;

        i1 = i1 + 1;

        goto label1;

     label2:
        r0 = new org.apache.commons.math3.util.Pair;

        specialinvoke r0.<org.apache.commons.math3.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r1, r2);

        return r0;
    }
    protected void addRule(org.apache.commons.math3.util.Pair) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory r0;
        org.apache.commons.math3.util.Pair r1;
        int $i0, $i1;
        java.lang.Object $r2;
        java.lang.Number[] $r3;
        org.apache.commons.math3.exception.DimensionMismatchException $r4;
        java.util.Map $r5;
        java.lang.Integer $r6;

        r0 := @this: org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory;

        r1 := @parameter0: org.apache.commons.math3.util.Pair;

        $r2 = virtualinvoke r1.<org.apache.commons.math3.util.Pair: java.lang.Object getFirst()>();

        $r3 = (java.lang.Number[]) $r2;

        $i0 = lengthof $r3;

        $r2 = virtualinvoke r1.<org.apache.commons.math3.util.Pair: java.lang.Object getSecond()>();

        $r3 = (java.lang.Number[]) $r2;

        $i1 = lengthof $r3;

        if $i0 == $i1 goto label1;

        $r4 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $r2 = virtualinvoke r1.<org.apache.commons.math3.util.Pair: java.lang.Object getFirst()>();

        $r3 = (java.lang.Number[]) $r2;

        $i0 = lengthof $r3;

        $r2 = virtualinvoke r1.<org.apache.commons.math3.util.Pair: java.lang.Object getSecond()>();

        $r3 = (java.lang.Number[]) $r2;

        $i1 = lengthof $r3;

        specialinvoke $r4.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i0, $i1);

        throw $r4;

     label1:
        $r5 = r0.<org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory: java.util.Map pointsAndWeights>;

        $r2 = virtualinvoke r1.<org.apache.commons.math3.util.Pair: java.lang.Object getFirst()>();

        $r3 = (java.lang.Number[]) $r2;

        $i0 = lengthof $r3;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r1);

        return;
    }
protected abstract org.apache.commons.math3.util.Pair computeRule(int) throws org.apache.commons.math3.exception.DimensionMismatchException { 
// no body
} 
    public org.apache.commons.math3.util.Pair getRule(int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory r0;
        int $i0;
        org.apache.commons.math3.exception.NotStrictlyPositiveException $r1;
        org.apache.commons.math3.exception.util.LocalizedFormats $r2;
        java.lang.Integer $r3;
        java.util.Map $r4;
        java.lang.Object $r5, $r9;
        org.apache.commons.math3.util.Pair r6, $r7;
        double[] $r8;

        r0 := @this: org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory;

        $i0 := @parameter0: int;

        if $i0 > 0 goto label1;

        $r1 = new org.apache.commons.math3.exception.NotStrictlyPositiveException;

        $r2 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats NUMBER_OF_POINTS>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        specialinvoke $r1.<org.apache.commons.math3.exception.NotStrictlyPositiveException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)>($r2, $r3);

        throw $r1;

     label1:
        $r4 = r0.<org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory: java.util.Map pointsAndWeightsDouble>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r6 = (org.apache.commons.math3.util.Pair) $r5;

        if r6 != null goto label2;

        r6 = virtualinvoke r0.<org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory: org.apache.commons.math3.util.Pair getRuleInternal(int)>($i0);

        $r7 = staticinvoke <org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory: org.apache.commons.math3.util.Pair convertToDouble(org.apache.commons.math3.util.Pair)>(r6);

        r6 = $r7;

        $r4 = r0.<org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory: java.util.Map pointsAndWeightsDouble>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r7);

     label2:
        $r7 = new org.apache.commons.math3.util.Pair;

        $r5 = virtualinvoke r6.<org.apache.commons.math3.util.Pair: java.lang.Object getFirst()>();

        $r8 = (double[]) $r5;

        $r5 = virtualinvoke $r8.<java.lang.Object: java.lang.Object clone()>();

        $r9 = virtualinvoke r6.<org.apache.commons.math3.util.Pair: java.lang.Object getSecond()>();

        $r8 = (double[]) $r9;

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.Object clone()>();

        specialinvoke $r7.<org.apache.commons.math3.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r5, $r9);

        return $r7;
    }
    protected org.apache.commons.math3.util.Pair getRuleInternal(int) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory r0;
        int $i0;
        java.util.Map $r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        org.apache.commons.math3.util.Pair r4;
        java.lang.Throwable $r5;

        r0 := @this: org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory;

        $i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $r1 = r0.<org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory: java.util.Map pointsAndWeights>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r4 = (org.apache.commons.math3.util.Pair) $r3;

        if r4 != null goto label2;

        r4 = virtualinvoke r0.<org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory: org.apache.commons.math3.util.Pair computeRule(int)>($i0);

        virtualinvoke r0.<org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory: void addRule(org.apache.commons.math3.util.Pair)>(r4);

        r4 = virtualinvoke r0.<org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory: org.apache.commons.math3.util.Pair getRuleInternal(int)>($i0);

     label2:
        exitmonitor r0;

        return r4;

     label3:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
