org.apache.commons.math3.analysis.interpolation.TricubicInterpolator extends java.lang.Object implements org.apache.commons.math3.analysis.interpolation.TrivariateGridInterpolator
    public void <init>()
    {
        org.apache.commons.math3.analysis.interpolation.TricubicInterpolator r0;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.TricubicInterpolator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public volatile org.apache.commons.math3.analysis.TrivariateFunction interpolate(double[], double[], double[], double[][][]) throws org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NonMonotonicSequenceException
    {
        org.apache.commons.math3.analysis.interpolation.TricubicInterpolator r0;
        double[] $r1, $r2, $r3;
        double[][][] $r4;
        org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunction $r5;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.TricubicInterpolator;

        $r1 := @parameter0: double[];

        $r2 := @parameter1: double[];

        $r3 := @parameter2: double[];

        $r4 := @parameter3: double[][][];

        $r5 = virtualinvoke r0.<org.apache.commons.math3.analysis.interpolation.TricubicInterpolator: org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunction interpolate(double[],double[],double[],double[][][])>($r1, $r2, $r3, $r4);

        return $r5;
    }
    public org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunction interpolate(double[], double[], double[], double[][][]) throws org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NonMonotonicSequenceException
    {
        org.apache.commons.math3.analysis.interpolation.TricubicInterpolator r0;
        double[] $r1, $r2, $r3, $r18, $r19;
        double[][][] $r4, r10, r11, r12, r13, r14, r15, r16;
        double d0, d1, d2, d3, d4, d5, $d6, $d7;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, i11;
        org.apache.commons.math3.exception.NoDataException $r5;
        org.apache.commons.math3.exception.DimensionMismatchException $r6;
        int[] $r7;
        java.lang.Class $r8;
        java.lang.Object $r9;
        double[][] $r17;
        org.apache.commons.math3.analysis.interpolation.TricubicInterpolator$1 $r20;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.TricubicInterpolator;

        $r1 := @parameter0: double[];

        $r2 := @parameter1: double[];

        $r3 := @parameter2: double[];

        $r4 := @parameter3: double[][][];

        $i6 = lengthof $r1;

        if $i6 == 0 goto label01;

        $i6 = lengthof $r2;

        if $i6 == 0 goto label01;

        $i6 = lengthof $r3;

        if $i6 == 0 goto label01;

        $i6 = lengthof $r4;

        if $i6 != 0 goto label02;

     label01:
        $r5 = new org.apache.commons.math3.exception.NoDataException;

        specialinvoke $r5.<org.apache.commons.math3.exception.NoDataException: void <init>()>();

        throw $r5;

     label02:
        $i6 = lengthof $r1;

        $i7 = lengthof $r4;

        if $i6 == $i7 goto label03;

        $r6 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i6 = lengthof $r1;

        $i7 = lengthof $r4;

        specialinvoke $r6.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i6, $i7);

        throw $r6;

     label03:
        staticinvoke <org.apache.commons.math3.util.MathArrays: void checkOrder(double[])>($r1);

        staticinvoke <org.apache.commons.math3.util.MathArrays: void checkOrder(double[])>($r2);

        staticinvoke <org.apache.commons.math3.util.MathArrays: void checkOrder(double[])>($r3);

        $i7 = lengthof $r1;

        $i8 = lengthof $r2;

        $i9 = lengthof $r3;

        $r7 = newarray (int)[3];

        $r7[0] = $i7;

        $r7[1] = $i8;

        $r7[2] = $i9;

        $r8 = <java.lang.Double: java.lang.Class TYPE>;

        $r9 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r8, $r7);

        r10 = (double[][][]) $r9;

        $r7 = newarray (int)[3];

        $r7[0] = $i7;

        $r7[1] = $i8;

        $r7[2] = $i9;

        $r8 = <java.lang.Double: java.lang.Class TYPE>;

        $r9 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r8, $r7);

        r11 = (double[][][]) $r9;

        $r7 = newarray (int)[3];

        $r7[0] = $i7;

        $r7[1] = $i8;

        $r7[2] = $i9;

        $r8 = <java.lang.Double: java.lang.Class TYPE>;

        $r9 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r8, $r7);

        r12 = (double[][][]) $r9;

        $r7 = newarray (int)[3];

        $r7[0] = $i7;

        $r7[1] = $i8;

        $r7[2] = $i9;

        $r8 = <java.lang.Double: java.lang.Class TYPE>;

        $r9 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r8, $r7);

        r13 = (double[][][]) $r9;

        $r7 = newarray (int)[3];

        $r7[0] = $i7;

        $r7[1] = $i8;

        $r7[2] = $i9;

        $r8 = <java.lang.Double: java.lang.Class TYPE>;

        $r9 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r8, $r7);

        r14 = (double[][][]) $r9;

        $r7 = newarray (int)[3];

        $r7[0] = $i7;

        $r7[1] = $i8;

        $r7[2] = $i9;

        $r8 = <java.lang.Double: java.lang.Class TYPE>;

        $r9 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r8, $r7);

        r15 = (double[][][]) $r9;

        $r7 = newarray (int)[3];

        $r7[0] = $i7;

        $r7[1] = $i8;

        $r7[2] = $i9;

        $r8 = <java.lang.Double: java.lang.Class TYPE>;

        $r9 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r8, $r7);

        r16 = (double[][][]) $r9;

        $i6 = 1;

     label04:
        $i10 = $i7 + -1;

        if $i6 >= $i10 goto label11;

        $i10 = lengthof $r2;

        $r17 = $r4[$i6];

        i0 = lengthof $r17;

        if $i10 == i0 goto label05;

        $r6 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i7 = lengthof $r2;

        $r17 = $r4[$i6];

        $i6 = lengthof $r17;

        specialinvoke $r6.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i7, $i6);

        throw $r6;

     label05:
        i0 = $i6 + 1;

        i3 = $i6 + -1;

        d0 = $r1[i0];

        d1 = $r1[i3];

        d0 = d0 - d1;

        $i10 = 1;

     label06:
        i1 = $i8 + -1;

        if $i10 >= i1 goto label10;

        i1 = lengthof $r3;

        $r17 = $r4[$i6];

        $r18 = $r17[$i10];

        i4 = lengthof $r18;

        if i1 == i4 goto label07;

        $r6 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i7 = lengthof $r3;

        $r17 = $r4[$i6];

        $r1 = $r17[$i10];

        $i6 = lengthof $r1;

        specialinvoke $r6.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i7, $i6);

        throw $r6;

     label07:
        i1 = $i10 + 1;

        i4 = $i10 + -1;

        d1 = $r2[i1];

        d4 = $r2[i4];

        d4 = d1 - d4;

        d1 = d0 * d4;

        i11 = 1;

     label08:
        i2 = $i9 + -1;

        if i11 >= i2 goto label09;

        i2 = i11 + 1;

        i5 = i11 + -1;

        d2 = $r3[i2];

        d5 = $r3[i5];

        d2 = d2 - d5;

        $r17 = r10[$i6];

        $r18 = $r17[$i10];

        $r17 = $r4[i0];

        $r19 = $r17[$i10];

        d5 = $r19[i11];

        $r17 = $r4[i3];

        $r19 = $r17[$i10];

        d3 = $r19[i11];

        d5 = d5 - d3;

        d5 = d5 / d0;

        $r18[i11] = d5;

        $r17 = r11[$i6];

        $r18 = $r17[$i10];

        $r17 = $r4[$i6];

        $r19 = $r17[i1];

        d5 = $r19[i11];

        $r17 = $r4[$i6];

        $r19 = $r17[i4];

        d3 = $r19[i11];

        d5 = d5 - d3;

        d5 = d5 / d4;

        $r18[i11] = d5;

        $r17 = r12[$i6];

        $r18 = $r17[$i10];

        $r17 = $r4[$i6];

        $r19 = $r17[$i10];

        d5 = $r19[i2];

        $r17 = $r4[$i6];

        $r19 = $r17[$i10];

        d3 = $r19[i5];

        d5 = d5 - d3;

        d5 = d5 / d2;

        $r18[i11] = d5;

        d3 = d0 * d2;

        d5 = d4 * d2;

        $r17 = r13[$i6];

        $r18 = $r17[$i10];

        $r17 = $r4[i0];

        $r19 = $r17[i1];

        $d6 = $r19[i11];

        $r17 = $r4[i0];

        $r19 = $r17[i4];

        $d7 = $r19[i11];

        $d6 = $d6 - $d7;

        $r17 = $r4[i3];

        $r19 = $r17[i1];

        $d7 = $r19[i11];

        $d6 = $d6 - $d7;

        $r17 = $r4[i3];

        $r19 = $r17[i4];

        $d7 = $r19[i11];

        $d6 = $d6 + $d7;

        $d6 = $d6 / d1;

        $r18[i11] = $d6;

        $r17 = r14[$i6];

        $r18 = $r17[$i10];

        $r17 = $r4[i0];

        $r19 = $r17[$i10];

        $d6 = $r19[i2];

        $r17 = $r4[i0];

        $r19 = $r17[$i10];

        $d7 = $r19[i5];

        $d6 = $d6 - $d7;

        $r17 = $r4[i3];

        $r19 = $r17[$i10];

        $d7 = $r19[i2];

        $d6 = $d6 - $d7;

        $r17 = $r4[i3];

        $r19 = $r17[$i10];

        $d7 = $r19[i5];

        $d6 = $d6 + $d7;

        d3 = $d6 / d3;

        $r18[i11] = d3;

        $r17 = r15[$i6];

        $r18 = $r17[$i10];

        $r17 = $r4[$i6];

        $r19 = $r17[i1];

        d3 = $r19[i2];

        $r17 = $r4[$i6];

        $r19 = $r17[i1];

        $d6 = $r19[i5];

        d3 = d3 - $d6;

        $r17 = $r4[$i6];

        $r19 = $r17[i4];

        $d6 = $r19[i2];

        d3 = d3 - $d6;

        $r17 = $r4[$i6];

        $r19 = $r17[i4];

        $d6 = $r19[i5];

        d3 = d3 + $d6;

        d5 = d3 / d5;

        $r18[i11] = d5;

        d2 = d1 * d2;

        $r17 = r16[$i6];

        $r18 = $r17[$i10];

        $r17 = $r4[i0];

        $r19 = $r17[i1];

        d5 = $r19[i2];

        $r17 = $r4[i0];

        $r19 = $r17[i4];

        d3 = $r19[i2];

        d5 = d5 - d3;

        $r17 = $r4[i3];

        $r19 = $r17[i1];

        d3 = $r19[i2];

        d5 = d5 - d3;

        $r17 = $r4[i3];

        $r19 = $r17[i4];

        d3 = $r19[i2];

        d5 = d5 + d3;

        $r17 = $r4[i0];

        $r19 = $r17[i1];

        d3 = $r19[i5];

        d5 = d5 - d3;

        $r17 = $r4[i0];

        $r19 = $r17[i4];

        d3 = $r19[i5];

        d5 = d5 + d3;

        $r17 = $r4[i3];

        $r19 = $r17[i1];

        d3 = $r19[i5];

        d5 = d5 + d3;

        $r17 = $r4[i3];

        $r19 = $r17[i4];

        d3 = $r19[i5];

        d5 = d5 - d3;

        d2 = d5 / d2;

        $r18[i11] = d2;

        i11 = i11 + 1;

        goto label08;

     label09:
        $i10 = $i10 + 1;

        goto label06;

     label10:
        $i6 = $i6 + 1;

        goto label04;

     label11:
        $r20 = new org.apache.commons.math3.analysis.interpolation.TricubicInterpolator$1;

        specialinvoke $r20.<org.apache.commons.math3.analysis.interpolation.TricubicInterpolator$1: void <init>(org.apache.commons.math3.analysis.interpolation.TricubicInterpolator,double[],double[],double[],double[][][],double[][][],double[][][],double[][][],double[][][],double[][][],double[][][],double[][][],double[],double[],double[])>(r0, $r1, $r2, $r3, $r4, r10, r11, r12, r13, r14, r15, r16, $r1, $r2, $r3);

        return $r20;
    }
