org.apache.commons.math3.analysis.function.Logistic$Parametric extends java.lang.Object implements org.apache.commons.math3.analysis.ParametricUnivariateFunction
    public void <init>()
    {
        org.apache.commons.math3.analysis.function.Logistic$Parametric r0;

        r0 := @this: org.apache.commons.math3.analysis.function.Logistic$Parametric;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private void validateParameters(double[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NotStrictlyPositiveException
    {
        org.apache.commons.math3.analysis.function.Logistic$Parametric r0;
        double[] $r1;
        java.lang.Double $r2;
        org.apache.commons.math3.exception.NullArgumentException $r3;
        int $i0;
        org.apache.commons.math3.exception.DimensionMismatchException $r4;
        double $d0;
        byte $b1;
        org.apache.commons.math3.exception.NotStrictlyPositiveException $r5;

        r0 := @this: org.apache.commons.math3.analysis.function.Logistic$Parametric;

        $r1 := @parameter0: double[];

        if $r1 != null goto label1;

        $r3 = new org.apache.commons.math3.exception.NullArgumentException;

        specialinvoke $r3.<org.apache.commons.math3.exception.NullArgumentException: void <init>()>();

        throw $r3;

     label1:
        $i0 = lengthof $r1;

        if $i0 == 6 goto label2;

        $r4 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i0 = lengthof $r1;

        specialinvoke $r4.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i0, 6);

        throw $r4;

     label2:
        $d0 = $r1[5];

        $b1 = $d0 cmpg 0.0;

        if $b1 > 0 goto label3;

        $r5 = new org.apache.commons.math3.exception.NotStrictlyPositiveException;

        $d0 = $r1[5];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        specialinvoke $r5.<org.apache.commons.math3.exception.NotStrictlyPositiveException: void <init>(java.lang.Number)>($r2);

        throw $r5;

     label3:
        return;
    }
    public transient double[] gradient(double, double[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NotStrictlyPositiveException
    {
        org.apache.commons.math3.analysis.function.Logistic$Parametric r0;
        double $d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, $d10, $d11;
        double[] $r1;

        r0 := @this: org.apache.commons.math3.analysis.function.Logistic$Parametric;

        $d0 := @parameter0: double;

        $r1 := @parameter1: double[];

        specialinvoke r0.<org.apache.commons.math3.analysis.function.Logistic$Parametric: void validateParameters(double[])>($r1);

        d2 = $r1[2];

        d3 = $r1[3];

        d1 = $r1[1];

        d1 = d1 - $d0;

        $d0 = $r1[5];

        $d0 = 1.0 / $d0;

        d9 = d2 * d1;

        d8 = staticinvoke <org.apache.commons.math3.util.FastMath: double exp(double)>(d9);

        d6 = d3 * d8;

        d9 = d6 + 1.0;

        $d10 = $r1[0];

        d4 = $r1[4];

        $d10 = $d10 - d4;

        $d10 = $d10 * $d0;

        d4 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,double)>(d9, $d0);

        d4 = $d10 / d4;

        $d10 = neg d4;

        d5 = $d10 / d9;

        $d10 = staticinvoke <org.apache.commons.math3.analysis.function.Logistic: double access$000(double,double,double,double,double,double)>(d1, 1.0, d2, d3, 0.0, $d0);

        d7 = d5 * d2;

        d7 = d7 * d6;

        $d11 = d5 * d1;

        d6 = $d11 * d6;

        d8 = d5 * d8;

        d2 = staticinvoke <org.apache.commons.math3.analysis.function.Logistic: double access$000(double,double,double,double,double,double)>(d1, 0.0, d2, d3, 1.0, $d0);

        d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double log(double)>(d9);

        d3 = d3 * d4;

        $d0 = d3 * $d0;

        $r1 = newarray (double)[6];

        $r1[0] = $d10;

        $r1[1] = d7;

        $r1[2] = d6;

        $r1[3] = d8;

        $r1[4] = d2;

        $r1[5] = $d0;

        return $r1;
    }
    public transient double value(double, double[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NotStrictlyPositiveException
    {
        org.apache.commons.math3.analysis.function.Logistic$Parametric r0;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        double[] $r1;

        r0 := @this: org.apache.commons.math3.analysis.function.Logistic$Parametric;

        $d0 := @parameter0: double;

        $r1 := @parameter1: double[];

        specialinvoke r0.<org.apache.commons.math3.analysis.function.Logistic$Parametric: void validateParameters(double[])>($r1);

        $d1 = $r1[1];

        $d0 = $d1 - $d0;

        $d1 = $r1[0];

        $d2 = $r1[2];

        $d3 = $r1[3];

        $d4 = $r1[4];

        $d5 = $r1[5];

        $d5 = 1.0 / $d5;

        $d0 = staticinvoke <org.apache.commons.math3.analysis.function.Logistic: double access$000(double,double,double,double,double,double)>($d0, $d1, $d2, $d3, $d4, $d5);

        return $d0;
    }
