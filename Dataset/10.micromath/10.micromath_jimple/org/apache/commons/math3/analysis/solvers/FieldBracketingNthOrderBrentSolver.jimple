org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver extends java.lang.Object implements org.apache.commons.math3.analysis.solvers.BracketedRealFieldUnivariateSolver
private static final int MAXIMAL_AGING
private final org.apache.commons.math3.RealFieldElement absoluteAccuracy
private org.apache.commons.math3.util.IntegerSequence$Incrementor evaluations
private final org.apache.commons.math3.Field field
private final org.apache.commons.math3.RealFieldElement functionValueAccuracy
private final int maximalOrder
private final org.apache.commons.math3.RealFieldElement relativeAccuracy
    public void <init>(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement, int) throws org.apache.commons.math3.exception.NumberIsTooSmallException
    {
        org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver r0;
        org.apache.commons.math3.RealFieldElement r1, r2, r3;
        int $i0;
        org.apache.commons.math3.exception.NumberIsTooSmallException $r4;
        java.lang.Integer $r5, $r6;
        org.apache.commons.math3.Field $r7;
        org.apache.commons.math3.util.IntegerSequence$Incrementor $r8;

        r0 := @this: org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.RealFieldElement;

        r3 := @parameter2: org.apache.commons.math3.RealFieldElement;

        $i0 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $i0 >= 2 goto label1;

        $r4 = new org.apache.commons.math3.exception.NumberIsTooSmallException;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        specialinvoke $r4.<org.apache.commons.math3.exception.NumberIsTooSmallException: void <init>(java.lang.Number,java.lang.Number,boolean)>($r5, $r6, 1);

        throw $r4;

     label1:
        $r7 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        r0.<org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver: org.apache.commons.math3.Field field> = $r7;

        r0.<org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver: int maximalOrder> = $i0;

        r0.<org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver: org.apache.commons.math3.RealFieldElement absoluteAccuracy> = r2;

        r0.<org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver: org.apache.commons.math3.RealFieldElement relativeAccuracy> = r1;

        r0.<org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver: org.apache.commons.math3.RealFieldElement functionValueAccuracy> = r3;

        $r8 = staticinvoke <org.apache.commons.math3.util.IntegerSequence$Incrementor: org.apache.commons.math3.util.IntegerSequence$Incrementor create()>();

        r0.<org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver: org.apache.commons.math3.util.IntegerSequence$Incrementor evaluations> = $r8;

        return;
    }
    private org.apache.commons.math3.RealFieldElement guessX(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement[], org.apache.commons.math3.RealFieldElement[], int, int)
    {
        org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver r0;
        org.apache.commons.math3.RealFieldElement r1, $r4, $r5, $r7;
        org.apache.commons.math3.RealFieldElement[] r2, r3;
        int $i0, $i1, i2, i3, i4, $i5;
        java.lang.Object $r6;
        org.apache.commons.math3.Field $r8;

        r0 := @this: org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.RealFieldElement[];

        r3 := @parameter2: org.apache.commons.math3.RealFieldElement[];

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        i3 = $i0;

     label1:
        i2 = $i1 + -1;

        if i3 >= i2 goto label4;

        i2 = i3 + 1;

        i2 = i2 - $i0;

        i4 = $i1 + -1;

     label2:
        if i4 <= i3 goto label3;

        $r4 = r2[i4];

        $i5 = i4 + -1;

        $r5 = r2[$i5];

        $r6 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r5);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r5 = r3[i4];

        $i5 = i4 - i2;

        $r7 = r3[$i5];

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r7);

        $r6 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(java.lang.Object)>($r6);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r6;

        r2[i4] = $r4;

        i4 = i4 + -1;

        goto label2;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        $r8 = r0.<org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver: org.apache.commons.math3.Field field>;

        $r6 = interfaceinvoke $r8.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        $r4 = (org.apache.commons.math3.RealFieldElement) $r6;

        $i1 = $i1 + -1;

     label5:
        if $i1 < $i0 goto label6;

        $r5 = r2[$i1];

        $r7 = r3[$i1];

        $r6 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r7);

        $r6 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r6);

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r6;

        $i1 = $i1 + -1;

        goto label5;

     label6:
        return $r4;
    }
    public org.apache.commons.math3.RealFieldElement getAbsoluteAccuracy()
    {
        org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver r0;
        org.apache.commons.math3.RealFieldElement r1;

        r0 := @this: org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver;

        r1 = r0.<org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver: org.apache.commons.math3.RealFieldElement absoluteAccuracy>;

        return r1;
    }
    public int getEvaluations()
    {
        org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver r0;
        int $i0;
        org.apache.commons.math3.util.IntegerSequence$Incrementor $r1;

        r0 := @this: org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver;

        $r1 = r0.<org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver: org.apache.commons.math3.util.IntegerSequence$Incrementor evaluations>;

        $i0 = virtualinvoke $r1.<org.apache.commons.math3.util.IntegerSequence$Incrementor: int getCount()>();

        return $i0;
    }
    public org.apache.commons.math3.RealFieldElement getFunctionValueAccuracy()
    {
        org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver r0;
        org.apache.commons.math3.RealFieldElement r1;

        r0 := @this: org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver;

        r1 = r0.<org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver: org.apache.commons.math3.RealFieldElement functionValueAccuracy>;

        return r1;
    }
    public int getMaxEvaluations()
    {
        org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver r0;
        int $i0;
        org.apache.commons.math3.util.IntegerSequence$Incrementor $r1;

        r0 := @this: org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver;

        $r1 = r0.<org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver: org.apache.commons.math3.util.IntegerSequence$Incrementor evaluations>;

        $i0 = virtualinvoke $r1.<org.apache.commons.math3.util.IntegerSequence$Incrementor: int getMaximalCount()>();

        return $i0;
    }
    public int getMaximalOrder()
    {
        org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver r0;
        int i0;

        r0 := @this: org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver;

        i0 = r0.<org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver: int maximalOrder>;

        return i0;
    }
    public org.apache.commons.math3.RealFieldElement getRelativeAccuracy()
    {
        org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver r0;
        org.apache.commons.math3.RealFieldElement r1;

        r0 := @this: org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver;

        r1 = r0.<org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver: org.apache.commons.math3.RealFieldElement relativeAccuracy>;

        return r1;
    }
    public org.apache.commons.math3.RealFieldElement solve(int, org.apache.commons.math3.analysis.RealFieldUnivariateFunction, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.analysis.solvers.AllowedSolution) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoBracketingException
    {
        org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver r0;
        int $i0, i2, $i3, i4, i5, i6, $i7, $i8;
        org.apache.commons.math3.analysis.RealFieldUnivariateFunction r1;
        org.apache.commons.math3.RealFieldElement r2, r3, r4, r9, r10, r15, r16, r17, r18, r19, $r20, r21, $r22, $r23;
        org.apache.commons.math3.analysis.solvers.AllowedSolution $r5;
        org.apache.commons.math3.util.IntegerSequence$Incrementor $r6;
        org.apache.commons.math3.Field $r7;
        java.lang.Object $r8;
        java.lang.Object[] $r11;
        org.apache.commons.math3.RealFieldElement[] r12, r13, r14;
        double $d0, $d1, $d2, $d3;
        boolean $z0;
        byte $b1;
        int[] $r24;
        org.apache.commons.math3.exception.MathInternalError $r25;
        org.apache.commons.math3.exception.NoBracketingException r26;

        r0 := @this: org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver;

        $i0 := @parameter0: int;

        r1 := @parameter1: org.apache.commons.math3.analysis.RealFieldUnivariateFunction;

        r2 := @parameter2: org.apache.commons.math3.RealFieldElement;

        r3 := @parameter3: org.apache.commons.math3.RealFieldElement;

        r4 := @parameter4: org.apache.commons.math3.RealFieldElement;

        $r5 := @parameter5: org.apache.commons.math3.analysis.solvers.AllowedSolution;

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>(r1);

        $r6 = r0.<org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver: org.apache.commons.math3.util.IntegerSequence$Incrementor evaluations>;

        $r6 = virtualinvoke $r6.<org.apache.commons.math3.util.IntegerSequence$Incrementor: org.apache.commons.math3.util.IntegerSequence$Incrementor withMaximalCount(int)>($i0);

        $r6 = virtualinvoke $r6.<org.apache.commons.math3.util.IntegerSequence$Incrementor: org.apache.commons.math3.util.IntegerSequence$Incrementor withStart(int)>(0);

        r0.<org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver: org.apache.commons.math3.util.IntegerSequence$Incrementor evaluations> = $r6;

        $r7 = r0.<org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver: org.apache.commons.math3.Field field>;

        $r8 = interfaceinvoke $r7.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        r9 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r8 = interfaceinvoke r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>(#NaN);

        r10 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r7 = r0.<org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver: org.apache.commons.math3.Field field>;

        $i0 = r0.<org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver: int maximalOrder>;

        $i0 = $i0 + 1;

        $r11 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[] buildArray(org.apache.commons.math3.Field,int)>($r7, $i0);

        r12 = (org.apache.commons.math3.RealFieldElement[]) $r11;

        $r7 = r0.<org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver: org.apache.commons.math3.Field field>;

        $i0 = r0.<org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver: int maximalOrder>;

        $i0 = $i0 + 1;

        $r11 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[] buildArray(org.apache.commons.math3.Field,int)>($r7, $i0);

        r13 = (org.apache.commons.math3.RealFieldElement[]) $r11;

        r12[0] = r2;

        r12[1] = r4;

        r12[2] = r3;

        $r6 = r0.<org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver: org.apache.commons.math3.util.IntegerSequence$Incrementor evaluations>;

        virtualinvoke $r6.<org.apache.commons.math3.util.IntegerSequence$Incrementor: void increment()>();

        r2 = r12[1];

        r2 = interfaceinvoke r1.<org.apache.commons.math3.analysis.RealFieldUnivariateFunction: org.apache.commons.math3.RealFieldElement value(org.apache.commons.math3.RealFieldElement)>(r2);

        r13[1] = r2;

        r2 = r13[1];

        $d0 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $z0 = staticinvoke <org.apache.commons.math3.util.Precision: boolean equals(double,double,int)>($d0, 0.0, 1);

        if $z0 == 0 goto label02;

        r2 = r12[1];

     label01:
        return r2;

     label02:
        $r6 = r0.<org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver: org.apache.commons.math3.util.IntegerSequence$Incrementor evaluations>;

        virtualinvoke $r6.<org.apache.commons.math3.util.IntegerSequence$Incrementor: void increment()>();

        r2 = r12[0];

        r2 = interfaceinvoke r1.<org.apache.commons.math3.analysis.RealFieldUnivariateFunction: org.apache.commons.math3.RealFieldElement value(org.apache.commons.math3.RealFieldElement)>(r2);

        r13[0] = r2;

        r2 = r13[0];

        $d0 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $z0 = staticinvoke <org.apache.commons.math3.util.Precision: boolean equals(double,double,int)>($d0, 0.0, 1);

        if $z0 == 0 goto label03;

        r2 = r12[0];

        return r2;

     label03:
        r2 = r13[0];

        r3 = r13[1];

        $r8 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r3);

        r2 = (org.apache.commons.math3.RealFieldElement) $r8;

        $d0 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b1 = $d0 cmpg 0.0;

        if $b1 >= 0 goto label10;

        $i0 = 2;

        i2 = 1;

     label04:
        $r7 = r0.<org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver: org.apache.commons.math3.Field field>;

        $i3 = lengthof r12;

        $r11 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[] buildArray(org.apache.commons.math3.Field,int)>($r7, $i3);

        r14 = (org.apache.commons.math3.RealFieldElement[]) $r11;

        $i3 = i2 + -1;

        r2 = r12[$i3];

        $i3 = i2 + -1;

        r4 = r13[$i3];

        $r8 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        r15 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r8 = interfaceinvoke r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        r16 = (org.apache.commons.math3.RealFieldElement) $r8;

        $i3 = 0;

        r3 = r12[i2];

        r17 = r13[i2];

        $r8 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        r18 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r8 = interfaceinvoke r17.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        r19 = (org.apache.commons.math3.RealFieldElement) $r8;

        i4 = 0;

     label05:
        $r8 = interfaceinvoke r15.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>(r18);

        $r20 = (org.apache.commons.math3.RealFieldElement) $r8;

        $d0 = interfaceinvoke $r20.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b1 = $d0 cmpg 0.0;

        if $b1 >= 0 goto label13;

        r21 = r18;

     label06:
        $r8 = interfaceinvoke r16.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>(r19);

        $r20 = (org.apache.commons.math3.RealFieldElement) $r8;

        $d0 = interfaceinvoke $r20.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b1 = $d0 cmpg 0.0;

        if $b1 >= 0 goto label14;

        $r20 = r19;

     label07:
        $r22 = r0.<org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver: org.apache.commons.math3.RealFieldElement absoluteAccuracy>;

        $r23 = r0.<org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver: org.apache.commons.math3.RealFieldElement relativeAccuracy>;

        $r8 = interfaceinvoke $r23.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r21);

        $r8 = interfaceinvoke $r22.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r8);

        r21 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r8 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>(r2);

        $r22 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r8 = interfaceinvoke $r22.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>(r21);

        r21 = (org.apache.commons.math3.RealFieldElement) $r8;

        $d0 = interfaceinvoke r21.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b1 = $d0 cmpg 0.0;

        if $b1 <= 0 goto label08;

        r21 = r0.<org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver: org.apache.commons.math3.RealFieldElement functionValueAccuracy>;

        $r8 = interfaceinvoke $r20.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>(r21);

        $r20 = (org.apache.commons.math3.RealFieldElement) $r8;

        $d0 = interfaceinvoke $r20.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b1 = $d0 cmpg 0.0;

        if $b1 >= 0 goto label21;

     label08:
        $r24 = <org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver$1: int[] $SwitchMap$org$apache$commons$math3$analysis$solvers$AllowedSolution>;

        $i0 = virtualinvoke $r5.<org.apache.commons.math3.analysis.solvers.AllowedSolution: int ordinal()>();

        $i0 = $r24[$i0];

        lookupswitch($i0)
        {
            case 1: goto label15;
            case 2: goto label01;
            case 3: goto label16;
            case 4: goto label17;
            case 5: goto label18;
            default: goto label09;
        };

     label09:
        $r25 = new org.apache.commons.math3.exception.MathInternalError;

        specialinvoke $r25.<org.apache.commons.math3.exception.MathInternalError: void <init>(java.lang.Throwable)>(null);

        throw $r25;

     label10:
        $r6 = r0.<org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver: org.apache.commons.math3.util.IntegerSequence$Incrementor evaluations>;

        virtualinvoke $r6.<org.apache.commons.math3.util.IntegerSequence$Incrementor: void increment()>();

        r2 = r12[2];

        r2 = interfaceinvoke r1.<org.apache.commons.math3.analysis.RealFieldUnivariateFunction: org.apache.commons.math3.RealFieldElement value(org.apache.commons.math3.RealFieldElement)>(r2);

        r13[2] = r2;

        r2 = r13[2];

        $d0 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $z0 = staticinvoke <org.apache.commons.math3.util.Precision: boolean equals(double,double,int)>($d0, 0.0, 1);

        if $z0 == 0 goto label11;

        r2 = r12[2];

        return r2;

     label11:
        r2 = r13[1];

        r3 = r13[2];

        $r8 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r3);

        r2 = (org.apache.commons.math3.RealFieldElement) $r8;

        $d0 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b1 = $d0 cmpg 0.0;

        if $b1 >= 0 goto label12;

        $i0 = 3;

        i2 = 2;

        goto label04;

     label12:
        r26 = new org.apache.commons.math3.exception.NoBracketingException;

        r2 = r12[0];

        $d0 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        r2 = r12[2];

        $d1 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        r2 = r13[0];

        $d2 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        r2 = r13[2];

        $d3 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        specialinvoke r26.<org.apache.commons.math3.exception.NoBracketingException: void <init>(double,double,double,double)>($d0, $d1, $d2, $d3);

        throw r26;

     label13:
        r21 = r15;

        goto label06;

     label14:
        $r20 = r16;

        goto label07;

     label15:
        $r8 = interfaceinvoke r16.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>(r19);

        r4 = (org.apache.commons.math3.RealFieldElement) $r8;

        $d0 = interfaceinvoke r4.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b1 = $d0 cmpg 0.0;

        if $b1 < 0 goto label36;

     label16:
        return r3;

     label17:
        $d0 = interfaceinvoke r4.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b1 = $d0 cmpg 0.0;

        if $b1 <= 0 goto label36;

        return r3;

     label18:
        $d0 = interfaceinvoke r4.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b1 = $d0 cmpg 0.0;

        if $b1 >= 0 goto label20;

     label19:
        return r3;

     label20:
        r3 = r2;

        goto label19;

     label21:
        if $i3 < 2 goto label29;

        $r8 = interfaceinvoke r17.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(double)>(16.0);

        $r20 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r8 = interfaceinvoke $r20.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        r21 = (org.apache.commons.math3.RealFieldElement) $r8;

     label22:
        i5 = 0;

        i6 = $i0;

     label23:
        $i7 = i6 - i5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r12, i5, r14, i5, $i7);

        $r22 = specialinvoke r0.<org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver: org.apache.commons.math3.RealFieldElement guessX(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement[],org.apache.commons.math3.RealFieldElement[],int,int)>(r21, r14, r13, i5, i6);

        $r20 = $r22;

        $r8 = interfaceinvoke $r22.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>(r2);

        $r23 = (org.apache.commons.math3.RealFieldElement) $r8;

        $d0 = interfaceinvoke $r23.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b1 = $d0 cmpl 0.0;

        if $b1 <= 0 goto label24;

        $r8 = interfaceinvoke $r22.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>(r3);

        $r22 = (org.apache.commons.math3.RealFieldElement) $r8;

        $d0 = interfaceinvoke $r22.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b1 = $d0 cmpg 0.0;

        if $b1 < 0 goto label26;

     label24:
        $i7 = i2 - i5;

        $i8 = i6 - i2;

        if $i7 < $i8 goto label31;

        i5 = i5 + 1;

     label25:
        $r20 = r10;

     label26:
        $d0 = interfaceinvoke $r20.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 == 0 goto label27;

        $i7 = i6 - i5;

        if $i7 > 1 goto label23;

     label27:
        $d0 = interfaceinvoke $r20.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 == 0 goto label28;

        $r8 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>(r2);

        $r20 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r8 = interfaceinvoke $r20.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(double)>(2.0);

        $r8 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r8);

        $r20 = (org.apache.commons.math3.RealFieldElement) $r8;

        i5 = i2 + -1;

        i6 = i2;

     label28:
        $r6 = r0.<org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver: org.apache.commons.math3.util.IntegerSequence$Incrementor evaluations>;

        virtualinvoke $r6.<org.apache.commons.math3.util.IntegerSequence$Incrementor: void increment()>();

        r21 = interfaceinvoke r1.<org.apache.commons.math3.analysis.RealFieldUnivariateFunction: org.apache.commons.math3.RealFieldElement value(org.apache.commons.math3.RealFieldElement)>($r20);

        $d0 = interfaceinvoke r21.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $z0 = staticinvoke <org.apache.commons.math3.util.Precision: boolean equals(double,double,int)>($d0, 0.0, 1);

        if $z0 == 0 goto label32;

        return $r20;

     label29:
        if i4 < 2 goto label30;

        $r8 = interfaceinvoke r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(double)>(16.0);

        $r20 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r8 = interfaceinvoke $r20.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        r21 = (org.apache.commons.math3.RealFieldElement) $r8;

        goto label22;

     label30:
        r21 = r9;

        goto label22;

     label31:
        i6 = i6 + -1;

        goto label25;

     label32:
        if $i0 <= 2 goto label34;

        $i7 = i6 - i5;

        if $i7 == $i0 goto label34;

        $i0 = i6 - i5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r12, i5, r12, 0, $i0);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r13, i5, r13, 0, $i0);

        i2 = i2 - i5;

     label33:
        i5 = i2 + 1;

        i6 = $i0 - i2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r12, i2, r12, i5, i6);

        r12[i2] = $r20;

        i5 = i2 + 1;

        i6 = $i0 - i2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r13, i2, r13, i5, i6);

        r13[i2] = r21;

        $i0 = $i0 + 1;

        $r8 = interfaceinvoke r21.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r4);

        $r22 = (org.apache.commons.math3.RealFieldElement) $r8;

        $d0 = interfaceinvoke $r22.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b1 = $d0 cmpg 0.0;

        if $b1 > 0 goto label35;

        r3 = $r20;

        r17 = r21;

        $r8 = interfaceinvoke r21.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        r19 = (org.apache.commons.math3.RealFieldElement) $r8;

        $i3 = $i3 + 1;

        i4 = 0;

        goto label05;

     label34:
        i5 = lengthof r12;

        if $i0 != i5 goto label33;

        $i0 = $i0 + -1;

        i5 = lengthof r12;

        i5 = i5 + 1;

        i5 = i5 / 2;

        if i2 < i5 goto label33;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r12, 1, r12, 0, $i0);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r13, 1, r13, 0, $i0);

        i2 = i2 + -1;

        goto label33;

     label35:
        r2 = $r20;

        r4 = r21;

        $r8 = interfaceinvoke r21.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        r16 = (org.apache.commons.math3.RealFieldElement) $r8;

        $i3 = 0;

        i4 = i4 + 1;

        i2 = i2 + 1;

        goto label05;

     label36:
        return r2;
    }
    public org.apache.commons.math3.RealFieldElement solve(int, org.apache.commons.math3.analysis.RealFieldUnivariateFunction, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.analysis.solvers.AllowedSolution) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoBracketingException
    {
        org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver r0;
        int $i0;
        org.apache.commons.math3.analysis.RealFieldUnivariateFunction r1;
        org.apache.commons.math3.RealFieldElement r2, r3, $r6;
        org.apache.commons.math3.analysis.solvers.AllowedSolution $r4;
        java.lang.Object $r5;

        r0 := @this: org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver;

        $i0 := @parameter0: int;

        r1 := @parameter1: org.apache.commons.math3.analysis.RealFieldUnivariateFunction;

        r2 := @parameter2: org.apache.commons.math3.RealFieldElement;

        r3 := @parameter3: org.apache.commons.math3.RealFieldElement;

        $r4 := @parameter4: org.apache.commons.math3.analysis.solvers.AllowedSolution;

        $r5 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>(r3);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(double)>(2.0);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r5;

        r2 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver: org.apache.commons.math3.RealFieldElement solve(int,org.apache.commons.math3.analysis.RealFieldUnivariateFunction,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.analysis.solvers.AllowedSolution)>($i0, r1, r2, r3, $r6, $r4);

        return r2;
    }
