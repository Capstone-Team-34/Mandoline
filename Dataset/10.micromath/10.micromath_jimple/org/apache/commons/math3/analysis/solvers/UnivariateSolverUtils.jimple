org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils extends java.lang.Object
    private void <init>()
    {
        org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils r0;

        r0 := @this: org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static double[] bracket(org.apache.commons.math3.analysis.UnivariateFunction, double, double, double) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.exception.NoBracketingException
    {
        org.apache.commons.math3.analysis.UnivariateFunction $r0;
        double $d0, $d1, $d2;
        double[] $r1;

        $r0 := @parameter0: org.apache.commons.math3.analysis.UnivariateFunction;

        $d0 := @parameter1: double;

        $d1 := @parameter2: double;

        $d2 := @parameter3: double;

        $r1 = staticinvoke <org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils: double[] bracket(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double,double,double,int)>($r0, $d0, $d1, $d2, 1.0, 1.0, 2147483647);

        return $r1;
    }
    public static double[] bracket(org.apache.commons.math3.analysis.UnivariateFunction, double, double, double, double, double, int) throws org.apache.commons.math3.exception.NoBracketingException
    {
        org.apache.commons.math3.analysis.UnivariateFunction $r0;
        double $d0, $d1, $d2, $d3, $d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, $d14, $d15, $d16, $d17;
        int $i0, i2;
        org.apache.commons.math3.exception.NullArgumentException $r1;
        org.apache.commons.math3.exception.util.LocalizedFormats $r2;
        java.lang.Object[] $r3;
        byte $b1;
        org.apache.commons.math3.exception.NotStrictlyPositiveException $r4;
        java.lang.Double $r5;
        java.lang.Integer $r6;
        double[] $r7;
        org.apache.commons.math3.exception.NoBracketingException $r8;

        $r0 := @parameter0: org.apache.commons.math3.analysis.UnivariateFunction;

        $d0 := @parameter1: double;

        $d1 := @parameter2: double;

        $d2 := @parameter3: double;

        $d3 := @parameter4: double;

        $d4 := @parameter5: double;

        $i0 := @parameter6: int;

        if $r0 != null goto label1;

        $r1 = new org.apache.commons.math3.exception.NullArgumentException;

        $r2 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats FUNCTION>;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke $r1.<org.apache.commons.math3.exception.NullArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r2, $r3);

        throw $r1;

     label1:
        $b1 = $d3 cmpg 0.0;

        if $b1 > 0 goto label2;

        $r4 = new org.apache.commons.math3.exception.NotStrictlyPositiveException;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        specialinvoke $r4.<org.apache.commons.math3.exception.NotStrictlyPositiveException: void <init>(java.lang.Number)>($r5);

        throw $r4;

     label2:
        if $i0 > 0 goto label3;

        $r4 = new org.apache.commons.math3.exception.NotStrictlyPositiveException;

        $r2 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats INVALID_MAX_ITERATIONS>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        specialinvoke $r4.<org.apache.commons.math3.exception.NotStrictlyPositiveException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)>($r2, $r6);

        throw $r4;

     label3:
        staticinvoke <org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils: void verifySequence(double,double,double)>($d1, $d0, $d2);

        d9 = $d0;

        d10 = $d0;

        d11 = #NaN;

        d12 = #NaN;

        d13 = 0.0;

        i2 = 0;

     label4:
        if i2 >= $i0 goto label9;

        $b1 = d9 cmpl $d1;

        if $b1 > 0 goto label5;

        $b1 = d10 cmpg $d2;

        if $b1 >= 0 goto label9;

     label5:
        d5 = d9;

        d7 = d11;

        d6 = d10;

        d8 = d12;

        d13 = $d4 * d13;

        d13 = d13 + $d3;

        d9 = $d0 - d13;

        $d14 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(d9, $d1);

        d9 = $d14;

        d10 = $d0 + d13;

        $d15 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>(d10, $d2);

        d10 = $d15;

        $d16 = interfaceinvoke $r0.<org.apache.commons.math3.analysis.UnivariateFunction: double value(double)>($d14);

        d11 = $d16;

        $d17 = interfaceinvoke $r0.<org.apache.commons.math3.analysis.UnivariateFunction: double value(double)>($d15);

        d12 = $d17;

        if i2 != 0 goto label6;

        d6 = $d16 * $d17;

        $b1 = d6 cmpg 0.0;

        if $b1 > 0 goto label8;

        $r7 = newarray (double)[2];

        $r7[0] = $d14;

        $r7[1] = $d15;

        return $r7;

     label6:
        d7 = $d16 * d7;

        $b1 = d7 cmpg 0.0;

        if $b1 > 0 goto label7;

        $r7 = newarray (double)[2];

        $r7[0] = $d14;

        $r7[1] = d5;

        return $r7;

     label7:
        d5 = $d17 * d8;

        $b1 = d5 cmpg 0.0;

        if $b1 > 0 goto label8;

        $r7 = newarray (double)[2];

        $r7[0] = d6;

        $r7[1] = $d15;

        return $r7;

     label8:
        i2 = i2 + 1;

        goto label4;

     label9:
        $r8 = new org.apache.commons.math3.exception.NoBracketingException;

        specialinvoke $r8.<org.apache.commons.math3.exception.NoBracketingException: void <init>(double,double,double,double)>(d9, d10, d11, d12);

        throw $r8;
    }
    public static double[] bracket(org.apache.commons.math3.analysis.UnivariateFunction, double, double, double, int) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.exception.NoBracketingException
    {
        org.apache.commons.math3.analysis.UnivariateFunction $r0;
        double $d0, $d1, $d2;
        int $i0;
        double[] $r1;

        $r0 := @parameter0: org.apache.commons.math3.analysis.UnivariateFunction;

        $d0 := @parameter1: double;

        $d1 := @parameter2: double;

        $d2 := @parameter3: double;

        $i0 := @parameter4: int;

        $r1 = staticinvoke <org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils: double[] bracket(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double,double,double,int)>($r0, $d0, $d1, $d2, 1.0, 1.0, $i0);

        return $r1;
    }
    public static double forceSide(int, org.apache.commons.math3.analysis.UnivariateFunction, org.apache.commons.math3.analysis.solvers.BracketedUnivariateSolver, double, double, double, org.apache.commons.math3.analysis.solvers.AllowedSolution) throws org.apache.commons.math3.exception.NoBracketingException
    {
        int $i0, i1;
        org.apache.commons.math3.analysis.UnivariateFunction $r0;
        org.apache.commons.math3.analysis.solvers.BracketedUnivariateSolver r1;
        double $d0, $d1, d2, $d3, $d4, $d5, d6, $d7;
        org.apache.commons.math3.analysis.solvers.AllowedSolution $r2, $r4;
        org.apache.commons.math3.exception.util.LocalizedFormats $r3;
        byte $b2;
        boolean z0, z1;
        org.apache.commons.math3.exception.NoBracketingException $r5;
        java.lang.Object[] $r6;
        java.lang.Integer $r7;
        java.lang.Double $r8;

        $i0 := @parameter0: int;

        $r0 := @parameter1: org.apache.commons.math3.analysis.UnivariateFunction;

        r1 := @parameter2: org.apache.commons.math3.analysis.solvers.BracketedUnivariateSolver;

        d2 := @parameter3: double;

        $d0 := @parameter4: double;

        $d1 := @parameter5: double;

        $r2 := @parameter6: org.apache.commons.math3.analysis.solvers.AllowedSolution;

        $r4 = <org.apache.commons.math3.analysis.solvers.AllowedSolution: org.apache.commons.math3.analysis.solvers.AllowedSolution ANY_SIDE>;

        if $r2 != $r4 goto label01;

        return d2;

     label01:
        $d3 = interfaceinvoke r1.<org.apache.commons.math3.analysis.solvers.BracketedUnivariateSolver: double getAbsoluteAccuracy()>();

        $d4 = interfaceinvoke r1.<org.apache.commons.math3.analysis.solvers.BracketedUnivariateSolver: double getRelativeAccuracy()>();

        $d4 = $d4 * d2;

        $d4 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d4);

        $d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d3, $d4);

        $d4 = d2 - $d3;

        $d5 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d0, $d4);

        $d4 = $d5;

        d6 = interfaceinvoke $r0.<org.apache.commons.math3.analysis.UnivariateFunction: double value(double)>($d5);

        $d5 = d2 + $d3;

        $d7 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>($d1, $d5);

        $d5 = $d7;

        $d7 = interfaceinvoke $r0.<org.apache.commons.math3.analysis.UnivariateFunction: double value(double)>($d7);

        i1 = $i0 + -2;

     label02:
        if i1 <= 0 goto label12;

        $b2 = d6 cmpl 0.0;

        if $b2 < 0 goto label03;

        $b2 = $d7 cmpg 0.0;

        if $b2 <= 0 goto label04;

     label03:
        $b2 = d6 cmpg 0.0;

        if $b2 > 0 goto label05;

        $b2 = $d7 cmpl 0.0;

        if $b2 < 0 goto label05;

     label04:
        d2 = interfaceinvoke r1.<org.apache.commons.math3.analysis.solvers.BracketedUnivariateSolver: double solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double,org.apache.commons.math3.analysis.solvers.AllowedSolution)>(i1, $r0, $d4, $d5, d2, $r2);

        return d2;

     label05:
        z0 = 0;

        z1 = 0;

        $b2 = d6 cmpg $d7;

        if $b2 >= 0 goto label09;

        $b2 = d6 cmpl 0.0;

        if $b2 < 0 goto label08;

        z0 = 1;

     label06:
        if z0 == 0 goto label07;

        $d4 = $d4 - $d3;

        d6 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d0, $d4);

        $d4 = d6;

        d6 = interfaceinvoke $r0.<org.apache.commons.math3.analysis.UnivariateFunction: double value(double)>(d6);

        i1 = i1 + -1;

     label07:
        if z1 == 0 goto label02;

        $d5 = $d5 + $d3;

        $d7 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>($d1, $d5);

        $d5 = $d7;

        $d7 = interfaceinvoke $r0.<org.apache.commons.math3.analysis.UnivariateFunction: double value(double)>($d7);

        i1 = i1 + -1;

        goto label02;

     label08:
        z1 = 1;

        goto label06;

     label09:
        $b2 = d6 cmpl $d7;

        if $b2 <= 0 goto label11;

        $b2 = d6 cmpg 0.0;

        if $b2 > 0 goto label10;

        z0 = 1;

        goto label06;

     label10:
        z1 = 1;

        goto label06;

     label11:
        z0 = 1;

        z1 = 1;

        goto label06;

     label12:
        $r5 = new org.apache.commons.math3.exception.NoBracketingException;

        $r3 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats FAILED_BRACKETING>;

        $r6 = newarray (java.lang.Object)[5];

        i1 = $i0 - i1;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r6[0] = $r7;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r6[1] = $r7;

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r6[2] = $r8;

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r6[3] = $r8;

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r6[4] = $r8;

        specialinvoke $r5.<org.apache.commons.math3.exception.NoBracketingException: void <init>(org.apache.commons.math3.exception.util.Localizable,double,double,double,double,java.lang.Object[])>($r3, $d4, $d5, d6, $d7, $r6);

        throw $r5;
    }
    public static boolean isBracketing(org.apache.commons.math3.analysis.UnivariateFunction, double, double) throws org.apache.commons.math3.exception.NullArgumentException
    {
        org.apache.commons.math3.analysis.UnivariateFunction $r0;
        double $d0, $d1;
        org.apache.commons.math3.exception.NullArgumentException $r1;
        org.apache.commons.math3.exception.util.LocalizedFormats $r2;
        java.lang.Object[] $r3;
        byte $b0;

        $r0 := @parameter0: org.apache.commons.math3.analysis.UnivariateFunction;

        $d0 := @parameter1: double;

        $d1 := @parameter2: double;

        if $r0 != null goto label1;

        $r1 = new org.apache.commons.math3.exception.NullArgumentException;

        $r2 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats FUNCTION>;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke $r1.<org.apache.commons.math3.exception.NullArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r2, $r3);

        throw $r1;

     label1:
        $d0 = interfaceinvoke $r0.<org.apache.commons.math3.analysis.UnivariateFunction: double value(double)>($d0);

        $d1 = interfaceinvoke $r0.<org.apache.commons.math3.analysis.UnivariateFunction: double value(double)>($d1);

        $b0 = $d0 cmpl 0.0;

        if $b0 < 0 goto label2;

        $b0 = $d1 cmpg 0.0;

        if $b0 <= 0 goto label3;

     label2:
        $b0 = $d0 cmpg 0.0;

        if $b0 > 0 goto label4;

        $b0 = $d1 cmpl 0.0;

        if $b0 < 0 goto label4;

     label3:
        return 1;

     label4:
        return 0;
    }
    public static boolean isSequence(double, double, double)
    {
        double $d0, $d1, $d2;
        byte $b0;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $d2 := @parameter2: double;

        $b0 = $d0 cmpg $d1;

        if $b0 >= 0 goto label1;

        $b0 = $d1 cmpg $d2;

        if $b0 >= 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public static double midpoint(double, double)
    {
        double $d0, $d1;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $d0 = $d0 + $d1;

        $d0 = $d0 * 0.5;

        return $d0;
    }
    public static double solve(org.apache.commons.math3.analysis.UnivariateFunction, double, double) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoBracketingException
    {
        org.apache.commons.math3.analysis.UnivariateFunction $r0;
        double $d0, $d1;
        org.apache.commons.math3.exception.NullArgumentException $r1;
        org.apache.commons.math3.analysis.solvers.BrentSolver r2;
        org.apache.commons.math3.exception.util.LocalizedFormats $r3;
        java.lang.Object[] $r4;

        $r0 := @parameter0: org.apache.commons.math3.analysis.UnivariateFunction;

        $d0 := @parameter1: double;

        $d1 := @parameter2: double;

        if $r0 != null goto label1;

        $r1 = new org.apache.commons.math3.exception.NullArgumentException;

        $r3 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats FUNCTION>;

        $r4 = newarray (java.lang.Object)[0];

        specialinvoke $r1.<org.apache.commons.math3.exception.NullArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r3, $r4);

        throw $r1;

     label1:
        r2 = new org.apache.commons.math3.analysis.solvers.BrentSolver;

        specialinvoke r2.<org.apache.commons.math3.analysis.solvers.BrentSolver: void <init>()>();

        $d0 = interfaceinvoke r2.<org.apache.commons.math3.analysis.solvers.UnivariateSolver: double solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double)>(2147483647, $r0, $d0, $d1);

        return $d0;
    }
    public static double solve(org.apache.commons.math3.analysis.UnivariateFunction, double, double, double) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoBracketingException
    {
        org.apache.commons.math3.analysis.UnivariateFunction $r0;
        double $d0, $d1, $d2;
        org.apache.commons.math3.exception.NullArgumentException $r1;
        org.apache.commons.math3.analysis.solvers.BrentSolver r2;
        org.apache.commons.math3.exception.util.LocalizedFormats $r3;
        java.lang.Object[] $r4;

        $r0 := @parameter0: org.apache.commons.math3.analysis.UnivariateFunction;

        $d0 := @parameter1: double;

        $d1 := @parameter2: double;

        $d2 := @parameter3: double;

        if $r0 != null goto label1;

        $r1 = new org.apache.commons.math3.exception.NullArgumentException;

        $r3 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats FUNCTION>;

        $r4 = newarray (java.lang.Object)[0];

        specialinvoke $r1.<org.apache.commons.math3.exception.NullArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r3, $r4);

        throw $r1;

     label1:
        r2 = new org.apache.commons.math3.analysis.solvers.BrentSolver;

        specialinvoke r2.<org.apache.commons.math3.analysis.solvers.BrentSolver: void <init>(double)>($d2);

        $d0 = interfaceinvoke r2.<org.apache.commons.math3.analysis.solvers.UnivariateSolver: double solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double)>(2147483647, $r0, $d0, $d1);

        return $d0;
    }
    public static void verifyBracketing(org.apache.commons.math3.analysis.UnivariateFunction, double, double) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoBracketingException
    {
        org.apache.commons.math3.analysis.UnivariateFunction $r0;
        double $d0, $d1, $d2, $d3;
        org.apache.commons.math3.exception.NullArgumentException $r1;
        org.apache.commons.math3.exception.util.LocalizedFormats $r2;
        java.lang.Object[] $r3;
        boolean $z0;
        org.apache.commons.math3.exception.NoBracketingException $r4;

        $r0 := @parameter0: org.apache.commons.math3.analysis.UnivariateFunction;

        $d0 := @parameter1: double;

        $d1 := @parameter2: double;

        if $r0 != null goto label1;

        $r1 = new org.apache.commons.math3.exception.NullArgumentException;

        $r2 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats FUNCTION>;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke $r1.<org.apache.commons.math3.exception.NullArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r2, $r3);

        throw $r1;

     label1:
        staticinvoke <org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils: void verifyInterval(double,double)>($d0, $d1);

        $z0 = staticinvoke <org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils: boolean isBracketing(org.apache.commons.math3.analysis.UnivariateFunction,double,double)>($r0, $d0, $d1);

        if $z0 != 0 goto label2;

        $r4 = new org.apache.commons.math3.exception.NoBracketingException;

        $d2 = interfaceinvoke $r0.<org.apache.commons.math3.analysis.UnivariateFunction: double value(double)>($d0);

        $d3 = interfaceinvoke $r0.<org.apache.commons.math3.analysis.UnivariateFunction: double value(double)>($d1);

        specialinvoke $r4.<org.apache.commons.math3.exception.NoBracketingException: void <init>(double,double,double,double)>($d0, $d1, $d2, $d3);

        throw $r4;

     label2:
        return;
    }
    public static void verifyInterval(double, double) throws org.apache.commons.math3.exception.NumberIsTooLargeException
    {
        double $d0, $d1;
        org.apache.commons.math3.exception.util.LocalizedFormats $r0;
        byte $b0;
        org.apache.commons.math3.exception.NumberIsTooLargeException $r1;
        java.lang.Double $r2, $r3;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $b0 = $d0 cmpl $d1;

        if $b0 < 0 goto label1;

        $r1 = new org.apache.commons.math3.exception.NumberIsTooLargeException;

        $r0 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats ENDPOINTS_NOT_AN_INTERVAL>;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        specialinvoke $r1.<org.apache.commons.math3.exception.NumberIsTooLargeException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)>($r0, $r2, $r3, 0);

        throw $r1;

     label1:
        return;
    }
    public static void verifySequence(double, double, double) throws org.apache.commons.math3.exception.NumberIsTooLargeException
    {
        double $d0, $d1, $d2;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $d2 := @parameter2: double;

        staticinvoke <org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils: void verifyInterval(double,double)>($d0, $d1);

        staticinvoke <org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils: void verifyInterval(double,double)>($d1, $d2);

        return;
    }
