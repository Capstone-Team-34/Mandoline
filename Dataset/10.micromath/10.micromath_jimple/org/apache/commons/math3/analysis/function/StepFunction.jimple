org.apache.commons.math3.analysis.function.StepFunction extends java.lang.Object implements org.apache.commons.math3.analysis.UnivariateFunction
private final double[] abscissa
private final double[] ordinate
    public void <init>(double[], double[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NonMonotonicSequenceException
    {
        org.apache.commons.math3.analysis.function.StepFunction r0;
        double[] $r1, $r2;
        int $i0, $i1;
        org.apache.commons.math3.exception.NullArgumentException $r3;
        org.apache.commons.math3.exception.NoDataException $r4;
        org.apache.commons.math3.exception.DimensionMismatchException $r5;

        r0 := @this: org.apache.commons.math3.analysis.function.StepFunction;

        $r1 := @parameter0: double[];

        $r2 := @parameter1: double[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $r1 == null goto label1;

        if $r2 != null goto label2;

     label1:
        $r3 = new org.apache.commons.math3.exception.NullArgumentException;

        specialinvoke $r3.<org.apache.commons.math3.exception.NullArgumentException: void <init>()>();

        throw $r3;

     label2:
        $i0 = lengthof $r1;

        if $i0 == 0 goto label3;

        $i0 = lengthof $r2;

        if $i0 != 0 goto label4;

     label3:
        $r4 = new org.apache.commons.math3.exception.NoDataException;

        specialinvoke $r4.<org.apache.commons.math3.exception.NoDataException: void <init>()>();

        throw $r4;

     label4:
        $i0 = lengthof $r2;

        $i1 = lengthof $r1;

        if $i0 == $i1 goto label5;

        $r5 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i1 = lengthof $r2;

        $i0 = lengthof $r1;

        specialinvoke $r5.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i1, $i0);

        throw $r5;

     label5:
        staticinvoke <org.apache.commons.math3.util.MathArrays: void checkOrder(double[])>($r1);

        $r1 = staticinvoke <org.apache.commons.math3.util.MathArrays: double[] copyOf(double[])>($r1);

        r0.<org.apache.commons.math3.analysis.function.StepFunction: double[] abscissa> = $r1;

        $r1 = staticinvoke <org.apache.commons.math3.util.MathArrays: double[] copyOf(double[])>($r2);

        r0.<org.apache.commons.math3.analysis.function.StepFunction: double[] ordinate> = $r1;

        return;
    }
    public double value(double)
    {
        org.apache.commons.math3.analysis.function.StepFunction r0;
        double $d0;
        int $i0;
        double[] $r1;

        r0 := @this: org.apache.commons.math3.analysis.function.StepFunction;

        $d0 := @parameter0: double;

        $r1 = r0.<org.apache.commons.math3.analysis.function.StepFunction: double[] abscissa>;

        $i0 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>($r1, $d0);

        if $i0 >= -1 goto label1;

        $r1 = r0.<org.apache.commons.math3.analysis.function.StepFunction: double[] ordinate>;

        $i0 = neg $i0;

        $i0 = $i0 + -2;

        $d0 = $r1[$i0];

        return $d0;

     label1:
        if $i0 < 0 goto label2;

        $r1 = r0.<org.apache.commons.math3.analysis.function.StepFunction: double[] ordinate>;

        $d0 = $r1[$i0];

        return $d0;

     label2:
        $r1 = r0.<org.apache.commons.math3.analysis.function.StepFunction: double[] ordinate>;

        $d0 = $r1[0];

        return $d0;
    }
