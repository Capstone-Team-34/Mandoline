org.apache.commons.math3.analysis.FunctionUtils$5 extends java.lang.Object implements org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction
final org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] val$f
    void <init>(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[])
    {
        org.apache.commons.math3.analysis.FunctionUtils$5 r0;
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] $r1;

        r0 := @this: org.apache.commons.math3.analysis.FunctionUtils$5;

        $r1 := @parameter0: org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[];

        r0.<org.apache.commons.math3.analysis.FunctionUtils$5: org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] val$f> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public double value(double)
    {
        org.apache.commons.math3.analysis.FunctionUtils$5 r0;
        double $d0, $d1, $d2;
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] $r1;
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction $r2;
        int i0, $i1;

        r0 := @this: org.apache.commons.math3.analysis.FunctionUtils$5;

        $d0 := @parameter0: double;

        $r1 = r0.<org.apache.commons.math3.analysis.FunctionUtils$5: org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] val$f>;

        $r2 = $r1[0];

        $d1 = interfaceinvoke $r2.<org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction: double value(double)>($d0);

        i0 = 1;

     label1:
        $r1 = r0.<org.apache.commons.math3.analysis.FunctionUtils$5: org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] val$f>;

        $i1 = lengthof $r1;

        if i0 >= $i1 goto label2;

        $r1 = r0.<org.apache.commons.math3.analysis.FunctionUtils$5: org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] val$f>;

        $r2 = $r1[i0];

        $d2 = interfaceinvoke $r2.<org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction: double value(double)>($d0);

        $d1 = $d1 + $d2;

        i0 = i0 + 1;

        goto label1;

     label2:
        return $d1;
    }
    public org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.analysis.FunctionUtils$5 r0;
        org.apache.commons.math3.analysis.differentiation.DerivativeStructure $r1, $r4, $r5;
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] $r2;
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction $r3;
        int i0, $i1;

        r0 := @this: org.apache.commons.math3.analysis.FunctionUtils$5;

        $r1 := @parameter0: org.apache.commons.math3.analysis.differentiation.DerivativeStructure;

        $r2 = r0.<org.apache.commons.math3.analysis.FunctionUtils$5: org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] val$f>;

        $r3 = $r2[0];

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction: org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)>($r1);

        i0 = 1;

     label1:
        $r2 = r0.<org.apache.commons.math3.analysis.FunctionUtils$5: org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] val$f>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label2;

        $r2 = r0.<org.apache.commons.math3.analysis.FunctionUtils$5: org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] val$f>;

        $r3 = $r2[i0];

        $r5 = interfaceinvoke $r3.<org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction: org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)>($r1);

        $r4 = virtualinvoke $r4.<org.apache.commons.math3.analysis.differentiation.DerivativeStructure: org.apache.commons.math3.analysis.differentiation.DerivativeStructure add(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)>($r5);

        i0 = i0 + 1;

        goto label1;

     label2:
        return $r4;
    }
