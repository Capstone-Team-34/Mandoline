org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator extends java.lang.Object
private final java.util.List abscissae
private final java.util.List bottomDiagonal
private final java.util.List topDiagonal
    public void <init>()
    {
        org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List abscissae> = $r1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List topDiagonal> = $r1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List bottomDiagonal> = $r1;

        return;
    }
    public transient void addSamplePoint(org.apache.commons.math3.FieldElement, org.apache.commons.math3.FieldElement[][]) throws org.apache.commons.math3.exception.ZeroException, org.apache.commons.math3.exception.MathArithmeticException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NullArgumentException
    {
        org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator r0;
        org.apache.commons.math3.FieldElement r1, r5, r7, $r8, $r15;
        org.apache.commons.math3.FieldElement[][] r2;
        org.apache.commons.math3.Field $r3;
        java.lang.Object $r4;
        int i0, $i1, $i2, $i3, $i4;
        org.apache.commons.math3.FieldElement[] $r6, r10, r11;
        java.util.List $r9;
        boolean $z0;
        org.apache.commons.math3.exception.ZeroException $r12;
        org.apache.commons.math3.exception.util.LocalizedFormats $r13;
        java.lang.Object[] $r14;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator;

        r1 := @parameter0: org.apache.commons.math3.FieldElement;

        r2 := @parameter1: org.apache.commons.math3.FieldElement[][];

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>(r1);

        $r3 = interfaceinvoke r1.<org.apache.commons.math3.FieldElement: org.apache.commons.math3.Field getField()>();

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.Field: java.lang.Object getOne()>();

        r5 = (org.apache.commons.math3.FieldElement) $r4;

        i0 = 0;

     label1:
        $i1 = lengthof r2;

        if i0 >= $i1 goto label9;

        $r6 = r2[i0];

        $r4 = virtualinvoke $r6.<java.lang.Object: java.lang.Object clone()>();

        $r6 = (org.apache.commons.math3.FieldElement[]) $r4;

        if i0 <= 1 goto label3;

        $r4 = interfaceinvoke r5.<org.apache.commons.math3.FieldElement: java.lang.Object multiply(int)>(i0);

        r5 = (org.apache.commons.math3.FieldElement) $r4;

        $r4 = interfaceinvoke r5.<org.apache.commons.math3.FieldElement: java.lang.Object reciprocal()>();

        r7 = (org.apache.commons.math3.FieldElement) $r4;

        $i1 = 0;

     label2:
        $i2 = lengthof $r6;

        if $i1 >= $i2 goto label3;

        $r8 = $r6[$i1];

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.FieldElement: java.lang.Object multiply(java.lang.Object)>(r7);

        $r8 = (org.apache.commons.math3.FieldElement) $r4;

        $r6[$i1] = $r8;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $r9 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List abscissae>;

        $i1 = interfaceinvoke $r9.<java.util.List: int size()>();

        $r9 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List bottomDiagonal>;

        $i2 = $i1 - i0;

        interfaceinvoke $r9.<java.util.List: void add(int,java.lang.Object)>($i2, $r6);

        r10 = $r6;

        $i2 = i0;

     label4:
        if $i2 >= $i1 goto label8;

        $r9 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List bottomDiagonal>;

        $i3 = $i2 + 1;

        $i3 = $i1 - $i3;

        $r4 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i3);

        r11 = (org.apache.commons.math3.FieldElement[]) $r4;

        $r9 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List abscissae>;

        $i3 = $i2 + 1;

        $i3 = $i1 - $i3;

        $r4 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i3);

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label5;

        $r12 = new org.apache.commons.math3.exception.ZeroException;

        $r13 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats DUPLICATED_ABSCISSA_DIVISION_BY_ZERO>;

        $r14 = newarray (java.lang.Object)[1];

        $r14[0] = r1;

        specialinvoke $r12.<org.apache.commons.math3.exception.ZeroException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r13, $r14);

        throw $r12;

     label5:
        $r9 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List abscissae>;

        $i3 = $i2 + 1;

        $i3 = $i1 - $i3;

        $r4 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i3);

        $r4 = interfaceinvoke r1.<org.apache.commons.math3.FieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        r7 = (org.apache.commons.math3.FieldElement) $r4;

        $r4 = interfaceinvoke r7.<org.apache.commons.math3.FieldElement: java.lang.Object reciprocal()>();

        r7 = (org.apache.commons.math3.FieldElement) $r4;

        $i3 = 0;

     label6:
        $i4 = lengthof $r6;

        if $i3 >= $i4 goto label7;

        $r8 = r10[$i3];

        $r15 = r11[$i3];

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.FieldElement: java.lang.Object subtract(java.lang.Object)>($r15);

        $r4 = interfaceinvoke r7.<org.apache.commons.math3.FieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r8 = (org.apache.commons.math3.FieldElement) $r4;

        r11[$i3] = $r8;

        $i3 = $i3 + 1;

        goto label6;

     label7:
        r10 = r11;

        $i2 = $i2 + 1;

        goto label4;

     label8:
        $r9 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List topDiagonal>;

        $r4 = virtualinvoke r10.<java.lang.Object: java.lang.Object clone()>();

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r9 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List abscissae>;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r1);

        i0 = i0 + 1;

        goto label1;

     label9:
        return;
    }
    public org.apache.commons.math3.FieldElement[][] derivatives(org.apache.commons.math3.FieldElement, int) throws org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.NullArgumentException
    {
        org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator r0;
        org.apache.commons.math3.FieldElement r1, r7, r8, $r17, $r18;
        int $i0, $i1, $i2, i3, $i4;
        java.util.List $r2;
        boolean $z0;
        org.apache.commons.math3.exception.NoDataException $r3;
        org.apache.commons.math3.exception.util.LocalizedFormats $r4;
        org.apache.commons.math3.Field $r5;
        java.lang.Object $r6;
        java.lang.Object[] $r9;
        org.apache.commons.math3.FieldElement[] r10, $r11, r14, $r15, $r16;
        java.lang.Object[][] $r12;
        org.apache.commons.math3.FieldElement[][] r13;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator;

        r1 := @parameter0: org.apache.commons.math3.FieldElement;

        $i0 := @parameter1: int;

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>(r1);

        $r2 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List abscissae>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        $r3 = new org.apache.commons.math3.exception.NoDataException;

        $r4 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats EMPTY_INTERPOLATION_SAMPLE>;

        specialinvoke $r3.<org.apache.commons.math3.exception.NoDataException: void <init>(org.apache.commons.math3.exception.util.Localizable)>($r4);

        throw $r3;

     label01:
        $r5 = interfaceinvoke r1.<org.apache.commons.math3.FieldElement: org.apache.commons.math3.Field getField()>();

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        r7 = (org.apache.commons.math3.FieldElement) $r6;

        $r5 = interfaceinvoke r1.<org.apache.commons.math3.FieldElement: org.apache.commons.math3.Field getField()>();

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.Field: java.lang.Object getOne()>();

        r8 = (org.apache.commons.math3.FieldElement) $r6;

        $r5 = interfaceinvoke r1.<org.apache.commons.math3.FieldElement: org.apache.commons.math3.Field getField()>();

        $i1 = $i0 + 1;

        $r9 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[] buildArray(org.apache.commons.math3.Field,int)>($r5, $i1);

        r10 = (org.apache.commons.math3.FieldElement[]) $r9;

        r10[0] = r7;

        $i1 = 0;

     label02:
        if $i1 >= $i0 goto label03;

        $i2 = $i1 + 1;

        r7 = r10[$i1];

        $r6 = interfaceinvoke r7.<org.apache.commons.math3.FieldElement: java.lang.Object add(java.lang.Object)>(r8);

        r7 = (org.apache.commons.math3.FieldElement) $r6;

        r10[$i2] = r7;

        $i1 = $i1 + 1;

        goto label02;

     label03:
        $r5 = interfaceinvoke r1.<org.apache.commons.math3.FieldElement: org.apache.commons.math3.Field getField()>();

        $i1 = $i0 + 1;

        $r2 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List topDiagonal>;

        $r6 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r11 = (org.apache.commons.math3.FieldElement[]) $r6;

        $i2 = lengthof $r11;

        $r12 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[][] buildArray(org.apache.commons.math3.Field,int,int)>($r5, $i1, $i2);

        r13 = (org.apache.commons.math3.FieldElement[][]) $r12;

        $r5 = interfaceinvoke r1.<org.apache.commons.math3.FieldElement: org.apache.commons.math3.Field getField()>();

        $i1 = $i0 + 1;

        $r9 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[] buildArray(org.apache.commons.math3.Field,int)>($r5, $i1);

        $r11 = (org.apache.commons.math3.FieldElement[]) $r9;

        $r5 = interfaceinvoke r1.<org.apache.commons.math3.FieldElement: org.apache.commons.math3.Field getField()>();

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.Field: java.lang.Object getOne()>();

        r8 = (org.apache.commons.math3.FieldElement) $r6;

        $r11[0] = r8;

        $i1 = 0;

     label04:
        $r2 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List topDiagonal>;

        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i1 >= $i2 goto label10;

        $r2 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List topDiagonal>;

        $r6 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i1);

        r14 = (org.apache.commons.math3.FieldElement[]) $r6;

        $r2 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List abscissae>;

        $r6 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i1);

        $r6 = interfaceinvoke r1.<org.apache.commons.math3.FieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        r8 = (org.apache.commons.math3.FieldElement) $r6;

        $i2 = $i0;

     label05:
        if $i2 < 0 goto label09;

        i3 = 0;

     label06:
        $r15 = r13[$i2];

        $i4 = lengthof $r15;

        if i3 >= $i4 goto label07;

        $r15 = r13[$i2];

        $r16 = r13[$i2];

        r7 = $r16[i3];

        $r17 = r14[i3];

        $r18 = $r11[$i2];

        $r6 = interfaceinvoke $r17.<org.apache.commons.math3.FieldElement: java.lang.Object multiply(java.lang.Object)>($r18);

        $r6 = interfaceinvoke r7.<org.apache.commons.math3.FieldElement: java.lang.Object add(java.lang.Object)>($r6);

        r7 = (org.apache.commons.math3.FieldElement) $r6;

        $r15[i3] = r7;

        i3 = i3 + 1;

        goto label06;

     label07:
        r7 = $r11[$i2];

        $r6 = interfaceinvoke r7.<org.apache.commons.math3.FieldElement: java.lang.Object multiply(java.lang.Object)>(r8);

        r7 = (org.apache.commons.math3.FieldElement) $r6;

        $r11[$i2] = r7;

        if $i2 <= 0 goto label08;

        r7 = $r11[$i2];

        $r17 = r10[$i2];

        i3 = $i2 + -1;

        $r18 = $r11[i3];

        $r6 = interfaceinvoke $r17.<org.apache.commons.math3.FieldElement: java.lang.Object multiply(java.lang.Object)>($r18);

        $r6 = interfaceinvoke r7.<org.apache.commons.math3.FieldElement: java.lang.Object add(java.lang.Object)>($r6);

        r7 = (org.apache.commons.math3.FieldElement) $r6;

        $r11[$i2] = r7;

     label08:
        $i2 = $i2 + -1;

        goto label05;

     label09:
        $i1 = $i1 + 1;

        goto label04;

     label10:
        return r13;
    }
    public org.apache.commons.math3.FieldElement[] value(org.apache.commons.math3.FieldElement) throws org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.NullArgumentException
    {
        org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator r0;
        org.apache.commons.math3.FieldElement r1, r9, $r11, $r12;
        java.util.List $r2;
        boolean $z0;
        org.apache.commons.math3.exception.NoDataException $r3;
        org.apache.commons.math3.exception.util.LocalizedFormats $r4;
        org.apache.commons.math3.Field $r5;
        java.lang.Object $r6;
        org.apache.commons.math3.FieldElement[] $r7, r10;
        int $i0, $i1, $i2;
        java.lang.Object[] $r8;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator;

        r1 := @parameter0: org.apache.commons.math3.FieldElement;

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>(r1);

        $r2 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List abscissae>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r3 = new org.apache.commons.math3.exception.NoDataException;

        $r4 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats EMPTY_INTERPOLATION_SAMPLE>;

        specialinvoke $r3.<org.apache.commons.math3.exception.NoDataException: void <init>(org.apache.commons.math3.exception.util.Localizable)>($r4);

        throw $r3;

     label1:
        $r5 = interfaceinvoke r1.<org.apache.commons.math3.FieldElement: org.apache.commons.math3.Field getField()>();

        $r2 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List topDiagonal>;

        $r6 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (org.apache.commons.math3.FieldElement[]) $r6;

        $i0 = lengthof $r7;

        $r8 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[] buildArray(org.apache.commons.math3.Field,int)>($r5, $i0);

        $r7 = (org.apache.commons.math3.FieldElement[]) $r8;

        $r5 = interfaceinvoke r1.<org.apache.commons.math3.FieldElement: org.apache.commons.math3.Field getField()>();

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.Field: java.lang.Object getOne()>();

        r9 = (org.apache.commons.math3.FieldElement) $r6;

        $i0 = 0;

     label2:
        $r2 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List topDiagonal>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 >= $i1 goto label5;

        $r2 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List topDiagonal>;

        $r6 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        r10 = (org.apache.commons.math3.FieldElement[]) $r6;

        $i1 = 0;

     label3:
        $i2 = lengthof $r7;

        if $i1 >= $i2 goto label4;

        $r11 = $r7[$i1];

        $r12 = r10[$i1];

        $r6 = interfaceinvoke $r12.<org.apache.commons.math3.FieldElement: java.lang.Object multiply(java.lang.Object)>(r9);

        $r6 = interfaceinvoke $r11.<org.apache.commons.math3.FieldElement: java.lang.Object add(java.lang.Object)>($r6);

        $r11 = (org.apache.commons.math3.FieldElement) $r6;

        $r7[$i1] = $r11;

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $r2 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List abscissae>;

        $r6 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r6 = interfaceinvoke r1.<org.apache.commons.math3.FieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r11 = (org.apache.commons.math3.FieldElement) $r6;

        $r6 = interfaceinvoke r9.<org.apache.commons.math3.FieldElement: java.lang.Object multiply(java.lang.Object)>($r11);

        r9 = (org.apache.commons.math3.FieldElement) $r6;

        $i0 = $i0 + 1;

        goto label2;

     label5:
        return $r7;
    }
