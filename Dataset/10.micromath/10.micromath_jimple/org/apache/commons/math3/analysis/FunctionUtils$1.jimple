org.apache.commons.math3.analysis.FunctionUtils$1 extends java.lang.Object implements org.apache.commons.math3.analysis.UnivariateFunction
final org.apache.commons.math3.analysis.UnivariateFunction[] val$f
    void <init>(org.apache.commons.math3.analysis.UnivariateFunction[])
    {
        org.apache.commons.math3.analysis.FunctionUtils$1 r0;
        org.apache.commons.math3.analysis.UnivariateFunction[] $r1;

        r0 := @this: org.apache.commons.math3.analysis.FunctionUtils$1;

        $r1 := @parameter0: org.apache.commons.math3.analysis.UnivariateFunction[];

        r0.<org.apache.commons.math3.analysis.FunctionUtils$1: org.apache.commons.math3.analysis.UnivariateFunction[] val$f> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public double value(double)
    {
        org.apache.commons.math3.analysis.FunctionUtils$1 r0;
        double $d0;
        org.apache.commons.math3.analysis.UnivariateFunction[] $r1;
        int $i0;
        org.apache.commons.math3.analysis.UnivariateFunction $r2;

        r0 := @this: org.apache.commons.math3.analysis.FunctionUtils$1;

        $d0 := @parameter0: double;

        $r1 = r0.<org.apache.commons.math3.analysis.FunctionUtils$1: org.apache.commons.math3.analysis.UnivariateFunction[] val$f>;

        $i0 = lengthof $r1;

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label2;

        $r1 = r0.<org.apache.commons.math3.analysis.FunctionUtils$1: org.apache.commons.math3.analysis.UnivariateFunction[] val$f>;

        $r2 = $r1[$i0];

        $d0 = interfaceinvoke $r2.<org.apache.commons.math3.analysis.UnivariateFunction: double value(double)>($d0);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return $d0;
    }
