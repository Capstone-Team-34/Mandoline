org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator extends java.lang.Object implements org.apache.commons.math3.analysis.interpolation.TrivariateGridInterpolator
    public void <init>()
    {
        org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator r0;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private int nextIndex(int, int)
    {
        org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator r0;
        int $i0, $i1;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = $i0 + 1;

        if $i0 >= $i1 goto label1;

        return $i0;

     label1:
        $i0 = $i0 + -1;

        return $i0;
    }
    private int previousIndex(int)
    {
        org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator r0;
        int $i0;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator;

        $i0 := @parameter0: int;

        $i0 = $i0 + -1;

        if $i0 < 0 goto label1;

        return $i0;

     label1:
        return 0;
    }
    public volatile org.apache.commons.math3.analysis.TrivariateFunction interpolate(double[], double[], double[], double[][][]) throws org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NonMonotonicSequenceException
    {
        org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator r0;
        double[] $r1, $r2, $r3;
        double[][][] $r4;
        org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction $r5;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator;

        $r1 := @parameter0: double[];

        $r2 := @parameter1: double[];

        $r3 := @parameter2: double[];

        $r4 := @parameter3: double[][][];

        $r5 = virtualinvoke r0.<org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator: org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction interpolate(double[],double[],double[],double[][][])>($r1, $r2, $r3, $r4);

        return $r5;
    }
    public org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction interpolate(double[], double[], double[], double[][][]) throws org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NonMonotonicSequenceException
    {
        org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator r0;
        double[] $r1, $r2, $r3, $r14, $r24;
        double[][][] $r4, r11, r12, r19, r20, r21, r22, r23;
        org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator r5;
        double d0, d1, $d2, $d3;
        int $i0, $i1, $i2, i3, $i4, $i5, i6, $i7, $i8, i9, $i10, $i11;
        org.apache.commons.math3.exception.NoDataException $r6;
        org.apache.commons.math3.exception.DimensionMismatchException $r7;
        int[] $r8;
        java.lang.Class $r9;
        java.lang.Object $r10;
        double[][] $r13;
        org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction[] $r15, $r17, $r18;
        org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction $r16;
        org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction $r25;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator;

        $r1 := @parameter0: double[];

        $r2 := @parameter1: double[];

        $r3 := @parameter2: double[];

        $r4 := @parameter3: double[][][];

        $i0 = lengthof $r1;

        if $i0 == 0 goto label01;

        $i0 = lengthof $r2;

        if $i0 == 0 goto label01;

        $i0 = lengthof $r3;

        if $i0 == 0 goto label01;

        $i0 = lengthof $r4;

        if $i0 != 0 goto label02;

     label01:
        $r6 = new org.apache.commons.math3.exception.NoDataException;

        specialinvoke $r6.<org.apache.commons.math3.exception.NoDataException: void <init>()>();

        throw $r6;

     label02:
        $i0 = lengthof $r1;

        $i1 = lengthof $r4;

        if $i0 == $i1 goto label03;

        $r7 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i0 = lengthof $r1;

        $i1 = lengthof $r4;

        specialinvoke $r7.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i0, $i1);

        throw $r7;

     label03:
        staticinvoke <org.apache.commons.math3.util.MathArrays: void checkOrder(double[])>($r1);

        staticinvoke <org.apache.commons.math3.util.MathArrays: void checkOrder(double[])>($r2);

        staticinvoke <org.apache.commons.math3.util.MathArrays: void checkOrder(double[])>($r3);

        $i2 = lengthof $r1;

        $i0 = lengthof $r2;

        $i1 = lengthof $r3;

        $r8 = newarray (int)[3];

        $r8[0] = $i1;

        $r8[1] = $i2;

        $r8[2] = $i0;

        $r9 = <java.lang.Double: java.lang.Class TYPE>;

        $r10 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r9, $r8);

        r11 = (double[][][]) $r10;

        $r8 = newarray (int)[3];

        $r8[0] = $i0;

        $r8[1] = $i1;

        $r8[2] = $i2;

        $r9 = <java.lang.Double: java.lang.Class TYPE>;

        $r10 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r9, $r8);

        r12 = (double[][][]) $r10;

        i3 = 0;

     label04:
        if i3 >= $i2 goto label11;

        $r13 = $r4[i3];

        $i4 = lengthof $r13;

        if $i4 == $i0 goto label05;

        $r7 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $r13 = $r4[i3];

        $i1 = lengthof $r13;

        specialinvoke $r7.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i1, $i0);

        throw $r7;

     label05:
        $i4 = 0;

     label06:
        if $i4 >= $i0 goto label10;

        $r13 = $r4[i3];

        $r14 = $r13[$i4];

        $i5 = lengthof $r14;

        if $i5 == $i1 goto label07;

        $r7 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $r13 = $r4[i3];

        $r1 = $r13[$i4];

        $i0 = lengthof $r1;

        specialinvoke $r7.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i0, $i1);

        throw $r7;

     label07:
        $i5 = 0;

     label08:
        if $i5 >= $i1 goto label09;

        $r13 = $r4[i3];

        $r14 = $r13[$i4];

        d0 = $r14[$i5];

        $r13 = r11[$i5];

        $r14 = $r13[i3];

        $r14[$i4] = d0;

        $r13 = r12[$i4];

        $r14 = $r13[$i5];

        $r14[i3] = d0;

        $i5 = $i5 + 1;

        goto label08;

     label09:
        $i4 = $i4 + 1;

        goto label06;

     label10:
        i3 = i3 + 1;

        goto label04;

     label11:
        r5 = new org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator;

        specialinvoke r5.<org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator: void <init>(boolean)>(1);

        $r15 = newarray (org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction)[$i2];

        i3 = 0;

     label12:
        if i3 >= $i2 goto label13;

        $r13 = $r4[i3];

        $r16 = virtualinvoke r5.<org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator: org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction interpolate(double[],double[],double[][])>($r2, $r3, $r13);

        $r15[i3] = $r16;

        i3 = i3 + 1;

        goto label12;

     label13:
        $r17 = newarray (org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction)[$i0];

        i3 = 0;

     label14:
        if i3 >= $i0 goto label15;

        $r13 = r12[i3];

        $r16 = virtualinvoke r5.<org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator: org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction interpolate(double[],double[],double[][])>($r3, $r1, $r13);

        $r17[i3] = $r16;

        i3 = i3 + 1;

        goto label14;

     label15:
        $r18 = newarray (org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction)[$i1];

        i3 = 0;

     label16:
        if i3 >= $i1 goto label17;

        $r13 = r11[i3];

        $r16 = virtualinvoke r5.<org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator: org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction interpolate(double[],double[],double[][])>($r1, $r2, $r13);

        $r18[i3] = $r16;

        i3 = i3 + 1;

        goto label16;

     label17:
        $r8 = newarray (int)[3];

        $r8[0] = $i2;

        $r8[1] = $i0;

        $r8[2] = $i1;

        $r9 = <java.lang.Double: java.lang.Class TYPE>;

        $r10 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r9, $r8);

        r11 = (double[][][]) $r10;

        $r8 = newarray (int)[3];

        $r8[0] = $i2;

        $r8[1] = $i0;

        $r8[2] = $i1;

        $r9 = <java.lang.Double: java.lang.Class TYPE>;

        $r10 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r9, $r8);

        r12 = (double[][][]) $r10;

        $r8 = newarray (int)[3];

        $r8[0] = $i2;

        $r8[1] = $i0;

        $r8[2] = $i1;

        $r9 = <java.lang.Double: java.lang.Class TYPE>;

        $r10 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r9, $r8);

        r19 = (double[][][]) $r10;

        i3 = 0;

     label18:
        if i3 >= $i1 goto label23;

        $r16 = $r18[i3];

        $i4 = 0;

     label19:
        if $i4 >= $i2 goto label22;

        d0 = $r1[$i4];

        $i5 = 0;

     label20:
        if $i5 >= $i0 goto label21;

        d1 = $r2[$i5];

        $r13 = r11[$i4];

        $r14 = $r13[$i5];

        $d2 = virtualinvoke $r16.<org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction: double partialDerivativeX(double,double)>(d0, d1);

        $r14[i3] = $d2;

        $r13 = r12[$i4];

        $r14 = $r13[$i5];

        $d2 = virtualinvoke $r16.<org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction: double partialDerivativeY(double,double)>(d0, d1);

        $r14[i3] = $d2;

        $r13 = r19[$i4];

        $r14 = $r13[$i5];

        d1 = virtualinvoke $r16.<org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction: double partialDerivativeXY(double,double)>(d0, d1);

        $r14[i3] = d1;

        $i5 = $i5 + 1;

        goto label20;

     label21:
        $i4 = $i4 + 1;

        goto label19;

     label22:
        i3 = i3 + 1;

        goto label18;

     label23:
        $r8 = newarray (int)[3];

        $r8[0] = $i2;

        $r8[1] = $i0;

        $r8[2] = $i1;

        $r9 = <java.lang.Double: java.lang.Class TYPE>;

        $r10 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r9, $r8);

        r20 = (double[][][]) $r10;

        $r8 = newarray (int)[3];

        $r8[0] = $i2;

        $r8[1] = $i0;

        $r8[2] = $i1;

        $r9 = <java.lang.Double: java.lang.Class TYPE>;

        $r10 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r9, $r8);

        r21 = (double[][][]) $r10;

        i3 = 0;

     label24:
        if i3 >= $i2 goto label29;

        $r16 = $r15[i3];

        $i4 = 0;

     label25:
        if $i4 >= $i0 goto label28;

        d0 = $r2[$i4];

        $i5 = 0;

     label26:
        if $i5 >= $i1 goto label27;

        d1 = $r3[$i5];

        $r13 = r20[i3];

        $r14 = $r13[$i4];

        $d2 = virtualinvoke $r16.<org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction: double partialDerivativeY(double,double)>(d0, d1);

        $r14[$i5] = $d2;

        $r13 = r21[i3];

        $r14 = $r13[$i4];

        d1 = virtualinvoke $r16.<org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction: double partialDerivativeXY(double,double)>(d0, d1);

        $r14[$i5] = d1;

        $i5 = $i5 + 1;

        goto label26;

     label27:
        $i4 = $i4 + 1;

        goto label25;

     label28:
        i3 = i3 + 1;

        goto label24;

     label29:
        $r8 = newarray (int)[3];

        $r8[0] = $i2;

        $r8[1] = $i0;

        $r8[2] = $i1;

        $r9 = <java.lang.Double: java.lang.Class TYPE>;

        $r10 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r9, $r8);

        r22 = (double[][][]) $r10;

        i3 = 0;

     label30:
        if i3 >= $i0 goto label35;

        $r16 = $r17[i3];

        $i4 = 0;

     label31:
        if $i4 >= $i1 goto label34;

        d0 = $r3[$i4];

        $i5 = 0;

     label32:
        if $i5 >= $i2 goto label33;

        d1 = $r1[$i5];

        $r13 = r22[$i5];

        $r14 = $r13[i3];

        d1 = virtualinvoke $r16.<org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction: double partialDerivativeXY(double,double)>(d0, d1);

        $r14[$i4] = d1;

        $i5 = $i5 + 1;

        goto label32;

     label33:
        $i4 = $i4 + 1;

        goto label31;

     label34:
        i3 = i3 + 1;

        goto label30;

     label35:
        $r8 = newarray (int)[3];

        $r8[0] = $i2;

        $r8[1] = $i0;

        $r8[2] = $i1;

        $r9 = <java.lang.Double: java.lang.Class TYPE>;

        $r10 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r9, $r8);

        r23 = (double[][][]) $r10;

        i3 = 0;

     label36:
        if i3 >= $i2 goto label41;

        $i4 = specialinvoke r0.<org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator: int nextIndex(int,int)>(i3, $i2);

        $i5 = specialinvoke r0.<org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator: int previousIndex(int)>(i3);

        i6 = 0;

     label37:
        if i6 >= $i0 goto label40;

        $i7 = specialinvoke r0.<org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator: int nextIndex(int,int)>(i6, $i0);

        $i8 = specialinvoke r0.<org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator: int previousIndex(int)>(i6);

        i9 = 0;

     label38:
        if i9 >= $i1 goto label39;

        $i10 = specialinvoke r0.<org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator: int nextIndex(int,int)>(i9, $i1);

        $i11 = specialinvoke r0.<org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator: int previousIndex(int)>(i9);

        $r13 = r23[i3];

        $r14 = $r13[i6];

        $r13 = $r4[$i4];

        $r24 = $r13[$i7];

        d0 = $r24[$i10];

        $r13 = $r4[$i4];

        $r24 = $r13[$i8];

        d1 = $r24[$i10];

        d0 = d0 - d1;

        $r13 = $r4[$i5];

        $r24 = $r13[$i7];

        d1 = $r24[$i10];

        d0 = d0 - d1;

        $r13 = $r4[$i5];

        $r24 = $r13[$i8];

        d1 = $r24[$i10];

        d0 = d0 + d1;

        $r13 = $r4[$i4];

        $r24 = $r13[$i7];

        d1 = $r24[$i11];

        d0 = d0 - d1;

        $r13 = $r4[$i4];

        $r24 = $r13[$i8];

        d1 = $r24[$i11];

        d0 = d0 + d1;

        $r13 = $r4[$i5];

        $r24 = $r13[$i7];

        d1 = $r24[$i11];

        d0 = d0 + d1;

        $r13 = $r4[$i5];

        $r24 = $r13[$i8];

        d1 = $r24[$i11];

        d0 = d0 - d1;

        d1 = $r1[$i4];

        $d2 = $r1[$i5];

        d1 = d1 - $d2;

        $d2 = $r2[$i7];

        $d3 = $r2[$i8];

        $d2 = $d2 - $d3;

        d1 = d1 * $d2;

        $d2 = $r3[$i10];

        $d3 = $r3[$i11];

        $d2 = $d2 - $d3;

        d1 = d1 * $d2;

        d0 = d0 / d1;

        $r14[i9] = d0;

        i9 = i9 + 1;

        goto label38;

     label39:
        i6 = i6 + 1;

        goto label37;

     label40:
        i3 = i3 + 1;

        goto label36;

     label41:
        $r25 = new org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction;

        specialinvoke $r25.<org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction: void <init>(double[],double[],double[],double[][][],double[][][],double[][][],double[][][],double[][][],double[][][],double[][][],double[][][])>($r1, $r2, $r3, $r4, r11, r12, r20, r19, r22, r21, r23);

        return $r25;
    }
