org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver extends java.lang.Object
final org.apache.commons.math3.analysis.solvers.LaguerreSolver this$0
    private void <init>(org.apache.commons.math3.analysis.solvers.LaguerreSolver)
    {
        org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver r0;
        org.apache.commons.math3.analysis.solvers.LaguerreSolver $r1;

        r0 := @this: org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver;

        $r1 := @parameter0: org.apache.commons.math3.analysis.solvers.LaguerreSolver;

        r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver: org.apache.commons.math3.analysis.solvers.LaguerreSolver this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    void <init>(org.apache.commons.math3.analysis.solvers.LaguerreSolver, org.apache.commons.math3.analysis.solvers.LaguerreSolver$1)
    {
        org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver r0;
        org.apache.commons.math3.analysis.solvers.LaguerreSolver $r1;
        org.apache.commons.math3.analysis.solvers.LaguerreSolver$1 $r2;

        r0 := @this: org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver;

        $r1 := @parameter0: org.apache.commons.math3.analysis.solvers.LaguerreSolver;

        $r2 := @parameter1: org.apache.commons.math3.analysis.solvers.LaguerreSolver$1;

        specialinvoke r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver: void <init>(org.apache.commons.math3.analysis.solvers.LaguerreSolver)>($r1);

        return;
    }
    public boolean isRoot(double, double, org.apache.commons.math3.complex.Complex)
    {
        org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver r0;
        double $d0, $d1, $d2;
        org.apache.commons.math3.complex.Complex $r1;
        org.apache.commons.math3.analysis.solvers.LaguerreSolver $r2;
        boolean $z0;
        byte $b0;

        r0 := @this: org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $r1 := @parameter2: org.apache.commons.math3.complex.Complex;

        $r2 = r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver: org.apache.commons.math3.analysis.solvers.LaguerreSolver this$0>;

        $d2 = virtualinvoke $r1.<org.apache.commons.math3.complex.Complex: double getReal()>();

        $z0 = virtualinvoke $r2.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: boolean isSequence(double,double,double)>($d0, $d2, $d1);

        if $z0 == 0 goto label2;

        $r2 = r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver: org.apache.commons.math3.analysis.solvers.LaguerreSolver this$0>;

        $d0 = virtualinvoke $r2.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: double getRelativeAccuracy()>();

        $d1 = virtualinvoke $r1.<org.apache.commons.math3.complex.Complex: double abs()>();

        $d0 = $d0 * $d1;

        $r2 = r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver: org.apache.commons.math3.analysis.solvers.LaguerreSolver this$0>;

        $d1 = virtualinvoke $r2.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: double getAbsoluteAccuracy()>();

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d0, $d1);

        $d1 = virtualinvoke $r1.<org.apache.commons.math3.complex.Complex: double getImaginary()>();

        $d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d1);

        $b0 = $d1 cmpg $d0;

        if $b0 <= 0 goto label1;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.complex.Complex: double abs()>();

        $r2 = r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver: org.apache.commons.math3.analysis.solvers.LaguerreSolver this$0>;

        $d1 = virtualinvoke $r2.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: double getFunctionValueAccuracy()>();

        $b0 = $d0 cmpg $d1;

        if $b0 > 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    public org.apache.commons.math3.complex.Complex solve(org.apache.commons.math3.complex.Complex[], org.apache.commons.math3.complex.Complex) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.TooManyEvaluationsException
    {
        org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver r0;
        org.apache.commons.math3.complex.Complex[] $r1;
        org.apache.commons.math3.complex.Complex $r2, r3, r4, r9, r10, r11, r12, $r13;
        int i0, $i1;
        org.apache.commons.math3.exception.NullArgumentException $r5;
        org.apache.commons.math3.exception.NoDataException $r6;
        org.apache.commons.math3.exception.util.LocalizedFormats $r7;
        org.apache.commons.math3.analysis.solvers.LaguerreSolver $r8;
        double $d0, $d1, $d2, $d3, $d4;
        byte $b2;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver;

        $r1 := @parameter0: org.apache.commons.math3.complex.Complex[];

        $r2 := @parameter1: org.apache.commons.math3.complex.Complex;

        if $r1 != null goto label01;

        $r5 = new org.apache.commons.math3.exception.NullArgumentException;

        specialinvoke $r5.<org.apache.commons.math3.exception.NullArgumentException: void <init>()>();

        throw $r5;

     label01:
        i0 = lengthof $r1;

        i0 = i0 + -1;

        if i0 != 0 goto label02;

        $r6 = new org.apache.commons.math3.exception.NoDataException;

        $r7 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats POLYNOMIAL>;

        specialinvoke $r6.<org.apache.commons.math3.exception.NoDataException: void <init>(org.apache.commons.math3.exception.util.Localizable)>($r7);

        throw $r6;

     label02:
        $r8 = r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver: org.apache.commons.math3.analysis.solvers.LaguerreSolver this$0>;

        $d0 = virtualinvoke $r8.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: double getAbsoluteAccuracy()>();

        $r8 = r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver: org.apache.commons.math3.analysis.solvers.LaguerreSolver this$0>;

        $d1 = virtualinvoke $r8.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: double getRelativeAccuracy()>();

        $r8 = r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver: org.apache.commons.math3.analysis.solvers.LaguerreSolver this$0>;

        $d2 = virtualinvoke $r8.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: double getFunctionValueAccuracy()>();

        r4 = new org.apache.commons.math3.complex.Complex;

        $d3 = (double) i0;

        specialinvoke r4.<org.apache.commons.math3.complex.Complex: void <init>(double,double)>($d3, 0.0);

        r3 = new org.apache.commons.math3.complex.Complex;

        $i1 = i0 + -1;

        $d3 = (double) $i1;

        specialinvoke r3.<org.apache.commons.math3.complex.Complex: void <init>(double,double)>($d3, 0.0);

        r9 = new org.apache.commons.math3.complex.Complex;

        specialinvoke r9.<org.apache.commons.math3.complex.Complex: void <init>(double,double)>(#Infinity, #Infinity);

     label03:
        r10 = $r1[i0];

        r11 = <org.apache.commons.math3.complex.Complex: org.apache.commons.math3.complex.Complex ZERO>;

        r12 = <org.apache.commons.math3.complex.Complex: org.apache.commons.math3.complex.Complex ZERO>;

        $i1 = i0 + -1;

     label04:
        if $i1 < 0 goto label05;

        r12 = virtualinvoke $r2.<org.apache.commons.math3.complex.Complex: org.apache.commons.math3.complex.Complex multiply(org.apache.commons.math3.complex.Complex)>(r12);

        r12 = virtualinvoke r11.<org.apache.commons.math3.complex.Complex: org.apache.commons.math3.complex.Complex add(org.apache.commons.math3.complex.Complex)>(r12);

        r11 = virtualinvoke $r2.<org.apache.commons.math3.complex.Complex: org.apache.commons.math3.complex.Complex multiply(org.apache.commons.math3.complex.Complex)>(r11);

        r11 = virtualinvoke r10.<org.apache.commons.math3.complex.Complex: org.apache.commons.math3.complex.Complex add(org.apache.commons.math3.complex.Complex)>(r11);

        $r13 = $r1[$i1];

        r10 = virtualinvoke $r2.<org.apache.commons.math3.complex.Complex: org.apache.commons.math3.complex.Complex multiply(org.apache.commons.math3.complex.Complex)>(r10);

        r10 = virtualinvoke $r13.<org.apache.commons.math3.complex.Complex: org.apache.commons.math3.complex.Complex add(org.apache.commons.math3.complex.Complex)>(r10);

        $i1 = $i1 + -1;

        goto label04;

     label05:
        $r13 = new org.apache.commons.math3.complex.Complex;

        specialinvoke $r13.<org.apache.commons.math3.complex.Complex: void <init>(double,double)>(2.0, 0.0);

        r12 = virtualinvoke r12.<org.apache.commons.math3.complex.Complex: org.apache.commons.math3.complex.Complex multiply(org.apache.commons.math3.complex.Complex)>($r13);

        $d3 = virtualinvoke $r2.<org.apache.commons.math3.complex.Complex: double abs()>();

        $d3 = $d3 * $d1;

        $d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d3, $d0);

        r9 = virtualinvoke $r2.<org.apache.commons.math3.complex.Complex: org.apache.commons.math3.complex.Complex subtract(org.apache.commons.math3.complex.Complex)>(r9);

        $d4 = virtualinvoke r9.<org.apache.commons.math3.complex.Complex: double abs()>();

        $b2 = $d4 cmpg $d3;

        if $b2 > 0 goto label06;

        return $r2;

     label06:
        $d3 = virtualinvoke r10.<org.apache.commons.math3.complex.Complex: double abs()>();

        $b2 = $d3 cmpg $d2;

        if $b2 <= 0 goto label11;

        r9 = virtualinvoke r11.<org.apache.commons.math3.complex.Complex: org.apache.commons.math3.complex.Complex divide(org.apache.commons.math3.complex.Complex)>(r10);

        r11 = virtualinvoke r9.<org.apache.commons.math3.complex.Complex: org.apache.commons.math3.complex.Complex multiply(org.apache.commons.math3.complex.Complex)>(r9);

        r10 = virtualinvoke r12.<org.apache.commons.math3.complex.Complex: org.apache.commons.math3.complex.Complex divide(org.apache.commons.math3.complex.Complex)>(r10);

        r10 = virtualinvoke r11.<org.apache.commons.math3.complex.Complex: org.apache.commons.math3.complex.Complex subtract(org.apache.commons.math3.complex.Complex)>(r10);

        r10 = virtualinvoke r4.<org.apache.commons.math3.complex.Complex: org.apache.commons.math3.complex.Complex multiply(org.apache.commons.math3.complex.Complex)>(r10);

        r10 = virtualinvoke r10.<org.apache.commons.math3.complex.Complex: org.apache.commons.math3.complex.Complex subtract(org.apache.commons.math3.complex.Complex)>(r11);

        r10 = virtualinvoke r3.<org.apache.commons.math3.complex.Complex: org.apache.commons.math3.complex.Complex multiply(org.apache.commons.math3.complex.Complex)>(r10);

        r11 = virtualinvoke r10.<org.apache.commons.math3.complex.Complex: org.apache.commons.math3.complex.Complex sqrt()>();

        r10 = virtualinvoke r9.<org.apache.commons.math3.complex.Complex: org.apache.commons.math3.complex.Complex add(org.apache.commons.math3.complex.Complex)>(r11);

        r9 = virtualinvoke r9.<org.apache.commons.math3.complex.Complex: org.apache.commons.math3.complex.Complex subtract(org.apache.commons.math3.complex.Complex)>(r11);

        $d3 = virtualinvoke r10.<org.apache.commons.math3.complex.Complex: double abs()>();

        $d4 = virtualinvoke r9.<org.apache.commons.math3.complex.Complex: double abs()>();

        $b2 = $d3 cmpl $d4;

        if $b2 <= 0 goto label09;

     label07:
        r9 = new org.apache.commons.math3.complex.Complex;

        specialinvoke r9.<org.apache.commons.math3.complex.Complex: void <init>(double,double)>(0.0, 0.0);

        $z0 = virtualinvoke r10.<org.apache.commons.math3.complex.Complex: boolean equals(java.lang.Object)>(r9);

        if $z0 == 0 goto label10;

        r9 = new org.apache.commons.math3.complex.Complex;

        specialinvoke r9.<org.apache.commons.math3.complex.Complex: void <init>(double,double)>($d0, $d0);

        $r2 = virtualinvoke $r2.<org.apache.commons.math3.complex.Complex: org.apache.commons.math3.complex.Complex add(org.apache.commons.math3.complex.Complex)>(r9);

        r9 = new org.apache.commons.math3.complex.Complex;

        specialinvoke r9.<org.apache.commons.math3.complex.Complex: void <init>(double,double)>(#Infinity, #Infinity);

     label08:
        $r8 = r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver: org.apache.commons.math3.analysis.solvers.LaguerreSolver this$0>;

        virtualinvoke $r8.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: void incrementEvaluationCount()>();

        goto label03;

     label09:
        r10 = r9;

        goto label07;

     label10:
        r9 = $r2;

        r10 = virtualinvoke r4.<org.apache.commons.math3.complex.Complex: org.apache.commons.math3.complex.Complex divide(org.apache.commons.math3.complex.Complex)>(r10);

        $r2 = virtualinvoke $r2.<org.apache.commons.math3.complex.Complex: org.apache.commons.math3.complex.Complex subtract(org.apache.commons.math3.complex.Complex)>(r10);

        goto label08;

     label11:
        return $r2;
    }
    public org.apache.commons.math3.complex.Complex[] solveAll(org.apache.commons.math3.complex.Complex[], org.apache.commons.math3.complex.Complex) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.TooManyEvaluationsException
    {
        org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver r0;
        org.apache.commons.math3.complex.Complex[] $r1, r3, r4;
        org.apache.commons.math3.complex.Complex $r2, $r8, r9, $r10;
        int i0, $i1, $i2;
        org.apache.commons.math3.exception.NullArgumentException $r5;
        org.apache.commons.math3.exception.NoDataException $r6;
        org.apache.commons.math3.exception.util.LocalizedFormats $r7;

        r0 := @this: org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver;

        $r1 := @parameter0: org.apache.commons.math3.complex.Complex[];

        $r2 := @parameter1: org.apache.commons.math3.complex.Complex;

        if $r1 != null goto label1;

        $r5 = new org.apache.commons.math3.exception.NullArgumentException;

        specialinvoke $r5.<org.apache.commons.math3.exception.NullArgumentException: void <init>()>();

        throw $r5;

     label1:
        i0 = lengthof $r1;

        i0 = i0 + -1;

        if i0 != 0 goto label2;

        $r6 = new org.apache.commons.math3.exception.NoDataException;

        $r7 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats POLYNOMIAL>;

        specialinvoke $r6.<org.apache.commons.math3.exception.NoDataException: void <init>(org.apache.commons.math3.exception.util.Localizable)>($r7);

        throw $r6;

     label2:
        $i1 = i0 + 1;

        r3 = newarray (org.apache.commons.math3.complex.Complex)[$i1];

        $i1 = 0;

     label3:
        if $i1 > i0 goto label4;

        $r8 = $r1[$i1];

        r3[$i1] = $r8;

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $r1 = newarray (org.apache.commons.math3.complex.Complex)[i0];

        $i1 = 0;

     label5:
        if $i1 >= i0 goto label8;

        $i2 = i0 - $i1;

        $i2 = $i2 + 1;

        r4 = newarray (org.apache.commons.math3.complex.Complex)[$i2];

        $i2 = lengthof r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r4, 0, $i2);

        $r8 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver: org.apache.commons.math3.complex.Complex solve(org.apache.commons.math3.complex.Complex[],org.apache.commons.math3.complex.Complex)>(r4, $r2);

        $r1[$i1] = $r8;

        $i2 = i0 - $i1;

        r9 = r3[$i2];

        $i2 = i0 - $i1;

        $i2 = $i2 + -1;

     label6:
        if $i2 < 0 goto label7;

        $r8 = r3[$i2];

        r3[$i2] = r9;

        $r10 = $r1[$i1];

        r9 = virtualinvoke r9.<org.apache.commons.math3.complex.Complex: org.apache.commons.math3.complex.Complex multiply(org.apache.commons.math3.complex.Complex)>($r10);

        r9 = virtualinvoke $r8.<org.apache.commons.math3.complex.Complex: org.apache.commons.math3.complex.Complex add(org.apache.commons.math3.complex.Complex)>(r9);

        $i2 = $i2 + -1;

        goto label6;

     label7:
        $i1 = $i1 + 1;

        goto label5;

     label8:
        return $r1;
    }
