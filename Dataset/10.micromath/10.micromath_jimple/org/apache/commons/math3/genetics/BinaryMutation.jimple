org.apache.commons.math3.genetics.BinaryMutation extends java.lang.Object implements org.apache.commons.math3.genetics.MutationPolicy
    public void <init>()
    {
        org.apache.commons.math3.genetics.BinaryMutation r0;

        r0 := @this: org.apache.commons.math3.genetics.BinaryMutation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public org.apache.commons.math3.genetics.Chromosome mutate(org.apache.commons.math3.genetics.Chromosome) throws org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.genetics.BinaryMutation r0;
        org.apache.commons.math3.genetics.Chromosome $r1;
        java.util.ArrayList r2;
        boolean $z0;
        org.apache.commons.math3.exception.MathIllegalArgumentException $r3;
        org.apache.commons.math3.exception.util.LocalizedFormats $r4;
        java.lang.Object[] $r5;
        org.apache.commons.math3.genetics.BinaryChromosome r6;
        java.util.List $r7;
        org.apache.commons.math3.random.RandomGenerator $r8;
        int $i0, $i1;
        java.lang.Object $r9;
        java.lang.Integer $r10;
        byte $b2;
        org.apache.commons.math3.genetics.AbstractListChromosome $r11;

        r0 := @this: org.apache.commons.math3.genetics.BinaryMutation;

        $r1 := @parameter0: org.apache.commons.math3.genetics.Chromosome;

        $z0 = $r1 instanceof org.apache.commons.math3.genetics.BinaryChromosome;

        if $z0 != 0 goto label1;

        $r3 = new org.apache.commons.math3.exception.MathIllegalArgumentException;

        $r4 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats INVALID_BINARY_CHROMOSOME>;

        $r5 = newarray (java.lang.Object)[0];

        specialinvoke $r3.<org.apache.commons.math3.exception.MathIllegalArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r4, $r5);

        throw $r3;

     label1:
        r6 = (org.apache.commons.math3.genetics.BinaryChromosome) $r1;

        r2 = new java.util.ArrayList;

        $r7 = virtualinvoke r6.<org.apache.commons.math3.genetics.BinaryChromosome: java.util.List getRepresentation()>();

        specialinvoke r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r7);

        $r8 = staticinvoke <org.apache.commons.math3.genetics.GeneticAlgorithm: org.apache.commons.math3.random.RandomGenerator getRandomGenerator()>();

        $i0 = virtualinvoke r6.<org.apache.commons.math3.genetics.BinaryChromosome: int getLength()>();

        $i0 = interfaceinvoke $r8.<org.apache.commons.math3.random.RandomGenerator: int nextInt(int)>($i0);

        $r7 = virtualinvoke r6.<org.apache.commons.math3.genetics.BinaryChromosome: java.util.List getRepresentation()>();

        $r9 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i0);

        $r10 = (java.lang.Integer) $r9;

        $i1 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        if $i1 != 0 goto label3;

        $b2 = 1;

     label2:
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b2);

        interfaceinvoke r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i0, $r10);

        $r11 = virtualinvoke r6.<org.apache.commons.math3.genetics.BinaryChromosome: org.apache.commons.math3.genetics.AbstractListChromosome newFixedLengthChromosome(java.util.List)>(r2);

        return $r11;

     label3:
        $b2 = 0;

        goto label2;
    }
