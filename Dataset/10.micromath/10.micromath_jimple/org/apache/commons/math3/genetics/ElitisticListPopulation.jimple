org.apache.commons.math3.genetics.ElitisticListPopulation extends org.apache.commons.math3.genetics.ListPopulation
private double elitismRate
    public void <init>(int, double) throws org.apache.commons.math3.exception.NotPositiveException, org.apache.commons.math3.exception.OutOfRangeException
    {
        org.apache.commons.math3.genetics.ElitisticListPopulation r0;
        int $i0;
        double $d0;

        r0 := @this: org.apache.commons.math3.genetics.ElitisticListPopulation;

        $i0 := @parameter0: int;

        $d0 := @parameter1: double;

        specialinvoke r0.<org.apache.commons.math3.genetics.ListPopulation: void <init>(int)>($i0);

        r0.<org.apache.commons.math3.genetics.ElitisticListPopulation: double elitismRate> = 0.9;

        virtualinvoke r0.<org.apache.commons.math3.genetics.ElitisticListPopulation: void setElitismRate(double)>($d0);

        return;
    }
    public void <init>(java.util.List, int, double) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NotPositiveException, org.apache.commons.math3.exception.NumberIsTooLargeException, org.apache.commons.math3.exception.OutOfRangeException
    {
        org.apache.commons.math3.genetics.ElitisticListPopulation r0;
        java.util.List r1;
        int $i0;
        double $d0;

        r0 := @this: org.apache.commons.math3.genetics.ElitisticListPopulation;

        r1 := @parameter0: java.util.List;

        $i0 := @parameter1: int;

        $d0 := @parameter2: double;

        specialinvoke r0.<org.apache.commons.math3.genetics.ListPopulation: void <init>(java.util.List,int)>(r1, $i0);

        r0.<org.apache.commons.math3.genetics.ElitisticListPopulation: double elitismRate> = 0.9;

        virtualinvoke r0.<org.apache.commons.math3.genetics.ElitisticListPopulation: void setElitismRate(double)>($d0);

        return;
    }
    public double getElitismRate()
    {
        org.apache.commons.math3.genetics.ElitisticListPopulation r0;
        double d0;

        r0 := @this: org.apache.commons.math3.genetics.ElitisticListPopulation;

        d0 = r0.<org.apache.commons.math3.genetics.ElitisticListPopulation: double elitismRate>;

        return d0;
    }
    public org.apache.commons.math3.genetics.Population nextGeneration()
    {
        org.apache.commons.math3.genetics.ElitisticListPopulation r0, r1;
        int i0, $i1;
        double $d0, $d1;
        java.util.List $r2;
        java.lang.Object $r3;
        org.apache.commons.math3.genetics.Chromosome $r4;

        r0 := @this: org.apache.commons.math3.genetics.ElitisticListPopulation;

        r1 = new org.apache.commons.math3.genetics.ElitisticListPopulation;

        i0 = virtualinvoke r0.<org.apache.commons.math3.genetics.ElitisticListPopulation: int getPopulationLimit()>();

        $d0 = virtualinvoke r0.<org.apache.commons.math3.genetics.ElitisticListPopulation: double getElitismRate()>();

        specialinvoke r1.<org.apache.commons.math3.genetics.ElitisticListPopulation: void <init>(int,double)>(i0, $d0);

        $r2 = virtualinvoke r0.<org.apache.commons.math3.genetics.ElitisticListPopulation: java.util.List getChromosomeList()>();

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r2);

        $d0 = virtualinvoke r0.<org.apache.commons.math3.genetics.ElitisticListPopulation: double getElitismRate()>();

        $d0 = 1.0 - $d0;

        i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $d1 = (double) i0;

        $d0 = $d0 * $d1;

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double ceil(double)>($d0);

        i0 = (int) $d0;

     label1:
        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i0 >= $i1 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (org.apache.commons.math3.genetics.Chromosome) $r3;

        virtualinvoke r1.<org.apache.commons.math3.genetics.ElitisticListPopulation: void addChromosome(org.apache.commons.math3.genetics.Chromosome)>($r4);

        i0 = i0 + 1;

        goto label1;

     label2:
        return r1;
    }
    public void setElitismRate(double) throws org.apache.commons.math3.exception.OutOfRangeException
    {
        org.apache.commons.math3.genetics.ElitisticListPopulation r0;
        double $d0;
        org.apache.commons.math3.exception.util.LocalizedFormats $r1;
        byte $b0;
        org.apache.commons.math3.exception.OutOfRangeException $r2;
        java.lang.Double $r3;
        java.lang.Integer $r4, $r5;

        r0 := @this: org.apache.commons.math3.genetics.ElitisticListPopulation;

        $d0 := @parameter0: double;

        $b0 = $d0 cmpg 0.0;

        if $b0 < 0 goto label1;

        $b0 = $d0 cmpl 1.0;

        if $b0 <= 0 goto label2;

     label1:
        $r2 = new org.apache.commons.math3.exception.OutOfRangeException;

        $r1 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats ELITISM_RATE>;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        specialinvoke $r2.<org.apache.commons.math3.exception.OutOfRangeException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)>($r1, $r3, $r4, $r5);

        throw $r2;

     label2:
        r0.<org.apache.commons.math3.genetics.ElitisticListPopulation: double elitismRate> = $d0;

        return;
    }
