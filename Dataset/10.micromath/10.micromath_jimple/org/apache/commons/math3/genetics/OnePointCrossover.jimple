org.apache.commons.math3.genetics.OnePointCrossover extends java.lang.Object implements org.apache.commons.math3.genetics.CrossoverPolicy
    public void <init>()
    {
        org.apache.commons.math3.genetics.OnePointCrossover r0;

        r0 := @this: org.apache.commons.math3.genetics.OnePointCrossover;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private org.apache.commons.math3.genetics.ChromosomePair crossover(org.apache.commons.math3.genetics.AbstractListChromosome, org.apache.commons.math3.genetics.AbstractListChromosome) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.genetics.OnePointCrossover r0;
        org.apache.commons.math3.genetics.AbstractListChromosome r1, r2;
        java.util.ArrayList r3, r4;
        int i0, $i1, i2;
        org.apache.commons.math3.exception.DimensionMismatchException $r5;
        java.util.List $r6, $r7;
        org.apache.commons.math3.random.RandomGenerator $r8;
        java.lang.Object $r9;
        org.apache.commons.math3.genetics.ChromosomePair $r10;

        r0 := @this: org.apache.commons.math3.genetics.OnePointCrossover;

        r1 := @parameter0: org.apache.commons.math3.genetics.AbstractListChromosome;

        r2 := @parameter1: org.apache.commons.math3.genetics.AbstractListChromosome;

        $i1 = virtualinvoke r1.<org.apache.commons.math3.genetics.AbstractListChromosome: int getLength()>();

        i0 = virtualinvoke r2.<org.apache.commons.math3.genetics.AbstractListChromosome: int getLength()>();

        if $i1 == i0 goto label1;

        $r5 = new org.apache.commons.math3.exception.DimensionMismatchException;

        i0 = virtualinvoke r2.<org.apache.commons.math3.genetics.AbstractListChromosome: int getLength()>();

        specialinvoke $r5.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>(i0, $i1);

        throw $r5;

     label1:
        $r6 = virtualinvoke r1.<org.apache.commons.math3.genetics.AbstractListChromosome: java.util.List getRepresentation()>();

        $r7 = virtualinvoke r2.<org.apache.commons.math3.genetics.AbstractListChromosome: java.util.List getRepresentation()>();

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>(int)>($i1);

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>(int)>($i1);

        $r8 = staticinvoke <org.apache.commons.math3.genetics.GeneticAlgorithm: org.apache.commons.math3.random.RandomGenerator getRandomGenerator()>();

        i0 = $i1 + -2;

        i0 = interfaceinvoke $r8.<org.apache.commons.math3.random.RandomGenerator: int nextInt(int)>(i0);

        i0 = i0 + 1;

        i2 = 0;

     label2:
        if i2 >= i0 goto label3;

        $r9 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i2);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r9 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i2);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r9);

        i2 = i2 + 1;

        goto label2;

     label3:
        if i0 >= $i1 goto label4;

        $r9 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i0);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r9 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r9);

        i0 = i0 + 1;

        goto label3;

     label4:
        $r10 = new org.apache.commons.math3.genetics.ChromosomePair;

        r1 = virtualinvoke r1.<org.apache.commons.math3.genetics.AbstractListChromosome: org.apache.commons.math3.genetics.AbstractListChromosome newFixedLengthChromosome(java.util.List)>(r3);

        r2 = virtualinvoke r2.<org.apache.commons.math3.genetics.AbstractListChromosome: org.apache.commons.math3.genetics.AbstractListChromosome newFixedLengthChromosome(java.util.List)>(r4);

        specialinvoke $r10.<org.apache.commons.math3.genetics.ChromosomePair: void <init>(org.apache.commons.math3.genetics.Chromosome,org.apache.commons.math3.genetics.Chromosome)>(r1, r2);

        return $r10;
    }
    public org.apache.commons.math3.genetics.ChromosomePair crossover(org.apache.commons.math3.genetics.Chromosome, org.apache.commons.math3.genetics.Chromosome) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.genetics.OnePointCrossover r0;
        org.apache.commons.math3.exception.util.LocalizedFormats $r1;
        org.apache.commons.math3.genetics.ChromosomePair $r2;
        org.apache.commons.math3.genetics.Chromosome $r3, $r4;
        boolean $z0;
        org.apache.commons.math3.exception.MathIllegalArgumentException $r5;
        java.lang.Object[] $r6;
        org.apache.commons.math3.genetics.AbstractListChromosome $r7, $r8;

        r0 := @this: org.apache.commons.math3.genetics.OnePointCrossover;

        $r3 := @parameter0: org.apache.commons.math3.genetics.Chromosome;

        $r4 := @parameter1: org.apache.commons.math3.genetics.Chromosome;

        $z0 = $r3 instanceof org.apache.commons.math3.genetics.AbstractListChromosome;

        if $z0 == 0 goto label1;

        $z0 = $r4 instanceof org.apache.commons.math3.genetics.AbstractListChromosome;

        if $z0 != 0 goto label2;

     label1:
        $r5 = new org.apache.commons.math3.exception.MathIllegalArgumentException;

        $r1 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats INVALID_FIXED_LENGTH_CHROMOSOME>;

        $r6 = newarray (java.lang.Object)[0];

        specialinvoke $r5.<org.apache.commons.math3.exception.MathIllegalArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r1, $r6);

        throw $r5;

     label2:
        $r7 = (org.apache.commons.math3.genetics.AbstractListChromosome) $r3;

        $r8 = (org.apache.commons.math3.genetics.AbstractListChromosome) $r4;

        $r2 = specialinvoke r0.<org.apache.commons.math3.genetics.OnePointCrossover: org.apache.commons.math3.genetics.ChromosomePair crossover(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome)>($r7, $r8);

        return $r2;
    }
