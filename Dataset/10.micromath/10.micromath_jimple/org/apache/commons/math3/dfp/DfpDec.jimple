org.apache.commons.math3.dfp.DfpDec extends org.apache.commons.math3.dfp.Dfp
    public void <init>(org.apache.commons.math3.dfp.Dfp)
    {
        org.apache.commons.math3.dfp.DfpDec r0;
        org.apache.commons.math3.dfp.Dfp $r1;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        $r1 := @parameter0: org.apache.commons.math3.dfp.Dfp;

        specialinvoke r0.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.Dfp)>($r1);

        virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: int round(int)>(0);

        return;
    }
    protected void <init>(org.apache.commons.math3.dfp.DfpField)
    {
        org.apache.commons.math3.dfp.DfpDec r0;
        org.apache.commons.math3.dfp.DfpField $r1;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        $r1 := @parameter0: org.apache.commons.math3.dfp.DfpField;

        specialinvoke r0.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField)>($r1);

        return;
    }
    protected void <init>(org.apache.commons.math3.dfp.DfpField, byte)
    {
        org.apache.commons.math3.dfp.DfpDec r0;
        org.apache.commons.math3.dfp.DfpField $r1;
        byte $b0;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        $r1 := @parameter0: org.apache.commons.math3.dfp.DfpField;

        $b0 := @parameter1: byte;

        specialinvoke r0.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,byte)>($r1, $b0);

        return;
    }
    protected void <init>(org.apache.commons.math3.dfp.DfpField, byte, byte)
    {
        org.apache.commons.math3.dfp.DfpDec r0;
        org.apache.commons.math3.dfp.DfpField $r1;
        byte $b0, $b1;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        $r1 := @parameter0: org.apache.commons.math3.dfp.DfpField;

        $b0 := @parameter1: byte;

        $b1 := @parameter2: byte;

        specialinvoke r0.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,byte,byte)>($r1, $b0, $b1);

        return;
    }
    protected void <init>(org.apache.commons.math3.dfp.DfpField, double)
    {
        org.apache.commons.math3.dfp.DfpDec r0;
        org.apache.commons.math3.dfp.DfpField $r1;
        double $d0;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        $r1 := @parameter0: org.apache.commons.math3.dfp.DfpField;

        $d0 := @parameter1: double;

        specialinvoke r0.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,double)>($r1, $d0);

        virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: int round(int)>(0);

        return;
    }
    protected void <init>(org.apache.commons.math3.dfp.DfpField, int)
    {
        org.apache.commons.math3.dfp.DfpDec r0;
        org.apache.commons.math3.dfp.DfpField $r1;
        int $i0;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        $r1 := @parameter0: org.apache.commons.math3.dfp.DfpField;

        $i0 := @parameter1: int;

        specialinvoke r0.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,int)>($r1, $i0);

        return;
    }
    protected void <init>(org.apache.commons.math3.dfp.DfpField, long)
    {
        org.apache.commons.math3.dfp.DfpDec r0;
        org.apache.commons.math3.dfp.DfpField $r1;
        long $l0;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        $r1 := @parameter0: org.apache.commons.math3.dfp.DfpField;

        $l0 := @parameter1: long;

        specialinvoke r0.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,long)>($r1, $l0);

        return;
    }
    protected void <init>(org.apache.commons.math3.dfp.DfpField, java.lang.String)
    {
        org.apache.commons.math3.dfp.DfpDec r0;
        org.apache.commons.math3.dfp.DfpField $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        $r1 := @parameter0: org.apache.commons.math3.dfp.DfpField;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,java.lang.String)>($r1, $r2);

        virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: int round(int)>(0);

        return;
    }
    protected int getDecimalDigits()
    {
        org.apache.commons.math3.dfp.DfpDec r0;
        int $i0;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        $i0 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: int getRadixDigits()>();

        $i0 = $i0 * 4;

        $i0 = $i0 + -3;

        return $i0;
    }
    public org.apache.commons.math3.dfp.Dfp newInstance()
    {
        org.apache.commons.math3.dfp.DfpDec r0, $r1;
        org.apache.commons.math3.dfp.DfpField $r2;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        $r1 = new org.apache.commons.math3.dfp.DfpDec;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        specialinvoke $r1.<org.apache.commons.math3.dfp.DfpDec: void <init>(org.apache.commons.math3.dfp.DfpField)>($r2);

        return $r1;
    }
    public org.apache.commons.math3.dfp.Dfp newInstance(byte)
    {
        org.apache.commons.math3.dfp.DfpDec r0, $r1;
        byte $b0;
        org.apache.commons.math3.dfp.DfpField $r2;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        $b0 := @parameter0: byte;

        $r1 = new org.apache.commons.math3.dfp.DfpDec;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        specialinvoke $r1.<org.apache.commons.math3.dfp.DfpDec: void <init>(org.apache.commons.math3.dfp.DfpField,byte)>($r2, $b0);

        return $r1;
    }
    public org.apache.commons.math3.dfp.Dfp newInstance(byte, byte)
    {
        org.apache.commons.math3.dfp.DfpDec r0, $r1;
        byte $b0, $b1;
        org.apache.commons.math3.dfp.DfpField $r2;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        $b0 := @parameter0: byte;

        $b1 := @parameter1: byte;

        $r1 = new org.apache.commons.math3.dfp.DfpDec;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        specialinvoke $r1.<org.apache.commons.math3.dfp.DfpDec: void <init>(org.apache.commons.math3.dfp.DfpField,byte,byte)>($r2, $b0, $b1);

        return $r1;
    }
    public org.apache.commons.math3.dfp.Dfp newInstance(double)
    {
        org.apache.commons.math3.dfp.DfpDec r0, $r1;
        double $d0;
        org.apache.commons.math3.dfp.DfpField $r2;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        $d0 := @parameter0: double;

        $r1 = new org.apache.commons.math3.dfp.DfpDec;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        specialinvoke $r1.<org.apache.commons.math3.dfp.DfpDec: void <init>(org.apache.commons.math3.dfp.DfpField,double)>($r2, $d0);

        return $r1;
    }
    public org.apache.commons.math3.dfp.Dfp newInstance(int)
    {
        org.apache.commons.math3.dfp.DfpDec r0, $r1;
        int $i0;
        org.apache.commons.math3.dfp.DfpField $r2;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        $i0 := @parameter0: int;

        $r1 = new org.apache.commons.math3.dfp.DfpDec;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        specialinvoke $r1.<org.apache.commons.math3.dfp.DfpDec: void <init>(org.apache.commons.math3.dfp.DfpField,int)>($r2, $i0);

        return $r1;
    }
    public org.apache.commons.math3.dfp.Dfp newInstance(long)
    {
        org.apache.commons.math3.dfp.DfpDec r0, $r1;
        long $l0;
        org.apache.commons.math3.dfp.DfpField $r2;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        $l0 := @parameter0: long;

        $r1 = new org.apache.commons.math3.dfp.DfpDec;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        specialinvoke $r1.<org.apache.commons.math3.dfp.DfpDec: void <init>(org.apache.commons.math3.dfp.DfpField,long)>($r2, $l0);

        return $r1;
    }
    public org.apache.commons.math3.dfp.Dfp newInstance(java.lang.String)
    {
        org.apache.commons.math3.dfp.DfpDec r0, $r2;
        java.lang.String $r1;
        org.apache.commons.math3.dfp.DfpField $r3;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.apache.commons.math3.dfp.DfpDec;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        specialinvoke $r2.<org.apache.commons.math3.dfp.DfpDec: void <init>(org.apache.commons.math3.dfp.DfpField,java.lang.String)>($r3, $r1);

        return $r2;
    }
    public org.apache.commons.math3.dfp.Dfp newInstance(org.apache.commons.math3.dfp.Dfp)
    {
        org.apache.commons.math3.dfp.DfpDec r0;
        org.apache.commons.math3.dfp.Dfp $r1, $r3;
        org.apache.commons.math3.dfp.DfpField $r2;
        int $i0, $i1;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        $r1 := @parameter0: org.apache.commons.math3.dfp.Dfp;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        $i0 = virtualinvoke $r2.<org.apache.commons.math3.dfp.DfpField: int getRadixDigits()>();

        $r2 = virtualinvoke $r1.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.DfpField getField()>();

        $i1 = virtualinvoke $r2.<org.apache.commons.math3.dfp.DfpField: int getRadixDigits()>();

        if $i0 == $i1 goto label1;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        virtualinvoke $r2.<org.apache.commons.math3.dfp.DfpField: void setIEEEFlagsBits(int)>(1);

        $r3 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp getZero()>();

        $r3 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp newInstance(org.apache.commons.math3.dfp.Dfp)>($r3);

        $r3.<org.apache.commons.math3.dfp.Dfp: byte nans> = 3;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp dotrap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)>(1, "newInstance", $r1, $r3);

        return $r1;

     label1:
        r0 = new org.apache.commons.math3.dfp.DfpDec;

        specialinvoke r0.<org.apache.commons.math3.dfp.DfpDec: void <init>(org.apache.commons.math3.dfp.Dfp)>($r1);

        return r0;
    }
    public org.apache.commons.math3.dfp.Dfp nextAfter(org.apache.commons.math3.dfp.Dfp)
    {
        org.apache.commons.math3.dfp.DfpDec r0;
        org.apache.commons.math3.dfp.Dfp $r1, $r3, $r4;
        org.apache.commons.math3.dfp.DfpField $r2;
        int $i0, $i1;
        boolean z0, $z1;
        int[] $r5;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        $r1 := @parameter0: org.apache.commons.math3.dfp.Dfp;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        $i0 = virtualinvoke $r2.<org.apache.commons.math3.dfp.DfpField: int getRadixDigits()>();

        $r2 = virtualinvoke $r1.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.DfpField getField()>();

        $i1 = virtualinvoke $r2.<org.apache.commons.math3.dfp.DfpField: int getRadixDigits()>();

        if $i0 == $i1 goto label01;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        virtualinvoke $r2.<org.apache.commons.math3.dfp.DfpField: void setIEEEFlagsBits(int)>(1);

        $r3 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp getZero()>();

        $r3 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp newInstance(org.apache.commons.math3.dfp.Dfp)>($r3);

        $r3.<org.apache.commons.math3.dfp.Dfp: byte nans> = 3;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp dotrap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)>(1, "nextAfter", $r1, $r3);

        return $r1;

     label01:
        z0 = 0;

        $z1 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: boolean lessThan(org.apache.commons.math3.dfp.Dfp)>($r1);

        if $z1 == 0 goto label02;

        z0 = 1;

     label02:
        $z1 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label03;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp newInstance(org.apache.commons.math3.dfp.Dfp)>($r1);

        return $r1;

     label03:
        $r3 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp getZero()>();

        $z1 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: boolean lessThan(org.apache.commons.math3.dfp.Dfp)>($r3);

        if $z1 == 0 goto label04;

        if z0 != 0 goto label08;

        z0 = 1;

     label04:
        if z0 == 0 goto label10;

        $i0 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: int intLog10()>();

        $i1 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: int getDecimalDigits()>();

        $i0 = $i0 - $i1;

        $i0 = $i0 + 1;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp power10(int)>($i0);

        $r3 = staticinvoke <org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp copysign(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)>($r3, r0);

        $r4 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp getZero()>();

        z0 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: boolean equals(java.lang.Object)>($r4);

        if z0 == 0 goto label05;

        $r5 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        $i0 = lengthof $r5;

        $i0 = -32767 - $i0;

        $i0 = $i0 + -1;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp power10K(int)>($i0);

     label05:
        $r4 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp getZero()>();

        z0 = virtualinvoke $r3.<org.apache.commons.math3.dfp.Dfp: boolean equals(java.lang.Object)>($r4);

        if z0 == 0 goto label09;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp getZero()>();

        $r3 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp newInstance(org.apache.commons.math3.dfp.Dfp)>($r3);

        $r3 = staticinvoke <org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp copysign(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)>($r3, r0);

     label06:
        $i0 = virtualinvoke $r3.<org.apache.commons.math3.dfp.Dfp: int classify()>();

        if $i0 != 1 goto label07;

        $i0 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: int classify()>();

        if $i0 == 1 goto label07;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        virtualinvoke $r2.<org.apache.commons.math3.dfp.DfpField: void setIEEEFlagsBits(int)>(16);

        $r3 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp dotrap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)>(16, "nextAfter", $r1, $r3);

     label07:
        $r4 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp getZero()>();

        z0 = virtualinvoke $r3.<org.apache.commons.math3.dfp.Dfp: boolean equals(java.lang.Object)>($r4);

        if z0 == 0 goto label15;

        $r4 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp getZero()>();

        z0 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: boolean equals(java.lang.Object)>($r4);

        if z0 != 0 goto label15;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        virtualinvoke $r2.<org.apache.commons.math3.dfp.DfpField: void setIEEEFlagsBits(int)>(16);

        $r1 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp dotrap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)>(16, "nextAfter", $r1, $r3);

        return $r1;

     label08:
        z0 = 0;

        goto label04;

     label09:
        $r3 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp add(org.apache.commons.math3.dfp.Dfp)>($r3);

        goto label06;

     label10:
        $i0 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: int intLog10()>();

        $r3 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp power10(int)>($i0);

        $r3 = staticinvoke <org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp copysign(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)>($r3, r0);

        z0 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: boolean equals(java.lang.Object)>($r3);

        if z0 == 0 goto label13;

        $i0 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: int getDecimalDigits()>();

        $r4 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp power10(int)>($i0);

        $r3 = virtualinvoke $r3.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp divide(org.apache.commons.math3.dfp.Dfp)>($r4);

     label11:
        $r4 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp getZero()>();

        z0 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: boolean equals(java.lang.Object)>($r4);

        if z0 == 0 goto label12;

        $r5 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        $i0 = lengthof $r5;

        $i0 = -32767 - $i0;

        $i0 = $i0 + -1;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp power10K(int)>($i0);

     label12:
        $r4 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp getZero()>();

        z0 = virtualinvoke $r3.<org.apache.commons.math3.dfp.Dfp: boolean equals(java.lang.Object)>($r4);

        if z0 == 0 goto label14;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp getZero()>();

        $r3 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp newInstance(org.apache.commons.math3.dfp.Dfp)>($r3);

        $r3 = staticinvoke <org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp copysign(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)>($r3, r0);

        goto label06;

     label13:
        $i0 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: int getDecimalDigits()>();

        $i0 = $i0 + -1;

        $r4 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp power10(int)>($i0);

        $r3 = virtualinvoke $r3.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp divide(org.apache.commons.math3.dfp.Dfp)>($r4);

        goto label11;

     label14:
        $r3 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp subtract(org.apache.commons.math3.dfp.Dfp)>($r3);

        goto label06;

     label15:
        return $r3;
    }
    protected int round(int)
    {
        org.apache.commons.math3.dfp.DfpDec r0;
        int $i0, i1, i2, $i3, i4, i5, $i6;
        int[] $r1, $r2;
        org.apache.commons.math3.dfp.DfpField $r3;
        org.apache.commons.math3.dfp.DfpField$RoundingMode $r4;
        byte $b7;
        boolean z0;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        $i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        $r2 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        i2 = lengthof $r2;

        i2 = i2 + -1;

        i2 = $r1[i2];

        if i2 != 0 goto label01;

        return 0;

     label01:
        $r1 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        $i3 = lengthof $r1;

        $i3 = $i3 * 4;

        i4 = 1000;

     label02:
        if i4 <= i2 goto label03;

        i4 = i4 / 10;

        $i3 = $i3 + -1;

        goto label02;

     label03:
        i4 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: int getDecimalDigits()>();

        i1 = $i3 - i4;

        i2 = i1 / 4;

        $i3 = 1;

        i5 = 0;

     label04:
        $i6 = i1 % 4;

        if i5 >= $i6 goto label05;

        $i3 = $i3 * 10;

        i5 = i5 + 1;

        goto label04;

     label05:
        $r1 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        i1 = $r1[i2];

        if $i3 > 1 goto label06;

        $r1 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        i5 = lengthof $r1;

        i5 = i5 * 4;

        i5 = i5 + -3;

        if i4 != i5 goto label06;

        $i0 = specialinvoke r0.<org.apache.commons.math3.dfp.Dfp: int round(int)>($i0);

        return $i0;

     label06:
        if $i3 != 1 goto label09;

        $r1 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        i4 = i2 + -1;

        i4 = $r1[i4];

        i4 = i4 / 1000;

        i4 = i4 % 10;

        $r1 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        i5 = i2 + -1;

        $i6 = $r1[i5];

        $i6 = $i6 % 1000;

        $r1[i5] = $i6;

        $r1 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        i5 = i2 + -1;

        i5 = $r1[i5];

        $i0 = $i0 | i5;

     label07:
        i5 = 0;

     label08:
        if i5 >= i2 goto label10;

        $r1 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        $i6 = $r1[i5];

        $i0 = $i0 | $i6;

        $r1 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        $r1[i5] = 0;

        i5 = i5 + 1;

        goto label08;

     label09:
        i4 = i1 * 10;

        i4 = i4 / $i3;

        i4 = i4 % 10;

        i5 = $i3 / 10;

        i5 = i1 % i5;

        $i0 = $i0 | i5;

        goto label07;

     label10:
        $r1 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        i5 = i1 / $i3;

        i5 = i5 * $i3;

        $r1[i2] = i5;

        $r1 = <org.apache.commons.math3.dfp.DfpDec$1: int[] $SwitchMap$org$apache$commons$math3$dfp$DfpField$RoundingMode>;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        $r4 = virtualinvoke $r3.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.DfpField$RoundingMode getRoundingMode()>();

        i5 = virtualinvoke $r4.<org.apache.commons.math3.dfp.DfpField$RoundingMode: int ordinal()>();

        i5 = $r1[i5];

        lookupswitch(i5)
        {
            case 1: goto label15;
            case 2: goto label16;
            case 3: goto label19;
            case 4: goto label21;
            case 5: goto label23;
            case 6: goto label27;
            case 7: goto label31;
            default: goto label11;
        };

     label11:
        $b7 = r0.<org.apache.commons.math3.dfp.DfpDec: byte sign>;

        if $b7 != -1 goto label34;

        if i4 != 0 goto label12;

        if $i0 == 0 goto label34;

     label12:
        z0 = 1;

     label13:
        if z0 == 0 goto label36;

     label14:
        $r1 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        i1 = lengthof $r1;

        if i2 >= i1 goto label35;

        $r1 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        i1 = $r1[i2];

        i1 = i1 + $i3;

        $i3 = i1 / 10000;

        $r1 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        i1 = i1 % 10000;

        $r1[i2] = i1;

        i2 = i2 + 1;

        goto label14;

     label15:
        z0 = 0;

        goto label13;

     label16:
        if i4 != 0 goto label17;

        if $i0 == 0 goto label18;

     label17:
        z0 = 1;

        goto label13;

     label18:
        z0 = 0;

        goto label13;

     label19:
        if i4 < 5 goto label20;

        z0 = 1;

        goto label13;

     label20:
        z0 = 0;

        goto label13;

     label21:
        if i4 <= 5 goto label22;

        z0 = 1;

        goto label13;

     label22:
        z0 = 0;

        goto label13;

     label23:
        if i4 > 5 goto label25;

        if i4 != 5 goto label24;

        if $i0 != 0 goto label25;

     label24:
        if i4 != 5 goto label26;

        if $i0 != 0 goto label26;

        i1 = i1 / $i3;

        i1 = i1 & 1;

        if i1 != 1 goto label26;

     label25:
        z0 = 1;

        goto label13;

     label26:
        z0 = 0;

        goto label13;

     label27:
        if i4 > 5 goto label29;

        if i4 != 5 goto label28;

        if $i0 != 0 goto label29;

     label28:
        if i4 != 5 goto label30;

        if $i0 != 0 goto label30;

        i1 = i1 / $i3;

        i1 = i1 & 1;

        if i1 != 0 goto label30;

     label29:
        z0 = 1;

        goto label13;

     label30:
        z0 = 0;

        goto label13;

     label31:
        $b7 = r0.<org.apache.commons.math3.dfp.DfpDec: byte sign>;

        if $b7 != 1 goto label33;

        if i4 != 0 goto label32;

        if $i0 == 0 goto label33;

     label32:
        z0 = 1;

        goto label13;

     label33:
        z0 = 0;

        goto label13;

     label34:
        z0 = 0;

        goto label13;

     label35:
        if $i3 == 0 goto label36;

        virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: void shiftRight()>();

        $r1 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        $r2 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        i2 = lengthof $r2;

        i2 = i2 + -1;

        $r1[i2] = $i3;

     label36:
        i2 = r0.<org.apache.commons.math3.dfp.DfpDec: int exp>;

        if i2 >= -32767 goto label37;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        virtualinvoke $r3.<org.apache.commons.math3.dfp.DfpField: void setIEEEFlagsBits(int)>(8);

        return 8;

     label37:
        i2 = r0.<org.apache.commons.math3.dfp.DfpDec: int exp>;

        if i2 <= 32768 goto label38;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        virtualinvoke $r3.<org.apache.commons.math3.dfp.DfpField: void setIEEEFlagsBits(int)>(4);

        return 4;

     label38:
        if i4 != 0 goto label39;

        if $i0 == 0 goto label40;

     label39:
        $r3 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        virtualinvoke $r3.<org.apache.commons.math3.dfp.DfpField: void setIEEEFlagsBits(int)>(16);

        return 16;

     label40:
        return 0;
    }
