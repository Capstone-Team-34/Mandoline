org.apache.commons.math3.dfp.DfpField extends java.lang.Object implements org.apache.commons.math3.Field
public static final int FLAG_DIV_ZERO
public static final int FLAG_INEXACT
public static final int FLAG_INVALID
public static final int FLAG_OVERFLOW
public static final int FLAG_UNDERFLOW
private static java.lang.String eString
private static java.lang.String ln10String
private static java.lang.String ln2String
private static java.lang.String ln5String
private static java.lang.String piString
private static java.lang.String sqr2ReciprocalString
private static java.lang.String sqr2String
private static java.lang.String sqr3ReciprocalString
private static java.lang.String sqr3String
private final org.apache.commons.math3.dfp.Dfp e
private final org.apache.commons.math3.dfp.Dfp[] eSplit
private int ieeeFlags
private final org.apache.commons.math3.dfp.Dfp ln10
private final org.apache.commons.math3.dfp.Dfp ln2
private final org.apache.commons.math3.dfp.Dfp[] ln2Split
private final org.apache.commons.math3.dfp.Dfp ln5
private final org.apache.commons.math3.dfp.Dfp[] ln5Split
private final org.apache.commons.math3.dfp.Dfp one
private final org.apache.commons.math3.dfp.Dfp pi
private final org.apache.commons.math3.dfp.Dfp[] piSplit
private org.apache.commons.math3.dfp.DfpField$RoundingMode rMode
private final int radixDigits
private final org.apache.commons.math3.dfp.Dfp sqr2
private final org.apache.commons.math3.dfp.Dfp sqr2Reciprocal
private final org.apache.commons.math3.dfp.Dfp[] sqr2Split
private final org.apache.commons.math3.dfp.Dfp sqr3
private final org.apache.commons.math3.dfp.Dfp sqr3Reciprocal
private final org.apache.commons.math3.dfp.Dfp two
private final org.apache.commons.math3.dfp.Dfp zero
    public void <init>(int)
    {
        org.apache.commons.math3.dfp.DfpField r0;
        int $i0;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        $i0 := @parameter0: int;

        specialinvoke r0.<org.apache.commons.math3.dfp.DfpField: void <init>(int,boolean)>($i0, 1);

        return;
    }
    private void <init>(int, boolean)
    {
        org.apache.commons.math3.dfp.DfpField r0;
        int $i0, $i1;
        boolean $z0;
        org.apache.commons.math3.dfp.DfpField$RoundingMode $r1;
        org.apache.commons.math3.dfp.Dfp $r2;
        java.lang.String $r3;
        org.apache.commons.math3.dfp.Dfp[] $r4;
        java.lang.Throwable $r5;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $i0 >= 13 goto label4;

        $i1 = 4;

     label1:
        r0.<org.apache.commons.math3.dfp.DfpField: int radixDigits> = $i1;

        $r1 = <org.apache.commons.math3.dfp.DfpField$RoundingMode: org.apache.commons.math3.dfp.DfpField$RoundingMode ROUND_HALF_EVEN>;

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.DfpField$RoundingMode rMode> = $r1;

        r0.<org.apache.commons.math3.dfp.DfpField: int ieeeFlags> = 0;

        $r2 = new org.apache.commons.math3.dfp.Dfp;

        specialinvoke $r2.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,int)>(r0, 0);

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp zero> = $r2;

        $r2 = new org.apache.commons.math3.dfp.Dfp;

        specialinvoke $r2.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,int)>(r0, 1);

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp one> = $r2;

        $r2 = new org.apache.commons.math3.dfp.Dfp;

        specialinvoke $r2.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,int)>(r0, 2);

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp two> = $r2;

        if $z0 == 0 goto label9;

        entermonitor class "Lorg/apache/commons/math3/dfp/DfpField;";

        if $i0 >= 67 goto label5;

        $i0 = 200;

     label2:
        staticinvoke <org.apache.commons.math3.dfp.DfpField: void computeStringConstants(int)>($i0);

        $r2 = new org.apache.commons.math3.dfp.Dfp;

        $r3 = <org.apache.commons.math3.dfp.DfpField: java.lang.String sqr2String>;

        specialinvoke $r2.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,java.lang.String)>(r0, $r3);

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp sqr2> = $r2;

        $r3 = <org.apache.commons.math3.dfp.DfpField: java.lang.String sqr2String>;

        $r4 = specialinvoke r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp[] split(java.lang.String)>($r3);

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp[] sqr2Split> = $r4;

        $r2 = new org.apache.commons.math3.dfp.Dfp;

        $r3 = <org.apache.commons.math3.dfp.DfpField: java.lang.String sqr2ReciprocalString>;

        specialinvoke $r2.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,java.lang.String)>(r0, $r3);

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp sqr2Reciprocal> = $r2;

        $r2 = new org.apache.commons.math3.dfp.Dfp;

        $r3 = <org.apache.commons.math3.dfp.DfpField: java.lang.String sqr3String>;

        specialinvoke $r2.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,java.lang.String)>(r0, $r3);

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp sqr3> = $r2;

        $r2 = new org.apache.commons.math3.dfp.Dfp;

        $r3 = <org.apache.commons.math3.dfp.DfpField: java.lang.String sqr3ReciprocalString>;

        specialinvoke $r2.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,java.lang.String)>(r0, $r3);

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp sqr3Reciprocal> = $r2;

        $r2 = new org.apache.commons.math3.dfp.Dfp;

        $r3 = <org.apache.commons.math3.dfp.DfpField: java.lang.String piString>;

        specialinvoke $r2.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,java.lang.String)>(r0, $r3);

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp pi> = $r2;

        $r3 = <org.apache.commons.math3.dfp.DfpField: java.lang.String piString>;

        $r4 = specialinvoke r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp[] split(java.lang.String)>($r3);

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp[] piSplit> = $r4;

        $r2 = new org.apache.commons.math3.dfp.Dfp;

        $r3 = <org.apache.commons.math3.dfp.DfpField: java.lang.String eString>;

        specialinvoke $r2.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,java.lang.String)>(r0, $r3);

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp e> = $r2;

        $r3 = <org.apache.commons.math3.dfp.DfpField: java.lang.String eString>;

        $r4 = specialinvoke r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp[] split(java.lang.String)>($r3);

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp[] eSplit> = $r4;

        $r2 = new org.apache.commons.math3.dfp.Dfp;

        $r3 = <org.apache.commons.math3.dfp.DfpField: java.lang.String ln2String>;

        specialinvoke $r2.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,java.lang.String)>(r0, $r3);

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp ln2> = $r2;

        $r3 = <org.apache.commons.math3.dfp.DfpField: java.lang.String ln2String>;

        $r4 = specialinvoke r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp[] split(java.lang.String)>($r3);

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp[] ln2Split> = $r4;

        $r2 = new org.apache.commons.math3.dfp.Dfp;

        $r3 = <org.apache.commons.math3.dfp.DfpField: java.lang.String ln5String>;

        specialinvoke $r2.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,java.lang.String)>(r0, $r3);

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp ln5> = $r2;

        $r3 = <org.apache.commons.math3.dfp.DfpField: java.lang.String ln5String>;

        $r4 = specialinvoke r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp[] split(java.lang.String)>($r3);

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp[] ln5Split> = $r4;

        $r2 = new org.apache.commons.math3.dfp.Dfp;

        $r3 = <org.apache.commons.math3.dfp.DfpField: java.lang.String ln10String>;

        specialinvoke $r2.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,java.lang.String)>(r0, $r3);

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp ln10> = $r2;

        exitmonitor class "Lorg/apache/commons/math3/dfp/DfpField;";

     label3:
        return;

     label4:
        $i1 = $i0 + 3;

        $i1 = $i1 / 4;

        goto label1;

     label5:
        $i0 = $i0 * 3;

        goto label2;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor class "Lorg/apache/commons/math3/dfp/DfpField;";

     label8:
        throw $r5;

     label9:
        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp sqr2> = null;

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp[] sqr2Split> = null;

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp sqr2Reciprocal> = null;

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp sqr3> = null;

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp sqr3Reciprocal> = null;

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp pi> = null;

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp[] piSplit> = null;

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp e> = null;

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp[] eSplit> = null;

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp ln2> = null;

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp[] ln2Split> = null;

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp ln5> = null;

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp[] ln5Split> = null;

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp ln10> = null;

        return;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }
    public static org.apache.commons.math3.dfp.Dfp computeExp(org.apache.commons.math3.dfp.Dfp, org.apache.commons.math3.dfp.Dfp)
    {
        org.apache.commons.math3.dfp.Dfp $r0, $r1, r2, r3, r4, r5, r6, $r7, $r8;
        int i0;
        boolean $z0;

        $r0 := @parameter0: org.apache.commons.math3.dfp.Dfp;

        $r1 := @parameter1: org.apache.commons.math3.dfp.Dfp;

        r2 = new org.apache.commons.math3.dfp.Dfp;

        specialinvoke r2.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.Dfp)>($r1);

        r3 = new org.apache.commons.math3.dfp.Dfp;

        specialinvoke r3.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.Dfp)>($r1);

        r4 = new org.apache.commons.math3.dfp.Dfp;

        specialinvoke r4.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.Dfp)>($r1);

        r5 = new org.apache.commons.math3.dfp.Dfp;

        specialinvoke r5.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.Dfp)>($r1);

        r6 = new org.apache.commons.math3.dfp.Dfp;

        specialinvoke r6.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.Dfp)>($r1);

        i0 = 0;

     label1:
        if i0 >= 10000 goto label3;

        $r7 = virtualinvoke r6.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp multiply(org.apache.commons.math3.dfp.Dfp)>($r0);

        r6 = $r7;

        $r7 = virtualinvoke $r7.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp divide(org.apache.commons.math3.dfp.Dfp)>(r4);

        $r7 = virtualinvoke r2.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp add(org.apache.commons.math3.dfp.Dfp)>($r7);

        r2 = $r7;

        $r8 = virtualinvoke r5.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp add(org.apache.commons.math3.dfp.Dfp)>($r1);

        r5 = $r8;

        r4 = virtualinvoke r4.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp multiply(org.apache.commons.math3.dfp.Dfp)>($r8);

        $z0 = virtualinvoke $r7.<org.apache.commons.math3.dfp.Dfp: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label2;

        return $r7;

     label2:
        r3 = new org.apache.commons.math3.dfp.Dfp;

        specialinvoke r3.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.Dfp)>($r7);

        i0 = i0 + 1;

        goto label1;

     label3:
        return r2;
    }
    public static org.apache.commons.math3.dfp.Dfp computeLn(org.apache.commons.math3.dfp.Dfp, org.apache.commons.math3.dfp.Dfp, org.apache.commons.math3.dfp.Dfp)
    {
        org.apache.commons.math3.dfp.Dfp $r0, $r1, $r2, $r3, r5, $r6;
        int i0, i1;
        org.apache.commons.math3.dfp.DfpField $r4;
        boolean $z0;

        $r0 := @parameter0: org.apache.commons.math3.dfp.Dfp;

        $r1 := @parameter1: org.apache.commons.math3.dfp.Dfp;

        $r2 := @parameter2: org.apache.commons.math3.dfp.Dfp;

        i0 = 1;

        $r3 = new org.apache.commons.math3.dfp.Dfp;

        $r4 = virtualinvoke $r0.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.DfpField getField()>();

        specialinvoke $r3.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,int)>($r4, -1);

        $r3 = virtualinvoke $r0.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp add(org.apache.commons.math3.dfp.Dfp)>($r3);

        $r0 = virtualinvoke $r0.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp add(org.apache.commons.math3.dfp.Dfp)>($r1);

        $r0 = virtualinvoke $r3.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp divide(org.apache.commons.math3.dfp.Dfp)>($r0);

        $r1 = new org.apache.commons.math3.dfp.Dfp;

        specialinvoke $r1.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.Dfp)>($r0);

        r5 = new org.apache.commons.math3.dfp.Dfp;

        specialinvoke r5.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.Dfp)>($r0);

        $r3 = new org.apache.commons.math3.dfp.Dfp;

        specialinvoke $r3.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.Dfp)>($r1);

        i1 = 0;

     label1:
        if i1 >= 10000 goto label2;

        r5 = virtualinvoke r5.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp multiply(org.apache.commons.math3.dfp.Dfp)>($r0);

        $r6 = virtualinvoke r5.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp multiply(org.apache.commons.math3.dfp.Dfp)>($r0);

        r5 = $r6;

        i0 = i0 + 2;

        $r6 = virtualinvoke $r6.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp divide(int)>(i0);

        $r6 = virtualinvoke $r1.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp add(org.apache.commons.math3.dfp.Dfp)>($r6);

        $r1 = $r6;

        $z0 = virtualinvoke $r6.<org.apache.commons.math3.dfp.Dfp: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

     label2:
        $r0 = virtualinvoke $r1.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp multiply(org.apache.commons.math3.dfp.Dfp)>($r2);

        return $r0;

     label3:
        $r3 = new org.apache.commons.math3.dfp.Dfp;

        specialinvoke $r3.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.Dfp)>($r6);

        i1 = i1 + 1;

        goto label1;
    }
    private static org.apache.commons.math3.dfp.Dfp computePi(org.apache.commons.math3.dfp.Dfp, org.apache.commons.math3.dfp.Dfp, org.apache.commons.math3.dfp.Dfp)
    {
        org.apache.commons.math3.dfp.Dfp $r0, $r1, $r2, $r3, $r4, r5, r6, $r7, $r8, $r9;
        int i0;
        boolean $z0;

        $r0 := @parameter0: org.apache.commons.math3.dfp.Dfp;

        $r1 := @parameter1: org.apache.commons.math3.dfp.Dfp;

        $r2 := @parameter2: org.apache.commons.math3.dfp.Dfp;

        $r3 = virtualinvoke $r1.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp sqrt()>();

        r5 = virtualinvoke $r3.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp subtract(org.apache.commons.math3.dfp.Dfp)>($r0);

        $r4 = virtualinvoke $r1.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp add(org.apache.commons.math3.dfp.Dfp)>($r1);

        r6 = $r1;

        $r3 = virtualinvoke $r1.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp multiply(org.apache.commons.math3.dfp.Dfp)>($r3);

        $r2 = virtualinvoke $r2.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp subtract(org.apache.commons.math3.dfp.Dfp)>($r3);

        $r2 = virtualinvoke $r1.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp multiply(org.apache.commons.math3.dfp.Dfp)>($r2);

        i0 = 1;

     label1:
        if i0 >= 20 goto label2;

        $r1 = r5;

        r5 = virtualinvoke r5.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp multiply(org.apache.commons.math3.dfp.Dfp)>(r5);

        r5 = virtualinvoke r5.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp multiply(org.apache.commons.math3.dfp.Dfp)>(r5);

        r5 = virtualinvoke $r0.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp subtract(org.apache.commons.math3.dfp.Dfp)>(r5);

        r5 = virtualinvoke r5.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp sqrt()>();

        $r3 = virtualinvoke r5.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp sqrt()>();

        r5 = virtualinvoke $r0.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp subtract(org.apache.commons.math3.dfp.Dfp)>($r3);

        $r3 = virtualinvoke $r0.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp add(org.apache.commons.math3.dfp.Dfp)>($r3);

        $r3 = virtualinvoke r5.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp divide(org.apache.commons.math3.dfp.Dfp)>($r3);

        r5 = $r3;

        $r7 = virtualinvoke r6.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp multiply(org.apache.commons.math3.dfp.Dfp)>($r4);

        r6 = $r7;

        $r8 = virtualinvoke $r0.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp add(org.apache.commons.math3.dfp.Dfp)>($r3);

        $r8 = virtualinvoke $r8.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp multiply(org.apache.commons.math3.dfp.Dfp)>($r8);

        $r8 = virtualinvoke $r8.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp multiply(org.apache.commons.math3.dfp.Dfp)>($r8);

        $r2 = virtualinvoke $r2.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp multiply(org.apache.commons.math3.dfp.Dfp)>($r8);

        $r7 = virtualinvoke $r7.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp multiply(org.apache.commons.math3.dfp.Dfp)>($r3);

        $r8 = virtualinvoke $r0.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp add(org.apache.commons.math3.dfp.Dfp)>($r3);

        $r9 = virtualinvoke $r3.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp multiply(org.apache.commons.math3.dfp.Dfp)>($r3);

        $r8 = virtualinvoke $r8.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp add(org.apache.commons.math3.dfp.Dfp)>($r9);

        $r7 = virtualinvoke $r7.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp multiply(org.apache.commons.math3.dfp.Dfp)>($r8);

        $r2 = virtualinvoke $r2.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp subtract(org.apache.commons.math3.dfp.Dfp)>($r7);

        $z0 = virtualinvoke $r3.<org.apache.commons.math3.dfp.Dfp: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

     label2:
        $r0 = virtualinvoke $r0.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp divide(org.apache.commons.math3.dfp.Dfp)>($r2);

        return $r0;

     label3:
        i0 = i0 + 1;

        goto label1;
    }
    private static void computeStringConstants(int)
    {
        int $i0, $i1, $i2;
        org.apache.commons.math3.dfp.DfpField r0;
        org.apache.commons.math3.dfp.Dfp r1, r2, r3, $r5;
        java.lang.String $r4;

        $i0 := @parameter0: int;

        $r4 = <org.apache.commons.math3.dfp.DfpField: java.lang.String sqr2String>;

        if $r4 == null goto label1;

        $r4 = <org.apache.commons.math3.dfp.DfpField: java.lang.String sqr2String>;

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i2 = $i0 + -3;

        if $i1 >= $i2 goto label2;

     label1:
        r0 = new org.apache.commons.math3.dfp.DfpField;

        specialinvoke r0.<org.apache.commons.math3.dfp.DfpField: void <init>(int,boolean)>($i0, 0);

        r1 = new org.apache.commons.math3.dfp.Dfp;

        specialinvoke r1.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,int)>(r0, 1);

        r3 = new org.apache.commons.math3.dfp.Dfp;

        specialinvoke r3.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,int)>(r0, 2);

        r2 = new org.apache.commons.math3.dfp.Dfp;

        specialinvoke r2.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,int)>(r0, 3);

        $r5 = virtualinvoke r3.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp sqrt()>();

        $r4 = virtualinvoke $r5.<org.apache.commons.math3.dfp.Dfp: java.lang.String toString()>();

        <org.apache.commons.math3.dfp.DfpField: java.lang.String sqr2String> = $r4;

        $r5 = virtualinvoke r1.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp divide(org.apache.commons.math3.dfp.Dfp)>($r5);

        $r4 = virtualinvoke $r5.<org.apache.commons.math3.dfp.Dfp: java.lang.String toString()>();

        <org.apache.commons.math3.dfp.DfpField: java.lang.String sqr2ReciprocalString> = $r4;

        $r5 = virtualinvoke r2.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp sqrt()>();

        $r4 = virtualinvoke $r5.<org.apache.commons.math3.dfp.Dfp: java.lang.String toString()>();

        <org.apache.commons.math3.dfp.DfpField: java.lang.String sqr3String> = $r4;

        $r5 = virtualinvoke r1.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp divide(org.apache.commons.math3.dfp.Dfp)>($r5);

        $r4 = virtualinvoke $r5.<org.apache.commons.math3.dfp.Dfp: java.lang.String toString()>();

        <org.apache.commons.math3.dfp.DfpField: java.lang.String sqr3ReciprocalString> = $r4;

        r2 = staticinvoke <org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp computePi(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)>(r1, r3, r2);

        $r4 = virtualinvoke r2.<org.apache.commons.math3.dfp.Dfp: java.lang.String toString()>();

        <org.apache.commons.math3.dfp.DfpField: java.lang.String piString> = $r4;

        r2 = staticinvoke <org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp computeExp(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)>(r1, r1);

        $r4 = virtualinvoke r2.<org.apache.commons.math3.dfp.Dfp: java.lang.String toString()>();

        <org.apache.commons.math3.dfp.DfpField: java.lang.String eString> = $r4;

        r2 = staticinvoke <org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp computeLn(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)>(r3, r1, r3);

        $r4 = virtualinvoke r2.<org.apache.commons.math3.dfp.Dfp: java.lang.String toString()>();

        <org.apache.commons.math3.dfp.DfpField: java.lang.String ln2String> = $r4;

        r2 = new org.apache.commons.math3.dfp.Dfp;

        specialinvoke r2.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,int)>(r0, 5);

        r2 = staticinvoke <org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp computeLn(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)>(r2, r1, r3);

        $r4 = virtualinvoke r2.<org.apache.commons.math3.dfp.Dfp: java.lang.String toString()>();

        <org.apache.commons.math3.dfp.DfpField: java.lang.String ln5String> = $r4;

        r2 = new org.apache.commons.math3.dfp.Dfp;

        specialinvoke r2.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,int)>(r0, 10);

        r1 = staticinvoke <org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp computeLn(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)>(r2, r1, r3);

        $r4 = virtualinvoke r1.<org.apache.commons.math3.dfp.Dfp: java.lang.String toString()>();

        <org.apache.commons.math3.dfp.DfpField: java.lang.String ln10String> = $r4;

     label2:
        return;
    }
    private org.apache.commons.math3.dfp.Dfp[] split(java.lang.String)
    {
        org.apache.commons.math3.dfp.DfpField r0;
        java.lang.String $r1, $r5;
        char[] r2;
        org.apache.commons.math3.dfp.Dfp[] r3;
        boolean z0;
        int i0, i1, $i2, $i3;
        char $c4;
        org.apache.commons.math3.dfp.Dfp $r4;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        $r1 := @parameter0: java.lang.String;

        r3 = newarray (org.apache.commons.math3.dfp.Dfp)[2];

        z0 = 1;

        i0 = 0;

        i1 = 0;

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        r2 = newarray (char)[$i2];

        $i2 = 0;

     label1:
        $i3 = lengthof r2;

        if $i2 >= $i3 goto label4;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i2);

        r2[$i2] = $c4;

        $c4 = r2[$i2];

        if $c4 < 49 goto label2;

        $c4 = r2[$i2];

        if $c4 > 57 goto label2;

        z0 = 0;

     label2:
        $c4 = r2[$i2];

        if $c4 != 46 goto label3;

        $i3 = 400 - i1;

        $i3 = $i3 % 4;

        i1 = i1 + $i3;

        z0 = 0;

     label3:
        $i3 = r0.<org.apache.commons.math3.dfp.DfpField: int radixDigits>;

        $i3 = $i3 / 2;

        $i3 = $i3 * 4;

        if i1 != $i3 goto label7;

        i0 = $i2;

     label4:
        $r4 = new org.apache.commons.math3.dfp.Dfp;

        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(char[],int,int)>(r2, 0, i0);

        specialinvoke $r4.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,java.lang.String)>(r0, $r5);

        r3[0] = $r4;

        i1 = 0;

     label5:
        $i2 = lengthof r2;

        if i1 >= $i2 goto label9;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i1);

        r2[i1] = $c4;

        $c4 = r2[i1];

        if $c4 < 48 goto label6;

        $c4 = r2[i1];

        if $c4 > 57 goto label6;

        if i1 >= i0 goto label6;

        r2[i1] = 48;

     label6:
        i1 = i1 + 1;

        goto label5;

     label7:
        $c4 = r2[$i2];

        if $c4 < 48 goto label8;

        $c4 = r2[$i2];

        if $c4 > 57 goto label8;

        if z0 != 0 goto label8;

        i1 = i1 + 1;

     label8:
        $i2 = $i2 + 1;

        goto label1;

     label9:
        $r4 = new org.apache.commons.math3.dfp.Dfp;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>(r2);

        specialinvoke $r4.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,java.lang.String)>(r0, $r1);

        r3[1] = $r4;

        return r3;
    }
    public void clearIEEEFlags()
    {
        org.apache.commons.math3.dfp.DfpField r0;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        r0.<org.apache.commons.math3.dfp.DfpField: int ieeeFlags> = 0;

        return;
    }
    public org.apache.commons.math3.dfp.Dfp getE()
    {
        org.apache.commons.math3.dfp.DfpField r0;
        org.apache.commons.math3.dfp.Dfp r1;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        r1 = r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp e>;

        return r1;
    }
    public org.apache.commons.math3.dfp.Dfp[] getESplit()
    {
        org.apache.commons.math3.dfp.DfpField r0;
        java.lang.Object $r1;
        org.apache.commons.math3.dfp.Dfp[] $r2;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        $r2 = r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp[] eSplit>;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.commons.math3.dfp.Dfp[]) $r1;

        return $r2;
    }
    public int getIEEEFlags()
    {
        org.apache.commons.math3.dfp.DfpField r0;
        int i0;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        i0 = r0.<org.apache.commons.math3.dfp.DfpField: int ieeeFlags>;

        return i0;
    }
    public org.apache.commons.math3.dfp.Dfp getLn10()
    {
        org.apache.commons.math3.dfp.DfpField r0;
        org.apache.commons.math3.dfp.Dfp r1;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        r1 = r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp ln10>;

        return r1;
    }
    public org.apache.commons.math3.dfp.Dfp getLn2()
    {
        org.apache.commons.math3.dfp.DfpField r0;
        org.apache.commons.math3.dfp.Dfp r1;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        r1 = r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp ln2>;

        return r1;
    }
    public org.apache.commons.math3.dfp.Dfp[] getLn2Split()
    {
        org.apache.commons.math3.dfp.DfpField r0;
        java.lang.Object $r1;
        org.apache.commons.math3.dfp.Dfp[] $r2;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        $r2 = r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp[] ln2Split>;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.commons.math3.dfp.Dfp[]) $r1;

        return $r2;
    }
    public org.apache.commons.math3.dfp.Dfp getLn5()
    {
        org.apache.commons.math3.dfp.DfpField r0;
        org.apache.commons.math3.dfp.Dfp r1;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        r1 = r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp ln5>;

        return r1;
    }
    public org.apache.commons.math3.dfp.Dfp[] getLn5Split()
    {
        org.apache.commons.math3.dfp.DfpField r0;
        java.lang.Object $r1;
        org.apache.commons.math3.dfp.Dfp[] $r2;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        $r2 = r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp[] ln5Split>;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.commons.math3.dfp.Dfp[]) $r1;

        return $r2;
    }
    public volatile java.lang.Object getOne()
    {
        org.apache.commons.math3.dfp.DfpField r0;
        org.apache.commons.math3.dfp.Dfp $r1;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp getOne()>();

        return $r1;
    }
    public org.apache.commons.math3.dfp.Dfp getOne()
    {
        org.apache.commons.math3.dfp.DfpField r0;
        org.apache.commons.math3.dfp.Dfp r1;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        r1 = r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp one>;

        return r1;
    }
    public org.apache.commons.math3.dfp.Dfp getPi()
    {
        org.apache.commons.math3.dfp.DfpField r0;
        org.apache.commons.math3.dfp.Dfp r1;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        r1 = r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp pi>;

        return r1;
    }
    public org.apache.commons.math3.dfp.Dfp[] getPiSplit()
    {
        org.apache.commons.math3.dfp.DfpField r0;
        java.lang.Object $r1;
        org.apache.commons.math3.dfp.Dfp[] $r2;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        $r2 = r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp[] piSplit>;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.commons.math3.dfp.Dfp[]) $r1;

        return $r2;
    }
    public int getRadixDigits()
    {
        org.apache.commons.math3.dfp.DfpField r0;
        int i0;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        i0 = r0.<org.apache.commons.math3.dfp.DfpField: int radixDigits>;

        return i0;
    }
    public org.apache.commons.math3.dfp.DfpField$RoundingMode getRoundingMode()
    {
        org.apache.commons.math3.dfp.DfpField r0;
        org.apache.commons.math3.dfp.DfpField$RoundingMode r1;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        r1 = r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.DfpField$RoundingMode rMode>;

        return r1;
    }
    public java.lang.Class getRuntimeClass()
    {
        org.apache.commons.math3.dfp.DfpField r0;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        return class "Lorg/apache/commons/math3/dfp/Dfp;";
    }
    public org.apache.commons.math3.dfp.Dfp getSqr2()
    {
        org.apache.commons.math3.dfp.DfpField r0;
        org.apache.commons.math3.dfp.Dfp r1;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        r1 = r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp sqr2>;

        return r1;
    }
    public org.apache.commons.math3.dfp.Dfp getSqr2Reciprocal()
    {
        org.apache.commons.math3.dfp.DfpField r0;
        org.apache.commons.math3.dfp.Dfp r1;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        r1 = r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp sqr2Reciprocal>;

        return r1;
    }
    public org.apache.commons.math3.dfp.Dfp[] getSqr2Split()
    {
        org.apache.commons.math3.dfp.DfpField r0;
        java.lang.Object $r1;
        org.apache.commons.math3.dfp.Dfp[] $r2;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        $r2 = r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp[] sqr2Split>;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.commons.math3.dfp.Dfp[]) $r1;

        return $r2;
    }
    public org.apache.commons.math3.dfp.Dfp getSqr3()
    {
        org.apache.commons.math3.dfp.DfpField r0;
        org.apache.commons.math3.dfp.Dfp r1;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        r1 = r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp sqr3>;

        return r1;
    }
    public org.apache.commons.math3.dfp.Dfp getSqr3Reciprocal()
    {
        org.apache.commons.math3.dfp.DfpField r0;
        org.apache.commons.math3.dfp.Dfp r1;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        r1 = r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp sqr3Reciprocal>;

        return r1;
    }
    public org.apache.commons.math3.dfp.Dfp getTwo()
    {
        org.apache.commons.math3.dfp.DfpField r0;
        org.apache.commons.math3.dfp.Dfp r1;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        r1 = r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp two>;

        return r1;
    }
    public volatile java.lang.Object getZero()
    {
        org.apache.commons.math3.dfp.DfpField r0;
        org.apache.commons.math3.dfp.Dfp $r1;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp getZero()>();

        return $r1;
    }
    public org.apache.commons.math3.dfp.Dfp getZero()
    {
        org.apache.commons.math3.dfp.DfpField r0;
        org.apache.commons.math3.dfp.Dfp r1;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        r1 = r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.Dfp zero>;

        return r1;
    }
    public org.apache.commons.math3.dfp.Dfp newDfp()
    {
        org.apache.commons.math3.dfp.DfpField r0;
        org.apache.commons.math3.dfp.Dfp $r1;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        $r1 = new org.apache.commons.math3.dfp.Dfp;

        specialinvoke $r1.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField)>(r0);

        return $r1;
    }
    public org.apache.commons.math3.dfp.Dfp newDfp(byte)
    {
        org.apache.commons.math3.dfp.DfpField r0;
        byte $b0;
        org.apache.commons.math3.dfp.Dfp $r1;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        $b0 := @parameter0: byte;

        $r1 = new org.apache.commons.math3.dfp.Dfp;

        specialinvoke $r1.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,byte)>(r0, $b0);

        return $r1;
    }
    public org.apache.commons.math3.dfp.Dfp newDfp(byte, byte)
    {
        org.apache.commons.math3.dfp.DfpField r0;
        byte $b0, $b1;
        org.apache.commons.math3.dfp.Dfp $r1;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        $b0 := @parameter0: byte;

        $b1 := @parameter1: byte;

        $r1 = new org.apache.commons.math3.dfp.Dfp;

        specialinvoke $r1.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,byte,byte)>(r0, $b0, $b1);

        return $r1;
    }
    public org.apache.commons.math3.dfp.Dfp newDfp(double)
    {
        org.apache.commons.math3.dfp.DfpField r0;
        double $d0;
        org.apache.commons.math3.dfp.Dfp $r1;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        $d0 := @parameter0: double;

        $r1 = new org.apache.commons.math3.dfp.Dfp;

        specialinvoke $r1.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,double)>(r0, $d0);

        return $r1;
    }
    public org.apache.commons.math3.dfp.Dfp newDfp(int)
    {
        org.apache.commons.math3.dfp.DfpField r0;
        int $i0;
        org.apache.commons.math3.dfp.Dfp $r1;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        $i0 := @parameter0: int;

        $r1 = new org.apache.commons.math3.dfp.Dfp;

        specialinvoke $r1.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,int)>(r0, $i0);

        return $r1;
    }
    public org.apache.commons.math3.dfp.Dfp newDfp(long)
    {
        org.apache.commons.math3.dfp.DfpField r0;
        long $l0;
        org.apache.commons.math3.dfp.Dfp $r1;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        $l0 := @parameter0: long;

        $r1 = new org.apache.commons.math3.dfp.Dfp;

        specialinvoke $r1.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,long)>(r0, $l0);

        return $r1;
    }
    public org.apache.commons.math3.dfp.Dfp newDfp(java.lang.String)
    {
        org.apache.commons.math3.dfp.DfpField r0;
        java.lang.String $r1;
        org.apache.commons.math3.dfp.Dfp $r2;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.apache.commons.math3.dfp.Dfp;

        specialinvoke $r2.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,java.lang.String)>(r0, $r1);

        return $r2;
    }
    public org.apache.commons.math3.dfp.Dfp newDfp(org.apache.commons.math3.dfp.Dfp)
    {
        org.apache.commons.math3.dfp.DfpField r0;
        org.apache.commons.math3.dfp.Dfp $r1, $r2;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        $r1 := @parameter0: org.apache.commons.math3.dfp.Dfp;

        $r2 = new org.apache.commons.math3.dfp.Dfp;

        specialinvoke $r2.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.Dfp)>($r1);

        return $r2;
    }
    public void setIEEEFlags(int)
    {
        org.apache.commons.math3.dfp.DfpField r0;
        int $i0;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        $i0 := @parameter0: int;

        $i0 = $i0 & 31;

        r0.<org.apache.commons.math3.dfp.DfpField: int ieeeFlags> = $i0;

        return;
    }
    public void setIEEEFlagsBits(int)
    {
        org.apache.commons.math3.dfp.DfpField r0;
        int $i0, $i1;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        $i0 := @parameter0: int;

        $i1 = r0.<org.apache.commons.math3.dfp.DfpField: int ieeeFlags>;

        $i0 = $i0 & 31;

        $i0 = $i1 | $i0;

        r0.<org.apache.commons.math3.dfp.DfpField: int ieeeFlags> = $i0;

        return;
    }
    public void setRoundingMode(org.apache.commons.math3.dfp.DfpField$RoundingMode)
    {
        org.apache.commons.math3.dfp.DfpField r0;
        org.apache.commons.math3.dfp.DfpField$RoundingMode $r1;

        r0 := @this: org.apache.commons.math3.dfp.DfpField;

        $r1 := @parameter0: org.apache.commons.math3.dfp.DfpField$RoundingMode;

        r0.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.DfpField$RoundingMode rMode> = $r1;

        return;
    }
