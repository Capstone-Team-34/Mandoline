org.apache.commons.math3.ode.nonstiff.AdamsFieldIntegrator extends org.apache.commons.math3.ode.MultistepFieldIntegrator
private final org.apache.commons.math3.ode.nonstiff.AdamsNordsieckFieldTransformer transformer
    public void <init>(org.apache.commons.math3.Field, java.lang.String, int, int, double, double, double, double) throws org.apache.commons.math3.exception.NumberIsTooSmallException
    {
        org.apache.commons.math3.ode.nonstiff.AdamsFieldIntegrator r0;
        org.apache.commons.math3.Field r1;
        java.lang.String $r2;
        int $i0, $i1;
        double $d0, $d1, $d2, $d3;
        org.apache.commons.math3.ode.nonstiff.AdamsNordsieckFieldTransformer $r3;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.AdamsFieldIntegrator;

        r1 := @parameter0: org.apache.commons.math3.Field;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $d0 := @parameter4: double;

        $d1 := @parameter5: double;

        $d2 := @parameter6: double;

        $d3 := @parameter7: double;

        specialinvoke r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: void <init>(org.apache.commons.math3.Field,java.lang.String,int,int,double,double,double,double)>(r1, $r2, $i0, $i1, $d0, $d1, $d2, $d3);

        $r3 = staticinvoke <org.apache.commons.math3.ode.nonstiff.AdamsNordsieckFieldTransformer: org.apache.commons.math3.ode.nonstiff.AdamsNordsieckFieldTransformer getInstance(org.apache.commons.math3.Field,int)>(r1, $i0);

        r0.<org.apache.commons.math3.ode.nonstiff.AdamsFieldIntegrator: org.apache.commons.math3.ode.nonstiff.AdamsNordsieckFieldTransformer transformer> = $r3;

        return;
    }
    public void <init>(org.apache.commons.math3.Field, java.lang.String, int, int, double, double, double[], double[]) throws java.lang.IllegalArgumentException
    {
        org.apache.commons.math3.ode.nonstiff.AdamsFieldIntegrator r0;
        org.apache.commons.math3.Field r1;
        java.lang.String $r2;
        int $i0, $i1;
        double $d0, $d1;
        double[] $r3, $r4;
        org.apache.commons.math3.ode.nonstiff.AdamsNordsieckFieldTransformer $r5;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.AdamsFieldIntegrator;

        r1 := @parameter0: org.apache.commons.math3.Field;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $d0 := @parameter4: double;

        $d1 := @parameter5: double;

        $r3 := @parameter6: double[];

        $r4 := @parameter7: double[];

        specialinvoke r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: void <init>(org.apache.commons.math3.Field,java.lang.String,int,int,double,double,double[],double[])>(r1, $r2, $i0, $i1, $d0, $d1, $r3, $r4);

        $r5 = staticinvoke <org.apache.commons.math3.ode.nonstiff.AdamsNordsieckFieldTransformer: org.apache.commons.math3.ode.nonstiff.AdamsNordsieckFieldTransformer getInstance(org.apache.commons.math3.Field,int)>(r1, $i0);

        r0.<org.apache.commons.math3.ode.nonstiff.AdamsFieldIntegrator: org.apache.commons.math3.ode.nonstiff.AdamsNordsieckFieldTransformer transformer> = $r5;

        return;
    }
    protected org.apache.commons.math3.linear.Array2DRowFieldMatrix initializeHighOrderDerivatives(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement[], org.apache.commons.math3.RealFieldElement[][], org.apache.commons.math3.RealFieldElement[][])
    {
        org.apache.commons.math3.ode.nonstiff.AdamsFieldIntegrator r0;
        org.apache.commons.math3.RealFieldElement r1;
        org.apache.commons.math3.RealFieldElement[] r2;
        org.apache.commons.math3.RealFieldElement[][] r3, r4;
        org.apache.commons.math3.linear.Array2DRowFieldMatrix $r5;
        org.apache.commons.math3.ode.nonstiff.AdamsNordsieckFieldTransformer $r6;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.AdamsFieldIntegrator;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.RealFieldElement[];

        r3 := @parameter2: org.apache.commons.math3.RealFieldElement[][];

        r4 := @parameter3: org.apache.commons.math3.RealFieldElement[][];

        $r6 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsFieldIntegrator: org.apache.commons.math3.ode.nonstiff.AdamsNordsieckFieldTransformer transformer>;

        $r5 = virtualinvoke $r6.<org.apache.commons.math3.ode.nonstiff.AdamsNordsieckFieldTransformer: org.apache.commons.math3.linear.Array2DRowFieldMatrix initializeHighOrderDerivatives(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement[],org.apache.commons.math3.RealFieldElement[][],org.apache.commons.math3.RealFieldElement[][])>(r1, r2, r3, r4);

        return $r5;
    }
public abstract org.apache.commons.math3.ode.FieldODEStateAndDerivative integrate(org.apache.commons.math3.ode.FieldExpandableODE, org.apache.commons.math3.ode.FieldODEState, org.apache.commons.math3.RealFieldElement) throws org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MaxCountExceededException, org.apache.commons.math3.exception.NoBracketingException { 
// no body
} 
    public org.apache.commons.math3.linear.Array2DRowFieldMatrix updateHighOrderDerivativesPhase1(org.apache.commons.math3.linear.Array2DRowFieldMatrix)
    {
        org.apache.commons.math3.ode.nonstiff.AdamsFieldIntegrator r0;
        org.apache.commons.math3.linear.Array2DRowFieldMatrix r1;
        org.apache.commons.math3.ode.nonstiff.AdamsNordsieckFieldTransformer $r2;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.AdamsFieldIntegrator;

        r1 := @parameter0: org.apache.commons.math3.linear.Array2DRowFieldMatrix;

        $r2 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsFieldIntegrator: org.apache.commons.math3.ode.nonstiff.AdamsNordsieckFieldTransformer transformer>;

        r1 = virtualinvoke $r2.<org.apache.commons.math3.ode.nonstiff.AdamsNordsieckFieldTransformer: org.apache.commons.math3.linear.Array2DRowFieldMatrix updateHighOrderDerivativesPhase1(org.apache.commons.math3.linear.Array2DRowFieldMatrix)>(r1);

        return r1;
    }
    public void updateHighOrderDerivativesPhase2(org.apache.commons.math3.RealFieldElement[], org.apache.commons.math3.RealFieldElement[], org.apache.commons.math3.linear.Array2DRowFieldMatrix)
    {
        org.apache.commons.math3.ode.nonstiff.AdamsFieldIntegrator r0;
        org.apache.commons.math3.RealFieldElement[] r1, r2;
        org.apache.commons.math3.linear.Array2DRowFieldMatrix r3;
        org.apache.commons.math3.ode.nonstiff.AdamsNordsieckFieldTransformer $r4;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.AdamsFieldIntegrator;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement[];

        r2 := @parameter1: org.apache.commons.math3.RealFieldElement[];

        r3 := @parameter2: org.apache.commons.math3.linear.Array2DRowFieldMatrix;

        $r4 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsFieldIntegrator: org.apache.commons.math3.ode.nonstiff.AdamsNordsieckFieldTransformer transformer>;

        virtualinvoke $r4.<org.apache.commons.math3.ode.nonstiff.AdamsNordsieckFieldTransformer: void updateHighOrderDerivativesPhase2(org.apache.commons.math3.RealFieldElement[],org.apache.commons.math3.RealFieldElement[],org.apache.commons.math3.linear.Array2DRowFieldMatrix)>(r1, r2, r3);

        return;
    }
