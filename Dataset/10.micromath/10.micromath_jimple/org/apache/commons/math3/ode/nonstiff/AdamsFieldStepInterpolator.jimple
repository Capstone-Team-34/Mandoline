org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator extends org.apache.commons.math3.ode.sampling.AbstractFieldStepInterpolator
private final org.apache.commons.math3.linear.Array2DRowFieldMatrix nordsieck
private final org.apache.commons.math3.ode.FieldODEStateAndDerivative reference
private final org.apache.commons.math3.RealFieldElement[] scaled
private org.apache.commons.math3.RealFieldElement scalingH
    void <init>(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.RealFieldElement[], org.apache.commons.math3.linear.Array2DRowFieldMatrix, boolean, org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.ode.FieldEquationsMapper)
    {
        org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator r0;
        org.apache.commons.math3.RealFieldElement r1;
        org.apache.commons.math3.ode.FieldODEStateAndDerivative r2, r5, r6;
        org.apache.commons.math3.RealFieldElement[] r3;
        org.apache.commons.math3.linear.Array2DRowFieldMatrix r4;
        boolean $z0;
        org.apache.commons.math3.ode.FieldEquationsMapper r7;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        r3 := @parameter2: org.apache.commons.math3.RealFieldElement[];

        r4 := @parameter3: org.apache.commons.math3.linear.Array2DRowFieldMatrix;

        $z0 := @parameter4: boolean;

        r5 := @parameter5: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        r6 := @parameter6: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        r7 := @parameter7: org.apache.commons.math3.ode.FieldEquationsMapper;

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.RealFieldElement[],org.apache.commons.math3.linear.Array2DRowFieldMatrix,boolean,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldEquationsMapper)>(r1, r2, r3, r4, $z0, r5, r6, r5, r6, r7);

        return;
    }
    private void <init>(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.RealFieldElement[], org.apache.commons.math3.linear.Array2DRowFieldMatrix, boolean, org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.ode.FieldEquationsMapper)
    {
        org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator r0;
        org.apache.commons.math3.RealFieldElement r1;
        org.apache.commons.math3.ode.FieldODEStateAndDerivative r2, r5, r6, r7, r8;
        org.apache.commons.math3.RealFieldElement[] r3;
        org.apache.commons.math3.linear.Array2DRowFieldMatrix r4, $r11;
        boolean $z0;
        org.apache.commons.math3.ode.FieldEquationsMapper r9;
        java.lang.Object $r10;
        org.apache.commons.math3.FieldElement[][] $r12;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        r3 := @parameter2: org.apache.commons.math3.RealFieldElement[];

        r4 := @parameter3: org.apache.commons.math3.linear.Array2DRowFieldMatrix;

        $z0 := @parameter4: boolean;

        r5 := @parameter5: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        r6 := @parameter6: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        r7 := @parameter7: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        r8 := @parameter8: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        r9 := @parameter9: org.apache.commons.math3.ode.FieldEquationsMapper;

        specialinvoke r0.<org.apache.commons.math3.ode.sampling.AbstractFieldStepInterpolator: void <init>(boolean,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldEquationsMapper)>($z0, r5, r6, r7, r8, r9);

        r0.<org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator: org.apache.commons.math3.RealFieldElement scalingH> = r1;

        r0.<org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative reference> = r2;

        $r10 = virtualinvoke r3.<java.lang.Object: java.lang.Object clone()>();

        r3 = (org.apache.commons.math3.RealFieldElement[]) $r10;

        r0.<org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator: org.apache.commons.math3.RealFieldElement[] scaled> = r3;

        $r11 = new org.apache.commons.math3.linear.Array2DRowFieldMatrix;

        $r12 = virtualinvoke r4.<org.apache.commons.math3.linear.Array2DRowFieldMatrix: org.apache.commons.math3.FieldElement[][] getData()>();

        specialinvoke $r11.<org.apache.commons.math3.linear.Array2DRowFieldMatrix: void <init>(org.apache.commons.math3.FieldElement[][],boolean)>($r12, 0);

        r0.<org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator: org.apache.commons.math3.linear.Array2DRowFieldMatrix nordsieck> = $r11;

        return;
    }
    public static org.apache.commons.math3.ode.FieldODEStateAndDerivative taylor(org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement[], org.apache.commons.math3.linear.Array2DRowFieldMatrix)
    {
        org.apache.commons.math3.ode.FieldODEStateAndDerivative r0;
        org.apache.commons.math3.RealFieldElement r1, r2, $r6, r14, $r15, $r16;
        org.apache.commons.math3.RealFieldElement[] r3, r5, r10, r11;
        org.apache.commons.math3.linear.Array2DRowFieldMatrix r4;
        int i0, i1, i2, $i3;
        java.lang.Object $r7;
        org.apache.commons.math3.Field $r8;
        java.lang.Object[] $r9;
        org.apache.commons.math3.FieldElement[][] $r12;
        org.apache.commons.math3.RealFieldElement[][] r13;

        r0 := @parameter0: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        r1 := @parameter1: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter2: org.apache.commons.math3.RealFieldElement;

        r3 := @parameter3: org.apache.commons.math3.RealFieldElement[];

        r4 := @parameter4: org.apache.commons.math3.linear.Array2DRowFieldMatrix;

        $r6 = virtualinvoke r0.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $r7 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r7 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(java.lang.Object)>(r2);

        r2 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r8 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        i0 = lengthof r3;

        $r9 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[] buildArray(org.apache.commons.math3.Field,int)>($r8, i0);

        r10 = (org.apache.commons.math3.RealFieldElement[]) $r9;

        $r8 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $r7 = interfaceinvoke $r8.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>(r10, $r7);

        $r8 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        i0 = lengthof r3;

        $r9 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[] buildArray(org.apache.commons.math3.Field,int)>($r8, i0);

        r11 = (org.apache.commons.math3.RealFieldElement[]) $r9;

        $r8 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $r7 = interfaceinvoke $r8.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>(r11, $r7);

        $r12 = virtualinvoke r4.<org.apache.commons.math3.linear.Array2DRowFieldMatrix: org.apache.commons.math3.FieldElement[][] getDataRef()>();

        r13 = (org.apache.commons.math3.RealFieldElement[][]) $r12;

        i0 = lengthof r13;

        i1 = i0 + -1;

     label1:
        if i1 < 0 goto label4;

        i0 = i1 + 2;

        r5 = r13[i1];

        $r7 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object pow(int)>(i0);

        r14 = (org.apache.commons.math3.RealFieldElement) $r7;

        i2 = 0;

     label2:
        $i3 = lengthof r5;

        if i2 >= $i3 goto label3;

        $r15 = r5[i2];

        $r7 = interfaceinvoke $r15.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r14);

        $r15 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r16 = r10[i2];

        $r7 = interfaceinvoke $r16.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r15);

        $r16 = (org.apache.commons.math3.RealFieldElement) $r7;

        r10[i2] = $r16;

        $r16 = r11[i2];

        $r7 = interfaceinvoke $r15.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(i0);

        $r7 = interfaceinvoke $r16.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r7);

        $r15 = (org.apache.commons.math3.RealFieldElement) $r7;

        r11[i2] = $r15;

        i2 = i2 + 1;

        goto label2;

     label3:
        i1 = i1 + -1;

        goto label1;

     label4:
        r5 = virtualinvoke r0.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement[] getState()>();

        i0 = 0;

     label5:
        i1 = lengthof r10;

        if i0 >= i1 goto label6;

        r14 = r10[i0];

        $r15 = r3[i0];

        $r7 = interfaceinvoke $r15.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r2);

        $r7 = interfaceinvoke r14.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r7);

        r14 = (org.apache.commons.math3.RealFieldElement) $r7;

        r10[i0] = r14;

        r14 = r5[i0];

        $r15 = r10[i0];

        $r7 = interfaceinvoke r14.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r15);

        r14 = (org.apache.commons.math3.RealFieldElement) $r7;

        r5[i0] = r14;

        r14 = r11[i0];

        $r15 = r3[i0];

        $r7 = interfaceinvoke $r15.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r2);

        $r7 = interfaceinvoke r14.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r7);

        r14 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r7 = interfaceinvoke r14.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(java.lang.Object)>($r6);

        r14 = (org.apache.commons.math3.RealFieldElement) $r7;

        r11[i0] = r14;

        i0 = i0 + 1;

        goto label5;

     label6:
        r0 = new org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        specialinvoke r0.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement[],org.apache.commons.math3.RealFieldElement[])>(r1, r5, r11);

        return r0;
    }
    protected org.apache.commons.math3.ode.FieldODEStateAndDerivative computeInterpolatedStateAndDerivatives(org.apache.commons.math3.ode.FieldEquationsMapper, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement)
    {
        org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator r0;
        org.apache.commons.math3.ode.FieldEquationsMapper r1;
        org.apache.commons.math3.RealFieldElement r2, r3, r4, r5;
        org.apache.commons.math3.RealFieldElement[] $r6;
        org.apache.commons.math3.linear.Array2DRowFieldMatrix $r7;
        org.apache.commons.math3.ode.FieldODEStateAndDerivative $r8;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator;

        r1 := @parameter0: org.apache.commons.math3.ode.FieldEquationsMapper;

        r2 := @parameter1: org.apache.commons.math3.RealFieldElement;

        r3 := @parameter2: org.apache.commons.math3.RealFieldElement;

        r4 := @parameter3: org.apache.commons.math3.RealFieldElement;

        r5 := @parameter4: org.apache.commons.math3.RealFieldElement;

        $r8 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative reference>;

        r3 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator: org.apache.commons.math3.RealFieldElement scalingH>;

        $r6 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator: org.apache.commons.math3.RealFieldElement[] scaled>;

        $r7 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator: org.apache.commons.math3.linear.Array2DRowFieldMatrix nordsieck>;

        $r8 = staticinvoke <org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative taylor(org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement[],org.apache.commons.math3.linear.Array2DRowFieldMatrix)>($r8, r2, r3, $r6, $r7);

        return $r8;
    }
    protected org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator create(boolean, org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.ode.FieldEquationsMapper)
    {
        org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator r0, $r6;
        boolean $z0;
        org.apache.commons.math3.ode.FieldODEStateAndDerivative r1, r2, r3, r4, $r8;
        org.apache.commons.math3.ode.FieldEquationsMapper r5;
        org.apache.commons.math3.RealFieldElement $r7;
        org.apache.commons.math3.RealFieldElement[] $r9;
        org.apache.commons.math3.linear.Array2DRowFieldMatrix $r10;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator;

        $z0 := @parameter0: boolean;

        r1 := @parameter1: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        r2 := @parameter2: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        r3 := @parameter3: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        r4 := @parameter4: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        r5 := @parameter5: org.apache.commons.math3.ode.FieldEquationsMapper;

        $r6 = new org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator;

        $r7 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator: org.apache.commons.math3.RealFieldElement scalingH>;

        $r8 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative reference>;

        $r9 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator: org.apache.commons.math3.RealFieldElement[] scaled>;

        $r10 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator: org.apache.commons.math3.linear.Array2DRowFieldMatrix nordsieck>;

        specialinvoke $r6.<org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.RealFieldElement[],org.apache.commons.math3.linear.Array2DRowFieldMatrix,boolean,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldEquationsMapper)>($r7, $r8, $r9, $r10, $z0, r1, r2, r3, r4, r5);

        return $r6;
    }
    protected volatile org.apache.commons.math3.ode.sampling.AbstractFieldStepInterpolator create(boolean, org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.ode.FieldEquationsMapper)
    {
        org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator r0;
        boolean $z0;
        org.apache.commons.math3.ode.FieldODEStateAndDerivative $r1, $r2, $r3, $r4;
        org.apache.commons.math3.ode.FieldEquationsMapper $r5;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        $r2 := @parameter2: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        $r3 := @parameter3: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        $r4 := @parameter4: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        $r5 := @parameter5: org.apache.commons.math3.ode.FieldEquationsMapper;

        r0 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator: org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator create(boolean,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldEquationsMapper)>($z0, $r1, $r2, $r3, $r4, $r5);

        return r0;
    }
