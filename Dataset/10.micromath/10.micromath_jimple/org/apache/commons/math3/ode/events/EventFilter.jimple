org.apache.commons.math3.ode.events.EventFilter extends java.lang.Object implements org.apache.commons.math3.ode.events.EventHandler
private static final int HISTORY_SIZE
private double extremeT
private final org.apache.commons.math3.ode.events.FilterType filter
private boolean forward
private final org.apache.commons.math3.ode.events.EventHandler rawHandler
private final org.apache.commons.math3.ode.events.Transformer[] transformers
private final double[] updates
    public void <init>(org.apache.commons.math3.ode.events.EventHandler, org.apache.commons.math3.ode.events.FilterType)
    {
        org.apache.commons.math3.ode.events.EventFilter r0;
        org.apache.commons.math3.ode.events.EventHandler $r1;
        org.apache.commons.math3.ode.events.FilterType $r2;
        org.apache.commons.math3.ode.events.Transformer[] $r3;
        double[] $r4;

        r0 := @this: org.apache.commons.math3.ode.events.EventFilter;

        $r1 := @parameter0: org.apache.commons.math3.ode.events.EventHandler;

        $r2 := @parameter1: org.apache.commons.math3.ode.events.FilterType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.EventHandler rawHandler> = $r1;

        r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.FilterType filter> = $r2;

        $r3 = newarray (org.apache.commons.math3.ode.events.Transformer)[100];

        r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers> = $r3;

        $r4 = newarray (double)[100];

        r0.<org.apache.commons.math3.ode.events.EventFilter: double[] updates> = $r4;

        return;
    }
    public org.apache.commons.math3.ode.events.EventHandler$Action eventOccurred(double, double[], boolean)
    {
        org.apache.commons.math3.ode.events.EventFilter r0;
        double $d0;
        double[] $r1;
        boolean $z0;
        org.apache.commons.math3.ode.events.EventHandler $r2;
        org.apache.commons.math3.ode.events.FilterType $r3;
        org.apache.commons.math3.ode.events.EventHandler$Action $r4;

        r0 := @this: org.apache.commons.math3.ode.events.EventFilter;

        $d0 := @parameter0: double;

        $r1 := @parameter1: double[];

        $z0 := @parameter2: boolean;

        $r2 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.EventHandler rawHandler>;

        $r3 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.FilterType filter>;

        $z0 = virtualinvoke $r3.<org.apache.commons.math3.ode.events.FilterType: boolean getTriggeredIncreasing()>();

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.ode.events.EventHandler: org.apache.commons.math3.ode.events.EventHandler$Action eventOccurred(double,double[],boolean)>($d0, $r1, $z0);

        return $r4;
    }
    public double g(double, double[])
    {
        org.apache.commons.math3.ode.events.EventFilter r0;
        double $d0, $d1, $d2;
        double[] $r1, $r7, $r9;
        int i0, $i2;
        org.apache.commons.math3.ode.events.EventHandler $r2;
        boolean $z0;
        org.apache.commons.math3.ode.events.Transformer[] $r3, $r8, $r10;
        byte $b1;
        org.apache.commons.math3.ode.events.Transformer r4, $r6;
        org.apache.commons.math3.ode.events.FilterType $r5;

        r0 := @this: org.apache.commons.math3.ode.events.EventFilter;

        $d0 := @parameter0: double;

        $r1 := @parameter1: double[];

        $r2 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.EventHandler rawHandler>;

        $d1 = interfaceinvoke $r2.<org.apache.commons.math3.ode.events.EventHandler: double g(double,double[])>($d0, $r1);

        $z0 = r0.<org.apache.commons.math3.ode.events.EventFilter: boolean forward>;

        if $z0 == 0 goto label05;

        $r3 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers>;

        i0 = lengthof $r3;

        i0 = i0 + -1;

        $d2 = r0.<org.apache.commons.math3.ode.events.EventFilter: double extremeT>;

        $b1 = $d2 cmpg $d0;

        if $b1 >= 0 goto label02;

        $r3 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers>;

        r4 = $r3[i0];

        $r5 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.FilterType filter>;

        $z0 = r0.<org.apache.commons.math3.ode.events.EventFilter: boolean forward>;

        $r6 = virtualinvoke $r5.<org.apache.commons.math3.ode.events.FilterType: org.apache.commons.math3.ode.events.Transformer selectTransformer(org.apache.commons.math3.ode.events.Transformer,double,boolean)>(r4, $d1, $z0);

        if $r6 == r4 goto label01;

        $r1 = r0.<org.apache.commons.math3.ode.events.EventFilter: double[] updates>;

        $r7 = r0.<org.apache.commons.math3.ode.events.EventFilter: double[] updates>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 1, $r7, 0, i0);

        $r3 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers>;

        $r8 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 1, $r8, 0, i0);

        $r1 = r0.<org.apache.commons.math3.ode.events.EventFilter: double[] updates>;

        $d2 = r0.<org.apache.commons.math3.ode.events.EventFilter: double extremeT>;

        $r1[i0] = $d2;

        $r3 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers>;

        $r3[i0] = $r6;

     label01:
        r0.<org.apache.commons.math3.ode.events.EventFilter: double extremeT> = $d0;

        $d0 = virtualinvoke $r6.<org.apache.commons.math3.ode.events.Transformer: double transformed(double)>($d1);

        return $d0;

     label02:
        if i0 <= 0 goto label04;

        $r1 = r0.<org.apache.commons.math3.ode.events.EventFilter: double[] updates>;

        $d2 = $r1[i0];

        $b1 = $d2 cmpg $d0;

        if $b1 > 0 goto label03;

        $r3 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers>;

        r4 = $r3[i0];

        $d0 = virtualinvoke r4.<org.apache.commons.math3.ode.events.Transformer: double transformed(double)>($d1);

        return $d0;

     label03:
        i0 = i0 + -1;

        goto label02;

     label04:
        $r3 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers>;

        r4 = $r3[0];

        $d0 = virtualinvoke r4.<org.apache.commons.math3.ode.events.Transformer: double transformed(double)>($d1);

        return $d0;

     label05:
        $d2 = r0.<org.apache.commons.math3.ode.events.EventFilter: double extremeT>;

        $b1 = $d0 cmpg $d2;

        if $b1 >= 0 goto label07;

        $r3 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers>;

        r4 = $r3[0];

        $r5 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.FilterType filter>;

        $z0 = r0.<org.apache.commons.math3.ode.events.EventFilter: boolean forward>;

        $r6 = virtualinvoke $r5.<org.apache.commons.math3.ode.events.FilterType: org.apache.commons.math3.ode.events.Transformer selectTransformer(org.apache.commons.math3.ode.events.Transformer,double,boolean)>(r4, $d1, $z0);

        if $r6 == r4 goto label06;

        $r1 = r0.<org.apache.commons.math3.ode.events.EventFilter: double[] updates>;

        $r7 = r0.<org.apache.commons.math3.ode.events.EventFilter: double[] updates>;

        $r9 = r0.<org.apache.commons.math3.ode.events.EventFilter: double[] updates>;

        i0 = lengthof $r9;

        i0 = i0 + -1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r7, 1, i0);

        $r3 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers>;

        $r8 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers>;

        $r10 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers>;

        i0 = lengthof $r10;

        i0 = i0 + -1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r8, 1, i0);

        $r1 = r0.<org.apache.commons.math3.ode.events.EventFilter: double[] updates>;

        $d2 = r0.<org.apache.commons.math3.ode.events.EventFilter: double extremeT>;

        $r1[0] = $d2;

        $r3 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers>;

        $r3[0] = $r6;

     label06:
        r0.<org.apache.commons.math3.ode.events.EventFilter: double extremeT> = $d0;

        $d0 = virtualinvoke $r6.<org.apache.commons.math3.ode.events.Transformer: double transformed(double)>($d1);

        return $d0;

     label07:
        i0 = 0;

     label08:
        $r1 = r0.<org.apache.commons.math3.ode.events.EventFilter: double[] updates>;

        $i2 = lengthof $r1;

        $i2 = $i2 + -1;

        if i0 >= $i2 goto label10;

        $r1 = r0.<org.apache.commons.math3.ode.events.EventFilter: double[] updates>;

        $d2 = $r1[i0];

        $b1 = $d0 cmpg $d2;

        if $b1 > 0 goto label09;

        $r3 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers>;

        r4 = $r3[i0];

        $d0 = virtualinvoke r4.<org.apache.commons.math3.ode.events.Transformer: double transformed(double)>($d1);

        return $d0;

     label09:
        i0 = i0 + 1;

        goto label08;

     label10:
        $r3 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers>;

        $r1 = r0.<org.apache.commons.math3.ode.events.EventFilter: double[] updates>;

        i0 = lengthof $r1;

        i0 = i0 + -1;

        r4 = $r3[i0];

        $d0 = virtualinvoke r4.<org.apache.commons.math3.ode.events.Transformer: double transformed(double)>($d1);

        return $d0;
    }
    public void init(double, double[], double)
    {
        org.apache.commons.math3.ode.events.EventFilter r0;
        double $d0, $d1;
        double[] $r1;
        org.apache.commons.math3.ode.events.EventHandler $r2;
        byte $b0;
        boolean $z0;
        org.apache.commons.math3.ode.events.Transformer[] $r3;
        org.apache.commons.math3.ode.events.Transformer $r4;

        r0 := @this: org.apache.commons.math3.ode.events.EventFilter;

        $d0 := @parameter0: double;

        $r1 := @parameter1: double[];

        $d1 := @parameter2: double;

        $r2 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.EventHandler rawHandler>;

        interfaceinvoke $r2.<org.apache.commons.math3.ode.events.EventHandler: void init(double,double[],double)>($d0, $r1, $d1);

        $b0 = $d1 cmpl $d0;

        if $b0 < 0 goto label3;

        $z0 = 1;

     label1:
        r0.<org.apache.commons.math3.ode.events.EventFilter: boolean forward> = $z0;

        $z0 = r0.<org.apache.commons.math3.ode.events.EventFilter: boolean forward>;

        if $z0 == 0 goto label4;

        $d0 = #-Infinity;

     label2:
        r0.<org.apache.commons.math3.ode.events.EventFilter: double extremeT> = $d0;

        $r3 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers>;

        $r4 = <org.apache.commons.math3.ode.events.Transformer: org.apache.commons.math3.ode.events.Transformer UNINITIALIZED>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>($r3, $r4);

        $r1 = r0.<org.apache.commons.math3.ode.events.EventFilter: double[] updates>;

        $d0 = r0.<org.apache.commons.math3.ode.events.EventFilter: double extremeT>;

        staticinvoke <java.util.Arrays: void fill(double[],double)>($r1, $d0);

        return;

     label3:
        $z0 = 0;

        goto label1;

     label4:
        $d0 = #Infinity;

        goto label2;
    }
    public void resetState(double, double[])
    {
        org.apache.commons.math3.ode.events.EventFilter r0;
        double $d0;
        double[] $r1;
        org.apache.commons.math3.ode.events.EventHandler $r2;

        r0 := @this: org.apache.commons.math3.ode.events.EventFilter;

        $d0 := @parameter0: double;

        $r1 := @parameter1: double[];

        $r2 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.EventHandler rawHandler>;

        interfaceinvoke $r2.<org.apache.commons.math3.ode.events.EventHandler: void resetState(double,double[])>($d0, $r1);

        return;
    }
