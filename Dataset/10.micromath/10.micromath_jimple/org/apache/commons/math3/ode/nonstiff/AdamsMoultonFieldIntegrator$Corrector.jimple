org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector extends java.lang.Object implements org.apache.commons.math3.linear.FieldMatrixPreservingVisitor
private final org.apache.commons.math3.RealFieldElement[] after
private final org.apache.commons.math3.RealFieldElement[] before
private final org.apache.commons.math3.RealFieldElement[] previous
private final org.apache.commons.math3.RealFieldElement[] scaled
final org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator this$0
    void <init>(org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator, org.apache.commons.math3.RealFieldElement[], org.apache.commons.math3.RealFieldElement[], org.apache.commons.math3.RealFieldElement[])
    {
        org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector r0;
        org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator $r1;
        org.apache.commons.math3.RealFieldElement[] r2, r3, r4;
        java.lang.Object $r5;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector;

        $r1 := @parameter0: org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator;

        r2 := @parameter1: org.apache.commons.math3.RealFieldElement[];

        r3 := @parameter2: org.apache.commons.math3.RealFieldElement[];

        r4 := @parameter3: org.apache.commons.math3.RealFieldElement[];

        r0.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector: org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector: org.apache.commons.math3.RealFieldElement[] previous> = r2;

        r0.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector: org.apache.commons.math3.RealFieldElement[] scaled> = r3;

        r0.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector: org.apache.commons.math3.RealFieldElement[] after> = r4;

        $r5 = virtualinvoke r4.<java.lang.Object: java.lang.Object clone()>();

        r2 = (org.apache.commons.math3.RealFieldElement[]) $r5;

        r0.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector: org.apache.commons.math3.RealFieldElement[] before> = r2;

        return;
    }
    public volatile org.apache.commons.math3.FieldElement end()
    {
        org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector r0;
        org.apache.commons.math3.RealFieldElement $r1;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector: org.apache.commons.math3.RealFieldElement end()>();

        return $r1;
    }
    public org.apache.commons.math3.RealFieldElement end()
    {
        org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector r0;
        org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator $r1;
        org.apache.commons.math3.Field $r2;
        java.lang.Object $r3;
        org.apache.commons.math3.RealFieldElement r4, $r7, $r8, $r9;
        int i0, $i1;
        org.apache.commons.math3.RealFieldElement[] $r5, $r6;
        double[] $r10;
        double $d0;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector: org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator this$0>;

        $r2 = virtualinvoke $r1.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator: org.apache.commons.math3.Field getField()>();

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        r4 = (org.apache.commons.math3.RealFieldElement) $r3;

        i0 = 0;

     label1:
        $r5 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector: org.apache.commons.math3.RealFieldElement[] after>;

        $i1 = lengthof $r5;

        if i0 >= $i1 goto label5;

        $r5 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector: org.apache.commons.math3.RealFieldElement[] after>;

        $r6 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector: org.apache.commons.math3.RealFieldElement[] after>;

        $r7 = $r6[i0];

        $r6 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector: org.apache.commons.math3.RealFieldElement[] previous>;

        $r8 = $r6[i0];

        $r6 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector: org.apache.commons.math3.RealFieldElement[] scaled>;

        $r9 = $r6[i0];

        $r3 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r9);

        $r3 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r3);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r5[i0] = $r7;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector: org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator this$0>;

        $i1 = $r1.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator: int mainSetDimension>;

        if i0 >= $i1 goto label3;

        $r5 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector: org.apache.commons.math3.RealFieldElement[] previous>;

        $r7 = $r5[i0];

        $r3 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        $r7 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r5 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector: org.apache.commons.math3.RealFieldElement[] after>;

        $r8 = $r5[i0];

        $r3 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        $r8 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r7 = staticinvoke <org.apache.commons.math3.util.MathUtils: org.apache.commons.math3.RealFieldElement max(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r8);

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector: org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator this$0>;

        $r10 = $r1.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator: double[] vecAbsoluteTolerance>;

        if $r10 != null goto label4;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector: org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator this$0>;

        $d0 = $r1.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator: double scalRelativeTolerance>;

        $r3 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector: org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator this$0>;

        $d0 = $r1.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator: double scalAbsoluteTolerance>;

        $r3 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>($d0);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r3;

     label2:
        $r5 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector: org.apache.commons.math3.RealFieldElement[] after>;

        $r8 = $r5[i0];

        $r5 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector: org.apache.commons.math3.RealFieldElement[] before>;

        $r9 = $r5[i0];

        $r3 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r9);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(java.lang.Object)>($r7);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r7);

        $r3 = interfaceinvoke r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r3);

        r4 = (org.apache.commons.math3.RealFieldElement) $r3;

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector: org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator this$0>;

        $r10 = $r1.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator: double[] vecRelativeTolerance>;

        $d0 = $r10[i0];

        $r3 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector: org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator this$0>;

        $r10 = $r1.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator: double[] vecAbsoluteTolerance>;

        $d0 = $r10[i0];

        $r3 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>($d0);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r3;

        goto label2;

     label5:
        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector: org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator this$0>;

        i0 = $r1.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator: int mainSetDimension>;

        $d0 = (double) i0;

        $r3 = interfaceinvoke r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(double)>($d0);

        r4 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object sqrt()>();

        r4 = (org.apache.commons.math3.RealFieldElement) $r3;

        return r4;
    }
    public void start(int, int, int, int, int, int)
    {
        org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.commons.math3.RealFieldElement[] $r1;
        org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator $r2;
        org.apache.commons.math3.Field $r3;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i4 := @parameter4: int;

        $i5 := @parameter5: int;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector: org.apache.commons.math3.RealFieldElement[] after>;

        $r2 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector: org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator this$0>;

        $r3 = virtualinvoke $r2.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator: org.apache.commons.math3.Field getField()>();

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>($r1, $r4);

        return;
    }
    public volatile void visit(int, int, org.apache.commons.math3.FieldElement)
    {
        org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector r0;
        int $i0, $i1;
        org.apache.commons.math3.FieldElement $r1;
        org.apache.commons.math3.RealFieldElement $r2;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: org.apache.commons.math3.FieldElement;

        $r2 = (org.apache.commons.math3.RealFieldElement) $r1;

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector: void visit(int,int,org.apache.commons.math3.RealFieldElement)>($i0, $i1, $r2);

        return;
    }
    public void visit(int, int, org.apache.commons.math3.RealFieldElement)
    {
        org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector r0;
        int $i0, $i1;
        org.apache.commons.math3.RealFieldElement r1, $r4;
        org.apache.commons.math3.RealFieldElement[] $r2, $r3;
        java.lang.Object $r5;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        r1 := @parameter2: org.apache.commons.math3.RealFieldElement;

        $i0 = $i0 & 1;

        if $i0 != 0 goto label1;

        $r2 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector: org.apache.commons.math3.RealFieldElement[] after>;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector: org.apache.commons.math3.RealFieldElement[] after>;

        $r4 = $r3[$i1];

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>(r1);

        r1 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r2[$i1] = r1;

        return;

     label1:
        $r2 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector: org.apache.commons.math3.RealFieldElement[] after>;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector: org.apache.commons.math3.RealFieldElement[] after>;

        $r4 = $r3[$i1];

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>(r1);

        r1 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r2[$i1] = r1;

        return;
    }
