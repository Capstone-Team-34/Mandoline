org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator extends org.apache.commons.math3.ode.nonstiff.RungeKuttaFieldIntegrator
    public void <init>(org.apache.commons.math3.Field, org.apache.commons.math3.RealFieldElement)
    {
        org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator r0;
        org.apache.commons.math3.Field r1;
        org.apache.commons.math3.RealFieldElement r2;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator;

        r1 := @parameter0: org.apache.commons.math3.Field;

        r2 := @parameter1: org.apache.commons.math3.RealFieldElement;

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.RungeKuttaFieldIntegrator: void <init>(org.apache.commons.math3.Field,java.lang.String,org.apache.commons.math3.RealFieldElement)>(r1, "Gill", r2);

        return;
    }
    protected org.apache.commons.math3.ode.nonstiff.GillFieldStepInterpolator createInterpolator(boolean, org.apache.commons.math3.RealFieldElement[][], org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.ode.FieldEquationsMapper)
    {
        org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator r0;
        boolean $z0;
        org.apache.commons.math3.RealFieldElement[][] r1;
        org.apache.commons.math3.ode.FieldODEStateAndDerivative r2, r3;
        org.apache.commons.math3.ode.FieldEquationsMapper r4;
        org.apache.commons.math3.ode.nonstiff.GillFieldStepInterpolator $r5;
        org.apache.commons.math3.Field $r6;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator;

        $z0 := @parameter0: boolean;

        r1 := @parameter1: org.apache.commons.math3.RealFieldElement[][];

        r2 := @parameter2: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        r3 := @parameter3: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        r4 := @parameter4: org.apache.commons.math3.ode.FieldEquationsMapper;

        $r5 = new org.apache.commons.math3.ode.nonstiff.GillFieldStepInterpolator;

        $r6 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator: org.apache.commons.math3.Field getField()>();

        specialinvoke $r5.<org.apache.commons.math3.ode.nonstiff.GillFieldStepInterpolator: void <init>(org.apache.commons.math3.Field,boolean,org.apache.commons.math3.RealFieldElement[][],org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldEquationsMapper)>($r6, $z0, r1, r2, r3, r2, r3, r4);

        return $r5;
    }
    protected volatile org.apache.commons.math3.ode.nonstiff.RungeKuttaFieldStepInterpolator createInterpolator(boolean, org.apache.commons.math3.RealFieldElement[][], org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.ode.FieldEquationsMapper)
    {
        org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator r0;
        boolean $z0;
        org.apache.commons.math3.RealFieldElement[][] $r1;
        org.apache.commons.math3.ode.FieldODEStateAndDerivative $r2, $r3;
        org.apache.commons.math3.ode.FieldEquationsMapper $r4;
        org.apache.commons.math3.ode.nonstiff.GillFieldStepInterpolator $r5;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: org.apache.commons.math3.RealFieldElement[][];

        $r2 := @parameter2: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        $r3 := @parameter3: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        $r4 := @parameter4: org.apache.commons.math3.ode.FieldEquationsMapper;

        $r5 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator: org.apache.commons.math3.ode.nonstiff.GillFieldStepInterpolator createInterpolator(boolean,org.apache.commons.math3.RealFieldElement[][],org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldEquationsMapper)>($z0, $r1, $r2, $r3, $r4);

        return $r5;
    }
    public org.apache.commons.math3.RealFieldElement[][] getA()
    {
        org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator r0;
        org.apache.commons.math3.Field $r1;
        java.lang.Object $r2;
        org.apache.commons.math3.RealFieldElement $r3, $r8;
        java.lang.Object[][] $r4;
        org.apache.commons.math3.RealFieldElement[][] r5;
        int i0, $i1;
        java.lang.Object[] $r6;
        org.apache.commons.math3.RealFieldElement[] $r7;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator: org.apache.commons.math3.Field getField()>();

        $r2 = interfaceinvoke $r1.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        $r3 = (org.apache.commons.math3.RealFieldElement) $r2;

        $r2 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>(2.0);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r2;

        $r2 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object sqrt()>();

        $r3 = (org.apache.commons.math3.RealFieldElement) $r2;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator: org.apache.commons.math3.Field getField()>();

        $r4 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[][] buildArray(org.apache.commons.math3.Field,int,int)>($r1, 3, -1);

        r5 = (org.apache.commons.math3.RealFieldElement[][]) $r4;

        i0 = 0;

     label1:
        $i1 = lengthof r5;

        if i0 >= $i1 goto label2;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator: org.apache.commons.math3.Field getField()>();

        $i1 = i0 + 1;

        $r6 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[] buildArray(org.apache.commons.math3.Field,int)>($r1, $i1);

        $r7 = (org.apache.commons.math3.RealFieldElement[]) $r6;

        r5[i0] = $r7;

        i0 = i0 + 1;

        goto label1;

     label2:
        $r7 = r5[0];

        $r8 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator: org.apache.commons.math3.RealFieldElement fraction(int,int)>(1, 2);

        $r7[0] = $r8;

        $r7 = r5[1];

        $r2 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>(1.0);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r2;

        $r2 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(0.5);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r2;

        $r7[0] = $r8;

        $r7 = r5[1];

        $r2 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>(2.0);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r2;

        $r2 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(-0.5);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r2;

        $r7[1] = $r8;

        $r7 = r5[2];

        $r1 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator: org.apache.commons.math3.Field getField()>();

        $r2 = interfaceinvoke $r1.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        $r8 = (org.apache.commons.math3.RealFieldElement) $r2;

        $r7[0] = $r8;

        $r7 = r5[2];

        $r2 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(-0.5);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r2;

        $r7[1] = $r8;

        $r7 = r5[2];

        $r2 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>(2.0);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r2;

        $r2 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(0.5);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r2;

        $r7[2] = $r3;

        return r5;
    }
    public org.apache.commons.math3.RealFieldElement[] getB()
    {
        org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator r0;
        org.apache.commons.math3.Field $r1;
        java.lang.Object $r2;
        org.apache.commons.math3.RealFieldElement $r3, $r6;
        java.lang.Object[] $r4;
        org.apache.commons.math3.RealFieldElement[] r5;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator: org.apache.commons.math3.Field getField()>();

        $r2 = interfaceinvoke $r1.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        $r3 = (org.apache.commons.math3.RealFieldElement) $r2;

        $r2 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>(2.0);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r2;

        $r2 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object sqrt()>();

        $r3 = (org.apache.commons.math3.RealFieldElement) $r2;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator: org.apache.commons.math3.Field getField()>();

        $r4 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[] buildArray(org.apache.commons.math3.Field,int)>($r1, 4);

        r5 = (org.apache.commons.math3.RealFieldElement[]) $r4;

        $r6 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator: org.apache.commons.math3.RealFieldElement fraction(int,int)>(1, 6);

        r5[0] = $r6;

        $r2 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>(2.0);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r2;

        $r2 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(double)>(-6.0);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r2;

        r5[1] = $r6;

        $r2 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>(2.0);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r2;

        $r2 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(double)>(6.0);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r2;

        r5[2] = $r3;

        $r3 = r5[0];

        r5[3] = $r3;

        return r5;
    }
    public org.apache.commons.math3.RealFieldElement[] getC()
    {
        org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator r0;
        org.apache.commons.math3.Field $r1;
        java.lang.Object[] $r2;
        org.apache.commons.math3.RealFieldElement[] r3;
        org.apache.commons.math3.RealFieldElement $r4;
        java.lang.Object $r5;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator: org.apache.commons.math3.Field getField()>();

        $r2 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[] buildArray(org.apache.commons.math3.Field,int)>($r1, 3);

        r3 = (org.apache.commons.math3.RealFieldElement[]) $r2;

        $r4 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator: org.apache.commons.math3.RealFieldElement fraction(int,int)>(1, 2);

        r3[0] = $r4;

        $r4 = r3[0];

        r3[1] = $r4;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator: org.apache.commons.math3.Field getField()>();

        $r5 = interfaceinvoke $r1.<org.apache.commons.math3.Field: java.lang.Object getOne()>();

        $r4 = (org.apache.commons.math3.RealFieldElement) $r5;

        r3[2] = $r4;

        return r3;
    }
