org.apache.commons.math3.ode.ExpandableStatefulODE extends java.lang.Object
private java.util.List components
private final org.apache.commons.math3.ode.FirstOrderDifferentialEquations primary
private final org.apache.commons.math3.ode.EquationsMapper primaryMapper
private final double[] primaryState
private final double[] primaryStateDot
private double time
    public void <init>(org.apache.commons.math3.ode.FirstOrderDifferentialEquations)
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        org.apache.commons.math3.ode.FirstOrderDifferentialEquations $r1;
        int $i0;
        org.apache.commons.math3.ode.EquationsMapper $r2;
        double[] $r3;
        java.util.ArrayList $r4;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        $r1 := @parameter0: org.apache.commons.math3.ode.FirstOrderDifferentialEquations;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = interfaceinvoke $r1.<org.apache.commons.math3.ode.FirstOrderDifferentialEquations: int getDimension()>();

        r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: org.apache.commons.math3.ode.FirstOrderDifferentialEquations primary> = $r1;

        $r2 = new org.apache.commons.math3.ode.EquationsMapper;

        specialinvoke $r2.<org.apache.commons.math3.ode.EquationsMapper: void <init>(int,int)>(0, $i0);

        r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: org.apache.commons.math3.ode.EquationsMapper primaryMapper> = $r2;

        r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double time> = #NaN;

        $r3 = newarray (double)[$i0];

        r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] primaryState> = $r3;

        $r3 = newarray (double)[$i0];

        r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] primaryStateDot> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components> = $r4;

        return;
    }
    public int addSecondaryEquations(org.apache.commons.math3.ode.SecondaryEquations)
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        org.apache.commons.math3.ode.SecondaryEquations $r1;
        java.util.List $r2, $r6;
        boolean $z0;
        java.util.ArrayList $r3;
        org.apache.commons.math3.ode.FirstOrderDifferentialEquations $r4;
        int $i0, $i1;
        org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent $r5;
        java.lang.Object $r7;
        org.apache.commons.math3.ode.EquationsMapper $r8;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        $r1 := @parameter0: org.apache.commons.math3.ode.SecondaryEquations;

        $r2 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components> = $r3;

        $r4 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: org.apache.commons.math3.ode.FirstOrderDifferentialEquations primary>;

        $i0 = interfaceinvoke $r4.<org.apache.commons.math3.ode.FirstOrderDifferentialEquations: int getDimension()>();

     label1:
        $r2 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        $r5 = new org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent;

        specialinvoke $r5.<org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: void <init>(org.apache.commons.math3.ode.SecondaryEquations,int)>($r1, $i0);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r2 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i0 = $i0 + -1;

        return $i0;

     label2:
        $r2 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        $r6 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        $i0 = $i0 + -1;

        $r7 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r5 = (org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent) $r7;

        $r8 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: org.apache.commons.math3.ode.EquationsMapper access$000(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>($r5);

        $i0 = virtualinvoke $r8.<org.apache.commons.math3.ode.EquationsMapper: int getFirstIndex()>();

        $r8 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: org.apache.commons.math3.ode.EquationsMapper access$000(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>($r5);

        $i1 = virtualinvoke $r8.<org.apache.commons.math3.ode.EquationsMapper: int getDimension()>();

        $i0 = $i0 + $i1;

        goto label1;
    }
    public void computeDerivatives(double, double[], double[]) throws org.apache.commons.math3.exception.MaxCountExceededException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        double $d0;
        double[] $r1, $r2, $r3, $r4, $r12, $r13;
        org.apache.commons.math3.ode.EquationsMapper $r5;
        org.apache.commons.math3.ode.FirstOrderDifferentialEquations $r6;
        java.util.List $r7;
        java.util.Iterator $r8;
        boolean $z0;
        java.lang.Object $r9;
        org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent r10;
        org.apache.commons.math3.ode.SecondaryEquations $r11;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        $d0 := @parameter0: double;

        $r1 := @parameter1: double[];

        $r2 := @parameter2: double[];

        $r5 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: org.apache.commons.math3.ode.EquationsMapper primaryMapper>;

        $r3 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] primaryState>;

        virtualinvoke $r5.<org.apache.commons.math3.ode.EquationsMapper: void extractEquationData(double[],double[])>($r1, $r3);

        $r6 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: org.apache.commons.math3.ode.FirstOrderDifferentialEquations primary>;

        $r4 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] primaryState>;

        $r3 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] primaryStateDot>;

        interfaceinvoke $r6.<org.apache.commons.math3.ode.FirstOrderDifferentialEquations: void computeDerivatives(double,double[],double[])>($d0, $r4, $r3);

        $r7 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent) $r9;

        $r5 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: org.apache.commons.math3.ode.EquationsMapper access$000(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>(r10);

        $r3 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: double[] access$100(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>(r10);

        virtualinvoke $r5.<org.apache.commons.math3.ode.EquationsMapper: void extractEquationData(double[],double[])>($r1, $r3);

        $r11 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: org.apache.commons.math3.ode.SecondaryEquations access$300(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>(r10);

        $r3 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] primaryState>;

        $r4 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] primaryStateDot>;

        $r12 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: double[] access$100(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>(r10);

        $r13 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: double[] access$200(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>(r10);

        interfaceinvoke $r11.<org.apache.commons.math3.ode.SecondaryEquations: void computeDerivatives(double,double[],double[],double[],double[])>($d0, $r3, $r4, $r12, $r13);

        $r5 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: org.apache.commons.math3.ode.EquationsMapper access$000(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>(r10);

        $r3 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: double[] access$200(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>(r10);

        virtualinvoke $r5.<org.apache.commons.math3.ode.EquationsMapper: void insertEquationData(double[],double[])>($r3, $r2);

        goto label1;

     label2:
        $r5 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: org.apache.commons.math3.ode.EquationsMapper primaryMapper>;

        $r1 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] primaryStateDot>;

        virtualinvoke $r5.<org.apache.commons.math3.ode.EquationsMapper: void insertEquationData(double[],double[])>($r1, $r2);

        return;
    }
    public double[] getCompleteState() throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        double[] r1, $r3;
        int $i0;
        org.apache.commons.math3.ode.EquationsMapper $r2;
        java.util.List $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent r7;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        $i0 = virtualinvoke r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: int getTotalDimension()>();

        r1 = newarray (double)[$i0];

        $r2 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: org.apache.commons.math3.ode.EquationsMapper primaryMapper>;

        $r3 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] primaryState>;

        virtualinvoke $r2.<org.apache.commons.math3.ode.EquationsMapper: void insertEquationData(double[],double[])>($r3, r1);

        $r4 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent) $r6;

        $r2 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: org.apache.commons.math3.ode.EquationsMapper access$000(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>(r7);

        $r3 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: double[] access$100(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>(r7);

        virtualinvoke $r2.<org.apache.commons.math3.ode.EquationsMapper: void insertEquationData(double[],double[])>($r3, r1);

        goto label1;

     label2:
        return r1;
    }
    public org.apache.commons.math3.ode.FirstOrderDifferentialEquations getPrimary()
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        org.apache.commons.math3.ode.FirstOrderDifferentialEquations r1;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        r1 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: org.apache.commons.math3.ode.FirstOrderDifferentialEquations primary>;

        return r1;
    }
    public org.apache.commons.math3.ode.EquationsMapper getPrimaryMapper()
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        org.apache.commons.math3.ode.EquationsMapper r1;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        r1 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: org.apache.commons.math3.ode.EquationsMapper primaryMapper>;

        return r1;
    }
    public double[] getPrimaryState()
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        java.lang.Object $r1;
        double[] $r2;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        $r2 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] primaryState>;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (double[]) $r1;

        return $r2;
    }
    public double[] getPrimaryStateDot()
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        java.lang.Object $r1;
        double[] $r2;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        $r2 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] primaryStateDot>;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (double[]) $r1;

        return $r2;
    }
    public org.apache.commons.math3.ode.EquationsMapper[] getSecondaryMappers()
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        org.apache.commons.math3.ode.EquationsMapper[] r1;
        java.util.List $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent $r4;
        org.apache.commons.math3.ode.EquationsMapper $r5;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        $r2 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r1 = newarray (org.apache.commons.math3.ode.EquationsMapper)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof r1;

        if $i0 >= $i1 goto label2;

        $r2 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent) $r3;

        $r5 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: org.apache.commons.math3.ode.EquationsMapper access$000(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>($r4);

        r1[$i0] = $r5;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r1;
    }
    public double[] getSecondaryState(int)
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        int $i0;
        java.util.List $r1;
        java.lang.Object $r2;
        org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent $r3;
        double[] $r4;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        $i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent) $r2;

        $r4 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: double[] access$100(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>($r3);

        $r2 = virtualinvoke $r4.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (double[]) $r2;

        return $r4;
    }
    public double[] getSecondaryStateDot(int)
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        int $i0;
        java.util.List $r1;
        java.lang.Object $r2;
        org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent $r3;
        double[] $r4;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        $i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent) $r2;

        $r4 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: double[] access$200(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>($r3);

        $r2 = virtualinvoke $r4.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (double[]) $r2;

        return $r4;
    }
    public double getTime()
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        double d0;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        d0 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double time>;

        return d0;
    }
    public int getTotalDimension()
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        java.util.List $r1, $r3;
        boolean $z0;
        org.apache.commons.math3.ode.EquationsMapper $r2;
        int $i0, $i1;
        java.lang.Object $r4;
        org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent $r5;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        $r1 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: org.apache.commons.math3.ode.EquationsMapper primaryMapper>;

        $i0 = virtualinvoke $r2.<org.apache.commons.math3.ode.EquationsMapper: int getDimension()>();

        return $i0;

     label1:
        $r1 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        $r3 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i0 = $i0 + -1;

        $r4 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r5 = (org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent) $r4;

        $r2 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: org.apache.commons.math3.ode.EquationsMapper access$000(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>($r5);

        $i0 = virtualinvoke $r2.<org.apache.commons.math3.ode.EquationsMapper: int getFirstIndex()>();

        $i1 = virtualinvoke $r2.<org.apache.commons.math3.ode.EquationsMapper: int getDimension()>();

        $i0 = $i0 + $i1;

        return $i0;
    }
    public void setCompleteState(double[]) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        double[] $r1, $r4;
        int $i0, $i1;
        org.apache.commons.math3.exception.DimensionMismatchException $r2;
        org.apache.commons.math3.ode.EquationsMapper $r3;
        java.util.List $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;
        org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent r8;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        $r1 := @parameter0: double[];

        $i0 = lengthof $r1;

        $i1 = virtualinvoke r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: int getTotalDimension()>();

        if $i0 == $i1 goto label1;

        $r2 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i0 = lengthof $r1;

        $i1 = virtualinvoke r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: int getTotalDimension()>();

        specialinvoke $r2.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i0, $i1);

        throw $r2;

     label1:
        $r3 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: org.apache.commons.math3.ode.EquationsMapper primaryMapper>;

        $r4 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] primaryState>;

        virtualinvoke $r3.<org.apache.commons.math3.ode.EquationsMapper: void extractEquationData(double[],double[])>($r1, $r4);

        $r5 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent) $r7;

        $r3 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: org.apache.commons.math3.ode.EquationsMapper access$000(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>(r8);

        $r4 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: double[] access$100(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>(r8);

        virtualinvoke $r3.<org.apache.commons.math3.ode.EquationsMapper: void extractEquationData(double[],double[])>($r1, $r4);

        goto label2;

     label3:
        return;
    }
    public void setPrimaryState(double[]) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        double[] $r1, $r2;
        int $i0, $i1;
        org.apache.commons.math3.exception.DimensionMismatchException $r3;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        $r1 := @parameter0: double[];

        $i0 = lengthof $r1;

        $r2 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] primaryState>;

        $i1 = lengthof $r2;

        if $i0 == $i1 goto label1;

        $r3 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i0 = lengthof $r1;

        $r1 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] primaryState>;

        $i1 = lengthof $r1;

        specialinvoke $r3.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i0, $i1);

        throw $r3;

     label1:
        $r2 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] primaryState>;

        $i0 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i0);

        return;
    }
    public void setSecondaryState(int, double[]) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        int $i0, $i1;
        double[] $r1, $r5;
        java.util.List $r2;
        java.lang.Object $r3;
        org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent $r4;
        org.apache.commons.math3.exception.DimensionMismatchException $r6;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        $i0 := @parameter0: int;

        $r1 := @parameter1: double[];

        $r2 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent) $r3;

        $r5 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: double[] access$100(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>($r4);

        $i0 = lengthof $r1;

        $i1 = lengthof $r5;

        if $i0 == $i1 goto label1;

        $r6 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i0 = lengthof $r1;

        $i1 = lengthof $r5;

        specialinvoke $r6.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i0, $i1);

        throw $r6;

     label1:
        $i0 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r5, 0, $i0);

        return;
    }
    public void setTime(double)
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        double $d0;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        $d0 := @parameter0: double;

        r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double time> = $d0;

        return;
    }
