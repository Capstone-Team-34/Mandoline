org.apache.commons.math3.ode.nonstiff.GillIntegrator extends org.apache.commons.math3.ode.nonstiff.RungeKuttaIntegrator
private static final double[][] STATIC_A
private static final double[] STATIC_B
private static final double[] STATIC_C
    static void <clinit>()
    {
        double[] $r0;
        double[][] $r1;
        double $d0;

        $r0 = newarray (double)[3];

        $r0[0] = 0.5;

        $r0[1] = 0.5;

        $r0[2] = 1.0;

        <org.apache.commons.math3.ode.nonstiff.GillIntegrator: double[] STATIC_C> = $r0;

        $r1 = newarray (double[])[3];

        $r0 = newarray (double)[1];

        $r0[0] = 0.5;

        $r1[0] = $r0;

        $r0 = newarray (double)[2];

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(2.0);

        $d0 = $d0 - 1.0;

        $d0 = $d0 / 2.0;

        $r0[0] = $d0;

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(2.0);

        $d0 = 2.0 - $d0;

        $d0 = $d0 / 2.0;

        $r0[1] = $d0;

        $r1[1] = $r0;

        $r0 = newarray (double)[3];

        $r0[0] = 0.0;

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(2.0);

        $d0 = neg $d0;

        $d0 = $d0 / 2.0;

        $r0[1] = $d0;

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(2.0);

        $d0 = $d0 + 2.0;

        $d0 = $d0 / 2.0;

        $r0[2] = $d0;

        $r1[2] = $r0;

        <org.apache.commons.math3.ode.nonstiff.GillIntegrator: double[][] STATIC_A> = $r1;

        $r0 = newarray (double)[4];

        $r0[0] = 0.16666666666666666;

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(2.0);

        $d0 = 2.0 - $d0;

        $d0 = $d0 / 6.0;

        $r0[1] = $d0;

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(2.0);

        $d0 = $d0 + 2.0;

        $d0 = $d0 / 6.0;

        $r0[2] = $d0;

        $r0[3] = 0.16666666666666666;

        <org.apache.commons.math3.ode.nonstiff.GillIntegrator: double[] STATIC_B> = $r0;

        return;
    }
    public void <init>(double)
    {
        org.apache.commons.math3.ode.nonstiff.GillIntegrator r0;
        double $d0;
        double[] $r1, $r3;
        double[][] $r2;
        org.apache.commons.math3.ode.nonstiff.GillStepInterpolator $r4;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GillIntegrator;

        $d0 := @parameter0: double;

        $r1 = <org.apache.commons.math3.ode.nonstiff.GillIntegrator: double[] STATIC_C>;

        $r2 = <org.apache.commons.math3.ode.nonstiff.GillIntegrator: double[][] STATIC_A>;

        $r3 = <org.apache.commons.math3.ode.nonstiff.GillIntegrator: double[] STATIC_B>;

        $r4 = new org.apache.commons.math3.ode.nonstiff.GillStepInterpolator;

        specialinvoke $r4.<org.apache.commons.math3.ode.nonstiff.GillStepInterpolator: void <init>()>();

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.RungeKuttaIntegrator: void <init>(java.lang.String,double[],double[][],double[],org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator,double)>("Gill", $r1, $r2, $r3, $r4, $d0);

        return;
    }
