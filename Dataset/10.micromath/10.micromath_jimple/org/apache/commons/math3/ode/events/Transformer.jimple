org.apache.commons.math3.ode.events.Transformer extends java.lang.Enum
private static final org.apache.commons.math3.ode.events.Transformer[] $VALUES
public static final enum org.apache.commons.math3.ode.events.Transformer MAX
public static final enum org.apache.commons.math3.ode.events.Transformer MIN
public static final enum org.apache.commons.math3.ode.events.Transformer MINUS
public static final enum org.apache.commons.math3.ode.events.Transformer PLUS
public static final enum org.apache.commons.math3.ode.events.Transformer UNINITIALIZED
    static void <clinit>()
    {
        org.apache.commons.math3.ode.events.Transformer$1 $r0;
        org.apache.commons.math3.ode.events.Transformer$2 $r1;
        org.apache.commons.math3.ode.events.Transformer$3 $r2;
        org.apache.commons.math3.ode.events.Transformer$4 $r3;
        org.apache.commons.math3.ode.events.Transformer$5 $r4;
        org.apache.commons.math3.ode.events.Transformer[] $r5;
        org.apache.commons.math3.ode.events.Transformer $r6;

        $r0 = new org.apache.commons.math3.ode.events.Transformer$1;

        specialinvoke $r0.<org.apache.commons.math3.ode.events.Transformer$1: void <init>(java.lang.String,int)>("UNINITIALIZED", 0);

        <org.apache.commons.math3.ode.events.Transformer: org.apache.commons.math3.ode.events.Transformer UNINITIALIZED> = $r0;

        $r1 = new org.apache.commons.math3.ode.events.Transformer$2;

        specialinvoke $r1.<org.apache.commons.math3.ode.events.Transformer$2: void <init>(java.lang.String,int)>("PLUS", 1);

        <org.apache.commons.math3.ode.events.Transformer: org.apache.commons.math3.ode.events.Transformer PLUS> = $r1;

        $r2 = new org.apache.commons.math3.ode.events.Transformer$3;

        specialinvoke $r2.<org.apache.commons.math3.ode.events.Transformer$3: void <init>(java.lang.String,int)>("MINUS", 2);

        <org.apache.commons.math3.ode.events.Transformer: org.apache.commons.math3.ode.events.Transformer MINUS> = $r2;

        $r3 = new org.apache.commons.math3.ode.events.Transformer$4;

        specialinvoke $r3.<org.apache.commons.math3.ode.events.Transformer$4: void <init>(java.lang.String,int)>("MIN", 3);

        <org.apache.commons.math3.ode.events.Transformer: org.apache.commons.math3.ode.events.Transformer MIN> = $r3;

        $r4 = new org.apache.commons.math3.ode.events.Transformer$5;

        specialinvoke $r4.<org.apache.commons.math3.ode.events.Transformer$5: void <init>(java.lang.String,int)>("MAX", 4);

        <org.apache.commons.math3.ode.events.Transformer: org.apache.commons.math3.ode.events.Transformer MAX> = $r4;

        $r5 = newarray (org.apache.commons.math3.ode.events.Transformer)[5];

        $r6 = <org.apache.commons.math3.ode.events.Transformer: org.apache.commons.math3.ode.events.Transformer UNINITIALIZED>;

        $r5[0] = $r6;

        $r6 = <org.apache.commons.math3.ode.events.Transformer: org.apache.commons.math3.ode.events.Transformer PLUS>;

        $r5[1] = $r6;

        $r6 = <org.apache.commons.math3.ode.events.Transformer: org.apache.commons.math3.ode.events.Transformer MINUS>;

        $r5[2] = $r6;

        $r6 = <org.apache.commons.math3.ode.events.Transformer: org.apache.commons.math3.ode.events.Transformer MIN>;

        $r5[3] = $r6;

        $r6 = <org.apache.commons.math3.ode.events.Transformer: org.apache.commons.math3.ode.events.Transformer MAX>;

        $r5[4] = $r6;

        <org.apache.commons.math3.ode.events.Transformer: org.apache.commons.math3.ode.events.Transformer[] $VALUES> = $r5;

        return;
    }
    private void <init>(java.lang.String, int)
    {
        org.apache.commons.math3.ode.events.Transformer r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: org.apache.commons.math3.ode.events.Transformer;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }
    void <init>(java.lang.String, int, org.apache.commons.math3.ode.events.Transformer$1)
    {
        org.apache.commons.math3.ode.events.Transformer r0;
        java.lang.String $r1;
        int $i0;
        org.apache.commons.math3.ode.events.Transformer$1 $r2;

        r0 := @this: org.apache.commons.math3.ode.events.Transformer;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: org.apache.commons.math3.ode.events.Transformer$1;

        specialinvoke r0.<org.apache.commons.math3.ode.events.Transformer: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }
    public static org.apache.commons.math3.ode.events.Transformer valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        org.apache.commons.math3.ode.events.Transformer $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/commons/math3/ode/events/Transformer;", $r0);

        $r2 = (org.apache.commons.math3.ode.events.Transformer) $r1;

        return $r2;
    }
    public static org.apache.commons.math3.ode.events.Transformer[] values()
    {
        java.lang.Object $r0;
        org.apache.commons.math3.ode.events.Transformer[] $r1;

        $r1 = <org.apache.commons.math3.ode.events.Transformer: org.apache.commons.math3.ode.events.Transformer[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (org.apache.commons.math3.ode.events.Transformer[]) $r0;

        return $r1;
    }
protected abstract double transformed(double) { 
// no body
} 
