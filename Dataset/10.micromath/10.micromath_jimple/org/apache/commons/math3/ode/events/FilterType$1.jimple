org.apache.commons.math3.ode.events.FilterType$1 extends org.apache.commons.math3.ode.events.FilterType
    void <init>(java.lang.String, int)
    {
        org.apache.commons.math3.ode.events.FilterType$1 r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: org.apache.commons.math3.ode.events.FilterType$1;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<org.apache.commons.math3.ode.events.FilterType: void <init>(java.lang.String,int,org.apache.commons.math3.ode.events.FilterType$1)>($r1, $i0, null);

        return;
    }
    protected boolean getTriggeredIncreasing()
    {
        org.apache.commons.math3.ode.events.FilterType$1 r0;

        r0 := @this: org.apache.commons.math3.ode.events.FilterType$1;

        return 0;
    }
    protected org.apache.commons.math3.ode.events.Transformer selectTransformer(org.apache.commons.math3.ode.events.Transformer, double, boolean)
    {
        org.apache.commons.math3.ode.events.FilterType$1 r0;
        double $d0;
        boolean $z0;
        org.apache.commons.math3.ode.events.Transformer r1;
        int[] $r2;
        int $i0;
        org.apache.commons.math3.exception.MathInternalError $r3;
        byte $b1;

        r0 := @this: org.apache.commons.math3.ode.events.FilterType$1;

        r1 := @parameter0: org.apache.commons.math3.ode.events.Transformer;

        $d0 := @parameter1: double;

        $z0 := @parameter2: boolean;

        if $z0 == 0 goto label09;

        $r2 = <org.apache.commons.math3.ode.events.FilterType$3: int[] $SwitchMap$org$apache$commons$math3$ode$events$Transformer>;

        $i0 = virtualinvoke r1.<org.apache.commons.math3.ode.events.Transformer: int ordinal()>();

        $i0 = $r2[$i0];

        lookupswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label07;
            case 5: goto label08;
            default: goto label01;
        };

     label01:
        $r3 = new org.apache.commons.math3.exception.MathInternalError;

        specialinvoke $r3.<org.apache.commons.math3.exception.MathInternalError: void <init>()>();

        throw $r3;

     label02:
        $b1 = $d0 cmpl 0.0;

        if $b1 <= 0 goto label03;

        r1 = <org.apache.commons.math3.ode.events.Transformer: org.apache.commons.math3.ode.events.Transformer MAX>;

        return r1;

     label03:
        $b1 = $d0 cmpg 0.0;

        if $b1 >= 0 goto label04;

        r1 = <org.apache.commons.math3.ode.events.Transformer: org.apache.commons.math3.ode.events.Transformer PLUS>;

        return r1;

     label04:
        r1 = <org.apache.commons.math3.ode.events.Transformer: org.apache.commons.math3.ode.events.Transformer UNINITIALIZED>;

        return r1;

     label05:
        $b1 = $d0 cmpl 0.0;

        if $b1 < 0 goto label18;

        r1 = <org.apache.commons.math3.ode.events.Transformer: org.apache.commons.math3.ode.events.Transformer MIN>;

        return r1;

     label06:
        $b1 = $d0 cmpl 0.0;

        if $b1 < 0 goto label18;

        r1 = <org.apache.commons.math3.ode.events.Transformer: org.apache.commons.math3.ode.events.Transformer MAX>;

        return r1;

     label07:
        $b1 = $d0 cmpg 0.0;

        if $b1 > 0 goto label18;

        r1 = <org.apache.commons.math3.ode.events.Transformer: org.apache.commons.math3.ode.events.Transformer MINUS>;

        return r1;

     label08:
        $b1 = $d0 cmpg 0.0;

        if $b1 > 0 goto label18;

        r1 = <org.apache.commons.math3.ode.events.Transformer: org.apache.commons.math3.ode.events.Transformer PLUS>;

        return r1;

     label09:
        $r2 = <org.apache.commons.math3.ode.events.FilterType$3: int[] $SwitchMap$org$apache$commons$math3$ode$events$Transformer>;

        $i0 = virtualinvoke r1.<org.apache.commons.math3.ode.events.Transformer: int ordinal()>();

        $i0 = $r2[$i0];

        lookupswitch($i0)
        {
            case 1: goto label11;
            case 2: goto label14;
            case 3: goto label15;
            case 4: goto label16;
            case 5: goto label17;
            default: goto label10;
        };

     label10:
        $r3 = new org.apache.commons.math3.exception.MathInternalError;

        specialinvoke $r3.<org.apache.commons.math3.exception.MathInternalError: void <init>()>();

        throw $r3;

     label11:
        $b1 = $d0 cmpl 0.0;

        if $b1 <= 0 goto label12;

        r1 = <org.apache.commons.math3.ode.events.Transformer: org.apache.commons.math3.ode.events.Transformer MINUS>;

        return r1;

     label12:
        $b1 = $d0 cmpg 0.0;

        if $b1 >= 0 goto label13;

        r1 = <org.apache.commons.math3.ode.events.Transformer: org.apache.commons.math3.ode.events.Transformer MIN>;

        return r1;

     label13:
        r1 = <org.apache.commons.math3.ode.events.Transformer: org.apache.commons.math3.ode.events.Transformer UNINITIALIZED>;

        return r1;

     label14:
        $b1 = $d0 cmpg 0.0;

        if $b1 > 0 goto label18;

        r1 = <org.apache.commons.math3.ode.events.Transformer: org.apache.commons.math3.ode.events.Transformer MAX>;

        return r1;

     label15:
        $b1 = $d0 cmpg 0.0;

        if $b1 > 0 goto label18;

        r1 = <org.apache.commons.math3.ode.events.Transformer: org.apache.commons.math3.ode.events.Transformer MIN>;

        return r1;

     label16:
        $b1 = $d0 cmpl 0.0;

        if $b1 < 0 goto label18;

        r1 = <org.apache.commons.math3.ode.events.Transformer: org.apache.commons.math3.ode.events.Transformer PLUS>;

        return r1;

     label17:
        $b1 = $d0 cmpl 0.0;

        if $b1 < 0 goto label18;

        r1 = <org.apache.commons.math3.ode.events.Transformer: org.apache.commons.math3.ode.events.Transformer MINUS>;

     label18:
        return r1;
    }
