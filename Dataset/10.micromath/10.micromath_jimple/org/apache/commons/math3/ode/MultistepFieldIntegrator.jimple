org.apache.commons.math3.ode.MultistepFieldIntegrator extends org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator
private double exp
private double maxGrowth
private double minReduction
private final int nSteps
protected org.apache.commons.math3.linear.Array2DRowFieldMatrix nordsieck
private double safety
protected org.apache.commons.math3.RealFieldElement[] scaled
private org.apache.commons.math3.ode.FirstOrderFieldIntegrator starter
    protected void <init>(org.apache.commons.math3.Field, java.lang.String, int, int, double, double, double, double) throws org.apache.commons.math3.exception.NumberIsTooSmallException
    {
        org.apache.commons.math3.ode.MultistepFieldIntegrator r0;
        org.apache.commons.math3.Field r1;
        java.lang.String $r2;
        int $i0, $i1;
        double $d0, $d1, $d2, $d3;
        org.apache.commons.math3.exception.NumberIsTooSmallException $r3;
        org.apache.commons.math3.exception.util.LocalizedFormats $r4;
        java.lang.Integer $r5, $r6;
        org.apache.commons.math3.ode.nonstiff.DormandPrince853FieldIntegrator $r7;

        r0 := @this: org.apache.commons.math3.ode.MultistepFieldIntegrator;

        r1 := @parameter0: org.apache.commons.math3.Field;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $d0 := @parameter4: double;

        $d1 := @parameter5: double;

        $d2 := @parameter6: double;

        $d3 := @parameter7: double;

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: void <init>(org.apache.commons.math3.Field,java.lang.String,double,double,double,double)>(r1, $r2, $d0, $d1, $d2, $d3);

        if $i0 >= 2 goto label1;

        $r3 = new org.apache.commons.math3.exception.NumberIsTooSmallException;

        $r4 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats INTEGRATION_METHOD_NEEDS_AT_LEAST_TWO_PREVIOUS_POINTS>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        specialinvoke $r3.<org.apache.commons.math3.exception.NumberIsTooSmallException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)>($r4, $r5, $r6, 1);

        throw $r3;

     label1:
        $r7 = new org.apache.commons.math3.ode.nonstiff.DormandPrince853FieldIntegrator;

        specialinvoke $r7.<org.apache.commons.math3.ode.nonstiff.DormandPrince853FieldIntegrator: void <init>(org.apache.commons.math3.Field,double,double,double,double)>(r1, $d0, $d1, $d2, $d3);

        r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: org.apache.commons.math3.ode.FirstOrderFieldIntegrator starter> = $r7;

        r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: int nSteps> = $i0;

        $d0 = (double) $i1;

        $d0 = -1.0 / $d0;

        r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: double exp> = $d0;

        virtualinvoke r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: void setSafety(double)>(0.9);

        virtualinvoke r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: void setMinReduction(double)>(0.2);

        $d0 = r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: double exp>;

        $d0 = neg $d0;

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,double)>(2.0, $d0);

        virtualinvoke r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: void setMaxGrowth(double)>($d0);

        return;
    }
    protected void <init>(org.apache.commons.math3.Field, java.lang.String, int, int, double, double, double[], double[])
    {
        org.apache.commons.math3.ode.MultistepFieldIntegrator r0;
        org.apache.commons.math3.Field r1;
        java.lang.String $r2;
        int $i0, $i1;
        double $d0, $d1;
        double[] $r3, $r4;
        org.apache.commons.math3.ode.nonstiff.DormandPrince853FieldIntegrator $r5;

        r0 := @this: org.apache.commons.math3.ode.MultistepFieldIntegrator;

        r1 := @parameter0: org.apache.commons.math3.Field;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $d0 := @parameter4: double;

        $d1 := @parameter5: double;

        $r3 := @parameter6: double[];

        $r4 := @parameter7: double[];

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: void <init>(org.apache.commons.math3.Field,java.lang.String,double,double,double[],double[])>(r1, $r2, $d0, $d1, $r3, $r4);

        $r5 = new org.apache.commons.math3.ode.nonstiff.DormandPrince853FieldIntegrator;

        specialinvoke $r5.<org.apache.commons.math3.ode.nonstiff.DormandPrince853FieldIntegrator: void <init>(org.apache.commons.math3.Field,double,double,double[],double[])>(r1, $d0, $d1, $r3, $r4);

        r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: org.apache.commons.math3.ode.FirstOrderFieldIntegrator starter> = $r5;

        r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: int nSteps> = $i0;

        $d0 = (double) $i1;

        $d0 = -1.0 / $d0;

        r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: double exp> = $d0;

        virtualinvoke r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: void setSafety(double)>(0.9);

        virtualinvoke r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: void setMinReduction(double)>(0.2);

        $d0 = r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: double exp>;

        $d0 = neg $d0;

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,double)>(2.0, $d0);

        virtualinvoke r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: void setMaxGrowth(double)>($d0);

        return;
    }
    protected org.apache.commons.math3.RealFieldElement computeStepGrowShrinkFactor(org.apache.commons.math3.RealFieldElement)
    {
        org.apache.commons.math3.ode.MultistepFieldIntegrator r0;
        org.apache.commons.math3.RealFieldElement r1, $r4, $r5;
        double $d0;
        org.apache.commons.math3.Field $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.math3.ode.MultistepFieldIntegrator;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        $r2 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        $r4 = (org.apache.commons.math3.RealFieldElement) $r3;

        $d0 = r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: double maxGrowth>;

        $r3 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>($d0);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r2 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        $r5 = (org.apache.commons.math3.RealFieldElement) $r3;

        $d0 = r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: double minReduction>;

        $r3 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>($d0);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r3;

        $d0 = r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: double exp>;

        $r3 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object pow(double)>($d0);

        r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        $d0 = r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: double safety>;

        $r3 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        r1 = staticinvoke <org.apache.commons.math3.util.MathUtils: org.apache.commons.math3.RealFieldElement max(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r5, r1);

        r1 = staticinvoke <org.apache.commons.math3.util.MathUtils: org.apache.commons.math3.RealFieldElement min(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r4, r1);

        return r1;
    }
    public double getMaxGrowth()
    {
        org.apache.commons.math3.ode.MultistepFieldIntegrator r0;
        double d0;

        r0 := @this: org.apache.commons.math3.ode.MultistepFieldIntegrator;

        d0 = r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: double maxGrowth>;

        return d0;
    }
    public double getMinReduction()
    {
        org.apache.commons.math3.ode.MultistepFieldIntegrator r0;
        double d0;

        r0 := @this: org.apache.commons.math3.ode.MultistepFieldIntegrator;

        d0 = r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: double minReduction>;

        return d0;
    }
    public int getNSteps()
    {
        org.apache.commons.math3.ode.MultistepFieldIntegrator r0;
        int i0;

        r0 := @this: org.apache.commons.math3.ode.MultistepFieldIntegrator;

        i0 = r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: int nSteps>;

        return i0;
    }
    public double getSafety()
    {
        org.apache.commons.math3.ode.MultistepFieldIntegrator r0;
        double d0;

        r0 := @this: org.apache.commons.math3.ode.MultistepFieldIntegrator;

        d0 = r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: double safety>;

        return d0;
    }
    public org.apache.commons.math3.ode.FirstOrderFieldIntegrator getStarterIntegrator()
    {
        org.apache.commons.math3.ode.MultistepFieldIntegrator r0;
        org.apache.commons.math3.ode.FirstOrderFieldIntegrator r1;

        r0 := @this: org.apache.commons.math3.ode.MultistepFieldIntegrator;

        r1 = r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: org.apache.commons.math3.ode.FirstOrderFieldIntegrator starter>;

        return r1;
    }
protected abstract org.apache.commons.math3.linear.Array2DRowFieldMatrix initializeHighOrderDerivatives(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement[], org.apache.commons.math3.RealFieldElement[][], org.apache.commons.math3.RealFieldElement[][]) { 
// no body
} 
    protected void rescale(org.apache.commons.math3.RealFieldElement)
    {
        org.apache.commons.math3.ode.MultistepFieldIntegrator r0;
        org.apache.commons.math3.RealFieldElement r1, $r3, $r6, $r10;
        org.apache.commons.math3.RealFieldElement[] r2, $r5;
        java.lang.Object $r4;
        int i0, $i1, $i2;
        org.apache.commons.math3.linear.Array2DRowFieldMatrix $r7;
        org.apache.commons.math3.FieldElement[][] $r8;
        org.apache.commons.math3.RealFieldElement[][] r9;

        r0 := @this: org.apache.commons.math3.ode.MultistepFieldIntegrator;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: org.apache.commons.math3.RealFieldElement getStepSize()>();

        $r4 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(java.lang.Object)>($r3);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        i0 = 0;

     label1:
        r2 = r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: org.apache.commons.math3.RealFieldElement[] scaled>;

        $i1 = lengthof r2;

        if i0 >= $i1 goto label2;

        r2 = r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: org.apache.commons.math3.RealFieldElement[] scaled>;

        $r5 = r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: org.apache.commons.math3.RealFieldElement[] scaled>;

        $r6 = $r5[i0];

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r3);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        r2[i0] = $r6;

        i0 = i0 + 1;

        goto label1;

     label2:
        $r7 = r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: org.apache.commons.math3.linear.Array2DRowFieldMatrix nordsieck>;

        $r8 = virtualinvoke $r7.<org.apache.commons.math3.linear.Array2DRowFieldMatrix: org.apache.commons.math3.FieldElement[][] getDataRef()>();

        r9 = (org.apache.commons.math3.RealFieldElement[][]) $r8;

        $r6 = $r3;

        i0 = 0;

     label3:
        $i1 = lengthof r9;

        if i0 >= $i1 goto label6;

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r3);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        r2 = r9[i0];

        $i1 = 0;

     label4:
        $i2 = lengthof r2;

        if $i1 >= $i2 goto label5;

        $r10 = r2[$i1];

        $r4 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r6);

        $r10 = (org.apache.commons.math3.RealFieldElement) $r4;

        r2[$i1] = $r10;

        $i1 = $i1 + 1;

        goto label4;

     label5:
        i0 = i0 + 1;

        goto label3;

     label6:
        virtualinvoke r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: void setStepSize(org.apache.commons.math3.RealFieldElement)>(r1);

        return;
    }
    public void setMaxGrowth(double)
    {
        org.apache.commons.math3.ode.MultistepFieldIntegrator r0;
        double $d0;

        r0 := @this: org.apache.commons.math3.ode.MultistepFieldIntegrator;

        $d0 := @parameter0: double;

        r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: double maxGrowth> = $d0;

        return;
    }
    public void setMinReduction(double)
    {
        org.apache.commons.math3.ode.MultistepFieldIntegrator r0;
        double $d0;

        r0 := @this: org.apache.commons.math3.ode.MultistepFieldIntegrator;

        $d0 := @parameter0: double;

        r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: double minReduction> = $d0;

        return;
    }
    public void setSafety(double)
    {
        org.apache.commons.math3.ode.MultistepFieldIntegrator r0;
        double $d0;

        r0 := @this: org.apache.commons.math3.ode.MultistepFieldIntegrator;

        $d0 := @parameter0: double;

        r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: double safety> = $d0;

        return;
    }
    public void setStarterIntegrator(org.apache.commons.math3.ode.FirstOrderFieldIntegrator)
    {
        org.apache.commons.math3.ode.MultistepFieldIntegrator r0;
        org.apache.commons.math3.ode.FirstOrderFieldIntegrator r1;

        r0 := @this: org.apache.commons.math3.ode.MultistepFieldIntegrator;

        r1 := @parameter0: org.apache.commons.math3.ode.FirstOrderFieldIntegrator;

        r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: org.apache.commons.math3.ode.FirstOrderFieldIntegrator starter> = r1;

        return;
    }
    protected void start(org.apache.commons.math3.ode.FieldExpandableODE, org.apache.commons.math3.ode.FieldODEState, org.apache.commons.math3.RealFieldElement) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.MaxCountExceededException, org.apache.commons.math3.exception.NoBracketingException
    {
        org.apache.commons.math3.ode.MultistepFieldIntegrator r0;
        org.apache.commons.math3.ode.FieldExpandableODE r1;
        org.apache.commons.math3.ode.FieldODEState r2;
        org.apache.commons.math3.RealFieldElement r3;
        org.apache.commons.math3.ode.MultistepFieldIntegrator$InitializationCompletedMarkerException r4;
        org.apache.commons.math3.ode.FirstOrderFieldIntegrator $r5;
        org.apache.commons.math3.ode.MultistepFieldIntegrator$FieldNordsieckInitializer $r6;
        org.apache.commons.math3.ode.FieldEquationsMapper $r7;
        int $i0;
        org.apache.commons.math3.exception.MathIllegalStateException $r8;
        org.apache.commons.math3.exception.util.LocalizedFormats $r9;
        java.lang.Object[] $r10;
        org.apache.commons.math3.util.IntegerSequence$Incrementor $r11;

        r0 := @this: org.apache.commons.math3.ode.MultistepFieldIntegrator;

        r1 := @parameter0: org.apache.commons.math3.ode.FieldExpandableODE;

        r2 := @parameter1: org.apache.commons.math3.ode.FieldODEState;

        r3 := @parameter2: org.apache.commons.math3.RealFieldElement;

        $r5 = r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: org.apache.commons.math3.ode.FirstOrderFieldIntegrator starter>;

        interfaceinvoke $r5.<org.apache.commons.math3.ode.FirstOrderFieldIntegrator: void clearEventHandlers()>();

        $r5 = r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: org.apache.commons.math3.ode.FirstOrderFieldIntegrator starter>;

        interfaceinvoke $r5.<org.apache.commons.math3.ode.FirstOrderFieldIntegrator: void clearStepHandlers()>();

        $r5 = r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: org.apache.commons.math3.ode.FirstOrderFieldIntegrator starter>;

        $r6 = new org.apache.commons.math3.ode.MultistepFieldIntegrator$FieldNordsieckInitializer;

        $r7 = virtualinvoke r1.<org.apache.commons.math3.ode.FieldExpandableODE: org.apache.commons.math3.ode.FieldEquationsMapper getMapper()>();

        $i0 = r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: int nSteps>;

        $i0 = $i0 + 3;

        $i0 = $i0 / 2;

        specialinvoke $r6.<org.apache.commons.math3.ode.MultistepFieldIntegrator$FieldNordsieckInitializer: void <init>(org.apache.commons.math3.ode.MultistepFieldIntegrator,org.apache.commons.math3.ode.FieldEquationsMapper,int)>(r0, $r7, $i0);

        interfaceinvoke $r5.<org.apache.commons.math3.ode.FirstOrderFieldIntegrator: void addStepHandler(org.apache.commons.math3.ode.sampling.FieldStepHandler)>($r6);

        $r5 = r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: org.apache.commons.math3.ode.FirstOrderFieldIntegrator starter>;

     label1:
        interfaceinvoke $r5.<org.apache.commons.math3.ode.FirstOrderFieldIntegrator: org.apache.commons.math3.ode.FieldODEStateAndDerivative integrate(org.apache.commons.math3.ode.FieldExpandableODE,org.apache.commons.math3.ode.FieldODEState,org.apache.commons.math3.RealFieldElement)>(r1, r2, r3);

     label2:
        $r8 = new org.apache.commons.math3.exception.MathIllegalStateException;

        $r9 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats MULTISTEP_STARTER_STOPPED_EARLY>;

        $r10 = newarray (java.lang.Object)[0];

     label3:
        specialinvoke $r8.<org.apache.commons.math3.exception.MathIllegalStateException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r9, $r10);

     label4:
        throw $r8;

     label5:
        r4 := @caughtexception;

        $r11 = virtualinvoke r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: org.apache.commons.math3.util.IntegerSequence$Incrementor getEvaluationsCounter()>();

        $r5 = r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: org.apache.commons.math3.ode.FirstOrderFieldIntegrator starter>;

        $i0 = interfaceinvoke $r5.<org.apache.commons.math3.ode.FirstOrderFieldIntegrator: int getEvaluations()>();

        virtualinvoke $r11.<org.apache.commons.math3.util.IntegerSequence$Incrementor: void increment(int)>($i0);

        $r5 = r0.<org.apache.commons.math3.ode.MultistepFieldIntegrator: org.apache.commons.math3.ode.FirstOrderFieldIntegrator starter>;

        interfaceinvoke $r5.<org.apache.commons.math3.ode.FirstOrderFieldIntegrator: void clearStepHandlers()>();

        return;

        catch org.apache.commons.math3.ode.MultistepFieldIntegrator$InitializationCompletedMarkerException from label1 to label2 with label5;
        catch org.apache.commons.math3.ode.MultistepFieldIntegrator$InitializationCompletedMarkerException from label3 to label4 with label5;
    }
