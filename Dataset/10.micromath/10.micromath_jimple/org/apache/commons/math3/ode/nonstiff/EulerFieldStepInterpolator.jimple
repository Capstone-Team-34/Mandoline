org.apache.commons.math3.ode.nonstiff.EulerFieldStepInterpolator extends org.apache.commons.math3.ode.nonstiff.RungeKuttaFieldStepInterpolator
    void <init>(org.apache.commons.math3.Field, boolean, org.apache.commons.math3.RealFieldElement[][], org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.ode.FieldEquationsMapper)
    {
        org.apache.commons.math3.ode.nonstiff.EulerFieldStepInterpolator r0;
        org.apache.commons.math3.Field r1;
        boolean $z0;
        org.apache.commons.math3.RealFieldElement[][] r2;
        org.apache.commons.math3.ode.FieldODEStateAndDerivative r3, r4, r5, r6;
        org.apache.commons.math3.ode.FieldEquationsMapper r7;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.EulerFieldStepInterpolator;

        r1 := @parameter0: org.apache.commons.math3.Field;

        $z0 := @parameter1: boolean;

        r2 := @parameter2: org.apache.commons.math3.RealFieldElement[][];

        r3 := @parameter3: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        r4 := @parameter4: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        r5 := @parameter5: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        r6 := @parameter6: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        r7 := @parameter7: org.apache.commons.math3.ode.FieldEquationsMapper;

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.RungeKuttaFieldStepInterpolator: void <init>(org.apache.commons.math3.Field,boolean,org.apache.commons.math3.RealFieldElement[][],org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldEquationsMapper)>(r1, $z0, r2, r3, r4, r5, r6, r7);

        return;
    }
    protected org.apache.commons.math3.ode.FieldODEStateAndDerivative computeInterpolatedStateAndDerivatives(org.apache.commons.math3.ode.FieldEquationsMapper, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement)
    {
        org.apache.commons.math3.ode.nonstiff.EulerFieldStepInterpolator r0;
        org.apache.commons.math3.ode.FieldEquationsMapper r1;
        org.apache.commons.math3.RealFieldElement r2, r3, r4, r5;
        org.apache.commons.math3.ode.FieldODEStateAndDerivative $r6;
        double $d0;
        byte $b0;
        org.apache.commons.math3.RealFieldElement[] $r7, $r8;
        org.apache.commons.math3.Field $r9;
        java.lang.Object $r10;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.EulerFieldStepInterpolator;

        r1 := @parameter0: org.apache.commons.math3.ode.FieldEquationsMapper;

        r2 := @parameter1: org.apache.commons.math3.RealFieldElement;

        r3 := @parameter2: org.apache.commons.math3.RealFieldElement;

        r4 := @parameter3: org.apache.commons.math3.RealFieldElement;

        r5 := @parameter4: org.apache.commons.math3.RealFieldElement;

        $r6 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.EulerFieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getGlobalPreviousState()>();

        if $r6 == null goto label2;

        $d0 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg 0.5;

        if $b0 > 0 goto label2;

        $r7 = newarray (org.apache.commons.math3.RealFieldElement)[1];

        $r7[0] = r4;

        $r7 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.EulerFieldStepInterpolator: org.apache.commons.math3.RealFieldElement[] previousStateLinearCombination(org.apache.commons.math3.RealFieldElement[])>($r7);

        $r8 = newarray (org.apache.commons.math3.RealFieldElement)[1];

        $r9 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $r10 = interfaceinvoke $r9.<org.apache.commons.math3.Field: java.lang.Object getOne()>();

        r3 = (org.apache.commons.math3.RealFieldElement) $r10;

        $r8[0] = r3;

        $r8 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.EulerFieldStepInterpolator: org.apache.commons.math3.RealFieldElement[] derivativeLinearCombination(org.apache.commons.math3.RealFieldElement[])>($r8);

     label1:
        $r6 = new org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        specialinvoke $r6.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement[],org.apache.commons.math3.RealFieldElement[])>(r2, $r7, $r8);

        return $r6;

     label2:
        $r7 = newarray (org.apache.commons.math3.RealFieldElement)[1];

        $r10 = interfaceinvoke r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        r3 = (org.apache.commons.math3.RealFieldElement) $r10;

        $r7[0] = r3;

        $r7 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.EulerFieldStepInterpolator: org.apache.commons.math3.RealFieldElement[] currentStateLinearCombination(org.apache.commons.math3.RealFieldElement[])>($r7);

        $r8 = newarray (org.apache.commons.math3.RealFieldElement)[1];

        $r9 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $r10 = interfaceinvoke $r9.<org.apache.commons.math3.Field: java.lang.Object getOne()>();

        r3 = (org.apache.commons.math3.RealFieldElement) $r10;

        $r8[0] = r3;

        $r8 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.EulerFieldStepInterpolator: org.apache.commons.math3.RealFieldElement[] derivativeLinearCombination(org.apache.commons.math3.RealFieldElement[])>($r8);

        goto label1;
    }
    protected org.apache.commons.math3.ode.nonstiff.EulerFieldStepInterpolator create(org.apache.commons.math3.Field, boolean, org.apache.commons.math3.RealFieldElement[][], org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.ode.FieldEquationsMapper)
    {
        org.apache.commons.math3.ode.nonstiff.EulerFieldStepInterpolator r0;
        org.apache.commons.math3.Field r1;
        boolean $z0;
        org.apache.commons.math3.RealFieldElement[][] r2;
        org.apache.commons.math3.ode.FieldODEStateAndDerivative r3, r4, r5, r6;
        org.apache.commons.math3.ode.FieldEquationsMapper r7;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.EulerFieldStepInterpolator;

        r1 := @parameter0: org.apache.commons.math3.Field;

        $z0 := @parameter1: boolean;

        r2 := @parameter2: org.apache.commons.math3.RealFieldElement[][];

        r3 := @parameter3: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        r4 := @parameter4: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        r5 := @parameter5: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        r6 := @parameter6: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        r7 := @parameter7: org.apache.commons.math3.ode.FieldEquationsMapper;

        r0 = new org.apache.commons.math3.ode.nonstiff.EulerFieldStepInterpolator;

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.EulerFieldStepInterpolator: void <init>(org.apache.commons.math3.Field,boolean,org.apache.commons.math3.RealFieldElement[][],org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldEquationsMapper)>(r1, $z0, r2, r3, r4, r5, r6, r7);

        return r0;
    }
    protected volatile org.apache.commons.math3.ode.nonstiff.RungeKuttaFieldStepInterpolator create(org.apache.commons.math3.Field, boolean, org.apache.commons.math3.RealFieldElement[][], org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.ode.FieldEquationsMapper)
    {
        org.apache.commons.math3.ode.nonstiff.EulerFieldStepInterpolator r0;
        org.apache.commons.math3.Field $r1;
        boolean $z0;
        org.apache.commons.math3.RealFieldElement[][] $r2;
        org.apache.commons.math3.ode.FieldODEStateAndDerivative $r3, $r4, $r5, $r6;
        org.apache.commons.math3.ode.FieldEquationsMapper $r7;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.EulerFieldStepInterpolator;

        $r1 := @parameter0: org.apache.commons.math3.Field;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: org.apache.commons.math3.RealFieldElement[][];

        $r3 := @parameter3: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        $r4 := @parameter4: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        $r5 := @parameter5: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        $r6 := @parameter6: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        $r7 := @parameter7: org.apache.commons.math3.ode.FieldEquationsMapper;

        r0 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.EulerFieldStepInterpolator: org.apache.commons.math3.ode.nonstiff.EulerFieldStepInterpolator create(org.apache.commons.math3.Field,boolean,org.apache.commons.math3.RealFieldElement[][],org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldEquationsMapper)>($r1, $z0, $r2, $r3, $r4, $r5, $r6, $r7);

        return r0;
    }
