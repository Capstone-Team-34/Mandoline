org.apache.commons.math3.ode.FieldEquationsMapper extends java.lang.Object implements java.io.Serializable
private static final long serialVersionUID
private final int[] start
    void <init>(org.apache.commons.math3.ode.FieldEquationsMapper, int)
    {
        org.apache.commons.math3.ode.FieldEquationsMapper r0, r1;
        int $i0, $i1, $i2;
        int[] $r2, $r3;

        r0 := @this: org.apache.commons.math3.ode.FieldEquationsMapper;

        r1 := @parameter0: org.apache.commons.math3.ode.FieldEquationsMapper;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label3;

        $i2 = 0;

     label1:
        $i1 = $i2 + 2;

        $r2 = newarray (int)[$i1];

        r0.<org.apache.commons.math3.ode.FieldEquationsMapper: int[] start> = $r2;

        if r1 != null goto label4;

        $r2 = r0.<org.apache.commons.math3.ode.FieldEquationsMapper: int[] start>;

        $r2[0] = 0;

     label2:
        $r2 = r0.<org.apache.commons.math3.ode.FieldEquationsMapper: int[] start>;

        $i1 = $i2 + 1;

        $r3 = r0.<org.apache.commons.math3.ode.FieldEquationsMapper: int[] start>;

        $i2 = $r3[$i2];

        $i0 = $i2 + $i0;

        $r2[$i1] = $i0;

        return;

     label3:
        $i2 = virtualinvoke r1.<org.apache.commons.math3.ode.FieldEquationsMapper: int getNumberOfEquations()>();

        goto label1;

     label4:
        $r2 = r1.<org.apache.commons.math3.ode.FieldEquationsMapper: int[] start>;

        $r3 = r0.<org.apache.commons.math3.ode.FieldEquationsMapper: int[] start>;

        $i1 = $i2 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, 0, $i1);

        goto label2;
    }
    private void checkIndex(int) throws org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.ode.FieldEquationsMapper r0;
        int $i0, $i1;
        org.apache.commons.math3.exception.util.LocalizedFormats $r1;
        int[] $r2;
        org.apache.commons.math3.exception.MathIllegalArgumentException $r3;
        java.lang.Object[] $r4;
        java.lang.Integer $r5;

        r0 := @this: org.apache.commons.math3.ode.FieldEquationsMapper;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $r2 = r0.<org.apache.commons.math3.ode.FieldEquationsMapper: int[] start>;

        $i1 = lengthof $r2;

        $i1 = $i1 + -2;

        if $i0 <= $i1 goto label2;

     label1:
        $r3 = new org.apache.commons.math3.exception.MathIllegalArgumentException;

        $r1 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats ARGUMENT_OUTSIDE_DOMAIN>;

        $r4 = newarray (java.lang.Object)[3];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4[0] = $r5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r4[1] = $r5;

        $r2 = r0.<org.apache.commons.math3.ode.FieldEquationsMapper: int[] start>;

        $i0 = lengthof $r2;

        $i0 = $i0 + -2;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4[2] = $r5;

        specialinvoke $r3.<org.apache.commons.math3.exception.MathIllegalArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r1, $r4);

        throw $r3;

     label2:
        return;
    }
    public org.apache.commons.math3.RealFieldElement[] extractEquationData(int, org.apache.commons.math3.RealFieldElement[]) throws org.apache.commons.math3.exception.MathIllegalArgumentException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.ode.FieldEquationsMapper r0;
        int $i0, i1, $i2;
        org.apache.commons.math3.RealFieldElement[] r1, r7;
        int[] $r2;
        org.apache.commons.math3.exception.DimensionMismatchException $r3;
        org.apache.commons.math3.RealFieldElement $r4;
        org.apache.commons.math3.Field $r5;
        java.lang.Object[] $r6;

        r0 := @this: org.apache.commons.math3.ode.FieldEquationsMapper;

        $i0 := @parameter0: int;

        r1 := @parameter1: org.apache.commons.math3.RealFieldElement[];

        specialinvoke r0.<org.apache.commons.math3.ode.FieldEquationsMapper: void checkIndex(int)>($i0);

        $r2 = r0.<org.apache.commons.math3.ode.FieldEquationsMapper: int[] start>;

        i1 = $r2[$i0];

        $r2 = r0.<org.apache.commons.math3.ode.FieldEquationsMapper: int[] start>;

        $i0 = $i0 + 1;

        $i0 = $r2[$i0];

        $i2 = lengthof r1;

        if $i2 >= $i0 goto label1;

        $r3 = new org.apache.commons.math3.exception.DimensionMismatchException;

        i1 = lengthof r1;

        specialinvoke $r3.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>(i1, $i0);

        throw $r3;

     label1:
        $i0 = $i0 - i1;

        $r4 = r1[0];

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $r6 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[] buildArray(org.apache.commons.math3.Field,int)>($r5, $i0);

        r7 = (org.apache.commons.math3.RealFieldElement[]) $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i1, r7, 0, $i0);

        return r7;
    }
    public int getNumberOfEquations()
    {
        org.apache.commons.math3.ode.FieldEquationsMapper r0;
        int[] $r1;
        int $i0;

        r0 := @this: org.apache.commons.math3.ode.FieldEquationsMapper;

        $r1 = r0.<org.apache.commons.math3.ode.FieldEquationsMapper: int[] start>;

        $i0 = lengthof $r1;

        $i0 = $i0 + -1;

        return $i0;
    }
    public int getTotalDimension()
    {
        org.apache.commons.math3.ode.FieldEquationsMapper r0;
        int[] $r1, $r2;
        int $i0;

        r0 := @this: org.apache.commons.math3.ode.FieldEquationsMapper;

        $r1 = r0.<org.apache.commons.math3.ode.FieldEquationsMapper: int[] start>;

        $r2 = r0.<org.apache.commons.math3.ode.FieldEquationsMapper: int[] start>;

        $i0 = lengthof $r2;

        $i0 = $i0 + -1;

        $i0 = $r1[$i0];

        return $i0;
    }
    public void insertEquationData(int, org.apache.commons.math3.RealFieldElement[], org.apache.commons.math3.RealFieldElement[]) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.ode.FieldEquationsMapper r0;
        int $i0, i1, i2, $i3;
        org.apache.commons.math3.RealFieldElement[] r1, r2;
        int[] $r3;
        org.apache.commons.math3.exception.DimensionMismatchException $r4;

        r0 := @this: org.apache.commons.math3.ode.FieldEquationsMapper;

        $i0 := @parameter0: int;

        r1 := @parameter1: org.apache.commons.math3.RealFieldElement[];

        r2 := @parameter2: org.apache.commons.math3.RealFieldElement[];

        specialinvoke r0.<org.apache.commons.math3.ode.FieldEquationsMapper: void checkIndex(int)>($i0);

        $r3 = r0.<org.apache.commons.math3.ode.FieldEquationsMapper: int[] start>;

        i1 = $r3[$i0];

        $r3 = r0.<org.apache.commons.math3.ode.FieldEquationsMapper: int[] start>;

        $i0 = $i0 + 1;

        i2 = $r3[$i0];

        $i0 = i2 - i1;

        $i3 = lengthof r2;

        if $i3 >= i2 goto label1;

        $r4 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i0 = lengthof r2;

        specialinvoke $r4.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i0, i2);

        throw $r4;

     label1:
        i2 = lengthof r1;

        if i2 == $i0 goto label2;

        $r4 = new org.apache.commons.math3.exception.DimensionMismatchException;

        i1 = lengthof r1;

        specialinvoke $r4.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>(i1, $i0);

        throw $r4;

     label2:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, i1, $i0);

        return;
    }
    public org.apache.commons.math3.RealFieldElement[] mapDerivative(org.apache.commons.math3.ode.FieldODEStateAndDerivative)
    {
        org.apache.commons.math3.ode.FieldEquationsMapper r0;
        org.apache.commons.math3.ode.FieldODEStateAndDerivative r1;
        org.apache.commons.math3.RealFieldElement $r2;
        org.apache.commons.math3.Field $r3;
        int $i0, $i1;
        java.lang.Object[] $r4;
        org.apache.commons.math3.RealFieldElement[] r5, $r6;

        r0 := @this: org.apache.commons.math3.ode.FieldEquationsMapper;

        r1 := @parameter0: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        $r2 = virtualinvoke r1.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $i0 = virtualinvoke r0.<org.apache.commons.math3.ode.FieldEquationsMapper: int getTotalDimension()>();

        $r4 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[] buildArray(org.apache.commons.math3.Field,int)>($r3, $i0);

        r5 = (org.apache.commons.math3.RealFieldElement[]) $r4;

        $i0 = 0;

        $r6 = virtualinvoke r1.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement[] getDerivative()>();

        virtualinvoke r0.<org.apache.commons.math3.ode.FieldEquationsMapper: void insertEquationData(int,org.apache.commons.math3.RealFieldElement[],org.apache.commons.math3.RealFieldElement[])>(0, $r6, r5);

     label1:
        $i0 = $i0 + 1;

        $i1 = virtualinvoke r0.<org.apache.commons.math3.ode.FieldEquationsMapper: int getNumberOfEquations()>();

        if $i0 >= $i1 goto label2;

        $r6 = virtualinvoke r1.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement[] getSecondaryDerivative(int)>($i0);

        virtualinvoke r0.<org.apache.commons.math3.ode.FieldEquationsMapper: void insertEquationData(int,org.apache.commons.math3.RealFieldElement[],org.apache.commons.math3.RealFieldElement[])>($i0, $r6, r5);

        goto label1;

     label2:
        return r5;
    }
    public org.apache.commons.math3.RealFieldElement[] mapState(org.apache.commons.math3.ode.FieldODEState)
    {
        org.apache.commons.math3.ode.FieldEquationsMapper r0;
        org.apache.commons.math3.ode.FieldODEState r1;
        org.apache.commons.math3.RealFieldElement $r2;
        org.apache.commons.math3.Field $r3;
        int $i0, $i1;
        java.lang.Object[] $r4;
        org.apache.commons.math3.RealFieldElement[] r5, $r6;

        r0 := @this: org.apache.commons.math3.ode.FieldEquationsMapper;

        r1 := @parameter0: org.apache.commons.math3.ode.FieldODEState;

        $r2 = virtualinvoke r1.<org.apache.commons.math3.ode.FieldODEState: org.apache.commons.math3.RealFieldElement getTime()>();

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $i0 = virtualinvoke r0.<org.apache.commons.math3.ode.FieldEquationsMapper: int getTotalDimension()>();

        $r4 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[] buildArray(org.apache.commons.math3.Field,int)>($r3, $i0);

        r5 = (org.apache.commons.math3.RealFieldElement[]) $r4;

        $i0 = 0;

        $r6 = virtualinvoke r1.<org.apache.commons.math3.ode.FieldODEState: org.apache.commons.math3.RealFieldElement[] getState()>();

        virtualinvoke r0.<org.apache.commons.math3.ode.FieldEquationsMapper: void insertEquationData(int,org.apache.commons.math3.RealFieldElement[],org.apache.commons.math3.RealFieldElement[])>(0, $r6, r5);

     label1:
        $i0 = $i0 + 1;

        $i1 = virtualinvoke r0.<org.apache.commons.math3.ode.FieldEquationsMapper: int getNumberOfEquations()>();

        if $i0 >= $i1 goto label2;

        $r6 = virtualinvoke r1.<org.apache.commons.math3.ode.FieldODEState: org.apache.commons.math3.RealFieldElement[] getSecondaryState(int)>($i0);

        virtualinvoke r0.<org.apache.commons.math3.ode.FieldEquationsMapper: void insertEquationData(int,org.apache.commons.math3.RealFieldElement[],org.apache.commons.math3.RealFieldElement[])>($i0, $r6, r5);

        goto label1;

     label2:
        return r5;
    }
    public org.apache.commons.math3.ode.FieldODEStateAndDerivative mapStateAndDerivative(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement[], org.apache.commons.math3.RealFieldElement[]) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.ode.FieldEquationsMapper r0;
        org.apache.commons.math3.RealFieldElement r1;
        org.apache.commons.math3.RealFieldElement[] r2, r3, $r5, $r6, $r12;
        int $i0, $i1, $i2;
        org.apache.commons.math3.exception.DimensionMismatchException $r4;
        org.apache.commons.math3.ode.FieldODEStateAndDerivative $r7;
        org.apache.commons.math3.Field $r8;
        java.lang.Object[][] $r9;
        org.apache.commons.math3.RealFieldElement[][] r10, r11;

        r0 := @this: org.apache.commons.math3.ode.FieldEquationsMapper;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.RealFieldElement[];

        r3 := @parameter2: org.apache.commons.math3.RealFieldElement[];

        $i0 = lengthof r2;

        $i1 = virtualinvoke r0.<org.apache.commons.math3.ode.FieldEquationsMapper: int getTotalDimension()>();

        if $i0 == $i1 goto label1;

        $r4 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i0 = lengthof r2;

        $i1 = virtualinvoke r0.<org.apache.commons.math3.ode.FieldEquationsMapper: int getTotalDimension()>();

        specialinvoke $r4.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i0, $i1);

        throw $r4;

     label1:
        $i0 = lengthof r3;

        $i1 = virtualinvoke r0.<org.apache.commons.math3.ode.FieldEquationsMapper: int getTotalDimension()>();

        if $i0 == $i1 goto label2;

        $r4 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i0 = lengthof r3;

        $i1 = virtualinvoke r0.<org.apache.commons.math3.ode.FieldEquationsMapper: int getTotalDimension()>();

        specialinvoke $r4.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i0, $i1);

        throw $r4;

     label2:
        $i1 = virtualinvoke r0.<org.apache.commons.math3.ode.FieldEquationsMapper: int getNumberOfEquations()>();

        $i0 = 0;

        $r5 = virtualinvoke r0.<org.apache.commons.math3.ode.FieldEquationsMapper: org.apache.commons.math3.RealFieldElement[] extractEquationData(int,org.apache.commons.math3.RealFieldElement[])>(0, r2);

        $r6 = virtualinvoke r0.<org.apache.commons.math3.ode.FieldEquationsMapper: org.apache.commons.math3.RealFieldElement[] extractEquationData(int,org.apache.commons.math3.RealFieldElement[])>(0, r3);

        if $i1 >= 2 goto label3;

        $r7 = new org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        specialinvoke $r7.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement[],org.apache.commons.math3.RealFieldElement[])>(r1, $r5, $r6);

        return $r7;

     label3:
        $r8 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $i2 = $i1 + -1;

        $r9 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[][] buildArray(org.apache.commons.math3.Field,int,int)>($r8, $i2, -1);

        r10 = (org.apache.commons.math3.RealFieldElement[][]) $r9;

        $r8 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $i1 = $i1 + -1;

        $r9 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[][] buildArray(org.apache.commons.math3.Field,int,int)>($r8, $i1, -1);

        r11 = (org.apache.commons.math3.RealFieldElement[][]) $r9;

     label4:
        $i0 = $i0 + 1;

        $i1 = virtualinvoke r0.<org.apache.commons.math3.ode.FieldEquationsMapper: int getNumberOfEquations()>();

        if $i0 >= $i1 goto label5;

        $i1 = $i0 + -1;

        $r12 = virtualinvoke r0.<org.apache.commons.math3.ode.FieldEquationsMapper: org.apache.commons.math3.RealFieldElement[] extractEquationData(int,org.apache.commons.math3.RealFieldElement[])>($i0, r2);

        r10[$i1] = $r12;

        $i1 = $i0 + -1;

        $r12 = virtualinvoke r0.<org.apache.commons.math3.ode.FieldEquationsMapper: org.apache.commons.math3.RealFieldElement[] extractEquationData(int,org.apache.commons.math3.RealFieldElement[])>($i0, r3);

        r11[$i1] = $r12;

        goto label4;

     label5:
        $r7 = new org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        specialinvoke $r7.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement[],org.apache.commons.math3.RealFieldElement[],org.apache.commons.math3.RealFieldElement[][],org.apache.commons.math3.RealFieldElement[][])>(r1, $r5, $r6, r10, r11);

        return $r7;
    }
