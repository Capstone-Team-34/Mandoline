org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator extends org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator
private static final double B_01
private static final double B_06
private static final double B_07
private static final double B_08
private static final double B_09
private static final double B_10
private static final double B_11
private static final double B_12
private static final double C14
private static final double C15
private static final double C16
private static final double[][] D
private static final double K14_01
private static final double K14_06
private static final double K14_07
private static final double K14_08
private static final double K14_09
private static final double K14_10
private static final double K14_11
private static final double K14_12
private static final double K14_13
private static final double K15_01
private static final double K15_06
private static final double K15_07
private static final double K15_08
private static final double K15_09
private static final double K15_10
private static final double K15_11
private static final double K15_12
private static final double K15_13
private static final double K15_14
private static final double K16_01
private static final double K16_06
private static final double K16_07
private static final double K16_08
private static final double K16_09
private static final double K16_10
private static final double K16_11
private static final double K16_12
private static final double K16_13
private static final double K16_14
private static final double K16_15
private static final long serialVersionUID
private double[][] v
private boolean vectorsInitialized
private double[][] yDotKLast
    static void <clinit>()
    {
        double[][] $r0;
        double[] $r1;

        $r0 = newarray (double[])[4];

        $r1 = newarray (double)[12];

        $r1[0] = -8.428938276109013;

        $r1[1] = 0.5667149535193777;

        $r1[2] = -3.0689499459498917;

        $r1[3] = 2.38466765651207;

        $r1[4] = 2.1170345824450285;

        $r1[5] = -0.871391583777973;

        $r1[6] = 2.2404374302607883;

        $r1[7] = 0.6315787787694688;

        $r1[8] = -0.08899033645133331;

        $r1[9] = 18.148505520854727;

        $r1[10] = -9.194632392478356;

        $r1[11] = -4.436036387594894;

        $r0[0] = $r1;

        $r1 = newarray (double)[12];

        $r1[0] = 10.427508642579134;

        $r1[1] = 242.28349177525817;

        $r1[2] = 165.20045171727028;

        $r1[3] = -374.5467547226902;

        $r1[4] = -22.113666853125302;

        $r1[5] = 7.733432668472264;

        $r1[6] = -30.674084731089398;

        $r1[7] = -9.332130526430229;

        $r1[8] = 15.697238121770845;

        $r1[9] = -31.139403219565178;

        $r1[10] = -9.35292435884448;

        $r1[11] = 35.81684148639408;

        $r0[1] = $r1;

        $r1 = newarray (double)[12];

        $r1[0] = 19.985053242002433;

        $r1[1] = -387.0373087493518;

        $r1[2] = -189.17813819516758;

        $r1[3] = 527.8081592054236;

        $r1[4] = -11.573902539959631;

        $r1[5] = 6.8812326946963;

        $r1[6] = -1.0006050966910838;

        $r1[7] = 0.7777137798053443;

        $r1[8] = -2.778205752353508;

        $r1[9] = -60.19669523126412;

        $r1[10] = 84.32040550667716;

        $r1[11] = 11.99229113618279;

        $r0[2] = $r1;

        $r1 = newarray (double)[12];

        $r1[0] = -25.69393346270375;

        $r1[1] = -154.18974869023643;

        $r1[2] = -231.5293791760455;

        $r1[3] = 357.6391179106141;

        $r1[4] = 93.4053241836243;

        $r1[5] = -37.45832313645163;

        $r1[6] = 104.0996495089623;

        $r1[7] = 29.8402934266605;

        $r1[8] = -43.53345659001114;

        $r1[9] = 96.32455395918828;

        $r1[10] = -39.17726167561544;

        $r1[11] = -149.72683625798564;

        $r0[3] = $r1;

        <org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] D> = $r0;

        return;
    }
    public void <init>()
    {
        org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator r0;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator;

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator: void <init>()>();

        r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotKLast> = null;

        r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v> = null;

        r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: boolean vectorsInitialized> = 0;

        return;
    }
    void <init>(org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator)
    {
        org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator r0, $r1;
        int i0, i1, $i2;
        double[] $r2, $r4;
        double[][] $r3;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator;

        $r1 := @parameter0: org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator;

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator: void <init>(org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator)>($r1);

        $r2 = $r1.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[] currentState>;

        if $r2 != null goto label1;

        r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotKLast> = null;

        r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v> = null;

        r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: boolean vectorsInitialized> = 0;

        return;

     label1:
        $r2 = $r1.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[] currentState>;

        i0 = lengthof $r2;

        $r3 = newarray (double[])[3];

        r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotKLast> = $r3;

        i1 = 0;

     label2:
        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotKLast>;

        $i2 = lengthof $r3;

        if i1 >= $i2 goto label3;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotKLast>;

        $r2 = newarray (double)[i0];

        $r3[i1] = $r2;

        $r3 = $r1.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotKLast>;

        $r2 = $r3[i1];

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotKLast>;

        $r4 = $r3[i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r4, 0, i0);

        i1 = i1 + 1;

        goto label2;

     label3:
        $r3 = newarray (double[])[7];

        r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v> = $r3;

        i1 = 0;

     label4:
        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $i2 = lengthof $r3;

        if i1 >= $i2 goto label5;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r2 = newarray (double)[i0];

        $r3[i1] = $r2;

        $r3 = $r1.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r2 = $r3[i1];

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r4 = $r3[i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r4, 0, i0);

        i1 = i1 + 1;

        goto label4;

     label5:
        $z0 = $r1.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: boolean vectorsInitialized>;

        r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: boolean vectorsInitialized> = $z0;

        return;
    }
    protected void computeInterpolatedStateAndDerivatives(double, double) throws org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator r0;
        double $d0, $d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, $d14, $d15, $d16;
        boolean $z0;
        double[][] $r1;
        int i0, $i1, $i2;
        double[] $r2, $r3;
        byte $b3;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $z0 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: boolean vectorsInitialized>;

        if $z0 != 0 goto label07;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        if $r1 != null goto label02;

        $r1 = newarray (double[])[7];

        r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v> = $r1;

        i0 = 0;

     label01:
        if i0 >= 7 goto label02;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r2 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[] interpolatedState>;

        $i1 = lengthof $r2;

        $r2 = newarray (double)[$i1];

        $r1[i0] = $r2;

        i0 = i0 + 1;

        goto label01;

     label02:
        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: void finalizeStep()>();

        i0 = 0;

     label03:
        $r2 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[] interpolatedState>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label06;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r1[0];

        d2 = $r2[i0];

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r1[5];

        d10 = $r2[i0];

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r1[6];

        d11 = $r2[i0];

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r1[7];

        d12 = $r2[i0];

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r1[8];

        d13 = $r2[i0];

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r1[9];

        d8 = $r2[i0];

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r1[10];

        d3 = $r2[i0];

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r1[11];

        d4 = $r2[i0];

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r1[12];

        d5 = $r2[i0];

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotKLast>;

        $r2 = $r1[0];

        d6 = $r2[i0];

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotKLast>;

        $r2 = $r1[1];

        d7 = $r2[i0];

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotKLast>;

        $r2 = $r1[2];

        d9 = $r2[i0];

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r2 = $r1[0];

        $d14 = 0.054293734116568765 * d2;

        $d15 = 4.450312892752409 * d10;

        $d14 = $d14 + $d15;

        $d15 = 1.8915178993145003 * d11;

        $d14 = $d14 + $d15;

        $d15 = -5.801203960010585 * d12;

        $d14 = $d14 + $d15;

        $d15 = 0.3111643669578199 * d13;

        $d14 = $d14 + $d15;

        $d15 = -0.1521609496625161 * d8;

        $d14 = $d14 + $d15;

        $d15 = 0.20136540080403034 * d3;

        $d14 = $d14 + $d15;

        $d15 = 0.04471061572777259 * d4;

        $d14 = $d14 + $d15;

        $r2[i0] = $d14;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r2 = $r1[1];

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r3 = $r1[0];

        $d14 = $r3[i0];

        $d14 = d2 - $d14;

        $r2[i0] = $d14;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r2 = $r1[2];

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r3 = $r1[0];

        $d14 = $r3[i0];

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r3 = $r1[1];

        $d15 = $r3[i0];

        $d14 = $d14 - $d15;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r3 = $r1[12];

        $d15 = $r3[i0];

        $d14 = $d14 - $d15;

        $r2[i0] = $d14;

        $i1 = 0;

     label04:
        $r1 = <org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] D>;

        $i2 = lengthof $r1;

        if $i1 >= $i2 goto label05;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $i2 = $i1 + 3;

        $r2 = $r1[$i2];

        $r1 = <org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] D>;

        $r3 = $r1[$i1];

        $d14 = $r3[0];

        $d14 = $d14 * d2;

        $r1 = <org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] D>;

        $r3 = $r1[$i1];

        $d15 = $r3[1];

        $d15 = $d15 * d10;

        $d14 = $d14 + $d15;

        $r1 = <org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] D>;

        $r3 = $r1[$i1];

        $d15 = $r3[2];

        $d15 = $d15 * d11;

        $d14 = $d14 + $d15;

        $r1 = <org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] D>;

        $r3 = $r1[$i1];

        $d15 = $r3[3];

        $d15 = $d15 * d12;

        $d14 = $d14 + $d15;

        $r1 = <org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] D>;

        $r3 = $r1[$i1];

        $d15 = $r3[4];

        $d15 = $d15 * d13;

        $d14 = $d14 + $d15;

        $r1 = <org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] D>;

        $r3 = $r1[$i1];

        $d15 = $r3[5];

        $d15 = $d15 * d8;

        $d14 = $d14 + $d15;

        $r1 = <org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] D>;

        $r3 = $r1[$i1];

        $d15 = $r3[6];

        $d15 = $d15 * d3;

        $d14 = $d14 + $d15;

        $r1 = <org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] D>;

        $r3 = $r1[$i1];

        $d15 = $r3[7];

        $d15 = $d15 * d4;

        $d14 = $d14 + $d15;

        $r1 = <org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] D>;

        $r3 = $r1[$i1];

        $d15 = $r3[8];

        $d15 = $d15 * d5;

        $d14 = $d14 + $d15;

        $r1 = <org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] D>;

        $r3 = $r1[$i1];

        $d15 = $r3[9];

        $d15 = $d15 * d6;

        $d14 = $d14 + $d15;

        $r1 = <org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] D>;

        $r3 = $r1[$i1];

        $d15 = $r3[10];

        $d15 = $d15 * d7;

        $d14 = $d14 + $d15;

        $r1 = <org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] D>;

        $r3 = $r1[$i1];

        $d15 = $r3[11];

        $d15 = $d15 * d9;

        $d14 = $d14 + $d15;

        $r2[i0] = $d14;

        $i1 = $i1 + 1;

        goto label04;

     label05:
        i0 = i0 + 1;

        goto label03;

     label06:
        r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: boolean vectorsInitialized> = 1;

     label07:
        d8 = 1.0 - $d0;

        d4 = 2.0 * $d0;

        d7 = $d0 * $d0;

        d2 = 1.0 - d4;

        d3 = 3.0 * $d0;

        d3 = 2.0 - d3;

        d3 = $d0 * d3;

        d5 = d4 - 3.0;

        d5 = d5 * $d0;

        d5 = 1.0 + d5;

        d4 = d4 * d5;

        d5 = 5.0 * $d0;

        d5 = d5 - 8.0;

        d5 = d5 * $d0;

        d5 = 3.0 + d5;

        d5 = d7 * d5;

        d6 = 6.0 * $d0;

        d6 = 15.0 - d6;

        d6 = d6 * $d0;

        d6 = -12.0 + d6;

        d6 = d6 * $d0;

        d6 = 3.0 + d6;

        d6 = d7 * d6;

        d7 = d7 * $d0;

        d9 = 7.0 * $d0;

        d9 = 18.0 - d9;

        d9 = d9 * $d0;

        d9 = -15.0 + d9;

        d9 = d9 * $d0;

        d9 = 4.0 + d9;

        d7 = d7 * d9;

        $r2 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[] previousState>;

        if $r2 == null goto label09;

        $b3 = $d0 cmpg 0.5;

        if $b3 > 0 goto label09;

        i0 = 0;

     label08:
        $r2 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[] interpolatedState>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label11;

        $r2 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[] interpolatedState>;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[] previousState>;

        $d1 = $r3[i0];

        d9 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double h>;

        d9 = d9 * $d0;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r3 = $r1[0];

        d10 = $r3[i0];

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r3 = $r1[1];

        d11 = $r3[i0];

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r3 = $r1[2];

        d12 = $r3[i0];

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r3 = $r1[3];

        d13 = $r3[i0];

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r3 = $r1[4];

        $d14 = $r3[i0];

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r3 = $r1[5];

        $d15 = $r3[i0];

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r3 = $r1[6];

        $d16 = $r3[i0];

        $d16 = $d16 * $d0;

        $d15 = $d15 + $d16;

        $d15 = $d15 * d8;

        $d14 = $d14 + $d15;

        $d14 = $d14 * $d0;

        d13 = d13 + $d14;

        d13 = d13 * d8;

        d12 = d12 + d13;

        d12 = d12 * $d0;

        d11 = d11 + d12;

        d11 = d11 * d8;

        d10 = d10 + d11;

        d9 = d9 * d10;

        $d1 = $d1 + d9;

        $r2[i0] = $d1;

        $r2 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[] interpolatedDerivatives>;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r3 = $r1[0];

        $d1 = $r3[i0];

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r3 = $r1[1];

        d9 = $r3[i0];

        d9 = d9 * d2;

        $d1 = $d1 + d9;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r3 = $r1[2];

        d9 = $r3[i0];

        d9 = d9 * d3;

        $d1 = $d1 + d9;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r3 = $r1[3];

        d9 = $r3[i0];

        d9 = d9 * d4;

        $d1 = $d1 + d9;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r3 = $r1[4];

        d9 = $r3[i0];

        d9 = d9 * d5;

        $d1 = $d1 + d9;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r3 = $r1[5];

        d9 = $r3[i0];

        d9 = d9 * d6;

        $d1 = $d1 + d9;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r3 = $r1[6];

        d9 = $r3[i0];

        d9 = d9 * d7;

        $d1 = $d1 + d9;

        $r2[i0] = $d1;

        i0 = i0 + 1;

        goto label08;

     label09:
        i0 = 0;

     label10:
        $r2 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[] interpolatedState>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label11;

        $r2 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[] interpolatedState>;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[] currentState>;

        d9 = $r3[i0];

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r3 = $r1[0];

        d10 = $r3[i0];

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r3 = $r1[1];

        d11 = $r3[i0];

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r3 = $r1[2];

        d12 = $r3[i0];

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r3 = $r1[3];

        d13 = $r3[i0];

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r3 = $r1[4];

        $d14 = $r3[i0];

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r3 = $r1[5];

        $d15 = $r3[i0];

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r3 = $r1[6];

        $d16 = $r3[i0];

        $d16 = $d16 * $d0;

        $d15 = $d15 + $d16;

        $d15 = $d15 * d8;

        $d14 = $d14 + $d15;

        $d14 = $d14 * $d0;

        d13 = d13 + $d14;

        d13 = d13 * d8;

        d12 = d12 + d13;

        d12 = d12 * $d0;

        d11 = d11 + d12;

        d11 = d11 * $d0;

        d10 = d10 - d11;

        d10 = d10 * $d1;

        d9 = d9 - d10;

        $r2[i0] = d9;

        $r2 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[] interpolatedDerivatives>;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r3 = $r1[0];

        d9 = $r3[i0];

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r3 = $r1[1];

        d10 = $r3[i0];

        d10 = d10 * d2;

        d9 = d9 + d10;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r3 = $r1[2];

        d10 = $r3[i0];

        d10 = d10 * d3;

        d9 = d9 + d10;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r3 = $r1[3];

        d10 = $r3[i0];

        d10 = d10 * d4;

        d9 = d9 + d10;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r3 = $r1[4];

        d10 = $r3[i0];

        d10 = d10 * d5;

        d9 = d9 + d10;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r3 = $r1[5];

        d10 = $r3[i0];

        d10 = d10 * d6;

        d9 = d9 + d10;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r3 = $r1[6];

        d10 = $r3[i0];

        d10 = d10 * d7;

        d9 = d9 + d10;

        $r2[i0] = d9;

        i0 = i0 + 1;

        goto label10;

     label11:
        return;
    }
    protected org.apache.commons.math3.ode.sampling.StepInterpolator doCopy()
    {
        org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator r0, $r1;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator;

        $r1 = new org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator;

        specialinvoke $r1.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: void <init>(org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator)>(r0);

        return $r1;
    }
    protected void doFinalize() throws org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator r0;
        double[] r1, $r2;
        double $d0, $d1, $d2, $d3;
        int $i0, $i1;
        double[][] $r3;
        org.apache.commons.math3.ode.AbstractIntegrator $r4;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator;

        r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[] currentState>;

        if r1 != null goto label1;

        return;

     label1:
        r1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[] currentState>;

        $i0 = lengthof r1;

        r1 = newarray (double)[$i0];

        $d0 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double getGlobalPreviousTime()>();

        $i0 = 0;

     label2:
        $r2 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[] currentState>;

        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label3;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r3[0];

        $d1 = $r2[$i0];

        $d1 = 0.0018737681664791894 * $d1;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r3[5];

        $d2 = $r2[$i0];

        $d2 = -4.450312892752409 * $d2;

        $d1 = $d1 + $d2;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r3[6];

        $d2 = $r2[$i0];

        $d2 = -1.6380176890978755 * $d2;

        $d1 = $d1 + $d2;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r3[7];

        $d2 = $r2[$i0];

        $d2 = 5.554964922539782 * $d2;

        $d1 = $d1 + $d2;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r3[8];

        $d2 = $r2[$i0];

        $d2 = -0.4353557902216363 * $d2;

        $d1 = $d1 + $d2;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r3[9];

        $d2 = $r2[$i0];

        $d2 = 0.30545274794128174 * $d2;

        $d1 = $d1 + $d2;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r3[10];

        $d2 = $r2[$i0];

        $d2 = -0.19316434850839564 * $d2;

        $d1 = $d1 + $d2;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r3[11];

        $d2 = $r2[$i0];

        $d2 = -0.03714271806722689 * $d2;

        $d1 = $d1 + $d2;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r3[12];

        $d2 = $r2[$i0];

        $d2 = -0.008298 * $d2;

        $d2 = $d1 + $d2;

        $r2 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[] currentState>;

        $d1 = $r2[$i0];

        $d3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double h>;

        $d2 = $d3 * $d2;

        $d1 = $d1 + $d2;

        r1[$i0] = $d1;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        $r4 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: org.apache.commons.math3.ode.AbstractIntegrator integrator>;

        $d1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double h>;

        $d1 = 0.1 * $d1;

        $d1 = $d1 + $d0;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotKLast>;

        $r2 = $r3[0];

        virtualinvoke $r4.<org.apache.commons.math3.ode.AbstractIntegrator: void computeDerivatives(double,double[],double[])>($d1, r1, $r2);

        $i0 = 0;

     label4:
        $r2 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[] currentState>;

        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label5;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r3[0];

        $d1 = $r2[$i0];

        $d1 = -0.022459085953066622 * $d1;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r3[5];

        $d2 = $r2[$i0];

        $d2 = -4.422011983080043 * $d2;

        $d1 = $d1 + $d2;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r3[6];

        $d2 = $r2[$i0];

        $d2 = -1.8379759110070617 * $d2;

        $d1 = $d1 + $d2;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r3[7];

        $d2 = $r2[$i0];

        $d2 = 5.746280211439194 * $d2;

        $d1 = $d1 + $d2;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r3[8];

        $d2 = $r2[$i0];

        $d2 = -0.3111643669578199 * $d2;

        $d1 = $d1 + $d2;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r3[9];

        $d2 = $r2[$i0];

        $d2 = 0.1521609496625161 * $d2;

        $d1 = $d1 + $d2;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r3[10];

        $d2 = $r2[$i0];

        $d2 = -0.2014737481327276 * $d2;

        $d1 = $d1 + $d2;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r3[11];

        $d2 = $r2[$i0];

        $d2 = -0.04432804463693693 * $d2;

        $d1 = $d1 + $d2;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r3[12];

        $d2 = $r2[$i0];

        $d2 = -3.4046500868740456E-4 * $d2;

        $d1 = $d1 + $d2;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotKLast>;

        $r2 = $r3[0];

        $d2 = $r2[$i0];

        $d2 = 0.1413124436746325 * $d2;

        $d2 = $d1 + $d2;

        $r2 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[] currentState>;

        $d1 = $r2[$i0];

        $d3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double h>;

        $d2 = $d3 * $d2;

        $d1 = $d1 + $d2;

        r1[$i0] = $d1;

        $i0 = $i0 + 1;

        goto label4;

     label5:
        $r4 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: org.apache.commons.math3.ode.AbstractIntegrator integrator>;

        $d1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double h>;

        $d1 = 0.2 * $d1;

        $d1 = $d1 + $d0;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotKLast>;

        $r2 = $r3[1];

        virtualinvoke $r4.<org.apache.commons.math3.ode.AbstractIntegrator: void computeDerivatives(double,double[],double[])>($d1, r1, $r2);

        $i0 = 0;

     label6:
        $r2 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[] currentState>;

        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label7;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r3[0];

        $d1 = $r2[$i0];

        $d1 = -0.4831900357003607 * $d1;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r3[5];

        $d2 = $r2[$i0];

        $d2 = -9.147934308113573 * $d2;

        $d1 = $d1 + $d2;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r3[6];

        $d2 = $r2[$i0];

        $d2 = 5.791903296748099 * $d2;

        $d1 = $d1 + $d2;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r3[7];

        $d2 = $r2[$i0];

        $d2 = 9.870193778407696 * $d2;

        $d1 = $d1 + $d2;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r3[8];

        $d2 = $r2[$i0];

        $d2 = 0.04556282049746119 * $d2;

        $d1 = $d1 + $d2;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r3[9];

        $d2 = $r2[$i0];

        $d2 = 0.1521609496625161 * $d2;

        $d1 = $d1 + $d2;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r3[10];

        $d2 = $r2[$i0];

        $d2 = -0.20136540080403034 * $d2;

        $d1 = $d1 + $d2;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r3[11];

        $d2 = $r2[$i0];

        $d2 = -0.04471061572777259 * $d2;

        $d1 = $d1 + $d2;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotK>;

        $r2 = $r3[12];

        $d2 = $r2[$i0];

        $d2 = -0.0013990241651590145 * $d2;

        $d1 = $d1 + $d2;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotKLast>;

        $r2 = $r3[0];

        $d2 = $r2[$i0];

        $d2 = 2.9475147891527724 * $d2;

        $d1 = $d1 + $d2;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotKLast>;

        $r2 = $r3[1];

        $d2 = $r2[$i0];

        $d2 = -9.15095847217987 * $d2;

        $d2 = $d1 + $d2;

        $r2 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[] currentState>;

        $d1 = $r2[$i0];

        $d3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double h>;

        $d2 = $d3 * $d2;

        $d1 = $d1 + $d2;

        r1[$i0] = $d1;

        $i0 = $i0 + 1;

        goto label6;

     label7:
        $r4 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: org.apache.commons.math3.ode.AbstractIntegrator integrator>;

        $d1 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double h>;

        $d1 = 0.7777777777777778 * $d1;

        $d0 = $d1 + $d0;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotKLast>;

        $r2 = $r3[2];

        virtualinvoke $r4.<org.apache.commons.math3.ode.AbstractIntegrator: void computeDerivatives(double,double[],double[])>($d0, r1, $r2);

        return;
    }
    public void readExternal(java.io.ObjectInput) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator r0;
        java.io.ObjectInput $r1;
        double[] $r2, $r4;
        double[][] $r3;
        int $i0, i1;
        double $d0;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator;

        $r1 := @parameter0: java.io.ObjectInput;

        $r2 = null;

        $r3 = newarray (double[])[3];

        r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotKLast> = $r3;

        $i0 = interfaceinvoke $r1.<java.io.ObjectInput: int readInt()>();

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotKLast>;

        if $i0 >= 0 goto label5;

        $r4 = null;

     label1:
        $r3[0] = $r4;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotKLast>;

        if $i0 >= 0 goto label6;

        $r4 = null;

     label2:
        $r3[1] = $r4;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotKLast>;

        if $i0 >= 0 goto label7;

     label3:
        $r3[2] = $r2;

        i1 = 0;

     label4:
        if i1 >= $i0 goto label8;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotKLast>;

        $r2 = $r3[0];

        $d0 = interfaceinvoke $r1.<java.io.ObjectInput: double readDouble()>();

        $r2[i1] = $d0;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotKLast>;

        $r2 = $r3[1];

        $d0 = interfaceinvoke $r1.<java.io.ObjectInput: double readDouble()>();

        $r2[i1] = $d0;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotKLast>;

        $r2 = $r3[2];

        $d0 = interfaceinvoke $r1.<java.io.ObjectInput: double readDouble()>();

        $r2[i1] = $d0;

        i1 = i1 + 1;

        goto label4;

     label5:
        $r4 = newarray (double)[$i0];

        goto label1;

     label6:
        $r4 = newarray (double)[$i0];

        goto label2;

     label7:
        $r2 = newarray (double)[$i0];

        goto label3;

     label8:
        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator: void readExternal(java.io.ObjectInput)>($r1);

        return;
    }
    public void reinitialize(org.apache.commons.math3.ode.AbstractIntegrator, double[], double[][], boolean, org.apache.commons.math3.ode.EquationsMapper, org.apache.commons.math3.ode.EquationsMapper[])
    {
        org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator r0;
        org.apache.commons.math3.ode.AbstractIntegrator $r1;
        double[] $r2;
        double[][] $r3;
        boolean $z0;
        org.apache.commons.math3.ode.EquationsMapper $r4;
        org.apache.commons.math3.ode.EquationsMapper[] $r5;
        int i0, i1, $i2;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator;

        $r1 := @parameter0: org.apache.commons.math3.ode.AbstractIntegrator;

        $r2 := @parameter1: double[];

        $r3 := @parameter2: double[][];

        $z0 := @parameter3: boolean;

        $r4 := @parameter4: org.apache.commons.math3.ode.EquationsMapper;

        $r5 := @parameter5: org.apache.commons.math3.ode.EquationsMapper[];

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator: void reinitialize(org.apache.commons.math3.ode.AbstractIntegrator,double[],double[][],boolean,org.apache.commons.math3.ode.EquationsMapper,org.apache.commons.math3.ode.EquationsMapper[])>($r1, $r2, $r3, $z0, $r4, $r5);

        $r2 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[] currentState>;

        i0 = lengthof $r2;

        $r3 = newarray (double[])[3];

        r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotKLast> = $r3;

        i1 = 0;

     label1:
        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotKLast>;

        $i2 = lengthof $r3;

        if i1 >= $i2 goto label2;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotKLast>;

        $r2 = newarray (double)[i0];

        $r3[i1] = $r2;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = newarray (double[])[7];

        r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v> = $r3;

        i1 = 0;

     label3:
        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $i2 = lengthof $r3;

        if i1 >= $i2 goto label4;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] v>;

        $r2 = newarray (double)[i0];

        $r3[i1] = $r2;

        i1 = i1 + 1;

        goto label3;

     label4:
        r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: boolean vectorsInitialized> = 0;

        return;
    }
    public void storeTime(double)
    {
        org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator r0;
        double $d0;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator;

        $d0 := @parameter0: double;

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator: void storeTime(double)>($d0);

        r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: boolean vectorsInitialized> = 0;

        return;
    }
    public void writeExternal(java.io.ObjectOutput) throws java.io.IOException
    {
        org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator r0;
        java.io.ObjectOutput $r1;
        java.io.IOException r2;
        org.apache.commons.math3.exception.MaxCountExceededException r3;
        java.lang.String $r4;
        double[] $r5;
        int i0, i1;
        double[][] $r6;
        double $d0;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator;

        $r1 := @parameter0: java.io.ObjectOutput;

     label1:
        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: void finalizeStep()>();

     label2:
        $r5 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[] currentState>;

        if $r5 != null goto label6;

        i0 = -1;

     label3:
        interfaceinvoke $r1.<java.io.ObjectOutput: void writeInt(int)>(i0);

        i1 = 0;

     label4:
        if i1 >= i0 goto label7;

        $r6 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotKLast>;

        $r5 = $r6[0];

        $d0 = $r5[i1];

        interfaceinvoke $r1.<java.io.ObjectOutput: void writeDouble(double)>($d0);

        $r6 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotKLast>;

        $r5 = $r6[1];

        $d0 = $r5[i1];

        interfaceinvoke $r1.<java.io.ObjectOutput: void writeDouble(double)>($d0);

        $r6 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[][] yDotKLast>;

        $r5 = $r6[2];

        $d0 = $r5[i1];

        interfaceinvoke $r1.<java.io.ObjectOutput: void writeDouble(double)>($d0);

        i1 = i1 + 1;

        goto label4;

     label5:
        r3 := @caughtexception;

        r2 = new java.io.IOException;

        $r4 = virtualinvoke r3.<org.apache.commons.math3.exception.MaxCountExceededException: java.lang.String getLocalizedMessage()>();

        specialinvoke r2.<java.io.IOException: void <init>(java.lang.String)>($r4);

        virtualinvoke r2.<java.io.IOException: java.lang.Throwable initCause(java.lang.Throwable)>(r3);

        throw r2;

     label6:
        $r5 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: double[] currentState>;

        i0 = lengthof $r5;

        goto label3;

     label7:
        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator: void writeExternal(java.io.ObjectOutput)>($r1);

        return;

        catch org.apache.commons.math3.exception.MaxCountExceededException from label1 to label2 with label5;
    }
