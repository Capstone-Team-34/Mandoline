org.apache.commons.math3.ode.ContinuousOutputFieldModel extends java.lang.Object implements org.apache.commons.math3.ode.sampling.FieldStepHandler
private org.apache.commons.math3.RealFieldElement finalTime
private boolean forward
private int index
private org.apache.commons.math3.RealFieldElement initialTime
private java.util.List steps
    public void <init>()
    {
        org.apache.commons.math3.ode.ContinuousOutputFieldModel r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.commons.math3.ode.ContinuousOutputFieldModel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: java.util.List steps> = $r1;

        r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: org.apache.commons.math3.RealFieldElement initialTime> = null;

        r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: org.apache.commons.math3.RealFieldElement finalTime> = null;

        r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: boolean forward> = 1;

        r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: int index> = 0;

        return;
    }
    private void checkDimensionsEquality(int, int) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.ode.ContinuousOutputFieldModel r0;
        int $i0, $i1;
        org.apache.commons.math3.exception.DimensionMismatchException $r1;

        r0 := @this: org.apache.commons.math3.ode.ContinuousOutputFieldModel;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 == $i1 goto label1;

        $r1 = new org.apache.commons.math3.exception.DimensionMismatchException;

        specialinvoke $r1.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i1, $i0);

        throw $r1;

     label1:
        return;
    }
    private int locatePoint(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.ode.sampling.FieldStepInterpolator)
    {
        org.apache.commons.math3.ode.ContinuousOutputFieldModel r0;
        org.apache.commons.math3.RealFieldElement r1, $r4;
        org.apache.commons.math3.ode.sampling.FieldStepInterpolator r2;
        boolean $z0;
        org.apache.commons.math3.ode.FieldODEStateAndDerivative $r3;
        java.lang.Object $r5;
        double $d0;
        byte $b0;

        r0 := @this: org.apache.commons.math3.ode.ContinuousOutputFieldModel;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.ode.sampling.FieldStepInterpolator;

        $z0 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: boolean forward>;

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r2.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getPreviousState()>();

        $r4 = virtualinvoke $r3.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $r5 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r5;

        $d0 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg 0.0;

        if $b0 >= 0 goto label1;

        return -1;

     label1:
        $r3 = interfaceinvoke r2.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getCurrentState()>();

        $r4 = virtualinvoke $r3.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $r5 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        r1 = (org.apache.commons.math3.RealFieldElement) $r5;

        $d0 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 <= 0 goto label2;

        return 1;

     label2:
        return 0;

     label3:
        $r3 = interfaceinvoke r2.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getPreviousState()>();

        $r4 = virtualinvoke $r3.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $r5 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r5;

        $d0 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 <= 0 goto label4;

        return -1;

     label4:
        $r3 = interfaceinvoke r2.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getCurrentState()>();

        $r4 = virtualinvoke $r3.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $r5 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        r1 = (org.apache.commons.math3.RealFieldElement) $r5;

        $d0 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg 0.0;

        if $b0 >= 0 goto label5;

        return 1;

     label5:
        return 0;
    }
    public void append(org.apache.commons.math3.ode.ContinuousOutputFieldModel) throws org.apache.commons.math3.exception.MathIllegalArgumentException, org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.ode.ContinuousOutputFieldModel r0, r1;
        java.lang.Object[] $r2;
        java.util.List $r3;
        int $i0, $i1, $i2;
        org.apache.commons.math3.RealFieldElement $r4, $r12, $r13;
        boolean $z0, $z1;
        java.util.Iterator $r5;
        java.lang.Object $r6;
        org.apache.commons.math3.ode.sampling.FieldStepInterpolator r7;
        org.apache.commons.math3.ode.FieldODEStateAndDerivative $r8, $r9;
        org.apache.commons.math3.exception.MathIllegalArgumentException $r10;
        org.apache.commons.math3.exception.util.LocalizedFormats $r11;
        double $d0;
        byte $b3;
        java.lang.Double $r14;

        r0 := @this: org.apache.commons.math3.ode.ContinuousOutputFieldModel;

        r1 := @parameter0: org.apache.commons.math3.ode.ContinuousOutputFieldModel;

        $r3 = r1.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: java.util.List steps>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: java.util.List steps>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 != 0 goto label4;

        $r4 = r1.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: org.apache.commons.math3.RealFieldElement initialTime>;

        r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: org.apache.commons.math3.RealFieldElement initialTime> = $r4;

        $z0 = r1.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: boolean forward>;

        r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: boolean forward> = $z0;

     label2:
        $r3 = r1.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: java.util.List steps>;

        $r5 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.commons.math3.ode.sampling.FieldStepInterpolator) $r6;

        $r3 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: java.util.List steps>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r7);

        goto label3;

     label4:
        $r3 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: java.util.List steps>;

        $r6 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        r7 = (org.apache.commons.math3.ode.sampling.FieldStepInterpolator) $r6;

        $r8 = interfaceinvoke r7.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getPreviousState()>();

        $r3 = r1.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: java.util.List steps>;

        $r6 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        r7 = (org.apache.commons.math3.ode.sampling.FieldStepInterpolator) $r6;

        $r9 = interfaceinvoke r7.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getPreviousState()>();

        $i0 = virtualinvoke $r8.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: int getStateDimension()>();

        $i1 = virtualinvoke $r9.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: int getStateDimension()>();

        specialinvoke r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: void checkDimensionsEquality(int,int)>($i0, $i1);

        $i0 = virtualinvoke $r8.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: int getNumberOfSecondaryStates()>();

        $i1 = virtualinvoke $r9.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: int getNumberOfSecondaryStates()>();

        specialinvoke r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: void checkDimensionsEquality(int,int)>($i0, $i1);

        $i0 = 0;

     label5:
        $i1 = virtualinvoke $r8.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: int getNumberOfSecondaryStates()>();

        if $i0 >= $i1 goto label6;

        $i1 = virtualinvoke $r8.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: int getSecondaryStateDimension(int)>($i0);

        $i2 = virtualinvoke $r9.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: int getSecondaryStateDimension(int)>($i0);

        specialinvoke r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: void checkDimensionsEquality(int,int)>($i1, $i2);

        $i0 = $i0 + 1;

        goto label5;

     label6:
        $z0 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: boolean forward>;

        $z1 = r1.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: boolean forward>;

        $z0 = $z0 ^ $z1;

        if $z0 == 0 goto label7;

        $r10 = new org.apache.commons.math3.exception.MathIllegalArgumentException;

        $r11 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats PROPAGATION_DIRECTION_MISMATCH>;

        $r2 = newarray (java.lang.Object)[0];

        specialinvoke $r10.<org.apache.commons.math3.exception.MathIllegalArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r11, $r2);

        throw $r10;

     label7:
        $r3 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: java.util.List steps>;

        $i0 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: int index>;

        $r6 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i0);

        r7 = (org.apache.commons.math3.ode.sampling.FieldStepInterpolator) $r6;

        $r8 = interfaceinvoke r7.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getCurrentState()>();

        $r12 = virtualinvoke $r8.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $r8 = interfaceinvoke r7.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getPreviousState()>();

        $r4 = virtualinvoke $r8.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $r6 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r13 = virtualinvoke r1.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: org.apache.commons.math3.RealFieldElement getInitialTime()>();

        $r6 = interfaceinvoke $r13.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r12);

        $r12 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        $r13 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        $r4 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(0.001);

        $r6 = interfaceinvoke $r13.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r6;

        $d0 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b3 = $d0 cmpl 0.0;

        if $b3 <= 0 goto label2;

        $r10 = new org.apache.commons.math3.exception.MathIllegalArgumentException;

        $r11 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats HOLE_BETWEEN_MODELS_TIME_RANGES>;

        $r2 = newarray (java.lang.Object)[1];

        $r6 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        $r4 = (org.apache.commons.math3.RealFieldElement) $r6;

        $d0 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r2[0] = $r14;

        specialinvoke $r10.<org.apache.commons.math3.exception.MathIllegalArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r11, $r2);

        throw $r10;

     label8:
        $r3 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: java.util.List steps>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i0 = $i0 + -1;

        r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: int index> = $i0;

        $r3 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: java.util.List steps>;

        $i0 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: int index>;

        $r6 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i0);

        r7 = (org.apache.commons.math3.ode.sampling.FieldStepInterpolator) $r6;

        $r8 = interfaceinvoke r7.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getCurrentState()>();

        $r4 = virtualinvoke $r8.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: org.apache.commons.math3.RealFieldElement finalTime> = $r4;

        return;
    }
    public org.apache.commons.math3.RealFieldElement getFinalTime()
    {
        org.apache.commons.math3.ode.ContinuousOutputFieldModel r0;
        org.apache.commons.math3.RealFieldElement r1;

        r0 := @this: org.apache.commons.math3.ode.ContinuousOutputFieldModel;

        r1 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: org.apache.commons.math3.RealFieldElement finalTime>;

        return r1;
    }
    public org.apache.commons.math3.RealFieldElement getInitialTime()
    {
        org.apache.commons.math3.ode.ContinuousOutputFieldModel r0;
        org.apache.commons.math3.RealFieldElement r1;

        r0 := @this: org.apache.commons.math3.ode.ContinuousOutputFieldModel;

        r1 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: org.apache.commons.math3.RealFieldElement initialTime>;

        return r1;
    }
    public org.apache.commons.math3.ode.FieldODEStateAndDerivative getInterpolatedState(org.apache.commons.math3.RealFieldElement)
    {
        org.apache.commons.math3.ode.ContinuousOutputFieldModel r0;
        org.apache.commons.math3.RealFieldElement r1, $r6, $r7, $r9, $r10, r11, r12, r13, r14, $r15;
        int i0, i1, $i2, $i4, $i5;
        java.util.List $r2;
        java.lang.Object $r3;
        org.apache.commons.math3.ode.sampling.FieldStepInterpolator r4, r8;
        org.apache.commons.math3.ode.FieldODEStateAndDerivative $r5;
        double $d0;
        byte $b3;

        r0 := @this: org.apache.commons.math3.ode.ContinuousOutputFieldModel;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        i1 = 0;

        $r2 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: java.util.List steps>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        r4 = (org.apache.commons.math3.ode.sampling.FieldStepInterpolator) $r3;

        $r5 = interfaceinvoke r4.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getPreviousState()>();

        $r6 = virtualinvoke $r5.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $r5 = interfaceinvoke r4.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getCurrentState()>();

        $r7 = virtualinvoke $r5.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $r3 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r7);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(0.5);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r2 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: java.util.List steps>;

        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i2 = $i2 + -1;

        $r2 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: java.util.List steps>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i2);

        r8 = (org.apache.commons.math3.ode.sampling.FieldStepInterpolator) $r3;

        $r5 = interfaceinvoke r8.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getPreviousState()>();

        $r7 = virtualinvoke $r5.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $r5 = interfaceinvoke r8.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getCurrentState()>();

        $r9 = virtualinvoke $r5.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $r3 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r9);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(0.5);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r3;

        i0 = specialinvoke r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: int locatePoint(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.ode.sampling.FieldStepInterpolator)>(r1, r4);

        if i0 > 0 goto label01;

        r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: int index> = 0;

        $r5 = interfaceinvoke r4.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getInterpolatedState(org.apache.commons.math3.RealFieldElement)>(r1);

        return $r5;

     label01:
        i0 = specialinvoke r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: int locatePoint(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.ode.sampling.FieldStepInterpolator)>(r1, r8);

        if i0 < 0 goto label02;

        r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: int index> = $i2;

        $r5 = interfaceinvoke r8.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getInterpolatedState(org.apache.commons.math3.RealFieldElement)>(r1);

        return $r5;

     label02:
        i0 = $i2 - i1;

        if i0 <= 5 goto label10;

        $r2 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: java.util.List steps>;

        i0 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: int index>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        r4 = (org.apache.commons.math3.ode.sampling.FieldStepInterpolator) $r3;

        i0 = specialinvoke r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: int locatePoint(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.ode.sampling.FieldStepInterpolator)>(r1, r4);

        if i0 >= 0 goto label06;

        $i2 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: int index>;

        $r5 = interfaceinvoke r4.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getPreviousState()>();

        $r7 = virtualinvoke $r5.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $r5 = interfaceinvoke r4.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getCurrentState()>();

        $r9 = virtualinvoke $r5.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $r3 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r9);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(0.5);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r3;

     label03:
        i0 = i1 + $i2;

        i0 = i0 / 2;

        $r2 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: java.util.List steps>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        r4 = (org.apache.commons.math3.ode.sampling.FieldStepInterpolator) $r3;

        $r5 = interfaceinvoke r4.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getPreviousState()>();

        $r9 = virtualinvoke $r5.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $r5 = interfaceinvoke r4.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getCurrentState()>();

        $r10 = virtualinvoke $r5.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $r3 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r10);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(0.5);

        r11 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        $r9 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>(1.0E-6);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r3;

        $d0 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b3 = $d0 cmpg 0.0;

        if $b3 < 0 goto label04;

        $r3 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>(r11);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        $r9 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>(1.0E-6);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r3;

        $d0 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b3 = $d0 cmpg 0.0;

        if $b3 >= 0 goto label08;

     label04:
        r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: int index> = i0;

     label05:
        i0 = i1 + 1;

        $i4 = i1 * 9;

        $i4 = $i4 + $i2;

        $i4 = $i4 / 10;

        i0 = staticinvoke <org.apache.commons.math3.util.FastMath: int max(int,int)>(i0, $i4);

        $i4 = $i2 + -1;

        $i5 = $i2 * 9;

        $i5 = $i5 + i1;

        $i5 = $i5 / 10;

        $i4 = staticinvoke <org.apache.commons.math3.util.FastMath: int min(int,int)>($i4, $i5);

        $i5 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: int index>;

        if $i5 >= i0 goto label09;

        r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: int index> = i0;

        goto label02;

     label06:
        if i0 <= 0 goto label07;

        i1 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: int index>;

        $r5 = interfaceinvoke r4.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getPreviousState()>();

        $r6 = virtualinvoke $r5.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $r5 = interfaceinvoke r4.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getCurrentState()>();

        $r9 = virtualinvoke $r5.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $r3 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r9);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(0.5);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r3;

        goto label03;

     label07:
        $r5 = interfaceinvoke r4.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getInterpolatedState(org.apache.commons.math3.RealFieldElement)>(r1);

        return $r5;

     label08:
        $r3 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>(r11);

        $r10 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        r12 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r7);

        r13 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>(r11);

        r11 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        r14 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r14);

        $r15 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r15.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r12);

        $r15 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r15.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>($i2);

        $r15 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke r13.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r14);

        r14 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke r14.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r9);

        r14 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke r14.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(i0);

        $r3 = interfaceinvoke $r15.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r3);

        r14 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke r13.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r11);

        r13 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke r13.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r10);

        r13 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke r13.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(i1);

        $r3 = interfaceinvoke r14.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r3);

        r13 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r12);

        $r10 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r9);

        $r3 = interfaceinvoke r13.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(java.lang.Object)>($r3);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r3;

        $d0 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double rint(double)>($d0);

        i0 = (int) $d0;

        r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: int index> = i0;

        goto label05;

     label09:
        i0 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: int index>;

        if i0 <= $i4 goto label02;

        r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: int index> = $i4;

        goto label02;

     label10:
        r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: int index> = i1;

     label11:
        i1 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: int index>;

        if i1 > $i2 goto label12;

        $r2 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: java.util.List steps>;

        i1 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: int index>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (org.apache.commons.math3.ode.sampling.FieldStepInterpolator) $r3;

        i1 = specialinvoke r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: int locatePoint(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.ode.sampling.FieldStepInterpolator)>(r1, r4);

        if i1 <= 0 goto label12;

        i1 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: int index>;

        i1 = i1 + 1;

        r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: int index> = i1;

        goto label11;

     label12:
        $r2 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: java.util.List steps>;

        $i2 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: int index>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i2);

        r4 = (org.apache.commons.math3.ode.sampling.FieldStepInterpolator) $r3;

        $r5 = interfaceinvoke r4.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getInterpolatedState(org.apache.commons.math3.RealFieldElement)>(r1);

        return $r5;
    }
    public void handleStep(org.apache.commons.math3.ode.sampling.FieldStepInterpolator, boolean) throws org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.ode.ContinuousOutputFieldModel r0;
        org.apache.commons.math3.ode.sampling.FieldStepInterpolator r1;
        boolean $z0, $z1;
        java.util.List $r2;
        int $i0;
        org.apache.commons.math3.ode.FieldODEStateAndDerivative $r3;
        org.apache.commons.math3.RealFieldElement $r4;

        r0 := @this: org.apache.commons.math3.ode.ContinuousOutputFieldModel;

        r1 := @parameter0: org.apache.commons.math3.ode.sampling.FieldStepInterpolator;

        $z0 := @parameter1: boolean;

        $r2 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: java.util.List steps>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r3 = interfaceinvoke r1.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getPreviousState()>();

        $r4 = virtualinvoke $r3.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: org.apache.commons.math3.RealFieldElement initialTime> = $r4;

        $z1 = interfaceinvoke r1.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: boolean isForward()>();

        r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: boolean forward> = $z1;

     label1:
        $r2 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: java.util.List steps>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getCurrentState()>();

        $r4 = virtualinvoke $r3.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: org.apache.commons.math3.RealFieldElement finalTime> = $r4;

        $r2 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: java.util.List steps>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i0 = $i0 + -1;

        r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: int index> = $i0;

     label2:
        return;
    }
    public void init(org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.RealFieldElement)
    {
        org.apache.commons.math3.ode.ContinuousOutputFieldModel r0;
        org.apache.commons.math3.ode.FieldODEStateAndDerivative r1;
        org.apache.commons.math3.RealFieldElement r2, $r3;
        java.util.List $r4;

        r0 := @this: org.apache.commons.math3.ode.ContinuousOutputFieldModel;

        r1 := @parameter0: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        r2 := @parameter1: org.apache.commons.math3.RealFieldElement;

        $r3 = virtualinvoke r1.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: org.apache.commons.math3.RealFieldElement initialTime> = $r3;

        r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: org.apache.commons.math3.RealFieldElement finalTime> = r2;

        r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: boolean forward> = 1;

        r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: int index> = 0;

        $r4 = r0.<org.apache.commons.math3.ode.ContinuousOutputFieldModel: java.util.List steps>;

        interfaceinvoke $r4.<java.util.List: void clear()>();

        return;
    }
