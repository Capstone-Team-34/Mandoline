org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator extends org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator
private static final java.lang.String METHOD_NAME
private double[][] coeff
private int[] costPerStep
private double[] costPerTimeUnit
private int maxChecks
private int maxIter
private int maxOrder
private int mudif
private double[] optimalStep
private double orderControl1
private double orderControl2
private boolean performTest
private int[] sequence
private double stabilityReduction
private double stepControl1
private double stepControl2
private double stepControl3
private double stepControl4
private boolean useInterpolationError
    public void <init>(double, double, double, double)
    {
        org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        double $d0, $d1, $d2, $d3;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $d2 := @parameter2: double;

        $d3 := @parameter3: double;

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator: void <init>(java.lang.String,double,double,double,double)>("Gragg-Bulirsch-Stoer", $d0, $d1, $d2, $d3);

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void setStabilityCheck(boolean,int,int,double)>(1, -1, -1, -1.0);

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void setControlFactors(double,double,double,double)>(-1.0, -1.0, -1.0, -1.0);

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void setOrderControl(int,double,double)>(-1, -1.0, -1.0);

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void setInterpolationControl(boolean,int)>(1, -1);

        return;
    }
    public void <init>(double, double, double[], double[])
    {
        org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        double $d0, $d1;
        double[] $r1, $r2;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $r1 := @parameter2: double[];

        $r2 := @parameter3: double[];

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator: void <init>(java.lang.String,double,double,double[],double[])>("Gragg-Bulirsch-Stoer", $d0, $d1, $r1, $r2);

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void setStabilityCheck(boolean,int,int,double)>(1, -1, -1, -1.0);

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void setControlFactors(double,double,double,double)>(-1.0, -1.0, -1.0, -1.0);

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void setOrderControl(int,double,double)>(-1, -1.0, -1.0);

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void setInterpolationControl(boolean,int)>(1, -1);

        return;
    }
    private void extrapolate(int, int, double[][], double[])
    {
        org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        int $i0, $i1, i2, i3, $i4;
        double[][] $r1, $r5;
        double[] $r2, $r3, $r4;
        double $d0, $d1, $d2, $d3;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: double[][];

        $r2 := @parameter3: double[];

        i2 = 1;

     label1:
        if i2 >= $i1 goto label4;

        i3 = 0;

     label2:
        $i4 = lengthof $r2;

        if i3 >= $i4 goto label3;

        $i4 = $i1 - i2;

        $i4 = $i4 + -1;

        $r3 = $r1[$i4];

        $i4 = $i1 - i2;

        $r4 = $r1[$i4];

        $d1 = $r4[i3];

        $r5 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[][] coeff>;

        $i4 = $i1 + $i0;

        $r4 = $r5[$i4];

        $i4 = i2 + -1;

        $d2 = $r4[$i4];

        $i4 = $i1 - i2;

        $r4 = $r1[$i4];

        $d3 = $r4[i3];

        $i4 = $i1 - i2;

        $i4 = $i4 + -1;

        $r4 = $r1[$i4];

        $d0 = $r4[i3];

        $d0 = $d3 - $d0;

        $d2 = $d2 * $d0;

        $d1 = $d1 + $d2;

        $r3[i3] = $d1;

        i3 = i3 + 1;

        goto label2;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        i2 = 0;

     label5:
        i3 = lengthof $r2;

        if i2 >= i3 goto label6;

        $r3 = $r1[0];

        $d1 = $r3[i2];

        $r5 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[][] coeff>;

        i3 = $i1 + $i0;

        $r3 = $r5[i3];

        i3 = $i1 + -1;

        $d2 = $r3[i3];

        $r3 = $r1[0];

        $d0 = $r3[i2];

        $d3 = $r2[i2];

        $d0 = $d0 - $d3;

        $d2 = $d2 * $d0;

        $d1 = $d1 + $d2;

        $r2[i2] = $d1;

        i2 = i2 + 1;

        goto label5;

     label6:
        return;
    }
    private void initializeArrays()
    {
        org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        double d0, $d1;
        int i0, $i1, $i2, $i3;
        int[] $r1, $r4;
        double[][] $r2;
        double[] $r3;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;

        i0 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int maxOrder>;

        i0 = i0 / 2;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        if $r1 == null goto label01;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i1 = lengthof $r1;

        if $i1 == i0 goto label02;

     label01:
        $r1 = newarray (int)[i0];

        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence> = $r1;

        $r1 = newarray (int)[i0];

        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] costPerStep> = $r1;

        $r2 = newarray (double[])[i0];

        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[][] coeff> = $r2;

        $r3 = newarray (double)[i0];

        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit> = $r3;

        $r3 = newarray (double)[i0];

        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] optimalStep> = $r3;

     label02:
        $i1 = 0;

     label03:
        if $i1 >= i0 goto label04;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i2 = $i1 * 4;

        $i2 = $i2 + 2;

        $r1[$i1] = $i2;

        $i1 = $i1 + 1;

        goto label03;

     label04:
        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] costPerStep>;

        $r4 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i1 = $r4[0];

        $i1 = $i1 + 1;

        $r1[0] = $i1;

        $i1 = 1;

     label05:
        if $i1 >= i0 goto label06;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] costPerStep>;

        $r4 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] costPerStep>;

        $i2 = $i1 + -1;

        $i2 = $r4[$i2];

        $r4 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i3 = $r4[$i1];

        $i2 = $i2 + $i3;

        $r1[$i1] = $i2;

        $i1 = $i1 + 1;

        goto label05;

     label06:
        $i1 = 0;

     label07:
        if $i1 >= i0 goto label12;

        $r2 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[][] coeff>;

        if $i1 <= 0 goto label10;

        $r3 = newarray (double)[$i1];

     label08:
        $r2[$i1] = $r3;

        $i2 = 0;

     label09:
        if $i2 >= $i1 goto label11;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i3 = $r1[$i1];

        d0 = (double) $i3;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i3 = $i1 - $i2;

        $i3 = $i3 + -1;

        $i3 = $r1[$i3];

        $d1 = (double) $i3;

        d0 = d0 / $d1;

        $r2 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[][] coeff>;

        $r3 = $r2[$i1];

        d0 = d0 * d0;

        d0 = d0 - 1.0;

        d0 = 1.0 / d0;

        $r3[$i2] = d0;

        $i2 = $i2 + 1;

        goto label09;

     label10:
        $r3 = null;

        goto label08;

     label11:
        $i1 = $i1 + 1;

        goto label07;

     label12:
        return;
    }
    private void rescale(double[], double[], double[])
    {
        org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        double[] $r1, $r2, $r3, $r4;
        int i0, $i1;
        double $d0, $d1, $d2;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;

        $r1 := @parameter0: double[];

        $r2 := @parameter1: double[];

        $r3 := @parameter2: double[];

        $r4 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] vecAbsoluteTolerance>;

        if $r4 != null goto label2;

        i0 = 0;

     label1:
        $i1 = lengthof $r3;

        if i0 >= $i1 goto label4;

        $d0 = $r1[i0];

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d0);

        $d1 = $r2[i0];

        $d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d1);

        $d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d0, $d1);

        $d0 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double scalAbsoluteTolerance>;

        $d2 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double scalRelativeTolerance>;

        $d1 = $d2 * $d1;

        $d0 = $d0 + $d1;

        $r3[i0] = $d0;

        i0 = i0 + 1;

        goto label1;

     label2:
        i0 = 0;

     label3:
        $i1 = lengthof $r3;

        if i0 >= $i1 goto label4;

        $d0 = $r1[i0];

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d0);

        $d1 = $r2[i0];

        $d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d1);

        $d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d0, $d1);

        $r4 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] vecAbsoluteTolerance>;

        $d0 = $r4[i0];

        $r4 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] vecRelativeTolerance>;

        $d2 = $r4[i0];

        $d1 = $d2 * $d1;

        $d0 = $d0 + $d1;

        $r3[i0] = $d0;

        i0 = i0 + 1;

        goto label3;

     label4:
        return;
    }
    private boolean tryStep(double, double[], double, int, double[], double[][], double[], double[], double[]) throws org.apache.commons.math3.exception.MaxCountExceededException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        double $d0, $d1, d2, d3, $d4, $d5, $d6;
        double[] $r1, $r2, $r4, $r5, $r6, $r8;
        int $i0, i1, i2, $i3, $i4;
        double[][] $r3;
        int[] $r7;
        boolean $z0;
        byte $b5;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;

        $d0 := @parameter0: double;

        $r1 := @parameter1: double[];

        $d1 := @parameter2: double;

        $i0 := @parameter3: int;

        $r2 := @parameter4: double[];

        $r3 := @parameter5: double[][];

        $r4 := @parameter6: double[];

        $r5 := @parameter7: double[];

        $r6 := @parameter8: double[];

        $r7 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        i1 = $r7[$i0];

        d3 = (double) i1;

        $d1 = $d1 / d3;

        d3 = 2.0 * $d1;

        $d0 = $d0 + $d1;

        i2 = 0;

     label01:
        $i3 = lengthof $r1;

        if i2 >= $i3 goto label02;

        d2 = $r1[i2];

        $r6[i2] = d2;

        d2 = $r1[i2];

        $r8 = $r3[0];

        $d4 = $r8[i2];

        $d4 = $d4 * $d1;

        d2 = d2 + $d4;

        $r5[i2] = d2;

        i2 = i2 + 1;

        goto label01;

     label02:
        $r8 = $r3[1];

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void computeDerivatives(double,double[],double[])>($d0, $r5, $r8);

        i2 = 1;

     label03:
        if i2 >= i1 goto label12;

        $i3 = i2 * 2;

        if $i3 != i1 goto label04;

        $i3 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r4, 0, $i3);

     label04:
        $d0 = $d0 + $d1;

        $i3 = 0;

     label05:
        $i4 = lengthof $r1;

        if $i3 >= $i4 goto label06;

        d2 = $r5[$i3];

        $d4 = $r6[$i3];

        $r8 = $r3[i2];

        $d5 = $r8[$i3];

        $d5 = $d5 * d3;

        $d4 = $d4 + $d5;

        $r5[$i3] = $d4;

        $r6[$i3] = d2;

        $i3 = $i3 + 1;

        goto label05;

     label06:
        $i3 = i2 + 1;

        $r8 = $r3[$i3];

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void computeDerivatives(double,double[],double[])>($d0, $r5, $r8);

        $z0 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: boolean performTest>;

        if $z0 == 0 goto label11;

        $i3 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int maxChecks>;

        if i2 > $i3 goto label11;

        $i3 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int maxIter>;

        if $i0 >= $i3 goto label11;

        d2 = 0.0;

        $i3 = 0;

     label07:
        $i4 = lengthof $r2;

        if $i3 >= $i4 goto label08;

        $r8 = $r3[0];

        $d4 = $r8[$i3];

        $d5 = $r2[$i3];

        $d4 = $d4 / $d5;

        $d4 = $d4 * $d4;

        d2 = d2 + $d4;

        $i3 = $i3 + 1;

        goto label07;

     label08:
        $d4 = 0.0;

        $i3 = 0;

     label09:
        $i4 = lengthof $r2;

        if $i3 >= $i4 goto label10;

        $i4 = i2 + 1;

        $r8 = $r3[$i4];

        $d5 = $r8[$i3];

        $r8 = $r3[0];

        $d6 = $r8[$i3];

        $d5 = $d5 - $d6;

        $d6 = $r2[$i3];

        $d5 = $d5 / $d6;

        $d5 = $d5 * $d5;

        $d4 = $d4 + $d5;

        $i3 = $i3 + 1;

        goto label09;

     label10:
        d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(1.0E-15, d2);

        d2 = 4.0 * d2;

        $b5 = $d4 cmpl d2;

        if $b5 <= 0 goto label11;

        return 0;

     label11:
        i2 = i2 + 1;

        goto label03;

     label12:
        $i0 = 0;

     label13:
        i2 = lengthof $r1;

        if $i0 >= i2 goto label14;

        $d0 = $r6[$i0];

        d3 = $r5[$i0];

        $d0 = $d0 + d3;

        $r2 = $r3[i1];

        d3 = $r2[$i0];

        d3 = d3 * $d1;

        $d0 = $d0 + d3;

        $d0 = 0.5 * $d0;

        $r5[$i0] = $d0;

        $i0 = $i0 + 1;

        goto label13;

     label14:
        return 1;
    }
    public void addEventHandler(org.apache.commons.math3.ode.events.EventHandler, double, double, int, org.apache.commons.math3.analysis.solvers.UnivariateSolver)
    {
        org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        org.apache.commons.math3.ode.events.EventHandler $r1;
        double $d0, $d1;
        int $i0;
        org.apache.commons.math3.analysis.solvers.UnivariateSolver $r2;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;

        $r1 := @parameter0: org.apache.commons.math3.ode.events.EventHandler;

        $d0 := @parameter1: double;

        $d1 := @parameter2: double;

        $i0 := @parameter3: int;

        $r2 := @parameter4: org.apache.commons.math3.analysis.solvers.UnivariateSolver;

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator: void addEventHandler(org.apache.commons.math3.ode.events.EventHandler,double,double,int,org.apache.commons.math3.analysis.solvers.UnivariateSolver)>($r1, $d0, $d1, $i0, $r2);

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void initializeArrays()>();

        return;
    }
    public void addStepHandler(org.apache.commons.math3.ode.sampling.StepHandler)
    {
        org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        org.apache.commons.math3.ode.sampling.StepHandler $r1;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;

        $r1 := @parameter0: org.apache.commons.math3.ode.sampling.StepHandler;

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator: void addStepHandler(org.apache.commons.math3.ode.sampling.StepHandler)>($r1);

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void initializeArrays()>();

        return;
    }
    public void integrate(org.apache.commons.math3.ode.ExpandableStatefulODE, double) throws org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MaxCountExceededException, org.apache.commons.math3.exception.NoBracketingException
    {
        org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        org.apache.commons.math3.ode.ExpandableStatefulODE $r1;
        double $d0, d1, d2, $d3, d4, $d5, $d6;
        org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator r2, r23;
        double[] r3, r4, r5, $r7, r9, $r10, $r11, $r18, $r19, $r22;
        int $i0, i1, i2, $i4, $i5, $i6, i7, $i8, $i9;
        double[][] $r6, $r13, $r14, $r16;
        byte $b3;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z7;
        java.lang.Object $r8;
        int[] $r12;
        double[][][] $r15;
        java.lang.Class $r17;
        org.apache.commons.math3.ode.EquationsMapper $r20;
        org.apache.commons.math3.ode.EquationsMapper[] $r21;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;

        $r1 := @parameter0: org.apache.commons.math3.ode.ExpandableStatefulODE;

        $d0 := @parameter1: double;

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE,double)>($r1, $d0);

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void setEquations(org.apache.commons.math3.ode.ExpandableStatefulODE)>($r1);

        $d3 = virtualinvoke $r1.<org.apache.commons.math3.ode.ExpandableStatefulODE: double getTime()>();

        $b3 = $d0 cmpl $d3;

        if $b3 <= 0 goto label03;

        z0 = 1;

     label01:
        $r7 = virtualinvoke $r1.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] getCompleteState()>();

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Object clone()>();

        r9 = (double[]) $r8;

        $i0 = lengthof r9;

        r3 = newarray (double)[$i0];

        $i0 = lengthof r9;

        r4 = newarray (double)[$i0];

        $i0 = lengthof r9;

        $r10 = newarray (double)[$i0];

        $i0 = lengthof r9;

        $r11 = newarray (double)[$i0];

        $r12 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i0 = lengthof $r12;

        $i0 = $i0 + -1;

        $r13 = newarray (double[])[$i0];

        $r12 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i0 = lengthof $r12;

        $i0 = $i0 + -1;

        $r14 = newarray (double[])[$i0];

        $i0 = 0;

     label02:
        $r12 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i4 = lengthof $r12;

        $i4 = $i4 + -1;

        if $i0 >= $i4 goto label04;

        $i4 = lengthof r9;

        r5 = newarray (double)[$i4];

        $r13[$i0] = r5;

        $i4 = lengthof r9;

        r5 = newarray (double)[$i4];

        $r14[$i0] = r5;

        $i0 = $i0 + 1;

        goto label02;

     label03:
        z0 = 0;

        goto label01;

     label04:
        $r12 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i0 = lengthof $r12;

        $r15 = newarray (double[][])[$i0];

        $i0 = 0;

     label05:
        $r12 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i4 = lengthof $r12;

        if $i0 >= $i4 goto label08;

        $r12 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i4 = $r12[$i0];

        $i4 = $i4 + 1;

        $r16 = newarray (double[])[$i4];

        $r15[$i0] = $r16;

        $r16 = $r15[$i0];

        $r16[0] = r3;

        $i4 = 0;

     label06:
        $r12 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        i2 = $r12[$i0];

        if $i4 >= i2 goto label07;

        $r16 = $r15[$i0];

        i2 = $i4 + 1;

        $i5 = lengthof $r7;

        r5 = newarray (double)[$i5];

        $r16[i2] = r5;

        $i4 = $i4 + 1;

        goto label06;

     label07:
        $i0 = $i0 + 1;

        goto label05;

     label08:
        if r9 == $r7 goto label09;

        $i0 = lengthof $r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, r9, 0, $i0);

     label09:
        $i0 = lengthof $r7;

        r5 = newarray (double)[$i0];

        $r12 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i0 = lengthof $r12;

        $i0 = $i0 * 2;

        $i0 = $i0 + 1;

        $i4 = lengthof $r7;

        $r12 = newarray (int)[2];

        $r12[0] = $i0;

        $r12[1] = $i4;

        $r17 = <java.lang.Double: java.lang.Class TYPE>;

        $r8 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r17, $r12);

        $r16 = (double[][]) $r8;

        $i0 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int mainSetDimension>;

        $r18 = newarray (double)[$i0];

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void rescale(double[],double[],double[])>(r9, r9, $r18);

        $r19 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] vecRelativeTolerance>;

        if $r19 != null goto label22;

        $d3 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double scalRelativeTolerance>;

     label10:
        $d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(1.0E-10, $d3);

        $d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double log10(double)>($d3);

        $r12 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i0 = lengthof $r12;

        $i0 = $i0 + -2;

        $d3 = 0.6 * $d3;

        $d3 = 0.5 - $d3;

        $d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double floor(double)>($d3);

        $i4 = (int) $d3;

        $i0 = staticinvoke <org.apache.commons.math3.util.FastMath: int min(int,int)>($i0, $i4);

        $i4 = staticinvoke <org.apache.commons.math3.util.FastMath: int max(int,int)>(1, $i0);

        r23 = new org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator;

        r2 = r23;

        $r20 = virtualinvoke $r1.<org.apache.commons.math3.ode.ExpandableStatefulODE: org.apache.commons.math3.ode.EquationsMapper getPrimaryMapper()>();

        $r21 = virtualinvoke $r1.<org.apache.commons.math3.ode.ExpandableStatefulODE: org.apache.commons.math3.ode.EquationsMapper[] getSecondaryMappers()>();

        specialinvoke r23.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator: void <init>(double[],double[],double[],double[],double[][],boolean,org.apache.commons.math3.ode.EquationsMapper,org.apache.commons.math3.ode.EquationsMapper[])>(r9, r3, r4, r5, $r16, z0, $r20, $r21);

        $d3 = virtualinvoke $r1.<org.apache.commons.math3.ode.ExpandableStatefulODE: double getTime()>();

        virtualinvoke r23.<org.apache.commons.math3.ode.sampling.AbstractStepInterpolator: void storeTime(double)>($d3);

        $d3 = virtualinvoke $r1.<org.apache.commons.math3.ode.ExpandableStatefulODE: double getTime()>();

        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart> = $d3;

        d4 = 0.0;

        $d3 = 1.7976931348623157E308;

        z1 = 0;

        z2 = 1;

        z3 = 1;

        z4 = 0;

        d2 = virtualinvoke $r1.<org.apache.commons.math3.ode.ExpandableStatefulODE: double getTime()>();

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void initIntegration(double,double[],double)>(d2, $r7, $d0);

        $r19 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        d2 = (double) 0L;

        $r19[0] = d2;

        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: boolean isLastStep> = 0;

     label11:
        z5 = 0;

        if z3 == 0 goto label14;

        virtualinvoke r2.<org.apache.commons.math3.ode.sampling.AbstractStepInterpolator: void shift()>();

        if z4 != 0 goto label12;

        d2 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void computeDerivatives(double,double[],double[])>(d2, r9, r3);

     label12:
        if z2 == 0 goto label13;

        $i0 = $i4 * 2;

        $i0 = $i0 + 1;

        d4 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        d4 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double initializeStep(boolean,int,double[],double,double[],double[],double[],double[])>(z0, $i0, $r18, d4, r9, r3, $r10, $r11);

     label13:
        z3 = 0;

     label14:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize> = d4;

        if z0 == 0 goto label15;

        d2 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        d1 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        d2 = d2 + d1;

        $b3 = d2 cmpl $d0;

        if $b3 > 0 goto label16;

     label15:
        if z0 != 0 goto label17;

        d2 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        d1 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        d2 = d2 + d1;

        $b3 = d2 cmpg $d0;

        if $b3 >= 0 goto label17;

     label16:
        d2 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        d2 = $d0 - d2;

        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize> = d2;

     label17:
        d2 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        d1 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        d2 = d2 + d1;

        if z0 == 0 goto label24;

        $b3 = d2 cmpl $d0;

        if $b3 < 0 goto label23;

        $z6 = 1;

     label18:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: boolean isLastStep> = $z6;

        $i0 = -1;

        $z6 = 1;

     label19:
        if $z6 == 0 goto label44;

        $i0 = $i0 + 1;

        d2 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        d1 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        $r6 = $r15[$i0];

        if $i0 != 0 goto label26;

        $r19 = $r16[0];

     label20:
        if $i0 != 0 goto label27;

        $r22 = r4;

     label21:
        $z7 = specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: boolean tryStep(double,double[],double,int,double[],double[][],double[],double[],double[])>(d2, r9, d1, $i0, $r18, $r6, $r19, $r22, $r10);

        if $z7 != 0 goto label28;

        d4 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        d2 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stabilityReduction>;

        d4 = d4 * d2;

        d4 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double filterStep(double,boolean,boolean)>(d4, z0, 0);

        d4 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d4);

        z5 = 1;

        $z6 = 0;

        goto label19;

     label22:
        $r19 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] vecRelativeTolerance>;

        $d3 = $r19[0];

        goto label10;

     label23:
        $z6 = 0;

        goto label18;

     label24:
        $b3 = d2 cmpg $d0;

        if $b3 > 0 goto label25;

        $z6 = 1;

        goto label18;

     label25:
        $z6 = 0;

        goto label18;

     label26:
        i2 = $i0 + -1;

        $r19 = $r13[i2];

        goto label20;

     label27:
        i2 = $i0 + -1;

        $r22 = $r14[i2];

        goto label21;

     label28:
        if $i0 <= 0 goto label19;

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void extrapolate(int,int,double[][],double[])>(0, $i0, $r14, r4);

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void rescale(double[],double[],double[])>(r9, r4, $r18);

        d2 = 0.0;

        i2 = 0;

     label29:
        $i5 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int mainSetDimension>;

        if i2 >= $i5 goto label30;

        d1 = r4[i2];

        $r19 = $r14[0];

        $d5 = $r19[i2];

        d1 = d1 - $d5;

        d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d1);

        $d5 = $r18[i2];

        d1 = d1 / $d5;

        d1 = d1 * d1;

        d2 = d2 + d1;

        i2 = i2 + 1;

        goto label29;

     label30:
        i2 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int mainSetDimension>;

        d1 = (double) i2;

        d2 = d2 / d1;

        d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(d2);

        $b3 = d2 cmpl 1.0E15;

        if $b3 > 0 goto label31;

        if $i0 <= 1 goto label32;

        $b3 = d2 cmpl $d3;

        if $b3 <= 0 goto label32;

     label31:
        d4 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        d2 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stabilityReduction>;

        d4 = d4 * d2;

        d4 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double filterStep(double,boolean,boolean)>(d4, z0, 0);

        d4 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d4);

        z5 = 1;

        $z6 = 0;

        goto label19;

     label32:
        $d3 = 4.0 * d2;

        $d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d3, 1.0);

        i2 = $i0 * 2;

        i2 = i2 + 1;

        d1 = (double) i2;

        d1 = 1.0 / d1;

        $d5 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl2>;

        $d6 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl1>;

        $d6 = d2 / $d6;

        $d6 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,double)>($d6, d1);

        $d5 = $d5 / $d6;

        $d6 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl3>;

        $d6 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,double)>($d6, d1);

        d1 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl4>;

        d1 = $d6 / d1;

        $d6 = 1.0 / $d6;

        $d5 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>($d6, $d5);

        d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(d1, $d5);

        $r19 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] optimalStep>;

        $d5 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        d1 = $d5 * d1;

        d1 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double filterStep(double,boolean,boolean)>(d1, z0, 1);

        d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d1);

        $r19[$i0] = d1;

        $r19 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $r12 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] costPerStep>;

        i2 = $r12[$i0];

        d1 = (double) i2;

        $r22 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] optimalStep>;

        $d5 = $r22[$i0];

        d1 = d1 / $d5;

        $r19[$i0] = d1;

        i2 = $i0 - $i4;

        lookupswitch(i2)
        {
            case -1: goto label35;
            case 0: goto label38;
            case 1: goto label41;
            default: goto label33;
        };

     label33:
        if z2 != 0 goto label34;

        $z7 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: boolean isLastStep>;

        if $z7 == 0 goto label19;

     label34:
        $b3 = d2 cmpg 1.0;

        if $b3 > 0 goto label19;

        $z6 = 0;

        goto label19;

     label35:
        if $i4 <= 1 goto label19;

        if z1 != 0 goto label19;

        $b3 = d2 cmpg 1.0;

        if $b3 > 0 goto label36;

        $z6 = 0;

        goto label19;

     label36:
        $r12 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        i2 = $r12[$i4];

        d1 = (double) i2;

        $r12 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        i2 = $i4 + 1;

        i2 = $r12[i2];

        $d5 = (double) i2;

        d1 = d1 * $d5;

        $r12 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        i2 = $r12[0];

        $r12 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i5 = $r12[0];

        i2 = i2 * $i5;

        $d5 = (double) i2;

        d1 = d1 / $d5;

        d1 = d1 * d1;

        $b3 = d2 cmpl d1;

        if $b3 <= 0 goto label19;

        z5 = 1;

        $z6 = 0;

        $i4 = $i0;

        if $i0 <= 1 goto label37;

        $r19 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        i2 = $i0 + -1;

        d4 = $r19[i2];

        d2 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl1>;

        $r19 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        d1 = $r19[$i0];

        d2 = d2 * d1;

        $b3 = d4 cmpg d2;

        if $b3 >= 0 goto label37;

        $i4 = $i0 + -1;

     label37:
        $r19 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] optimalStep>;

        d4 = $r19[$i4];

        goto label19;

     label38:
        $b3 = d2 cmpg 1.0;

        if $b3 > 0 goto label39;

        $z6 = 0;

        goto label19;

     label39:
        $r12 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        i2 = $i0 + 1;

        i2 = $r12[i2];

        d1 = (double) i2;

        $r12 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        i2 = $r12[0];

        $d5 = (double) i2;

        d1 = d1 / $d5;

        d1 = d1 * d1;

        $b3 = d2 cmpl d1;

        if $b3 <= 0 goto label19;

        z5 = 1;

        $z6 = 0;

        if $i4 <= 1 goto label40;

        $r19 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        i2 = $i4 + -1;

        d4 = $r19[i2];

        d2 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl1>;

        $r19 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        d1 = $r19[$i4];

        d2 = d2 * d1;

        $b3 = d4 cmpg d2;

        if $b3 >= 0 goto label40;

        $i4 = $i4 + -1;

     label40:
        $r19 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] optimalStep>;

        d4 = $r19[$i4];

        goto label19;

     label41:
        $b3 = d2 cmpl 1.0;

        if $b3 <= 0 goto label43;

        z5 = 1;

        if $i4 <= 1 goto label42;

        $r19 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        i2 = $i4 + -1;

        d4 = $r19[i2];

        d2 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl1>;

        $r19 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        d1 = $r19[$i4];

        d2 = d2 * d1;

        $b3 = d4 cmpg d2;

        if $b3 >= 0 goto label42;

        $i4 = $i4 + -1;

     label42:
        $r19 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] optimalStep>;

        d4 = $r19[$i4];

     label43:
        $z6 = 0;

        goto label19;

     label44:
        if z5 != 0 goto label45;

        d2 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        d1 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        d2 = d2 + d1;

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void computeDerivatives(double,double[],double[])>(d2, r4, r5);

     label45:
        d2 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double getMaxStep()>();

        if z5 != 0 goto label64;

        i2 = 1;

     label46:
        if i2 > $i0 goto label47;

        $r19 = $r16[0];

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void extrapolate(int,int,double[][],double[])>(0, i2, $r13, $r19);

        i2 = i2 + 1;

        goto label46;

     label47:
        i2 = $i0 * 2;

        $i5 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int mudif>;

        i2 = i2 - $i5;

        i2 = i2 + 3;

        $i5 = 0;

     label48:
        if $i5 >= i2 goto label63;

        i1 = $i5 / 2;

        $r12 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i6 = $r12[i1];

        d1 = (double) $i6;

        d1 = 0.5 * d1;

        d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,int)>(d1, $i5);

        $r6 = $r15[i1];

        $i6 = lengthof $r6;

        $i6 = $i6 / 2;

        i7 = 0;

     label49:
        $i8 = lengthof $r7;

        if i7 >= $i8 goto label50;

        $i8 = $i5 + 1;

        $r19 = $r16[$i8];

        $r6 = $r15[i1];

        $i8 = $i6 + $i5;

        $r22 = $r6[$i8];

        $d5 = $r22[i7];

        $d5 = $d5 * d1;

        $r19[i7] = $d5;

        i7 = i7 + 1;

        goto label49;

     label50:
        $i6 = 1;

     label51:
        i7 = $i0 - i1;

        if $i6 > i7 goto label54;

        $r12 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        i7 = $i6 + i1;

        i7 = $r12[i7];

        d1 = (double) i7;

        d1 = 0.5 * d1;

        d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,int)>(d1, $i5);

        i7 = i1 + $i6;

        $r6 = $r15[i7];

        i7 = lengthof $r6;

        i7 = i7 / 2;

        $i8 = 0;

     label52:
        $i9 = lengthof $r7;

        if $i8 >= $i9 goto label53;

        $i9 = $i6 + -1;

        $r19 = $r13[$i9];

        $i9 = i1 + $i6;

        $r6 = $r15[$i9];

        $i9 = i7 + $i5;

        $r22 = $r6[$i9];

        $d5 = $r22[$i8];

        $d5 = $d5 * d1;

        $r19[$i8] = $d5;

        $i8 = $i8 + 1;

        goto label52;

     label53:
        i7 = $i5 + 1;

        $r19 = $r16[i7];

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void extrapolate(int,int,double[][],double[])>(i1, $i6, $r13, $r19);

        $i6 = $i6 + 1;

        goto label51;

     label54:
        i1 = 0;

     label55:
        $i6 = lengthof $r7;

        if i1 >= $i6 goto label56;

        $i6 = $i5 + 1;

        $r19 = $r16[$i6];

        d1 = $r19[i1];

        $d5 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        d1 = d1 * $d5;

        $r19[i1] = d1;

        i1 = i1 + 1;

        goto label55;

     label56:
        i1 = $i5 + 1;

        i1 = i1 / 2;

     label57:
        if i1 > $i0 goto label62;

        $r6 = $r15[i1];

        $i6 = lengthof $r6;

        $i6 = $i6 + -1;

     label58:
        i7 = $i5 + 1;

        i7 = i7 * 2;

        if $i6 < i7 goto label61;

        i7 = 0;

     label59:
        $i8 = lengthof $r7;

        if i7 >= $i8 goto label60;

        $r6 = $r15[i1];

        $r19 = $r6[$i6];

        d1 = $r19[i7];

        $r6 = $r15[i1];

        $i8 = $i6 + -2;

        $r22 = $r6[$i8];

        $d5 = $r22[i7];

        d1 = d1 - $d5;

        $r19[i7] = d1;

        i7 = i7 + 1;

        goto label59;

     label60:
        $i6 = $i6 + -1;

        goto label58;

     label61:
        i1 = i1 + 1;

        goto label57;

     label62:
        $i5 = $i5 + 1;

        goto label48;

     label63:
        if i2 < 0 goto label64;

        d1 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        virtualinvoke r2.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator: void computeCoefficients(int,double)>(i2, d1);

        z2 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: boolean useInterpolationError>;

        if z2 == 0 goto label64;

        d1 = virtualinvoke r2.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator: double estimateError(double[])>($r18);

        d2 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        i2 = i2 + 4;

        $d5 = (double) i2;

        $d5 = 1.0 / $d5;

        $d5 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,double)>(d1, $d5);

        $d5 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d5, 0.01);

        d2 = d2 / $d5;

        $d5 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d2);

        d2 = $d5;

        $b3 = d1 cmpl 10.0;

        if $b3 <= 0 goto label64;

        d4 = $d5;

        z5 = 1;

     label64:
        if z5 != 0 goto label67;

        d4 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        d1 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        d4 = d4 + d1;

        virtualinvoke r2.<org.apache.commons.math3.ode.sampling.AbstractStepInterpolator: void storeTime(double)>(d4);

        d4 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double)>(r2, r4, r5, $d0);

        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart> = d4;

        d4 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        virtualinvoke r2.<org.apache.commons.math3.ode.sampling.AbstractStepInterpolator: void storeTime(double)>(d4);

        i2 = lengthof $r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r9, 0, i2);

        i2 = lengthof $r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, r3, 0, i2);

        z4 = 1;

        if $i0 != 1 goto label70;

        i2 = 2;

        if z1 == 0 goto label65;

        i2 = 1;

     label65:
        if z1 == 0 goto label74;

        $i0 = staticinvoke <org.apache.commons.math3.util.FastMath: int min(int,int)>(i2, $i0);

        $i4 = $i0;

        d4 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        d4 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d4);

        $r19 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] optimalStep>;

        d1 = $r19[$i0];

        d4 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>(d4, d1);

     label66:
        z3 = 1;

     label67:
        d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>(d4, d2);

        d4 = d2;

        if z0 != 0 goto label68;

        d4 = neg d2;

     label68:
        z2 = 0;

        if z5 == 0 goto label78;

        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: boolean isLastStep> = 0;

        z1 = 1;

     label69:
        z5 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: boolean isLastStep>;

        if z5 == 0 goto label11;

        $d0 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        virtualinvoke $r1.<org.apache.commons.math3.ode.ExpandableStatefulODE: void setTime(double)>($d0);

        virtualinvoke $r1.<org.apache.commons.math3.ode.ExpandableStatefulODE: void setCompleteState(double[])>(r9);

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void resetInternalState()>();

        return;

     label70:
        if $i0 > $i4 goto label72;

        i2 = $i0;

        $r19 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $i5 = $i0 + -1;

        d4 = $r19[$i5];

        d1 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl1>;

        $r19 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $d5 = $r19[$i0];

        d1 = d1 * $d5;

        $b3 = d4 cmpg d1;

        if $b3 >= 0 goto label71;

        i2 = $i0 + -1;

        goto label65;

     label71:
        $r19 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        d4 = $r19[$i0];

        d1 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl2>;

        $r19 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $i5 = $i0 + -1;

        $d5 = $r19[$i5];

        d1 = d1 * $d5;

        $b3 = d4 cmpg d1;

        if $b3 >= 0 goto label65;

        i2 = $i0 + 1;

        $r12 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i5 = lengthof $r12;

        $i5 = $i5 + -2;

        i2 = staticinvoke <org.apache.commons.math3.util.FastMath: int min(int,int)>(i2, $i5);

        goto label65;

     label72:
        i2 = $i0 + -1;

        if $i0 <= 2 goto label73;

        $r19 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $i5 = $i0 + -2;

        d4 = $r19[$i5];

        d1 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl1>;

        $r19 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $i5 = $i0 + -1;

        $d5 = $r19[$i5];

        d1 = d1 * $d5;

        $b3 = d4 cmpg d1;

        if $b3 >= 0 goto label73;

        i2 = $i0 + -2;

     label73:
        $r19 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        d4 = $r19[$i0];

        d1 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl2>;

        $r19 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $d5 = $r19[i2];

        d1 = d1 * $d5;

        $b3 = d4 cmpg d1;

        if $b3 >= 0 goto label65;

        $r12 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        i2 = lengthof $r12;

        i2 = i2 + -2;

        i2 = staticinvoke <org.apache.commons.math3.util.FastMath: int min(int,int)>($i0, i2);

        goto label65;

     label74:
        if i2 > $i0 goto label76;

        $r19 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] optimalStep>;

        d4 = $r19[i2];

     label75:
        $i4 = i2;

        goto label66;

     label76:
        if $i0 >= $i4 goto label77;

        $r19 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        d4 = $r19[$i0];

        d1 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl2>;

        $r19 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $i4 = $i0 + -1;

        $d5 = $r19[$i4];

        d1 = d1 * $d5;

        $b3 = d4 cmpg d1;

        if $b3 >= 0 goto label77;

        $r19 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] optimalStep>;

        d4 = $r19[$i0];

        $r12 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] costPerStep>;

        $i4 = i2 + 1;

        $i4 = $r12[$i4];

        d1 = (double) $i4;

        d4 = d4 * d1;

        $r12 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] costPerStep>;

        $i0 = $r12[$i0];

        d1 = (double) $i0;

        d4 = d4 / d1;

        d4 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double filterStep(double,boolean,boolean)>(d4, z0, 0);

        goto label75;

     label77:
        $r19 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] optimalStep>;

        d4 = $r19[$i0];

        $r12 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] costPerStep>;

        $i4 = $r12[i2];

        d1 = (double) $i4;

        d4 = d4 * d1;

        $r12 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] costPerStep>;

        $i0 = $r12[$i0];

        d1 = (double) $i0;

        d4 = d4 / d1;

        d4 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double filterStep(double,boolean,boolean)>(d4, z0, 0);

        goto label75;

     label78:
        z1 = 0;

        goto label69;
    }
    public void setControlFactors(double, double, double, double)
    {
        org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        double $d0, $d1, $d2, $d3;
        byte $b0;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $d2 := @parameter2: double;

        $d3 := @parameter3: double;

        $b0 = $d0 cmpg 1.0E-4;

        if $b0 < 0 goto label01;

        $b0 = $d0 cmpl 0.9999;

        if $b0 <= 0 goto label08;

     label01:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl1> = 0.65;

     label02:
        $b0 = $d1 cmpg 1.0E-4;

        if $b0 < 0 goto label03;

        $b0 = $d1 cmpl 0.9999;

        if $b0 <= 0 goto label09;

     label03:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl2> = 0.94;

     label04:
        $b0 = $d2 cmpg 1.0E-4;

        if $b0 < 0 goto label05;

        $b0 = $d2 cmpl 0.9999;

        if $b0 <= 0 goto label10;

     label05:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl3> = 0.02;

     label06:
        $b0 = $d3 cmpg 1.0001;

        if $b0 < 0 goto label07;

        $b0 = $d3 cmpl 999.9;

        if $b0 <= 0 goto label11;

     label07:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl4> = 4.0;

        return;

     label08:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl1> = $d0;

        goto label02;

     label09:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl2> = $d1;

        goto label04;

     label10:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl3> = $d2;

        goto label06;

     label11:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl4> = $d3;

        return;
    }
    public void setInterpolationControl(boolean, int)
    {
        org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        boolean $z0;
        int $i0;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: boolean useInterpolationError> = $z0;

        if $i0 <= 0 goto label1;

        if $i0 < 7 goto label2;

     label1:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int mudif> = 4;

        return;

     label2:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int mudif> = $i0;

        return;
    }
    public void setOrderControl(int, double, double)
    {
        org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        int $i0;
        double $d0, $d1;
        byte $b1;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;

        $i0 := @parameter0: int;

        $d0 := @parameter1: double;

        $d1 := @parameter2: double;

        if $i0 <= 6 goto label1;

        $i0 = $i0 % 2;

        if $i0 == 0 goto label2;

     label1:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int maxOrder> = 18;

     label2:
        $b1 = $d0 cmpg 1.0E-4;

        if $b1 < 0 goto label3;

        $b1 = $d0 cmpl 0.9999;

        if $b1 <= 0 goto label7;

     label3:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl1> = 0.8;

     label4:
        $b1 = $d1 cmpg 1.0E-4;

        if $b1 < 0 goto label5;

        $b1 = $d1 cmpl 0.9999;

        if $b1 <= 0 goto label8;

     label5:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl2> = 0.9;

     label6:
        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void initializeArrays()>();

        return;

     label7:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl1> = $d0;

        goto label4;

     label8:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl2> = $d1;

        goto label6;
    }
    public void setStabilityCheck(boolean, int, int, double)
    {
        org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        boolean $z0;
        double $d0;
        int $i0, $i1;
        byte $b2;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $d0 := @parameter3: double;

        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: boolean performTest> = $z0;

        if $i0 > 0 goto label1;

        $i0 = 2;

     label1:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int maxIter> = $i0;

        if $i1 > 0 goto label2;

        $i1 = 1;

     label2:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int maxChecks> = $i1;

        $b2 = $d0 cmpg 1.0E-4;

        if $b2 < 0 goto label3;

        $b2 = $d0 cmpl 0.9999;

        if $b2 <= 0 goto label4;

     label3:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stabilityReduction> = 0.5;

        return;

     label4:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stabilityReduction> = $d0;

        return;
    }
