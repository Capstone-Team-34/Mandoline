org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator extends org.apache.commons.math3.ode.AbstractFieldIntegrator
private org.apache.commons.math3.RealFieldElement initialStep
protected int mainSetDimension
private org.apache.commons.math3.RealFieldElement maxStep
private org.apache.commons.math3.RealFieldElement minStep
protected double scalAbsoluteTolerance
protected double scalRelativeTolerance
protected double[] vecAbsoluteTolerance
protected double[] vecRelativeTolerance
    public void <init>(org.apache.commons.math3.Field, java.lang.String, double, double, double, double)
    {
        org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator r0;
        org.apache.commons.math3.Field r1;
        java.lang.String $r2;
        double $d0, $d1, $d2, $d3;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator;

        r1 := @parameter0: org.apache.commons.math3.Field;

        $r2 := @parameter1: java.lang.String;

        $d0 := @parameter2: double;

        $d1 := @parameter3: double;

        $d2 := @parameter4: double;

        $d3 := @parameter5: double;

        specialinvoke r0.<org.apache.commons.math3.ode.AbstractFieldIntegrator: void <init>(org.apache.commons.math3.Field,java.lang.String)>(r1, $r2);

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: void setStepSizeControl(double,double,double,double)>($d0, $d1, $d2, $d3);

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: void resetInternalState()>();

        return;
    }
    public void <init>(org.apache.commons.math3.Field, java.lang.String, double, double, double[], double[])
    {
        org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator r0;
        org.apache.commons.math3.Field r1;
        java.lang.String $r2;
        double $d0, $d1;
        double[] $r3, $r4;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator;

        r1 := @parameter0: org.apache.commons.math3.Field;

        $r2 := @parameter1: java.lang.String;

        $d0 := @parameter2: double;

        $d1 := @parameter3: double;

        $r3 := @parameter4: double[];

        $r4 := @parameter5: double[];

        specialinvoke r0.<org.apache.commons.math3.ode.AbstractFieldIntegrator: void <init>(org.apache.commons.math3.Field,java.lang.String)>(r1, $r2);

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: void setStepSizeControl(double,double,double[],double[])>($d0, $d1, $r3, $r4);

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: void resetInternalState()>();

        return;
    }
    protected org.apache.commons.math3.RealFieldElement filterStep(org.apache.commons.math3.RealFieldElement, boolean, boolean) throws org.apache.commons.math3.exception.NumberIsTooSmallException
    {
        org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator r0;
        org.apache.commons.math3.RealFieldElement r1, r3, $r5, $r6;
        boolean $z0, $z1;
        org.apache.commons.math3.exception.util.LocalizedFormats $r2;
        java.lang.Object $r4;
        double $d0;
        byte $b0;
        org.apache.commons.math3.exception.NumberIsTooSmallException $r7;
        java.lang.Double $r8, $r9;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        r3 = r1;

        $r4 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.RealFieldElement minStep>;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $d0 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg 0.0;

        if $b0 >= 0 goto label1;

        if $z1 == 0 goto label3;

        if $z0 == 0 goto label2;

        r3 = r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.RealFieldElement minStep>;

     label1:
        r1 = r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.RealFieldElement maxStep>;

        $r4 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>(r1);

        r1 = (org.apache.commons.math3.RealFieldElement) $r4;

        $d0 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 <= 0 goto label4;

        r1 = r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.RealFieldElement maxStep>;

        return r1;

     label2:
        r1 = r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.RealFieldElement minStep>;

        $r4 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        goto label1;

     label3:
        $r7 = new org.apache.commons.math3.exception.NumberIsTooSmallException;

        $r2 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION>;

        $r4 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        r1 = (org.apache.commons.math3.RealFieldElement) $r4;

        $d0 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        r1 = r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.RealFieldElement minStep>;

        $d0 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        specialinvoke $r7.<org.apache.commons.math3.exception.NumberIsTooSmallException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)>($r2, $r8, $r9, 1);

        throw $r7;

     label4:
        r1 = r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.RealFieldElement maxStep>;

        $r4 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>(r1);

        r1 = (org.apache.commons.math3.RealFieldElement) $r4;

        $d0 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg 0.0;

        if $b0 >= 0 goto label5;

        r1 = r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.RealFieldElement maxStep>;

        $r4 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        r1 = (org.apache.commons.math3.RealFieldElement) $r4;

        return r1;

     label5:
        return r3;
    }
    public org.apache.commons.math3.RealFieldElement getMaxStep()
    {
        org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator r0;
        org.apache.commons.math3.RealFieldElement r1;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator;

        r1 = r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.RealFieldElement maxStep>;

        return r1;
    }
    public org.apache.commons.math3.RealFieldElement getMinStep()
    {
        org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator r0;
        org.apache.commons.math3.RealFieldElement r1;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator;

        r1 = r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.RealFieldElement minStep>;

        return r1;
    }
    public org.apache.commons.math3.RealFieldElement initializeStep(boolean, int, org.apache.commons.math3.RealFieldElement[], org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.ode.FieldEquationsMapper) throws org.apache.commons.math3.exception.MaxCountExceededException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator r0;
        boolean $z0;
        int $i0, i2, $i3;
        org.apache.commons.math3.RealFieldElement[] r1, $r6, $r7, r13;
        org.apache.commons.math3.ode.FieldODEStateAndDerivative r2;
        org.apache.commons.math3.ode.FieldEquationsMapper r3;
        org.apache.commons.math3.RealFieldElement $r4, r9, $r10, $r11, $r14;
        double $d0;
        byte $b1;
        java.lang.Object $r5;
        org.apache.commons.math3.Field $r8;
        java.lang.Object[] $r12;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        r1 := @parameter2: org.apache.commons.math3.RealFieldElement[];

        r2 := @parameter3: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        r3 := @parameter4: org.apache.commons.math3.ode.FieldEquationsMapper;

        $r4 = r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.RealFieldElement initialStep>;

        $d0 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b1 = $d0 cmpl 0.0;

        if $b1 <= 0 goto label02;

        if $z0 == 0 goto label01;

        $r4 = r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.RealFieldElement initialStep>;

        return $r4;

     label01:
        $r4 = r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.RealFieldElement initialStep>;

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r4 = (org.apache.commons.math3.RealFieldElement) $r5;

        return $r4;

     label02:
        $r6 = virtualinvoke r3.<org.apache.commons.math3.ode.FieldEquationsMapper: org.apache.commons.math3.RealFieldElement[] mapState(org.apache.commons.math3.ode.FieldODEState)>(r2);

        $r7 = virtualinvoke r3.<org.apache.commons.math3.ode.FieldEquationsMapper: org.apache.commons.math3.RealFieldElement[] mapDerivative(org.apache.commons.math3.ode.FieldODEStateAndDerivative)>(r2);

        $r8 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.Field getField()>();

        $r5 = interfaceinvoke $r8.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        r9 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r8 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.Field getField()>();

        $r5 = interfaceinvoke $r8.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        $r4 = (org.apache.commons.math3.RealFieldElement) $r5;

        i2 = 0;

     label03:
        $i3 = lengthof r1;

        if i2 >= $i3 goto label04;

        $r10 = $r6[i2];

        $r11 = r1[i2];

        $r5 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(java.lang.Object)>($r11);

        $r10 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r10);

        $r5 = interfaceinvoke r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r5);

        r9 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r10 = $r7[i2];

        $r11 = r1[i2];

        $r5 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(java.lang.Object)>($r11);

        $r10 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r10);

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r5);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r5;

        i2 = i2 + 1;

        goto label03;

     label04:
        $d0 = interfaceinvoke r9.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b1 = $d0 cmpg 1.0E-10;

        if $b1 < 0 goto label05;

        $d0 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b1 = $d0 cmpg 1.0E-10;

        if $b1 >= 0 goto label09;

     label05:
        $r8 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.Field getField()>();

        $r5 = interfaceinvoke $r8.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        r9 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>(1.0E-6);

        r9 = (org.apache.commons.math3.RealFieldElement) $r5;

     label06:
        if $z0 != 0 goto label07;

        $r5 = interfaceinvoke r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        r9 = (org.apache.commons.math3.RealFieldElement) $r5;

     label07:
        $r8 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.Field getField()>();

        i2 = lengthof $r6;

        $r12 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[] buildArray(org.apache.commons.math3.Field,int)>($r8, i2);

        r13 = (org.apache.commons.math3.RealFieldElement[]) $r12;

        i2 = 0;

     label08:
        $i3 = lengthof $r6;

        if i2 >= $i3 goto label10;

        $r10 = $r6[i2];

        $r11 = $r7[i2];

        $r5 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r9);

        $r5 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r5);

        $r10 = (org.apache.commons.math3.RealFieldElement) $r5;

        r13[i2] = $r10;

        i2 = i2 + 1;

        goto label08;

     label09:
        $r5 = interfaceinvoke r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(java.lang.Object)>($r4);

        r9 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object sqrt()>();

        r9 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(0.01);

        r9 = (org.apache.commons.math3.RealFieldElement) $r5;

        goto label06;

     label10:
        $r10 = virtualinvoke r2.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $r5 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>(r9);

        $r10 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r6 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.RealFieldElement[] computeDerivatives(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement[])>($r10, r13);

        $r8 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.Field getField()>();

        $r5 = interfaceinvoke $r8.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r5;

        i2 = 0;

     label11:
        $i3 = lengthof r1;

        if i2 >= $i3 goto label12;

        $r11 = $r6[i2];

        $r14 = $r7[i2];

        $r5 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r14);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r14 = r1[i2];

        $r5 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(java.lang.Object)>($r14);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r11);

        $r5 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r5);

        $r10 = (org.apache.commons.math3.RealFieldElement) $r5;

        i2 = i2 + 1;

        goto label11;

     label12:
        $r5 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object sqrt()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(java.lang.Object)>(r9);

        $r10 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object sqrt()>();

        $r4 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r4 = staticinvoke <org.apache.commons.math3.util.MathUtils: org.apache.commons.math3.RealFieldElement max(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r4, $r10);

        $d0 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b1 = $d0 cmpg 1.0E-15;

        if $b1 >= 0 goto label15;

        $r8 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.Field getField()>();

        $r5 = interfaceinvoke $r8.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        $r4 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>(1.0E-6);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(0.001);

        $r10 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r4 = staticinvoke <org.apache.commons.math3.util.MathUtils: org.apache.commons.math3.RealFieldElement max(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r4, $r10);

     label13:
        $r5 = interfaceinvoke r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        r9 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(100);

        r9 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r4 = staticinvoke <org.apache.commons.math3.util.MathUtils: org.apache.commons.math3.RealFieldElement min(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>(r9, $r4);

        r9 = virtualinvoke r2.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $r5 = interfaceinvoke r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        r9 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(1.0E-12);

        r9 = (org.apache.commons.math3.RealFieldElement) $r5;

        r9 = staticinvoke <org.apache.commons.math3.util.MathUtils: org.apache.commons.math3.RealFieldElement max(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r4, r9);

        $r4 = r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.RealFieldElement minStep>;

        $r10 = r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.RealFieldElement maxStep>;

        r9 = staticinvoke <org.apache.commons.math3.util.MathUtils: org.apache.commons.math3.RealFieldElement min(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r10, r9);

        $r4 = staticinvoke <org.apache.commons.math3.util.MathUtils: org.apache.commons.math3.RealFieldElement max(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r4, r9);

        r9 = $r4;

        if $z0 != 0 goto label14;

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        r9 = (org.apache.commons.math3.RealFieldElement) $r5;

     label14:
        return r9;

     label15:
        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(100);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object reciprocal()>();

        $r4 = (org.apache.commons.math3.RealFieldElement) $r5;

        $d0 = (double) $i0;

        $d0 = 1.0 / $d0;

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object pow(double)>($d0);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r5;

        goto label13;
    }
    protected void resetInternalState()
    {
        org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator r0;
        org.apache.commons.math3.RealFieldElement $r1, $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator;

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: void setStepStart(org.apache.commons.math3.ode.FieldODEStateAndDerivative)>(null);

        $r2 = r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.RealFieldElement minStep>;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.RealFieldElement maxStep>;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r1);

        $r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object sqrt()>();

        $r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: void setStepSize(org.apache.commons.math3.RealFieldElement)>($r1);

        return;
    }
    protected void sanityChecks(org.apache.commons.math3.ode.FieldODEState, org.apache.commons.math3.RealFieldElement) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NumberIsTooSmallException
    {
        org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator r0;
        org.apache.commons.math3.ode.FieldODEState r1;
        org.apache.commons.math3.RealFieldElement r2;
        int $i0, $i1;
        double[] $r3;
        org.apache.commons.math3.exception.DimensionMismatchException $r4;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator;

        r1 := @parameter0: org.apache.commons.math3.ode.FieldODEState;

        r2 := @parameter1: org.apache.commons.math3.RealFieldElement;

        specialinvoke r0.<org.apache.commons.math3.ode.AbstractFieldIntegrator: void sanityChecks(org.apache.commons.math3.ode.FieldODEState,org.apache.commons.math3.RealFieldElement)>(r1, r2);

        $i0 = virtualinvoke r1.<org.apache.commons.math3.ode.FieldODEState: int getStateDimension()>();

        r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: int mainSetDimension> = $i0;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: double[] vecAbsoluteTolerance>;

        if $r3 == null goto label1;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: double[] vecAbsoluteTolerance>;

        $i0 = lengthof $r3;

        $i1 = r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: int mainSetDimension>;

        if $i0 == $i1 goto label1;

        $r4 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i0 = r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: int mainSetDimension>;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: double[] vecAbsoluteTolerance>;

        $i1 = lengthof $r3;

        specialinvoke $r4.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i0, $i1);

        throw $r4;

     label1:
        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: double[] vecRelativeTolerance>;

        if $r3 == null goto label2;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: double[] vecRelativeTolerance>;

        $i0 = lengthof $r3;

        $i1 = r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: int mainSetDimension>;

        if $i0 == $i1 goto label2;

        $r4 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i0 = r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: int mainSetDimension>;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: double[] vecRelativeTolerance>;

        $i1 = lengthof $r3;

        specialinvoke $r4.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i0, $i1);

        throw $r4;

     label2:
        return;
    }
    public void setInitialStepSize(org.apache.commons.math3.RealFieldElement)
    {
        org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator r0;
        org.apache.commons.math3.RealFieldElement r1, $r2;
        java.lang.Object $r3;
        double $d0;
        byte $b0;
        org.apache.commons.math3.Field $r4;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        $r2 = r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.RealFieldElement minStep>;

        $r3 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r2);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        $d0 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg 0.0;

        if $b0 < 0 goto label1;

        $r2 = r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.RealFieldElement maxStep>;

        $r3 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r2);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        $d0 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 <= 0 goto label2;

     label1:
        $r4 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.Field getField()>();

        $r3 = interfaceinvoke $r4.<org.apache.commons.math3.Field: java.lang.Object getOne()>();

        r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.RealFieldElement initialStep> = r1;

        return;

     label2:
        r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.RealFieldElement initialStep> = r1;

        return;
    }
    public void setStepSizeControl(double, double, double, double)
    {
        org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator r0;
        double $d0, $d1, $d2, $d3;
        org.apache.commons.math3.Field $r1;
        java.lang.Object $r2;
        org.apache.commons.math3.RealFieldElement $r3;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $d2 := @parameter2: double;

        $d3 := @parameter3: double;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.Field getField()>();

        $r2 = interfaceinvoke $r1.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        $r3 = (org.apache.commons.math3.RealFieldElement) $r2;

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d0);

        $r2 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>($d0);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r2;

        r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.RealFieldElement minStep> = $r3;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.Field getField()>();

        $r2 = interfaceinvoke $r1.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        $r3 = (org.apache.commons.math3.RealFieldElement) $r2;

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d1);

        $r2 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>($d0);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r2;

        r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.RealFieldElement maxStep> = $r3;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.Field getField()>();

        $r2 = interfaceinvoke $r1.<org.apache.commons.math3.Field: java.lang.Object getOne()>();

        $r3 = (org.apache.commons.math3.RealFieldElement) $r2;

        $r2 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r3 = (org.apache.commons.math3.RealFieldElement) $r2;

        r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.RealFieldElement initialStep> = $r3;

        r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: double scalAbsoluteTolerance> = $d2;

        r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: double scalRelativeTolerance> = $d3;

        r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: double[] vecAbsoluteTolerance> = null;

        r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: double[] vecRelativeTolerance> = null;

        return;
    }
    public void setStepSizeControl(double, double, double[], double[])
    {
        org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator r0;
        double $d0, $d1;
        double[] $r1, $r2;
        org.apache.commons.math3.Field $r3;
        java.lang.Object $r4;
        org.apache.commons.math3.RealFieldElement $r5;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $r1 := @parameter2: double[];

        $r2 := @parameter3: double[];

        $r3 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.Field getField()>();

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d0);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>($d0);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.RealFieldElement minStep> = $r5;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.Field getField()>();

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d1);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>($d0);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.RealFieldElement maxStep> = $r5;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.Field getField()>();

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.Field: java.lang.Object getOne()>();

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: org.apache.commons.math3.RealFieldElement initialStep> = $r5;

        r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: double scalAbsoluteTolerance> = 0.0;

        r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: double scalRelativeTolerance> = 0.0;

        $r4 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (double[]) $r4;

        r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: double[] vecAbsoluteTolerance> = $r1;

        $r4 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (double[]) $r4;

        r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator: double[] vecRelativeTolerance> = $r1;

        return;
    }
