org.apache.commons.math3.ode.events.EventState$1 extends java.lang.Object implements org.apache.commons.math3.analysis.UnivariateFunction
final org.apache.commons.math3.ode.events.EventState this$0
final org.apache.commons.math3.ode.sampling.StepInterpolator val$interpolator
    void <init>(org.apache.commons.math3.ode.events.EventState, org.apache.commons.math3.ode.sampling.StepInterpolator)
    {
        org.apache.commons.math3.ode.events.EventState$1 r0;
        org.apache.commons.math3.ode.events.EventState $r1;
        org.apache.commons.math3.ode.sampling.StepInterpolator $r2;

        r0 := @this: org.apache.commons.math3.ode.events.EventState$1;

        $r1 := @parameter0: org.apache.commons.math3.ode.events.EventState;

        $r2 := @parameter1: org.apache.commons.math3.ode.sampling.StepInterpolator;

        r0.<org.apache.commons.math3.ode.events.EventState$1: org.apache.commons.math3.ode.events.EventState this$0> = $r1;

        r0.<org.apache.commons.math3.ode.events.EventState$1: org.apache.commons.math3.ode.sampling.StepInterpolator val$interpolator> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public double value(double) throws org.apache.commons.math3.ode.events.EventState$LocalMaxCountExceededException
    {
        org.apache.commons.math3.ode.events.EventState$1 r0;
        double $d0;
        org.apache.commons.math3.exception.MaxCountExceededException r1;
        org.apache.commons.math3.ode.sampling.StepInterpolator $r2;
        org.apache.commons.math3.ode.events.EventState $r3;
        org.apache.commons.math3.ode.events.EventHandler $r4;
        double[] $r5;
        org.apache.commons.math3.ode.events.EventState$LocalMaxCountExceededException $r6;

        r0 := @this: org.apache.commons.math3.ode.events.EventState$1;

        $d0 := @parameter0: double;

        $r2 = r0.<org.apache.commons.math3.ode.events.EventState$1: org.apache.commons.math3.ode.sampling.StepInterpolator val$interpolator>;

     label1:
        interfaceinvoke $r2.<org.apache.commons.math3.ode.sampling.StepInterpolator: void setInterpolatedTime(double)>($d0);

     label2:
        $r3 = r0.<org.apache.commons.math3.ode.events.EventState$1: org.apache.commons.math3.ode.events.EventState this$0>;

     label3:
        $r4 = staticinvoke <org.apache.commons.math3.ode.events.EventState: org.apache.commons.math3.ode.events.EventHandler access$100(org.apache.commons.math3.ode.events.EventState)>($r3);

     label4:
        $r3 = r0.<org.apache.commons.math3.ode.events.EventState$1: org.apache.commons.math3.ode.events.EventState this$0>;

        $r2 = r0.<org.apache.commons.math3.ode.events.EventState$1: org.apache.commons.math3.ode.sampling.StepInterpolator val$interpolator>;

     label5:
        $r5 = staticinvoke <org.apache.commons.math3.ode.events.EventState: double[] access$000(org.apache.commons.math3.ode.events.EventState,org.apache.commons.math3.ode.sampling.StepInterpolator)>($r3, $r2);

        $d0 = interfaceinvoke $r4.<org.apache.commons.math3.ode.events.EventHandler: double g(double,double[])>($d0, $r5);

     label6:
        return $d0;

     label7:
        r1 := @caughtexception;

        $r6 = new org.apache.commons.math3.ode.events.EventState$LocalMaxCountExceededException;

        specialinvoke $r6.<org.apache.commons.math3.ode.events.EventState$LocalMaxCountExceededException: void <init>(org.apache.commons.math3.exception.MaxCountExceededException)>(r1);

        throw $r6;

        catch org.apache.commons.math3.exception.MaxCountExceededException from label1 to label2 with label7;
        catch org.apache.commons.math3.exception.MaxCountExceededException from label3 to label4 with label7;
        catch org.apache.commons.math3.exception.MaxCountExceededException from label5 to label6 with label7;
    }
