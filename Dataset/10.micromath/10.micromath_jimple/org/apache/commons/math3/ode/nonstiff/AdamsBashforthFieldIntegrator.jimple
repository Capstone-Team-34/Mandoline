org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator extends org.apache.commons.math3.ode.nonstiff.AdamsFieldIntegrator
private static final java.lang.String METHOD_NAME
    public void <init>(org.apache.commons.math3.Field, int, double, double, double, double) throws org.apache.commons.math3.exception.NumberIsTooSmallException
    {
        org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator r0;
        org.apache.commons.math3.Field r1;
        int $i0;
        double $d0, $d1, $d2, $d3;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator;

        r1 := @parameter0: org.apache.commons.math3.Field;

        $i0 := @parameter1: int;

        $d0 := @parameter2: double;

        $d1 := @parameter3: double;

        $d2 := @parameter4: double;

        $d3 := @parameter5: double;

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsFieldIntegrator: void <init>(org.apache.commons.math3.Field,java.lang.String,int,int,double,double,double,double)>(r1, "Adams-Bashforth", $i0, $i0, $d0, $d1, $d2, $d3);

        return;
    }
    public void <init>(org.apache.commons.math3.Field, int, double, double, double[], double[]) throws java.lang.IllegalArgumentException
    {
        org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator r0;
        org.apache.commons.math3.Field r1;
        int $i0;
        double $d0, $d1;
        double[] $r2, $r3;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator;

        r1 := @parameter0: org.apache.commons.math3.Field;

        $i0 := @parameter1: int;

        $d0 := @parameter2: double;

        $d1 := @parameter3: double;

        $r2 := @parameter4: double[];

        $r3 := @parameter5: double[];

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsFieldIntegrator: void <init>(org.apache.commons.math3.Field,java.lang.String,int,int,double,double,double[],double[])>(r1, "Adams-Bashforth", $i0, $i0, $d0, $d1, $r2, $r3);

        return;
    }
    private org.apache.commons.math3.RealFieldElement errorEstimation(org.apache.commons.math3.RealFieldElement[], org.apache.commons.math3.RealFieldElement[], org.apache.commons.math3.RealFieldElement[], org.apache.commons.math3.linear.FieldMatrix)
    {
        org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator r0;
        org.apache.commons.math3.RealFieldElement[] r1, r2, r3;
        org.apache.commons.math3.linear.FieldMatrix r4;
        org.apache.commons.math3.Field $r5;
        java.lang.Object $r6;
        org.apache.commons.math3.RealFieldElement r7, $r8, r10, $r12, $r13;
        int i0, $i1;
        double[] $r9;
        double $d0;
        byte b2;
        org.apache.commons.math3.FieldElement $r11;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement[];

        r2 := @parameter1: org.apache.commons.math3.RealFieldElement[];

        r3 := @parameter2: org.apache.commons.math3.RealFieldElement[];

        r4 := @parameter3: org.apache.commons.math3.linear.FieldMatrix;

        $r5 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.Field getField()>();

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        i0 = 0;

     label1:
        $i1 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: int mainSetDimension>;

        if i0 >= $i1 goto label8;

        $r8 = r2[i0];

        $r6 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        $r8 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r9 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: double[] vecAbsoluteTolerance>;

        if $r9 != null goto label5;

        $d0 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: double scalRelativeTolerance>;

        $r6 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r6;

        $d0 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: double scalAbsoluteTolerance>;

        $r6 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>($d0);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r6;

     label2:
        $r5 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.Field getField()>();

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        r10 = (org.apache.commons.math3.RealFieldElement) $r6;

        $i1 = interfaceinvoke r4.<org.apache.commons.math3.linear.FieldMatrix: int getRowDimension()>();

        $i1 = $i1 % 2;

        if $i1 != 0 goto label6;

        b2 = -1;

     label3:
        $i1 = interfaceinvoke r4.<org.apache.commons.math3.linear.FieldMatrix: int getRowDimension()>();

        $i1 = $i1 + -1;

     label4:
        if $i1 < 0 goto label7;

        $r11 = interfaceinvoke r4.<org.apache.commons.math3.linear.FieldMatrix: org.apache.commons.math3.FieldElement getEntry(int,int)>($i1, i0);

        $r12 = (org.apache.commons.math3.RealFieldElement) $r11;

        $r6 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(b2);

        $r6 = interfaceinvoke r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        r10 = (org.apache.commons.math3.RealFieldElement) $r6;

        b2 = neg b2;

        $i1 = $i1 + -1;

        goto label4;

     label5:
        $r9 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: double[] vecRelativeTolerance>;

        $d0 = $r9[i0];

        $r6 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r9 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: double[] vecAbsoluteTolerance>;

        $d0 = $r9[i0];

        $r6 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>($d0);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r6;

        goto label2;

     label6:
        b2 = 1;

        goto label3;

     label7:
        $r12 = r3[i0];

        $r6 = interfaceinvoke r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r12);

        r10 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r12 = r2[i0];

        $r13 = r1[i0];

        $r6 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r13);

        $r12 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>(r10);

        r10 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(java.lang.Object)>($r8);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r6 = interfaceinvoke r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        i0 = i0 + 1;

        goto label1;

     label8:
        i0 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: int mainSetDimension>;

        $d0 = (double) i0;

        $r6 = interfaceinvoke r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(double)>($d0);

        r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object sqrt()>();

        r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        return r7;
    }
    public org.apache.commons.math3.ode.FieldODEStateAndDerivative integrate(org.apache.commons.math3.ode.FieldExpandableODE, org.apache.commons.math3.ode.FieldODEState, org.apache.commons.math3.RealFieldElement) throws org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MaxCountExceededException, org.apache.commons.math3.exception.NoBracketingException
    {
        org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator r0;
        org.apache.commons.math3.ode.FieldExpandableODE r1;
        org.apache.commons.math3.ode.FieldODEState r2;
        org.apache.commons.math3.RealFieldElement r3, $r4, $r9, $r18;
        org.apache.commons.math3.ode.FieldEquationsMapper $r5;
        org.apache.commons.math3.RealFieldElement[] $r6, $r10, r14, $r15, $r16;
        org.apache.commons.math3.ode.FieldODEStateAndDerivative $r7, $r19;
        java.lang.Object $r8;
        double $d0;
        byte $b0;
        boolean z0, $z1;
        org.apache.commons.math3.linear.Array2DRowFieldMatrix $r11, $r17;
        org.apache.commons.math3.Field $r12;
        int $i1, $i2;
        java.lang.Object[] $r13;
        org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator $r20;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator;

        r1 := @parameter0: org.apache.commons.math3.ode.FieldExpandableODE;

        r2 := @parameter1: org.apache.commons.math3.ode.FieldODEState;

        r3 := @parameter2: org.apache.commons.math3.RealFieldElement;

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: void sanityChecks(org.apache.commons.math3.ode.FieldODEState,org.apache.commons.math3.RealFieldElement)>(r2, r3);

        $r4 = virtualinvoke r2.<org.apache.commons.math3.ode.FieldODEState: org.apache.commons.math3.RealFieldElement getTime()>();

        $r5 = virtualinvoke r1.<org.apache.commons.math3.ode.FieldExpandableODE: org.apache.commons.math3.ode.FieldEquationsMapper getMapper()>();

        $r6 = virtualinvoke $r5.<org.apache.commons.math3.ode.FieldEquationsMapper: org.apache.commons.math3.RealFieldElement[] mapState(org.apache.commons.math3.ode.FieldODEState)>(r2);

        $r7 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.ode.FieldODEStateAndDerivative initIntegration(org.apache.commons.math3.ode.FieldExpandableODE,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement[],org.apache.commons.math3.RealFieldElement)>(r1, $r4, $r6, r3);

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: void setStepStart(org.apache.commons.math3.ode.FieldODEStateAndDerivative)>($r7);

        $r4 = virtualinvoke r2.<org.apache.commons.math3.ode.FieldODEState: org.apache.commons.math3.RealFieldElement getTime()>();

        $r8 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r8;

        $d0 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 <= 0 goto label05;

        z0 = 1;

     label01:
        $r7 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getStepStart()>();

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: void start(org.apache.commons.math3.ode.FieldExpandableODE,org.apache.commons.math3.ode.FieldODEState,org.apache.commons.math3.RealFieldElement)>(r1, $r7, r3);

        $r7 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getStepStart()>();

        $r4 = virtualinvoke $r7.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $r9 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.RealFieldElement getStepSize()>();

        $r8 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r9);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r9 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.RealFieldElement getStepSize()>();

        $r10 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.RealFieldElement[] scaled>;

        $r11 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.linear.Array2DRowFieldMatrix nordsieck>;

        $r7 = staticinvoke <org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative taylor(org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement[],org.apache.commons.math3.linear.Array2DRowFieldMatrix)>($r7, $r4, $r9, $r10, $r11);

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: void setIsLastStep(boolean)>(0);

     label02:
        $r10 = null;

        $r12 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.Field getField()>();

        $i1 = lengthof $r6;

        $r13 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[] buildArray(org.apache.commons.math3.Field,int)>($r12, $i1);

        r14 = (org.apache.commons.math3.RealFieldElement[]) $r13;

        $r11 = null;

        $r12 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.Field getField()>();

        $r8 = interfaceinvoke $r12.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        $r4 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r8 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>(10.0);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r8;

     label03:
        $r8 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>(1.0);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r8;

        $d0 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 < 0 goto label07;

        $r15 = virtualinvoke $r7.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement[] getState()>();

        $r10 = $r15;

        $r4 = virtualinvoke $r7.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $r16 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.RealFieldElement[] computeDerivatives(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement[])>($r4, $r15);

        $i1 = 0;

     label04:
        $i2 = lengthof r14;

        if $i1 >= $i2 goto label06;

        $r4 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.RealFieldElement getStepSize()>();

        $r9 = $r16[$i1];

        $r8 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r9);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r8;

        r14[$i1] = $r4;

        $i1 = $i1 + 1;

        goto label04;

     label05:
        z0 = 0;

        goto label01;

     label06:
        $r11 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.linear.Array2DRowFieldMatrix nordsieck>;

        $r17 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.linear.Array2DRowFieldMatrix updateHighOrderDerivativesPhase1(org.apache.commons.math3.linear.Array2DRowFieldMatrix)>($r11);

        $r11 = $r17;

        $r16 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.RealFieldElement[] scaled>;

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: void updateHighOrderDerivativesPhase2(org.apache.commons.math3.RealFieldElement[],org.apache.commons.math3.RealFieldElement[],org.apache.commons.math3.linear.Array2DRowFieldMatrix)>($r16, r14, $r17);

        $r9 = specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.RealFieldElement errorEstimation(org.apache.commons.math3.RealFieldElement[],org.apache.commons.math3.RealFieldElement[],org.apache.commons.math3.RealFieldElement[],org.apache.commons.math3.linear.FieldMatrix)>($r6, $r15, r14, $r17);

        $r4 = $r9;

        $r8 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>(1.0);

        $r18 = (org.apache.commons.math3.RealFieldElement) $r8;

        $d0 = interfaceinvoke $r18.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 < 0 goto label03;

        $r9 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.RealFieldElement computeStepGrowShrinkFactor(org.apache.commons.math3.RealFieldElement)>($r9);

        $r18 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.RealFieldElement getStepSize()>();

        $r8 = interfaceinvoke $r18.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r9);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r9 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.RealFieldElement filterStep(org.apache.commons.math3.RealFieldElement,boolean,boolean)>($r9, z0, 0);

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: void rescale(org.apache.commons.math3.RealFieldElement)>($r9);

        $r7 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getStepStart()>();

        $r19 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getStepStart()>();

        $r9 = virtualinvoke $r19.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $r18 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.RealFieldElement getStepSize()>();

        $r8 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r18);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r18 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.RealFieldElement getStepSize()>();

        $r15 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.RealFieldElement[] scaled>;

        $r17 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.linear.Array2DRowFieldMatrix nordsieck>;

        $r7 = staticinvoke <org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative taylor(org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement[],org.apache.commons.math3.linear.Array2DRowFieldMatrix)>($r7, $r9, $r18, $r15, $r17);

        goto label03;

     label07:
        $r20 = new org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator;

        $r9 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.RealFieldElement getStepSize()>();

        $r19 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getStepStart()>();

        $r5 = virtualinvoke r1.<org.apache.commons.math3.ode.FieldExpandableODE: org.apache.commons.math3.ode.FieldEquationsMapper getMapper()>();

        specialinvoke $r20.<org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.RealFieldElement[],org.apache.commons.math3.linear.Array2DRowFieldMatrix,boolean,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldEquationsMapper)>($r9, $r7, r14, $r11, z0, $r19, $r7, $r5);

        $r19 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.ode.FieldODEStateAndDerivative acceptStep(org.apache.commons.math3.ode.sampling.AbstractFieldStepInterpolator,org.apache.commons.math3.RealFieldElement)>($r20, r3);

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: void setStepStart(org.apache.commons.math3.ode.FieldODEStateAndDerivative)>($r19);

        r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.RealFieldElement[] scaled> = r14;

        r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.linear.Array2DRowFieldMatrix nordsieck> = $r11;

        $z1 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: boolean isLastStep()>();

        if $z1 != 0 goto label12;

        $i1 = lengthof $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, $r6, 0, $i1);

        $z1 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: boolean resetOccurred()>();

        if $z1 == 0 goto label08;

        $r7 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getStepStart()>();

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: void start(org.apache.commons.math3.ode.FieldExpandableODE,org.apache.commons.math3.ode.FieldODEState,org.apache.commons.math3.RealFieldElement)>(r1, $r7, r3);

     label08:
        $r4 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.RealFieldElement computeStepGrowShrinkFactor(org.apache.commons.math3.RealFieldElement)>($r4);

        $r9 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.RealFieldElement getStepSize()>();

        $r8 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r7 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getStepStart()>();

        $r9 = virtualinvoke $r7.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $r8 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r8;

        if z0 == 0 goto label14;

        $r8 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>(r3);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r8;

        $d0 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 < 0 goto label13;

        $z1 = 1;

     label09:
        $r9 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.RealFieldElement filterStep(org.apache.commons.math3.RealFieldElement,boolean,boolean)>($r4, z0, $z1);

        $r4 = $r9;

        $r7 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getStepStart()>();

        $r18 = virtualinvoke $r7.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $r8 = interfaceinvoke $r18.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r9);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r8;

        if z0 == 0 goto label17;

        $r8 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>(r3);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r8;

        $d0 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 < 0 goto label16;

        $z1 = 1;

     label10:
        if $z1 == 0 goto label11;

        $r7 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getStepStart()>();

        $r4 = virtualinvoke $r7.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $r8 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r8;

     label11:
        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: void rescale(org.apache.commons.math3.RealFieldElement)>($r4);

        $r7 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getStepStart()>();

        $r19 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getStepStart()>();

        $r4 = virtualinvoke $r19.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $r9 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.RealFieldElement getStepSize()>();

        $r8 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r9);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r9 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.RealFieldElement getStepSize()>();

        $r10 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.RealFieldElement[] scaled>;

        $r11 = r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.linear.Array2DRowFieldMatrix nordsieck>;

        $r7 = staticinvoke <org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative taylor(org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement[],org.apache.commons.math3.linear.Array2DRowFieldMatrix)>($r7, $r4, $r9, $r10, $r11);

     label12:
        $z1 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: boolean isLastStep()>();

        if $z1 == 0 goto label02;

        $r7 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getStepStart()>();

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: void setStepStart(org.apache.commons.math3.ode.FieldODEStateAndDerivative)>(null);

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator: void setStepSize(org.apache.commons.math3.RealFieldElement)>(null);

        return $r7;

     label13:
        $z1 = 0;

        goto label09;

     label14:
        $r8 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>(r3);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r8;

        $d0 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg 0.0;

        if $b0 > 0 goto label15;

        $z1 = 1;

        goto label09;

     label15:
        $z1 = 0;

        goto label09;

     label16:
        $z1 = 0;

        goto label10;

     label17:
        $r8 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>(r3);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r8;

        $d0 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg 0.0;

        if $b0 > 0 goto label18;

        $z1 = 1;

        goto label10;

     label18:
        $z1 = 0;

        goto label10;
    }
