org.apache.commons.math3.ode.sampling.FieldStepNormalizer extends java.lang.Object implements org.apache.commons.math3.ode.sampling.FieldStepHandler
private final org.apache.commons.math3.ode.sampling.StepNormalizerBounds bounds
private org.apache.commons.math3.ode.FieldODEStateAndDerivative first
private boolean forward
private double h
private final org.apache.commons.math3.ode.sampling.FieldFixedStepHandler handler
private org.apache.commons.math3.ode.FieldODEStateAndDerivative last
private final org.apache.commons.math3.ode.sampling.StepNormalizerMode mode
    public void <init>(double, org.apache.commons.math3.ode.sampling.FieldFixedStepHandler)
    {
        org.apache.commons.math3.ode.sampling.FieldStepNormalizer r0;
        double $d0;
        org.apache.commons.math3.ode.sampling.FieldFixedStepHandler r1;
        org.apache.commons.math3.ode.sampling.StepNormalizerMode $r2;
        org.apache.commons.math3.ode.sampling.StepNormalizerBounds $r3;

        r0 := @this: org.apache.commons.math3.ode.sampling.FieldStepNormalizer;

        $d0 := @parameter0: double;

        r1 := @parameter1: org.apache.commons.math3.ode.sampling.FieldFixedStepHandler;

        $r2 = <org.apache.commons.math3.ode.sampling.StepNormalizerMode: org.apache.commons.math3.ode.sampling.StepNormalizerMode INCREMENT>;

        $r3 = <org.apache.commons.math3.ode.sampling.StepNormalizerBounds: org.apache.commons.math3.ode.sampling.StepNormalizerBounds FIRST>;

        specialinvoke r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: void <init>(double,org.apache.commons.math3.ode.sampling.FieldFixedStepHandler,org.apache.commons.math3.ode.sampling.StepNormalizerMode,org.apache.commons.math3.ode.sampling.StepNormalizerBounds)>($d0, r1, $r2, $r3);

        return;
    }
    public void <init>(double, org.apache.commons.math3.ode.sampling.FieldFixedStepHandler, org.apache.commons.math3.ode.sampling.StepNormalizerBounds)
    {
        org.apache.commons.math3.ode.sampling.FieldStepNormalizer r0;
        double $d0;
        org.apache.commons.math3.ode.sampling.FieldFixedStepHandler r1;
        org.apache.commons.math3.ode.sampling.StepNormalizerBounds $r2;
        org.apache.commons.math3.ode.sampling.StepNormalizerMode $r3;

        r0 := @this: org.apache.commons.math3.ode.sampling.FieldStepNormalizer;

        $d0 := @parameter0: double;

        r1 := @parameter1: org.apache.commons.math3.ode.sampling.FieldFixedStepHandler;

        $r2 := @parameter2: org.apache.commons.math3.ode.sampling.StepNormalizerBounds;

        $r3 = <org.apache.commons.math3.ode.sampling.StepNormalizerMode: org.apache.commons.math3.ode.sampling.StepNormalizerMode INCREMENT>;

        specialinvoke r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: void <init>(double,org.apache.commons.math3.ode.sampling.FieldFixedStepHandler,org.apache.commons.math3.ode.sampling.StepNormalizerMode,org.apache.commons.math3.ode.sampling.StepNormalizerBounds)>($d0, r1, $r3, $r2);

        return;
    }
    public void <init>(double, org.apache.commons.math3.ode.sampling.FieldFixedStepHandler, org.apache.commons.math3.ode.sampling.StepNormalizerMode)
    {
        org.apache.commons.math3.ode.sampling.FieldStepNormalizer r0;
        double $d0;
        org.apache.commons.math3.ode.sampling.FieldFixedStepHandler r1;
        org.apache.commons.math3.ode.sampling.StepNormalizerMode $r2;
        org.apache.commons.math3.ode.sampling.StepNormalizerBounds $r3;

        r0 := @this: org.apache.commons.math3.ode.sampling.FieldStepNormalizer;

        $d0 := @parameter0: double;

        r1 := @parameter1: org.apache.commons.math3.ode.sampling.FieldFixedStepHandler;

        $r2 := @parameter2: org.apache.commons.math3.ode.sampling.StepNormalizerMode;

        $r3 = <org.apache.commons.math3.ode.sampling.StepNormalizerBounds: org.apache.commons.math3.ode.sampling.StepNormalizerBounds FIRST>;

        specialinvoke r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: void <init>(double,org.apache.commons.math3.ode.sampling.FieldFixedStepHandler,org.apache.commons.math3.ode.sampling.StepNormalizerMode,org.apache.commons.math3.ode.sampling.StepNormalizerBounds)>($d0, r1, $r2, $r3);

        return;
    }
    public void <init>(double, org.apache.commons.math3.ode.sampling.FieldFixedStepHandler, org.apache.commons.math3.ode.sampling.StepNormalizerMode, org.apache.commons.math3.ode.sampling.StepNormalizerBounds)
    {
        org.apache.commons.math3.ode.sampling.FieldStepNormalizer r0;
        double $d0;
        org.apache.commons.math3.ode.sampling.FieldFixedStepHandler r1;
        org.apache.commons.math3.ode.sampling.StepNormalizerMode $r2;
        org.apache.commons.math3.ode.sampling.StepNormalizerBounds $r3;

        r0 := @this: org.apache.commons.math3.ode.sampling.FieldStepNormalizer;

        $d0 := @parameter0: double;

        r1 := @parameter1: org.apache.commons.math3.ode.sampling.FieldFixedStepHandler;

        $r2 := @parameter2: org.apache.commons.math3.ode.sampling.StepNormalizerMode;

        $r3 := @parameter3: org.apache.commons.math3.ode.sampling.StepNormalizerBounds;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d0);

        r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: double h> = $d0;

        r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: org.apache.commons.math3.ode.sampling.FieldFixedStepHandler handler> = r1;

        r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: org.apache.commons.math3.ode.sampling.StepNormalizerMode mode> = $r2;

        r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: org.apache.commons.math3.ode.sampling.StepNormalizerBounds bounds> = $r3;

        r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: org.apache.commons.math3.ode.FieldODEStateAndDerivative first> = null;

        r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: org.apache.commons.math3.ode.FieldODEStateAndDerivative last> = null;

        r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: boolean forward> = 1;

        return;
    }
    private void doNormalizedStep(boolean)
    {
        org.apache.commons.math3.ode.sampling.FieldStepNormalizer r0;
        boolean $z0, $z1;
        org.apache.commons.math3.ode.FieldODEStateAndDerivative $r1;
        org.apache.commons.math3.ode.sampling.StepNormalizerBounds $r2;
        org.apache.commons.math3.RealFieldElement $r3;
        double $d0, $d1;
        byte $b0;
        org.apache.commons.math3.ode.sampling.FieldFixedStepHandler $r4;

        r0 := @this: org.apache.commons.math3.ode.sampling.FieldStepNormalizer;

        $z0 := @parameter0: boolean;

        $r2 = r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: org.apache.commons.math3.ode.sampling.StepNormalizerBounds bounds>;

        $z1 = virtualinvoke $r2.<org.apache.commons.math3.ode.sampling.StepNormalizerBounds: boolean firstIncluded()>();

        if $z1 != 0 goto label1;

        $r1 = r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: org.apache.commons.math3.ode.FieldODEStateAndDerivative first>;

        $r3 = virtualinvoke $r1.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $d0 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $r1 = r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: org.apache.commons.math3.ode.FieldODEStateAndDerivative last>;

        $r3 = virtualinvoke $r1.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $d1 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl $d1;

        if $b0 != 0 goto label1;

        return;

     label1:
        $r4 = r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: org.apache.commons.math3.ode.sampling.FieldFixedStepHandler handler>;

        $r1 = r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: org.apache.commons.math3.ode.FieldODEStateAndDerivative last>;

        interfaceinvoke $r4.<org.apache.commons.math3.ode.sampling.FieldFixedStepHandler: void handleStep(org.apache.commons.math3.ode.FieldODEStateAndDerivative,boolean)>($r1, $z0);

        return;
    }
    private boolean isNextInStep(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.ode.sampling.FieldStepInterpolator)
    {
        org.apache.commons.math3.ode.sampling.FieldStepNormalizer r0;
        org.apache.commons.math3.RealFieldElement r1;
        org.apache.commons.math3.ode.sampling.FieldStepInterpolator r2;
        boolean $z0;
        double $d0, $d1;
        org.apache.commons.math3.ode.FieldODEStateAndDerivative $r3;
        byte $b0;

        r0 := @this: org.apache.commons.math3.ode.sampling.FieldStepNormalizer;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.ode.sampling.FieldStepInterpolator;

        $z0 = r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: boolean forward>;

        if $z0 == 0 goto label2;

        $d0 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $r3 = interfaceinvoke r2.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getCurrentState()>();

        r1 = virtualinvoke $r3.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $d1 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg $d1;

        if $b0 > 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $d0 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $r3 = interfaceinvoke r2.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getCurrentState()>();

        r1 = virtualinvoke $r3.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $d1 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl $d1;

        if $b0 >= 0 goto label3;

        return 0;

     label3:
        return 1;
    }
    public void handleStep(org.apache.commons.math3.ode.sampling.FieldStepInterpolator, boolean) throws org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.ode.sampling.FieldStepNormalizer r0;
        org.apache.commons.math3.ode.sampling.FieldStepInterpolator r1;
        boolean $z0, $z1;
        org.apache.commons.math3.ode.FieldODEStateAndDerivative $r2;
        double $d0, $d1;
        org.apache.commons.math3.ode.sampling.StepNormalizerMode $r3, $r4;
        org.apache.commons.math3.RealFieldElement $r5, $r7;
        java.lang.Object $r6;
        org.apache.commons.math3.Field $r8;
        org.apache.commons.math3.ode.sampling.StepNormalizerBounds $r9;
        byte $b0;

        r0 := @this: org.apache.commons.math3.ode.sampling.FieldStepNormalizer;

        r1 := @parameter0: org.apache.commons.math3.ode.sampling.FieldStepInterpolator;

        $z0 := @parameter1: boolean;

        $r2 = r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: org.apache.commons.math3.ode.FieldODEStateAndDerivative last>;

        if $r2 != null goto label01;

        $r2 = interfaceinvoke r1.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getPreviousState()>();

        r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: org.apache.commons.math3.ode.FieldODEStateAndDerivative first> = $r2;

        $r2 = r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: org.apache.commons.math3.ode.FieldODEStateAndDerivative first>;

        r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: org.apache.commons.math3.ode.FieldODEStateAndDerivative last> = $r2;

        $z1 = interfaceinvoke r1.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: boolean isForward()>();

        r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: boolean forward> = $z1;

        $z1 = r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: boolean forward>;

        if $z1 != 0 goto label01;

        $d0 = r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: double h>;

        $d0 = neg $d0;

        r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: double h> = $d0;

     label01:
        $r3 = r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: org.apache.commons.math3.ode.sampling.StepNormalizerMode mode>;

        $r4 = <org.apache.commons.math3.ode.sampling.StepNormalizerMode: org.apache.commons.math3.ode.sampling.StepNormalizerMode INCREMENT>;

        if $r3 != $r4 goto label05;

        $r2 = r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: org.apache.commons.math3.ode.FieldODEStateAndDerivative last>;

        $r5 = virtualinvoke $r2.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $d0 = r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: double h>;

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>($d0);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r6;

     label02:
        $r3 = r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: org.apache.commons.math3.ode.sampling.StepNormalizerMode mode>;

        $r4 = <org.apache.commons.math3.ode.sampling.StepNormalizerMode: org.apache.commons.math3.ode.sampling.StepNormalizerMode MULTIPLES>;

        if $r3 != $r4 goto label03;

        $d0 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $r2 = r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: org.apache.commons.math3.ode.FieldODEStateAndDerivative last>;

        $r7 = virtualinvoke $r2.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $d1 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $z1 = staticinvoke <org.apache.commons.math3.util.Precision: boolean equals(double,double,int)>($d0, $d1, 1);

        if $z1 == 0 goto label03;

        $d0 = r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: double h>;

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>($d0);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r6;

     label03:
        $z1 = specialinvoke r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: boolean isNextInStep(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.ode.sampling.FieldStepInterpolator)>($r5, r1);

     label04:
        if $z1 == 0 goto label06;

        specialinvoke r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: void doNormalizedStep(boolean)>(0);

        $r2 = interfaceinvoke r1.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getInterpolatedState(org.apache.commons.math3.RealFieldElement)>($r5);

        r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: org.apache.commons.math3.ode.FieldODEStateAndDerivative last> = $r2;

        $d0 = r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: double h>;

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>($d0);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r6;

        $z1 = specialinvoke r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: boolean isNextInStep(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.ode.sampling.FieldStepInterpolator)>($r5, r1);

        goto label04;

     label05:
        $r2 = r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: org.apache.commons.math3.ode.FieldODEStateAndDerivative last>;

        $r5 = virtualinvoke $r2.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $r8 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $r6 = interfaceinvoke $r8.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        $r5 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r2 = r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: org.apache.commons.math3.ode.FieldODEStateAndDerivative last>;

        $r7 = virtualinvoke $r2.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $d1 = r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: double h>;

        $d0 = $d0 / $d1;

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double floor(double)>($d0);

        $d0 = $d0 + 1.0;

        $d1 = r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: double h>;

        $d0 = $d0 * $d1;

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>($d0);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r6;

        goto label02;

     label06:
        if $z0 == 0 goto label11;

        $r9 = r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: org.apache.commons.math3.ode.sampling.StepNormalizerBounds bounds>;

        $z0 = virtualinvoke $r9.<org.apache.commons.math3.ode.sampling.StepNormalizerBounds: boolean lastIncluded()>();

        if $z0 == 0 goto label09;

        $r2 = r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: org.apache.commons.math3.ode.FieldODEStateAndDerivative last>;

        $r5 = virtualinvoke $r2.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $d0 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $r2 = interfaceinvoke r1.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getCurrentState()>();

        $r5 = virtualinvoke $r2.<org.apache.commons.math3.ode.FieldODEStateAndDerivative: org.apache.commons.math3.RealFieldElement getTime()>();

        $d1 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl $d1;

        if $b0 == 0 goto label09;

        $z0 = 1;

     label07:
        if $z0 != 0 goto label10;

        $z1 = 1;

     label08:
        specialinvoke r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: void doNormalizedStep(boolean)>($z1);

        if $z0 == 0 goto label11;

        $r2 = interfaceinvoke r1.<org.apache.commons.math3.ode.sampling.FieldStepInterpolator: org.apache.commons.math3.ode.FieldODEStateAndDerivative getCurrentState()>();

        r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: org.apache.commons.math3.ode.FieldODEStateAndDerivative last> = $r2;

        specialinvoke r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: void doNormalizedStep(boolean)>(1);

        return;

     label09:
        $z0 = 0;

        goto label07;

     label10:
        $z1 = 0;

        goto label08;

     label11:
        return;
    }
    public void init(org.apache.commons.math3.ode.FieldODEStateAndDerivative, org.apache.commons.math3.RealFieldElement)
    {
        org.apache.commons.math3.ode.sampling.FieldStepNormalizer r0;
        org.apache.commons.math3.ode.FieldODEStateAndDerivative r1;
        org.apache.commons.math3.RealFieldElement r2;
        org.apache.commons.math3.ode.sampling.FieldFixedStepHandler $r3;

        r0 := @this: org.apache.commons.math3.ode.sampling.FieldStepNormalizer;

        r1 := @parameter0: org.apache.commons.math3.ode.FieldODEStateAndDerivative;

        r2 := @parameter1: org.apache.commons.math3.RealFieldElement;

        r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: org.apache.commons.math3.ode.FieldODEStateAndDerivative first> = null;

        r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: org.apache.commons.math3.ode.FieldODEStateAndDerivative last> = null;

        r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: boolean forward> = 1;

        $r3 = r0.<org.apache.commons.math3.ode.sampling.FieldStepNormalizer: org.apache.commons.math3.ode.sampling.FieldFixedStepHandler handler>;

        interfaceinvoke $r3.<org.apache.commons.math3.ode.sampling.FieldFixedStepHandler: void init(org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.RealFieldElement)>(r1, r2);

        return;
    }
