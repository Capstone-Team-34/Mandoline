org.apache.commons.math3.exception.util.ArgUtils extends java.lang.Object
    private void <init>()
    {
        org.apache.commons.math3.exception.util.ArgUtils r0;

        r0 := @this: org.apache.commons.math3.exception.util.ArgUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static java.lang.Object[] flatten(java.lang.Object[])
    {
        java.lang.Object[] $r0, r3;
        int i0, i1, i2, i3;
        java.util.ArrayList r1;
        java.lang.Object r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object[];

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        if $r0 == null goto label5;

        i0 = lengthof $r0;

        i2 = 0;

     label1:
        if i2 >= i0 goto label5;

        r2 = $r0[i2];

        $z0 = r2 instanceof java.lang.Object[];

        if $z0 == 0 goto label3;

        r3 = (java.lang.Object[]) r2;

        r3 = staticinvoke <org.apache.commons.math3.exception.util.ArgUtils: java.lang.Object[] flatten(java.lang.Object[])>(r3);

        i1 = lengthof r3;

        i3 = 0;

     label2:
        if i3 >= i1 goto label4;

        r2 = r3[i3];

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r2);

        i3 = i3 + 1;

        goto label2;

     label3:
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r2);

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        $r0 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray()>();

        return $r0;
    }
