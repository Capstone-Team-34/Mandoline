org.apache.commons.math3.exception.util.ExceptionContext extends java.lang.Object implements java.io.Serializable
private static final long serialVersionUID
private java.util.Map context
private java.util.List msgArguments
private java.util.List msgPatterns
private java.lang.Throwable throwable
    public void <init>(java.lang.Throwable)
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.lang.Throwable $r1;
        java.util.ArrayList $r2;
        java.util.HashMap $r3;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        $r1 := @parameter0: java.lang.Throwable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.lang.Throwable throwable> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.List msgPatterns> = $r2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.List msgArguments> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.Map context> = $r3;

        return;
    }
    private java.lang.String buildMessage(java.util.Locale, java.lang.String)
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.util.Locale $r1;
        java.lang.String $r2, $r9;
        java.text.MessageFormat r3;
        java.lang.StringBuilder r4;
        int i0, $i1, i2;
        java.util.List $r5;
        java.lang.Object $r6;
        org.apache.commons.math3.exception.util.Localizable r7;
        java.lang.Object[] r8;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        $r1 := @parameter0: java.util.Locale;

        $r2 := @parameter1: java.lang.String;

        r4 = new java.lang.StringBuilder;

        specialinvoke r4.<java.lang.StringBuilder: void <init>()>();

        i0 = 0;

        $r5 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.List msgPatterns>;

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        i2 = 0;

     label1:
        if i2 >= $i1 goto label3;

        $r5 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.List msgPatterns>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i2);

        r7 = (org.apache.commons.math3.exception.util.Localizable) $r6;

        $r5 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.List msgArguments>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i2);

        r8 = (java.lang.Object[]) $r6;

        r3 = new java.text.MessageFormat;

        $r9 = interfaceinvoke r7.<org.apache.commons.math3.exception.util.Localizable: java.lang.String getLocalizedString(java.util.Locale)>($r1);

        specialinvoke r3.<java.text.MessageFormat: void <init>(java.lang.String,java.util.Locale)>($r9, $r1);

        $r9 = virtualinvoke r3.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>(r8);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        i0 = i0 + 1;

        if i0 >= $i1 goto label2;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r2 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
    private void deSerializeContext(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.io.ObjectInputStream $r1;
        int $i0, i1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        java.lang.String r4;
        java.util.Map $r5;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        $r1 := @parameter0: java.io.ObjectInputStream;

        $i0 = virtualinvoke $r1.<java.io.ObjectInputStream: int readInt()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.Map context> = $r2;

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r3 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        r4 = (java.lang.String) $r3;

        $r3 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r5 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.Map context>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
    private void deSerializeMessages(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.io.ObjectInputStream $r1;
        java.lang.Object[] r2;
        int $i0, i1, $i2, i3;
        java.util.ArrayList $r3;
        java.lang.Object $r4;
        org.apache.commons.math3.exception.util.Localizable r5;
        java.util.List $r6;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        $r1 := @parameter0: java.io.ObjectInputStream;

        $i0 = virtualinvoke $r1.<java.io.ObjectInputStream: int readInt()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i0);

        r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.List msgPatterns> = $r3;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i0);

        r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.List msgArguments> = $r3;

        i1 = 0;

     label1:
        if i1 >= $i0 goto label4;

        $r4 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        r5 = (org.apache.commons.math3.exception.util.Localizable) $r4;

        $r6 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.List msgPatterns>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r5);

        $i2 = virtualinvoke $r1.<java.io.ObjectInputStream: int readInt()>();

        r2 = newarray (java.lang.Object)[$i2];

        i3 = 0;

     label2:
        if i3 >= $i2 goto label3;

        $r4 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        r2[i3] = $r4;

        i3 = i3 + 1;

        goto label2;

     label3:
        $r6 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.List msgArguments>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r2);

        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }
    private java.lang.String nonSerializableReplacement(java.lang.Object)
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.lang.Object $r1;
        java.lang.StringBuilder $r2;
        java.lang.Class $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        $r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[Object could not be serialized: ");

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.io.ObjectInputStream $r1;
        java.lang.Object $r2;
        java.lang.Throwable $r3;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        $r1 := @parameter0: java.io.ObjectInputStream;

        $r2 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r3 = (java.lang.Throwable) $r2;

        r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.lang.Throwable throwable> = $r3;

        specialinvoke r0.<org.apache.commons.math3.exception.util.ExceptionContext: void deSerializeMessages(java.io.ObjectInputStream)>($r1);

        specialinvoke r0.<org.apache.commons.math3.exception.util.ExceptionContext: void deSerializeContext(java.io.ObjectInputStream)>($r1);

        return;
    }
    private void serializeContext(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.io.ObjectOutputStream $r1;
        java.util.Map $r2;
        int $i0;
        java.util.Set $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.util.Map$Entry r6;
        java.lang.String $r7;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        $r1 := @parameter0: java.io.ObjectOutputStream;

        $r2 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.Map context>;

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeInt(int)>($i0);

        $r2 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.Map context>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r5);

        $r5 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z0 = $r5 instanceof java.io.Serializable;

        if $z0 == 0 goto label2;

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r5);

        goto label1;

     label2:
        $r7 = specialinvoke r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.lang.String nonSerializableReplacement(java.lang.Object)>($r5);

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r7);

        goto label1;

     label3:
        return;
    }
    private void serializeMessages(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.io.ObjectOutputStream $r1;
        int i0, $i1, i2, i3;
        java.util.List $r2;
        java.lang.Object $r3;
        org.apache.commons.math3.exception.util.Localizable r4;
        java.lang.Object[] r5;
        boolean $z0;
        java.lang.String $r6;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        $r1 := @parameter0: java.io.ObjectOutputStream;

        $r2 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.List msgPatterns>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeInt(int)>($i1);

        i2 = 0;

     label1:
        if i2 >= $i1 goto label6;

        $r2 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.List msgPatterns>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i2);

        r4 = (org.apache.commons.math3.exception.util.Localizable) $r3;

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r4);

        $r2 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.List msgArguments>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i2);

        r5 = (java.lang.Object[]) $r3;

        i0 = lengthof r5;

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeInt(int)>(i0);

        i3 = 0;

     label2:
        if i3 >= i0 goto label5;

        $r3 = r5[i3];

        $z0 = $r3 instanceof java.io.Serializable;

        if $z0 == 0 goto label4;

        $r3 = r5[i3];

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r3);

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        $r3 = r5[i3];

        $r6 = specialinvoke r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.lang.String nonSerializableReplacement(java.lang.Object)>($r3);

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r6);

        goto label3;

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        return;
    }
    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.io.ObjectOutputStream $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        $r1 := @parameter0: java.io.ObjectOutputStream;

        $r2 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.lang.Throwable throwable>;

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

        specialinvoke r0.<org.apache.commons.math3.exception.util.ExceptionContext: void serializeMessages(java.io.ObjectOutputStream)>($r1);

        specialinvoke r0.<org.apache.commons.math3.exception.util.ExceptionContext: void serializeContext(java.io.ObjectOutputStream)>($r1);

        return;
    }
    public transient void addMessage(org.apache.commons.math3.exception.util.Localizable, java.lang.Object[])
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        org.apache.commons.math3.exception.util.Localizable $r1;
        java.lang.Object[] $r2;
        java.util.List $r3;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        $r1 := @parameter0: org.apache.commons.math3.exception.util.Localizable;

        $r2 := @parameter1: java.lang.Object[];

        $r3 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.List msgPatterns>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r3 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.List msgArguments>;

        $r2 = staticinvoke <org.apache.commons.math3.exception.util.ArgUtils: java.lang.Object[] flatten(java.lang.Object[])>($r2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        return;
    }
    public java.util.Set getKeys()
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.util.Set $r1;
        java.util.Map $r2;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        $r2 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.Map context>;

        $r1 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        return $r1;
    }
    public java.lang.String getLocalizedMessage()
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.util.Locale $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r2 = virtualinvoke r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.lang.String getMessage(java.util.Locale)>($r1);

        return $r2;
    }
    public java.lang.String getMessage()
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.lang.String $r1;
        java.util.Locale $r2;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        $r2 = <java.util.Locale: java.util.Locale US>;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.lang.String getMessage(java.util.Locale)>($r2);

        return $r1;
    }
    public java.lang.String getMessage(java.util.Locale)
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.util.Locale $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        $r1 := @parameter0: java.util.Locale;

        $r2 = specialinvoke r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.lang.String buildMessage(java.util.Locale,java.lang.String)>($r1, ": ");

        return $r2;
    }
    public java.lang.String getMessage(java.util.Locale, java.lang.String)
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.util.Locale $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        $r1 := @parameter0: java.util.Locale;

        $r2 := @parameter1: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.lang.String buildMessage(java.util.Locale,java.lang.String)>($r1, $r2);

        return $r2;
    }
    public java.lang.Throwable getThrowable()
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.lang.Throwable r1;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        r1 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.lang.Throwable throwable>;

        return r1;
    }
    public java.lang.Object getValue(java.lang.String)
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.util.Map $r3;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.Map context>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        return $r2;
    }
    public void setValue(java.lang.String, java.lang.Object)
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.util.Map $r3;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.Map context>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }
