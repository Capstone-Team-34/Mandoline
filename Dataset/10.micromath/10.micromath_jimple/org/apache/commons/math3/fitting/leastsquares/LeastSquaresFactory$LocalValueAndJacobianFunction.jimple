org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalValueAndJacobianFunction extends java.lang.Object implements org.apache.commons.math3.fitting.leastsquares.ValueAndJacobianFunction
private final org.apache.commons.math3.analysis.MultivariateMatrixFunction jacobian
private final org.apache.commons.math3.analysis.MultivariateVectorFunction value
    void <init>(org.apache.commons.math3.analysis.MultivariateVectorFunction, org.apache.commons.math3.analysis.MultivariateMatrixFunction)
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalValueAndJacobianFunction r0;
        org.apache.commons.math3.analysis.MultivariateVectorFunction $r1;
        org.apache.commons.math3.analysis.MultivariateMatrixFunction $r2;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalValueAndJacobianFunction;

        $r1 := @parameter0: org.apache.commons.math3.analysis.MultivariateVectorFunction;

        $r2 := @parameter1: org.apache.commons.math3.analysis.MultivariateMatrixFunction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalValueAndJacobianFunction: org.apache.commons.math3.analysis.MultivariateVectorFunction value> = $r1;

        r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalValueAndJacobianFunction: org.apache.commons.math3.analysis.MultivariateMatrixFunction jacobian> = $r2;

        return;
    }
    public org.apache.commons.math3.linear.RealMatrix computeJacobian(double[])
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalValueAndJacobianFunction r0;
        double[] $r1;
        org.apache.commons.math3.linear.Array2DRowRealMatrix $r2;
        double[][] $r3;
        org.apache.commons.math3.analysis.MultivariateMatrixFunction $r4;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalValueAndJacobianFunction;

        $r1 := @parameter0: double[];

        $r2 = new org.apache.commons.math3.linear.Array2DRowRealMatrix;

        $r4 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalValueAndJacobianFunction: org.apache.commons.math3.analysis.MultivariateMatrixFunction jacobian>;

        $r3 = interfaceinvoke $r4.<org.apache.commons.math3.analysis.MultivariateMatrixFunction: double[][] value(double[])>($r1);

        specialinvoke $r2.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void <init>(double[][],boolean)>($r3, 0);

        return $r2;
    }
    public org.apache.commons.math3.linear.RealVector computeValue(double[])
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalValueAndJacobianFunction r0;
        double[] $r1;
        org.apache.commons.math3.linear.ArrayRealVector $r2;
        org.apache.commons.math3.analysis.MultivariateVectorFunction $r3;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalValueAndJacobianFunction;

        $r1 := @parameter0: double[];

        $r2 = new org.apache.commons.math3.linear.ArrayRealVector;

        $r3 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalValueAndJacobianFunction: org.apache.commons.math3.analysis.MultivariateVectorFunction value>;

        $r1 = interfaceinvoke $r3.<org.apache.commons.math3.analysis.MultivariateVectorFunction: double[] value(double[])>($r1);

        specialinvoke $r2.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(double[],boolean)>($r1, 0);

        return $r2;
    }
    public org.apache.commons.math3.util.Pair value(org.apache.commons.math3.linear.RealVector)
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalValueAndJacobianFunction r0;
        org.apache.commons.math3.linear.RealVector $r1;
        org.apache.commons.math3.util.Pair $r2;
        double[] $r3;
        org.apache.commons.math3.linear.RealMatrix $r4;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalValueAndJacobianFunction;

        $r1 := @parameter0: org.apache.commons.math3.linear.RealVector;

        $r3 = virtualinvoke $r1.<org.apache.commons.math3.linear.RealVector: double[] toArray()>();

        $r2 = new org.apache.commons.math3.util.Pair;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalValueAndJacobianFunction: org.apache.commons.math3.linear.RealVector computeValue(double[])>($r3);

        $r4 = virtualinvoke r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalValueAndJacobianFunction: org.apache.commons.math3.linear.RealMatrix computeJacobian(double[])>($r3);

        specialinvoke $r2.<org.apache.commons.math3.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r1, $r4);

        return $r2;
    }
