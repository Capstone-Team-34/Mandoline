org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition$1 extends org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition
    void <init>(java.lang.String, int)
    {
        org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition$1 r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition$1;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition: void <init>(java.lang.String,int,org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$1)>($r1, $i0, null);

        return;
    }
    protected org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealMatrix, org.apache.commons.math3.linear.RealVector)
    {
        org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition$1 r0;
        org.apache.commons.math3.linear.RealMatrix $r1;
        org.apache.commons.math3.linear.RealVector $r2;
        org.apache.commons.math3.linear.SingularMatrixException r3;
        org.apache.commons.math3.exception.util.LocalizedFormats $r4;
        org.apache.commons.math3.util.Pair $r5;
        java.lang.Object $r6;
        org.apache.commons.math3.linear.LUDecomposition $r7;
        org.apache.commons.math3.linear.DecompositionSolver $r8;
        org.apache.commons.math3.exception.ConvergenceException $r9;
        java.lang.Object[] $r10;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition$1;

        $r1 := @parameter0: org.apache.commons.math3.linear.RealMatrix;

        $r2 := @parameter1: org.apache.commons.math3.linear.RealVector;

     label1:
        $r5 = staticinvoke <org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer: org.apache.commons.math3.util.Pair access$100(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)>($r1, $r2);

        $r6 = virtualinvoke $r5.<org.apache.commons.math3.util.Pair: java.lang.Object getFirst()>();

     label2:
        $r1 = (org.apache.commons.math3.linear.RealMatrix) $r6;

     label3:
        $r6 = virtualinvoke $r5.<org.apache.commons.math3.util.Pair: java.lang.Object getSecond()>();

     label4:
        $r2 = (org.apache.commons.math3.linear.RealVector) $r6;

        $r7 = new org.apache.commons.math3.linear.LUDecomposition;

     label5:
        specialinvoke $r7.<org.apache.commons.math3.linear.LUDecomposition: void <init>(org.apache.commons.math3.linear.RealMatrix,double)>($r1, 1.0E-11);

        $r8 = virtualinvoke $r7.<org.apache.commons.math3.linear.LUDecomposition: org.apache.commons.math3.linear.DecompositionSolver getSolver()>();

        $r2 = interfaceinvoke $r8.<org.apache.commons.math3.linear.DecompositionSolver: org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealVector)>($r2);

     label6:
        return $r2;

     label7:
        r3 := @caughtexception;

        $r9 = new org.apache.commons.math3.exception.ConvergenceException;

        $r4 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats UNABLE_TO_SOLVE_SINGULAR_PROBLEM>;

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r3;

        specialinvoke $r9.<org.apache.commons.math3.exception.ConvergenceException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r4, $r10);

        throw $r9;

        catch org.apache.commons.math3.linear.SingularMatrixException from label1 to label2 with label7;
        catch org.apache.commons.math3.linear.SingularMatrixException from label3 to label4 with label7;
        catch org.apache.commons.math3.linear.SingularMatrixException from label5 to label6 with label7;
    }
