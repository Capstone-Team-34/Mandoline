org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder extends java.lang.Object
private org.apache.commons.math3.optim.ConvergenceChecker checker
private boolean lazyEvaluation
private int maxEvaluations
private int maxIterations
private org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction model
private org.apache.commons.math3.fitting.leastsquares.ParameterValidator paramValidator
private org.apache.commons.math3.linear.RealVector start
private org.apache.commons.math3.linear.RealVector target
private org.apache.commons.math3.linear.RealMatrix weight
    public void <init>()
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder r0;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem build()
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder r0;
        org.apache.commons.math3.linear.RealVector $r1, $r2;
        org.apache.commons.math3.linear.RealMatrix $r3;
        org.apache.commons.math3.optim.ConvergenceChecker $r4;
        int $i0, $i1;
        boolean $z0;
        org.apache.commons.math3.fitting.leastsquares.ParameterValidator $r5;
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem $r6;
        org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction $r7;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder;

        $r7 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder: org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction model>;

        $r1 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder: org.apache.commons.math3.linear.RealVector target>;

        $r2 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder: org.apache.commons.math3.linear.RealVector start>;

        $r3 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder: org.apache.commons.math3.linear.RealMatrix weight>;

        $r4 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder: org.apache.commons.math3.optim.ConvergenceChecker checker>;

        $i0 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder: int maxEvaluations>;

        $i1 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder: int maxIterations>;

        $z0 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder: boolean lazyEvaluation>;

        $r5 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder: org.apache.commons.math3.fitting.leastsquares.ParameterValidator paramValidator>;

        $r6 = staticinvoke <org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory: org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem create(org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.optim.ConvergenceChecker,int,int,boolean,org.apache.commons.math3.fitting.leastsquares.ParameterValidator)>($r7, $r1, $r2, $r3, $r4, $i0, $i1, $z0, $r5);

        return $r6;
    }
    public org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder checker(org.apache.commons.math3.optim.ConvergenceChecker)
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder r0;
        org.apache.commons.math3.optim.ConvergenceChecker r1;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder;

        r1 := @parameter0: org.apache.commons.math3.optim.ConvergenceChecker;

        r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder: org.apache.commons.math3.optim.ConvergenceChecker checker> = r1;

        return r0;
    }
    public org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder checkerPair(org.apache.commons.math3.optim.ConvergenceChecker)
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder r0;
        org.apache.commons.math3.optim.ConvergenceChecker r1;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder;

        r1 := @parameter0: org.apache.commons.math3.optim.ConvergenceChecker;

        r1 = staticinvoke <org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory: org.apache.commons.math3.optim.ConvergenceChecker evaluationChecker(org.apache.commons.math3.optim.ConvergenceChecker)>(r1);

        r0 = virtualinvoke r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder: org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder checker(org.apache.commons.math3.optim.ConvergenceChecker)>(r1);

        return r0;
    }
    public org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder lazyEvaluation(boolean)
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder r0;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder;

        $z0 := @parameter0: boolean;

        r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder: boolean lazyEvaluation> = $z0;

        return r0;
    }
    public org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder maxEvaluations(int)
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder r0;
        int $i0;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder;

        $i0 := @parameter0: int;

        r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder: int maxEvaluations> = $i0;

        return r0;
    }
    public org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder maxIterations(int)
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder r0;
        int $i0;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder;

        $i0 := @parameter0: int;

        r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder: int maxIterations> = $i0;

        return r0;
    }
    public org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder model(org.apache.commons.math3.analysis.MultivariateVectorFunction, org.apache.commons.math3.analysis.MultivariateMatrixFunction)
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder r0;
        org.apache.commons.math3.analysis.MultivariateVectorFunction $r1;
        org.apache.commons.math3.analysis.MultivariateMatrixFunction $r2;
        org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction $r3;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder;

        $r1 := @parameter0: org.apache.commons.math3.analysis.MultivariateVectorFunction;

        $r2 := @parameter1: org.apache.commons.math3.analysis.MultivariateMatrixFunction;

        $r3 = staticinvoke <org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory: org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction model(org.apache.commons.math3.analysis.MultivariateVectorFunction,org.apache.commons.math3.analysis.MultivariateMatrixFunction)>($r1, $r2);

        r0 = virtualinvoke r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder: org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder model(org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction)>($r3);

        return r0;
    }
    public org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder model(org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction)
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder r0;
        org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction $r1;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder;

        $r1 := @parameter0: org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction;

        r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder: org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction model> = $r1;

        return r0;
    }
    public org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder parameterValidator(org.apache.commons.math3.fitting.leastsquares.ParameterValidator)
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder r0;
        org.apache.commons.math3.fitting.leastsquares.ParameterValidator $r1;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder;

        $r1 := @parameter0: org.apache.commons.math3.fitting.leastsquares.ParameterValidator;

        r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder: org.apache.commons.math3.fitting.leastsquares.ParameterValidator paramValidator> = $r1;

        return r0;
    }
    public org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder start(org.apache.commons.math3.linear.RealVector)
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder r0;
        org.apache.commons.math3.linear.RealVector $r1;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder;

        $r1 := @parameter0: org.apache.commons.math3.linear.RealVector;

        r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder: org.apache.commons.math3.linear.RealVector start> = $r1;

        return r0;
    }
    public org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder start(double[])
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder r0;
        double[] $r1;
        org.apache.commons.math3.linear.ArrayRealVector $r2;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder;

        $r1 := @parameter0: double[];

        $r2 = new org.apache.commons.math3.linear.ArrayRealVector;

        specialinvoke $r2.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(double[],boolean)>($r1, 0);

        r0 = virtualinvoke r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder: org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder start(org.apache.commons.math3.linear.RealVector)>($r2);

        return r0;
    }
    public org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder target(org.apache.commons.math3.linear.RealVector)
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder r0;
        org.apache.commons.math3.linear.RealVector $r1;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder;

        $r1 := @parameter0: org.apache.commons.math3.linear.RealVector;

        r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder: org.apache.commons.math3.linear.RealVector target> = $r1;

        return r0;
    }
    public org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder target(double[])
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder r0;
        double[] $r1;
        org.apache.commons.math3.linear.ArrayRealVector $r2;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder;

        $r1 := @parameter0: double[];

        $r2 = new org.apache.commons.math3.linear.ArrayRealVector;

        specialinvoke $r2.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(double[],boolean)>($r1, 0);

        r0 = virtualinvoke r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder: org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder target(org.apache.commons.math3.linear.RealVector)>($r2);

        return r0;
    }
    public org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder weight(org.apache.commons.math3.linear.RealMatrix)
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder r0;
        org.apache.commons.math3.linear.RealMatrix $r1;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder;

        $r1 := @parameter0: org.apache.commons.math3.linear.RealMatrix;

        r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder: org.apache.commons.math3.linear.RealMatrix weight> = $r1;

        return r0;
    }
