org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$3 extends java.lang.Object implements org.apache.commons.math3.optim.ConvergenceChecker
final org.apache.commons.math3.optim.ConvergenceChecker val$checker
    void <init>(org.apache.commons.math3.optim.ConvergenceChecker)
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$3 r0;
        org.apache.commons.math3.optim.ConvergenceChecker $r1;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$3;

        $r1 := @parameter0: org.apache.commons.math3.optim.ConvergenceChecker;

        r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$3: org.apache.commons.math3.optim.ConvergenceChecker val$checker> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public volatile boolean converged(int, java.lang.Object, java.lang.Object)
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$3 r0;
        int $i0;
        boolean $z0;
        java.lang.Object $r1, $r2;
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation $r3, $r4;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$3;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

        $r3 = (org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation) $r1;

        $r4 = (org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation) $r2;

        $z0 = virtualinvoke r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$3: boolean converged(int,org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation,org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation)>($i0, $r3, $r4);

        return $z0;
    }
    public boolean converged(int, org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation, org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation)
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$3 r0;
        int $i0;
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation $r1, $r2;
        org.apache.commons.math3.optim.PointVectorValuePair $r3, $r8;
        org.apache.commons.math3.optim.ConvergenceChecker $r4;
        org.apache.commons.math3.linear.RealVector $r5;
        double[] $r6, $r7;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$3;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation;

        $r2 := @parameter2: org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation;

        $r4 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$3: org.apache.commons.math3.optim.ConvergenceChecker val$checker>;

        $r3 = new org.apache.commons.math3.optim.PointVectorValuePair;

        $r5 = interfaceinvoke $r1.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation: org.apache.commons.math3.linear.RealVector getPoint()>();

        $r6 = virtualinvoke $r5.<org.apache.commons.math3.linear.RealVector: double[] toArray()>();

        $r5 = interfaceinvoke $r1.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation: org.apache.commons.math3.linear.RealVector getResiduals()>();

        $r7 = virtualinvoke $r5.<org.apache.commons.math3.linear.RealVector: double[] toArray()>();

        specialinvoke $r3.<org.apache.commons.math3.optim.PointVectorValuePair: void <init>(double[],double[],boolean)>($r6, $r7, 0);

        $r8 = new org.apache.commons.math3.optim.PointVectorValuePair;

        $r5 = interfaceinvoke $r2.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation: org.apache.commons.math3.linear.RealVector getPoint()>();

        $r6 = virtualinvoke $r5.<org.apache.commons.math3.linear.RealVector: double[] toArray()>();

        $r5 = interfaceinvoke $r2.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation: org.apache.commons.math3.linear.RealVector getResiduals()>();

        $r7 = virtualinvoke $r5.<org.apache.commons.math3.linear.RealVector: double[] toArray()>();

        specialinvoke $r8.<org.apache.commons.math3.optim.PointVectorValuePair: void <init>(double[],double[],boolean)>($r6, $r7, 0);

        $z0 = interfaceinvoke $r4.<org.apache.commons.math3.optim.ConvergenceChecker: boolean converged(int,java.lang.Object,java.lang.Object)>($i0, $r3, $r8);

        return $z0;
    }
