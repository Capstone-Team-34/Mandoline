org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter extends java.lang.Object implements org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem
private final org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem problem
    public void <init>(org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem)
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter r0;
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem $r1;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter;

        $r1 := @parameter0: org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter: org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem problem> = $r1;

        return;
    }
    public org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation evaluate(org.apache.commons.math3.linear.RealVector)
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter r0;
        org.apache.commons.math3.linear.RealVector $r1;
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation $r2;
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem $r3;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter;

        $r1 := @parameter0: org.apache.commons.math3.linear.RealVector;

        $r3 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter: org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem problem>;

        $r2 = interfaceinvoke $r3.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem: org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation evaluate(org.apache.commons.math3.linear.RealVector)>($r1);

        return $r2;
    }
    public org.apache.commons.math3.optim.ConvergenceChecker getConvergenceChecker()
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter r0;
        org.apache.commons.math3.optim.ConvergenceChecker $r1;
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem $r2;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter;

        $r2 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter: org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem problem>;

        $r1 = interfaceinvoke $r2.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem: org.apache.commons.math3.optim.ConvergenceChecker getConvergenceChecker()>();

        return $r1;
    }
    public org.apache.commons.math3.util.Incrementor getEvaluationCounter()
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter r0;
        org.apache.commons.math3.util.Incrementor $r1;
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem $r2;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter;

        $r2 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter: org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem problem>;

        $r1 = interfaceinvoke $r2.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem: org.apache.commons.math3.util.Incrementor getEvaluationCounter()>();

        return $r1;
    }
    public org.apache.commons.math3.util.Incrementor getIterationCounter()
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter r0;
        org.apache.commons.math3.util.Incrementor $r1;
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem $r2;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter;

        $r2 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter: org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem problem>;

        $r1 = interfaceinvoke $r2.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem: org.apache.commons.math3.util.Incrementor getIterationCounter()>();

        return $r1;
    }
    public int getObservationSize()
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter r0;
        int $i0;
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem $r1;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter;

        $r1 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter: org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem problem>;

        $i0 = interfaceinvoke $r1.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem: int getObservationSize()>();

        return $i0;
    }
    public int getParameterSize()
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter r0;
        int $i0;
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem $r1;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter;

        $r1 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter: org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem problem>;

        $i0 = interfaceinvoke $r1.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem: int getParameterSize()>();

        return $i0;
    }
    public org.apache.commons.math3.linear.RealVector getStart()
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter r0;
        org.apache.commons.math3.linear.RealVector $r1;
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem $r2;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter;

        $r2 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter: org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem problem>;

        $r1 = interfaceinvoke $r2.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem: org.apache.commons.math3.linear.RealVector getStart()>();

        return $r1;
    }
