org.apache.commons.math3.primes.Primes extends java.lang.Object
    private void <init>()
    {
        org.apache.commons.math3.primes.Primes r0;

        r0 := @this: org.apache.commons.math3.primes.Primes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static boolean isPrime(int)
    {
        int $i0, i1, i2, i3, $i4;
        int[] r0;
        boolean $z0;

        $i0 := @parameter0: int;

        if $i0 >= 2 goto label1;

        return 0;

     label1:
        r0 = <org.apache.commons.math3.primes.SmallPrimes: int[] PRIMES>;

        i1 = lengthof r0;

        i3 = 0;

     label2:
        if i3 >= i1 goto label4;

        i2 = r0[i3];

        $i4 = $i0 % i2;

        if $i4 != 0 goto label3;

        if $i0 != i2 goto label5;

        return 1;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        $z0 = staticinvoke <org.apache.commons.math3.primes.SmallPrimes: boolean millerRabinPrimeTest(int)>($i0);

        return $z0;

     label5:
        return 0;
    }
    public static int nextPrime(int)
    {
        int i0, $i1;
        org.apache.commons.math3.exception.MathIllegalArgumentException $r0;
        org.apache.commons.math3.exception.util.LocalizedFormats $r1;
        java.lang.Object[] $r2;
        java.lang.Integer $r3;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $r0 = new org.apache.commons.math3.exception.MathIllegalArgumentException;

        $r1 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats NUMBER_TOO_SMALL>;

        $r2 = newarray (java.lang.Object)[2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[0] = $r3;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r2[1] = $r3;

        specialinvoke $r0.<org.apache.commons.math3.exception.MathIllegalArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r1, $r2);

        throw $r0;

     label1:
        if i0 != 2 goto label2;

        return 2;

     label2:
        $i1 = i0 | 1;

        if $i1 != 1 goto label3;

        return 2;

     label3:
        $z0 = staticinvoke <org.apache.commons.math3.primes.Primes: boolean isPrime(int)>($i1);

        if $z0 != 0 goto label6;

        i0 = $i1 % 3;

        if i0 != 0 goto label5;

        $i1 = $i1 + 2;

     label4:
        $z0 = staticinvoke <org.apache.commons.math3.primes.Primes: boolean isPrime(int)>($i1);

        if $z0 != 0 goto label6;

        i0 = $i1 + 2;

        $z0 = staticinvoke <org.apache.commons.math3.primes.Primes: boolean isPrime(int)>(i0);

        if $z0 != 0 goto label7;

        $i1 = i0 + 4;

        goto label4;

     label5:
        if 1 != i0 goto label4;

        $i1 = $i1 + 4;

        goto label4;

     label6:
        return $i1;

     label7:
        return i0;
    }
    public static java.util.List primeFactors(int)
    {
        int $i0;
        org.apache.commons.math3.exception.util.LocalizedFormats $r0;
        java.lang.Object[] $r1;
        org.apache.commons.math3.exception.MathIllegalArgumentException $r2;
        java.lang.Integer $r3;
        java.util.List $r4;

        $i0 := @parameter0: int;

        if $i0 >= 2 goto label1;

        $r2 = new org.apache.commons.math3.exception.MathIllegalArgumentException;

        $r0 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats NUMBER_TOO_SMALL>;

        $r1 = newarray (java.lang.Object)[2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r3;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r1[1] = $r3;

        specialinvoke $r2.<org.apache.commons.math3.exception.MathIllegalArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r0, $r1);

        throw $r2;

     label1:
        $r4 = staticinvoke <org.apache.commons.math3.primes.SmallPrimes: java.util.List trialDivision(int)>($i0);

        return $r4;
    }
