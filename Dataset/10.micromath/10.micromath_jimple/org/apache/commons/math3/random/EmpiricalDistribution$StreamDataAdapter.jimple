org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter extends org.apache.commons.math3.random.EmpiricalDistribution$DataAdapter
private java.io.BufferedReader inputStream
final org.apache.commons.math3.random.EmpiricalDistribution this$0
    void <init>(org.apache.commons.math3.random.EmpiricalDistribution, java.io.BufferedReader)
    {
        org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter r0;
        org.apache.commons.math3.random.EmpiricalDistribution $r1;
        java.io.BufferedReader $r2;

        r0 := @this: org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter;

        $r1 := @parameter0: org.apache.commons.math3.random.EmpiricalDistribution;

        $r2 := @parameter1: java.io.BufferedReader;

        r0.<org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter: org.apache.commons.math3.random.EmpiricalDistribution this$0> = $r1;

        specialinvoke r0.<org.apache.commons.math3.random.EmpiricalDistribution$DataAdapter: void <init>(org.apache.commons.math3.random.EmpiricalDistribution,org.apache.commons.math3.random.EmpiricalDistribution$1)>($r1, null);

        r0.<org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter: java.io.BufferedReader inputStream> = $r2;

        return;
    }
    public void computeBinStats() throws java.io.IOException
    {
        org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter r0;
        java.io.BufferedReader $r1;
        java.lang.String $r2;
        double $d0;
        org.apache.commons.math3.random.EmpiricalDistribution $r3;
        java.util.List $r4;
        int $i0;
        java.lang.Object $r5;
        org.apache.commons.math3.stat.descriptive.SummaryStatistics r6;

        r0 := @this: org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter;

     label1:
        $r1 = r0.<org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter: java.io.BufferedReader inputStream>;

        $r2 = virtualinvoke $r1.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r2 == null goto label2;

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r2);

        $r3 = r0.<org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter: org.apache.commons.math3.random.EmpiricalDistribution this$0>;

        $r4 = staticinvoke <org.apache.commons.math3.random.EmpiricalDistribution: java.util.List access$200(org.apache.commons.math3.random.EmpiricalDistribution)>($r3);

        $r3 = r0.<org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter: org.apache.commons.math3.random.EmpiricalDistribution this$0>;

        $i0 = staticinvoke <org.apache.commons.math3.random.EmpiricalDistribution: int access$100(org.apache.commons.math3.random.EmpiricalDistribution,double)>($r3, $d0);

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i0);

        r6 = (org.apache.commons.math3.stat.descriptive.SummaryStatistics) $r5;

        virtualinvoke r6.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: void addValue(double)>($d0);

        goto label1;

     label2:
        $r1 = r0.<org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter: java.io.BufferedReader inputStream>;

        virtualinvoke $r1.<java.io.BufferedReader: void close()>();

        r0.<org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter: java.io.BufferedReader inputStream> = null;

        return;
    }
    public void computeStats() throws java.io.IOException
    {
        org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter r0;
        org.apache.commons.math3.stat.descriptive.SummaryStatistics $r1;
        org.apache.commons.math3.random.EmpiricalDistribution $r2;
        java.io.BufferedReader $r3;
        java.lang.String $r4;
        double $d0;

        r0 := @this: org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter;

        $r2 = r0.<org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter: org.apache.commons.math3.random.EmpiricalDistribution this$0>;

        $r1 = new org.apache.commons.math3.stat.descriptive.SummaryStatistics;

        specialinvoke $r1.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: void <init>()>();

        staticinvoke <org.apache.commons.math3.random.EmpiricalDistribution: org.apache.commons.math3.stat.descriptive.SummaryStatistics access$302(org.apache.commons.math3.random.EmpiricalDistribution,org.apache.commons.math3.stat.descriptive.SummaryStatistics)>($r2, $r1);

     label1:
        $r3 = r0.<org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter: java.io.BufferedReader inputStream>;

        $r4 = virtualinvoke $r3.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r4 == null goto label2;

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r4);

        $r2 = r0.<org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter: org.apache.commons.math3.random.EmpiricalDistribution this$0>;

        $r1 = staticinvoke <org.apache.commons.math3.random.EmpiricalDistribution: org.apache.commons.math3.stat.descriptive.SummaryStatistics access$300(org.apache.commons.math3.random.EmpiricalDistribution)>($r2);

        virtualinvoke $r1.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: void addValue(double)>($d0);

        goto label1;

     label2:
        $r3 = r0.<org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter: java.io.BufferedReader inputStream>;

        virtualinvoke $r3.<java.io.BufferedReader: void close()>();

        r0.<org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter: java.io.BufferedReader inputStream> = null;

        return;
    }
