org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator extends java.lang.Object implements org.apache.commons.math3.random.RandomVectorGenerator
private final org.apache.commons.math3.random.NormalizedRandomGenerator generator
private final double[] mean
private final double[] standardDeviation
    public void <init>(int, org.apache.commons.math3.random.NormalizedRandomGenerator)
    {
        org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator r0;
        int $i0;
        org.apache.commons.math3.random.NormalizedRandomGenerator $r1;
        double[] $r2;

        r0 := @this: org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.apache.commons.math3.random.NormalizedRandomGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (double)[$i0];

        r0.<org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator: double[] mean> = $r2;

        $r2 = newarray (double)[$i0];

        r0.<org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator: double[] standardDeviation> = $r2;

        $r2 = r0.<org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator: double[] standardDeviation>;

        staticinvoke <java.util.Arrays: void fill(double[],double)>($r2, 1.0);

        r0.<org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator: org.apache.commons.math3.random.NormalizedRandomGenerator generator> = $r1;

        return;
    }
    public void <init>(double[], double[], org.apache.commons.math3.random.NormalizedRandomGenerator)
    {
        org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator r0;
        double[] $r1, $r2;
        org.apache.commons.math3.random.NormalizedRandomGenerator $r3;
        int $i0, $i1;
        org.apache.commons.math3.exception.DimensionMismatchException $r4;
        java.lang.Object $r5;

        r0 := @this: org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator;

        $r1 := @parameter0: double[];

        $r2 := @parameter1: double[];

        $r3 := @parameter2: org.apache.commons.math3.random.NormalizedRandomGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = lengthof $r1;

        $i1 = lengthof $r2;

        if $i0 == $i1 goto label1;

        $r4 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i1 = lengthof $r1;

        $i0 = lengthof $r2;

        specialinvoke $r4.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i1, $i0);

        throw $r4;

     label1:
        $r5 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (double[]) $r5;

        r0.<org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator: double[] mean> = $r1;

        $r5 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (double[]) $r5;

        r0.<org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator: double[] standardDeviation> = $r1;

        r0.<org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator: org.apache.commons.math3.random.NormalizedRandomGenerator generator> = $r3;

        return;
    }
    public double[] nextVector()
    {
        org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator r0;
        double[] r1, $r2;
        double $d0, $d1, $d2;
        int $i0, $i1;
        org.apache.commons.math3.random.NormalizedRandomGenerator $r3;

        r0 := @this: org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator;

        r1 = r0.<org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator: double[] mean>;

        $i0 = lengthof r1;

        r1 = newarray (double)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof r1;

        if $i0 >= $i1 goto label2;

        $r2 = r0.<org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator: double[] mean>;

        $d1 = $r2[$i0];

        $r2 = r0.<org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator: double[] standardDeviation>;

        $d2 = $r2[$i0];

        $r3 = r0.<org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator: org.apache.commons.math3.random.NormalizedRandomGenerator generator>;

        $d0 = interfaceinvoke $r3.<org.apache.commons.math3.random.NormalizedRandomGenerator: double nextNormalizedDouble()>();

        $d0 = $d2 * $d0;

        $d1 = $d1 + $d0;

        r1[$i0] = $d1;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r1;
    }
