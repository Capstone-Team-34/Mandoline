org.apache.commons.math3.random.ISAACRandom extends org.apache.commons.math3.random.BitsStreamGenerator implements java.io.Serializable
private static final int GLD_RATIO
private static final int H_SIZE
private static final int MASK
private static final int SIZE
private static final int SIZE_L
private static final long serialVersionUID
private final int[] arr
private int count
private int isaacA
private int isaacB
private int isaacC
private int isaacI
private int isaacJ
private int isaacX
private final int[] mem
private final int[] rsl
    public void <init>()
    {
        org.apache.commons.math3.random.ISAACRandom r0;
        int[] $r1;
        long $l0, $l2;
        int $i1;

        r0 := @this: org.apache.commons.math3.random.ISAACRandom;

        specialinvoke r0.<org.apache.commons.math3.random.BitsStreamGenerator: void <init>()>();

        $r1 = newarray (int)[256];

        r0.<org.apache.commons.math3.random.ISAACRandom: int[] rsl> = $r1;

        $r1 = newarray (int)[256];

        r0.<org.apache.commons.math3.random.ISAACRandom: int[] mem> = $r1;

        $r1 = newarray (int)[8];

        r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr> = $r1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $l2 = (long) $i1;

        $l0 = $l0 + $l2;

        virtualinvoke r0.<org.apache.commons.math3.random.ISAACRandom: void setSeed(long)>($l0);

        return;
    }
    public void <init>(long)
    {
        org.apache.commons.math3.random.ISAACRandom r0;
        long $l0;
        int[] $r1;

        r0 := @this: org.apache.commons.math3.random.ISAACRandom;

        $l0 := @parameter0: long;

        specialinvoke r0.<org.apache.commons.math3.random.BitsStreamGenerator: void <init>()>();

        $r1 = newarray (int)[256];

        r0.<org.apache.commons.math3.random.ISAACRandom: int[] rsl> = $r1;

        $r1 = newarray (int)[256];

        r0.<org.apache.commons.math3.random.ISAACRandom: int[] mem> = $r1;

        $r1 = newarray (int)[8];

        r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr> = $r1;

        virtualinvoke r0.<org.apache.commons.math3.random.ISAACRandom: void setSeed(long)>($l0);

        return;
    }
    public void <init>(int[])
    {
        org.apache.commons.math3.random.ISAACRandom r0;
        int[] $r1, $r2;

        r0 := @this: org.apache.commons.math3.random.ISAACRandom;

        $r1 := @parameter0: int[];

        specialinvoke r0.<org.apache.commons.math3.random.BitsStreamGenerator: void <init>()>();

        $r2 = newarray (int)[256];

        r0.<org.apache.commons.math3.random.ISAACRandom: int[] rsl> = $r2;

        $r2 = newarray (int)[256];

        r0.<org.apache.commons.math3.random.ISAACRandom: int[] mem> = $r2;

        $r2 = newarray (int)[8];

        r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr> = $r2;

        virtualinvoke r0.<org.apache.commons.math3.random.ISAACRandom: void setSeed(int[])>($r1);

        return;
    }
    private void initState()
    {
        org.apache.commons.math3.random.ISAACRandom r0;
        int i0, $i1, $i2;
        int[] $r1, $r2;

        r0 := @this: org.apache.commons.math3.random.ISAACRandom;

        r0.<org.apache.commons.math3.random.ISAACRandom: int isaacA> = 0;

        r0.<org.apache.commons.math3.random.ISAACRandom: int isaacB> = 0;

        r0.<org.apache.commons.math3.random.ISAACRandom: int isaacC> = 0;

        i0 = 0;

     label1:
        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = lengthof $r1;

        if i0 >= $i1 goto label2;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $r1[i0] = -1640531527;

        i0 = i0 + 1;

        goto label1;

     label2:
        i0 = 0;

     label3:
        if i0 >= 4 goto label4;

        specialinvoke r0.<org.apache.commons.math3.random.ISAACRandom: void shuffle()>();

        i0 = i0 + 1;

        goto label3;

     label4:
        i0 = 0;

     label5:
        if i0 >= 256 goto label6;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r1[0];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] rsl>;

        $i2 = $r2[i0];

        $i1 = $i1 + $i2;

        $r1[0] = $i1;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r1[1];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] rsl>;

        $i2 = i0 + 1;

        $i2 = $r2[$i2];

        $i1 = $i1 + $i2;

        $r1[1] = $i1;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r1[2];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] rsl>;

        $i2 = i0 + 2;

        $i2 = $r2[$i2];

        $i1 = $i1 + $i2;

        $r1[2] = $i1;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r1[3];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] rsl>;

        $i2 = i0 + 3;

        $i2 = $r2[$i2];

        $i1 = $i1 + $i2;

        $r1[3] = $i1;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r1[4];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] rsl>;

        $i2 = i0 + 4;

        $i2 = $r2[$i2];

        $i1 = $i1 + $i2;

        $r1[4] = $i1;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r1[5];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] rsl>;

        $i2 = i0 + 5;

        $i2 = $r2[$i2];

        $i1 = $i1 + $i2;

        $r1[5] = $i1;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r1[6];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] rsl>;

        $i2 = i0 + 6;

        $i2 = $r2[$i2];

        $i1 = $i1 + $i2;

        $r1[6] = $i1;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r1[7];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] rsl>;

        $i2 = i0 + 7;

        $i2 = $r2[$i2];

        $i1 = $i1 + $i2;

        $r1[7] = $i1;

        specialinvoke r0.<org.apache.commons.math3.random.ISAACRandom: void shuffle()>();

        specialinvoke r0.<org.apache.commons.math3.random.ISAACRandom: void setState(int)>(i0);

        i0 = i0 + 8;

        goto label5;

     label6:
        i0 = 0;

     label7:
        if i0 >= 256 goto label8;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r1[0];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] mem>;

        $i2 = $r2[i0];

        $i1 = $i1 + $i2;

        $r1[0] = $i1;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r1[1];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] mem>;

        $i2 = i0 + 1;

        $i2 = $r2[$i2];

        $i1 = $i1 + $i2;

        $r1[1] = $i1;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r1[2];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] mem>;

        $i2 = i0 + 2;

        $i2 = $r2[$i2];

        $i1 = $i1 + $i2;

        $r1[2] = $i1;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r1[3];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] mem>;

        $i2 = i0 + 3;

        $i2 = $r2[$i2];

        $i1 = $i1 + $i2;

        $r1[3] = $i1;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r1[4];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] mem>;

        $i2 = i0 + 4;

        $i2 = $r2[$i2];

        $i1 = $i1 + $i2;

        $r1[4] = $i1;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r1[5];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] mem>;

        $i2 = i0 + 5;

        $i2 = $r2[$i2];

        $i1 = $i1 + $i2;

        $r1[5] = $i1;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r1[6];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] mem>;

        $i2 = i0 + 6;

        $i2 = $r2[$i2];

        $i1 = $i1 + $i2;

        $r1[6] = $i1;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r1[7];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] mem>;

        $i2 = i0 + 7;

        $i2 = $r2[$i2];

        $i1 = $i1 + $i2;

        $r1[7] = $i1;

        specialinvoke r0.<org.apache.commons.math3.random.ISAACRandom: void shuffle()>();

        specialinvoke r0.<org.apache.commons.math3.random.ISAACRandom: void setState(int)>(i0);

        i0 = i0 + 8;

        goto label7;

     label8:
        specialinvoke r0.<org.apache.commons.math3.random.ISAACRandom: void isaac()>();

        r0.<org.apache.commons.math3.random.ISAACRandom: int count> = 255;

        virtualinvoke r0.<org.apache.commons.math3.random.ISAACRandom: void clear()>();

        return;
    }
    private void isaac()
    {
        org.apache.commons.math3.random.ISAACRandom r0;
        int $i0, $i1;

        r0 := @this: org.apache.commons.math3.random.ISAACRandom;

        r0.<org.apache.commons.math3.random.ISAACRandom: int isaacI> = 0;

        r0.<org.apache.commons.math3.random.ISAACRandom: int isaacJ> = 128;

        $i0 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacB>;

        $i1 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacC>;

        $i1 = $i1 + 1;

        r0.<org.apache.commons.math3.random.ISAACRandom: int isaacC> = $i1;

        $i0 = $i0 + $i1;

        r0.<org.apache.commons.math3.random.ISAACRandom: int isaacB> = $i0;

     label1:
        $i0 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacI>;

        if $i0 >= 128 goto label2;

        specialinvoke r0.<org.apache.commons.math3.random.ISAACRandom: void isaac2()>();

        goto label1;

     label2:
        r0.<org.apache.commons.math3.random.ISAACRandom: int isaacJ> = 0;

     label3:
        $i0 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacJ>;

        if $i0 >= 128 goto label4;

        specialinvoke r0.<org.apache.commons.math3.random.ISAACRandom: void isaac2()>();

        goto label3;

     label4:
        return;
    }
    private void isaac2()
    {
        org.apache.commons.math3.random.ISAACRandom r0;
        int[] $r1;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.commons.math3.random.ISAACRandom;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] mem>;

        $i0 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacI>;

        $i0 = $r1[$i0];

        r0.<org.apache.commons.math3.random.ISAACRandom: int isaacX> = $i0;

        $i0 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacA>;

        $i1 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacA>;

        $i1 = $i1 << 13;

        $i0 = $i0 ^ $i1;

        r0.<org.apache.commons.math3.random.ISAACRandom: int isaacA> = $i0;

        $i0 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacA>;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] mem>;

        $i1 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacJ>;

        $i2 = $i1 + 1;

        r0.<org.apache.commons.math3.random.ISAACRandom: int isaacJ> = $i2;

        $i1 = $r1[$i1];

        $i0 = $i0 + $i1;

        r0.<org.apache.commons.math3.random.ISAACRandom: int isaacA> = $i0;

        specialinvoke r0.<org.apache.commons.math3.random.ISAACRandom: void isaac3()>();

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] mem>;

        $i0 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacI>;

        $i0 = $r1[$i0];

        r0.<org.apache.commons.math3.random.ISAACRandom: int isaacX> = $i0;

        $i0 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacA>;

        $i1 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacA>;

        $i1 = $i1 >>> 6;

        $i0 = $i0 ^ $i1;

        r0.<org.apache.commons.math3.random.ISAACRandom: int isaacA> = $i0;

        $i0 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacA>;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] mem>;

        $i1 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacJ>;

        $i2 = $i1 + 1;

        r0.<org.apache.commons.math3.random.ISAACRandom: int isaacJ> = $i2;

        $i1 = $r1[$i1];

        $i0 = $i0 + $i1;

        r0.<org.apache.commons.math3.random.ISAACRandom: int isaacA> = $i0;

        specialinvoke r0.<org.apache.commons.math3.random.ISAACRandom: void isaac3()>();

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] mem>;

        $i0 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacI>;

        $i0 = $r1[$i0];

        r0.<org.apache.commons.math3.random.ISAACRandom: int isaacX> = $i0;

        $i0 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacA>;

        $i1 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacA>;

        $i1 = $i1 << 2;

        $i0 = $i0 ^ $i1;

        r0.<org.apache.commons.math3.random.ISAACRandom: int isaacA> = $i0;

        $i0 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacA>;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] mem>;

        $i1 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacJ>;

        $i2 = $i1 + 1;

        r0.<org.apache.commons.math3.random.ISAACRandom: int isaacJ> = $i2;

        $i1 = $r1[$i1];

        $i0 = $i0 + $i1;

        r0.<org.apache.commons.math3.random.ISAACRandom: int isaacA> = $i0;

        specialinvoke r0.<org.apache.commons.math3.random.ISAACRandom: void isaac3()>();

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] mem>;

        $i0 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacI>;

        $i0 = $r1[$i0];

        r0.<org.apache.commons.math3.random.ISAACRandom: int isaacX> = $i0;

        $i0 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacA>;

        $i1 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacA>;

        $i1 = $i1 >>> 16;

        $i0 = $i0 ^ $i1;

        r0.<org.apache.commons.math3.random.ISAACRandom: int isaacA> = $i0;

        $i0 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacA>;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] mem>;

        $i1 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacJ>;

        $i2 = $i1 + 1;

        r0.<org.apache.commons.math3.random.ISAACRandom: int isaacJ> = $i2;

        $i1 = $r1[$i1];

        $i0 = $i0 + $i1;

        r0.<org.apache.commons.math3.random.ISAACRandom: int isaacA> = $i0;

        specialinvoke r0.<org.apache.commons.math3.random.ISAACRandom: void isaac3()>();

        return;
    }
    private void isaac3()
    {
        org.apache.commons.math3.random.ISAACRandom r0;
        int[] $r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.commons.math3.random.ISAACRandom;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] mem>;

        $i0 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacI>;

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] mem>;

        $i1 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacX>;

        $i1 = $i1 & 1020;

        $i1 = $i1 >> 2;

        $i1 = $r2[$i1];

        $i2 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacA>;

        $i1 = $i1 + $i2;

        $i2 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacB>;

        $i1 = $i1 + $i2;

        $r1[$i0] = $i1;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] mem>;

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] mem>;

        $i0 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacI>;

        $i0 = $r2[$i0];

        $i0 = $i0 >> 8;

        $i0 = $i0 & 1020;

        $i0 = $i0 >> 2;

        $i0 = $r1[$i0];

        $i1 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacX>;

        $i0 = $i0 + $i1;

        r0.<org.apache.commons.math3.random.ISAACRandom: int isaacB> = $i0;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] rsl>;

        $i0 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacI>;

        $i1 = $i0 + 1;

        r0.<org.apache.commons.math3.random.ISAACRandom: int isaacI> = $i1;

        $i1 = r0.<org.apache.commons.math3.random.ISAACRandom: int isaacB>;

        $r1[$i0] = $i1;

        return;
    }
    private void setState(int)
    {
        org.apache.commons.math3.random.ISAACRandom r0;
        int $i0, $i1, $i2;
        int[] $r1, $r2;

        r0 := @this: org.apache.commons.math3.random.ISAACRandom;

        $i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] mem>;

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r2[0];

        $r1[$i0] = $i1;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] mem>;

        $i1 = $i0 + 1;

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i2 = $r2[1];

        $r1[$i1] = $i2;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] mem>;

        $i1 = $i0 + 2;

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i2 = $r2[2];

        $r1[$i1] = $i2;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] mem>;

        $i1 = $i0 + 3;

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i2 = $r2[3];

        $r1[$i1] = $i2;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] mem>;

        $i1 = $i0 + 4;

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i2 = $r2[4];

        $r1[$i1] = $i2;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] mem>;

        $i1 = $i0 + 5;

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i2 = $r2[5];

        $r1[$i1] = $i2;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] mem>;

        $i1 = $i0 + 6;

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i2 = $r2[6];

        $r1[$i1] = $i2;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] mem>;

        $i0 = $i0 + 7;

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r2[7];

        $r1[$i0] = $i1;

        return;
    }
    private void shuffle()
    {
        org.apache.commons.math3.random.ISAACRandom r0;
        int[] $r1, $r2;
        int $i0, $i1;

        r0 := @this: org.apache.commons.math3.random.ISAACRandom;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i0 = $r1[0];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r2[1];

        $i1 = $i1 << 11;

        $i0 = $i0 ^ $i1;

        $r1[0] = $i0;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i0 = $r1[3];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r2[0];

        $i0 = $i0 + $i1;

        $r1[3] = $i0;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i0 = $r1[1];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r2[2];

        $i0 = $i0 + $i1;

        $r1[1] = $i0;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i0 = $r1[1];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r2[2];

        $i1 = $i1 >>> 2;

        $i0 = $i0 ^ $i1;

        $r1[1] = $i0;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i0 = $r1[4];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r2[1];

        $i0 = $i0 + $i1;

        $r1[4] = $i0;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i0 = $r1[2];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r2[3];

        $i0 = $i0 + $i1;

        $r1[2] = $i0;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i0 = $r1[2];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r2[3];

        $i1 = $i1 << 8;

        $i0 = $i0 ^ $i1;

        $r1[2] = $i0;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i0 = $r1[5];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r2[2];

        $i0 = $i0 + $i1;

        $r1[5] = $i0;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i0 = $r1[3];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r2[4];

        $i0 = $i0 + $i1;

        $r1[3] = $i0;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i0 = $r1[3];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r2[4];

        $i1 = $i1 >>> 16;

        $i0 = $i0 ^ $i1;

        $r1[3] = $i0;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i0 = $r1[6];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r2[3];

        $i0 = $i0 + $i1;

        $r1[6] = $i0;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i0 = $r1[4];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r2[5];

        $i0 = $i0 + $i1;

        $r1[4] = $i0;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i0 = $r1[4];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r2[5];

        $i1 = $i1 << 10;

        $i0 = $i0 ^ $i1;

        $r1[4] = $i0;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i0 = $r1[7];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r2[4];

        $i0 = $i0 + $i1;

        $r1[7] = $i0;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i0 = $r1[5];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r2[6];

        $i0 = $i0 + $i1;

        $r1[5] = $i0;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i0 = $r1[5];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r2[6];

        $i1 = $i1 >>> 4;

        $i0 = $i0 ^ $i1;

        $r1[5] = $i0;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i0 = $r1[0];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r2[5];

        $i0 = $i0 + $i1;

        $r1[0] = $i0;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i0 = $r1[6];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r2[7];

        $i0 = $i0 + $i1;

        $r1[6] = $i0;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i0 = $r1[6];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r2[7];

        $i1 = $i1 << 8;

        $i0 = $i0 ^ $i1;

        $r1[6] = $i0;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i0 = $r1[1];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r2[6];

        $i0 = $i0 + $i1;

        $r1[1] = $i0;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i0 = $r1[7];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r2[0];

        $i0 = $i0 + $i1;

        $r1[7] = $i0;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i0 = $r1[7];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r2[0];

        $i1 = $i1 >>> 9;

        $i0 = $i0 ^ $i1;

        $r1[7] = $i0;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i0 = $r1[2];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r2[7];

        $i0 = $i0 + $i1;

        $r1[2] = $i0;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i0 = $r1[0];

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] arr>;

        $i1 = $r2[1];

        $i0 = $i0 + $i1;

        $r1[0] = $i0;

        return;
    }
    protected int next(int)
    {
        org.apache.commons.math3.random.ISAACRandom r0;
        int $i0, $i1, $i2;
        int[] $r1;

        r0 := @this: org.apache.commons.math3.random.ISAACRandom;

        $i0 := @parameter0: int;

        $i1 = r0.<org.apache.commons.math3.random.ISAACRandom: int count>;

        if $i1 >= 0 goto label1;

        specialinvoke r0.<org.apache.commons.math3.random.ISAACRandom: void isaac()>();

        r0.<org.apache.commons.math3.random.ISAACRandom: int count> = 255;

     label1:
        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] rsl>;

        $i2 = r0.<org.apache.commons.math3.random.ISAACRandom: int count>;

        $i1 = $i2 + -1;

        r0.<org.apache.commons.math3.random.ISAACRandom: int count> = $i1;

        $i1 = $r1[$i2];

        $i0 = 32 - $i0;

        $i0 = $i1 >>> $i0;

        return $i0;
    }
    public void setSeed(int)
    {
        org.apache.commons.math3.random.ISAACRandom r0;
        int $i0;
        int[] $r1;

        r0 := @this: org.apache.commons.math3.random.ISAACRandom;

        $i0 := @parameter0: int;

        $r1 = newarray (int)[1];

        $r1[0] = $i0;

        virtualinvoke r0.<org.apache.commons.math3.random.ISAACRandom: void setSeed(int[])>($r1);

        return;
    }
    public void setSeed(long)
    {
        org.apache.commons.math3.random.ISAACRandom r0;
        long $l0, $l1;
        int[] $r1;
        int $i2;

        r0 := @this: org.apache.commons.math3.random.ISAACRandom;

        $l0 := @parameter0: long;

        $r1 = newarray (int)[2];

        $l1 = $l0 >>> 32;

        $i2 = (int) $l1;

        $r1[0] = $i2;

        $l0 = 4294967295L & $l0;

        $i2 = (int) $l0;

        $r1[1] = $i2;

        virtualinvoke r0.<org.apache.commons.math3.random.ISAACRandom: void setSeed(int[])>($r1);

        return;
    }
    public void setSeed(int[])
    {
        org.apache.commons.math3.random.ISAACRandom r0;
        int[] $r1, $r2;
        int i0, i2, $i4, $i5;
        long l1, $l3;

        r0 := @this: org.apache.commons.math3.random.ISAACRandom;

        $r1 := @parameter0: int[];

        if $r1 != null goto label1;

        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $l3 = (long) i0;

        l1 = l1 + $l3;

        virtualinvoke r0.<org.apache.commons.math3.random.ISAACRandom: void setSeed(long)>(l1);

        return;

     label1:
        i2 = lengthof $r1;

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] rsl>;

        i0 = lengthof $r2;

        $r2 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] rsl>;

        $i4 = staticinvoke <org.apache.commons.math3.util.FastMath: int min(int,int)>(i2, i0);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i4);

        if i2 >= i0 goto label3;

        $i4 = i2;

     label2:
        if $i4 >= i0 goto label3;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] rsl>;

        $i5 = $i4 - i2;

        $i5 = $r1[$i5];

        l1 = (long) $i5;

        $r1 = r0.<org.apache.commons.math3.random.ISAACRandom: int[] rsl>;

        $l3 = l1 >> 30;

        l1 = $l3 ^ l1;

        l1 = 1812433253L * l1;

        $l3 = (long) $i4;

        l1 = l1 + $l3;

        l1 = l1 & 4294967295L;

        $i5 = (int) l1;

        $r1[$i4] = $i5;

        $i4 = $i4 + 1;

        goto label2;

     label3:
        specialinvoke r0.<org.apache.commons.math3.random.ISAACRandom: void initState()>();

        return;
    }
