org.apache.commons.math3.random.UnitSphereRandomVectorGenerator extends java.lang.Object implements org.apache.commons.math3.random.RandomVectorGenerator
private final int dimension
private final org.apache.commons.math3.random.RandomGenerator rand
    public void <init>(int)
    {
        org.apache.commons.math3.random.UnitSphereRandomVectorGenerator r0;
        int $i0;
        org.apache.commons.math3.random.MersenneTwister $r1;

        r0 := @this: org.apache.commons.math3.random.UnitSphereRandomVectorGenerator;

        $i0 := @parameter0: int;

        $r1 = new org.apache.commons.math3.random.MersenneTwister;

        specialinvoke $r1.<org.apache.commons.math3.random.MersenneTwister: void <init>()>();

        specialinvoke r0.<org.apache.commons.math3.random.UnitSphereRandomVectorGenerator: void <init>(int,org.apache.commons.math3.random.RandomGenerator)>($i0, $r1);

        return;
    }
    public void <init>(int, org.apache.commons.math3.random.RandomGenerator)
    {
        org.apache.commons.math3.random.UnitSphereRandomVectorGenerator r0;
        int $i0;
        org.apache.commons.math3.random.RandomGenerator $r1;

        r0 := @this: org.apache.commons.math3.random.UnitSphereRandomVectorGenerator;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.apache.commons.math3.random.RandomGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.random.UnitSphereRandomVectorGenerator: int dimension> = $i0;

        r0.<org.apache.commons.math3.random.UnitSphereRandomVectorGenerator: org.apache.commons.math3.random.RandomGenerator rand> = $r1;

        return;
    }
    public double[] nextVector()
    {
        org.apache.commons.math3.random.UnitSphereRandomVectorGenerator r0;
        double d0, $d1;
        double[] r1;
        int $i0, $i1;
        org.apache.commons.math3.random.RandomGenerator $r2;

        r0 := @this: org.apache.commons.math3.random.UnitSphereRandomVectorGenerator;

        $i0 = r0.<org.apache.commons.math3.random.UnitSphereRandomVectorGenerator: int dimension>;

        r1 = newarray (double)[$i0];

        d0 = 0.0;

        $i0 = 0;

     label1:
        $i1 = r0.<org.apache.commons.math3.random.UnitSphereRandomVectorGenerator: int dimension>;

        if $i0 >= $i1 goto label2;

        $r2 = r0.<org.apache.commons.math3.random.UnitSphereRandomVectorGenerator: org.apache.commons.math3.random.RandomGenerator rand>;

        $d1 = interfaceinvoke $r2.<org.apache.commons.math3.random.RandomGenerator: double nextGaussian()>();

        r1[$i0] = $d1;

        $d1 = $d1 * $d1;

        d0 = d0 + $d1;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(d0);

        d0 = 1.0 / d0;

        $i0 = 0;

     label3:
        $i1 = r0.<org.apache.commons.math3.random.UnitSphereRandomVectorGenerator: int dimension>;

        if $i0 >= $i1 goto label4;

        $d1 = r1[$i0];

        $d1 = $d1 * d0;

        r1[$i0] = $d1;

        $i0 = $i0 + 1;

        goto label3;

     label4:
        return r1;
    }
