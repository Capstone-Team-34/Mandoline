org.apache.commons.math3.random.CorrelatedRandomVectorGenerator extends java.lang.Object implements org.apache.commons.math3.random.RandomVectorGenerator
private final org.apache.commons.math3.random.NormalizedRandomGenerator generator
private final double[] mean
private final double[] normalized
private final org.apache.commons.math3.linear.RealMatrix root
    public void <init>(org.apache.commons.math3.linear.RealMatrix, double, org.apache.commons.math3.random.NormalizedRandomGenerator)
    {
        org.apache.commons.math3.random.CorrelatedRandomVectorGenerator r0;
        org.apache.commons.math3.linear.RealMatrix $r1;
        double $d0;
        org.apache.commons.math3.random.NormalizedRandomGenerator $r2;
        org.apache.commons.math3.linear.RectangularCholeskyDecomposition r3;
        int $i0, i1;
        double[] $r4;

        r0 := @this: org.apache.commons.math3.random.CorrelatedRandomVectorGenerator;

        $r1 := @parameter0: org.apache.commons.math3.linear.RealMatrix;

        $d0 := @parameter1: double;

        $r2 := @parameter2: org.apache.commons.math3.random.NormalizedRandomGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = interfaceinvoke $r1.<org.apache.commons.math3.linear.RealMatrix: int getRowDimension()>();

        $r4 = newarray (double)[$i0];

        r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: double[] mean> = $r4;

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r4 = r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: double[] mean>;

        $r4[i1] = 0.0;

        i1 = i1 + 1;

        goto label1;

     label2:
        r3 = new org.apache.commons.math3.linear.RectangularCholeskyDecomposition;

        specialinvoke r3.<org.apache.commons.math3.linear.RectangularCholeskyDecomposition: void <init>(org.apache.commons.math3.linear.RealMatrix,double)>($r1, $d0);

        $r1 = virtualinvoke r3.<org.apache.commons.math3.linear.RectangularCholeskyDecomposition: org.apache.commons.math3.linear.RealMatrix getRootMatrix()>();

        r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: org.apache.commons.math3.linear.RealMatrix root> = $r1;

        r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: org.apache.commons.math3.random.NormalizedRandomGenerator generator> = $r2;

        $i0 = virtualinvoke r3.<org.apache.commons.math3.linear.RectangularCholeskyDecomposition: int getRank()>();

        $r4 = newarray (double)[$i0];

        r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: double[] normalized> = $r4;

        return;
    }
    public void <init>(double[], org.apache.commons.math3.linear.RealMatrix, double, org.apache.commons.math3.random.NormalizedRandomGenerator)
    {
        org.apache.commons.math3.random.CorrelatedRandomVectorGenerator r0;
        double[] $r1;
        org.apache.commons.math3.linear.RealMatrix $r2;
        double $d0;
        org.apache.commons.math3.random.NormalizedRandomGenerator $r3;
        org.apache.commons.math3.linear.RectangularCholeskyDecomposition r4;
        int $i0, $i1;
        org.apache.commons.math3.exception.DimensionMismatchException $r5;
        java.lang.Object $r6;

        r0 := @this: org.apache.commons.math3.random.CorrelatedRandomVectorGenerator;

        $r1 := @parameter0: double[];

        $r2 := @parameter1: org.apache.commons.math3.linear.RealMatrix;

        $d0 := @parameter2: double;

        $r3 := @parameter3: org.apache.commons.math3.random.NormalizedRandomGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = interfaceinvoke $r2.<org.apache.commons.math3.linear.RealMatrix: int getRowDimension()>();

        $i0 = lengthof $r1;

        if $i0 == $i1 goto label1;

        $r5 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i0 = lengthof $r1;

        specialinvoke $r5.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i0, $i1);

        throw $r5;

     label1:
        $r6 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (double[]) $r6;

        r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: double[] mean> = $r1;

        r4 = new org.apache.commons.math3.linear.RectangularCholeskyDecomposition;

        specialinvoke r4.<org.apache.commons.math3.linear.RectangularCholeskyDecomposition: void <init>(org.apache.commons.math3.linear.RealMatrix,double)>($r2, $d0);

        $r2 = virtualinvoke r4.<org.apache.commons.math3.linear.RectangularCholeskyDecomposition: org.apache.commons.math3.linear.RealMatrix getRootMatrix()>();

        r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: org.apache.commons.math3.linear.RealMatrix root> = $r2;

        r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: org.apache.commons.math3.random.NormalizedRandomGenerator generator> = $r3;

        $i1 = virtualinvoke r4.<org.apache.commons.math3.linear.RectangularCholeskyDecomposition: int getRank()>();

        $r1 = newarray (double)[$i1];

        r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: double[] normalized> = $r1;

        return;
    }
    public org.apache.commons.math3.random.NormalizedRandomGenerator getGenerator()
    {
        org.apache.commons.math3.random.CorrelatedRandomVectorGenerator r0;
        org.apache.commons.math3.random.NormalizedRandomGenerator r1;

        r0 := @this: org.apache.commons.math3.random.CorrelatedRandomVectorGenerator;

        r1 = r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: org.apache.commons.math3.random.NormalizedRandomGenerator generator>;

        return r1;
    }
    public int getRank()
    {
        org.apache.commons.math3.random.CorrelatedRandomVectorGenerator r0;
        double[] $r1;
        int $i0;

        r0 := @this: org.apache.commons.math3.random.CorrelatedRandomVectorGenerator;

        $r1 = r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: double[] normalized>;

        $i0 = lengthof $r1;

        return $i0;
    }
    public org.apache.commons.math3.linear.RealMatrix getRootMatrix()
    {
        org.apache.commons.math3.random.CorrelatedRandomVectorGenerator r0;
        org.apache.commons.math3.linear.RealMatrix r1;

        r0 := @this: org.apache.commons.math3.random.CorrelatedRandomVectorGenerator;

        r1 = r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: org.apache.commons.math3.linear.RealMatrix root>;

        return r1;
    }
    public double[] nextVector()
    {
        org.apache.commons.math3.random.CorrelatedRandomVectorGenerator r0;
        double[] r1, $r3;
        double $d0, $d1, $d2;
        int i0, $i1, $i2;
        org.apache.commons.math3.random.NormalizedRandomGenerator $r2;
        org.apache.commons.math3.linear.RealMatrix $r4;

        r0 := @this: org.apache.commons.math3.random.CorrelatedRandomVectorGenerator;

        i0 = 0;

     label1:
        r1 = r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: double[] normalized>;

        $i1 = lengthof r1;

        if i0 >= $i1 goto label2;

        r1 = r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: double[] normalized>;

        $r2 = r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: org.apache.commons.math3.random.NormalizedRandomGenerator generator>;

        $d1 = interfaceinvoke $r2.<org.apache.commons.math3.random.NormalizedRandomGenerator: double nextNormalizedDouble()>();

        r1[i0] = $d1;

        i0 = i0 + 1;

        goto label1;

     label2:
        r1 = r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: double[] mean>;

        i0 = lengthof r1;

        r1 = newarray (double)[i0];

        i0 = 0;

     label3:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label6;

        $r3 = r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: double[] mean>;

        $d1 = $r3[i0];

        r1[i0] = $d1;

        $i1 = 0;

     label4:
        $r4 = r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: org.apache.commons.math3.linear.RealMatrix root>;

        $i2 = interfaceinvoke $r4.<org.apache.commons.math3.linear.RealMatrix: int getColumnDimension()>();

        if $i1 >= $i2 goto label5;

        $d1 = r1[i0];

        $r4 = r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: org.apache.commons.math3.linear.RealMatrix root>;

        $d2 = interfaceinvoke $r4.<org.apache.commons.math3.linear.RealMatrix: double getEntry(int,int)>(i0, $i1);

        $r3 = r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: double[] normalized>;

        $d0 = $r3[$i1];

        $d0 = $d2 * $d0;

        $d1 = $d1 + $d0;

        r1[i0] = $d1;

        $i1 = $i1 + 1;

        goto label4;

     label5:
        i0 = i0 + 1;

        goto label3;

     label6:
        return r1;
    }
