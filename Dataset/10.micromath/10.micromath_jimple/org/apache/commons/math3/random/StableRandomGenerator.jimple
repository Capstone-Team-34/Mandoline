org.apache.commons.math3.random.StableRandomGenerator extends java.lang.Object implements org.apache.commons.math3.random.NormalizedRandomGenerator
private final double alpha
private final double beta
private final org.apache.commons.math3.random.RandomGenerator generator
private final double zeta
    public void <init>(org.apache.commons.math3.random.RandomGenerator, double, double) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.OutOfRangeException
    {
        org.apache.commons.math3.random.StableRandomGenerator r0;
        org.apache.commons.math3.random.RandomGenerator $r1;
        double $d0, $d1;
        org.apache.commons.math3.exception.NullArgumentException $r2;
        byte $b0;
        org.apache.commons.math3.exception.OutOfRangeException $r3;
        org.apache.commons.math3.exception.util.LocalizedFormats $r4;
        java.lang.Double $r5;
        java.lang.Integer $r6, $r7;

        r0 := @this: org.apache.commons.math3.random.StableRandomGenerator;

        $r1 := @parameter0: org.apache.commons.math3.random.RandomGenerator;

        $d0 := @parameter1: double;

        $d1 := @parameter2: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $r1 != null goto label1;

        $r2 = new org.apache.commons.math3.exception.NullArgumentException;

        specialinvoke $r2.<org.apache.commons.math3.exception.NullArgumentException: void <init>()>();

        throw $r2;

     label1:
        $b0 = $d0 cmpl 0.0;

        if $b0 <= 0 goto label2;

        $b0 = $d0 cmpg 2.0;

        if $b0 <= 0 goto label3;

     label2:
        $r3 = new org.apache.commons.math3.exception.OutOfRangeException;

        $r4 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats OUT_OF_RANGE_LEFT>;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        specialinvoke $r3.<org.apache.commons.math3.exception.OutOfRangeException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)>($r4, $r5, $r6, $r7);

        throw $r3;

     label3:
        $b0 = $d1 cmpl -1.0;

        if $b0 < 0 goto label4;

        $b0 = $d1 cmpg 1.0;

        if $b0 <= 0 goto label5;

     label4:
        $r3 = new org.apache.commons.math3.exception.OutOfRangeException;

        $r4 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats OUT_OF_RANGE_SIMPLE>;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        specialinvoke $r3.<org.apache.commons.math3.exception.OutOfRangeException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)>($r4, $r5, $r6, $r7);

        throw $r3;

     label5:
        r0.<org.apache.commons.math3.random.StableRandomGenerator: org.apache.commons.math3.random.RandomGenerator generator> = $r1;

        r0.<org.apache.commons.math3.random.StableRandomGenerator: double alpha> = $d0;

        r0.<org.apache.commons.math3.random.StableRandomGenerator: double beta> = $d1;

        $b0 = $d0 cmpg 2.0;

        if $b0 >= 0 goto label6;

        $b0 = $d1 cmpl 0.0;

        if $b0 == 0 goto label6;

        $d0 = 3.141592653589793 * $d0;

        $d0 = $d0 / 2.0;

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double tan(double)>($d0);

        $d0 = $d0 * $d1;

        r0.<org.apache.commons.math3.random.StableRandomGenerator: double zeta> = $d0;

        return;

     label6:
        r0.<org.apache.commons.math3.random.StableRandomGenerator: double zeta> = 0.0;

        return;
    }
    public double nextNormalizedDouble()
    {
        org.apache.commons.math3.random.StableRandomGenerator r0;
        double d0, d1, d2, d3, $d4, $d5;
        org.apache.commons.math3.random.RandomGenerator $r1;
        byte $b0;

        r0 := @this: org.apache.commons.math3.random.StableRandomGenerator;

        $r1 = r0.<org.apache.commons.math3.random.StableRandomGenerator: org.apache.commons.math3.random.RandomGenerator generator>;

        d3 = interfaceinvoke $r1.<org.apache.commons.math3.random.RandomGenerator: double nextDouble()>();

        d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double log(double)>(d3);

        d3 = neg d3;

        $r1 = r0.<org.apache.commons.math3.random.StableRandomGenerator: org.apache.commons.math3.random.RandomGenerator generator>;

        d2 = interfaceinvoke $r1.<org.apache.commons.math3.random.RandomGenerator: double nextDouble()>();

        d2 = d2 - 0.5;

        d2 = 3.141592653589793 * d2;

        $d4 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double alpha>;

        $b0 = $d4 cmpl 2.0;

        if $b0 != 0 goto label1;

        d3 = 2.0 * d3;

        d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(d3);

        d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double sin(double)>(d2);

        d3 = d3 * d2;

        return d3;

     label1:
        $d4 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double beta>;

        $b0 = $d4 cmpl 0.0;

        if $b0 != 0 goto label3;

        $d4 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double alpha>;

        $b0 = $d4 cmpl 1.0;

        if $b0 != 0 goto label2;

        d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double tan(double)>(d2);

        return d3;

     label2:
        $d4 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double alpha>;

        $d4 = 1.0 - $d4;

        $d4 = $d4 * d2;

        $d4 = staticinvoke <org.apache.commons.math3.util.FastMath: double cos(double)>($d4);

        d3 = $d4 * d3;

        $d4 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double alpha>;

        $d4 = 1.0 / $d4;

        $d4 = $d4 - 1.0;

        d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,double)>(d3, $d4);

        $d4 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double alpha>;

        $d4 = $d4 * d2;

        $d4 = staticinvoke <org.apache.commons.math3.util.FastMath: double sin(double)>($d4);

        d3 = d3 * $d4;

        d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double cos(double)>(d2);

        $d4 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double alpha>;

        $d4 = 1.0 / $d4;

        d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,double)>(d2, $d4);

        d3 = d3 / d2;

        return d3;

     label3:
        $d4 = staticinvoke <org.apache.commons.math3.util.FastMath: double cos(double)>(d2);

        d1 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double alpha>;

        d1 = d1 - 1.0;

        d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d1);

        $b0 = d1 cmpl 1.0E-8;

        if $b0 <= 0 goto label4;

        d1 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double alpha>;

        d0 = d1 * d2;

        d2 = d2 - d0;

        d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double sin(double)>(d0);

        $d5 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double zeta>;

        d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double cos(double)>(d0);

        d0 = $d5 * d0;

        d1 = d1 + d0;

        d1 = d1 / $d4;

        d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double cos(double)>(d2);

        $d5 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double zeta>;

        d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double sin(double)>(d2);

        d2 = $d5 * d2;

        d2 = d0 + d2;

        d2 = d1 * d2;

        d3 = d3 * $d4;

        $d4 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double alpha>;

        $d4 = 1.0 - $d4;

        d1 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double alpha>;

        $d4 = $d4 / d1;

        d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,double)>(d3, $d4);

        d3 = d2 / d3;

        return d3;

     label4:
        d1 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double beta>;

        d1 = d1 * d2;

        d1 = 1.5707963267948966 + d1;

        d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double tan(double)>(d2);

        d2 = d2 * d1;

        d0 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double beta>;

        d3 = 1.5707963267948966 * d3;

        d3 = d3 * $d4;

        d3 = d3 / d1;

        d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double log(double)>(d3);

        d3 = d0 * d3;

        d3 = d2 - d3;

        d3 = 0.6366197723675814 * d3;

        d2 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double alpha>;

        $b0 = d2 cmpl 1.0;

        if $b0 == 0 goto label5;

        d2 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double beta>;

        $d4 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double alpha>;

        $d4 = 3.141592653589793 * $d4;

        $d4 = $d4 / 2.0;

        $d4 = staticinvoke <org.apache.commons.math3.util.FastMath: double tan(double)>($d4);

        d2 = d2 * $d4;

        d3 = d3 + d2;

     label5:
        return d3;
    }
