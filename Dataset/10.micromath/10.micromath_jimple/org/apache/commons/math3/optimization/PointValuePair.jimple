org.apache.commons.math3.optimization.PointValuePair extends org.apache.commons.math3.util.Pair implements java.io.Serializable
private static final long serialVersionUID
    public void <init>(double[], double)
    {
        org.apache.commons.math3.optimization.PointValuePair r0;
        double[] $r1;
        double $d0;

        r0 := @this: org.apache.commons.math3.optimization.PointValuePair;

        $r1 := @parameter0: double[];

        $d0 := @parameter1: double;

        specialinvoke r0.<org.apache.commons.math3.optimization.PointValuePair: void <init>(double[],double,boolean)>($r1, $d0, 1);

        return;
    }
    public void <init>(double[], double, boolean)
    {
        org.apache.commons.math3.optimization.PointValuePair r0;
        double[] $r1;
        double $d0;
        boolean $z0;
        java.lang.Double $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.math3.optimization.PointValuePair;

        $r1 := @parameter0: double[];

        $d0 := @parameter1: double;

        $z0 := @parameter2: boolean;

        if $z0 == 0 goto label3;

        if $r1 != null goto label2;

        $r1 = null;

     label1:
        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        specialinvoke r0.<org.apache.commons.math3.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;

     label2:
        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (double[]) $r3;

        goto label1;

     label3:
        goto label1;
    }
    private java.lang.Object writeReplace()
    {
        org.apache.commons.math3.optimization.PointValuePair r0;
        org.apache.commons.math3.optimization.PointValuePair$DataTransferObject $r1;
        java.lang.Object $r2;
        double[] $r3;
        java.lang.Double $r4;
        double $d0;

        r0 := @this: org.apache.commons.math3.optimization.PointValuePair;

        $r1 = new org.apache.commons.math3.optimization.PointValuePair$DataTransferObject;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.optimization.PointValuePair: java.lang.Object getKey()>();

        $r3 = (double[]) $r2;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.optimization.PointValuePair: java.lang.Object getValue()>();

        $r4 = (java.lang.Double) $r2;

        $d0 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        specialinvoke $r1.<org.apache.commons.math3.optimization.PointValuePair$DataTransferObject: void <init>(double[],double)>($r3, $d0);

        return $r1;
    }
    public double[] getPoint()
    {
        org.apache.commons.math3.optimization.PointValuePair r0;
        java.lang.Object $r1;
        double[] r2;

        r0 := @this: org.apache.commons.math3.optimization.PointValuePair;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.optimization.PointValuePair: java.lang.Object getKey()>();

        r2 = (double[]) $r1;

        if r2 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r2.<java.lang.Object: java.lang.Object clone()>();

        r2 = (double[]) $r1;

        return r2;
    }
    public double[] getPointRef()
    {
        org.apache.commons.math3.optimization.PointValuePair r0;
        java.lang.Object $r1;
        double[] $r2;

        r0 := @this: org.apache.commons.math3.optimization.PointValuePair;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.optimization.PointValuePair: java.lang.Object getKey()>();

        $r2 = (double[]) $r1;

        return $r2;
    }
