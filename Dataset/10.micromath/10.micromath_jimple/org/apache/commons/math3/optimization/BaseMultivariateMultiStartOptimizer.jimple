org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer extends java.lang.Object implements org.apache.commons.math3.optimization.BaseMultivariateOptimizer
private org.apache.commons.math3.random.RandomVectorGenerator generator
private int maxEvaluations
private org.apache.commons.math3.optimization.PointValuePair[] optima
private final org.apache.commons.math3.optimization.BaseMultivariateOptimizer optimizer
private int starts
private int totalEvaluations
    protected void <init>(org.apache.commons.math3.optimization.BaseMultivariateOptimizer, int, org.apache.commons.math3.random.RandomVectorGenerator)
    {
        org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer r0;
        org.apache.commons.math3.optimization.BaseMultivariateOptimizer r1;
        int $i0;
        org.apache.commons.math3.random.RandomVectorGenerator $r2;
        java.lang.Integer $r3;
        org.apache.commons.math3.exception.NullArgumentException $r4;
        org.apache.commons.math3.exception.NotStrictlyPositiveException $r5;

        r0 := @this: org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer;

        r1 := @parameter0: org.apache.commons.math3.optimization.BaseMultivariateOptimizer;

        $i0 := @parameter1: int;

        $r2 := @parameter2: org.apache.commons.math3.random.RandomVectorGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        if $r2 != null goto label2;

     label1:
        $r4 = new org.apache.commons.math3.exception.NullArgumentException;

        specialinvoke $r4.<org.apache.commons.math3.exception.NullArgumentException: void <init>()>();

        throw $r4;

     label2:
        if $i0 >= 1 goto label3;

        $r5 = new org.apache.commons.math3.exception.NotStrictlyPositiveException;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        specialinvoke $r5.<org.apache.commons.math3.exception.NotStrictlyPositiveException: void <init>(java.lang.Number)>($r3);

        throw $r5;

     label3:
        r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: org.apache.commons.math3.optimization.BaseMultivariateOptimizer optimizer> = r1;

        r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: int starts> = $i0;

        r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: org.apache.commons.math3.random.RandomVectorGenerator generator> = $r2;

        return;
    }
    private void sortPairs(org.apache.commons.math3.optimization.GoalType)
    {
        org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer r0;
        org.apache.commons.math3.optimization.GoalType $r1;
        org.apache.commons.math3.optimization.PointValuePair[] $r2;
        org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer$1 $r3;

        r0 := @this: org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer;

        $r1 := @parameter0: org.apache.commons.math3.optimization.GoalType;

        $r2 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: org.apache.commons.math3.optimization.PointValuePair[] optima>;

        $r3 = new org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer$1;

        specialinvoke $r3.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer$1: void <init>(org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer,org.apache.commons.math3.optimization.GoalType)>(r0, $r1);

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($r2, $r3);

        return;
    }
    public org.apache.commons.math3.optimization.ConvergenceChecker getConvergenceChecker()
    {
        org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer r0;
        org.apache.commons.math3.optimization.ConvergenceChecker $r1;
        org.apache.commons.math3.optimization.BaseMultivariateOptimizer $r2;

        r0 := @this: org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer;

        $r2 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: org.apache.commons.math3.optimization.BaseMultivariateOptimizer optimizer>;

        $r1 = interfaceinvoke $r2.<org.apache.commons.math3.optimization.BaseMultivariateOptimizer: org.apache.commons.math3.optimization.ConvergenceChecker getConvergenceChecker()>();

        return $r1;
    }
    public int getEvaluations()
    {
        org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer r0;
        int i0;

        r0 := @this: org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer;

        i0 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: int totalEvaluations>;

        return i0;
    }
    public int getMaxEvaluations()
    {
        org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer r0;
        int i0;

        r0 := @this: org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer;

        i0 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: int maxEvaluations>;

        return i0;
    }
    public org.apache.commons.math3.optimization.PointValuePair[] getOptima()
    {
        org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer r0;
        org.apache.commons.math3.exception.util.LocalizedFormats $r1;
        java.lang.Object $r2;
        org.apache.commons.math3.optimization.PointValuePair[] $r3;
        org.apache.commons.math3.exception.MathIllegalStateException $r4;
        java.lang.Object[] $r5;

        r0 := @this: org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer;

        $r3 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: org.apache.commons.math3.optimization.PointValuePair[] optima>;

        if $r3 != null goto label1;

        $r4 = new org.apache.commons.math3.exception.MathIllegalStateException;

        $r1 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats NO_OPTIMUM_COMPUTED_YET>;

        $r5 = newarray (java.lang.Object)[0];

        specialinvoke $r4.<org.apache.commons.math3.exception.MathIllegalStateException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r1, $r5);

        throw $r4;

     label1:
        $r3 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: org.apache.commons.math3.optimization.PointValuePair[] optima>;

        $r2 = virtualinvoke $r3.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (org.apache.commons.math3.optimization.PointValuePair[]) $r2;

        return $r3;
    }
    public org.apache.commons.math3.optimization.PointValuePair optimize(int, org.apache.commons.math3.analysis.MultivariateFunction, org.apache.commons.math3.optimization.GoalType, double[])
    {
        org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer r0;
        int $i0, $i1, $i2, $i3;
        org.apache.commons.math3.analysis.MultivariateFunction r1;
        org.apache.commons.math3.optimization.GoalType $r2;
        double[] $r3, $r7;
        java.lang.RuntimeException r4;
        org.apache.commons.math3.optimization.BaseMultivariateOptimizer $r5;
        org.apache.commons.math3.optimization.PointValuePair[] $r6;
        org.apache.commons.math3.optimization.PointValuePair $r8;
        org.apache.commons.math3.random.RandomVectorGenerator $r9;

        r0 := @this: org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer;

        $i0 := @parameter0: int;

        r1 := @parameter1: org.apache.commons.math3.analysis.MultivariateFunction;

        $r2 := @parameter2: org.apache.commons.math3.optimization.GoalType;

        $r3 := @parameter3: double[];

        r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: int maxEvaluations> = $i0;

        r4 = null;

        $i2 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: int starts>;

        $r6 = newarray (org.apache.commons.math3.optimization.PointValuePair)[$i2];

        r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: org.apache.commons.math3.optimization.PointValuePair[] optima> = $r6;

        r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: int totalEvaluations> = 0;

        $i2 = 0;

     label01:
        $i1 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: int starts>;

        if $i2 >= $i1 goto label09;

     label02:
        $r6 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: org.apache.commons.math3.optimization.PointValuePair[] optima>;

        $r5 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: org.apache.commons.math3.optimization.BaseMultivariateOptimizer optimizer>;

        $i1 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: int totalEvaluations>;

     label03:
        $i1 = $i0 - $i1;

        if $i2 != 0 goto label06;

        $r7 = $r3;

     label04:
        $r8 = interfaceinvoke $r5.<org.apache.commons.math3.optimization.BaseMultivariateOptimizer: org.apache.commons.math3.optimization.PointValuePair optimize(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[])>($i1, r1, $r2, $r7);

        $r6[$i2] = $r8;

     label05:
        $i1 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: int totalEvaluations>;

        $r5 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: org.apache.commons.math3.optimization.BaseMultivariateOptimizer optimizer>;

        $i3 = interfaceinvoke $r5.<org.apache.commons.math3.optimization.BaseMultivariateOptimizer: int getEvaluations()>();

        $i1 = $i1 + $i3;

        r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: int totalEvaluations> = $i1;

        $i2 = $i2 + 1;

        goto label01;

     label06:
        $r9 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: org.apache.commons.math3.random.RandomVectorGenerator generator>;

        $r7 = interfaceinvoke $r9.<org.apache.commons.math3.random.RandomVectorGenerator: double[] nextVector()>();

     label07:
        goto label04;

     label08:
        r4 := @caughtexception;

        $r6 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: org.apache.commons.math3.optimization.PointValuePair[] optima>;

        $r6[$i2] = null;

        goto label05;

     label09:
        specialinvoke r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: void sortPairs(org.apache.commons.math3.optimization.GoalType)>($r2);

        $r6 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: org.apache.commons.math3.optimization.PointValuePair[] optima>;

        $r8 = $r6[0];

        if $r8 != null goto label10;

        throw r4;

     label10:
        $r6 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: org.apache.commons.math3.optimization.PointValuePair[] optima>;

        $r8 = $r6[0];

        return $r8;

        catch java.lang.RuntimeException from label02 to label03 with label08;
        catch java.lang.RuntimeException from label04 to label05 with label08;
        catch java.lang.RuntimeException from label06 to label07 with label08;
    }
