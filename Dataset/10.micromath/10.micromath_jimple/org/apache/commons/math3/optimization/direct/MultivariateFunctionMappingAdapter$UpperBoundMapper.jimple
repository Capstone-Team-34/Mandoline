org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$UpperBoundMapper extends java.lang.Object implements org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$Mapper
private final double upper
    void <init>(double)
    {
        org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$UpperBoundMapper r0;
        double $d0;

        r0 := @this: org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$UpperBoundMapper;

        $d0 := @parameter0: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$UpperBoundMapper: double upper> = $d0;

        return;
    }
    public double boundedToUnbounded(double)
    {
        org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$UpperBoundMapper r0;
        double $d0, $d1;

        r0 := @this: org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$UpperBoundMapper;

        $d0 := @parameter0: double;

        $d1 = r0.<org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$UpperBoundMapper: double upper>;

        $d0 = $d1 - $d0;

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double log(double)>($d0);

        $d0 = neg $d0;

        return $d0;
    }
    public double unboundedToBounded(double)
    {
        org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$UpperBoundMapper r0;
        double $d0, $d1;

        r0 := @this: org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$UpperBoundMapper;

        $d0 := @parameter0: double;

        $d1 = r0.<org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$UpperBoundMapper: double upper>;

        $d0 = neg $d0;

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double exp(double)>($d0);

        $d0 = $d1 - $d0;

        return $d0;
    }
