org.apache.commons.math3.optimization.SimpleBounds extends java.lang.Object implements org.apache.commons.math3.optimization.OptimizationData
private final double[] lower
private final double[] upper
    public void <init>(double[], double[])
    {
        org.apache.commons.math3.optimization.SimpleBounds r0;
        double[] $r1, $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.math3.optimization.SimpleBounds;

        $r1 := @parameter0: double[];

        $r2 := @parameter1: double[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (double[]) $r3;

        r0.<org.apache.commons.math3.optimization.SimpleBounds: double[] lower> = $r1;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (double[]) $r3;

        r0.<org.apache.commons.math3.optimization.SimpleBounds: double[] upper> = $r1;

        return;
    }
    public double[] getLower()
    {
        org.apache.commons.math3.optimization.SimpleBounds r0;
        java.lang.Object $r1;
        double[] $r2;

        r0 := @this: org.apache.commons.math3.optimization.SimpleBounds;

        $r2 = r0.<org.apache.commons.math3.optimization.SimpleBounds: double[] lower>;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (double[]) $r1;

        return $r2;
    }
    public double[] getUpper()
    {
        org.apache.commons.math3.optimization.SimpleBounds r0;
        java.lang.Object $r1;
        double[] $r2;

        r0 := @this: org.apache.commons.math3.optimization.SimpleBounds;

        $r2 = r0.<org.apache.commons.math3.optimization.SimpleBounds: double[] upper>;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (double[]) $r1;

        return $r2;
    }
