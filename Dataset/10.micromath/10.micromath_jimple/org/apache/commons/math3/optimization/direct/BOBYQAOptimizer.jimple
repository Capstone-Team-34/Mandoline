org.apache.commons.math3.optimization.direct.BOBYQAOptimizer extends org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer implements org.apache.commons.math3.optimization.MultivariateOptimizer
public static final double DEFAULT_INITIAL_RADIUS
public static final double DEFAULT_STOPPING_RADIUS
private static final double HALF
public static final int MINIMUM_PROBLEM_DIMENSION
private static final double MINUS_ONE
private static final double ONE
private static final double ONE_OVER_A_THOUSAND
private static final double ONE_OVER_EIGHT
private static final double ONE_OVER_FOUR
private static final double ONE_OVER_TEN
private static final double SIXTEEN
private static final double TEN
private static final double TWO
private static final double TWO_HUNDRED_FIFTY
private static final double ZERO
private org.apache.commons.math3.linear.ArrayRealVector alternativeNewPoint
private org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix
private double[] boundDifference
private org.apache.commons.math3.linear.ArrayRealVector currentBest
private org.apache.commons.math3.linear.ArrayRealVector fAtInterpolationPoints
private org.apache.commons.math3.linear.ArrayRealVector gradientAtTrustRegionCenter
private double initialTrustRegionRadius
private org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints
private boolean isMinimize
private org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint
private org.apache.commons.math3.linear.ArrayRealVector lowerDifference
private org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesParameters
private org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesValues
private org.apache.commons.math3.linear.ArrayRealVector newPoint
private final int numberOfInterpolationPoints
private org.apache.commons.math3.linear.ArrayRealVector originShift
private final double stoppingTrustRegionRadius
private org.apache.commons.math3.linear.ArrayRealVector trialStepPoint
private int trustRegionCenterInterpolationPointIndex
private org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset
private org.apache.commons.math3.linear.ArrayRealVector upperDifference
private org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix
    public void <init>(int)
    {
        org.apache.commons.math3.optimization.direct.BOBYQAOptimizer r0;
        int $i0;

        r0 := @this: org.apache.commons.math3.optimization.direct.BOBYQAOptimizer;

        $i0 := @parameter0: int;

        specialinvoke r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: void <init>(int,double,double)>($i0, 10.0, 1.0E-8);

        return;
    }
    public void <init>(int, double, double)
    {
        org.apache.commons.math3.optimization.direct.BOBYQAOptimizer r0;
        int $i0;
        double $d0, $d1;

        r0 := @this: org.apache.commons.math3.optimization.direct.BOBYQAOptimizer;

        $i0 := @parameter0: int;

        $d0 := @parameter1: double;

        $d1 := @parameter2: double;

        specialinvoke r0.<org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer: void <init>(org.apache.commons.math3.optimization.ConvergenceChecker)>(null);

        r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int numberOfInterpolationPoints> = $i0;

        r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double initialTrustRegionRadius> = $d0;

        r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double stoppingTrustRegionRadius> = $d1;

        return;
    }
    static java.lang.String access$000(int)
    {
        int $i0;
        java.lang.String $r0;

        $i0 := @parameter0: int;

        $r0 = staticinvoke <org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: java.lang.String caller(int)>($i0);

        return $r0;
    }
    private double[] altmov(int, double)
    {
        org.apache.commons.math3.optimization.direct.BOBYQAOptimizer r0;
        int $i0, i1, $i2, $i3, i4, i5, $i6, i7, i8;
        double $d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14;
        org.apache.commons.math3.linear.ArrayRealVector r1, r2, r3, r4, $r6, $r7;
        org.apache.commons.math3.linear.Array2DRowRealMatrix $r5;
        byte $b9;
        boolean z0;
        double[] $r8;

        r0 := @this: org.apache.commons.math3.optimization.direct.BOBYQAOptimizer;

        $i0 := @parameter0: int;

        $d0 := @parameter1: double;

        staticinvoke <org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: void printMethod()>();

        r1 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector currentBest>;

        $i2 = virtualinvoke r1.<org.apache.commons.math3.linear.ArrayRealVector: int getDimension()>();

        $i3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int numberOfInterpolationPoints>;

        r2 = new org.apache.commons.math3.linear.ArrayRealVector;

        r1 = r2;

        specialinvoke r2.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>($i2);

        r3 = new org.apache.commons.math3.linear.ArrayRealVector;

        r2 = r3;

        specialinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>($i3);

        r4 = new org.apache.commons.math3.linear.ArrayRealVector;

        r3 = r4;

        specialinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>($i2);

        $r6 = new org.apache.commons.math3.linear.ArrayRealVector;

        r4 = $r6;

        specialinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>($i2);

        i4 = 0;

     label01:
        if i4 >= $i3 goto label02;

        virtualinvoke r2.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i4, 0.0);

        i4 = i4 + 1;

        goto label01;

     label02:
        i4 = 0;

        i1 = $i3 - $i2;

        i1 = i1 + -1;

     label03:
        if i4 >= i1 goto label06;

        $r5 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        $d7 = virtualinvoke $r5.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>($i0, i4);

        i5 = 0;

     label04:
        if i5 >= $i3 goto label05;

        $d8 = virtualinvoke r2.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i5);

        $r5 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        d1 = virtualinvoke $r5.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i5, i4);

        d1 = d1 * $d7;

        $d8 = $d8 + d1;

        virtualinvoke r2.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i5, $d8);

        i5 = i5 + 1;

        goto label04;

     label05:
        i4 = i4 + 1;

        goto label03;

     label06:
        $d7 = virtualinvoke r2.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        d1 = 0.5 * $d7;

        i4 = 0;

     label07:
        if i4 >= $i2 goto label08;

        $r5 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix>;

        $d8 = virtualinvoke $r5.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>($i0, i4);

        virtualinvoke r1.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i4, $d8);

        i4 = i4 + 1;

        goto label07;

     label08:
        i4 = 0;

     label09:
        if i4 >= $i3 goto label14;

        $d8 = 0.0;

        i1 = 0;

     label10:
        if i1 >= $i2 goto label11;

        $r5 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        $d9 = virtualinvoke $r5.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i4, i1);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        $d10 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        $d9 = $d9 * $d10;

        $d8 = $d8 + $d9;

        i1 = i1 + 1;

        goto label10;

     label11:
        $d9 = virtualinvoke r2.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i4);

        $d8 = $d8 * $d9;

        i1 = 0;

     label12:
        if i1 >= $i2 goto label13;

        $d9 = virtualinvoke r1.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        $r5 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        $d10 = virtualinvoke $r5.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i4, i1);

        $d10 = $d10 * $d8;

        $d9 = $d9 + $d10;

        virtualinvoke r1.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, $d9);

        i1 = i1 + 1;

        goto label12;

     label13:
        i4 = i4 + 1;

        goto label09;

     label14:
        $d10 = 0.0;

        $d8 = #NaN;

        i1 = 0;

        i4 = 0;

        $d9 = 0.0;

        i5 = 0;

     label15:
        if i5 >= $i3 goto label31;

        $i6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int trustRegionCenterInterpolationPointIndex>;

        if i5 != $i6 goto label17;

     label16:
        i5 = i5 + 1;

        goto label15;

     label17:
        d2 = 0.0;

        d6 = 0.0;

        $i6 = 0;

     label18:
        if $i6 >= $i2 goto label19;

        $r5 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        $d8 = virtualinvoke $r5.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i5, $i6);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d4 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i6);

        $d8 = $d8 - d4;

        d4 = virtualinvoke r1.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i6);

        d4 = d4 * $d8;

        d2 = d2 + d4;

        $d8 = $d8 * $d8;

        d6 = d6 + $d8;

        $i6 = $i6 + 1;

        goto label18;

     label19:
        $d8 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(d6);

        d4 = $d0 / $d8;

        d3 = neg d4;

        i7 = 0;

        $i6 = 0;

        $d8 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>(1.0, d4);

        i8 = 0;

     label20:
        if i8 >= $i2 goto label25;

        $r5 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        $d11 = virtualinvoke $r5.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i5, i8);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d5 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i8);

        $d11 = $d11 - d5;

        $b9 = $d11 cmpl 0.0;

        if $b9 <= 0 goto label23;

        d5 = d3 * $d11;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        $d12 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i8);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        $d13 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i8);

        $d12 = $d12 - $d13;

        $b9 = d5 cmpg $d12;

        if $b9 >= 0 goto label21;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        d3 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i8);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d5 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i8);

        d3 = d3 - d5;

        d3 = d3 / $d11;

        i7 = neg i8;

        i7 = i7 + -1;

     label21:
        d5 = d4 * $d11;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        $d12 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i8);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        $d13 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i8);

        $d12 = $d12 - $d13;

        $b9 = d5 cmpl $d12;

        if $b9 <= 0 goto label22;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        d4 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i8);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d5 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i8);

        d4 = d4 - d5;

        d4 = d4 / $d11;

        d4 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d8, d4);

        $i6 = i8 + 1;

     label22:
        i8 = i8 + 1;

        goto label20;

     label23:
        $b9 = $d11 cmpg 0.0;

        if $b9 >= 0 goto label22;

        d5 = d3 * $d11;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        $d12 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i8);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        $d13 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i8);

        $d12 = $d12 - $d13;

        $b9 = d5 cmpl $d12;

        if $b9 <= 0 goto label24;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        d3 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i8);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d5 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i8);

        d3 = d3 - d5;

        d3 = d3 / $d11;

        i7 = i8 + 1;

     label24:
        d5 = d4 * $d11;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        $d12 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i8);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        $d13 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i8);

        $d12 = $d12 - $d13;

        $b9 = d5 cmpg $d12;

        if $b9 >= 0 goto label22;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        d4 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i8);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d5 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i8);

        d4 = d4 - d5;

        d4 = d4 / $d11;

        d4 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d8, d4);

        $i6 = neg i8;

        $i6 = $i6 + -1;

        goto label22;

     label25:
        $d8 = d3;

        i8 = i7;

        if i5 != $i0 goto label28;

        d5 = d2 - 1.0;

        $d11 = d3 * d5;

        $d11 = d2 - $d11;

        $d11 = d3 * $d11;

        $d12 = d4 * d5;

        $d12 = d2 - $d12;

        $d12 = d4 * $d12;

        $d13 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d12);

        $d14 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d11);

        $b9 = $d13 cmpl $d14;

        if $b9 <= 0 goto label26;

        $d8 = d4;

        $d11 = $d12;

        i8 = $i6;

     label26:
        d2 = 0.5 * d2;

        d3 = d5 * d3;

        d3 = d2 - d3;

        d4 = d5 * d4;

        d4 = d2 - d4;

        d4 = d3 * d4;

        $b9 = d4 cmpg 0.0;

        if $b9 >= 0 goto label27;

        d4 = d2 * d2;

        d4 = d4 / d5;

        d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d4);

        $d12 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d11);

        $b9 = d3 cmpl $d12;

        if $b9 <= 0 goto label27;

        $d8 = d2 / d5;

        $d11 = d4;

        i8 = 0;

     label27:
        d2 = 1.0 - $d8;

        d2 = d2 * $d8;

        d2 = d2 * d6;

        d6 = $d11 * $d11;

        d4 = $d11 * $d11;

        d3 = d1 * d2;

        d2 = d3 * d2;

        d2 = d4 + d2;

        d6 = d6 * d2;

        $b9 = d6 cmpl $d10;

        if $b9 <= 0 goto label16;

        $d10 = d6;

        i1 = i5;

        $d9 = $d8;

        i4 = i8;

        goto label16;

     label28:
        $d11 = 1.0 - d3;

        d3 = d3 * $d11;

        $d11 = 1.0 - d4;

        $d11 = d4 * $d11;

        d5 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d11);

        $d12 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d3);

        $b9 = d5 cmpl $d12;

        if $b9 <= 0 goto label29;

        $d8 = d4;

        d3 = $d11;

        i8 = $i6;

     label29:
        $b9 = d4 cmpl 0.5;

        if $b9 <= 0 goto label30;

        d4 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d3);

        $b9 = d4 cmpg 0.25;

        if $b9 >= 0 goto label30;

        $d8 = 0.5;

        d3 = 0.25;

        i8 = 0;

     label30:
        $d11 = d3 * d2;

        goto label27;

     label31:
        $i0 = 0;

     label32:
        if $i0 >= $i2 goto label33;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d1 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        $r5 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        $d10 = virtualinvoke $r5.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i1, $i0);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d6 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        $d10 = $d10 - d6;

        $d10 = $d10 * $d9;

        $d10 = d1 + $d10;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector newPoint>;

        $r7 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        d1 = virtualinvoke $r7.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        $r7 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        d6 = virtualinvoke $r7.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        $d10 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>(d6, $d10);

        d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(d1, $d10);

        virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>($i0, d1);

        $i0 = $i0 + 1;

        goto label32;

     label33:
        if i4 >= 0 goto label34;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector newPoint>;

        $i0 = neg i4;

        $i0 = $i0 + -1;

        $r7 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        i1 = neg i4;

        i1 = i1 + -1;

        d1 = virtualinvoke $r7.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>($i0, d1);

     label34:
        if i4 <= 0 goto label35;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector newPoint>;

        $i0 = i4 + -1;

        $r7 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        i4 = i4 + -1;

        d1 = virtualinvoke $r7.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i4);

        virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>($i0, d1);

     label35:
        d1 = $d0 + $d0;

        z0 = 0;

        $d9 = 0.0;

     label36:
        $d10 = 0.0;

        $i0 = 0;

     label37:
        if $i0 >= $i2 goto label40;

        d6 = virtualinvoke r1.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>($i0, 0.0);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d2 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        d4 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        d2 = d2 - d4;

        d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>(d2, d6);

        $b9 = d2 cmpl 0.0;

        if $b9 > 0 goto label38;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d2 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        d4 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        d2 = d2 - d4;

        d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(d2, d6);

        $b9 = d2 cmpg 0.0;

        if $b9 >= 0 goto label39;

     label38:
        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>($i0, d1);

        d6 = d6 * d6;

        $d10 = $d10 + d6;

     label39:
        $i0 = $i0 + 1;

        goto label37;

     label40:
        $b9 = $d10 cmpl 0.0;

        if $b9 != 0 goto label41;

        $r8 = newarray (double)[2];

        $r8[0] = $d7;

        $d0 = (double) 0L;

        $r8[1] = $d0;

        return $r8;

     label41:
        d6 = $d0 * $d0;

        d6 = d6 - 0.0;

        $b9 = d6 cmpl 0.0;

        if $b9 <= 0 goto label46;

        $d8 = d6 / $d10;

        $d10 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>($d8);

        $d8 = $d10;

        $i0 = 0;

     label42:
        if $i0 >= $i2 goto label46;

        d6 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        $b9 = d6 cmpl d1;

        if $b9 != 0 goto label43;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d6 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        d2 = virtualinvoke r1.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        d2 = d2 * $d10;

        d6 = d6 - d2;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        d2 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        $b9 = d6 cmpg d2;

        if $b9 > 0 goto label44;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        d6 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d2 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        d6 = d6 - d2;

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>($i0, d6);

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

     label43:
        $i0 = $i0 + 1;

        goto label42;

     label44:
        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        d2 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        $b9 = d6 cmpl d2;

        if $b9 < 0 goto label45;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        d6 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d2 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        d6 = d6 - d2;

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>($i0, d6);

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        goto label43;

     label45:
        virtualinvoke r1.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        goto label43;

     label46:
        $d10 = 0.0;

        $i0 = 0;

     label47:
        if $i0 >= $i2 goto label52;

        d6 = virtualinvoke r1.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        d2 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        $b9 = d2 cmpl d1;

        if $b9 != 0 goto label49;

        d2 = neg $d8;

        d2 = d2 * d6;

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>($i0, d2);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        d2 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d4 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        d3 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        d4 = d4 + d3;

        d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>(d2, d4);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector alternativeNewPoint>;

        $r7 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        d4 = virtualinvoke $r7.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(d4, d2);

        virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>($i0, d2);

     label48:
        d2 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        d6 = d2 * d6;

        $d10 = $d10 + d6;

        $i0 = $i0 + 1;

        goto label47;

     label49:
        d2 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        $b9 = d2 cmpl 0.0;

        if $b9 != 0 goto label50;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector alternativeNewPoint>;

        $r7 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d2 = virtualinvoke $r7.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>($i0, d2);

        goto label48;

     label50:
        $b9 = d6 cmpl 0.0;

        if $b9 <= 0 goto label51;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector alternativeNewPoint>;

        $r7 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        d2 = virtualinvoke $r7.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>($i0, d2);

        goto label48;

     label51:
        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector alternativeNewPoint>;

        $r7 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        d2 = virtualinvoke $r7.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>($i0, d2);

        goto label48;

     label52:
        d6 = 0.0;

        $i0 = 0;

     label53:
        if $i0 >= $i3 goto label56;

        d2 = 0.0;

        i4 = 0;

     label54:
        if i4 >= $i2 goto label55;

        $r5 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        d4 = virtualinvoke $r5.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>($i0, i4);

        d3 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i4);

        d4 = d4 * d3;

        d2 = d2 + d4;

        i4 = i4 + 1;

        goto label54;

     label55:
        d4 = virtualinvoke r2.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        d4 = d4 * d2;

        d2 = d4 * d2;

        d6 = d6 + d2;

        $i0 = $i0 + 1;

        goto label53;

     label56:
        if z0 != 1 goto label57;

        d6 = neg d6;

     label57:
        d2 = neg $d10;

        $b9 = d6 cmpl d2;

        if $b9 <= 0 goto label62;

        d2 = neg $d10;

        d4 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(2.0);

        d4 = 1.0 + d4;

        d2 = d2 * d4;

        $b9 = d6 cmpg d2;

        if $b9 >= 0 goto label62;

        d2 = neg $d10;

        d6 = d2 / d6;

        $i0 = 0;

     label58:
        if $i0 >= $i2 goto label59;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d2 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        d4 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        d4 = d4 * d6;

        d4 = d2 + d4;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector alternativeNewPoint>;

        $r7 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        d2 = virtualinvoke $r7.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        $r7 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        d3 = virtualinvoke $r7.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        d4 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>(d3, d4);

        d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(d2, d4);

        virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>($i0, d2);

        $i0 = $i0 + 1;

        goto label58;

     label59:
        $d10 = 0.5 * $d10;

        $d10 = $d10 * d6;

        $d10 = $d10 * $d10;

     label60:
        if z0 != 0 goto label64;

        $i0 = 0;

     label61:
        if $i0 >= $i2 goto label63;

        $d9 = virtualinvoke r1.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        $d9 = neg $d9;

        virtualinvoke r1.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>($i0, $d9);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector alternativeNewPoint>;

        $d9 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>($i0, $d9);

        $i0 = $i0 + 1;

        goto label61;

     label62:
        d6 = 0.5 * d6;

        $d10 = $d10 + d6;

        $d10 = $d10 * $d10;

        goto label60;

     label63:
        $d9 = $d10;

        z0 = 1;

        goto label36;

     label64:
        $b9 = $d9 cmpl $d10;

        if $b9 <= 0 goto label67;

        $i0 = 0;

     label65:
        if $i0 >= $i2 goto label66;

        r1 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector alternativeNewPoint>;

        $d0 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        virtualinvoke r1.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>($i0, $d0);

        $i0 = $i0 + 1;

        goto label65;

     label66:
        $d10 = $d9;

     label67:
        $r8 = newarray (double)[2];

        $r8[0] = $d7;

        $r8[1] = $d10;

        return $r8;
    }
    private double bobyqa(double[], double[])
    {
        org.apache.commons.math3.optimization.direct.BOBYQAOptimizer r0;
        double[] $r1, $r2, $r4;
        double d0, d1, $d2;
        org.apache.commons.math3.linear.ArrayRealVector $r3, $r5;
        int $i0, i1;
        byte $b2;

        r0 := @this: org.apache.commons.math3.optimization.direct.BOBYQAOptimizer;

        $r1 := @parameter0: double[];

        $r2 := @parameter1: double[];

        staticinvoke <org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: void printMethod()>();

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector currentBest>;

        $i0 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: int getDimension()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label6;

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double[] boundDifference>;

        d0 = $r4[i1];

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        d1 = $r1[i1];

        $r5 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector currentBest>;

        $d2 = virtualinvoke $r5.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        d1 = d1 - $d2;

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d1);

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        d1 = $r2[i1];

        $r5 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector currentBest>;

        $d2 = virtualinvoke $r5.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        d1 = d1 - $d2;

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d1);

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        d1 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        $d2 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double initialTrustRegionRadius>;

        $d2 = neg $d2;

        $b2 = d1 cmpl $d2;

        if $b2 < 0 goto label4;

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        d1 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        $b2 = d1 cmpl 0.0;

        if $b2 < 0 goto label3;

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector currentBest>;

        d1 = $r1[i1];

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d1);

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, 0.0);

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d0);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector currentBest>;

        d0 = $r1[i1];

        d1 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double initialTrustRegionRadius>;

        d0 = d0 + d1;

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d0);

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        d0 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double initialTrustRegionRadius>;

        d0 = neg d0;

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d0);

        d0 = $r2[i1];

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector currentBest>;

        d1 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        d0 = d0 - d1;

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        d1 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double initialTrustRegionRadius>;

        d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(d0, d1);

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d0);

        goto label2;

     label4:
        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        d1 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        $d2 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double initialTrustRegionRadius>;

        $b2 = d1 cmpg $d2;

        if $b2 > 0 goto label2;

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        d1 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        $b2 = d1 cmpg 0.0;

        if $b2 > 0 goto label5;

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector currentBest>;

        d1 = $r2[i1];

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d1);

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        d0 = neg d0;

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d0);

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, 0.0);

        goto label2;

     label5:
        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector currentBest>;

        d0 = $r2[i1];

        d1 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double initialTrustRegionRadius>;

        d0 = d0 - d1;

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d0);

        d0 = $r1[i1];

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector currentBest>;

        d1 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        d0 = d0 - d1;

        d1 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double initialTrustRegionRadius>;

        d1 = neg d1;

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>(d0, d1);

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d0);

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        d0 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double initialTrustRegionRadius>;

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d0);

        goto label2;

     label6:
        d0 = specialinvoke r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double bobyqb(double[],double[])>($r1, $r2);

        return d0;
    }
    private double bobyqb(double[], double[])
    {
        org.apache.commons.math3.optimization.direct.BOBYQAOptimizer r0;
        double[] $r1, $r2, $r15;
        org.apache.commons.math3.linear.ArrayRealVector r3, r4, r5, r6, r7, r8, r9, r10;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, $d9, $d10, d11, d12, d13, d14, d15, d16, d17, d18, d19, d20, $d21, $d22, $d23, $d24, $d25, $d26;
        int i0, i1, i2, i3, $i4, $i5, i6, $i7, i8, $i9, i11, i13, $i14;
        org.apache.commons.math3.linear.Array2DRowRealMatrix $r11, $r16;
        short s10;
        org.apache.commons.math3.exception.MathIllegalStateException $r12;
        org.apache.commons.math3.exception.util.LocalizedFormats $r13;
        java.lang.Object[] $r14;
        byte $b12;
        boolean $z0;
        java.lang.Double $r17;

        r0 := @this: org.apache.commons.math3.optimization.direct.BOBYQAOptimizer;

        $r1 := @parameter0: double[];

        $r2 := @parameter1: double[];

        staticinvoke <org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: void printMethod()>();

        r8 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector currentBest>;

        $i4 = virtualinvoke r8.<org.apache.commons.math3.linear.ArrayRealVector: int getDimension()>();

        $i5 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int numberOfInterpolationPoints>;

        i2 = $i4 + 1;

        i3 = $i5 - i2;

        i2 = $i4 * i2;

        i2 = i2 / 2;

        r8 = new org.apache.commons.math3.linear.ArrayRealVector;

        specialinvoke r8.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>($i4);

        r9 = new org.apache.commons.math3.linear.ArrayRealVector;

        specialinvoke r9.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>($i5);

        r10 = new org.apache.commons.math3.linear.ArrayRealVector;

        specialinvoke r10.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>($i5);

        d5 = #NaN;

        d6 = #NaN;

        d7 = #NaN;

        r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int trustRegionCenterInterpolationPointIndex> = 0;

        specialinvoke r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: void prelim(double[],double[])>($r1, $r2);

        d8 = 0.0;

        i6 = 0;

     label001:
        if i6 >= $i4 goto label002;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        $i7 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int trustRegionCenterInterpolationPointIndex>;

        $d9 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>($i7, i6);

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i6, $d9);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        $d9 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i6);

        $d9 = $d9 * $d9;

        d8 = d8 + $d9;

        i6 = i6 + 1;

        goto label001;

     label002:
        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector fAtInterpolationPoints>;

        $d9 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(0);

        i6 = 0;

        i8 = 0;

        $i7 = 0;

        $i9 = virtualinvoke r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int getEvaluations()>();

        $d10 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double initialTrustRegionRadius>;

        d11 = $d10;

        d4 = $d10;

        d12 = 0.0;

        $d10 = 0.0;

        d13 = 0.0;

        d14 = 0.0;

        d15 = 0.0;

        d16 = 0.0;

        d17 = 0.0;

        d18 = 0.0;

        d19 = 0.0;

        d20 = 0.0;

        s10 = 20;

     label003:
        lookupswitch(s10)
        {
            case 20: goto label005;
            case 60: goto label016;
            case 90: goto label027;
            case 210: goto label060;
            case 230: goto label062;
            case 360: goto label090;
            case 650: goto label176;
            case 680: goto label186;
            case 720: goto label191;
            default: goto label004;
        };

     label004:
        $r12 = new org.apache.commons.math3.exception.MathIllegalStateException;

        $r13 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats SIMPLE_MESSAGE>;

        $r14 = newarray (java.lang.Object)[1];

        $r14[0] = "bobyqb";

        specialinvoke $r12.<org.apache.commons.math3.exception.MathIllegalStateException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r13, $r14);

        throw $r12;

     label005:
        staticinvoke <org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: void printState(int)>(20);

        i1 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int trustRegionCenterInterpolationPointIndex>;

        if i1 == 0 goto label016;

        i1 = 0;

        i0 = 0;

     label006:
        if i0 >= $i4 goto label010;

        i11 = 0;

     label007:
        if i11 > i0 goto label009;

        if i11 >= i0 goto label008;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector gradientAtTrustRegionCenter>;

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector gradientAtTrustRegionCenter>;

        d19 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesValues>;

        d7 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d0 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i11);

        d7 = d7 * d0;

        d19 = d19 + d7;

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i0, d19);

     label008:
        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector gradientAtTrustRegionCenter>;

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector gradientAtTrustRegionCenter>;

        d19 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i11);

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesValues>;

        d7 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d0 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        d7 = d7 * d0;

        d19 = d19 + d7;

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i11, d19);

        i1 = i1 + 1;

        i11 = i11 + 1;

        goto label007;

     label009:
        i0 = i0 + 1;

        goto label006;

     label010:
        i1 = virtualinvoke r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int getEvaluations()>();

        if i1 <= $i5 goto label016;

        i1 = 0;

     label011:
        if i1 >= $i5 goto label016;

        d19 = 0.0;

        i0 = 0;

     label012:
        if i0 >= $i4 goto label013;

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        d7 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i1, i0);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d0 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        d7 = d7 * d0;

        d19 = d19 + d7;

        i0 = i0 + 1;

        goto label012;

     label013:
        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesParameters>;

        d7 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        d19 = d19 * d7;

        i0 = 0;

     label014:
        if i0 >= $i4 goto label015;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector gradientAtTrustRegionCenter>;

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector gradientAtTrustRegionCenter>;

        d7 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        d0 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i1, i0);

        d0 = d0 * d19;

        d7 = d7 + d0;

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i0, d7);

        i0 = i0 + 1;

        goto label014;

     label015:
        i1 = i1 + 1;

        goto label011;

     label016:
        staticinvoke <org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: void printState(int)>(60);

        r3 = new org.apache.commons.math3.linear.ArrayRealVector;

        specialinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>($i4);

        r4 = new org.apache.commons.math3.linear.ArrayRealVector;

        specialinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>($i4);

        r5 = new org.apache.commons.math3.linear.ArrayRealVector;

        specialinvoke r5.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>($i4);

        r6 = new org.apache.commons.math3.linear.ArrayRealVector;

        specialinvoke r6.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>($i4);

        r7 = new org.apache.commons.math3.linear.ArrayRealVector;

        specialinvoke r7.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>($i4);

        $r15 = specialinvoke r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double[] trsbox(double,org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector)>(d4, r3, r4, r5, r6, r7);

        d7 = $r15[0];

        d0 = $r15[1];

        d19 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(d7);

        d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>(d4, d19);

        d19 = d3;

        d2 = 0.5 * d11;

        $b12 = d3 cmpg d2;

        if $b12 >= 0 goto label026;

        i6 = -1;

        d20 = 10.0 * d11;

        d20 = d20 * d20;

        i1 = virtualinvoke r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int getEvaluations()>();

        i0 = $i9 + 2;

        if i1 > i0 goto label017;

        s10 = 650;

        goto label003;

     label017:
        d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(d12, $d10);

        d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(d3, d13);

        d2 = 0.125 * d11;

        d2 = d2 * d11;

        $b12 = d0 cmpl 0.0;

        if $b12 <= 0 goto label018;

        d0 = d2 * d0;

        $b12 = d3 cmpl d0;

        if $b12 <= 0 goto label018;

        s10 = 650;

        goto label003;

     label018:
        d0 = d3 / d11;

        i1 = 0;

     label019:
        if i1 >= $i4 goto label024;

        d3 = d0;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector newPoint>;

        d2 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        d1 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        $b12 = d2 cmpl d1;

        if $b12 != 0 goto label020;

        d3 = virtualinvoke r8.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

     label020:
        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector newPoint>;

        d2 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        d1 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        $b12 = d2 cmpl d1;

        if $b12 != 0 goto label021;

        d3 = virtualinvoke r8.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        d3 = neg d3;

     label021:
        $b12 = d3 cmpg d0;

        if $b12 >= 0 goto label025;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesValues>;

        i0 = i1 * i1;

        i0 = i0 + i1;

        i0 = i0 / 2;

        d2 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        i0 = 0;

     label022:
        if i0 >= $i5 goto label023;

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        $d21 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i0, i1);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesParameters>;

        d1 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        $d21 = $d21 * $d21;

        d1 = d1 * $d21;

        d2 = d2 + d1;

        i0 = i0 + 1;

        goto label022;

     label023:
        d2 = 0.5 * d2;

        d2 = d2 * d11;

        d3 = d3 + d2;

        $b12 = d3 cmpg d0;

        if $b12 >= 0 goto label025;

     label024:
        s10 = 680;

        goto label003;

     label025:
        i1 = i1 + 1;

        goto label019;

     label026:
        i6 = i6 + 1;

     label027:
        staticinvoke <org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: void printState(int)>(90);

        d0 = 0.001 * d8;

        $b12 = d7 cmpg d0;

        if $b12 > 0 goto label058;

        d3 = d8 * 0.25;

        d0 = 0.0;

        i1 = 0;

     label028:
        if i1 >= $i5 goto label035;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesParameters>;

        d2 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        d0 = d0 + d2;

        d2 = -0.5 * d8;

        i0 = 0;

     label029:
        if i0 >= $i4 goto label030;

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        d1 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i1, i0);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        $d21 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        d1 = d1 * $d21;

        d2 = d2 + d1;

        i0 = i0 + 1;

        goto label029;

     label030:
        virtualinvoke r9.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d2);

        d1 = 0.5 * d2;

        d1 = d3 - d1;

        i0 = 0;

     label031:
        if i0 >= $i4 goto label034;

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix>;

        $d21 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i1, i0);

        virtualinvoke r8.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i0, $d21);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint>;

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        $d21 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i1, i0);

        $d21 = $d21 * d2;

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        $d22 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        $d22 = $d22 * d1;

        $d21 = $d21 + $d22;

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i0, $d21);

        i11 = $i5 + i0;

        i13 = 0;

     label032:
        if i13 > i0 goto label033;

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix>;

        $r16 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix>;

        $d21 = virtualinvoke $r16.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i11, i13);

        $d22 = virtualinvoke r8.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint>;

        $d23 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i13);

        $d22 = $d22 * $d23;

        $d21 = $d21 + $d22;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint>;

        $d22 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        $d23 = virtualinvoke r8.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i13);

        $d22 = $d22 * $d23;

        $d21 = $d21 + $d22;

        virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>(i11, i13, $d21);

        i13 = i13 + 1;

        goto label032;

     label033:
        i0 = i0 + 1;

        goto label031;

     label034:
        i1 = i1 + 1;

        goto label028;

     label035:
        i1 = 0;

     label036:
        if i1 >= i3 goto label049;

        d8 = 0.0;

        d2 = 0.0;

        i0 = 0;

     label037:
        if i0 >= $i5 goto label038;

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        d1 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i0, i1);

        d8 = d8 + d1;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint>;

        d1 = virtualinvoke r9.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        $d21 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i0, i1);

        d1 = d1 * $d21;

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i0, d1);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint>;

        d1 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        d2 = d2 + d1;

        i0 = i0 + 1;

        goto label037;

     label038:
        i0 = 0;

     label039:
        if i0 >= $i4 goto label044;

        d1 = d3 * d8;

        $d21 = 0.5 * d2;

        d1 = d1 - $d21;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        $d21 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        d1 = d1 * $d21;

        i11 = 0;

     label040:
        if i11 >= $i5 goto label041;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint>;

        $d21 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i11);

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        $d22 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i11, i0);

        $d21 = $d21 * $d22;

        d1 = d1 + $d21;

        i11 = i11 + 1;

        goto label040;

     label041:
        virtualinvoke r8.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i0, d1);

        i11 = 0;

     label042:
        if i11 >= $i5 goto label043;

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix>;

        $r16 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix>;

        $d21 = virtualinvoke $r16.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i11, i0);

        $r16 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        $d22 = virtualinvoke $r16.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i11, i1);

        $d22 = $d22 * d1;

        $d21 = $d21 + $d22;

        virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>(i11, i0, $d21);

        i11 = i11 + 1;

        goto label042;

     label043:
        i0 = i0 + 1;

        goto label039;

     label044:
        i0 = 0;

     label045:
        if i0 >= $i4 goto label048;

        i11 = i0 + $i5;

        d8 = virtualinvoke r8.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        i13 = 0;

     label046:
        if i13 > i0 goto label047;

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix>;

        $r16 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix>;

        d2 = virtualinvoke $r16.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i11, i13);

        d1 = virtualinvoke r8.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i13);

        d1 = d1 * d8;

        d2 = d2 + d1;

        virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>(i11, i13, d2);

        i13 = i13 + 1;

        goto label046;

     label047:
        i0 = i0 + 1;

        goto label045;

     label048:
        i1 = i1 + 1;

        goto label036;

     label049:
        i1 = 0;

        i0 = 0;

     label050:
        if i0 >= $i4 goto label055;

        d8 = -0.5 * d0;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d3 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        d8 = d8 * d3;

        virtualinvoke r8.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i0, d8);

        i11 = 0;

     label051:
        if i11 >= $i5 goto label052;

        d8 = virtualinvoke r8.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesParameters>;

        d3 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i11);

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        d2 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i11, i0);

        d3 = d3 * d2;

        d8 = d8 + d3;

        virtualinvoke r8.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i0, d8);

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        $r16 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        d8 = virtualinvoke $r16.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i11, i0);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d3 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        d8 = d8 - d3;

        virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>(i11, i0, d8);

        i11 = i11 + 1;

        goto label051;

     label052:
        i11 = 0;

     label053:
        if i11 > i0 goto label054;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesValues>;

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesValues>;

        d8 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        d3 = virtualinvoke r8.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i11);

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d2 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        d3 = d3 * d2;

        d8 = d8 + d3;

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d3 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i11);

        d2 = virtualinvoke r8.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        d3 = d3 * d2;

        d8 = d8 + d3;

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d8);

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix>;

        i13 = $i5 + i11;

        $r16 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix>;

        $i14 = $i5 + i0;

        d8 = virtualinvoke $r16.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>($i14, i11);

        virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>(i13, i0, d8);

        i1 = i1 + 1;

        i11 = i11 + 1;

        goto label053;

     label054:
        i0 = i0 + 1;

        goto label050;

     label055:
        i1 = 0;

     label056:
        if i1 >= $i4 goto label057;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector originShift>;

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector originShift>;

        d8 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d0 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        d8 = d8 + d0;

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d8);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector newPoint>;

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector newPoint>;

        d8 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d0 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        d8 = d8 - d0;

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d8);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        d8 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d0 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        d8 = d8 - d0;

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d8);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        d8 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d0 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        d8 = d8 - d0;

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d8);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, 0.0);

        i1 = i1 + 1;

        goto label056;

     label057:
        d8 = 0.0;

     label058:
        if i6 != 0 goto label059;

        s10 = 210;

        goto label003;

     label059:
        s10 = 230;

        goto label003;

     label060:
        staticinvoke <org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: void printState(int)>(210);

        $r15 = specialinvoke r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double[] altmov(int,double)>($i7, d16);

        d6 = $r15[0];

        d5 = $r15[1];

        i1 = 0;

     label061:
        if i1 >= $i4 goto label062;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector newPoint>;

        d7 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d15 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        d7 = d7 - d15;

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d7);

        i1 = i1 + 1;

        goto label061;

     label062:
        staticinvoke <org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: void printState(int)>(230);

        i1 = 0;

     label063:
        if i1 >= $i5 goto label066;

        d7 = 0.0;

        d0 = 0.0;

        d15 = 0.0;

        i0 = 0;

     label064:
        if i0 >= $i4 goto label065;

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        d3 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i1, i0);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        d2 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        d3 = d3 * d2;

        d7 = d7 + d3;

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        d3 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i1, i0);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d2 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        d3 = d3 * d2;

        d0 = d0 + d3;

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix>;

        d3 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i1, i0);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        d2 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        d3 = d3 * d2;

        d15 = d15 + d3;

        i0 = i0 + 1;

        goto label064;

     label065:
        d3 = 0.5 * d7;

        d0 = d3 + d0;

        d0 = d0 * d7;

        virtualinvoke r10.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d0);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint>;

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d15);

        virtualinvoke r9.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d7);

        i1 = i1 + 1;

        goto label063;

     label066:
        d15 = 0.0;

        i1 = 0;

     label067:
        if i1 >= i3 goto label072;

        d7 = 0.0;

        i0 = 0;

     label068:
        if i0 >= $i5 goto label069;

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        d0 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i0, i1);

        d3 = virtualinvoke r10.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        d0 = d0 * d3;

        d7 = d7 + d0;

        i0 = i0 + 1;

        goto label068;

     label069:
        d0 = d7 * d7;

        d15 = d15 - d0;

        i0 = 0;

     label070:
        if i0 >= $i5 goto label071;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint>;

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint>;

        d0 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        d3 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i0, i1);

        d3 = d3 * d7;

        d0 = d0 + d3;

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i0, d0);

        i0 = i0 + 1;

        goto label070;

     label071:
        i1 = i1 + 1;

        goto label067;

     label072:
        d7 = 0.0;

        d0 = 0.0;

        d3 = 0.0;

        i1 = 0;

     label073:
        if i1 >= $i4 goto label078;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        d2 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        d2 = d2 * d2;

        d7 = d7 + d2;

        d2 = 0.0;

        i0 = 0;

     label074:
        if i0 >= $i5 goto label075;

        d1 = virtualinvoke r10.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix>;

        $d21 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i0, i1);

        d1 = d1 * $d21;

        d2 = d2 + d1;

        i0 = i0 + 1;

        goto label074;

     label075:
        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        d1 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        d1 = d1 * d2;

        d0 = d0 + d1;

        i0 = $i5 + i1;

        i11 = 0;

     label076:
        if i11 >= $i4 goto label077;

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix>;

        d1 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i0, i11);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        $d21 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i11);

        d1 = d1 * $d21;

        d2 = d2 + d1;

        i11 = i11 + 1;

        goto label076;

     label077:
        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint>;

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i0, d2);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        d1 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        d2 = d1 * d2;

        d0 = d0 + d2;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        d2 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d1 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        d2 = d2 * d1;

        d3 = d3 + d2;

        i1 = i1 + 1;

        goto label073;

     label078:
        d2 = d3 * d3;

        d1 = d8 + d3;

        d3 = d1 + d3;

        d1 = 0.5 * d7;

        d3 = d3 + d1;

        d3 = d3 * d7;

        d3 = d2 + d3;

        d15 = d3 + d15;

        d15 = d15 - d0;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint>;

        i1 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int trustRegionCenterInterpolationPointIndex>;

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint>;

        i0 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int trustRegionCenterInterpolationPointIndex>;

        d0 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        d0 = d0 + 1.0;

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d0);

        if i6 != 0 goto label081;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint>;

        d17 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i7);

        d17 = d17 * d17;

        d0 = d6 * d15;

        d17 = d17 + d0;

        $b12 = d17 cmpg d5;

        if $b12 >= 0 goto label090;

        $b12 = d5 cmpl 0.0;

        if $b12 <= 0 goto label090;

        i1 = 0;

     label079:
        if i1 >= $i4 goto label080;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector newPoint>;

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector alternativeNewPoint>;

        d5 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d5);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector newPoint>;

        d5 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d0 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        d5 = d5 - d0;

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d5);

        i1 = i1 + 1;

        goto label079;

     label080:
        d5 = 0.0;

        s10 = 230;

        goto label003;

     label081:
        d14 = d4 * d4;

        d0 = 0.0;

        d3 = 0.0;

        $i7 = 0;

        i1 = 0;

     label082:
        if i1 >= $i5 goto label090;

        i0 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int trustRegionCenterInterpolationPointIndex>;

        if i1 != i0 goto label084;

     label083:
        i1 = i1 + 1;

        goto label082;

     label084:
        d20 = 0.0;

        i0 = 0;

     label085:
        if i0 >= i3 goto label086;

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        d2 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i1, i0);

        d2 = d2 * d2;

        d20 = d20 + d2;

        i0 = i0 + 1;

        goto label085;

     label086:
        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint>;

        d2 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        d20 = d15 * d20;

        d2 = d2 * d2;

        d2 = d20 + d2;

        d20 = 0.0;

        i0 = 0;

     label087:
        if i0 >= $i4 goto label088;

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        d1 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i1, i0);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        $d21 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        d1 = d1 - $d21;

        d1 = d1 * d1;

        d20 = d20 + d1;

        i0 = i0 + 1;

        goto label087;

     label088:
        d1 = d20 / d14;

        d1 = d1 * d1;

        d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(1.0, d1);

        $d21 = d1 * d2;

        $b12 = $d21 cmpl d0;

        if $b12 <= 0 goto label089;

        d0 = d1 * d2;

        $i7 = i1;

        d17 = d2;

     label089:
        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint>;

        d2 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        d2 = d2 * d2;

        d2 = d2 * d1;

        d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(d3, d2);

        goto label083;

     label090:
        staticinvoke <org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: void printState(int)>(360);

        i1 = 0;

     label091:
        if i1 >= $i4 goto label094;

        d14 = $r1[i1];

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector originShift>;

        d0 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector newPoint>;

        d3 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        d0 = d0 + d3;

        d14 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(d14, d0);

        d0 = $r2[i1];

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector currentBest>;

        d14 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>(d14, d0);

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d14);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector newPoint>;

        d14 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        d0 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        $b12 = d14 cmpl d0;

        if $b12 != 0 goto label092;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector currentBest>;

        d14 = $r1[i1];

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d14);

     label092:
        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector newPoint>;

        d14 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        d0 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        $b12 = d14 cmpl d0;

        if $b12 != 0 goto label093;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector currentBest>;

        d14 = $r2[i1];

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d14);

     label093:
        i1 = i1 + 1;

        goto label091;

     label094:
        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector currentBest>;

        $r15 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double[] toArray()>();

        d0 = virtualinvoke r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double computeObjectiveValue(double[])>($r15);

        d14 = d0;

        $z0 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: boolean isMinimize>;

        if $z0 != 0 goto label095;

        d14 = neg d0;

     label095:
        if i6 != -1 goto label096;

        $d9 = d14;

        s10 = 720;

        goto label003;

     label096:
        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector fAtInterpolationPoints>;

        i1 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int trustRegionCenterInterpolationPointIndex>;

        d0 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        d3 = 0.0;

        i1 = 0;

        i0 = 0;

     label097:
        if i0 >= $i4 goto label101;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        d13 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector gradientAtTrustRegionCenter>;

        d2 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        d13 = d13 * d2;

        d3 = d3 + d13;

        i11 = 0;

     label098:
        if i11 > i0 goto label100;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        d13 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i11);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        d2 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        d13 = d13 * d2;

        if i11 != i0 goto label099;

        d13 = d13 * 0.5;

     label099:
        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesValues>;

        d2 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        d13 = d2 * d13;

        d3 = d3 + d13;

        i1 = i1 + 1;

        i11 = i11 + 1;

        goto label098;

     label100:
        i0 = i0 + 1;

        goto label097;

     label101:
        i1 = 0;

     label102:
        if i1 >= $i5 goto label103;

        d13 = virtualinvoke r9.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        d13 = d13 * d13;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesParameters>;

        d2 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        d2 = 0.5 * d2;

        d13 = d2 * d13;

        d3 = d3 + d13;

        i1 = i1 + 1;

        goto label102;

     label103:
        d13 = d14 - d0;

        d2 = d13 - d3;

        d13 = $d10;

        $d10 = d12;

        d12 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d2);

        $b12 = d19 cmpl d11;

        if $b12 <= 0 goto label104;

        $i9 = virtualinvoke r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int getEvaluations()>();

     label104:
        if i6 <= 0 goto label117;

        $b12 = d3 cmpl 0.0;

        if $b12 < 0 goto label105;

        $r12 = new org.apache.commons.math3.exception.MathIllegalStateException;

        $r13 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats TRUST_REGION_STEP_FAILED>;

        $r14 = newarray (java.lang.Object)[1];

        $r17 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r14[0] = $r17;

        specialinvoke $r12.<org.apache.commons.math3.exception.MathIllegalStateException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r13, $r14);

        throw $r12;

     label105:
        d18 = d14 - d0;

        d18 = d18 / d3;

        d4 = 0.5 * d4;

        $b12 = d18 cmpg 0.1;

        if $b12 > 0 goto label110;

        d4 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>(d4, d19);

     label106:
        d1 = 1.5 * d11;

        $b12 = d4 cmpg d1;

        if $b12 > 0 goto label107;

        d4 = d11;

     label107:
        $b12 = d14 cmpg d0;

        if $b12 >= 0 goto label117;

        i1 = $i7;

        d1 = d17;

        $d22 = d4 * d4;

        $d21 = 0.0;

        $d23 = 0.0;

        $i7 = 0;

        i0 = 0;

     label108:
        if i0 >= $i5 goto label116;

        d20 = 0.0;

        i11 = 0;

     label109:
        if i11 >= i3 goto label112;

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        $d24 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i0, i11);

        $d24 = $d24 * $d24;

        d20 = d20 + $d24;

        i11 = i11 + 1;

        goto label109;

     label110:
        $b12 = d18 cmpg 0.7;

        if $b12 > 0 goto label111;

        d4 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(d4, d19);

        goto label106;

     label111:
        d1 = 2.0 * d19;

        d4 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(d4, d1);

        goto label106;

     label112:
        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint>;

        $d24 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        d20 = d15 * d20;

        $d24 = $d24 * $d24;

        $d24 = d20 + $d24;

        d20 = 0.0;

        i11 = 0;

     label113:
        if i11 >= $i4 goto label114;

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        $d25 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i0, i11);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector newPoint>;

        $d26 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i11);

        $d25 = $d25 - $d26;

        $d25 = $d25 * $d25;

        d20 = d20 + $d25;

        i11 = i11 + 1;

        goto label113;

     label114:
        $d25 = d20 / $d22;

        $d25 = $d25 * $d25;

        $d25 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(1.0, $d25);

        $d26 = $d25 * $d24;

        $b12 = $d26 cmpl $d21;

        if $b12 <= 0 goto label115;

        $d21 = $d25 * $d24;

        $i7 = i0;

        d17 = $d24;

     label115:
        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint>;

        $d24 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        $d24 = $d24 * $d24;

        $d24 = $d25 * $d24;

        $d23 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d23, $d24);

        i0 = i0 + 1;

        goto label108;

     label116:
        $d22 = 0.5 * $d23;

        $b12 = $d21 cmpg $d22;

        if $b12 > 0 goto label117;

        $i7 = i1;

        d17 = d1;

     label117:
        specialinvoke r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: void update(double,double,int)>(d15, d17, $i7);

        i1 = 0;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesParameters>;

        d1 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i7);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesParameters>;

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>($i7, 0.0);

        i0 = 0;

     label118:
        if i0 >= $i4 goto label121;

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        $d21 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>($i7, i0);

        $d21 = d1 * $d21;

        i11 = 0;

     label119:
        if i11 > i0 goto label120;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesValues>;

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesValues>;

        $d22 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        $d23 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>($i7, i11);

        $d23 = $d23 * $d21;

        $d22 = $d22 + $d23;

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, $d22);

        i1 = i1 + 1;

        i11 = i11 + 1;

        goto label119;

     label120:
        i0 = i0 + 1;

        goto label118;

     label121:
        i1 = 0;

     label122:
        if i1 >= i3 goto label125;

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        d1 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>($i7, i1);

        d1 = d2 * d1;

        i0 = 0;

     label123:
        if i0 >= $i5 goto label124;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesParameters>;

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesParameters>;

        $d21 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        $d22 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i0, i1);

        $d22 = $d22 * d1;

        $d21 = $d21 + $d22;

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i0, $d21);

        i0 = i0 + 1;

        goto label123;

     label124:
        i1 = i1 + 1;

        goto label122;

     label125:
        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector fAtInterpolationPoints>;

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>($i7, d14);

        i1 = 0;

     label126:
        if i1 >= $i4 goto label127;

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector newPoint>;

        d1 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>($i7, i1, d1);

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix>;

        d1 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>($i7, i1);

        virtualinvoke r8.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d1);

        i1 = i1 + 1;

        goto label126;

     label127:
        i1 = 0;

     label128:
        if i1 >= $i5 goto label135;

        d1 = 0.0;

        i0 = 0;

     label129:
        if i0 >= i3 goto label130;

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        $d21 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>($i7, i0);

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        $d22 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i1, i0);

        $d21 = $d21 * $d22;

        d1 = d1 + $d21;

        i0 = i0 + 1;

        goto label129;

     label130:
        $d21 = 0.0;

        i0 = 0;

     label131:
        if i0 >= $i4 goto label132;

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        $d22 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i1, i0);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        $d23 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        $d22 = $d22 * $d23;

        $d21 = $d21 + $d22;

        i0 = i0 + 1;

        goto label131;

     label132:
        d1 = d1 * $d21;

        i0 = 0;

     label133:
        if i0 >= $i4 goto label134;

        $d21 = virtualinvoke r8.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        $d22 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i1, i0);

        $d22 = $d22 * d1;

        $d21 = $d21 + $d22;

        virtualinvoke r8.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i0, $d21);

        i0 = i0 + 1;

        goto label133;

     label134:
        i1 = i1 + 1;

        goto label128;

     label135:
        i1 = 0;

     label136:
        if i1 >= $i4 goto label137;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector gradientAtTrustRegionCenter>;

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector gradientAtTrustRegionCenter>;

        d1 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        $d21 = virtualinvoke r8.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        $d21 = $d21 * d2;

        d1 = d1 + $d21;

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d1);

        i1 = i1 + 1;

        goto label136;

     label137:
        $b12 = d14 cmpg d0;

        if $b12 >= 0 goto label148;

        r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int trustRegionCenterInterpolationPointIndex> = $i7;

        d8 = 0.0;

        i1 = 0;

        i0 = 0;

     label138:
        if i0 >= $i4 goto label142;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector newPoint>;

        d2 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i0, d2);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d2 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        d2 = d2 * d2;

        d8 = d8 + d2;

        i11 = 0;

     label139:
        if i11 > i0 goto label141;

        if i11 >= i0 goto label140;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector gradientAtTrustRegionCenter>;

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector gradientAtTrustRegionCenter>;

        d2 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesValues>;

        d1 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        $d21 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i11);

        d1 = d1 * $d21;

        d2 = d2 + d1;

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i0, d2);

     label140:
        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector gradientAtTrustRegionCenter>;

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector gradientAtTrustRegionCenter>;

        d2 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i11);

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesValues>;

        d1 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        $d21 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        d1 = d1 * $d21;

        d2 = d2 + d1;

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i11, d2);

        i1 = i1 + 1;

        i11 = i11 + 1;

        goto label139;

     label141:
        i0 = i0 + 1;

        goto label138;

     label142:
        i1 = 0;

     label143:
        if i1 >= $i5 goto label148;

        d2 = 0.0;

        i0 = 0;

     label144:
        if i0 >= $i4 goto label145;

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        d1 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i1, i0);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        $d21 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        d1 = d1 * $d21;

        d2 = d2 + d1;

        i0 = i0 + 1;

        goto label144;

     label145:
        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesParameters>;

        d1 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        d2 = d2 * d1;

        i0 = 0;

     label146:
        if i0 >= $i4 goto label147;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector gradientAtTrustRegionCenter>;

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector gradientAtTrustRegionCenter>;

        d1 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        $d21 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i1, i0);

        $d21 = $d21 * d2;

        d1 = d1 + $d21;

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i0, d1);

        i0 = i0 + 1;

        goto label146;

     label147:
        i1 = i1 + 1;

        goto label143;

     label148:
        if i6 <= 0 goto label173;

        i1 = 0;

     label149:
        if i1 >= $i5 goto label150;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint>;

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector fAtInterpolationPoints>;

        d2 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector fAtInterpolationPoints>;

        i0 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int trustRegionCenterInterpolationPointIndex>;

        d1 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        d2 = d2 - d1;

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d2);

        virtualinvoke r10.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, 0.0);

        i1 = i1 + 1;

        goto label149;

     label150:
        i1 = 0;

     label151:
        if i1 >= i3 goto label156;

        d2 = 0.0;

        i0 = 0;

     label152:
        if i0 >= $i5 goto label153;

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        d1 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i0, i1);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint>;

        $d21 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        d1 = d1 * $d21;

        d2 = d2 + d1;

        i0 = i0 + 1;

        goto label152;

     label153:
        i0 = 0;

     label154:
        if i0 >= $i5 goto label155;

        d1 = virtualinvoke r10.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        $d21 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i0, i1);

        $d21 = $d21 * d2;

        d1 = d1 + $d21;

        virtualinvoke r10.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i0, d1);

        i0 = i0 + 1;

        goto label154;

     label155:
        i1 = i1 + 1;

        goto label151;

     label156:
        i1 = 0;

     label157:
        if i1 >= $i5 goto label160;

        d2 = 0.0;

        i0 = 0;

     label158:
        if i0 >= $i4 goto label159;

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        d1 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i1, i0);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        $d21 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        d1 = d1 * $d21;

        d2 = d2 + d1;

        i0 = i0 + 1;

        goto label158;

     label159:
        d1 = virtualinvoke r10.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        virtualinvoke r9.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d1);

        d1 = virtualinvoke r10.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        d2 = d1 * d2;

        virtualinvoke r10.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d2);

        i1 = i1 + 1;

        goto label157;

     label160:
        d2 = 0.0;

        d1 = 0.0;

        i1 = 0;

     label161:
        if i1 >= $i4 goto label167;

        $d21 = 0.0;

        i0 = 0;

     label162:
        if i0 >= $i5 goto label163;

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix>;

        $d22 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i0, i1);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint>;

        $d23 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        $d22 = $d22 * $d23;

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        $d23 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i0, i1);

        $d24 = virtualinvoke r10.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        $d23 = $d23 * $d24;

        $d22 = $d22 + $d23;

        $d21 = $d21 + $d22;

        i0 = i0 + 1;

        goto label162;

     label163:
        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        $d22 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        $d23 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        $b12 = $d22 cmpl $d23;

        if $b12 != 0 goto label165;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector gradientAtTrustRegionCenter>;

        $d22 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        $d22 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>(0.0, $d22);

        $d22 = $d22 * $d22;

        d2 = d2 + $d22;

        $d22 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>(0.0, $d21);

        $d22 = $d22 * $d22;

        d1 = d1 + $d22;

     label164:
        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint>;

        i0 = $i5 + i1;

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i0, $d21);

        i1 = i1 + 1;

        goto label161;

     label165:
        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        $d22 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        $d23 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        $b12 = $d22 cmpl $d23;

        if $b12 != 0 goto label166;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector gradientAtTrustRegionCenter>;

        $d22 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        $d22 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(0.0, $d22);

        $d22 = $d22 * $d22;

        d2 = d2 + $d22;

        $d22 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(0.0, $d21);

        $d22 = $d22 * $d22;

        d1 = d1 + $d22;

        goto label164;

     label166:
        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector gradientAtTrustRegionCenter>;

        $d22 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        $d22 = $d22 * $d22;

        d2 = d2 + $d22;

        $d22 = $d21 * $d21;

        d1 = d1 + $d22;

        goto label164;

     label167:
        i8 = i8 + 1;

        d1 = 10.0 * d1;

        $b12 = d2 cmpg d1;

        if $b12 >= 0 goto label168;

        i8 = 0;

     label168:
        if i8 < 3 goto label173;

        i1 = 0;

        i0 = staticinvoke <org.apache.commons.math3.util.FastMath: int max(int,int)>($i5, i2);

     label169:
        if i1 >= i0 goto label173;

        if i1 >= $i4 goto label170;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector gradientAtTrustRegionCenter>;

        r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint>;

        i8 = $i5 + i1;

        d2 = virtualinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i8);

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d2);

     label170:
        if i1 >= $i5 goto label171;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesParameters>;

        d2 = virtualinvoke r9.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d2);

     label171:
        if i1 >= i2 goto label172;

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesValues>;

        virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, 0.0);

     label172:
        i8 = 0;

        i1 = i1 + 1;

        goto label169;

     label173:
        if i6 != 0 goto label174;

        s10 = 60;

        goto label003;

     label174:
        d3 = 0.1 * d3;

        d0 = d3 + d0;

        $b12 = d14 cmpg d0;

        if $b12 > 0 goto label175;

        s10 = 60;

        goto label003;

     label175:
        d0 = 2.0 * d4;

        d20 = 10.0 * d11;

        d0 = d0 * d0;

        d20 = d20 * d20;

        d20 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(d0, d20);

     label176:
        staticinvoke <org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: void printState(int)>(650);

        $i7 = -1;

        i1 = 0;

     label177:
        if i1 >= $i5 goto label181;

        d0 = 0.0;

        i0 = 0;

     label178:
        if i0 >= $i4 goto label179;

        $r11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        d3 = virtualinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i1, i0);

        r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d2 = virtualinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        d3 = d3 - d2;

        d3 = d3 * d3;

        d0 = d0 + d3;

        i0 = i0 + 1;

        goto label178;

     label179:
        $b12 = d0 cmpl d20;

        if $b12 <= 0 goto label180;

        $i7 = i1;

        d20 = d0;

     label180:
        i1 = i1 + 1;

        goto label177;

     label181:
        if $i7 < 0 goto label183;

        d16 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(d20);

        if i6 != -1 goto label182;

        d4 = 0.1 * d4;

        d7 = 0.5 * d16;

        d7 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>(d4, d7);

        d4 = d7;

        d0 = 1.5 * d11;

        $b12 = d7 cmpg d0;

        if $b12 > 0 goto label182;

        d4 = d11;

     label182:
        i6 = 0;

        d16 = 0.1 * d16;

        d16 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>(d16, d4);

        d7 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(d16, d11);

        d16 = d7;

        d7 = d7 * d7;

        s10 = 90;

        goto label003;

     label183:
        if i6 != -1 goto label184;

        s10 = 680;

        goto label003;

     label184:
        $b12 = d18 cmpl 0.0;

        if $b12 <= 0 goto label185;

        s10 = 60;

        goto label003;

     label185:
        d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(d4, d19);

        $b12 = d0 cmpl d11;

        if $b12 <= 0 goto label186;

        s10 = 60;

        goto label003;

     label186:
        staticinvoke <org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: void printState(int)>(680);

        d0 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double stoppingTrustRegionRadius>;

        $b12 = d11 cmpl d0;

        if $b12 <= 0 goto label190;

        d4 = 0.5 * d11;

        d18 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double stoppingTrustRegionRadius>;

        d18 = d11 / d18;

        $b12 = d18 cmpg 16.0;

        if $b12 > 0 goto label188;

        d11 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double stoppingTrustRegionRadius>;

     label187:
        d4 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(d4, d11);

        i6 = 0;

        $i9 = virtualinvoke r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int getEvaluations()>();

        s10 = 60;

        goto label003;

     label188:
        $b12 = d18 cmpg 250.0;

        if $b12 > 0 goto label189;

        d11 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(d18);

        d0 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double stoppingTrustRegionRadius>;

        d11 = d11 * d0;

        goto label187;

     label189:
        d11 = d11 * 0.1;

        goto label187;

     label190:
        if i6 != -1 goto label191;

        s10 = 360;

        goto label003;

     label191:
        staticinvoke <org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: void printState(int)>(720);

        r8 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector fAtInterpolationPoints>;

        i3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int trustRegionCenterInterpolationPointIndex>;

        d6 = virtualinvoke r8.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i3);

        $b12 = d6 cmpg $d9;

        if $b12 > 0 goto label196;

        i3 = 0;

     label192:
        if i3 >= $i4 goto label195;

        d6 = $r1[i3];

        r8 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector originShift>;

        $d9 = virtualinvoke r8.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i3);

        r8 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d5 = virtualinvoke r8.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i3);

        $d9 = $d9 + d5;

        d6 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(d6, $d9);

        $d9 = $r2[i3];

        r8 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector currentBest>;

        d6 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>(d6, $d9);

        virtualinvoke r8.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i3, d6);

        r8 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d6 = virtualinvoke r8.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i3);

        r8 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        $d9 = virtualinvoke r8.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i3);

        $b12 = d6 cmpl $d9;

        if $b12 != 0 goto label193;

        r8 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector currentBest>;

        d6 = $r1[i3];

        virtualinvoke r8.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i3, d6);

     label193:
        r8 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d6 = virtualinvoke r8.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i3);

        r8 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        $d9 = virtualinvoke r8.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i3);

        $b12 = d6 cmpl $d9;

        if $b12 != 0 goto label194;

        r8 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector currentBest>;

        d6 = $r2[i3];

        virtualinvoke r8.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i3, d6);

     label194:
        i3 = i3 + 1;

        goto label192;

     label195:
        r8 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector fAtInterpolationPoints>;

        $i4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int trustRegionCenterInterpolationPointIndex>;

        d6 = virtualinvoke r8.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i4);

        return d6;

     label196:
        return d14;
    }
    private static java.lang.String caller(int)
    {
        int $i0;
        java.lang.StackTraceElement r0;
        java.lang.Throwable r1;
        java.lang.StackTraceElement[] $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        $i0 := @parameter0: int;

        r1 = new java.lang.Throwable;

        specialinvoke r1.<java.lang.Throwable: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        r0 = $r2[$i0];

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r0.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (at line ");

        $i0 = virtualinvoke r0.<java.lang.StackTraceElement: int getLineNumber()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
    private void prelim(double[], double[])
    {
        org.apache.commons.math3.optimization.direct.BOBYQAOptimizer r0;
        double[] $r1, $r2, $r7;
        double d0, d1, d2, d3, $d4, d5, $d6, $d7, $d8;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, i10;
        org.apache.commons.math3.linear.ArrayRealVector $r3, $r5;
        org.apache.commons.math3.linear.Array2DRowRealMatrix $r4, $r6;
        byte $b11;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.optimization.direct.BOBYQAOptimizer;

        $r1 := @parameter0: double[];

        $r2 := @parameter1: double[];

        staticinvoke <org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: void printMethod()>();

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector currentBest>;

        $i7 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: int getDimension()>();

        $i8 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int numberOfInterpolationPoints>;

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix>;

        $i9 = virtualinvoke $r4.<org.apache.commons.math3.linear.Array2DRowRealMatrix: int getRowDimension()>();

        d2 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double initialTrustRegionRadius>;

        d3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double initialTrustRegionRadius>;

        d3 = d2 * d3;

        d2 = 1.0 / d3;

        i5 = $i7 + 1;

        i10 = 0;

     label01:
        if i10 >= $i7 goto label06;

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector originShift>;

        $r5 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector currentBest>;

        $d4 = virtualinvoke $r5.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i10);

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i10, $d4);

        i6 = 0;

     label02:
        if i6 >= $i8 goto label03;

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        virtualinvoke $r4.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>(i6, i10, 0.0);

        i6 = i6 + 1;

        goto label02;

     label03:
        i6 = 0;

     label04:
        if i6 >= $i9 goto label05;

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix>;

        virtualinvoke $r4.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>(i6, i10, 0.0);

        i6 = i6 + 1;

        goto label04;

     label05:
        i10 = i10 + 1;

        goto label01;

     label06:
        $i9 = 0;

        i10 = $i7 * i5;

        i10 = i10 / 2;

     label07:
        if $i9 >= i10 goto label08;

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesValues>;

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>($i9, 0.0);

        $i9 = $i9 + 1;

        goto label07;

     label08:
        $i9 = 0;

     label09:
        if $i9 >= $i8 goto label12;

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesParameters>;

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>($i9, 0.0);

        i10 = 0;

        i6 = $i8 - i5;

     label10:
        if i10 >= i6 goto label11;

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        virtualinvoke $r4.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>($i9, i10, 0.0);

        i10 = i10 + 1;

        goto label10;

     label11:
        $i9 = $i9 + 1;

        goto label09;

     label12:
        i6 = 0;

        i10 = 0;

        $d4 = #NaN;

     label13:
        $i9 = virtualinvoke r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int getEvaluations()>();

        i3 = $i9 - $i7;

        i2 = $i9 + -1;

        i4 = i3 + -1;

        d1 = 0.0;

        d5 = 0.0;

        i0 = $i7 * 2;

        if $i9 > i0 goto label22;

        if $i9 < 1 goto label19;

        if $i9 > $i7 goto label19;

        $d6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double initialTrustRegionRadius>;

        d1 = $d6;

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        d0 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i2);

        $b11 = d0 cmpl 0.0;

        if $b11 != 0 goto label14;

        d1 = neg $d6;

     label14:
        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        virtualinvoke $r4.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>($i9, i2, d1);

     label15:
        i0 = 0;

     label16:
        if i0 >= $i7 goto label24;

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector currentBest>;

        $d6 = $r1[i0];

        $r5 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector originShift>;

        d0 = virtualinvoke $r5.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        $d7 = virtualinvoke $r4.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>($i9, i0);

        d0 = d0 + $d7;

        $d6 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d6, d0);

        d0 = $r2[i0];

        $d6 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>($d6, d0);

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i0, $d6);

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        $d6 = virtualinvoke $r4.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>($i9, i0);

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        d0 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        $b11 = $d6 cmpl d0;

        if $b11 != 0 goto label17;

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector currentBest>;

        $d6 = $r1[i0];

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i0, $d6);

     label17:
        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        $d6 = virtualinvoke $r4.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>($i9, i0);

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        d0 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i0);

        $b11 = $d6 cmpl d0;

        if $b11 != 0 goto label18;

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector currentBest>;

        $d6 = $r2[i0];

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i0, $d6);

     label18:
        i0 = i0 + 1;

        goto label16;

     label19:
        if $i9 <= $i7 goto label15;

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        d1 = virtualinvoke $r4.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i3, i4);

        d5 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double initialTrustRegionRadius>;

        d5 = neg d5;

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        $d6 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i4);

        $b11 = $d6 cmpl 0.0;

        if $b11 != 0 goto label20;

        d5 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double initialTrustRegionRadius>;

        d5 = 2.0 * d5;

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        $d6 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i4);

        d5 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>(d5, $d6);

     label20:
        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        $d6 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i4);

        $b11 = $d6 cmpl 0.0;

        if $b11 != 0 goto label21;

        d5 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double initialTrustRegionRadius>;

        d5 = -2.0 * d5;

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        $d6 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i4);

        d5 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(d5, $d6);

     label21:
        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        virtualinvoke $r4.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>($i9, i4, d5);

        goto label15;

     label22:
        i10 = $i9 - i5;

        i6 = i10 / $i7;

        i10 = i6 * $i7;

        i10 = $i9 - i10;

        i10 = i10 - $i7;

        i6 = i10 + i6;

        if i6 <= $i7 goto label23;

        i0 = i10;

        i10 = i6 - $i7;

        i6 = i0;

     label23:
        i0 = i6 + -1;

        i1 = i10 + -1;

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        $d6 = virtualinvoke $r6.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i6, i0);

        virtualinvoke $r4.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>($i9, i0, $d6);

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        $d6 = virtualinvoke $r6.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i10, i1);

        virtualinvoke $r4.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>($i9, i1, $d6);

        goto label15;

     label24:
        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector currentBest>;

        $r7 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double[] toArray()>();

        $d6 = virtualinvoke r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double computeObjectiveValue(double[])>($r7);

        $z0 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: boolean isMinimize>;

        if $z0 == 0 goto label28;

     label25:
        i0 = virtualinvoke r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int getEvaluations()>();

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector fAtInterpolationPoints>;

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>($i9, $d6);

        if i0 != 1 goto label29;

        $d4 = $d6;

        r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int trustRegionCenterInterpolationPointIndex> = 0;

     label26:
        i1 = $i7 * 2;

        i1 = i1 + 1;

        if i0 > i1 goto label33;

        if i0 < 2 goto label30;

        i1 = $i7 + 1;

        if i0 > i1 goto label30;

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector gradientAtTrustRegionCenter>;

        d5 = $d6 - $d4;

        d5 = d5 / d1;

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i2, d5);

        i4 = i0 + $i7;

        if $i8 >= i4 goto label27;

        d1 = 1.0 / d1;

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix>;

        d5 = neg d1;

        virtualinvoke $r4.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>(0, i2, d5);

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix>;

        virtualinvoke $r4.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>($i9, i2, d1);

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix>;

        $i9 = $i8 + i2;

        d1 = -0.5 * d3;

        virtualinvoke $r4.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>($i9, i2, d1);

     label27:
        $i9 = virtualinvoke r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int getEvaluations()>();

        if $i9 < $i8 goto label13;

        return;

     label28:
        $d6 = neg $d6;

        goto label25;

     label29:
        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector fAtInterpolationPoints>;

        i1 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int trustRegionCenterInterpolationPointIndex>;

        d0 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        $b11 = $d6 cmpg d0;

        if $b11 >= 0 goto label26;

        r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int trustRegionCenterInterpolationPointIndex> = $i9;

        goto label26;

     label30:
        i2 = $i7 + 2;

        if i0 < i2 goto label27;

        i2 = i3 + 1;

        i2 = i2 * i3;

        i2 = i2 / 2;

        i2 = i2 + -1;

        d0 = $d6 - $d4;

        $d7 = d0 / d5;

        d0 = d5 - d1;

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesValues>;

        $r5 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector gradientAtTrustRegionCenter>;

        $d8 = virtualinvoke $r5.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i4);

        $d8 = $d7 - $d8;

        $d8 = 2.0 * $d8;

        $d8 = $d8 / d0;

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i2, $d8);

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector gradientAtTrustRegionCenter>;

        $r5 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector gradientAtTrustRegionCenter>;

        $d8 = virtualinvoke $r5.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i4);

        $d8 = $d8 * d5;

        $d7 = $d7 * d1;

        $d7 = $d8 - $d7;

        d0 = $d7 / d0;

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i4, d0);

        d0 = d1 * d5;

        $b11 = d0 cmpg 0.0;

        if $b11 >= 0 goto label32;

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector fAtInterpolationPoints>;

        i2 = $i9 - $i7;

        d0 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i2);

        $b11 = $d6 cmpg d0;

        if $b11 >= 0 goto label32;

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector fAtInterpolationPoints>;

        $r5 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector fAtInterpolationPoints>;

        i2 = $i9 - $i7;

        d0 = virtualinvoke $r5.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i2);

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>($i9, d0);

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector fAtInterpolationPoints>;

        i2 = $i9 - $i7;

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i2, $d6);

        i2 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int trustRegionCenterInterpolationPointIndex>;

        if i2 != $i9 goto label31;

        i2 = $i9 - $i7;

        r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int trustRegionCenterInterpolationPointIndex> = i2;

     label31:
        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        i2 = $i9 - $i7;

        virtualinvoke $r4.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>(i2, i4, d5);

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        virtualinvoke $r4.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>($i9, i4, d1);

     label32:
        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix>;

        $d6 = d1 + d5;

        $d6 = neg $d6;

        d0 = d1 * d5;

        $d6 = $d6 / d0;

        virtualinvoke $r4.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>(0, i4, $d6);

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix>;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        i2 = $i9 - $i7;

        $d6 = virtualinvoke $r6.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i2, i4);

        $d6 = -0.5 / $d6;

        virtualinvoke $r4.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>($i9, i4, $d6);

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix>;

        i2 = $i9 - $i7;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix>;

        $d6 = virtualinvoke $r6.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(0, i4);

        $d6 = neg $d6;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix>;

        d0 = virtualinvoke $r6.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>($i9, i4);

        $d6 = $d6 - d0;

        virtualinvoke $r4.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>(i2, i4, $d6);

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        $d6 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(2.0);

        d1 = d1 * d5;

        d1 = $d6 / d1;

        virtualinvoke $r4.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>(0, i4, d1);

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(0.5);

        d1 = d1 / d3;

        virtualinvoke $r4.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>($i9, i4, d1);

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        i2 = $i9 - $i7;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        d1 = virtualinvoke $r6.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(0, i4);

        d1 = neg d1;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        d5 = virtualinvoke $r6.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>($i9, i4);

        d1 = d1 - d5;

        virtualinvoke $r4.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>(i2, i4, d1);

        goto label27;

     label33:
        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        virtualinvoke $r4.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>(0, i4, d2);

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        virtualinvoke $r4.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>($i9, i4, d2);

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        d1 = neg d2;

        virtualinvoke $r4.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>(i6, i4, d1);

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        d1 = neg d2;

        virtualinvoke $r4.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>(i10, i4, d1);

        i4 = i6 + -1;

        i4 = i4 * i6;

        i4 = i4 / 2;

        i4 = i4 + i10;

        i4 = i4 + -1;

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        i2 = i6 + -1;

        d1 = virtualinvoke $r4.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>($i9, i2);

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        i2 = i10 + -1;

        d5 = virtualinvoke $r4.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>($i9, i2);

        d1 = d1 * d5;

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesValues>;

        $r5 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector fAtInterpolationPoints>;

        d5 = virtualinvoke $r5.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i6);

        d5 = $d4 - d5;

        $r5 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector fAtInterpolationPoints>;

        d0 = virtualinvoke $r5.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i10);

        d5 = d5 - d0;

        d5 = d5 + $d6;

        d1 = d5 / d1;

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i4, d1);

        goto label27;
    }
    private static void printMethod()
    {
        return;
    }
    private static void printState(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        return;
    }
    private void setup(double[], double[])
    {
        org.apache.commons.math3.optimization.direct.BOBYQAOptimizer r0;
        double[] $r1, $r2, $r4;
        int i0, $i1, $i2;
        int[] r3;
        double d0, d1, $d2, $d3;
        org.apache.commons.math3.exception.NumberIsTooSmallException $r5;
        java.lang.Integer $r6, $r7, $r10;
        org.apache.commons.math3.exception.OutOfRangeException $r8;
        org.apache.commons.math3.exception.util.LocalizedFormats $r9;
        byte $b3;
        org.apache.commons.math3.linear.Array2DRowRealMatrix $r11;
        org.apache.commons.math3.linear.ArrayRealVector $r12;

        r0 := @this: org.apache.commons.math3.optimization.direct.BOBYQAOptimizer;

        $r1 := @parameter0: double[];

        $r2 := @parameter1: double[];

        staticinvoke <org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: void printMethod()>();

        $r4 = virtualinvoke r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double[] getStartPoint()>();

        i0 = lengthof $r4;

        if i0 >= 2 goto label1;

        $r5 = new org.apache.commons.math3.exception.NumberIsTooSmallException;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        specialinvoke $r5.<org.apache.commons.math3.exception.NumberIsTooSmallException: void <init>(java.lang.Number,java.lang.Number,boolean)>($r6, $r7, 1);

        throw $r5;

     label1:
        r3 = newarray (int)[2];

        $i1 = i0 + 2;

        r3[0] = $i1;

        $i1 = i0 + 2;

        $i2 = i0 + 1;

        $i1 = $i1 * $i2;

        $i1 = $i1 / 2;

        r3[1] = $i1;

        $i1 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int numberOfInterpolationPoints>;

        $i2 = r3[0];

        if $i1 < $i2 goto label2;

        $i1 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int numberOfInterpolationPoints>;

        $i2 = r3[1];

        if $i1 <= $i2 goto label3;

     label2:
        $r8 = new org.apache.commons.math3.exception.OutOfRangeException;

        $r9 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats NUMBER_OF_INTERPOLATION_POINTS>;

        i0 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int numberOfInterpolationPoints>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        i0 = r3[0];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        i0 = r3[1];

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        specialinvoke $r8.<org.apache.commons.math3.exception.OutOfRangeException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)>($r9, $r6, $r7, $r10);

        throw $r8;

     label3:
        $r4 = newarray (double)[i0];

        r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double[] boundDifference> = $r4;

        d0 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double initialTrustRegionRadius>;

        d0 = 2.0 * d0;

        d1 = #Infinity;

        $i1 = 0;

     label4:
        if $i1 >= i0 goto label5;

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double[] boundDifference>;

        $d2 = $r2[$i1];

        $d3 = $r1[$i1];

        $d2 = $d2 - $d3;

        $r4[$i1] = $d2;

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double[] boundDifference>;

        $d2 = $r4[$i1];

        d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>(d1, $d2);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $b3 = d1 cmpg d0;

        if $b3 >= 0 goto label6;

        d0 = d1 / 3.0;

        r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double initialTrustRegionRadius> = d0;

     label6:
        $r11 = new org.apache.commons.math3.linear.Array2DRowRealMatrix;

        $i1 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int numberOfInterpolationPoints>;

        $i1 = $i1 + i0;

        specialinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void <init>(int,int)>($i1, i0);

        r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix> = $r11;

        $r11 = new org.apache.commons.math3.linear.Array2DRowRealMatrix;

        $i1 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int numberOfInterpolationPoints>;

        $i2 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int numberOfInterpolationPoints>;

        $i2 = $i2 - i0;

        $i2 = $i2 + -1;

        specialinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void <init>(int,int)>($i1, $i2);

        r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix> = $r11;

        $r11 = new org.apache.commons.math3.linear.Array2DRowRealMatrix;

        $i1 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int numberOfInterpolationPoints>;

        specialinvoke $r11.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void <init>(int,int)>($i1, i0);

        r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints> = $r11;

        $r12 = new org.apache.commons.math3.linear.ArrayRealVector;

        specialinvoke $r12.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>(i0);

        r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector originShift> = $r12;

        $r12 = new org.apache.commons.math3.linear.ArrayRealVector;

        $i1 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int numberOfInterpolationPoints>;

        specialinvoke $r12.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>($i1);

        r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector fAtInterpolationPoints> = $r12;

        $r12 = new org.apache.commons.math3.linear.ArrayRealVector;

        specialinvoke $r12.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>(i0);

        r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset> = $r12;

        $r12 = new org.apache.commons.math3.linear.ArrayRealVector;

        specialinvoke $r12.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>(i0);

        r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector gradientAtTrustRegionCenter> = $r12;

        $r12 = new org.apache.commons.math3.linear.ArrayRealVector;

        specialinvoke $r12.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>(i0);

        r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference> = $r12;

        $r12 = new org.apache.commons.math3.linear.ArrayRealVector;

        specialinvoke $r12.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>(i0);

        r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference> = $r12;

        $r12 = new org.apache.commons.math3.linear.ArrayRealVector;

        $i1 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int numberOfInterpolationPoints>;

        specialinvoke $r12.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>($i1);

        r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesParameters> = $r12;

        $r12 = new org.apache.commons.math3.linear.ArrayRealVector;

        specialinvoke $r12.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>(i0);

        r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector newPoint> = $r12;

        $r12 = new org.apache.commons.math3.linear.ArrayRealVector;

        specialinvoke $r12.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>(i0);

        r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector alternativeNewPoint> = $r12;

        $r12 = new org.apache.commons.math3.linear.ArrayRealVector;

        specialinvoke $r12.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>(i0);

        r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint> = $r12;

        $r12 = new org.apache.commons.math3.linear.ArrayRealVector;

        $i1 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int numberOfInterpolationPoints>;

        $i1 = $i1 + i0;

        specialinvoke $r12.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>($i1);

        r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint> = $r12;

        $r12 = new org.apache.commons.math3.linear.ArrayRealVector;

        $i1 = i0 + 1;

        i0 = $i1 * i0;

        i0 = i0 / 2;

        specialinvoke $r12.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>(i0);

        r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesValues> = $r12;

        return;
    }
    private double[] trsbox(double, org.apache.commons.math3.linear.ArrayRealVector, org.apache.commons.math3.linear.ArrayRealVector, org.apache.commons.math3.linear.ArrayRealVector, org.apache.commons.math3.linear.ArrayRealVector, org.apache.commons.math3.linear.ArrayRealVector)
    {
        org.apache.commons.math3.optimization.direct.BOBYQAOptimizer r0;
        double $d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23;
        org.apache.commons.math3.linear.ArrayRealVector $r1, $r2, $r3, $r4, $r5, $r6, $r10;
        int $i0, $i1, i2, i3, i4, i5, i6, i7, $i10, i11, $i12;
        byte $b8;
        short s9;
        org.apache.commons.math3.exception.MathIllegalStateException $r7;
        org.apache.commons.math3.exception.util.LocalizedFormats $r8;
        java.lang.Object[] $r9;
        double[] $r11;
        org.apache.commons.math3.linear.Array2DRowRealMatrix $r12;
        org.apache.commons.math3.linear.RealVector $r13;

        r0 := @this: org.apache.commons.math3.optimization.direct.BOBYQAOptimizer;

        $d0 := @parameter0: double;

        $r1 := @parameter1: org.apache.commons.math3.linear.ArrayRealVector;

        $r2 := @parameter2: org.apache.commons.math3.linear.ArrayRealVector;

        $r3 := @parameter3: org.apache.commons.math3.linear.ArrayRealVector;

        $r4 := @parameter4: org.apache.commons.math3.linear.ArrayRealVector;

        $r5 := @parameter5: org.apache.commons.math3.linear.ArrayRealVector;

        staticinvoke <org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: void printMethod()>();

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector currentBest>;

        $i0 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: int getDimension()>();

        $i1 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int numberOfInterpolationPoints>;

        d3 = 0.0;

        i2 = -1;

        d4 = 0.0;

        d5 = 0.0;

        d6 = 0.0;

        d7 = 0.0;

        d8 = 0.0;

        d9 = 0.0;

        d10 = 0.0;

        d11 = 0.0;

        i3 = 0;

        d12 = 0.0;

        d13 = 0.0;

        d14 = 0.0;

        i4 = 0;

        i5 = 0;

        i6 = 0;

        i7 = 0;

     label01:
        if i7 >= $i0 goto label05;

        virtualinvoke $r2.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i7, 0.0);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        $d15 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        $d16 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $b8 = $d15 cmpg $d16;

        if $b8 > 0 goto label04;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector gradientAtTrustRegionCenter>;

        $d15 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $b8 = $d15 cmpl 0.0;

        if $b8 < 0 goto label02;

        virtualinvoke $r2.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i7, -1.0);

     label02:
        $d15 = virtualinvoke $r2.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $b8 = $d15 cmpl 0.0;

        if $b8 == 0 goto label03;

        i6 = i6 + 1;

     label03:
        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i7, 0.0);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector gradientAtTrustRegionCenter>;

        $d15 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        virtualinvoke $r1.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i7, $d15);

        i7 = i7 + 1;

        goto label01;

     label04:
        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        $d15 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        $d16 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $b8 = $d15 cmpl $d16;

        if $b8 < 0 goto label02;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector gradientAtTrustRegionCenter>;

        $d15 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $b8 = $d15 cmpg 0.0;

        if $b8 > 0 goto label02;

        virtualinvoke $r2.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i7, 1.0);

        goto label02;

     label05:
        $d15 = $d0 * $d0;

        $d16 = 0.0;

        $d0 = -1.0;

        s9 = 20;

     label06:
        lookupswitch(s9)
        {
            case 20: goto label08;
            case 30: goto label09;
            case 50: goto label18;
            case 90: goto label41;
            case 100: goto label42;
            case 120: goto label48;
            case 150: goto label60;
            case 190: goto label75;
            case 210: goto label80;
            default: goto label07;
        };

     label07:
        $r7 = new org.apache.commons.math3.exception.MathIllegalStateException;

        $r8 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats SIMPLE_MESSAGE>;

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = "trsbox";

        specialinvoke $r7.<org.apache.commons.math3.exception.MathIllegalStateException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r8, $r9);

        throw $r7;

     label08:
        staticinvoke <org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: void printState(int)>(20);

        d3 = 0.0;

     label09:
        staticinvoke <org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: void printState(int)>(30);

        d14 = 0.0;

        i7 = 0;

     label10:
        if i7 >= $i0 goto label14;

        $d17 = virtualinvoke $r2.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $b8 = $d17 cmpl 0.0;

        if $b8 == 0 goto label12;

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i7, 0.0);

     label11:
        $d17 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $d17 = $d17 * $d17;

        d14 = d14 + $d17;

        i7 = i7 + 1;

        goto label10;

     label12:
        $b8 = d3 cmpl 0.0;

        if $b8 != 0 goto label13;

        $d17 = virtualinvoke $r1.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $d17 = neg $d17;

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i7, $d17);

        goto label11;

     label13:
        $d17 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $d17 = $d17 * d3;

        $d18 = virtualinvoke $r1.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $d17 = $d17 - $d18;

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i7, $d17);

        goto label11;

     label14:
        $b8 = d14 cmpl 0.0;

        if $b8 != 0 goto label15;

        s9 = 190;

        goto label06;

     label15:
        $b8 = d3 cmpl 0.0;

        if $b8 != 0 goto label16;

        d11 = d14;

        i4 = i5 + $i0;

        i4 = i4 - i6;

     label16:
        $d17 = d11 * $d15;

        $d18 = 1.0E-4 * $d16;

        $d18 = $d18 * $d16;

        $b8 = $d17 cmpg $d18;

        if $b8 > 0 goto label17;

        s9 = 190;

        goto label06;

     label17:
        s9 = 210;

        goto label06;

     label18:
        staticinvoke <org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: void printState(int)>(50);

        $d18 = $d15;

        d2 = 0.0;

        $d17 = 0.0;

        i7 = 0;

     label19:
        if i7 >= $i0 goto label21;

        d1 = virtualinvoke $r2.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $b8 = d1 cmpl 0.0;

        if $b8 != 0 goto label20;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        d1 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        d1 = d1 * d1;

        $d18 = $d18 - d1;

        d1 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        $d19 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        d1 = d1 * $d19;

        d2 = d2 + d1;

        d1 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $d19 = virtualinvoke $r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        d1 = d1 * $d19;

        $d17 = $d17 + d1;

     label20:
        i7 = i7 + 1;

        goto label19;

     label21:
        $b8 = $d18 cmpg 0.0;

        if $b8 > 0 goto label22;

        s9 = 90;

        goto label06;

     label22:
        d1 = d14 * $d18;

        $d19 = d2 * d2;

        d1 = d1 + $d19;

        d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(d1);

        $b8 = d2 cmpg 0.0;

        if $b8 >= 0 goto label28;

        $d18 = d1 - d2;

        $d18 = $d18 / d14;

     label23:
        d2 = $d18;

        $b8 = $d17 cmpl 0.0;

        if $b8 <= 0 goto label24;

        d2 = d11 / $d17;

        d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>($d18, d2);

     label24:
        i2 = -1;

        i7 = 0;

     label25:
        if i7 >= $i0 goto label30;

        d1 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $b8 = d1 cmpl 0.0;

        if $b8 == 0 goto label27;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d1 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        $d19 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        d1 = d1 + $d19;

        $d19 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $b8 = $d19 cmpl 0.0;

        if $b8 <= 0 goto label29;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        $d19 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        d1 = $d19 - d1;

        $d19 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        d1 = d1 / $d19;

     label26:
        $b8 = d1 cmpg d2;

        if $b8 >= 0 goto label27;

        d2 = d1;

        i2 = i7;

     label27:
        i7 = i7 + 1;

        goto label25;

     label28:
        d2 = d1 + d2;

        $d18 = $d18 / d2;

        goto label23;

     label29:
        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        $d19 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        d1 = $d19 - d1;

        $d19 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        d1 = d1 / $d19;

        goto label26;

     label30:
        d1 = 0.0;

        $b8 = d2 cmpl 0.0;

        if $b8 <= 0 goto label35;

        i5 = i5 + 1;

        d9 = $d17 / d14;

        if i2 != -1 goto label31;

        $b8 = d9 cmpl 0.0;

        if $b8 <= 0 goto label31;

        d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>($d0, d9);

        $d0 = d1;

        $b8 = d1 cmpl -1.0;

        if $b8 != 0 goto label31;

        $d0 = d9;

     label31:
        d9 = d11;

        d11 = 0.0;

        i7 = 0;

     label32:
        if i7 >= $i0 goto label34;

        d1 = virtualinvoke $r1.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $d19 = virtualinvoke $r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $d19 = $d19 * d2;

        d1 = d1 + $d19;

        virtualinvoke $r1.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i7, d1);

        d1 = virtualinvoke $r2.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $b8 = d1 cmpl 0.0;

        if $b8 != 0 goto label33;

        d1 = virtualinvoke $r1.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        d1 = d1 * d1;

        d11 = d11 + d1;

     label33:
        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        $r10 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        d1 = virtualinvoke $r10.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $d19 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $d19 = $d19 * d2;

        d1 = d1 + $d19;

        virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i7, d1);

        i7 = i7 + 1;

        goto label32;

     label34:
        d1 = 0.5 * d2;

        $d17 = d1 * $d17;

        $d17 = d9 - $d17;

        $d17 = d2 * $d17;

        $d17 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d17, 0.0);

        d1 = $d17;

        $d16 = $d16 + $d17;

     label35:
        if i2 < 0 goto label38;

        i6 = i6 + 1;

        virtualinvoke $r2.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i2, 1.0);

        $d17 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i2);

        $b8 = $d17 cmpg 0.0;

        if $b8 >= 0 goto label36;

        virtualinvoke $r2.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i2, -1.0);

     label36:
        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        $d17 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i2);

        $d17 = $d17 * $d17;

        $d15 = $d15 - $d17;

        $b8 = $d15 cmpg 0.0;

        if $b8 > 0 goto label37;

        s9 = 190;

        goto label06;

     label37:
        s9 = 20;

        goto label06;

     label38:
        $b8 = d2 cmpg $d18;

        if $b8 >= 0 goto label41;

        if i5 != i4 goto label39;

        s9 = 190;

        goto label06;

     label39:
        $d17 = 0.01 * $d16;

        $b8 = d1 cmpg $d17;

        if $b8 > 0 goto label40;

        s9 = 190;

        goto label06;

     label40:
        d3 = d11 / d9;

        s9 = 30;

        goto label06;

     label41:
        staticinvoke <org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: void printState(int)>(90);

        $d0 = 0.0;

     label42:
        staticinvoke <org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: void printState(int)>(100);

        i7 = $i0 + -1;

        if i6 < i7 goto label43;

        s9 = 190;

        goto label06;

     label43:
        d10 = 0.0;

        d7 = 0.0;

        d11 = 0.0;

        i3 = 0;

     label44:
        if i3 >= $i0 goto label47;

        $d17 = virtualinvoke $r2.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i3);

        $b8 = $d17 cmpl 0.0;

        if $b8 != 0 goto label46;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        $d17 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i3);

        $d17 = $d17 * $d17;

        d10 = d10 + $d17;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        $d17 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i3);

        $d18 = virtualinvoke $r1.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i3);

        $d17 = $d17 * $d18;

        d7 = d7 + $d17;

        $d17 = virtualinvoke $r1.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i3);

        $d17 = $d17 * $d17;

        d11 = d11 + $d17;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        $d17 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i3);

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i3, $d17);

     label45:
        i3 = i3 + 1;

        goto label44;

     label46:
        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i3, 0.0);

        goto label45;

     label47:
        i3 = i5;

        s9 = 210;

        goto label06;

     label48:
        staticinvoke <org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: void printState(int)>(120);

        i5 = i5 + 1;

        $d17 = d11 * d10;

        $d18 = d7 * d7;

        $d17 = $d17 - $d18;

        $d18 = 1.0E-4 * $d16;

        $d18 = $d18 * $d16;

        $b8 = $d17 cmpg $d18;

        if $b8 > 0 goto label49;

        s9 = 190;

        goto label06;

     label49:
        d6 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>($d17);

        i2 = 0;

     label50:
        if i2 >= $i0 goto label53;

        d8 = virtualinvoke $r2.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i2);

        $b8 = d8 cmpl 0.0;

        if $b8 != 0 goto label52;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        d8 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i2);

        d8 = d8 * d7;

        $d17 = virtualinvoke $r1.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i2);

        $d17 = $d17 * d10;

        d8 = d8 - $d17;

        d8 = d8 / d6;

        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i2, d8);

     label51:
        i2 = i2 + 1;

        goto label50;

     label52:
        virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i2, 0.0);

        goto label51;

     label53:
        d8 = neg d6;

        d6 = 1.0;

        i2 = -1;

        i7 = 0;

     label54:
        if i7 >= $i0 goto label55;

        $d17 = virtualinvoke $r2.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $b8 = $d17 cmpl 0.0;

        if $b8 != 0 goto label59;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        $d17 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        $d18 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $d17 = $d17 + $d18;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        $d18 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $d18 = $d17 - $d18;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        $d17 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d2 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $d17 = $d17 - d2;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        d2 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $d17 = $d17 - d2;

        $b8 = $d18 cmpg 0.0;

        if $b8 > 0 goto label56;

        i6 = i6 + 1;

        virtualinvoke $r2.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i7, -1.0);

     label55:
        s9 = 210;

        goto label06;

     label56:
        $b8 = $d17 cmpg 0.0;

        if $b8 > 0 goto label57;

        i6 = i6 + 1;

        virtualinvoke $r2.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i7, 1.0);

        goto label55;

     label57:
        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        d1 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        d2 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        d1 = d1 * d1;

        d2 = d2 * d2;

        d2 = d1 + d2;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d1 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        $d19 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        d1 = d1 - $d19;

        d1 = d1 * d1;

        d1 = d2 - d1;

        $b8 = d1 cmpl 0.0;

        if $b8 <= 0 goto label58;

        d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(d1);

        $d19 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        d1 = d1 - $d19;

        $d19 = d6 * d1;

        $b8 = $d19 cmpl $d18;

        if $b8 <= 0 goto label58;

        d6 = $d18 / d1;

        i2 = i7;

        d5 = -1.0;

     label58:
        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        $d18 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d1 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $d18 = $d18 - d1;

        $d18 = $d18 * $d18;

        $d18 = d2 - $d18;

        $b8 = $d18 cmpl 0.0;

        if $b8 <= 0 goto label59;

        $d18 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>($d18);

        d2 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $d18 = $d18 + d2;

        d2 = d6 * $d18;

        $b8 = d2 cmpl $d17;

        if $b8 <= 0 goto label59;

        d6 = $d17 / $d18;

        i2 = i7;

        d5 = 1.0;

     label59:
        i7 = i7 + 1;

        goto label54;

     label60:
        staticinvoke <org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: void printState(int)>(150);

        $d17 = 0.0;

        $d18 = 0.0;

        d2 = 0.0;

        i7 = 0;

     label61:
        if i7 >= $i0 goto label63;

        d1 = virtualinvoke $r2.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $b8 = d1 cmpl 0.0;

        if $b8 != 0 goto label62;

        d1 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $d19 = virtualinvoke $r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        d1 = d1 * $d19;

        $d17 = $d17 + d1;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        d1 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $d19 = virtualinvoke $r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        d1 = d1 * $d19;

        $d18 = $d18 + d1;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        d1 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $d19 = virtualinvoke $r5.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        d1 = d1 * $d19;

        d2 = d2 + d1;

     label62:
        i7 = i7 + 1;

        goto label61;

     label63:
        d1 = 0.0;

        i7 = -1;

        $d19 = 0.0;

        $d20 = 17.0 * d6;

        $d20 = $d20 + 3.1;

        $i10 = (int) $d20;

        i11 = 0;

     label64:
        if i11 >= $i10 goto label67;

        d4 = (double) i11;

        d4 = d4 * d6;

        $d20 = (double) $i10;

        d4 = d4 / $d20;

        $d20 = d4 + d4;

        $d21 = d4 * d4;

        $d21 = 1.0 + $d21;

        $d20 = $d20 / $d21;

        $d21 = d4 * d2;

        $d21 = $d21 - $d18;

        $d21 = $d21 - $d18;

        $d21 = $d21 * d4;

        $d21 = $d17 + $d21;

        $d22 = d4 * d7;

        $d22 = $d22 - d8;

        $d23 = 0.5 * $d20;

        $d21 = $d23 * $d21;

        $d21 = $d22 - $d21;

        $d20 = $d20 * $d21;

        $b8 = $d20 cmpl d1;

        if $b8 <= 0 goto label66;

        d1 = $d20;

        i7 = i11;

        d12 = $d19;

     label65:
        $d19 = $d20;

        i11 = i11 + 1;

        goto label64;

     label66:
        $i12 = i7 + 1;

        if i11 != $i12 goto label65;

        d13 = $d20;

        goto label65;

     label67:
        if i7 >= 0 goto label68;

        s9 = 190;

        goto label06;

     label68:
        if i7 >= $i10 goto label69;

        d4 = d13 - d12;

        d1 = d1 + d1;

        d1 = d1 - d12;

        d1 = d1 - d13;

        d1 = d4 / d1;

        d4 = (double) i7;

        d1 = 0.5 * d1;

        d4 = d4 + d1;

        d4 = d4 * d6;

        d1 = (double) $i10;

        d4 = d4 / d1;

     label69:
        d1 = d4 * d4;

        d1 = 1.0 - d1;

        $d19 = d4 * d4;

        $d19 = 1.0 + $d19;

        d1 = d1 / $d19;

        $d19 = d4 + d4;

        $d20 = d4 * d4;

        $d20 = 1.0 + $d20;

        $d19 = $d19 / $d20;

        d2 = d4 * d2;

        d2 = d2 - $d18;

        $d18 = d2 - $d18;

        $d18 = $d18 * d4;

        $d17 = $d17 + $d18;

        $d18 = d4 * d7;

        $d18 = $d18 - d8;

        d2 = 0.5 * $d19;

        $d17 = d2 * $d17;

        $d17 = $d18 - $d17;

        $d17 = $d19 * $d17;

        $b8 = $d17 cmpg 0.0;

        if $b8 > 0 goto label70;

        s9 = 190;

        goto label06;

     label70:
        d7 = 0.0;

        d11 = 0.0;

        i11 = 0;

     label71:
        if i11 >= $i0 goto label73;

        $d18 = virtualinvoke $r1.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i11);

        d2 = d1 - 1.0;

        $d20 = virtualinvoke $r5.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i11);

        d2 = d2 * $d20;

        $d18 = $d18 + d2;

        d2 = virtualinvoke $r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i11);

        d2 = d2 * $d19;

        $d18 = $d18 + d2;

        virtualinvoke $r1.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i11, $d18);

        $d18 = virtualinvoke $r2.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i11);

        $b8 = $d18 cmpl 0.0;

        if $b8 != 0 goto label72;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        $r10 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        $d18 = virtualinvoke $r10.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i11);

        $d18 = $d18 * d1;

        d2 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i11);

        d2 = d2 * $d19;

        $d18 = $d18 + d2;

        virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i11, $d18);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        $d18 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i11);

        d2 = virtualinvoke $r1.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i11);

        $d18 = $d18 * d2;

        d7 = d7 + $d18;

        $d18 = virtualinvoke $r1.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i11);

        $d18 = $d18 * $d18;

        d11 = d11 + $d18;

     label72:
        $d18 = virtualinvoke $r5.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i11);

        $d18 = $d18 * d1;

        d2 = virtualinvoke $r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i11);

        d2 = d2 * $d19;

        $d18 = $d18 + d2;

        virtualinvoke $r5.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i11, $d18);

        i11 = i11 + 1;

        goto label71;

     label73:
        $d16 = $d16 + $d17;

        if i2 < 0 goto label74;

        if i7 != $i10 goto label74;

        i6 = i6 + 1;

        virtualinvoke $r2.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i2, d5);

        s9 = 100;

        goto label06;

     label74:
        $d18 = 0.01 * $d16;

        $b8 = $d17 cmpl $d18;

        if $b8 <= 0 goto label75;

        s9 = 120;

        goto label06;

     label75:
        staticinvoke <org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: void printState(int)>(190);

        d3 = 0.0;

        $i1 = 0;

     label76:
        if $i1 >= $i0 goto label79;

        $r1 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d5 = virtualinvoke $r1.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i1);

        $r1 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        d7 = virtualinvoke $r1.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i1);

        d5 = d5 + d7;

        $r1 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        d7 = virtualinvoke $r1.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i1);

        d5 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>(d5, d7);

        $r1 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector newPoint>;

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        d7 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i1);

        d5 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(d5, d7);

        virtualinvoke $r1.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>($i1, d5);

        d5 = virtualinvoke $r2.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i1);

        $b8 = d5 cmpl -1.0;

        if $b8 != 0 goto label77;

        $r1 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector newPoint>;

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lowerDifference>;

        d5 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i1);

        virtualinvoke $r1.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>($i1, d5);

     label77:
        d5 = virtualinvoke $r2.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i1);

        $b8 = d5 cmpl 1.0;

        if $b8 != 0 goto label78;

        $r1 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector newPoint>;

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector upperDifference>;

        d5 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i1);

        virtualinvoke $r1.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>($i1, d5);

     label78:
        $r1 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector newPoint>;

        d5 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i1);

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trustRegionCenterOffset>;

        d7 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i1);

        d5 = d5 - d7;

        virtualinvoke $r1.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>($i1, d5);

        $r1 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector trialStepPoint>;

        d5 = virtualinvoke $r1.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i1);

        d5 = d5 * d5;

        d3 = d3 + d5;

        $i1 = $i1 + 1;

        goto label76;

     label79:
        $r11 = newarray (double)[2];

        $r11[0] = d3;

        $r11[1] = $d0;

        return $r11;

     label80:
        staticinvoke <org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: void printState(int)>(210);

        i7 = 0;

        $i10 = 0;

     label81:
        if $i10 >= $i0 goto label85;

        virtualinvoke $r4.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>($i10, 0.0);

        i11 = 0;

     label82:
        if i11 > $i10 goto label84;

        if i11 >= $i10 goto label83;

        $d17 = virtualinvoke $r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i10);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesValues>;

        $d18 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        d2 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i11);

        $d18 = $d18 * d2;

        $d17 = $d17 + $d18;

        virtualinvoke $r4.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>($i10, $d17);

     label83:
        $d17 = virtualinvoke $r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i11);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesValues>;

        $d18 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        d2 = virtualinvoke $r3.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i10);

        $d18 = $d18 * d2;

        $d17 = $d17 + $d18;

        virtualinvoke $r4.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i11, $d17);

        i7 = i7 + 1;

        i11 = i11 + 1;

        goto label82;

     label84:
        $i10 = $i10 + 1;

        goto label81;

     label85:
        $r12 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        $r13 = virtualinvoke $r12.<org.apache.commons.math3.linear.Array2DRowRealMatrix: org.apache.commons.math3.linear.RealVector operate(org.apache.commons.math3.linear.RealVector)>($r3);

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesParameters>;

        $r13 = virtualinvoke $r13.<org.apache.commons.math3.linear.RealVector: org.apache.commons.math3.linear.RealVector ebeMultiply(org.apache.commons.math3.linear.RealVector)>($r6);

        i7 = 0;

     label86:
        if i7 >= $i1 goto label89;

        $r6 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector modelSecondDerivativesParameters>;

        $d17 = virtualinvoke $r6.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        $b8 = $d17 cmpl 0.0;

        if $b8 == 0 goto label88;

        $i10 = 0;

     label87:
        if $i10 >= $i0 goto label88;

        $d17 = virtualinvoke $r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i10);

        $d18 = virtualinvoke $r13.<org.apache.commons.math3.linear.RealVector: double getEntry(int)>(i7);

        $r12 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix interpolationPoints>;

        d2 = virtualinvoke $r12.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i7, $i10);

        $d18 = $d18 * d2;

        $d17 = $d17 + $d18;

        virtualinvoke $r4.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>($i10, $d17);

        $i10 = $i10 + 1;

        goto label87;

     label88:
        i7 = i7 + 1;

        goto label86;

     label89:
        $b8 = $d0 cmpl 0.0;

        if $b8 == 0 goto label90;

        s9 = 50;

        goto label06;

     label90:
        if i5 <= i3 goto label91;

        s9 = 150;

        goto label06;

     label91:
        i7 = 0;

     label92:
        if i7 >= $i0 goto label93;

        $d17 = virtualinvoke $r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i7);

        virtualinvoke $r5.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i7, $d17);

        i7 = i7 + 1;

        goto label92;

     label93:
        s9 = 120;

        goto label06;
    }
    private void update(double, double, int)
    {
        org.apache.commons.math3.optimization.direct.BOBYQAOptimizer r0;
        double $d0, $d1, d2, d3, d4, d5, $d6, $d7;
        int $i0, i1, $i2, $i3, $i4, i5, $i7;
        org.apache.commons.math3.linear.ArrayRealVector r1, $r4, $r5;
        org.apache.commons.math3.linear.Array2DRowRealMatrix $r2, $r3;
        byte $b6;

        r0 := @this: org.apache.commons.math3.optimization.direct.BOBYQAOptimizer;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $i0 := @parameter2: int;

        staticinvoke <org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: void printMethod()>();

        r1 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector currentBest>;

        $i2 = virtualinvoke r1.<org.apache.commons.math3.linear.ArrayRealVector: int getDimension()>();

        $i3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: int numberOfInterpolationPoints>;

        i1 = $i3 - $i2;

        i1 = i1 + -1;

        r1 = new org.apache.commons.math3.linear.ArrayRealVector;

        $i4 = $i3 + $i2;

        specialinvoke r1.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>($i4);

        d5 = 0.0;

        $i4 = 0;

     label01:
        if $i4 >= $i3 goto label04;

        i5 = 0;

     label02:
        if i5 >= i1 goto label03;

        $r2 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        d2 = virtualinvoke $r2.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>($i4, i5);

        d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d2);

        d5 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(d5, d2);

        i5 = i5 + 1;

        goto label02;

     label03:
        $i4 = $i4 + 1;

        goto label01;

     label04:
        d5 = d5 * 1.0E-20;

        $i4 = 1;

     label05:
        if $i4 >= i1 goto label08;

        $r2 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        d2 = virtualinvoke $r2.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>($i0, $i4);

        d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d2);

        $b6 = d2 cmpl d5;

        if $b6 <= 0 goto label07;

        $r2 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        d3 = virtualinvoke $r2.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>($i0, 0);

        $r2 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        d2 = virtualinvoke $r2.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>($i0, $i4);

        d3 = d3 * d3;

        d2 = d2 * d2;

        d2 = d3 + d2;

        d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(d2);

        $r2 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        d2 = virtualinvoke $r2.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>($i0, 0);

        d2 = d2 / d3;

        $r2 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        d4 = virtualinvoke $r2.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>($i0, $i4);

        d3 = d4 / d3;

        i5 = 0;

     label06:
        if i5 >= $i3 goto label07;

        $r2 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        d4 = virtualinvoke $r2.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i5, 0);

        d4 = d4 * d2;

        $r2 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        $d6 = virtualinvoke $r2.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i5, $i4);

        $d6 = $d6 * d3;

        d4 = d4 + $d6;

        $r2 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        $d6 = virtualinvoke $r3.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i5, $i4);

        $d6 = $d6 * d2;

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        $d7 = virtualinvoke $r3.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i5, 0);

        $d7 = $d7 * d3;

        $d6 = $d6 - $d7;

        virtualinvoke $r2.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>(i5, $i4, $d6);

        $r2 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        virtualinvoke $r2.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>(i5, 0, d4);

        i5 = i5 + 1;

        goto label06;

     label07:
        $r2 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        virtualinvoke $r2.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>($i0, $i4, 0.0);

        $i4 = $i4 + 1;

        goto label05;

     label08:
        i1 = 0;

     label09:
        if i1 >= $i3 goto label10;

        $r2 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        d5 = virtualinvoke $r2.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>($i0, 0);

        $r2 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        d2 = virtualinvoke $r2.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i1, 0);

        d5 = d5 * d2;

        virtualinvoke r1.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d5);

        i1 = i1 + 1;

        goto label09;

     label10:
        d5 = virtualinvoke r1.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint>;

        d2 = virtualinvoke $r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint>;

        $r5 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint>;

        d3 = virtualinvoke $r5.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>($i0);

        d3 = d3 - 1.0;

        virtualinvoke $r4.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>($i0, d3);

        d4 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>($d1);

        d3 = d2 / d4;

        $r2 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        $d6 = virtualinvoke $r2.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>($i0, 0);

        d4 = $d6 / d4;

        i1 = 0;

     label11:
        if i1 >= $i3 goto label12;

        $r2 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix zMatrix>;

        $d6 = virtualinvoke $r3.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i1, 0);

        $d6 = $d6 * d3;

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint>;

        $d7 = virtualinvoke $r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        $d7 = $d7 * d4;

        $d6 = $d6 - $d7;

        virtualinvoke $r2.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>(i1, 0, $d6);

        i1 = i1 + 1;

        goto label11;

     label12:
        $i4 = 0;

     label13:
        if $i4 >= $i2 goto label17;

        i1 = $i3 + $i4;

        $r2 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix>;

        d3 = virtualinvoke $r2.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>($i0, $i4);

        virtualinvoke r1.<org.apache.commons.math3.linear.ArrayRealVector: void setEntry(int,double)>(i1, d3);

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint>;

        d3 = virtualinvoke $r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        d3 = d3 * d5;

        d4 = virtualinvoke r1.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        d4 = d4 * d2;

        d3 = d3 - d4;

        d3 = d3 / $d1;

        d4 = neg $d0;

        $d6 = virtualinvoke r1.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        d4 = d4 * $d6;

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint>;

        $d6 = virtualinvoke $r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i1);

        $d6 = $d6 * d2;

        d4 = d4 - $d6;

        d4 = d4 / $d1;

        i5 = 0;

     label14:
        if i5 > i1 goto label16;

        $r2 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix>;

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix>;

        $d6 = virtualinvoke $r3.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i5, $i4);

        $r4 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector lagrangeValuesAtNewPoint>;

        $d7 = virtualinvoke $r4.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i5);

        $d7 = $d7 * d3;

        $d6 = $d6 + $d7;

        $d7 = virtualinvoke r1.<org.apache.commons.math3.linear.ArrayRealVector: double getEntry(int)>(i5);

        $d7 = $d7 * d4;

        $d6 = $d6 + $d7;

        virtualinvoke $r2.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>(i5, $i4, $d6);

        if i5 < $i3 goto label15;

        $r2 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix>;

        $i7 = i5 - $i3;

        $r3 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.Array2DRowRealMatrix bMatrix>;

        $d6 = virtualinvoke $r3.<org.apache.commons.math3.linear.Array2DRowRealMatrix: double getEntry(int,int)>(i5, $i4);

        virtualinvoke $r2.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void setEntry(int,int,double)>(i1, $i7, $d6);

     label15:
        i5 = i5 + 1;

        goto label14;

     label16:
        $i4 = $i4 + 1;

        goto label13;

     label17:
        return;
    }
    protected org.apache.commons.math3.optimization.PointValuePair doOptimize()
    {
        org.apache.commons.math3.optimization.direct.BOBYQAOptimizer r0;
        boolean $z0;
        double[] $r1, $r2, $r6;
        org.apache.commons.math3.optimization.GoalType $r3, $r4;
        org.apache.commons.math3.linear.ArrayRealVector $r5;
        double $d0, d1;
        org.apache.commons.math3.optimization.PointValuePair $r7;

        r0 := @this: org.apache.commons.math3.optimization.direct.BOBYQAOptimizer;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double[] getLowerBound()>();

        $r2 = virtualinvoke r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double[] getUpperBound()>();

        specialinvoke r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: void setup(double[],double[])>($r1, $r2);

        $r3 = virtualinvoke r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.optimization.GoalType getGoalType()>();

        $r4 = <org.apache.commons.math3.optimization.GoalType: org.apache.commons.math3.optimization.GoalType MINIMIZE>;

        if $r3 != $r4 goto label3;

        $z0 = 1;

     label1:
        r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: boolean isMinimize> = $z0;

        $r5 = new org.apache.commons.math3.linear.ArrayRealVector;

        $r6 = virtualinvoke r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double[] getStartPoint()>();

        specialinvoke $r5.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(double[])>($r6);

        r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector currentBest> = $r5;

        $d0 = specialinvoke r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: double bobyqa(double[],double[])>($r1, $r2);

        d1 = $d0;

        $r7 = new org.apache.commons.math3.optimization.PointValuePair;

        $r5 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: org.apache.commons.math3.linear.ArrayRealVector currentBest>;

        $r1 = virtualinvoke $r5.<org.apache.commons.math3.linear.ArrayRealVector: double[] getDataRef()>();

        $z0 = r0.<org.apache.commons.math3.optimization.direct.BOBYQAOptimizer: boolean isMinimize>;

        if $z0 == 0 goto label4;

     label2:
        specialinvoke $r7.<org.apache.commons.math3.optimization.PointValuePair: void <init>(double[],double)>($r1, d1);

        return $r7;

     label3:
        $z0 = 0;

        goto label1;

     label4:
        d1 = neg $d0;

        goto label2;
    }
