org.apache.commons.math3.optimization.general.AbstractDifferentiableOptimizer extends org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer
private org.apache.commons.math3.analysis.MultivariateVectorFunction gradient
    protected void <init>(org.apache.commons.math3.optimization.ConvergenceChecker)
    {
        org.apache.commons.math3.optimization.general.AbstractDifferentiableOptimizer r0;
        org.apache.commons.math3.optimization.ConvergenceChecker r1;

        r0 := @this: org.apache.commons.math3.optimization.general.AbstractDifferentiableOptimizer;

        r1 := @parameter0: org.apache.commons.math3.optimization.ConvergenceChecker;

        specialinvoke r0.<org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer: void <init>(org.apache.commons.math3.optimization.ConvergenceChecker)>(r1);

        return;
    }
    protected double[] computeObjectiveGradient(double[])
    {
        org.apache.commons.math3.optimization.general.AbstractDifferentiableOptimizer r0;
        double[] $r1;
        org.apache.commons.math3.analysis.MultivariateVectorFunction $r2;

        r0 := @this: org.apache.commons.math3.optimization.general.AbstractDifferentiableOptimizer;

        $r1 := @parameter0: double[];

        $r2 = r0.<org.apache.commons.math3.optimization.general.AbstractDifferentiableOptimizer: org.apache.commons.math3.analysis.MultivariateVectorFunction gradient>;

        $r1 = interfaceinvoke $r2.<org.apache.commons.math3.analysis.MultivariateVectorFunction: double[] value(double[])>($r1);

        return $r1;
    }
    protected volatile org.apache.commons.math3.optimization.PointValuePair optimizeInternal(int, org.apache.commons.math3.analysis.MultivariateFunction, org.apache.commons.math3.optimization.GoalType, double[])
    {
        org.apache.commons.math3.optimization.general.AbstractDifferentiableOptimizer r0;
        int $i0;
        org.apache.commons.math3.optimization.GoalType $r1;
        double[] $r2;
        org.apache.commons.math3.optimization.PointValuePair $r3;
        org.apache.commons.math3.analysis.MultivariateFunction $r4;
        org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction $r5;

        r0 := @this: org.apache.commons.math3.optimization.general.AbstractDifferentiableOptimizer;

        $i0 := @parameter0: int;

        $r4 := @parameter1: org.apache.commons.math3.analysis.MultivariateFunction;

        $r1 := @parameter2: org.apache.commons.math3.optimization.GoalType;

        $r2 := @parameter3: double[];

        $r5 = (org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction) $r4;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.optimization.general.AbstractDifferentiableOptimizer: org.apache.commons.math3.optimization.PointValuePair optimizeInternal(int,org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction,org.apache.commons.math3.optimization.GoalType,double[])>($i0, $r5, $r1, $r2);

        return $r3;
    }
    protected volatile org.apache.commons.math3.optimization.PointValuePair optimizeInternal(int, org.apache.commons.math3.analysis.MultivariateFunction, org.apache.commons.math3.optimization.GoalType, org.apache.commons.math3.optimization.OptimizationData[]) throws org.apache.commons.math3.exception.TooManyEvaluationsException
    {
        org.apache.commons.math3.optimization.general.AbstractDifferentiableOptimizer r0;
        int $i0;
        org.apache.commons.math3.optimization.GoalType $r1;
        org.apache.commons.math3.optimization.OptimizationData[] $r2;
        org.apache.commons.math3.optimization.PointValuePair $r3;
        org.apache.commons.math3.analysis.MultivariateFunction $r4;
        org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction $r5;

        r0 := @this: org.apache.commons.math3.optimization.general.AbstractDifferentiableOptimizer;

        $i0 := @parameter0: int;

        $r4 := @parameter1: org.apache.commons.math3.analysis.MultivariateFunction;

        $r1 := @parameter2: org.apache.commons.math3.optimization.GoalType;

        $r2 := @parameter3: org.apache.commons.math3.optimization.OptimizationData[];

        $r5 = (org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction) $r4;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.optimization.general.AbstractDifferentiableOptimizer: org.apache.commons.math3.optimization.PointValuePair optimizeInternal(int,org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction,org.apache.commons.math3.optimization.GoalType,org.apache.commons.math3.optimization.OptimizationData[])>($i0, $r5, $r1, $r2);

        return $r3;
    }
    protected org.apache.commons.math3.optimization.PointValuePair optimizeInternal(int, org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction, org.apache.commons.math3.optimization.GoalType, double[])
    {
        org.apache.commons.math3.optimization.general.AbstractDifferentiableOptimizer r0;
        int $i0;
        org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction $r1;
        org.apache.commons.math3.optimization.GoalType $r2;
        double[] $r3;
        org.apache.commons.math3.optimization.InitialGuess $r4;
        org.apache.commons.math3.optimization.PointValuePair $r5;
        org.apache.commons.math3.optimization.OptimizationData[] $r6;

        r0 := @this: org.apache.commons.math3.optimization.general.AbstractDifferentiableOptimizer;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction;

        $r2 := @parameter2: org.apache.commons.math3.optimization.GoalType;

        $r3 := @parameter3: double[];

        $r6 = newarray (org.apache.commons.math3.optimization.OptimizationData)[1];

        $r4 = new org.apache.commons.math3.optimization.InitialGuess;

        specialinvoke $r4.<org.apache.commons.math3.optimization.InitialGuess: void <init>(double[])>($r3);

        $r6[0] = $r4;

        $r5 = virtualinvoke r0.<org.apache.commons.math3.optimization.general.AbstractDifferentiableOptimizer: org.apache.commons.math3.optimization.PointValuePair optimizeInternal(int,org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction,org.apache.commons.math3.optimization.GoalType,org.apache.commons.math3.optimization.OptimizationData[])>($i0, $r1, $r2, $r6);

        return $r5;
    }
    protected transient org.apache.commons.math3.optimization.PointValuePair optimizeInternal(int, org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction, org.apache.commons.math3.optimization.GoalType, org.apache.commons.math3.optimization.OptimizationData[])
    {
        org.apache.commons.math3.optimization.general.AbstractDifferentiableOptimizer r0;
        int $i0;
        org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction $r1;
        org.apache.commons.math3.optimization.GoalType $r2;
        org.apache.commons.math3.optimization.OptimizationData[] $r3;
        org.apache.commons.math3.optimization.PointValuePair $r4;
        org.apache.commons.math3.analysis.differentiation.GradientFunction $r5;

        r0 := @this: org.apache.commons.math3.optimization.general.AbstractDifferentiableOptimizer;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction;

        $r2 := @parameter2: org.apache.commons.math3.optimization.GoalType;

        $r3 := @parameter3: org.apache.commons.math3.optimization.OptimizationData[];

        $r5 = new org.apache.commons.math3.analysis.differentiation.GradientFunction;

        specialinvoke $r5.<org.apache.commons.math3.analysis.differentiation.GradientFunction: void <init>(org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction)>($r1);

        r0.<org.apache.commons.math3.optimization.general.AbstractDifferentiableOptimizer: org.apache.commons.math3.analysis.MultivariateVectorFunction gradient> = $r5;

        $r4 = specialinvoke r0.<org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer: org.apache.commons.math3.optimization.PointValuePair optimizeInternal(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,org.apache.commons.math3.optimization.OptimizationData[])>($i0, $r1, $r2, $r3);

        return $r4;
    }
