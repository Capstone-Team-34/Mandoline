org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer extends java.lang.Object implements org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer
private org.apache.commons.math3.random.RandomGenerator generator
private int maxEvaluations
private org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair[] optima
private final org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer optimizer
private int starts
private int totalEvaluations
    public void <init>(org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer, int, org.apache.commons.math3.random.RandomGenerator)
    {
        org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer r0;
        org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer r1;
        int $i0;
        org.apache.commons.math3.random.RandomGenerator $r2;
        java.lang.Integer $r3;
        org.apache.commons.math3.exception.NullArgumentException $r4;
        org.apache.commons.math3.exception.NotStrictlyPositiveException $r5;

        r0 := @this: org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer;

        r1 := @parameter0: org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer;

        $i0 := @parameter1: int;

        $r2 := @parameter2: org.apache.commons.math3.random.RandomGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        if $r2 != null goto label2;

     label1:
        $r4 = new org.apache.commons.math3.exception.NullArgumentException;

        specialinvoke $r4.<org.apache.commons.math3.exception.NullArgumentException: void <init>()>();

        throw $r4;

     label2:
        if $i0 >= 1 goto label3;

        $r5 = new org.apache.commons.math3.exception.NotStrictlyPositiveException;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        specialinvoke $r5.<org.apache.commons.math3.exception.NotStrictlyPositiveException: void <init>(java.lang.Number)>($r3);

        throw $r5;

     label3:
        r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer optimizer> = r1;

        r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: int starts> = $i0;

        r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: org.apache.commons.math3.random.RandomGenerator generator> = $r2;

        return;
    }
    private void sortPairs(org.apache.commons.math3.optimization.GoalType)
    {
        org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer r0;
        org.apache.commons.math3.optimization.GoalType $r1;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair[] $r2;
        org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer$1 $r3;

        r0 := @this: org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer;

        $r1 := @parameter0: org.apache.commons.math3.optimization.GoalType;

        $r2 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair[] optima>;

        $r3 = new org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer$1;

        specialinvoke $r3.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer$1: void <init>(org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer,org.apache.commons.math3.optimization.GoalType)>(r0, $r1);

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($r2, $r3);

        return;
    }
    public org.apache.commons.math3.optimization.ConvergenceChecker getConvergenceChecker()
    {
        org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer r0;
        org.apache.commons.math3.optimization.ConvergenceChecker $r1;
        org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer $r2;

        r0 := @this: org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer;

        $r2 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer optimizer>;

        $r1 = interfaceinvoke $r2.<org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer: org.apache.commons.math3.optimization.ConvergenceChecker getConvergenceChecker()>();

        return $r1;
    }
    public int getEvaluations()
    {
        org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer r0;
        int i0;

        r0 := @this: org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer;

        i0 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: int totalEvaluations>;

        return i0;
    }
    public int getMaxEvaluations()
    {
        org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer r0;
        int i0;

        r0 := @this: org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer;

        i0 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: int maxEvaluations>;

        return i0;
    }
    public org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair[] getOptima()
    {
        org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer r0;
        org.apache.commons.math3.exception.util.LocalizedFormats $r1;
        java.lang.Object $r2;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair[] $r3;
        org.apache.commons.math3.exception.MathIllegalStateException $r4;
        java.lang.Object[] $r5;

        r0 := @this: org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer;

        $r3 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair[] optima>;

        if $r3 != null goto label1;

        $r4 = new org.apache.commons.math3.exception.MathIllegalStateException;

        $r1 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats NO_OPTIMUM_COMPUTED_YET>;

        $r5 = newarray (java.lang.Object)[0];

        specialinvoke $r4.<org.apache.commons.math3.exception.MathIllegalStateException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r1, $r5);

        throw $r4;

     label1:
        $r3 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair[] optima>;

        $r2 = virtualinvoke $r3.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair[]) $r2;

        return $r3;
    }
    public org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair optimize(int, org.apache.commons.math3.analysis.UnivariateFunction, org.apache.commons.math3.optimization.GoalType, double, double)
    {
        org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer r0;
        int $i0;
        org.apache.commons.math3.analysis.UnivariateFunction r1;
        org.apache.commons.math3.optimization.GoalType $r2;
        double $d0, $d1, $d2;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair $r3;

        r0 := @this: org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer;

        $i0 := @parameter0: int;

        r1 := @parameter1: org.apache.commons.math3.analysis.UnivariateFunction;

        $r2 := @parameter2: org.apache.commons.math3.optimization.GoalType;

        $d0 := @parameter3: double;

        $d1 := @parameter4: double;

        $d2 = $d1 - $d0;

        $d2 = 0.5 * $d2;

        $d2 = $d0 + $d2;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair optimize(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optimization.GoalType,double,double,double)>($i0, r1, $r2, $d0, $d1, $d2);

        return $r3;
    }
    public org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair optimize(int, org.apache.commons.math3.analysis.UnivariateFunction, org.apache.commons.math3.optimization.GoalType, double, double, double)
    {
        org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer r0;
        int $i0, $i1, $i2, $i3;
        org.apache.commons.math3.analysis.UnivariateFunction r1;
        org.apache.commons.math3.optimization.GoalType $r2;
        double $d0, $d1, $d2, d3, $d4;
        java.lang.RuntimeException r3;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair[] $r4;
        org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer $r5;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair $r6;
        org.apache.commons.math3.random.RandomGenerator $r7;

        r0 := @this: org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer;

        $i0 := @parameter0: int;

        r1 := @parameter1: org.apache.commons.math3.analysis.UnivariateFunction;

        $r2 := @parameter2: org.apache.commons.math3.optimization.GoalType;

        $d0 := @parameter3: double;

        $d1 := @parameter4: double;

        $d2 := @parameter5: double;

        r3 = null;

        $i1 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: int starts>;

        $r4 = newarray (org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair)[$i1];

        r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair[] optima> = $r4;

        r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: int totalEvaluations> = 0;

        $i1 = 0;

     label01:
        $i2 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: int starts>;

        if $i1 >= $i2 goto label09;

        if $i1 != 0 goto label06;

        d3 = $d2;

     label02:
        $r4 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair[] optima>;

        $r5 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer optimizer>;

        $i2 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: int totalEvaluations>;

     label03:
        $i2 = $i0 - $i2;

     label04:
        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer: org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair optimize(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optimization.GoalType,double,double,double)>($i2, r1, $r2, $d0, $d1, d3);

        $r4[$i1] = $r6;

     label05:
        $i2 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: int totalEvaluations>;

        $r5 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer optimizer>;

        $i3 = interfaceinvoke $r5.<org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer: int getEvaluations()>();

        $i2 = $i2 + $i3;

        r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: int totalEvaluations> = $i2;

        $i1 = $i1 + 1;

        goto label01;

     label06:
        $r7 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: org.apache.commons.math3.random.RandomGenerator generator>;

        d3 = interfaceinvoke $r7.<org.apache.commons.math3.random.RandomGenerator: double nextDouble()>();

     label07:
        $d4 = $d1 - $d0;

        d3 = d3 * $d4;

        d3 = $d0 + d3;

        goto label02;

     label08:
        r3 := @caughtexception;

        $r4 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair[] optima>;

        $r4[$i1] = null;

        goto label05;

     label09:
        specialinvoke r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: void sortPairs(org.apache.commons.math3.optimization.GoalType)>($r2);

        $r4 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair[] optima>;

        $r6 = $r4[0];

        if $r6 != null goto label10;

        throw r3;

     label10:
        $r4 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair[] optima>;

        $r6 = $r4[0];

        return $r6;

        catch java.lang.RuntimeException from label02 to label03 with label08;
        catch java.lang.RuntimeException from label04 to label05 with label08;
        catch java.lang.RuntimeException from label06 to label07 with label08;
    }
