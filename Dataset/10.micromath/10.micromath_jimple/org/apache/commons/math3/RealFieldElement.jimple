org.apache.commons.math3.RealFieldElement extends java.lang.Object implements org.apache.commons.math3.FieldElement
public abstract java.lang.Object abs() { 
// no body
} 
public abstract java.lang.Object acos() { 
// no body
} 
public abstract java.lang.Object acosh() { 
// no body
} 
public abstract java.lang.Object add(double) { 
// no body
} 
public abstract java.lang.Object asin() { 
// no body
} 
public abstract java.lang.Object asinh() { 
// no body
} 
public abstract java.lang.Object atan() { 
// no body
} 
public abstract java.lang.Object atan2(java.lang.Object) throws org.apache.commons.math3.exception.DimensionMismatchException { 
// no body
} 
public abstract java.lang.Object atanh() { 
// no body
} 
public abstract java.lang.Object cbrt() { 
// no body
} 
public abstract java.lang.Object ceil() { 
// no body
} 
public abstract java.lang.Object copySign(double) { 
// no body
} 
public abstract java.lang.Object copySign(java.lang.Object) { 
// no body
} 
public abstract java.lang.Object cos() { 
// no body
} 
public abstract java.lang.Object cosh() { 
// no body
} 
public abstract java.lang.Object divide(double) { 
// no body
} 
public abstract java.lang.Object exp() { 
// no body
} 
public abstract java.lang.Object expm1() { 
// no body
} 
public abstract java.lang.Object floor() { 
// no body
} 
public abstract double getReal() { 
// no body
} 
public abstract java.lang.Object hypot(java.lang.Object) throws org.apache.commons.math3.exception.DimensionMismatchException { 
// no body
} 
public abstract java.lang.Object linearCombination(double, java.lang.Object, double, java.lang.Object) { 
// no body
} 
public abstract java.lang.Object linearCombination(double, java.lang.Object, double, java.lang.Object, double, java.lang.Object) { 
// no body
} 
public abstract java.lang.Object linearCombination(double, java.lang.Object, double, java.lang.Object, double, java.lang.Object, double, java.lang.Object) { 
// no body
} 
public abstract java.lang.Object linearCombination(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object) { 
// no body
} 
public abstract java.lang.Object linearCombination(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object) { 
// no body
} 
public abstract java.lang.Object linearCombination(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object) { 
// no body
} 
public abstract java.lang.Object linearCombination(double[], java.lang.Object[]) throws org.apache.commons.math3.exception.DimensionMismatchException { 
// no body
} 
public abstract java.lang.Object linearCombination(java.lang.Object[], java.lang.Object[]) throws org.apache.commons.math3.exception.DimensionMismatchException { 
// no body
} 
public abstract java.lang.Object log() { 
// no body
} 
public abstract java.lang.Object log1p() { 
// no body
} 
public abstract java.lang.Object multiply(double) { 
// no body
} 
public abstract java.lang.Object pow(double) { 
// no body
} 
public abstract java.lang.Object pow(int) { 
// no body
} 
public abstract java.lang.Object pow(java.lang.Object) throws org.apache.commons.math3.exception.DimensionMismatchException { 
// no body
} 
public abstract java.lang.Object reciprocal() { 
// no body
} 
public abstract java.lang.Object remainder(double) { 
// no body
} 
public abstract java.lang.Object remainder(java.lang.Object) throws org.apache.commons.math3.exception.DimensionMismatchException { 
// no body
} 
public abstract java.lang.Object rint() { 
// no body
} 
public abstract java.lang.Object rootN(int) { 
// no body
} 
public abstract long round() { 
// no body
} 
public abstract java.lang.Object scalb(int) { 
// no body
} 
public abstract java.lang.Object signum() { 
// no body
} 
public abstract java.lang.Object sin() { 
// no body
} 
public abstract java.lang.Object sinh() { 
// no body
} 
public abstract java.lang.Object sqrt() { 
// no body
} 
public abstract java.lang.Object subtract(double) { 
// no body
} 
public abstract java.lang.Object tan() { 
// no body
} 
public abstract java.lang.Object tanh() { 
// no body
} 
