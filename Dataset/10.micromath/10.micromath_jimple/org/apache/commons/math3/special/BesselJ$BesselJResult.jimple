org.apache.commons.math3.special.BesselJ$BesselJResult extends java.lang.Object
private final int nVals
private final double[] vals
    public void <init>(double[], int)
    {
        org.apache.commons.math3.special.BesselJ$BesselJResult r0;
        double[] $r1;
        int $i0, $i1;

        r0 := @this: org.apache.commons.math3.special.BesselJ$BesselJResult;

        $r1 := @parameter0: double[];

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = lengthof $r1;

        $r1 = staticinvoke <org.apache.commons.math3.util.MathArrays: double[] copyOf(double[],int)>($r1, $i1);

        r0.<org.apache.commons.math3.special.BesselJ$BesselJResult: double[] vals> = $r1;

        r0.<org.apache.commons.math3.special.BesselJ$BesselJResult: int nVals> = $i0;

        return;
    }
    static int access$000(org.apache.commons.math3.special.BesselJ$BesselJResult)
    {
        org.apache.commons.math3.special.BesselJ$BesselJResult $r0;
        int i0;

        $r0 := @parameter0: org.apache.commons.math3.special.BesselJ$BesselJResult;

        i0 = $r0.<org.apache.commons.math3.special.BesselJ$BesselJResult: int nVals>;

        return i0;
    }
    static double[] access$100(org.apache.commons.math3.special.BesselJ$BesselJResult)
    {
        org.apache.commons.math3.special.BesselJ$BesselJResult $r0;
        double[] r1;

        $r0 := @parameter0: org.apache.commons.math3.special.BesselJ$BesselJResult;

        r1 = $r0.<org.apache.commons.math3.special.BesselJ$BesselJResult: double[] vals>;

        return r1;
    }
    public double[] getVals()
    {
        org.apache.commons.math3.special.BesselJ$BesselJResult r0;
        double[] $r1, $r2;
        int $i0;

        r0 := @this: org.apache.commons.math3.special.BesselJ$BesselJResult;

        $r1 = r0.<org.apache.commons.math3.special.BesselJ$BesselJResult: double[] vals>;

        $r2 = r0.<org.apache.commons.math3.special.BesselJ$BesselJResult: double[] vals>;

        $i0 = lengthof $r2;

        $r1 = staticinvoke <org.apache.commons.math3.util.MathArrays: double[] copyOf(double[],int)>($r1, $i0);

        return $r1;
    }
    public int getnVals()
    {
        org.apache.commons.math3.special.BesselJ$BesselJResult r0;
        int i0;

        r0 := @this: org.apache.commons.math3.special.BesselJ$BesselJResult;

        i0 = r0.<org.apache.commons.math3.special.BesselJ$BesselJResult: int nVals>;

        return i0;
    }
