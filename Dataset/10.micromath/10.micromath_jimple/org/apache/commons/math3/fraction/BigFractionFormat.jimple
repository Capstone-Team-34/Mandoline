org.apache.commons.math3.fraction.BigFractionFormat extends org.apache.commons.math3.fraction.AbstractFormat implements java.io.Serializable
private static final long serialVersionUID
    public void <init>()
    {
        org.apache.commons.math3.fraction.BigFractionFormat r0;

        r0 := @this: org.apache.commons.math3.fraction.BigFractionFormat;

        specialinvoke r0.<org.apache.commons.math3.fraction.AbstractFormat: void <init>()>();

        return;
    }
    public void <init>(java.text.NumberFormat)
    {
        org.apache.commons.math3.fraction.BigFractionFormat r0;
        java.text.NumberFormat $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFractionFormat;

        $r1 := @parameter0: java.text.NumberFormat;

        specialinvoke r0.<org.apache.commons.math3.fraction.AbstractFormat: void <init>(java.text.NumberFormat)>($r1);

        return;
    }
    public void <init>(java.text.NumberFormat, java.text.NumberFormat)
    {
        org.apache.commons.math3.fraction.BigFractionFormat r0;
        java.text.NumberFormat $r1, $r2;

        r0 := @this: org.apache.commons.math3.fraction.BigFractionFormat;

        $r1 := @parameter0: java.text.NumberFormat;

        $r2 := @parameter1: java.text.NumberFormat;

        specialinvoke r0.<org.apache.commons.math3.fraction.AbstractFormat: void <init>(java.text.NumberFormat,java.text.NumberFormat)>($r1, $r2);

        return;
    }
    public static java.lang.String formatBigFraction(org.apache.commons.math3.fraction.BigFraction)
    {
        org.apache.commons.math3.fraction.BigFraction $r0;
        org.apache.commons.math3.fraction.BigFractionFormat $r1;
        java.lang.String $r2;

        $r0 := @parameter0: org.apache.commons.math3.fraction.BigFraction;

        $r1 = staticinvoke <org.apache.commons.math3.fraction.BigFractionFormat: org.apache.commons.math3.fraction.BigFractionFormat getImproperInstance()>();

        $r2 = virtualinvoke $r1.<org.apache.commons.math3.fraction.BigFractionFormat: java.lang.String format(java.lang.Object)>($r0);

        return $r2;
    }
    public static java.util.Locale[] getAvailableLocales()
    {
        java.util.Locale[] $r0;

        $r0 = staticinvoke <java.text.NumberFormat: java.util.Locale[] getAvailableLocales()>();

        return $r0;
    }
    public static org.apache.commons.math3.fraction.BigFractionFormat getImproperInstance()
    {
        java.util.Locale $r0;
        org.apache.commons.math3.fraction.BigFractionFormat $r1;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = staticinvoke <org.apache.commons.math3.fraction.BigFractionFormat: org.apache.commons.math3.fraction.BigFractionFormat getImproperInstance(java.util.Locale)>($r0);

        return $r1;
    }
    public static org.apache.commons.math3.fraction.BigFractionFormat getImproperInstance(java.util.Locale)
    {
        java.util.Locale $r0;
        org.apache.commons.math3.fraction.BigFractionFormat $r1;
        java.text.NumberFormat $r2;

        $r0 := @parameter0: java.util.Locale;

        $r1 = new org.apache.commons.math3.fraction.BigFractionFormat;

        $r2 = staticinvoke <org.apache.commons.math3.fraction.BigFractionFormat: java.text.NumberFormat getDefaultNumberFormat(java.util.Locale)>($r0);

        specialinvoke $r1.<org.apache.commons.math3.fraction.BigFractionFormat: void <init>(java.text.NumberFormat)>($r2);

        return $r1;
    }
    public static org.apache.commons.math3.fraction.BigFractionFormat getProperInstance()
    {
        java.util.Locale $r0;
        org.apache.commons.math3.fraction.BigFractionFormat $r1;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = staticinvoke <org.apache.commons.math3.fraction.BigFractionFormat: org.apache.commons.math3.fraction.BigFractionFormat getProperInstance(java.util.Locale)>($r0);

        return $r1;
    }
    public static org.apache.commons.math3.fraction.BigFractionFormat getProperInstance(java.util.Locale)
    {
        java.util.Locale $r0;
        org.apache.commons.math3.fraction.ProperBigFractionFormat $r1;
        java.text.NumberFormat $r2;

        $r0 := @parameter0: java.util.Locale;

        $r1 = new org.apache.commons.math3.fraction.ProperBigFractionFormat;

        $r2 = staticinvoke <org.apache.commons.math3.fraction.BigFractionFormat: java.text.NumberFormat getDefaultNumberFormat(java.util.Locale)>($r0);

        specialinvoke $r1.<org.apache.commons.math3.fraction.ProperBigFractionFormat: void <init>(java.text.NumberFormat)>($r2);

        return $r1;
    }
    public java.lang.StringBuffer format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition)
    {
        org.apache.commons.math3.fraction.BigFractionFormat r0;
        java.lang.StringBuffer $r1;
        java.text.FieldPosition $r2;
        java.lang.Object r3;
        boolean $z0;
        org.apache.commons.math3.fraction.BigFraction r4;
        java.math.BigInteger r5;
        java.lang.Number r6;
        double $d0;
        org.apache.commons.math3.exception.MathIllegalArgumentException $r7;
        org.apache.commons.math3.exception.util.LocalizedFormats $r8;
        java.lang.Object[] $r9;

        r0 := @this: org.apache.commons.math3.fraction.BigFractionFormat;

        r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.StringBuffer;

        $r2 := @parameter2: java.text.FieldPosition;

        $z0 = r3 instanceof org.apache.commons.math3.fraction.BigFraction;

        if $z0 == 0 goto label1;

        r4 = (org.apache.commons.math3.fraction.BigFraction) r3;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFractionFormat: java.lang.StringBuffer format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition)>(r4, $r1, $r2);

        return $r1;

     label1:
        $z0 = r3 instanceof java.math.BigInteger;

        if $z0 == 0 goto label2;

        r4 = new org.apache.commons.math3.fraction.BigFraction;

        r5 = (java.math.BigInteger) r3;

        specialinvoke r4.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger)>(r5);

        $r1 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFractionFormat: java.lang.StringBuffer format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition)>(r4, $r1, $r2);

        return $r1;

     label2:
        $z0 = r3 instanceof java.lang.Number;

        if $z0 == 0 goto label3;

        r4 = new org.apache.commons.math3.fraction.BigFraction;

        r6 = (java.lang.Number) r3;

        $d0 = virtualinvoke r6.<java.lang.Number: double doubleValue()>();

        specialinvoke r4.<org.apache.commons.math3.fraction.BigFraction: void <init>(double)>($d0);

        $r1 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFractionFormat: java.lang.StringBuffer format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition)>(r4, $r1, $r2);

        return $r1;

     label3:
        $r7 = new org.apache.commons.math3.exception.MathIllegalArgumentException;

        $r8 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_FORMAT_OBJECT_TO_FRACTION>;

        $r9 = newarray (java.lang.Object)[0];

        specialinvoke $r7.<org.apache.commons.math3.exception.MathIllegalArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r8, $r9);

        throw $r7;
    }
    public java.lang.StringBuffer format(org.apache.commons.math3.fraction.BigFraction, java.lang.StringBuffer, java.text.FieldPosition)
    {
        org.apache.commons.math3.fraction.BigFractionFormat r0;
        org.apache.commons.math3.fraction.BigFraction $r1;
        java.lang.StringBuffer $r2;
        java.text.FieldPosition $r3;
        java.text.NumberFormat $r4;
        java.math.BigInteger $r5;

        r0 := @this: org.apache.commons.math3.fraction.BigFractionFormat;

        $r1 := @parameter0: org.apache.commons.math3.fraction.BigFraction;

        $r2 := @parameter1: java.lang.StringBuffer;

        $r3 := @parameter2: java.text.FieldPosition;

        virtualinvoke $r3.<java.text.FieldPosition: void setBeginIndex(int)>(0);

        virtualinvoke $r3.<java.text.FieldPosition: void setEndIndex(int)>(0);

        $r4 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFractionFormat: java.text.NumberFormat getNumeratorFormat()>();

        $r5 = virtualinvoke $r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger getNumerator()>();

        virtualinvoke $r4.<java.text.NumberFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>($r5, $r2, $r3);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" / ");

        $r4 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFractionFormat: java.text.NumberFormat getDenominatorFormat()>();

        $r5 = virtualinvoke $r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger getDenominator()>();

        virtualinvoke $r4.<java.text.NumberFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>($r5, $r2, $r3);

        return $r2;
    }
    public volatile java.lang.Number parse(java.lang.String) throws java.text.ParseException
    {
        org.apache.commons.math3.fraction.BigFractionFormat r0;
        java.lang.String $r1;
        org.apache.commons.math3.fraction.BigFraction $r2;

        r0 := @this: org.apache.commons.math3.fraction.BigFractionFormat;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFractionFormat: org.apache.commons.math3.fraction.BigFraction parse(java.lang.String)>($r1);

        return $r2;
    }
    public volatile java.lang.Number parse(java.lang.String, java.text.ParsePosition)
    {
        org.apache.commons.math3.fraction.BigFractionFormat r0;
        java.lang.String $r1;
        java.text.ParsePosition $r2;
        org.apache.commons.math3.fraction.BigFraction $r3;

        r0 := @this: org.apache.commons.math3.fraction.BigFractionFormat;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.text.ParsePosition;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFractionFormat: org.apache.commons.math3.fraction.BigFraction parse(java.lang.String,java.text.ParsePosition)>($r1, $r2);

        return $r3;
    }
    public org.apache.commons.math3.fraction.BigFraction parse(java.lang.String) throws org.apache.commons.math3.exception.MathParseException
    {
        org.apache.commons.math3.fraction.BigFractionFormat r0;
        java.lang.String $r1;
        java.text.ParsePosition r2;
        org.apache.commons.math3.fraction.BigFraction $r3;
        int $i0;
        org.apache.commons.math3.exception.MathParseException $r4;

        r0 := @this: org.apache.commons.math3.fraction.BigFractionFormat;

        $r1 := @parameter0: java.lang.String;

        r2 = new java.text.ParsePosition;

        specialinvoke r2.<java.text.ParsePosition: void <init>(int)>(0);

        $r3 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFractionFormat: org.apache.commons.math3.fraction.BigFraction parse(java.lang.String,java.text.ParsePosition)>($r1, r2);

        $i0 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        if $i0 != 0 goto label1;

        $r4 = new org.apache.commons.math3.exception.MathParseException;

        $i0 = virtualinvoke r2.<java.text.ParsePosition: int getErrorIndex()>();

        specialinvoke $r4.<org.apache.commons.math3.exception.MathParseException: void <init>(java.lang.String,int,java.lang.Class)>($r1, $i0, class "Lorg/apache/commons/math3/fraction/BigFraction;");

        throw $r4;

     label1:
        return $r3;
    }
    public org.apache.commons.math3.fraction.BigFraction parse(java.lang.String, java.text.ParsePosition)
    {
        org.apache.commons.math3.fraction.BigFractionFormat r0;
        java.lang.String $r1;
        java.text.ParsePosition $r2;
        int $i0, $i1;
        java.math.BigInteger $r3, $r5;
        char $c2;
        org.apache.commons.math3.fraction.BigFraction $r4;

        r0 := @this: org.apache.commons.math3.fraction.BigFractionFormat;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.text.ParsePosition;

        $i0 = virtualinvoke $r2.<java.text.ParsePosition: int getIndex()>();

        staticinvoke <org.apache.commons.math3.fraction.BigFractionFormat: void parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)>($r1, $r2);

        $r3 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFractionFormat: java.math.BigInteger parseNextBigInteger(java.lang.String,java.text.ParsePosition)>($r1, $r2);

        if $r3 != null goto label1;

        virtualinvoke $r2.<java.text.ParsePosition: void setIndex(int)>($i0);

        return null;

     label1:
        $i1 = virtualinvoke $r2.<java.text.ParsePosition: int getIndex()>();

        $c2 = staticinvoke <org.apache.commons.math3.fraction.BigFractionFormat: char parseNextCharacter(java.lang.String,java.text.ParsePosition)>($r1, $r2);

        lookupswitch($c2)
        {
            case 0: goto label3;
            case 47: goto label4;
            default: goto label2;
        };

     label2:
        virtualinvoke $r2.<java.text.ParsePosition: void setIndex(int)>($i0);

        virtualinvoke $r2.<java.text.ParsePosition: void setErrorIndex(int)>($i1);

        return null;

     label3:
        $r4 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r4.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger)>($r3);

        return $r4;

     label4:
        staticinvoke <org.apache.commons.math3.fraction.BigFractionFormat: void parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)>($r1, $r2);

        $r5 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFractionFormat: java.math.BigInteger parseNextBigInteger(java.lang.String,java.text.ParsePosition)>($r1, $r2);

        if $r5 != null goto label5;

        virtualinvoke $r2.<java.text.ParsePosition: void setIndex(int)>($i0);

        return null;

     label5:
        $r4 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r4.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r5);

        return $r4;
    }
    protected java.math.BigInteger parseNextBigInteger(java.lang.String, java.text.ParsePosition)
    {
        org.apache.commons.math3.fraction.BigFractionFormat r0;
        java.lang.String $r1;
        java.text.ParsePosition $r2;
        java.lang.NumberFormatException r3;
        int $i0, i2, $i3;
        char $c1;
        boolean $z0;
        java.math.BigInteger r4;

        r0 := @this: org.apache.commons.math3.fraction.BigFractionFormat;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.text.ParsePosition;

        $i0 = virtualinvoke $r2.<java.text.ParsePosition: int getIndex()>();

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        if $c1 != 45 goto label2;

        i2 = $i0 + 1;

     label1:
        $i3 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i2 >= $i3 goto label3;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i2);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c1);

        if $z0 == 0 goto label3;

        i2 = i2 + 1;

        goto label1;

     label2:
        i2 = $i0;

        goto label1;

     label3:
        r4 = new java.math.BigInteger;

     label4:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, i2);

        specialinvoke r4.<java.math.BigInteger: void <init>(java.lang.String)>($r1);

        virtualinvoke $r2.<java.text.ParsePosition: void setIndex(int)>(i2);

     label5:
        return r4;

     label6:
        r3 := @caughtexception;

        virtualinvoke $r2.<java.text.ParsePosition: void setErrorIndex(int)>($i0);

        return null;

        catch java.lang.NumberFormatException from label4 to label5 with label6;
    }
