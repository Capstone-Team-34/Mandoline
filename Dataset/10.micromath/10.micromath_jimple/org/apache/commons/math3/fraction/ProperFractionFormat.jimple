org.apache.commons.math3.fraction.ProperFractionFormat extends org.apache.commons.math3.fraction.FractionFormat
private static final long serialVersionUID
private java.text.NumberFormat wholeFormat
    public void <init>()
    {
        org.apache.commons.math3.fraction.ProperFractionFormat r0;
        java.text.NumberFormat $r1;

        r0 := @this: org.apache.commons.math3.fraction.ProperFractionFormat;

        $r1 = staticinvoke <org.apache.commons.math3.fraction.ProperFractionFormat: java.text.NumberFormat getDefaultNumberFormat()>();

        specialinvoke r0.<org.apache.commons.math3.fraction.ProperFractionFormat: void <init>(java.text.NumberFormat)>($r1);

        return;
    }
    public void <init>(java.text.NumberFormat)
    {
        org.apache.commons.math3.fraction.ProperFractionFormat r0;
        java.text.NumberFormat $r1, $r3, $r4;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.math3.fraction.ProperFractionFormat;

        $r1 := @parameter0: java.text.NumberFormat;

        $r2 = virtualinvoke $r1.<java.text.NumberFormat: java.lang.Object clone()>();

        $r3 = (java.text.NumberFormat) $r2;

        $r2 = virtualinvoke $r1.<java.text.NumberFormat: java.lang.Object clone()>();

        $r4 = (java.text.NumberFormat) $r2;

        specialinvoke r0.<org.apache.commons.math3.fraction.ProperFractionFormat: void <init>(java.text.NumberFormat,java.text.NumberFormat,java.text.NumberFormat)>($r1, $r3, $r4);

        return;
    }
    public void <init>(java.text.NumberFormat, java.text.NumberFormat, java.text.NumberFormat)
    {
        org.apache.commons.math3.fraction.ProperFractionFormat r0;
        java.text.NumberFormat $r1, $r2, $r3;

        r0 := @this: org.apache.commons.math3.fraction.ProperFractionFormat;

        $r1 := @parameter0: java.text.NumberFormat;

        $r2 := @parameter1: java.text.NumberFormat;

        $r3 := @parameter2: java.text.NumberFormat;

        specialinvoke r0.<org.apache.commons.math3.fraction.FractionFormat: void <init>(java.text.NumberFormat,java.text.NumberFormat)>($r2, $r3);

        virtualinvoke r0.<org.apache.commons.math3.fraction.ProperFractionFormat: void setWholeFormat(java.text.NumberFormat)>($r1);

        return;
    }
    public java.lang.StringBuffer format(org.apache.commons.math3.fraction.Fraction, java.lang.StringBuffer, java.text.FieldPosition)
    {
        org.apache.commons.math3.fraction.ProperFractionFormat r0;
        org.apache.commons.math3.fraction.Fraction $r1;
        java.lang.StringBuffer $r2;
        java.text.FieldPosition $r3;
        int i0, $i1, $i2;
        java.text.NumberFormat $r4;
        long $l3;

        r0 := @this: org.apache.commons.math3.fraction.ProperFractionFormat;

        $r1 := @parameter0: org.apache.commons.math3.fraction.Fraction;

        $r2 := @parameter1: java.lang.StringBuffer;

        $r3 := @parameter2: java.text.FieldPosition;

        virtualinvoke $r3.<java.text.FieldPosition: void setBeginIndex(int)>(0);

        virtualinvoke $r3.<java.text.FieldPosition: void setEndIndex(int)>(0);

        $i1 = virtualinvoke $r1.<org.apache.commons.math3.fraction.Fraction: int getNumerator()>();

        $i2 = virtualinvoke $r1.<org.apache.commons.math3.fraction.Fraction: int getDenominator()>();

        i0 = $i1 / $i2;

        $i1 = $i1 % $i2;

        if i0 == 0 goto label1;

        $r4 = virtualinvoke r0.<org.apache.commons.math3.fraction.ProperFractionFormat: java.text.NumberFormat getWholeFormat()>();

        $l3 = (long) i0;

        virtualinvoke $r4.<java.text.NumberFormat: java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition)>($l3, $r2, $r3);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $i1 = staticinvoke <org.apache.commons.math3.util.FastMath: int abs(int)>($i1);

     label1:
        $r4 = virtualinvoke r0.<org.apache.commons.math3.fraction.ProperFractionFormat: java.text.NumberFormat getNumeratorFormat()>();

        $l3 = (long) $i1;

        virtualinvoke $r4.<java.text.NumberFormat: java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition)>($l3, $r2, $r3);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" / ");

        $r4 = virtualinvoke r0.<org.apache.commons.math3.fraction.ProperFractionFormat: java.text.NumberFormat getDenominatorFormat()>();

        $l3 = (long) $i2;

        virtualinvoke $r4.<java.text.NumberFormat: java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition)>($l3, $r2, $r3);

        return $r2;
    }
    public java.text.NumberFormat getWholeFormat()
    {
        org.apache.commons.math3.fraction.ProperFractionFormat r0;
        java.text.NumberFormat r1;

        r0 := @this: org.apache.commons.math3.fraction.ProperFractionFormat;

        r1 = r0.<org.apache.commons.math3.fraction.ProperFractionFormat: java.text.NumberFormat wholeFormat>;

        return r1;
    }
    public volatile java.lang.Number parse(java.lang.String, java.text.ParsePosition)
    {
        org.apache.commons.math3.fraction.ProperFractionFormat r0;
        java.lang.String $r1;
        java.text.ParsePosition $r2;
        org.apache.commons.math3.fraction.Fraction $r3;

        r0 := @this: org.apache.commons.math3.fraction.ProperFractionFormat;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.text.ParsePosition;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.fraction.ProperFractionFormat: org.apache.commons.math3.fraction.Fraction parse(java.lang.String,java.text.ParsePosition)>($r1, $r2);

        return $r3;
    }
    public org.apache.commons.math3.fraction.Fraction parse(java.lang.String, java.text.ParsePosition)
    {
        org.apache.commons.math3.fraction.ProperFractionFormat r0;
        java.lang.String $r1;
        java.text.ParsePosition $r2;
        org.apache.commons.math3.fraction.Fraction $r3;
        int $i0, $i1, $i3, $i4;
        java.text.NumberFormat $r4;
        java.lang.Number $r5, $r6, $r7;
        char $c2;

        r0 := @this: org.apache.commons.math3.fraction.ProperFractionFormat;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.text.ParsePosition;

        $r3 = specialinvoke r0.<org.apache.commons.math3.fraction.FractionFormat: org.apache.commons.math3.fraction.Fraction parse(java.lang.String,java.text.ParsePosition)>($r1, $r2);

        if $r3 == null goto label1;

        return $r3;

     label1:
        $i0 = virtualinvoke $r2.<java.text.ParsePosition: int getIndex()>();

        staticinvoke <org.apache.commons.math3.fraction.ProperFractionFormat: void parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)>($r1, $r2);

        $r4 = virtualinvoke r0.<org.apache.commons.math3.fraction.ProperFractionFormat: java.text.NumberFormat getWholeFormat()>();

        $r5 = virtualinvoke $r4.<java.text.NumberFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>($r1, $r2);

        if $r5 != null goto label2;

        virtualinvoke $r2.<java.text.ParsePosition: void setIndex(int)>($i0);

        return null;

     label2:
        staticinvoke <org.apache.commons.math3.fraction.ProperFractionFormat: void parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)>($r1, $r2);

        $r4 = virtualinvoke r0.<org.apache.commons.math3.fraction.ProperFractionFormat: java.text.NumberFormat getNumeratorFormat()>();

        $r6 = virtualinvoke $r4.<java.text.NumberFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>($r1, $r2);

        if $r6 != null goto label3;

        virtualinvoke $r2.<java.text.ParsePosition: void setIndex(int)>($i0);

        return null;

     label3:
        $i1 = virtualinvoke $r6.<java.lang.Number: int intValue()>();

        if $i1 >= 0 goto label4;

        virtualinvoke $r2.<java.text.ParsePosition: void setIndex(int)>($i0);

        return null;

     label4:
        $i1 = virtualinvoke $r2.<java.text.ParsePosition: int getIndex()>();

        $c2 = staticinvoke <org.apache.commons.math3.fraction.ProperFractionFormat: char parseNextCharacter(java.lang.String,java.text.ParsePosition)>($r1, $r2);

        lookupswitch($c2)
        {
            case 0: goto label6;
            case 47: goto label7;
            default: goto label5;
        };

     label5:
        virtualinvoke $r2.<java.text.ParsePosition: void setIndex(int)>($i0);

        virtualinvoke $r2.<java.text.ParsePosition: void setErrorIndex(int)>($i1);

        return null;

     label6:
        $r3 = new org.apache.commons.math3.fraction.Fraction;

        $i0 = virtualinvoke $r6.<java.lang.Number: int intValue()>();

        specialinvoke $r3.<org.apache.commons.math3.fraction.Fraction: void <init>(int,int)>($i0, 1);

        return $r3;

     label7:
        staticinvoke <org.apache.commons.math3.fraction.ProperFractionFormat: void parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)>($r1, $r2);

        $r4 = virtualinvoke r0.<org.apache.commons.math3.fraction.ProperFractionFormat: java.text.NumberFormat getDenominatorFormat()>();

        $r7 = virtualinvoke $r4.<java.text.NumberFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>($r1, $r2);

        if $r7 != null goto label8;

        virtualinvoke $r2.<java.text.ParsePosition: void setIndex(int)>($i0);

        return null;

     label8:
        $i1 = virtualinvoke $r7.<java.lang.Number: int intValue()>();

        if $i1 >= 0 goto label9;

        virtualinvoke $r2.<java.text.ParsePosition: void setIndex(int)>($i0);

        return null;

     label9:
        $i1 = virtualinvoke $r5.<java.lang.Number: int intValue()>();

        $i3 = virtualinvoke $r6.<java.lang.Number: int intValue()>();

        $i0 = virtualinvoke $r7.<java.lang.Number: int intValue()>();

        $r3 = new org.apache.commons.math3.fraction.Fraction;

        $i4 = staticinvoke <org.apache.commons.math3.util.FastMath: int abs(int)>($i1);

        $i4 = $i4 * $i0;

        $i3 = $i4 + $i3;

        $i1 = staticinvoke <org.apache.commons.math3.util.MathUtils: int copySign(int,int)>(1, $i1);

        $i1 = $i3 * $i1;

        specialinvoke $r3.<org.apache.commons.math3.fraction.Fraction: void <init>(int,int)>($i1, $i0);

        return $r3;
    }
    public void setWholeFormat(java.text.NumberFormat)
    {
        org.apache.commons.math3.fraction.ProperFractionFormat r0;
        java.text.NumberFormat $r1;
        org.apache.commons.math3.exception.NullArgumentException $r2;
        org.apache.commons.math3.exception.util.LocalizedFormats $r3;
        java.lang.Object[] $r4;

        r0 := @this: org.apache.commons.math3.fraction.ProperFractionFormat;

        $r1 := @parameter0: java.text.NumberFormat;

        if $r1 != null goto label1;

        $r2 = new org.apache.commons.math3.exception.NullArgumentException;

        $r3 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats WHOLE_FORMAT>;

        $r4 = newarray (java.lang.Object)[0];

        specialinvoke $r2.<org.apache.commons.math3.exception.NullArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r3, $r4);

        throw $r2;

     label1:
        r0.<org.apache.commons.math3.fraction.ProperFractionFormat: java.text.NumberFormat wholeFormat> = $r1;

        return;
    }
