org.apache.commons.math3.fraction.BigFraction extends java.lang.Number implements org.apache.commons.math3.FieldElement java.lang.Comparable java.io.Serializable
public static final org.apache.commons.math3.fraction.BigFraction FOUR_FIFTHS
public static final org.apache.commons.math3.fraction.BigFraction MINUS_ONE
public static final org.apache.commons.math3.fraction.BigFraction ONE
public static final org.apache.commons.math3.fraction.BigFraction ONE_FIFTH
public static final org.apache.commons.math3.fraction.BigFraction ONE_HALF
private static final java.math.BigInteger ONE_HUNDRED
public static final org.apache.commons.math3.fraction.BigFraction ONE_QUARTER
public static final org.apache.commons.math3.fraction.BigFraction ONE_THIRD
public static final org.apache.commons.math3.fraction.BigFraction THREE_FIFTHS
public static final org.apache.commons.math3.fraction.BigFraction THREE_QUARTERS
public static final org.apache.commons.math3.fraction.BigFraction TWO
public static final org.apache.commons.math3.fraction.BigFraction TWO_FIFTHS
public static final org.apache.commons.math3.fraction.BigFraction TWO_QUARTERS
public static final org.apache.commons.math3.fraction.BigFraction TWO_THIRDS
public static final org.apache.commons.math3.fraction.BigFraction ZERO
private static final long serialVersionUID
private final java.math.BigInteger denominator
private final java.math.BigInteger numerator
    static void <clinit>()
    {
        java.math.BigInteger $r0;
        org.apache.commons.math3.fraction.BigFraction $r1;

        $r1 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r1.<org.apache.commons.math3.fraction.BigFraction: void <init>(int)>(2);

        <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction TWO> = $r1;

        $r1 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r1.<org.apache.commons.math3.fraction.BigFraction: void <init>(int)>(1);

        <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction ONE> = $r1;

        $r1 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r1.<org.apache.commons.math3.fraction.BigFraction: void <init>(int)>(0);

        <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction ZERO> = $r1;

        $r1 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r1.<org.apache.commons.math3.fraction.BigFraction: void <init>(int)>(-1);

        <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction MINUS_ONE> = $r1;

        $r1 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r1.<org.apache.commons.math3.fraction.BigFraction: void <init>(int,int)>(4, 5);

        <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction FOUR_FIFTHS> = $r1;

        $r1 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r1.<org.apache.commons.math3.fraction.BigFraction: void <init>(int,int)>(1, 5);

        <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction ONE_FIFTH> = $r1;

        $r1 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r1.<org.apache.commons.math3.fraction.BigFraction: void <init>(int,int)>(1, 2);

        <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction ONE_HALF> = $r1;

        $r1 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r1.<org.apache.commons.math3.fraction.BigFraction: void <init>(int,int)>(1, 4);

        <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction ONE_QUARTER> = $r1;

        $r1 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r1.<org.apache.commons.math3.fraction.BigFraction: void <init>(int,int)>(1, 3);

        <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction ONE_THIRD> = $r1;

        $r1 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r1.<org.apache.commons.math3.fraction.BigFraction: void <init>(int,int)>(3, 5);

        <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction THREE_FIFTHS> = $r1;

        $r1 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r1.<org.apache.commons.math3.fraction.BigFraction: void <init>(int,int)>(3, 4);

        <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction THREE_QUARTERS> = $r1;

        $r1 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r1.<org.apache.commons.math3.fraction.BigFraction: void <init>(int,int)>(2, 5);

        <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction TWO_FIFTHS> = $r1;

        $r1 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r1.<org.apache.commons.math3.fraction.BigFraction: void <init>(int,int)>(2, 4);

        <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction TWO_QUARTERS> = $r1;

        $r1 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r1.<org.apache.commons.math3.fraction.BigFraction: void <init>(int,int)>(2, 3);

        <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction TWO_THIRDS> = $r1;

        $r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(100L);

        <org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger ONE_HUNDRED> = $r0;

        return;
    }
    public void <init>(double) throws org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        double $d0;
        long l0, l1, $l2;
        boolean $z0;
        org.apache.commons.math3.exception.MathIllegalArgumentException $r1;
        org.apache.commons.math3.exception.util.LocalizedFormats $r2;
        java.lang.Object[] $r3;
        byte $b3;
        int $i4;
        java.math.BigInteger $r4, $r5;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $d0 := @parameter0: double;

        specialinvoke r0.<java.lang.Number: void <init>()>();

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 == 0 goto label1;

        $r1 = new org.apache.commons.math3.exception.MathIllegalArgumentException;

        $r2 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats NAN_VALUE_CONVERSION>;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke $r1.<org.apache.commons.math3.exception.MathIllegalArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r2, $r3);

        throw $r1;

     label1:
        $z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d0);

        if $z0 == 0 goto label2;

        $r1 = new org.apache.commons.math3.exception.MathIllegalArgumentException;

        $r2 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats INFINITE_VALUE_CONVERSION>;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke $r1.<org.apache.commons.math3.exception.MathIllegalArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r2, $r3);

        throw $r1;

     label2:
        $l2 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        l1 = $l2 & -9223372036854775808L;

        l0 = $l2 & 9218868437227405312L;

        $l2 = $l2 & 4503599627370495L;

        $b3 = l0 cmp 0L;

        if $b3 == 0 goto label3;

        $l2 = $l2 | 4503599627370496L;

     label3:
        $b3 = l1 cmp 0L;

        if $b3 == 0 goto label4;

        $l2 = neg $l2;

     label4:
        l0 = l0 >> 52;

        $i4 = (int) l0;

        $i4 = $i4 + -1075;

     label5:
        l0 = 9007199254740990L & $l2;

        $b3 = l0 cmp 0L;

        if $b3 == 0 goto label6;

        l0 = 1L & $l2;

        $b3 = l0 cmp 0L;

        if $b3 != 0 goto label6;

        $l2 = $l2 >> 1;

        $i4 = $i4 + 1;

        goto label5;

     label6:
        if $i4 >= 0 goto label7;

        $r4 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l2);

        r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator> = $r4;

        $r4 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $i4 = neg $i4;

        $r4 = virtualinvoke $r4.<java.math.BigInteger: java.math.BigInteger flipBit(int)>($i4);

        r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator> = $r4;

        return;

     label7:
        $r4 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l2);

        $r5 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $r5 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger flipBit(int)>($i4);

        $r4 = virtualinvoke $r4.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r5);

        r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator> = $r4;

        $r4 = <java.math.BigInteger: java.math.BigInteger ONE>;

        r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator> = $r4;

        return;
    }
    public void <init>(double, double, int) throws org.apache.commons.math3.fraction.FractionConversionException
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        double $d0, $d1;
        int $i0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $i0 := @parameter2: int;

        specialinvoke r0.<org.apache.commons.math3.fraction.BigFraction: void <init>(double,double,int,int)>($d0, $d1, 2147483647, $i0);

        return;
    }
    private void <init>(double, double, int, int) throws org.apache.commons.math3.fraction.FractionConversionException
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        double $d0, $d1, d2, d3, d4, $d5;
        int $i0, $i1, i8;
        org.apache.commons.math3.fraction.FractionConversionException $r1;
        long l2, $l3, l5, l6, l7, $l9, $l10, $l11, $l12;
        byte $b4;
        java.math.BigInteger $r2;
        boolean z0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        specialinvoke r0.<java.lang.Number: void <init>()>();

        d4 = $d0;

        d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double floor(double)>($d0);

        l2 = (long) d3;

        $l3 = staticinvoke <org.apache.commons.math3.util.FastMath: long abs(long)>(l2);

        $b4 = $l3 cmp 2147483647L;

        if $b4 <= 0 goto label01;

        $r1 = new org.apache.commons.math3.fraction.FractionConversionException;

        specialinvoke $r1.<org.apache.commons.math3.fraction.FractionConversionException: void <init>(double,long,long)>($d0, l2, 1L);

        throw $r1;

     label01:
        d3 = (double) l2;

        d3 = d3 - $d0;

        d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d3);

        $b4 = d3 cmpg $d1;

        if $b4 >= 0 goto label02;

        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l2);

        r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator> = $r2;

        $r2 = <java.math.BigInteger: java.math.BigInteger ONE>;

        r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator> = $r2;

        return;

     label02:
        l5 = 1L;

        l6 = 0L;

        $l3 = l2;

        l7 = 1L;

        i8 = 0;

        z0 = 0;

     label03:
        i8 = i8 + 1;

        d3 = (double) l2;

        d3 = d4 - d3;

        d3 = 1.0 / d3;

        d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double floor(double)>(d3);

        $l9 = (long) d2;

        $l10 = $l9 * $l3;

        $l10 = $l10 + l5;

        $l11 = $l9 * l7;

        $l11 = $l11 + l6;

        $b4 = $l10 cmp 2147483647L;

        if $b4 > 0 goto label04;

        $b4 = $l11 cmp 2147483647L;

        if $b4 <= 0 goto label07;

     label04:
        $b4 = $d1 cmpl 0.0;

        if $b4 != 0 goto label06;

        l2 = staticinvoke <org.apache.commons.math3.util.FastMath: long abs(long)>(l7);

        l5 = (long) $i0;

        $b4 = l2 cmp l5;

        if $b4 >= 0 goto label06;

     label05:
        if i8 < $i1 goto label10;

        $r1 = new org.apache.commons.math3.fraction.FractionConversionException;

        specialinvoke $r1.<org.apache.commons.math3.fraction.FractionConversionException: void <init>(double,int)>($d0, $i1);

        throw $r1;

     label06:
        $r1 = new org.apache.commons.math3.fraction.FractionConversionException;

        specialinvoke $r1.<org.apache.commons.math3.fraction.FractionConversionException: void <init>(double,long,long)>($d0, $l10, $l11);

        throw $r1;

     label07:
        d2 = (double) $l10;

        $d5 = (double) $l11;

        d2 = d2 / $d5;

        if i8 >= $i1 goto label09;

        d2 = d2 - $d0;

        d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d2);

        $b4 = d2 cmpl $d1;

        if $b4 <= 0 goto label09;

        $l12 = (long) $i0;

        $b4 = $l11 cmp $l12;

        if $b4 >= 0 goto label09;

        l5 = $l3;

        $l3 = $l10;

        l6 = l7;

        l7 = $l11;

        l2 = $l9;

        d4 = d3;

     label08:
        if z0 == 0 goto label03;

        goto label05;

     label09:
        z0 = 1;

        goto label08;

     label10:
        l2 = (long) $i0;

        $b4 = $l11 cmp l2;

        if $b4 >= 0 goto label11;

        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l10);

        r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator> = $r2;

        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l11);

        r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator> = $r2;

        return;

     label11:
        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l3);

        r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator> = $r2;

        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l7);

        r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator> = $r2;

        return;
    }
    public void <init>(double, int) throws org.apache.commons.math3.fraction.FractionConversionException
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        double $d0;
        int $i0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $d0 := @parameter0: double;

        $i0 := @parameter1: int;

        specialinvoke r0.<org.apache.commons.math3.fraction.BigFraction: void <init>(double,double,int,int)>($d0, 0.0, $i0, 100);

        return;
    }
    public void <init>(int)
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        int $i0;
        java.math.BigInteger $r1, $r2;
        long $l1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $i0 := @parameter0: int;

        $l1 = (long) $i0;

        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1);

        $r1 = <java.math.BigInteger: java.math.BigInteger ONE>;

        specialinvoke r0.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r2, $r1);

        return;
    }
    public void <init>(int, int)
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        int $i0, $i1;
        long $l2;
        java.math.BigInteger $r1, $r2;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $l2 = (long) $i0;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l2);

        $l2 = (long) $i1;

        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l2);

        specialinvoke r0.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r1, $r2);

        return;
    }
    public void <init>(long)
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        long $l0;
        java.math.BigInteger $r1, $r2;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $l0 := @parameter0: long;

        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l0);

        $r1 = <java.math.BigInteger: java.math.BigInteger ONE>;

        specialinvoke r0.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r2, $r1);

        return;
    }
    public void <init>(long, long)
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        long $l0, $l1;
        java.math.BigInteger $r1, $r2;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l0);

        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1);

        specialinvoke r0.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r1, $r2);

        return;
    }
    public void <init>(java.math.BigInteger)
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        java.math.BigInteger $r1, $r2;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 = <java.math.BigInteger: java.math.BigInteger ONE>;

        specialinvoke r0.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r1, $r2);

        return;
    }
    public void <init>(java.math.BigInteger, java.math.BigInteger)
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        java.math.BigInteger $r1, $r2, $r6, $r7;
        org.apache.commons.math3.exception.util.LocalizedFormats $r3;
        java.lang.Object[] $r4;
        int $i0;
        org.apache.commons.math3.exception.ZeroException $r5;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 := @parameter1: java.math.BigInteger;

        specialinvoke r0.<java.lang.Number: void <init>()>();

        $r3 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats NUMERATOR>;

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r1, $r3, $r4);

        $r3 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats DENOMINATOR>;

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r2, $r3, $r4);

        $i0 = virtualinvoke $r2.<java.math.BigInteger: int signum()>();

        if $i0 != 0 goto label1;

        $r5 = new org.apache.commons.math3.exception.ZeroException;

        $r3 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats ZERO_DENOMINATOR>;

        $r4 = newarray (java.lang.Object)[0];

        specialinvoke $r5.<org.apache.commons.math3.exception.ZeroException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r3, $r4);

        throw $r5;

     label1:
        $i0 = virtualinvoke $r1.<java.math.BigInteger: int signum()>();

        if $i0 != 0 goto label2;

        $r1 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator> = $r1;

        $r1 = <java.math.BigInteger: java.math.BigInteger ONE>;

        r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator> = $r1;

        return;

     label2:
        $r6 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger gcd(java.math.BigInteger)>($r2);

        $r7 = <java.math.BigInteger: java.math.BigInteger ONE>;

        $i0 = virtualinvoke $r7.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r6);

        if $i0 >= 0 goto label3;

        $r1 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>($r6);

        $r2 = virtualinvoke $r2.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>($r6);

     label3:
        $i0 = virtualinvoke $r2.<java.math.BigInteger: int signum()>();

        if $i0 != -1 goto label4;

        $r1 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger negate()>();

        $r2 = virtualinvoke $r2.<java.math.BigInteger: java.math.BigInteger negate()>();

     label4:
        r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator> = $r1;

        r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator> = $r2;

        return;
    }
    public static org.apache.commons.math3.fraction.BigFraction getReducedFraction(int, int)
    {
        int $i0, $i1;
        org.apache.commons.math3.fraction.BigFraction $r0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 != 0 goto label1;

        $r0 = <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction ZERO>;

        return $r0;

     label1:
        $r0 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r0.<org.apache.commons.math3.fraction.BigFraction: void <init>(int,int)>($i0, $i1);

        return $r0;
    }
    public org.apache.commons.math3.fraction.BigFraction abs()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        java.math.BigInteger $r1;
        int $i0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int signum()>();

        if $i0 != 1 goto label1;

        return r0;

     label1:
        r0 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction negate()>();

        return r0;
    }
    public volatile java.lang.Object add(java.lang.Object) throws org.apache.commons.math3.exception.NullArgumentException
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r2;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.commons.math3.fraction.BigFraction) $r1;

        r0 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r2);

        return r0;
    }
    public org.apache.commons.math3.fraction.BigFraction add(int)
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        int $i0;
        long $l1;
        java.math.BigInteger $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $i0 := @parameter0: int;

        $l1 = (long) $i0;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1);

        r0 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(java.math.BigInteger)>($r1);

        return r0;
    }
    public org.apache.commons.math3.fraction.BigFraction add(long)
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        long $l0;
        java.math.BigInteger $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $l0 := @parameter0: long;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l0);

        r0 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(java.math.BigInteger)>($r1);

        return r0;
    }
    public org.apache.commons.math3.fraction.BigFraction add(java.math.BigInteger) throws org.apache.commons.math3.exception.NullArgumentException
    {
        java.math.BigInteger $r0, $r2, $r4;
        org.apache.commons.math3.fraction.BigFraction r1, $r3;
        int $i0;

        r1 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r0 := @parameter0: java.math.BigInteger;

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>($r0);

        $r2 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $i0 = virtualinvoke $r2.<java.math.BigInteger: int signum()>();

        if $i0 != 0 goto label1;

        r1 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke r1.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger)>($r0);

        return r1;

     label1:
        $i0 = virtualinvoke $r0.<java.math.BigInteger: int signum()>();

        if $i0 == 0 goto label2;

        $r3 = new org.apache.commons.math3.fraction.BigFraction;

        $r2 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r4 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r0 = virtualinvoke $r4.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r0);

        $r0 = virtualinvoke $r2.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r0);

        $r2 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        specialinvoke $r3.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r0, $r2);

        return $r3;

     label2:
        return r1;
    }
    public org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)
    {
        org.apache.commons.math3.fraction.BigFraction $r0, r1;
        org.apache.commons.math3.exception.NullArgumentException $r2;
        org.apache.commons.math3.exception.util.LocalizedFormats $r3;
        java.lang.Object[] $r4;
        java.math.BigInteger $r5, $r6, $r7;
        int $i0;
        boolean $z0;

        r1 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r0 := @parameter0: org.apache.commons.math3.fraction.BigFraction;

        if $r0 != null goto label1;

        $r2 = new org.apache.commons.math3.exception.NullArgumentException;

        $r3 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats FRACTION>;

        $r4 = newarray (java.lang.Object)[0];

        specialinvoke $r2.<org.apache.commons.math3.exception.NullArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r3, $r4);

        throw $r2;

     label1:
        $r5 = $r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $i0 = virtualinvoke $r5.<java.math.BigInteger: int signum()>();

        if $i0 != 0 goto label2;

        return r1;

     label2:
        $r5 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $i0 = virtualinvoke $r5.<java.math.BigInteger: int signum()>();

        if $i0 != 0 goto label3;

        return $r0;

     label3:
        $r5 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r6 = $r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $z0 = virtualinvoke $r5.<java.math.BigInteger: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label5;

        $r5 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r6 = $r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r5 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r6);

        $r6 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

     label4:
        $i0 = virtualinvoke $r5.<java.math.BigInteger: int signum()>();

        if $i0 != 0 goto label6;

        r1 = <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction ZERO>;

        return r1;

     label5:
        $r5 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r6 = $r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r5 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r6);

        $r6 = $r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r7 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r6 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r7);

        $r5 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r6);

        $r6 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r7 = $r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r6 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r7);

        goto label4;

     label6:
        r1 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke r1.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r5, $r6);

        return r1;
    }
    public java.math.BigDecimal bigDecimalValue()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        java.math.BigInteger $r1;
        java.math.BigDecimal $r2, $r3;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r2 = new java.math.BigDecimal;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        specialinvoke $r2.<java.math.BigDecimal: void <init>(java.math.BigInteger)>($r1);

        $r3 = new java.math.BigDecimal;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        specialinvoke $r3.<java.math.BigDecimal: void <init>(java.math.BigInteger)>($r1);

        $r2 = virtualinvoke $r2.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal)>($r3);

        return $r2;
    }
    public java.math.BigDecimal bigDecimalValue(int)
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        int $i0;
        java.math.BigInteger $r1;
        java.math.BigDecimal $r2, $r3;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $i0 := @parameter0: int;

        $r2 = new java.math.BigDecimal;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        specialinvoke $r2.<java.math.BigDecimal: void <init>(java.math.BigInteger)>($r1);

        $r3 = new java.math.BigDecimal;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        specialinvoke $r3.<java.math.BigDecimal: void <init>(java.math.BigInteger)>($r1);

        $r2 = virtualinvoke $r2.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,int)>($r3, $i0);

        return $r2;
    }
    public java.math.BigDecimal bigDecimalValue(int, int)
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        int $i0, $i1;
        java.math.BigInteger $r1;
        java.math.BigDecimal $r2, $r3;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r2 = new java.math.BigDecimal;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        specialinvoke $r2.<java.math.BigDecimal: void <init>(java.math.BigInteger)>($r1);

        $r3 = new java.math.BigDecimal;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        specialinvoke $r3.<java.math.BigDecimal: void <init>(java.math.BigInteger)>($r1);

        $r2 = virtualinvoke $r2.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,int,int)>($r3, $i0, $i1);

        return $r2;
    }
    public volatile int compareTo(java.lang.Object)
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r2;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.commons.math3.fraction.BigFraction) $r1;

        $i0 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: int compareTo(org.apache.commons.math3.fraction.BigFraction)>($r2);

        return $i0;
    }
    public int compareTo(org.apache.commons.math3.fraction.BigFraction)
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r1;
        java.math.BigInteger $r2, $r3, $r4;
        int $i0, $i1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 := @parameter0: org.apache.commons.math3.fraction.BigFraction;

        $r2 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $i0 = virtualinvoke $r2.<java.math.BigInteger: int signum()>();

        $r2 = $r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $i1 = virtualinvoke $r2.<java.math.BigInteger: int signum()>();

        if $i0 == $i1 goto label2;

        if $i0 <= $i1 goto label1;

        return 1;

     label1:
        return -1;

     label2:
        if $i0 != 0 goto label3;

        return 0;

     label3:
        $r2 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r3 = $r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r2 = virtualinvoke $r2.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r3);

        $r3 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r4 = $r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r3 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r4);

        $i0 = virtualinvoke $r2.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r3);

        return $i0;
    }
    public volatile java.lang.Object divide(java.lang.Object) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.MathArithmeticException
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r2;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.commons.math3.fraction.BigFraction) $r1;

        r0 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction divide(org.apache.commons.math3.fraction.BigFraction)>($r2);

        return r0;
    }
    public org.apache.commons.math3.fraction.BigFraction divide(int)
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        int $i0;
        long $l1;
        java.math.BigInteger $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $i0 := @parameter0: int;

        $l1 = (long) $i0;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1);

        r0 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction divide(java.math.BigInteger)>($r1);

        return r0;
    }
    public org.apache.commons.math3.fraction.BigFraction divide(long)
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        long $l0;
        java.math.BigInteger $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $l0 := @parameter0: long;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l0);

        r0 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction divide(java.math.BigInteger)>($r1);

        return r0;
    }
    public org.apache.commons.math3.fraction.BigFraction divide(java.math.BigInteger)
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r7;
        java.math.BigInteger $r1, $r6, $r8;
        org.apache.commons.math3.exception.NullArgumentException $r2;
        org.apache.commons.math3.exception.util.LocalizedFormats $r3;
        java.lang.Object[] $r4;
        int $i0;
        org.apache.commons.math3.exception.MathArithmeticException $r5;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 := @parameter0: java.math.BigInteger;

        if $r1 != null goto label1;

        $r2 = new org.apache.commons.math3.exception.NullArgumentException;

        $r3 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats FRACTION>;

        $r4 = newarray (java.lang.Object)[0];

        specialinvoke $r2.<org.apache.commons.math3.exception.NullArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r3, $r4);

        throw $r2;

     label1:
        $i0 = virtualinvoke $r1.<java.math.BigInteger: int signum()>();

        if $i0 != 0 goto label2;

        $r5 = new org.apache.commons.math3.exception.MathArithmeticException;

        $r3 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats ZERO_DENOMINATOR>;

        $r4 = newarray (java.lang.Object)[0];

        specialinvoke $r5.<org.apache.commons.math3.exception.MathArithmeticException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r3, $r4);

        throw $r5;

     label2:
        $r6 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $i0 = virtualinvoke $r6.<java.math.BigInteger: int signum()>();

        if $i0 != 0 goto label3;

        r0 = <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction ZERO>;

        return r0;

     label3:
        $r7 = new org.apache.commons.math3.fraction.BigFraction;

        $r6 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r8 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r1 = virtualinvoke $r8.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r1);

        specialinvoke $r7.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r6, $r1);

        return $r7;
    }
    public org.apache.commons.math3.fraction.BigFraction divide(org.apache.commons.math3.fraction.BigFraction)
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r1;
        org.apache.commons.math3.exception.NullArgumentException $r2;
        org.apache.commons.math3.exception.util.LocalizedFormats $r3;
        java.lang.Object[] $r4;
        java.math.BigInteger $r5;
        int $i0;
        org.apache.commons.math3.exception.MathArithmeticException $r6;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 := @parameter0: org.apache.commons.math3.fraction.BigFraction;

        if $r1 != null goto label1;

        $r2 = new org.apache.commons.math3.exception.NullArgumentException;

        $r3 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats FRACTION>;

        $r4 = newarray (java.lang.Object)[0];

        specialinvoke $r2.<org.apache.commons.math3.exception.NullArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r3, $r4);

        throw $r2;

     label1:
        $r5 = $r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $i0 = virtualinvoke $r5.<java.math.BigInteger: int signum()>();

        if $i0 != 0 goto label2;

        $r6 = new org.apache.commons.math3.exception.MathArithmeticException;

        $r3 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats ZERO_DENOMINATOR>;

        $r4 = newarray (java.lang.Object)[0];

        specialinvoke $r6.<org.apache.commons.math3.exception.MathArithmeticException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r3, $r4);

        throw $r6;

     label2:
        $r5 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $i0 = virtualinvoke $r5.<java.math.BigInteger: int signum()>();

        if $i0 != 0 goto label3;

        r0 = <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction ZERO>;

        return r0;

     label3:
        $r1 = virtualinvoke $r1.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction reciprocal()>();

        r0 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r1);

        return r0;
    }
    public double doubleValue()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        int i0, $i1;
        java.math.BigInteger $r1;
        double $d0, $d1;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $d0 = virtualinvoke $r1.<java.math.BigInteger: double doubleValue()>();

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $d1 = virtualinvoke $r1.<java.math.BigInteger: double doubleValue()>();

        $d0 = $d0 / $d1;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        i0 = virtualinvoke $r1.<java.math.BigInteger: int bitLength()>();

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $i1 = virtualinvoke $r1.<java.math.BigInteger: int bitLength()>();

        i0 = staticinvoke <org.apache.commons.math3.util.FastMath: int max(int,int)>(i0, $i1);

        $i1 = staticinvoke <org.apache.commons.math3.util.FastMath: int getExponent(double)>(1.7976931348623157E308);

        i0 = i0 - $i1;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r1 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger shiftRight(int)>(i0);

        $d0 = virtualinvoke $r1.<java.math.BigInteger: double doubleValue()>();

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r1 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger shiftRight(int)>(i0);

        $d1 = virtualinvoke $r1.<java.math.BigInteger: double doubleValue()>();

        $d0 = $d0 / $d1;

     label1:
        return $d0;
    }
    public boolean equals(java.lang.Object)
    {
        org.apache.commons.math3.fraction.BigFraction r0, r2;
        java.lang.Object r1;
        boolean $z0;
        java.math.BigInteger $r3, $r4;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.apache.commons.math3.fraction.BigFraction;

        if $z0 == 0 goto label3;

        r2 = (org.apache.commons.math3.fraction.BigFraction) r1;

        r2 = virtualinvoke r2.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction reduce()>();

        r0 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction reduce()>();

        $r3 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r4 = r2.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $z0 = virtualinvoke $r3.<java.math.BigInteger: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r3 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r4 = r2.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $z0 = virtualinvoke $r3.<java.math.BigInteger: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;

     label3:
        return 0;
    }
    public float floatValue()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        int i0, $i1;
        java.math.BigInteger $r1;
        float $f0, $f1;
        double $d0;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $f0 = virtualinvoke $r1.<java.math.BigInteger: float floatValue()>();

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $f1 = virtualinvoke $r1.<java.math.BigInteger: float floatValue()>();

        $f0 = $f0 / $f1;

        $d0 = (double) $f0;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        i0 = virtualinvoke $r1.<java.math.BigInteger: int bitLength()>();

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $i1 = virtualinvoke $r1.<java.math.BigInteger: int bitLength()>();

        i0 = staticinvoke <org.apache.commons.math3.util.FastMath: int max(int,int)>(i0, $i1);

        $i1 = staticinvoke <org.apache.commons.math3.util.FastMath: int getExponent(float)>(3.4028235E38F);

        i0 = i0 - $i1;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r1 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger shiftRight(int)>(i0);

        $f0 = virtualinvoke $r1.<java.math.BigInteger: float floatValue()>();

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r1 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger shiftRight(int)>(i0);

        $f1 = virtualinvoke $r1.<java.math.BigInteger: float floatValue()>();

        $f0 = $f0 / $f1;

     label1:
        return $f0;
    }
    public java.math.BigInteger getDenominator()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        java.math.BigInteger r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        return r1;
    }
    public int getDenominatorAsInt()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        int $i0;
        java.math.BigInteger $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int intValue()>();

        return $i0;
    }
    public long getDenominatorAsLong()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        long $l0;
        java.math.BigInteger $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $l0 = virtualinvoke $r1.<java.math.BigInteger: long longValue()>();

        return $l0;
    }
    public volatile org.apache.commons.math3.Field getField()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        org.apache.commons.math3.fraction.BigFractionField $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFractionField getField()>();

        return $r1;
    }
    public org.apache.commons.math3.fraction.BigFractionField getField()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        org.apache.commons.math3.fraction.BigFractionField $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = staticinvoke <org.apache.commons.math3.fraction.BigFractionField: org.apache.commons.math3.fraction.BigFractionField getInstance()>();

        return $r1;
    }
    public java.math.BigInteger getNumerator()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        java.math.BigInteger r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        return r1;
    }
    public int getNumeratorAsInt()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        int $i0;
        java.math.BigInteger $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int intValue()>();

        return $i0;
    }
    public long getNumeratorAsLong()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        long $l0;
        java.math.BigInteger $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $l0 = virtualinvoke $r1.<java.math.BigInteger: long longValue()>();

        return $l0;
    }
    public int hashCode()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        java.math.BigInteger $r1;
        int $i0, $i1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int hashCode()>();

        $i0 = $i0 + 629;

        $i0 = $i0 * 37;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $i1 = virtualinvoke $r1.<java.math.BigInteger: int hashCode()>();

        $i0 = $i0 + $i1;

        return $i0;
    }
    public int intValue()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        java.math.BigInteger $r1, $r2;
        int $i0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r2 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r1 = virtualinvoke $r2.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>($r1);

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int intValue()>();

        return $i0;
    }
    public long longValue()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        java.math.BigInteger $r1, $r2;
        long $l0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r2 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r1 = virtualinvoke $r2.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>($r1);

        $l0 = virtualinvoke $r1.<java.math.BigInteger: long longValue()>();

        return $l0;
    }
    public volatile java.lang.Object multiply(int)
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        int $i0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $i0 := @parameter0: int;

        r0 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(int)>($i0);

        return r0;
    }
    public volatile java.lang.Object multiply(java.lang.Object) throws org.apache.commons.math3.exception.NullArgumentException
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r2;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.commons.math3.fraction.BigFraction) $r1;

        r0 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r2);

        return r0;
    }
    public org.apache.commons.math3.fraction.BigFraction multiply(int)
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        int $i0, $i1;
        java.math.BigInteger $r1;
        long $l2;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label1;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $i1 = virtualinvoke $r1.<java.math.BigInteger: int signum()>();

        if $i1 != 0 goto label2;

     label1:
        r0 = <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction ZERO>;

        return r0;

     label2:
        $l2 = (long) $i0;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l2);

        r0 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(java.math.BigInteger)>($r1);

        return r0;
    }
    public org.apache.commons.math3.fraction.BigFraction multiply(long)
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        long $l0;
        byte $b1;
        java.math.BigInteger $r1;
        int $i2;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $l0 := @parameter0: long;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $i2 = virtualinvoke $r1.<java.math.BigInteger: int signum()>();

        if $i2 != 0 goto label2;

     label1:
        r0 = <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction ZERO>;

        return r0;

     label2:
        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l0);

        r0 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(java.math.BigInteger)>($r1);

        return r0;
    }
    public org.apache.commons.math3.fraction.BigFraction multiply(java.math.BigInteger)
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r4;
        java.math.BigInteger $r1, $r3;
        org.apache.commons.math3.exception.NullArgumentException $r2;
        int $i0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 := @parameter0: java.math.BigInteger;

        if $r1 != null goto label1;

        $r2 = new org.apache.commons.math3.exception.NullArgumentException;

        specialinvoke $r2.<org.apache.commons.math3.exception.NullArgumentException: void <init>()>();

        throw $r2;

     label1:
        $r3 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $i0 = virtualinvoke $r3.<java.math.BigInteger: int signum()>();

        if $i0 == 0 goto label2;

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int signum()>();

        if $i0 != 0 goto label3;

     label2:
        r0 = <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction ZERO>;

        return r0;

     label3:
        $r4 = new org.apache.commons.math3.fraction.BigFraction;

        $r3 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r3 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r3);

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        specialinvoke $r4.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r1);

        return $r4;
    }
    public org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r1, $r7;
        java.math.BigInteger $r2, $r6, $r8;
        org.apache.commons.math3.exception.NullArgumentException $r3;
        org.apache.commons.math3.exception.util.LocalizedFormats $r4;
        java.lang.Object[] $r5;
        int $i0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 := @parameter0: org.apache.commons.math3.fraction.BigFraction;

        if $r1 != null goto label1;

        $r3 = new org.apache.commons.math3.exception.NullArgumentException;

        $r4 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats FRACTION>;

        $r5 = newarray (java.lang.Object)[0];

        specialinvoke $r3.<org.apache.commons.math3.exception.NullArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r4, $r5);

        throw $r3;

     label1:
        $r6 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $i0 = virtualinvoke $r6.<java.math.BigInteger: int signum()>();

        if $i0 == 0 goto label2;

        $r6 = $r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $i0 = virtualinvoke $r6.<java.math.BigInteger: int signum()>();

        if $i0 != 0 goto label3;

     label2:
        r0 = <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction ZERO>;

        return r0;

     label3:
        $r7 = new org.apache.commons.math3.fraction.BigFraction;

        $r6 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r2 = $r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r6 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r2);

        $r8 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r2 = $r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r2 = virtualinvoke $r8.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r2);

        specialinvoke $r7.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r6, $r2);

        return $r7;
    }
    public volatile java.lang.Object negate()
    {
        org.apache.commons.math3.fraction.BigFraction r0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        r0 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction negate()>();

        return r0;
    }
    public org.apache.commons.math3.fraction.BigFraction negate()
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r1;
        java.math.BigInteger $r2, $r3;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = new org.apache.commons.math3.fraction.BigFraction;

        $r2 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r3 = virtualinvoke $r2.<java.math.BigInteger: java.math.BigInteger negate()>();

        $r2 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        specialinvoke $r1.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r2);

        return $r1;
    }
    public double percentageValue()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        java.math.BigInteger $r1;
        double $d0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = <org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger ONE_HUNDRED>;

        r0 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(java.math.BigInteger)>($r1);

        $d0 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: double doubleValue()>();

        return $d0;
    }
    public double pow(double)
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        double $d0, $d1, $d2;
        java.math.BigInteger $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $d0 := @parameter0: double;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $d1 = virtualinvoke $r1.<java.math.BigInteger: double doubleValue()>();

        $d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,double)>($d1, $d0);

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $d2 = virtualinvoke $r1.<java.math.BigInteger: double doubleValue()>();

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,double)>($d2, $d0);

        $d0 = $d1 / $d0;

        return $d0;
    }
    public org.apache.commons.math3.fraction.BigFraction pow(int)
    {
        int $i0, $i1;
        org.apache.commons.math3.fraction.BigFraction r0, $r2;
        java.math.BigInteger $r1, $r3;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $i0 := @parameter0: int;

        if $i0 != 0 goto label1;

        r0 = <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction ONE>;

        return r0;

     label1:
        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $i1 = virtualinvoke $r1.<java.math.BigInteger: int signum()>();

        if $i1 == 0 goto label3;

        if $i0 >= 0 goto label2;

        $r2 = new org.apache.commons.math3.fraction.BigFraction;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $i1 = neg $i0;

        $r1 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger pow(int)>($i1);

        $r3 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $i0 = neg $i0;

        $r3 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger pow(int)>($i0);

        specialinvoke $r2.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r1, $r3);

        return $r2;

     label2:
        $r2 = new org.apache.commons.math3.fraction.BigFraction;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r1 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger pow(int)>($i0);

        $r3 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r3 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger pow(int)>($i0);

        specialinvoke $r2.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r1, $r3);

        return $r2;

     label3:
        return r0;
    }
    public org.apache.commons.math3.fraction.BigFraction pow(long)
    {
        long $l0, $l3;
        org.apache.commons.math3.fraction.BigFraction r0, $r2;
        byte $b1;
        java.math.BigInteger $r1, $r3;
        int $i2;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $l0 := @parameter0: long;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        r0 = <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction ONE>;

        return r0;

     label1:
        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $i2 = virtualinvoke $r1.<java.math.BigInteger: int signum()>();

        if $i2 == 0 goto label3;

        $b1 = $l0 cmp 0L;

        if $b1 >= 0 goto label2;

        $r2 = new org.apache.commons.math3.fraction.BigFraction;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $l3 = neg $l0;

        $r1 = staticinvoke <org.apache.commons.math3.util.ArithmeticUtils: java.math.BigInteger pow(java.math.BigInteger,long)>($r1, $l3);

        $r3 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $l0 = neg $l0;

        $r3 = staticinvoke <org.apache.commons.math3.util.ArithmeticUtils: java.math.BigInteger pow(java.math.BigInteger,long)>($r3, $l0);

        specialinvoke $r2.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r1, $r3);

        return $r2;

     label2:
        $r2 = new org.apache.commons.math3.fraction.BigFraction;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r1 = staticinvoke <org.apache.commons.math3.util.ArithmeticUtils: java.math.BigInteger pow(java.math.BigInteger,long)>($r1, $l0);

        $r3 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r3 = staticinvoke <org.apache.commons.math3.util.ArithmeticUtils: java.math.BigInteger pow(java.math.BigInteger,long)>($r3, $l0);

        specialinvoke $r2.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r1, $r3);

        return $r2;

     label3:
        return r0;
    }
    public org.apache.commons.math3.fraction.BigFraction pow(java.math.BigInteger)
    {
        java.math.BigInteger $r0, $r2, $r4;
        org.apache.commons.math3.fraction.BigFraction r1, $r3;
        int $i0;

        r1 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r0 := @parameter0: java.math.BigInteger;

        $i0 = virtualinvoke $r0.<java.math.BigInteger: int signum()>();

        if $i0 != 0 goto label1;

        r1 = <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction ONE>;

        return r1;

     label1:
        $r2 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $i0 = virtualinvoke $r2.<java.math.BigInteger: int signum()>();

        if $i0 == 0 goto label3;

        $i0 = virtualinvoke $r0.<java.math.BigInteger: int signum()>();

        if $i0 != -1 goto label2;

        $r0 = virtualinvoke $r0.<java.math.BigInteger: java.math.BigInteger negate()>();

        $r3 = new org.apache.commons.math3.fraction.BigFraction;

        $r2 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r2 = staticinvoke <org.apache.commons.math3.util.ArithmeticUtils: java.math.BigInteger pow(java.math.BigInteger,java.math.BigInteger)>($r2, $r0);

        $r4 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r0 = staticinvoke <org.apache.commons.math3.util.ArithmeticUtils: java.math.BigInteger pow(java.math.BigInteger,java.math.BigInteger)>($r4, $r0);

        specialinvoke $r3.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r2, $r0);

        return $r3;

     label2:
        $r3 = new org.apache.commons.math3.fraction.BigFraction;

        $r2 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r2 = staticinvoke <org.apache.commons.math3.util.ArithmeticUtils: java.math.BigInteger pow(java.math.BigInteger,java.math.BigInteger)>($r2, $r0);

        $r4 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r0 = staticinvoke <org.apache.commons.math3.util.ArithmeticUtils: java.math.BigInteger pow(java.math.BigInteger,java.math.BigInteger)>($r4, $r0);

        specialinvoke $r3.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r2, $r0);

        return $r3;

     label3:
        return r1;
    }
    public volatile java.lang.Object reciprocal() throws org.apache.commons.math3.exception.MathArithmeticException
    {
        org.apache.commons.math3.fraction.BigFraction r0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        r0 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction reciprocal()>();

        return r0;
    }
    public org.apache.commons.math3.fraction.BigFraction reciprocal()
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r1;
        java.math.BigInteger $r2, $r3;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = new org.apache.commons.math3.fraction.BigFraction;

        $r2 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r3 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        specialinvoke $r1.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r2, $r3);

        return $r1;
    }
    public org.apache.commons.math3.fraction.BigFraction reduce()
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r3;
        java.math.BigInteger $r1, $r2, $r4;
        int $i0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r2 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r1 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger gcd(java.math.BigInteger)>($r2);

        $r2 = <java.math.BigInteger: java.math.BigInteger ONE>;

        $i0 = virtualinvoke $r2.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r1);

        if $i0 >= 0 goto label1;

        $r3 = new org.apache.commons.math3.fraction.BigFraction;

        $r2 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r2 = virtualinvoke $r2.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>($r1);

        $r4 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r1 = virtualinvoke $r4.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>($r1);

        specialinvoke $r3.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r2, $r1);

        return $r3;

     label1:
        return r0;
    }
    public volatile java.lang.Object subtract(java.lang.Object) throws org.apache.commons.math3.exception.NullArgumentException
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r2;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.commons.math3.fraction.BigFraction) $r1;

        r0 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r2);

        return r0;
    }
    public org.apache.commons.math3.fraction.BigFraction subtract(int)
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        int $i0;
        long $l1;
        java.math.BigInteger $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $i0 := @parameter0: int;

        $l1 = (long) $i0;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1);

        r0 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(java.math.BigInteger)>($r1);

        return r0;
    }
    public org.apache.commons.math3.fraction.BigFraction subtract(long)
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        long $l0;
        java.math.BigInteger $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $l0 := @parameter0: long;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l0);

        r0 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(java.math.BigInteger)>($r1);

        return r0;
    }
    public org.apache.commons.math3.fraction.BigFraction subtract(java.math.BigInteger)
    {
        java.math.BigInteger $r0, $r3, $r5;
        org.apache.commons.math3.fraction.BigFraction r1, $r4;
        org.apache.commons.math3.exception.NullArgumentException $r2;
        int $i0;

        r1 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r0 := @parameter0: java.math.BigInteger;

        if $r0 != null goto label1;

        $r2 = new org.apache.commons.math3.exception.NullArgumentException;

        specialinvoke $r2.<org.apache.commons.math3.exception.NullArgumentException: void <init>()>();

        throw $r2;

     label1:
        $i0 = virtualinvoke $r0.<java.math.BigInteger: int signum()>();

        if $i0 != 0 goto label2;

        return r1;

     label2:
        $r3 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $i0 = virtualinvoke $r3.<java.math.BigInteger: int signum()>();

        if $i0 != 0 goto label3;

        r1 = new org.apache.commons.math3.fraction.BigFraction;

        $r0 = virtualinvoke $r0.<java.math.BigInteger: java.math.BigInteger negate()>();

        specialinvoke r1.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger)>($r0);

        return r1;

     label3:
        $r4 = new org.apache.commons.math3.fraction.BigFraction;

        $r3 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r5 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r0 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r0);

        $r0 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r0);

        $r3 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        specialinvoke $r4.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r0, $r3);

        return $r4;
    }
    public org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)
    {
        org.apache.commons.math3.fraction.BigFraction $r0, r1;
        org.apache.commons.math3.exception.NullArgumentException $r2;
        org.apache.commons.math3.exception.util.LocalizedFormats $r3;
        java.lang.Object[] $r4;
        java.math.BigInteger $r5, $r6, $r7;
        int $i0;
        boolean $z0;

        r1 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r0 := @parameter0: org.apache.commons.math3.fraction.BigFraction;

        if $r0 != null goto label1;

        $r2 = new org.apache.commons.math3.exception.NullArgumentException;

        $r3 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats FRACTION>;

        $r4 = newarray (java.lang.Object)[0];

        specialinvoke $r2.<org.apache.commons.math3.exception.NullArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r3, $r4);

        throw $r2;

     label1:
        $r5 = $r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $i0 = virtualinvoke $r5.<java.math.BigInteger: int signum()>();

        if $i0 != 0 goto label2;

        return r1;

     label2:
        $r5 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $i0 = virtualinvoke $r5.<java.math.BigInteger: int signum()>();

        if $i0 != 0 goto label3;

        r1 = virtualinvoke $r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction negate()>();

        return r1;

     label3:
        $r5 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r6 = $r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $z0 = virtualinvoke $r5.<java.math.BigInteger: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label5;

        $r5 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r6 = $r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r5 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r6);

        $r6 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

     label4:
        r1 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke r1.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r5, $r6);

        return r1;

     label5:
        $r5 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r6 = $r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r5 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r6);

        $r6 = $r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r7 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r6 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r7);

        $r5 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r6);

        $r6 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r7 = $r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r6 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r7);

        goto label4;
    }
    public java.lang.String toString()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        java.math.BigInteger $r1, $r2;
        boolean $z0;
        java.lang.String $r3;
        java.lang.StringBuilder $r4;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = <java.math.BigInteger: java.math.BigInteger ONE>;

        $r2 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $z0 = virtualinvoke $r1.<java.math.BigInteger: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r3 = virtualinvoke $r1.<java.math.BigInteger: java.lang.String toString()>();

        return $r3;

     label1:
        $r1 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $r2 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $z0 = virtualinvoke $r1.<java.math.BigInteger: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        return "0";

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ");

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
