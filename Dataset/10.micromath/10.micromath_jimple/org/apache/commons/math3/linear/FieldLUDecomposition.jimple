org.apache.commons.math3.linear.FieldLUDecomposition extends java.lang.Object
private org.apache.commons.math3.linear.FieldMatrix cachedL
private org.apache.commons.math3.linear.FieldMatrix cachedP
private org.apache.commons.math3.linear.FieldMatrix cachedU
private boolean even
private final org.apache.commons.math3.Field field
private org.apache.commons.math3.FieldElement[][] lu
private int[] pivot
private boolean singular
    public void <init>(org.apache.commons.math3.linear.FieldMatrix)
    {
        org.apache.commons.math3.linear.FieldLUDecomposition r0;
        org.apache.commons.math3.linear.FieldMatrix r1;
        org.apache.commons.math3.FieldElement r2, $r9, $r11;
        int i0, $i1, $i2, i3, i4;
        boolean $z0;
        org.apache.commons.math3.linear.NonSquareMatrixException $r3;
        org.apache.commons.math3.Field $r4;
        org.apache.commons.math3.FieldElement[][] $r5;
        int[] $r6, $r12;
        java.lang.Object $r7;
        org.apache.commons.math3.FieldElement[] r8, $r10;

        r0 := @this: org.apache.commons.math3.linear.FieldLUDecomposition;

        r1 := @parameter0: org.apache.commons.math3.linear.FieldMatrix;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = interfaceinvoke r1.<org.apache.commons.math3.linear.FieldMatrix: boolean isSquare()>();

        if $z0 != 0 goto label01;

        $r3 = new org.apache.commons.math3.linear.NonSquareMatrixException;

        $i1 = interfaceinvoke r1.<org.apache.commons.math3.linear.FieldMatrix: int getRowDimension()>();

        $i2 = interfaceinvoke r1.<org.apache.commons.math3.linear.FieldMatrix: int getColumnDimension()>();

        specialinvoke $r3.<org.apache.commons.math3.linear.NonSquareMatrixException: void <init>(int,int)>($i1, $i2);

        throw $r3;

     label01:
        $i1 = interfaceinvoke r1.<org.apache.commons.math3.linear.FieldMatrix: int getColumnDimension()>();

        $r4 = interfaceinvoke r1.<org.apache.commons.math3.linear.FieldMatrix: org.apache.commons.math3.Field getField()>();

        r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.Field field> = $r4;

        $r5 = interfaceinvoke r1.<org.apache.commons.math3.linear.FieldMatrix: org.apache.commons.math3.FieldElement[][] getData()>();

        r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.FieldElement[][] lu> = $r5;

        $r6 = newarray (int)[$i1];

        r0.<org.apache.commons.math3.linear.FieldLUDecomposition: int[] pivot> = $r6;

        r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.linear.FieldMatrix cachedL> = null;

        r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.linear.FieldMatrix cachedU> = null;

        r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.linear.FieldMatrix cachedP> = null;

        $i2 = 0;

     label02:
        if $i2 >= $i1 goto label03;

        $r6 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: int[] pivot>;

        $r6[$i2] = $i2;

        $i2 = $i2 + 1;

        goto label02;

     label03:
        r0.<org.apache.commons.math3.linear.FieldLUDecomposition: boolean even> = 1;

        r0.<org.apache.commons.math3.linear.FieldLUDecomposition: boolean singular> = 0;

        $i2 = 0;

     label04:
        if $i2 >= $i1 goto label22;

        $r4 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.Field field>;

        $r7 = interfaceinvoke $r4.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        r2 = (org.apache.commons.math3.FieldElement) $r7;

        i3 = 0;

     label05:
        if i3 >= $i2 goto label08;

        $r5 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.FieldElement[][] lu>;

        r8 = $r5[i3];

        r2 = r8[$i2];

        i0 = 0;

     label06:
        if i0 >= i3 goto label07;

        $r9 = r8[i0];

        $r5 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.FieldElement[][] lu>;

        $r10 = $r5[i0];

        $r11 = $r10[$i2];

        $r7 = interfaceinvoke $r9.<org.apache.commons.math3.FieldElement: java.lang.Object multiply(java.lang.Object)>($r11);

        $r7 = interfaceinvoke r2.<org.apache.commons.math3.FieldElement: java.lang.Object subtract(java.lang.Object)>($r7);

        r2 = (org.apache.commons.math3.FieldElement) $r7;

        i0 = i0 + 1;

        goto label06;

     label07:
        r8[$i2] = r2;

        i3 = i3 + 1;

        goto label05;

     label08:
        i3 = $i2;

        i0 = $i2;

     label09:
        if i0 >= $i1 goto label13;

        $r5 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.FieldElement[][] lu>;

        r8 = $r5[i0];

        r2 = r8[$i2];

        i4 = 0;

     label10:
        if i4 >= $i2 goto label11;

        $r9 = r8[i4];

        $r5 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.FieldElement[][] lu>;

        $r10 = $r5[i4];

        $r11 = $r10[$i2];

        $r7 = interfaceinvoke $r9.<org.apache.commons.math3.FieldElement: java.lang.Object multiply(java.lang.Object)>($r11);

        $r7 = interfaceinvoke r2.<org.apache.commons.math3.FieldElement: java.lang.Object subtract(java.lang.Object)>($r7);

        r2 = (org.apache.commons.math3.FieldElement) $r7;

        i4 = i4 + 1;

        goto label10;

     label11:
        r8[$i2] = r2;

        $r5 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.FieldElement[][] lu>;

        r8 = $r5[i3];

        r2 = r8[$i2];

        $r4 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.Field field>;

        $r7 = interfaceinvoke $r4.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label12;

        i3 = i3 + 1;

     label12:
        i0 = i0 + 1;

        goto label09;

     label13:
        if i3 < $i1 goto label14;

        r0.<org.apache.commons.math3.linear.FieldLUDecomposition: boolean singular> = 1;

        return;

     label14:
        if i3 == $i2 goto label18;

        $r4 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.Field field>;

        $r7 = interfaceinvoke $r4.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        r2 = (org.apache.commons.math3.FieldElement) $r7;

        i0 = 0;

     label15:
        if i0 >= $i1 goto label16;

        $r5 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.FieldElement[][] lu>;

        r8 = $r5[i3];

        r2 = r8[i0];

        $r5 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.FieldElement[][] lu>;

        r8 = $r5[i3];

        $r5 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.FieldElement[][] lu>;

        $r10 = $r5[$i2];

        $r9 = $r10[i0];

        r8[i0] = $r9;

        $r5 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.FieldElement[][] lu>;

        r8 = $r5[$i2];

        r8[i0] = r2;

        i0 = i0 + 1;

        goto label15;

     label16:
        $r6 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: int[] pivot>;

        i0 = $r6[i3];

        $r6 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: int[] pivot>;

        $r12 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: int[] pivot>;

        i4 = $r12[$i2];

        $r6[i3] = i4;

        $r6 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: int[] pivot>;

        $r6[$i2] = i0;

        $z0 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: boolean even>;

        if $z0 != 0 goto label20;

        $z0 = 1;

     label17:
        r0.<org.apache.commons.math3.linear.FieldLUDecomposition: boolean even> = $z0;

     label18:
        $r5 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.FieldElement[][] lu>;

        r8 = $r5[$i2];

        r2 = r8[$i2];

        i3 = $i2 + 1;

     label19:
        if i3 >= $i1 goto label21;

        $r5 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.FieldElement[][] lu>;

        r8 = $r5[i3];

        $r9 = r8[$i2];

        $r7 = interfaceinvoke $r9.<org.apache.commons.math3.FieldElement: java.lang.Object divide(java.lang.Object)>(r2);

        $r9 = (org.apache.commons.math3.FieldElement) $r7;

        r8[$i2] = $r9;

        i3 = i3 + 1;

        goto label19;

     label20:
        $z0 = 0;

        goto label17;

     label21:
        $i2 = $i2 + 1;

        goto label04;

     label22:
        return;
    }
    public org.apache.commons.math3.FieldElement getDeterminant()
    {
        org.apache.commons.math3.linear.FieldLUDecomposition r0;
        int i0, i1;
        boolean $z0;
        org.apache.commons.math3.Field $r1;
        java.lang.Object $r2;
        org.apache.commons.math3.FieldElement $r3, $r7;
        int[] $r4;
        org.apache.commons.math3.FieldElement[][] $r5;
        org.apache.commons.math3.FieldElement[] $r6;

        r0 := @this: org.apache.commons.math3.linear.FieldLUDecomposition;

        $z0 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: boolean singular>;

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.Field field>;

        $r2 = interfaceinvoke $r1.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        $r3 = (org.apache.commons.math3.FieldElement) $r2;

        return $r3;

     label1:
        $r4 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: int[] pivot>;

        i0 = lengthof $r4;

        $z0 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: boolean even>;

        if $z0 == 0 goto label4;

        $r1 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.Field field>;

        $r2 = interfaceinvoke $r1.<org.apache.commons.math3.Field: java.lang.Object getOne()>();

        $r3 = (org.apache.commons.math3.FieldElement) $r2;

     label2:
        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        $r5 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.FieldElement[][] lu>;

        $r6 = $r5[i1];

        $r7 = $r6[i1];

        $r2 = interfaceinvoke $r3.<org.apache.commons.math3.FieldElement: java.lang.Object multiply(java.lang.Object)>($r7);

        $r3 = (org.apache.commons.math3.FieldElement) $r2;

        i1 = i1 + 1;

        goto label3;

     label4:
        $r1 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.Field field>;

        $r2 = interfaceinvoke $r1.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        $r3 = (org.apache.commons.math3.FieldElement) $r2;

        $r1 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.Field field>;

        $r2 = interfaceinvoke $r1.<org.apache.commons.math3.Field: java.lang.Object getOne()>();

        $r2 = interfaceinvoke $r3.<org.apache.commons.math3.FieldElement: java.lang.Object subtract(java.lang.Object)>($r2);

        $r3 = (org.apache.commons.math3.FieldElement) $r2;

        goto label2;

     label5:
        return $r3;
    }
    public org.apache.commons.math3.linear.FieldMatrix getL()
    {
        org.apache.commons.math3.linear.FieldLUDecomposition r0;
        org.apache.commons.math3.FieldElement[] r1;
        int i0, i1, i2;
        java.lang.Object $r2;
        org.apache.commons.math3.linear.FieldMatrix $r3;
        boolean $z0;
        int[] $r4;
        org.apache.commons.math3.linear.Array2DRowFieldMatrix $r5;
        org.apache.commons.math3.Field $r6;
        org.apache.commons.math3.FieldElement[][] $r7;
        org.apache.commons.math3.FieldElement $r8;

        r0 := @this: org.apache.commons.math3.linear.FieldLUDecomposition;

        $r3 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.linear.FieldMatrix cachedL>;

        if $r3 != null goto label4;

        $z0 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: boolean singular>;

        if $z0 != 0 goto label4;

        $r4 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: int[] pivot>;

        i0 = lengthof $r4;

        $r5 = new org.apache.commons.math3.linear.Array2DRowFieldMatrix;

        $r6 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.Field field>;

        specialinvoke $r5.<org.apache.commons.math3.linear.Array2DRowFieldMatrix: void <init>(org.apache.commons.math3.Field,int,int)>($r6, i0, i0);

        r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.linear.FieldMatrix cachedL> = $r5;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $r7 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.FieldElement[][] lu>;

        r1 = $r7[i1];

        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        $r3 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.linear.FieldMatrix cachedL>;

        $r8 = r1[i2];

        interfaceinvoke $r3.<org.apache.commons.math3.linear.FieldMatrix: void setEntry(int,int,org.apache.commons.math3.FieldElement)>(i1, i2, $r8);

        i2 = i2 + 1;

        goto label2;

     label3:
        $r3 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.linear.FieldMatrix cachedL>;

        $r6 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.Field field>;

        $r2 = interfaceinvoke $r6.<org.apache.commons.math3.Field: java.lang.Object getOne()>();

        $r8 = (org.apache.commons.math3.FieldElement) $r2;

        interfaceinvoke $r3.<org.apache.commons.math3.linear.FieldMatrix: void setEntry(int,int,org.apache.commons.math3.FieldElement)>(i1, i1, $r8);

        i1 = i1 + 1;

        goto label1;

     label4:
        $r3 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.linear.FieldMatrix cachedL>;

        return $r3;
    }
    public org.apache.commons.math3.linear.FieldMatrix getP()
    {
        org.apache.commons.math3.linear.FieldLUDecomposition r0;
        int i0, $i1, i2;
        java.lang.Object $r1;
        org.apache.commons.math3.linear.FieldMatrix $r2;
        boolean $z0;
        int[] $r3;
        org.apache.commons.math3.linear.Array2DRowFieldMatrix $r4;
        org.apache.commons.math3.Field $r5;
        org.apache.commons.math3.FieldElement $r6;

        r0 := @this: org.apache.commons.math3.linear.FieldLUDecomposition;

        $r2 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.linear.FieldMatrix cachedP>;

        if $r2 != null goto label2;

        $z0 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: boolean singular>;

        if $z0 != 0 goto label2;

        $r3 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: int[] pivot>;

        i0 = lengthof $r3;

        $r4 = new org.apache.commons.math3.linear.Array2DRowFieldMatrix;

        $r5 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.Field field>;

        specialinvoke $r4.<org.apache.commons.math3.linear.Array2DRowFieldMatrix: void <init>(org.apache.commons.math3.Field,int,int)>($r5, i0, i0);

        r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.linear.FieldMatrix cachedP> = $r4;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r2 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.linear.FieldMatrix cachedP>;

        $r3 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: int[] pivot>;

        $i1 = $r3[i2];

        $r5 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.Field field>;

        $r1 = interfaceinvoke $r5.<org.apache.commons.math3.Field: java.lang.Object getOne()>();

        $r6 = (org.apache.commons.math3.FieldElement) $r1;

        interfaceinvoke $r2.<org.apache.commons.math3.linear.FieldMatrix: void setEntry(int,int,org.apache.commons.math3.FieldElement)>(i2, $i1, $r6);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r2 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.linear.FieldMatrix cachedP>;

        return $r2;
    }
    public int[] getPivot()
    {
        org.apache.commons.math3.linear.FieldLUDecomposition r0;
        java.lang.Object $r1;
        int[] $r2;

        r0 := @this: org.apache.commons.math3.linear.FieldLUDecomposition;

        $r2 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: int[] pivot>;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (int[]) $r1;

        return $r2;
    }
    public org.apache.commons.math3.linear.FieldDecompositionSolver getSolver()
    {
        org.apache.commons.math3.linear.FieldLUDecomposition r0;
        org.apache.commons.math3.linear.FieldLUDecomposition$Solver $r1;
        org.apache.commons.math3.Field $r2;
        org.apache.commons.math3.FieldElement[][] $r3;
        int[] $r4;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.linear.FieldLUDecomposition;

        $r1 = new org.apache.commons.math3.linear.FieldLUDecomposition$Solver;

        $r2 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.Field field>;

        $r3 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.FieldElement[][] lu>;

        $r4 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: int[] pivot>;

        $z0 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: boolean singular>;

        specialinvoke $r1.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: void <init>(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][],int[],boolean,org.apache.commons.math3.linear.FieldLUDecomposition$1)>($r2, $r3, $r4, $z0, null);

        return $r1;
    }
    public org.apache.commons.math3.linear.FieldMatrix getU()
    {
        org.apache.commons.math3.linear.FieldLUDecomposition r0;
        org.apache.commons.math3.FieldElement[] r1;
        int i0, i1, i2;
        org.apache.commons.math3.linear.FieldMatrix $r2;
        boolean $z0;
        int[] $r3;
        org.apache.commons.math3.linear.Array2DRowFieldMatrix $r4;
        org.apache.commons.math3.Field $r5;
        org.apache.commons.math3.FieldElement[][] $r6;
        org.apache.commons.math3.FieldElement $r7;

        r0 := @this: org.apache.commons.math3.linear.FieldLUDecomposition;

        $r2 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.linear.FieldMatrix cachedU>;

        if $r2 != null goto label4;

        $z0 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: boolean singular>;

        if $z0 != 0 goto label4;

        $r3 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: int[] pivot>;

        i0 = lengthof $r3;

        $r4 = new org.apache.commons.math3.linear.Array2DRowFieldMatrix;

        $r5 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.Field field>;

        specialinvoke $r4.<org.apache.commons.math3.linear.Array2DRowFieldMatrix: void <init>(org.apache.commons.math3.Field,int,int)>($r5, i0, i0);

        r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.linear.FieldMatrix cachedU> = $r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $r6 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.FieldElement[][] lu>;

        r1 = $r6[i1];

        i2 = i1;

     label2:
        if i2 >= i0 goto label3;

        $r2 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.linear.FieldMatrix cachedU>;

        $r7 = r1[i2];

        interfaceinvoke $r2.<org.apache.commons.math3.linear.FieldMatrix: void setEntry(int,int,org.apache.commons.math3.FieldElement)>(i1, i2, $r7);

        i2 = i2 + 1;

        goto label2;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        $r2 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition: org.apache.commons.math3.linear.FieldMatrix cachedU>;

        return $r2;
    }
