org.apache.commons.math3.linear.FieldLUDecomposition$Solver extends java.lang.Object implements org.apache.commons.math3.linear.FieldDecompositionSolver
private final org.apache.commons.math3.Field field
private final org.apache.commons.math3.FieldElement[][] lu
private final int[] pivot
private final boolean singular
    private void <init>(org.apache.commons.math3.Field, org.apache.commons.math3.FieldElement[][], int[], boolean)
    {
        org.apache.commons.math3.linear.FieldLUDecomposition$Solver r0;
        org.apache.commons.math3.Field r1;
        org.apache.commons.math3.FieldElement[][] r2;
        int[] $r3;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.linear.FieldLUDecomposition$Solver;

        r1 := @parameter0: org.apache.commons.math3.Field;

        r2 := @parameter1: org.apache.commons.math3.FieldElement[][];

        $r3 := @parameter2: int[];

        $z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.Field field> = r1;

        r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.FieldElement[][] lu> = r2;

        r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: int[] pivot> = $r3;

        r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: boolean singular> = $z0;

        return;
    }
    void <init>(org.apache.commons.math3.Field, org.apache.commons.math3.FieldElement[][], int[], boolean, org.apache.commons.math3.linear.FieldLUDecomposition$1)
    {
        org.apache.commons.math3.linear.FieldLUDecomposition$Solver r0;
        org.apache.commons.math3.Field $r1;
        org.apache.commons.math3.FieldElement[][] $r2;
        int[] $r3;
        boolean $z0;
        org.apache.commons.math3.linear.FieldLUDecomposition$1 $r4;

        r0 := @this: org.apache.commons.math3.linear.FieldLUDecomposition$Solver;

        $r1 := @parameter0: org.apache.commons.math3.Field;

        $r2 := @parameter1: org.apache.commons.math3.FieldElement[][];

        $r3 := @parameter2: int[];

        $z0 := @parameter3: boolean;

        $r4 := @parameter4: org.apache.commons.math3.linear.FieldLUDecomposition$1;

        specialinvoke r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: void <init>(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][],int[],boolean)>($r1, $r2, $r3, $z0);

        return;
    }
    public org.apache.commons.math3.linear.FieldMatrix getInverse()
    {
        org.apache.commons.math3.linear.FieldLUDecomposition$Solver r0;
        org.apache.commons.math3.linear.Array2DRowFieldMatrix r1;
        int i0, i1;
        int[] $r2;
        org.apache.commons.math3.Field $r3;
        java.lang.Object $r4;
        org.apache.commons.math3.FieldElement r5;
        org.apache.commons.math3.linear.FieldMatrix $r6;

        r0 := @this: org.apache.commons.math3.linear.FieldLUDecomposition$Solver;

        $r2 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: int[] pivot>;

        i0 = lengthof $r2;

        $r3 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.Field field>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.Field: java.lang.Object getOne()>();

        r5 = (org.apache.commons.math3.FieldElement) $r4;

        r1 = new org.apache.commons.math3.linear.Array2DRowFieldMatrix;

        $r3 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.Field field>;

        specialinvoke r1.<org.apache.commons.math3.linear.Array2DRowFieldMatrix: void <init>(org.apache.commons.math3.Field,int,int)>($r3, i0, i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        interfaceinvoke r1.<org.apache.commons.math3.linear.FieldMatrix: void setEntry(int,int,org.apache.commons.math3.FieldElement)>(i1, i1, r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r6 = virtualinvoke r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.linear.FieldMatrix solve(org.apache.commons.math3.linear.FieldMatrix)>(r1);

        return $r6;
    }
    public boolean isNonSingular()
    {
        org.apache.commons.math3.linear.FieldLUDecomposition$Solver r0;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.linear.FieldLUDecomposition$Solver;

        $z0 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: boolean singular>;

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public org.apache.commons.math3.linear.ArrayFieldVector solve(org.apache.commons.math3.linear.ArrayFieldVector)
    {
        org.apache.commons.math3.linear.FieldLUDecomposition$Solver r0;
        org.apache.commons.math3.linear.ArrayFieldVector r1;
        int i0, $i1, $i2;
        int[] $r2;
        org.apache.commons.math3.exception.DimensionMismatchException $r3;
        boolean $z0;
        org.apache.commons.math3.linear.SingularMatrixException $r4;
        org.apache.commons.math3.Field $r5;
        java.lang.Object[] $r6;
        org.apache.commons.math3.FieldElement[] r7, $r11;
        org.apache.commons.math3.FieldElement $r8, $r9, $r12;
        org.apache.commons.math3.FieldElement[][] $r10;
        java.lang.Object $r13;

        r0 := @this: org.apache.commons.math3.linear.FieldLUDecomposition$Solver;

        r1 := @parameter0: org.apache.commons.math3.linear.ArrayFieldVector;

        $r2 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: int[] pivot>;

        i0 = lengthof $r2;

        $i1 = virtualinvoke r1.<org.apache.commons.math3.linear.ArrayFieldVector: int getDimension()>();

        if $i1 == i0 goto label01;

        $r3 = new org.apache.commons.math3.exception.DimensionMismatchException;

        specialinvoke $r3.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i1, i0);

        throw $r3;

     label01:
        $z0 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: boolean singular>;

        if $z0 == 0 goto label02;

        $r4 = new org.apache.commons.math3.linear.SingularMatrixException;

        specialinvoke $r4.<org.apache.commons.math3.linear.SingularMatrixException: void <init>()>();

        throw $r4;

     label02:
        $r5 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.Field field>;

        $r6 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[] buildArray(org.apache.commons.math3.Field,int)>($r5, i0);

        r7 = (org.apache.commons.math3.FieldElement[]) $r6;

        $i1 = 0;

     label03:
        if $i1 >= i0 goto label04;

        $r2 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: int[] pivot>;

        $i2 = $r2[$i1];

        $r8 = virtualinvoke r1.<org.apache.commons.math3.linear.ArrayFieldVector: org.apache.commons.math3.FieldElement getEntry(int)>($i2);

        r7[$i1] = $r8;

        $i1 = $i1 + 1;

        goto label03;

     label04:
        $i1 = 0;

     label05:
        if $i1 >= i0 goto label08;

        $r8 = r7[$i1];

        $i2 = $i1 + 1;

     label06:
        if $i2 >= i0 goto label07;

        $r9 = r7[$i2];

        $r10 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.FieldElement[][] lu>;

        $r11 = $r10[$i2];

        $r12 = $r11[$i1];

        $r13 = interfaceinvoke $r8.<org.apache.commons.math3.FieldElement: java.lang.Object multiply(java.lang.Object)>($r12);

        $r13 = interfaceinvoke $r9.<org.apache.commons.math3.FieldElement: java.lang.Object subtract(java.lang.Object)>($r13);

        $r9 = (org.apache.commons.math3.FieldElement) $r13;

        r7[$i2] = $r9;

        $i2 = $i2 + 1;

        goto label06;

     label07:
        $i1 = $i1 + 1;

        goto label05;

     label08:
        i0 = i0 + -1;

     label09:
        if i0 < 0 goto label12;

        $r8 = r7[i0];

        $r10 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.FieldElement[][] lu>;

        $r11 = $r10[i0];

        $r9 = $r11[i0];

        $r13 = interfaceinvoke $r8.<org.apache.commons.math3.FieldElement: java.lang.Object divide(java.lang.Object)>($r9);

        $r8 = (org.apache.commons.math3.FieldElement) $r13;

        r7[i0] = $r8;

        $r8 = r7[i0];

        $i1 = 0;

     label10:
        if $i1 >= i0 goto label11;

        $r9 = r7[$i1];

        $r10 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.FieldElement[][] lu>;

        $r11 = $r10[$i1];

        $r12 = $r11[i0];

        $r13 = interfaceinvoke $r8.<org.apache.commons.math3.FieldElement: java.lang.Object multiply(java.lang.Object)>($r12);

        $r13 = interfaceinvoke $r9.<org.apache.commons.math3.FieldElement: java.lang.Object subtract(java.lang.Object)>($r13);

        $r9 = (org.apache.commons.math3.FieldElement) $r13;

        r7[$i1] = $r9;

        $i1 = $i1 + 1;

        goto label10;

     label11:
        i0 = i0 + -1;

        goto label09;

     label12:
        r1 = new org.apache.commons.math3.linear.ArrayFieldVector;

        specialinvoke r1.<org.apache.commons.math3.linear.ArrayFieldVector: void <init>(org.apache.commons.math3.FieldElement[],boolean)>(r7, 0);

        return r1;
    }
    public org.apache.commons.math3.linear.FieldMatrix solve(org.apache.commons.math3.linear.FieldMatrix)
    {
        org.apache.commons.math3.linear.FieldLUDecomposition$Solver r0;
        org.apache.commons.math3.linear.FieldMatrix r1;
        org.apache.commons.math3.FieldElement[] r2, r10, $r12;
        org.apache.commons.math3.FieldElement r3, $r13, $r14;
        int i0, i1, $i2, i3, i4;
        int[] $r4;
        org.apache.commons.math3.exception.DimensionMismatchException $r5;
        boolean $z0;
        org.apache.commons.math3.linear.SingularMatrixException $r6;
        org.apache.commons.math3.Field $r7;
        java.lang.Object[][] $r8;
        org.apache.commons.math3.FieldElement[][] r9, $r11;
        java.lang.Object $r15;
        org.apache.commons.math3.linear.Array2DRowFieldMatrix $r16;

        r0 := @this: org.apache.commons.math3.linear.FieldLUDecomposition$Solver;

        r1 := @parameter0: org.apache.commons.math3.linear.FieldMatrix;

        $r4 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: int[] pivot>;

        i0 = lengthof $r4;

        $i2 = interfaceinvoke r1.<org.apache.commons.math3.linear.FieldMatrix: int getRowDimension()>();

        if $i2 == i0 goto label01;

        $r5 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i2 = interfaceinvoke r1.<org.apache.commons.math3.linear.FieldMatrix: int getRowDimension()>();

        specialinvoke $r5.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i2, i0);

        throw $r5;

     label01:
        $z0 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: boolean singular>;

        if $z0 == 0 goto label02;

        $r6 = new org.apache.commons.math3.linear.SingularMatrixException;

        specialinvoke $r6.<org.apache.commons.math3.linear.SingularMatrixException: void <init>()>();

        throw $r6;

     label02:
        $i2 = interfaceinvoke r1.<org.apache.commons.math3.linear.FieldMatrix: int getColumnDimension()>();

        $r7 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.Field field>;

        $r8 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[][] buildArray(org.apache.commons.math3.Field,int,int)>($r7, i0, $i2);

        r9 = (org.apache.commons.math3.FieldElement[][]) $r8;

        i3 = 0;

     label03:
        if i3 >= i0 goto label06;

        r2 = r9[i3];

        $r4 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: int[] pivot>;

        i1 = $r4[i3];

        i4 = 0;

     label04:
        if i4 >= $i2 goto label05;

        r3 = interfaceinvoke r1.<org.apache.commons.math3.linear.FieldMatrix: org.apache.commons.math3.FieldElement getEntry(int,int)>(i1, i4);

        r2[i4] = r3;

        i4 = i4 + 1;

        goto label04;

     label05:
        i3 = i3 + 1;

        goto label03;

     label06:
        i1 = 0;

     label07:
        if i1 >= i0 goto label12;

        r2 = r9[i1];

        i3 = i1 + 1;

     label08:
        if i3 >= i0 goto label11;

        r10 = r9[i3];

        $r11 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.FieldElement[][] lu>;

        $r12 = $r11[i3];

        r3 = $r12[i1];

        i4 = 0;

     label09:
        if i4 >= $i2 goto label10;

        $r13 = r10[i4];

        $r14 = r2[i4];

        $r15 = interfaceinvoke $r14.<org.apache.commons.math3.FieldElement: java.lang.Object multiply(java.lang.Object)>(r3);

        $r15 = interfaceinvoke $r13.<org.apache.commons.math3.FieldElement: java.lang.Object subtract(java.lang.Object)>($r15);

        $r13 = (org.apache.commons.math3.FieldElement) $r15;

        r10[i4] = $r13;

        i4 = i4 + 1;

        goto label09;

     label10:
        i3 = i3 + 1;

        goto label08;

     label11:
        i1 = i1 + 1;

        goto label07;

     label12:
        i0 = i0 + -1;

     label13:
        if i0 < 0 goto label20;

        r2 = r9[i0];

        $r11 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.FieldElement[][] lu>;

        r10 = $r11[i0];

        r3 = r10[i0];

        i1 = 0;

     label14:
        if i1 >= $i2 goto label15;

        $r13 = r2[i1];

        $r15 = interfaceinvoke $r13.<org.apache.commons.math3.FieldElement: java.lang.Object divide(java.lang.Object)>(r3);

        $r13 = (org.apache.commons.math3.FieldElement) $r15;

        r2[i1] = $r13;

        i1 = i1 + 1;

        goto label14;

     label15:
        i1 = 0;

     label16:
        if i1 >= i0 goto label19;

        r10 = r9[i1];

        $r11 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.FieldElement[][] lu>;

        $r12 = $r11[i1];

        r3 = $r12[i0];

        i3 = 0;

     label17:
        if i3 >= $i2 goto label18;

        $r13 = r10[i3];

        $r14 = r2[i3];

        $r15 = interfaceinvoke $r14.<org.apache.commons.math3.FieldElement: java.lang.Object multiply(java.lang.Object)>(r3);

        $r15 = interfaceinvoke $r13.<org.apache.commons.math3.FieldElement: java.lang.Object subtract(java.lang.Object)>($r15);

        $r13 = (org.apache.commons.math3.FieldElement) $r15;

        r10[i3] = $r13;

        i3 = i3 + 1;

        goto label17;

     label18:
        i1 = i1 + 1;

        goto label16;

     label19:
        i0 = i0 + -1;

        goto label13;

     label20:
        $r16 = new org.apache.commons.math3.linear.Array2DRowFieldMatrix;

        $r7 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.Field field>;

        specialinvoke $r16.<org.apache.commons.math3.linear.Array2DRowFieldMatrix: void <init>(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][],boolean)>($r7, r9, 0);

        return $r16;
    }
    public org.apache.commons.math3.linear.FieldVector solve(org.apache.commons.math3.linear.FieldVector)
    {
        org.apache.commons.math3.linear.FieldLUDecomposition$Solver r0;
        org.apache.commons.math3.linear.FieldVector r1;
        java.lang.ClassCastException r2;
        int i0, $i1, $i2;
        org.apache.commons.math3.linear.ArrayFieldVector $r3;
        int[] $r4;
        org.apache.commons.math3.exception.DimensionMismatchException $r5;
        boolean $z0;
        org.apache.commons.math3.linear.SingularMatrixException $r6;
        org.apache.commons.math3.Field $r7;
        java.lang.Object[] $r8;
        org.apache.commons.math3.FieldElement[] r9, $r13;
        org.apache.commons.math3.FieldElement $r10, $r11, $r14;
        org.apache.commons.math3.FieldElement[][] $r12;
        java.lang.Object $r15;

        r0 := @this: org.apache.commons.math3.linear.FieldLUDecomposition$Solver;

        r1 := @parameter0: org.apache.commons.math3.linear.FieldVector;

     label01:
        $r3 = (org.apache.commons.math3.linear.ArrayFieldVector) r1;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.linear.ArrayFieldVector solve(org.apache.commons.math3.linear.ArrayFieldVector)>($r3);

     label02:
        return $r3;

     label03:
        r2 := @caughtexception;

        $r4 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: int[] pivot>;

        i0 = lengthof $r4;

        $i1 = interfaceinvoke r1.<org.apache.commons.math3.linear.FieldVector: int getDimension()>();

        if $i1 == i0 goto label04;

        $r5 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i1 = interfaceinvoke r1.<org.apache.commons.math3.linear.FieldVector: int getDimension()>();

        specialinvoke $r5.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i1, i0);

        throw $r5;

     label04:
        $z0 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: boolean singular>;

        if $z0 == 0 goto label05;

        $r6 = new org.apache.commons.math3.linear.SingularMatrixException;

        specialinvoke $r6.<org.apache.commons.math3.linear.SingularMatrixException: void <init>()>();

        throw $r6;

     label05:
        $r7 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.Field field>;

        $r8 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[] buildArray(org.apache.commons.math3.Field,int)>($r7, i0);

        r9 = (org.apache.commons.math3.FieldElement[]) $r8;

        $i1 = 0;

     label06:
        if $i1 >= i0 goto label07;

        $r4 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: int[] pivot>;

        $i2 = $r4[$i1];

        $r10 = interfaceinvoke r1.<org.apache.commons.math3.linear.FieldVector: org.apache.commons.math3.FieldElement getEntry(int)>($i2);

        r9[$i1] = $r10;

        $i1 = $i1 + 1;

        goto label06;

     label07:
        $i1 = 0;

     label08:
        if $i1 >= i0 goto label11;

        $r10 = r9[$i1];

        $i2 = $i1 + 1;

     label09:
        if $i2 >= i0 goto label10;

        $r11 = r9[$i2];

        $r12 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.FieldElement[][] lu>;

        $r13 = $r12[$i2];

        $r14 = $r13[$i1];

        $r15 = interfaceinvoke $r10.<org.apache.commons.math3.FieldElement: java.lang.Object multiply(java.lang.Object)>($r14);

        $r15 = interfaceinvoke $r11.<org.apache.commons.math3.FieldElement: java.lang.Object subtract(java.lang.Object)>($r15);

        $r11 = (org.apache.commons.math3.FieldElement) $r15;

        r9[$i2] = $r11;

        $i2 = $i2 + 1;

        goto label09;

     label10:
        $i1 = $i1 + 1;

        goto label08;

     label11:
        i0 = i0 + -1;

     label12:
        if i0 < 0 goto label15;

        $r10 = r9[i0];

        $r12 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.FieldElement[][] lu>;

        $r13 = $r12[i0];

        $r11 = $r13[i0];

        $r15 = interfaceinvoke $r10.<org.apache.commons.math3.FieldElement: java.lang.Object divide(java.lang.Object)>($r11);

        $r10 = (org.apache.commons.math3.FieldElement) $r15;

        r9[i0] = $r10;

        $r10 = r9[i0];

        $i1 = 0;

     label13:
        if $i1 >= i0 goto label14;

        $r11 = r9[$i1];

        $r12 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.FieldElement[][] lu>;

        $r13 = $r12[$i1];

        $r14 = $r13[i0];

        $r15 = interfaceinvoke $r10.<org.apache.commons.math3.FieldElement: java.lang.Object multiply(java.lang.Object)>($r14);

        $r15 = interfaceinvoke $r11.<org.apache.commons.math3.FieldElement: java.lang.Object subtract(java.lang.Object)>($r15);

        $r11 = (org.apache.commons.math3.FieldElement) $r15;

        r9[$i1] = $r11;

        $i1 = $i1 + 1;

        goto label13;

     label14:
        i0 = i0 + -1;

        goto label12;

     label15:
        $r3 = new org.apache.commons.math3.linear.ArrayFieldVector;

        $r7 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.Field field>;

        specialinvoke $r3.<org.apache.commons.math3.linear.ArrayFieldVector: void <init>(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[],boolean)>($r7, r9, 0);

        return $r3;

        catch java.lang.ClassCastException from label01 to label02 with label03;
    }
