org.apache.commons.math3.linear.RealVectorFormat extends java.lang.Object
private static final java.lang.String DEFAULT_PREFIX
private static final java.lang.String DEFAULT_SEPARATOR
private static final java.lang.String DEFAULT_SUFFIX
private final java.text.NumberFormat format
private final java.lang.String prefix
private final java.lang.String separator
private final java.lang.String suffix
private final java.lang.String trimmedPrefix
private final java.lang.String trimmedSeparator
private final java.lang.String trimmedSuffix
    public void <init>()
    {
        org.apache.commons.math3.linear.RealVectorFormat r0;
        java.text.NumberFormat $r1;

        r0 := @this: org.apache.commons.math3.linear.RealVectorFormat;

        $r1 = staticinvoke <org.apache.commons.math3.util.CompositeFormat: java.text.NumberFormat getDefaultNumberFormat()>();

        specialinvoke r0.<org.apache.commons.math3.linear.RealVectorFormat: void <init>(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)>("{", "}", "; ", $r1);

        return;
    }
    public void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.commons.math3.linear.RealVectorFormat r0;
        java.lang.String $r1, $r2, $r3;
        java.text.NumberFormat $r4;

        r0 := @this: org.apache.commons.math3.linear.RealVectorFormat;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = staticinvoke <org.apache.commons.math3.util.CompositeFormat: java.text.NumberFormat getDefaultNumberFormat()>();

        specialinvoke r0.<org.apache.commons.math3.linear.RealVectorFormat: void <init>(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)>($r1, $r2, $r3, $r4);

        return;
    }
    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.text.NumberFormat)
    {
        org.apache.commons.math3.linear.RealVectorFormat r0;
        java.lang.String $r1, $r2, $r3;
        java.text.NumberFormat $r4;

        r0 := @this: org.apache.commons.math3.linear.RealVectorFormat;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.text.NumberFormat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.linear.RealVectorFormat: java.lang.String prefix> = $r1;

        r0.<org.apache.commons.math3.linear.RealVectorFormat: java.lang.String suffix> = $r2;

        r0.<org.apache.commons.math3.linear.RealVectorFormat: java.lang.String separator> = $r3;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        r0.<org.apache.commons.math3.linear.RealVectorFormat: java.lang.String trimmedPrefix> = $r1;

        $r1 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        r0.<org.apache.commons.math3.linear.RealVectorFormat: java.lang.String trimmedSuffix> = $r1;

        $r1 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        r0.<org.apache.commons.math3.linear.RealVectorFormat: java.lang.String trimmedSeparator> = $r1;

        r0.<org.apache.commons.math3.linear.RealVectorFormat: java.text.NumberFormat format> = $r4;

        return;
    }
    public void <init>(java.text.NumberFormat)
    {
        org.apache.commons.math3.linear.RealVectorFormat r0;
        java.text.NumberFormat $r1;

        r0 := @this: org.apache.commons.math3.linear.RealVectorFormat;

        $r1 := @parameter0: java.text.NumberFormat;

        specialinvoke r0.<org.apache.commons.math3.linear.RealVectorFormat: void <init>(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)>("{", "}", "; ", $r1);

        return;
    }
    public static java.util.Locale[] getAvailableLocales()
    {
        java.util.Locale[] $r0;

        $r0 = staticinvoke <java.text.NumberFormat: java.util.Locale[] getAvailableLocales()>();

        return $r0;
    }
    public static org.apache.commons.math3.linear.RealVectorFormat getInstance()
    {
        java.util.Locale $r0;
        org.apache.commons.math3.linear.RealVectorFormat $r1;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = staticinvoke <org.apache.commons.math3.linear.RealVectorFormat: org.apache.commons.math3.linear.RealVectorFormat getInstance(java.util.Locale)>($r0);

        return $r1;
    }
    public static org.apache.commons.math3.linear.RealVectorFormat getInstance(java.util.Locale)
    {
        java.util.Locale $r0;
        org.apache.commons.math3.linear.RealVectorFormat $r1;
        java.text.NumberFormat $r2;

        $r0 := @parameter0: java.util.Locale;

        $r1 = new org.apache.commons.math3.linear.RealVectorFormat;

        $r2 = staticinvoke <org.apache.commons.math3.util.CompositeFormat: java.text.NumberFormat getDefaultNumberFormat(java.util.Locale)>($r0);

        specialinvoke $r1.<org.apache.commons.math3.linear.RealVectorFormat: void <init>(java.text.NumberFormat)>($r2);

        return $r1;
    }
    public java.lang.String format(org.apache.commons.math3.linear.RealVector)
    {
        org.apache.commons.math3.linear.RealVectorFormat r0;
        org.apache.commons.math3.linear.RealVector $r1;
        java.text.FieldPosition $r2;
        java.lang.StringBuffer $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.commons.math3.linear.RealVectorFormat;

        $r1 := @parameter0: org.apache.commons.math3.linear.RealVector;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r2 = new java.text.FieldPosition;

        specialinvoke $r2.<java.text.FieldPosition: void <init>(int)>(0);

        $r3 = virtualinvoke r0.<org.apache.commons.math3.linear.RealVectorFormat: java.lang.StringBuffer format(org.apache.commons.math3.linear.RealVector,java.lang.StringBuffer,java.text.FieldPosition)>($r1, $r3, $r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }
    public java.lang.StringBuffer format(org.apache.commons.math3.linear.RealVector, java.lang.StringBuffer, java.text.FieldPosition)
    {
        org.apache.commons.math3.linear.RealVectorFormat r0;
        org.apache.commons.math3.linear.RealVector $r1;
        java.lang.StringBuffer $r2;
        java.text.FieldPosition $r3;
        java.lang.String $r4;
        int i0, $i1;
        double $d0;
        java.text.NumberFormat $r5;

        r0 := @this: org.apache.commons.math3.linear.RealVectorFormat;

        $r1 := @parameter0: org.apache.commons.math3.linear.RealVector;

        $r2 := @parameter1: java.lang.StringBuffer;

        $r3 := @parameter2: java.text.FieldPosition;

        virtualinvoke $r3.<java.text.FieldPosition: void setBeginIndex(int)>(0);

        virtualinvoke $r3.<java.text.FieldPosition: void setEndIndex(int)>(0);

        $r4 = r0.<org.apache.commons.math3.linear.RealVectorFormat: java.lang.String prefix>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        i0 = 0;

     label1:
        $i1 = virtualinvoke $r1.<org.apache.commons.math3.linear.RealVector: int getDimension()>();

        if i0 >= $i1 goto label3;

        if i0 <= 0 goto label2;

        $r4 = r0.<org.apache.commons.math3.linear.RealVectorFormat: java.lang.String separator>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label2:
        $d0 = virtualinvoke $r1.<org.apache.commons.math3.linear.RealVector: double getEntry(int)>(i0);

        $r5 = r0.<org.apache.commons.math3.linear.RealVectorFormat: java.text.NumberFormat format>;

        staticinvoke <org.apache.commons.math3.util.CompositeFormat: java.lang.StringBuffer formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)>($d0, $r5, $r2, $r3);

        i0 = i0 + 1;

        goto label1;

     label3:
        $r4 = r0.<org.apache.commons.math3.linear.RealVectorFormat: java.lang.String suffix>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        return $r2;
    }
    public java.text.NumberFormat getFormat()
    {
        org.apache.commons.math3.linear.RealVectorFormat r0;
        java.text.NumberFormat r1;

        r0 := @this: org.apache.commons.math3.linear.RealVectorFormat;

        r1 = r0.<org.apache.commons.math3.linear.RealVectorFormat: java.text.NumberFormat format>;

        return r1;
    }
    public java.lang.String getPrefix()
    {
        org.apache.commons.math3.linear.RealVectorFormat r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.math3.linear.RealVectorFormat;

        r1 = r0.<org.apache.commons.math3.linear.RealVectorFormat: java.lang.String prefix>;

        return r1;
    }
    public java.lang.String getSeparator()
    {
        org.apache.commons.math3.linear.RealVectorFormat r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.math3.linear.RealVectorFormat;

        r1 = r0.<org.apache.commons.math3.linear.RealVectorFormat: java.lang.String separator>;

        return r1;
    }
    public java.lang.String getSuffix()
    {
        org.apache.commons.math3.linear.RealVectorFormat r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.math3.linear.RealVectorFormat;

        r1 = r0.<org.apache.commons.math3.linear.RealVectorFormat: java.lang.String suffix>;

        return r1;
    }
    public org.apache.commons.math3.linear.ArrayRealVector parse(java.lang.String)
    {
        org.apache.commons.math3.linear.RealVectorFormat r0;
        java.lang.String $r1;
        java.text.ParsePosition r2;
        org.apache.commons.math3.linear.ArrayRealVector $r3;
        int $i0;
        org.apache.commons.math3.exception.MathParseException $r4;

        r0 := @this: org.apache.commons.math3.linear.RealVectorFormat;

        $r1 := @parameter0: java.lang.String;

        r2 = new java.text.ParsePosition;

        specialinvoke r2.<java.text.ParsePosition: void <init>(int)>(0);

        $r3 = virtualinvoke r0.<org.apache.commons.math3.linear.RealVectorFormat: org.apache.commons.math3.linear.ArrayRealVector parse(java.lang.String,java.text.ParsePosition)>($r1, r2);

        $i0 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        if $i0 != 0 goto label1;

        $r4 = new org.apache.commons.math3.exception.MathParseException;

        $i0 = virtualinvoke r2.<java.text.ParsePosition: int getErrorIndex()>();

        specialinvoke $r4.<org.apache.commons.math3.exception.MathParseException: void <init>(java.lang.String,int,java.lang.Class)>($r1, $i0, class "Lorg/apache/commons/math3/linear/ArrayRealVector;");

        throw $r4;

     label1:
        return $r3;
    }
    public org.apache.commons.math3.linear.ArrayRealVector parse(java.lang.String, java.text.ParsePosition)
    {
        org.apache.commons.math3.linear.RealVectorFormat r0;
        java.lang.String $r1, $r5;
        java.text.ParsePosition $r2;
        java.util.ArrayList r3;
        double[] r4;
        int $i0, $i1;
        boolean $z0, $z1;
        java.text.NumberFormat $r6;
        java.lang.Number $r7;
        java.lang.Object $r8;
        double $d0;
        org.apache.commons.math3.linear.ArrayRealVector $r9;

        r0 := @this: org.apache.commons.math3.linear.RealVectorFormat;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.text.ParsePosition;

        $i0 = virtualinvoke $r2.<java.text.ParsePosition: int getIndex()>();

        staticinvoke <org.apache.commons.math3.util.CompositeFormat: void parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)>($r1, $r2);

        $r5 = r0.<org.apache.commons.math3.linear.RealVectorFormat: java.lang.String trimmedPrefix>;

        $z0 = staticinvoke <org.apache.commons.math3.util.CompositeFormat: boolean parseFixedstring(java.lang.String,java.lang.String,java.text.ParsePosition)>($r1, $r5, $r2);

        if $z0 != 0 goto label1;

        return null;

     label1:
        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        $z0 = 1;

     label2:
        if $z0 == 0 goto label5;

        $z1 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label3;

        staticinvoke <org.apache.commons.math3.util.CompositeFormat: void parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)>($r1, $r2);

        $r5 = r0.<org.apache.commons.math3.linear.RealVectorFormat: java.lang.String trimmedSeparator>;

        $z1 = staticinvoke <org.apache.commons.math3.util.CompositeFormat: boolean parseFixedstring(java.lang.String,java.lang.String,java.text.ParsePosition)>($r1, $r5, $r2);

        if $z1 != 0 goto label3;

        $z0 = 0;

     label3:
        if $z0 == 0 goto label2;

        staticinvoke <org.apache.commons.math3.util.CompositeFormat: void parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)>($r1, $r2);

        $r6 = r0.<org.apache.commons.math3.linear.RealVectorFormat: java.text.NumberFormat format>;

        $r7 = staticinvoke <org.apache.commons.math3.util.CompositeFormat: java.lang.Number parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition)>($r1, $r6, $r2);

        if $r7 == null goto label4;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label2;

     label4:
        virtualinvoke $r2.<java.text.ParsePosition: void setIndex(int)>($i0);

        return null;

     label5:
        staticinvoke <org.apache.commons.math3.util.CompositeFormat: void parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)>($r1, $r2);

        $r5 = r0.<org.apache.commons.math3.linear.RealVectorFormat: java.lang.String trimmedSuffix>;

        $z0 = staticinvoke <org.apache.commons.math3.util.CompositeFormat: boolean parseFixedstring(java.lang.String,java.lang.String,java.text.ParsePosition)>($r1, $r5, $r2);

        if $z0 == 0 goto label8;

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        r4 = newarray (double)[$i0];

        $i0 = 0;

     label6:
        $i1 = lengthof r4;

        if $i0 >= $i1 goto label7;

        $r8 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>($i0);

        $r7 = (java.lang.Number) $r8;

        $d0 = virtualinvoke $r7.<java.lang.Number: double doubleValue()>();

        r4[$i0] = $d0;

        $i0 = $i0 + 1;

        goto label6;

     label7:
        $r9 = new org.apache.commons.math3.linear.ArrayRealVector;

        specialinvoke $r9.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(double[],boolean)>(r4, 0);

        return $r9;

     label8:
        return null;
    }
