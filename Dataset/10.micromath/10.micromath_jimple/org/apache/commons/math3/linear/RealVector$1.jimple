org.apache.commons.math3.linear.RealVector$1 extends java.lang.Object implements java.util.Iterator
private org.apache.commons.math3.linear.RealVector$Entry e
private int i
final org.apache.commons.math3.linear.RealVector this$0
final int val$dim
    void <init>(org.apache.commons.math3.linear.RealVector, int)
    {
        org.apache.commons.math3.linear.RealVector$1 r0;
        org.apache.commons.math3.linear.RealVector $r1;
        int $i0;
        org.apache.commons.math3.linear.RealVector$Entry $r2;

        r0 := @this: org.apache.commons.math3.linear.RealVector$1;

        $r1 := @parameter0: org.apache.commons.math3.linear.RealVector;

        $i0 := @parameter1: int;

        r0.<org.apache.commons.math3.linear.RealVector$1: org.apache.commons.math3.linear.RealVector this$0> = $r1;

        r0.<org.apache.commons.math3.linear.RealVector$1: int val$dim> = $i0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.linear.RealVector$1: int i> = 0;

        $r2 = new org.apache.commons.math3.linear.RealVector$Entry;

        $r1 = r0.<org.apache.commons.math3.linear.RealVector$1: org.apache.commons.math3.linear.RealVector this$0>;

        specialinvoke $r2.<org.apache.commons.math3.linear.RealVector$Entry: void <init>(org.apache.commons.math3.linear.RealVector)>($r1);

        r0.<org.apache.commons.math3.linear.RealVector$1: org.apache.commons.math3.linear.RealVector$Entry e> = $r2;

        return;
    }
    public boolean hasNext()
    {
        org.apache.commons.math3.linear.RealVector$1 r0;
        int $i0, $i1;

        r0 := @this: org.apache.commons.math3.linear.RealVector$1;

        $i1 = r0.<org.apache.commons.math3.linear.RealVector$1: int i>;

        $i0 = r0.<org.apache.commons.math3.linear.RealVector$1: int val$dim>;

        if $i1 >= $i0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public volatile java.lang.Object next()
    {
        org.apache.commons.math3.linear.RealVector$1 r0;
        org.apache.commons.math3.linear.RealVector$Entry $r1;

        r0 := @this: org.apache.commons.math3.linear.RealVector$1;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.linear.RealVector$1: org.apache.commons.math3.linear.RealVector$Entry next()>();

        return $r1;
    }
    public org.apache.commons.math3.linear.RealVector$Entry next()
    {
        org.apache.commons.math3.linear.RealVector$1 r0;
        int $i0, $i1;
        org.apache.commons.math3.linear.RealVector$Entry $r1;
        java.util.NoSuchElementException $r2;

        r0 := @this: org.apache.commons.math3.linear.RealVector$1;

        $i0 = r0.<org.apache.commons.math3.linear.RealVector$1: int i>;

        $i1 = r0.<org.apache.commons.math3.linear.RealVector$1: int val$dim>;

        if $i0 >= $i1 goto label1;

        $r1 = r0.<org.apache.commons.math3.linear.RealVector$1: org.apache.commons.math3.linear.RealVector$Entry e>;

        $i1 = r0.<org.apache.commons.math3.linear.RealVector$1: int i>;

        $i0 = $i1 + 1;

        r0.<org.apache.commons.math3.linear.RealVector$1: int i> = $i0;

        virtualinvoke $r1.<org.apache.commons.math3.linear.RealVector$Entry: void setIndex(int)>($i1);

        $r1 = r0.<org.apache.commons.math3.linear.RealVector$1: org.apache.commons.math3.linear.RealVector$Entry e>;

        return $r1;

     label1:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>()>();

        throw $r2;
    }
    public void remove() throws org.apache.commons.math3.exception.MathUnsupportedOperationException
    {
        org.apache.commons.math3.linear.RealVector$1 r0;
        org.apache.commons.math3.exception.MathUnsupportedOperationException $r1;

        r0 := @this: org.apache.commons.math3.linear.RealVector$1;

        $r1 = new org.apache.commons.math3.exception.MathUnsupportedOperationException;

        specialinvoke $r1.<org.apache.commons.math3.exception.MathUnsupportedOperationException: void <init>()>();

        throw $r1;
    }
