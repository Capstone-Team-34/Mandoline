org.apache.commons.math3.linear.AbstractRealMatrix$3 extends org.apache.commons.math3.linear.DefaultRealMatrixChangingVisitor
final org.apache.commons.math3.linear.AbstractRealMatrix this$0
final int[] val$selectedColumns
final int[] val$selectedRows
    void <init>(org.apache.commons.math3.linear.AbstractRealMatrix, int[], int[])
    {
        org.apache.commons.math3.linear.AbstractRealMatrix$3 r0;
        org.apache.commons.math3.linear.AbstractRealMatrix $r1;
        int[] $r2, $r3;

        r0 := @this: org.apache.commons.math3.linear.AbstractRealMatrix$3;

        $r1 := @parameter0: org.apache.commons.math3.linear.AbstractRealMatrix;

        $r2 := @parameter1: int[];

        $r3 := @parameter2: int[];

        r0.<org.apache.commons.math3.linear.AbstractRealMatrix$3: org.apache.commons.math3.linear.AbstractRealMatrix this$0> = $r1;

        r0.<org.apache.commons.math3.linear.AbstractRealMatrix$3: int[] val$selectedRows> = $r2;

        r0.<org.apache.commons.math3.linear.AbstractRealMatrix$3: int[] val$selectedColumns> = $r3;

        specialinvoke r0.<org.apache.commons.math3.linear.DefaultRealMatrixChangingVisitor: void <init>()>();

        return;
    }
    public double visit(int, int, double)
    {
        org.apache.commons.math3.linear.AbstractRealMatrix$3 r0;
        int $i0, $i1;
        double $d0;
        org.apache.commons.math3.linear.AbstractRealMatrix $r1;
        int[] $r2;

        r0 := @this: org.apache.commons.math3.linear.AbstractRealMatrix$3;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $d0 := @parameter2: double;

        $r1 = r0.<org.apache.commons.math3.linear.AbstractRealMatrix$3: org.apache.commons.math3.linear.AbstractRealMatrix this$0>;

        $r2 = r0.<org.apache.commons.math3.linear.AbstractRealMatrix$3: int[] val$selectedRows>;

        $i0 = $r2[$i0];

        $r2 = r0.<org.apache.commons.math3.linear.AbstractRealMatrix$3: int[] val$selectedColumns>;

        $i1 = $r2[$i1];

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.linear.AbstractRealMatrix: double getEntry(int,int)>($i0, $i1);

        return $d0;
    }
