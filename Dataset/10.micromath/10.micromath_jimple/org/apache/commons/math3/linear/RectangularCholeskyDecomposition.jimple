org.apache.commons.math3.linear.RectangularCholeskyDecomposition extends java.lang.Object
private int rank
private final org.apache.commons.math3.linear.RealMatrix root
    public void <init>(org.apache.commons.math3.linear.RealMatrix) throws org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException
    {
        org.apache.commons.math3.linear.RectangularCholeskyDecomposition r0;
        org.apache.commons.math3.linear.RealMatrix $r1;

        r0 := @this: org.apache.commons.math3.linear.RectangularCholeskyDecomposition;

        $r1 := @parameter0: org.apache.commons.math3.linear.RealMatrix;

        specialinvoke r0.<org.apache.commons.math3.linear.RectangularCholeskyDecomposition: void <init>(org.apache.commons.math3.linear.RealMatrix,double)>($r1, 0.0);

        return;
    }
    public void <init>(org.apache.commons.math3.linear.RealMatrix, double) throws org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException
    {
        org.apache.commons.math3.linear.RectangularCholeskyDecomposition r0;
        org.apache.commons.math3.linear.RealMatrix $r1;
        double $d0, $d1, d2, d3, d4, $d5, $d6;
        int i0, i1, $i2, i3, i4, i5, i7;
        double[] r2, $r8;
        double[][] $r3, r7;
        int[] $r4;
        java.lang.Class $r5;
        java.lang.Object $r6;
        boolean z0;
        byte $b6;
        org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException $r9;

        r0 := @this: org.apache.commons.math3.linear.RectangularCholeskyDecomposition;

        $r1 := @parameter0: org.apache.commons.math3.linear.RealMatrix;

        $d0 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i2 = interfaceinvoke $r1.<org.apache.commons.math3.linear.RealMatrix: int getRowDimension()>();

        $r3 = interfaceinvoke $r1.<org.apache.commons.math3.linear.RealMatrix: double[][] getData()>();

        $r4 = newarray (int)[2];

        $r4[0] = $i2;

        $r4[1] = $i2;

        $r5 = <java.lang.Double: java.lang.Class TYPE>;

        $r6 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r5, $r4);

        r7 = (double[][]) $r6;

        $r4 = newarray (int)[$i2];

        i3 = 0;

     label01:
        if i3 >= $i2 goto label02;

        $r4[i3] = i3;

        i3 = i3 + 1;

        goto label01;

     label02:
        i3 = 0;

        z0 = 1;

     label03:
        if z0 == 0 goto label18;

        i0 = i3;

        i4 = i3 + 1;

     label04:
        if i4 >= $i2 goto label06;

        i5 = $r4[i4];

        i1 = $r4[i0];

        r2 = $r3[i5];

        $d1 = r2[i5];

        r2 = $r3[i1];

        d4 = r2[i1];

        $b6 = $d1 cmpl d4;

        if $b6 <= 0 goto label05;

        i0 = i4;

     label05:
        i4 = i4 + 1;

        goto label04;

     label06:
        if i0 == i3 goto label07;

        i1 = $r4[i3];

        i4 = $r4[i0];

        $r4[i3] = i4;

        $r4[i0] = i1;

        r2 = r7[i3];

        $r8 = r7[i0];

        r7[i3] = $r8;

        r7[i0] = r2;

     label07:
        i0 = $r4[i3];

        r2 = $r3[i0];

        $d1 = r2[i0];

        $b6 = $d1 cmpg $d0;

        if $b6 > 0 goto label12;

        if i3 != 0 goto label08;

        $r9 = new org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException;

        r2 = $r3[i0];

        $d1 = r2[i0];

        specialinvoke $r9.<org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: void <init>(double,int,double)>($d1, i0, $d0);

        throw $r9;

     label08:
        i0 = i3;

     label09:
        if i0 >= $i2 goto label11;

        i1 = $r4[i0];

        r2 = $r3[i1];

        i1 = $r4[i0];

        $d1 = r2[i1];

        d4 = neg $d0;

        $b6 = $d1 cmpg d4;

        if $b6 >= 0 goto label10;

        $r9 = new org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException;

        $i2 = $r4[i0];

        r2 = $r3[$i2];

        $i2 = $r4[i0];

        $d1 = r2[$i2];

        specialinvoke $r9.<org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: void <init>(double,int,double)>($d1, i0, $d0);

        throw $r9;

     label10:
        i0 = i0 + 1;

        goto label09;

     label11:
        z0 = 0;

        goto label03;

     label12:
        r2 = $r3[i0];

        $d1 = r2[i0];

        $d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>($d1);

        r2 = r7[i3];

        r2[i3] = $d1;

        $d1 = 1.0 / $d1;

        r2 = $r3[i0];

        d4 = r2[i0];

        d4 = 1.0 / d4;

        i4 = i3 + 1;

     label13:
        if i4 >= $i2 goto label16;

        i5 = $r4[i4];

        r2 = $r3[i5];

        d2 = r2[i0];

        d2 = $d1 * d2;

        r2 = r7[i4];

        r2[i3] = d2;

        r2 = $r3[i5];

        d3 = r2[i5];

        $r8 = $r3[i5];

        $d6 = $r8[i0];

        $r8 = $r3[i5];

        $d5 = $r8[i0];

        $d5 = $d6 * $d5;

        $d5 = $d5 * d4;

        d3 = d3 - $d5;

        r2[i5] = d3;

        i7 = i3 + 1;

     label14:
        if i7 >= i4 goto label15;

        i1 = $r4[i7];

        r2 = $r3[i5];

        d3 = r2[i1];

        r2 = r7[i7];

        $d5 = r2[i3];

        $d5 = $d5 * d2;

        d3 = d3 - $d5;

        r2 = $r3[i5];

        r2[i1] = d3;

        r2 = $r3[i1];

        r2[i5] = d3;

        i7 = i7 + 1;

        goto label14;

     label15:
        i4 = i4 + 1;

        goto label13;

     label16:
        i3 = i3 + 1;

        if i3 >= $i2 goto label17;

        z0 = 1;

        goto label03;

     label17:
        z0 = 0;

        goto label03;

     label18:
        r0.<org.apache.commons.math3.linear.RectangularCholeskyDecomposition: int rank> = i3;

        $r1 = staticinvoke <org.apache.commons.math3.linear.MatrixUtils: org.apache.commons.math3.linear.RealMatrix createRealMatrix(int,int)>($i2, i3);

        r0.<org.apache.commons.math3.linear.RectangularCholeskyDecomposition: org.apache.commons.math3.linear.RealMatrix root> = $r1;

        i0 = 0;

     label19:
        if i0 >= $i2 goto label22;

        i1 = 0;

     label20:
        if i1 >= i3 goto label21;

        $r1 = r0.<org.apache.commons.math3.linear.RectangularCholeskyDecomposition: org.apache.commons.math3.linear.RealMatrix root>;

        i4 = $r4[i0];

        r2 = r7[i0];

        $d0 = r2[i1];

        interfaceinvoke $r1.<org.apache.commons.math3.linear.RealMatrix: void setEntry(int,int,double)>(i4, i1, $d0);

        i1 = i1 + 1;

        goto label20;

     label21:
        i0 = i0 + 1;

        goto label19;

     label22:
        return;
    }
    public int getRank()
    {
        org.apache.commons.math3.linear.RectangularCholeskyDecomposition r0;
        int i0;

        r0 := @this: org.apache.commons.math3.linear.RectangularCholeskyDecomposition;

        i0 = r0.<org.apache.commons.math3.linear.RectangularCholeskyDecomposition: int rank>;

        return i0;
    }
    public org.apache.commons.math3.linear.RealMatrix getRootMatrix()
    {
        org.apache.commons.math3.linear.RectangularCholeskyDecomposition r0;
        org.apache.commons.math3.linear.RealMatrix r1;

        r0 := @this: org.apache.commons.math3.linear.RectangularCholeskyDecomposition;

        r1 = r0.<org.apache.commons.math3.linear.RectangularCholeskyDecomposition: org.apache.commons.math3.linear.RealMatrix root>;

        return r1;
    }
