org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver extends org.apache.commons.math3.linear.IterativeLinearSolver
    public void <init>(int)
    {
        org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver r0;
        int $i0;

        r0 := @this: org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver;

        $i0 := @parameter0: int;

        specialinvoke r0.<org.apache.commons.math3.linear.IterativeLinearSolver: void <init>(int)>($i0);

        return;
    }
    public void <init>(org.apache.commons.math3.util.IterationManager) throws org.apache.commons.math3.exception.NullArgumentException
    {
        org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver r0;
        org.apache.commons.math3.util.IterationManager $r1;

        r0 := @this: org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver;

        $r1 := @parameter0: org.apache.commons.math3.util.IterationManager;

        specialinvoke r0.<org.apache.commons.math3.linear.IterativeLinearSolver: void <init>(org.apache.commons.math3.util.IterationManager)>($r1);

        return;
    }
    protected static void checkParameters(org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealVector, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.linear.NonSquareOperatorException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.linear.RealLinearOperator $r0, $r1;
        org.apache.commons.math3.linear.RealVector $r2, $r3;
        int $i0, $i1;
        org.apache.commons.math3.linear.NonSquareOperatorException $r4;
        org.apache.commons.math3.exception.DimensionMismatchException $r5;

        $r0 := @parameter0: org.apache.commons.math3.linear.RealLinearOperator;

        $r1 := @parameter1: org.apache.commons.math3.linear.RealLinearOperator;

        $r2 := @parameter2: org.apache.commons.math3.linear.RealVector;

        $r3 := @parameter3: org.apache.commons.math3.linear.RealVector;

        staticinvoke <org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver: void checkParameters(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector)>($r0, $r2, $r3);

        if $r1 == null goto label2;

        $i0 = virtualinvoke $r1.<org.apache.commons.math3.linear.RealLinearOperator: int getColumnDimension()>();

        $i1 = virtualinvoke $r1.<org.apache.commons.math3.linear.RealLinearOperator: int getRowDimension()>();

        if $i0 == $i1 goto label1;

        $r4 = new org.apache.commons.math3.linear.NonSquareOperatorException;

        $i0 = virtualinvoke $r1.<org.apache.commons.math3.linear.RealLinearOperator: int getColumnDimension()>();

        $i1 = virtualinvoke $r1.<org.apache.commons.math3.linear.RealLinearOperator: int getRowDimension()>();

        specialinvoke $r4.<org.apache.commons.math3.linear.NonSquareOperatorException: void <init>(int,int)>($i0, $i1);

        throw $r4;

     label1:
        $i0 = virtualinvoke $r1.<org.apache.commons.math3.linear.RealLinearOperator: int getRowDimension()>();

        $i1 = virtualinvoke $r0.<org.apache.commons.math3.linear.RealLinearOperator: int getRowDimension()>();

        if $i0 == $i1 goto label2;

        $r5 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i0 = virtualinvoke $r1.<org.apache.commons.math3.linear.RealLinearOperator: int getRowDimension()>();

        $i1 = virtualinvoke $r0.<org.apache.commons.math3.linear.RealLinearOperator: int getRowDimension()>();

        specialinvoke $r5.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i0, $i1);

        throw $r5;

     label2:
        return;
    }
    public org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.linear.NonSquareOperatorException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver r0;
        org.apache.commons.math3.linear.RealLinearOperator $r1, $r2;
        org.apache.commons.math3.linear.RealVector $r3;
        org.apache.commons.math3.linear.ArrayRealVector r4;
        int $i0;

        r0 := @this: org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver;

        $r1 := @parameter0: org.apache.commons.math3.linear.RealLinearOperator;

        $r2 := @parameter1: org.apache.commons.math3.linear.RealLinearOperator;

        $r3 := @parameter2: org.apache.commons.math3.linear.RealVector;

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>($r1);

        r4 = new org.apache.commons.math3.linear.ArrayRealVector;

        $i0 = virtualinvoke $r1.<org.apache.commons.math3.linear.RealLinearOperator: int getColumnDimension()>();

        specialinvoke r4.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>($i0);

        $r3 = virtualinvoke r0.<org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver: org.apache.commons.math3.linear.RealVector solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector)>($r1, $r2, $r3, r4);

        return $r3;
    }
    public org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealVector, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.linear.NonSquareOperatorException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver r0;
        org.apache.commons.math3.linear.RealLinearOperator $r1, $r2;
        org.apache.commons.math3.linear.RealVector $r3, $r4;

        r0 := @this: org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver;

        $r1 := @parameter0: org.apache.commons.math3.linear.RealLinearOperator;

        $r2 := @parameter1: org.apache.commons.math3.linear.RealLinearOperator;

        $r3 := @parameter2: org.apache.commons.math3.linear.RealVector;

        $r4 := @parameter3: org.apache.commons.math3.linear.RealVector;

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>($r4);

        $r4 = virtualinvoke $r4.<org.apache.commons.math3.linear.RealVector: org.apache.commons.math3.linear.RealVector copy()>();

        $r3 = virtualinvoke r0.<org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver: org.apache.commons.math3.linear.RealVector solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector)>($r1, $r2, $r3, $r4);

        return $r3;
    }
    public org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.linear.NonSquareOperatorException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver r0;
        org.apache.commons.math3.linear.RealLinearOperator $r1;
        org.apache.commons.math3.linear.RealVector $r2;
        org.apache.commons.math3.linear.ArrayRealVector r3;
        int $i0;

        r0 := @this: org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver;

        $r1 := @parameter0: org.apache.commons.math3.linear.RealLinearOperator;

        $r2 := @parameter1: org.apache.commons.math3.linear.RealVector;

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>($r1);

        r3 = new org.apache.commons.math3.linear.ArrayRealVector;

        $i0 = virtualinvoke $r1.<org.apache.commons.math3.linear.RealLinearOperator: int getColumnDimension()>();

        specialinvoke r3.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>($i0);

        virtualinvoke r3.<org.apache.commons.math3.linear.RealVector: void set(double)>(0.0);

        $r2 = virtualinvoke r0.<org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver: org.apache.commons.math3.linear.RealVector solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector)>($r1, null, $r2, r3);

        return $r2;
    }
    public org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealVector, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.linear.NonSquareOperatorException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver r0;
        org.apache.commons.math3.linear.RealLinearOperator $r1;
        org.apache.commons.math3.linear.RealVector $r2, $r3;

        r0 := @this: org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver;

        $r1 := @parameter0: org.apache.commons.math3.linear.RealLinearOperator;

        $r2 := @parameter1: org.apache.commons.math3.linear.RealVector;

        $r3 := @parameter2: org.apache.commons.math3.linear.RealVector;

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>($r3);

        $r3 = virtualinvoke $r3.<org.apache.commons.math3.linear.RealVector: org.apache.commons.math3.linear.RealVector copy()>();

        $r2 = virtualinvoke r0.<org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver: org.apache.commons.math3.linear.RealVector solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector)>($r1, null, $r2, $r3);

        return $r2;
    }
public abstract org.apache.commons.math3.linear.RealVector solveInPlace(org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealVector, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.linear.NonSquareOperatorException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MaxCountExceededException { 
// no body
} 
    public org.apache.commons.math3.linear.RealVector solveInPlace(org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealVector, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.linear.NonSquareOperatorException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver r0;
        org.apache.commons.math3.linear.RealLinearOperator $r1;
        org.apache.commons.math3.linear.RealVector $r2, $r3;

        r0 := @this: org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver;

        $r1 := @parameter0: org.apache.commons.math3.linear.RealLinearOperator;

        $r2 := @parameter1: org.apache.commons.math3.linear.RealVector;

        $r3 := @parameter2: org.apache.commons.math3.linear.RealVector;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver: org.apache.commons.math3.linear.RealVector solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector)>($r1, null, $r2, $r3);

        return $r2;
    }
