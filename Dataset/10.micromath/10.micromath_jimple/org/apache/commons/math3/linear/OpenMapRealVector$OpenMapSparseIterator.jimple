org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator extends java.lang.Object implements java.util.Iterator
private final org.apache.commons.math3.linear.RealVector$Entry current
private final org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator iter
final org.apache.commons.math3.linear.OpenMapRealVector this$0
    protected void <init>(org.apache.commons.math3.linear.OpenMapRealVector)
    {
        org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator r0;
        org.apache.commons.math3.linear.OpenMapRealVector $r1;
        org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator $r2;
        org.apache.commons.math3.util.OpenIntToDoubleHashMap $r3;
        org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry $r4;

        r0 := @this: org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator;

        $r1 := @parameter0: org.apache.commons.math3.linear.OpenMapRealVector;

        r0.<org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator: org.apache.commons.math3.linear.OpenMapRealVector this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <org.apache.commons.math3.linear.OpenMapRealVector: org.apache.commons.math3.util.OpenIntToDoubleHashMap access$000(org.apache.commons.math3.linear.OpenMapRealVector)>($r1);

        $r2 = virtualinvoke $r3.<org.apache.commons.math3.util.OpenIntToDoubleHashMap: org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator iterator()>();

        r0.<org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator: org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator iter> = $r2;

        $r4 = new org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry;

        $r2 = r0.<org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator: org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator iter>;

        specialinvoke $r4.<org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry: void <init>(org.apache.commons.math3.linear.OpenMapRealVector,org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator)>($r1, $r2);

        r0.<org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator: org.apache.commons.math3.linear.RealVector$Entry current> = $r4;

        return;
    }
    public boolean hasNext()
    {
        org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator r0;
        boolean $z0;
        org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator $r1;

        r0 := @this: org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator;

        $r1 = r0.<org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator: org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator iter>;

        $z0 = virtualinvoke $r1.<org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator: boolean hasNext()>();

        return $z0;
    }
    public volatile java.lang.Object next()
    {
        org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator r0;
        org.apache.commons.math3.linear.RealVector$Entry $r1;

        r0 := @this: org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator: org.apache.commons.math3.linear.RealVector$Entry next()>();

        return $r1;
    }
    public org.apache.commons.math3.linear.RealVector$Entry next()
    {
        org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator r0;
        org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator $r1;
        org.apache.commons.math3.linear.RealVector$Entry r2;

        r0 := @this: org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator;

        $r1 = r0.<org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator: org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator iter>;

        virtualinvoke $r1.<org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator: void advance()>();

        r2 = r0.<org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator: org.apache.commons.math3.linear.RealVector$Entry current>;

        return r2;
    }
    public void remove()
    {
        org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Not supported");

        throw $r1;
    }
