org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1 extends java.lang.Object implements java.util.Comparator
private final org.apache.commons.math3.linear.RealVector target
final org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer this$0
private final org.apache.commons.math3.linear.RealMatrix weight
    void <init>(org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer)
    {
        org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1 r0;
        org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer $r1;
        org.apache.commons.math3.linear.ArrayRealVector $r2;
        org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer $r3;
        double[] $r4;
        org.apache.commons.math3.linear.RealMatrix $r5;

        r0 := @this: org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1;

        $r1 := @parameter0: org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer;

        r0.<org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1: org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.apache.commons.math3.linear.ArrayRealVector;

        $r1 = r0.<org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1: org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer this$0>;

        $r3 = staticinvoke <org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer: org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer access$000(org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer)>($r1);

        $r4 = virtualinvoke $r3.<org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer: double[] getTarget()>();

        specialinvoke $r2.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(double[],boolean)>($r4, 0);

        r0.<org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1: org.apache.commons.math3.linear.RealVector target> = $r2;

        $r1 = r0.<org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1: org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer this$0>;

        $r3 = staticinvoke <org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer: org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer access$000(org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer)>($r1);

        $r5 = virtualinvoke $r3.<org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer: org.apache.commons.math3.linear.RealMatrix getWeight()>();

        r0.<org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1: org.apache.commons.math3.linear.RealMatrix weight> = $r5;

        return;
    }
    private double weightedResidual(org.apache.commons.math3.optim.PointVectorValuePair)
    {
        org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1 r0;
        org.apache.commons.math3.optim.PointVectorValuePair $r1;
        org.apache.commons.math3.linear.ArrayRealVector r2;
        double[] $r3;
        org.apache.commons.math3.linear.RealVector $r4, $r6;
        org.apache.commons.math3.linear.RealMatrix $r5;
        double $d0;

        r0 := @this: org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1;

        $r1 := @parameter0: org.apache.commons.math3.optim.PointVectorValuePair;

        r2 = new org.apache.commons.math3.linear.ArrayRealVector;

        $r3 = virtualinvoke $r1.<org.apache.commons.math3.optim.PointVectorValuePair: double[] getValueRef()>();

        specialinvoke r2.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(double[],boolean)>($r3, 0);

        $r4 = r0.<org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1: org.apache.commons.math3.linear.RealVector target>;

        $r4 = virtualinvoke $r4.<org.apache.commons.math3.linear.RealVector: org.apache.commons.math3.linear.RealVector subtract(org.apache.commons.math3.linear.RealVector)>(r2);

        $r5 = r0.<org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1: org.apache.commons.math3.linear.RealMatrix weight>;

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.linear.RealMatrix: org.apache.commons.math3.linear.RealVector operate(org.apache.commons.math3.linear.RealVector)>($r4);

        $d0 = virtualinvoke $r4.<org.apache.commons.math3.linear.RealVector: double dotProduct(org.apache.commons.math3.linear.RealVector)>($r6);

        return $d0;
    }
    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1 r0;
        int $i0;
        java.lang.Object $r1, $r2;
        org.apache.commons.math3.optim.PointVectorValuePair $r3, $r4;

        r0 := @this: org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (org.apache.commons.math3.optim.PointVectorValuePair) $r1;

        $r4 = (org.apache.commons.math3.optim.PointVectorValuePair) $r2;

        $i0 = virtualinvoke r0.<org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1: int compare(org.apache.commons.math3.optim.PointVectorValuePair,org.apache.commons.math3.optim.PointVectorValuePair)>($r3, $r4);

        return $i0;
    }
    public int compare(org.apache.commons.math3.optim.PointVectorValuePair, org.apache.commons.math3.optim.PointVectorValuePair)
    {
        org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1 r0;
        org.apache.commons.math3.optim.PointVectorValuePair $r1, $r2;
        double $d0, $d1;
        int $i0;

        r0 := @this: org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1;

        $r1 := @parameter0: org.apache.commons.math3.optim.PointVectorValuePair;

        $r2 := @parameter1: org.apache.commons.math3.optim.PointVectorValuePair;

        if $r1 != null goto label2;

        if $r2 != null goto label1;

        return 0;

     label1:
        return 1;

     label2:
        if $r2 != null goto label3;

        return -1;

     label3:
        $d0 = specialinvoke r0.<org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1: double weightedResidual(org.apache.commons.math3.optim.PointVectorValuePair)>($r1);

        $d1 = specialinvoke r0.<org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1: double weightedResidual(org.apache.commons.math3.optim.PointVectorValuePair)>($r2);

        $i0 = staticinvoke <java.lang.Double: int compare(double,double)>($d0, $d1);

        return $i0;
    }
