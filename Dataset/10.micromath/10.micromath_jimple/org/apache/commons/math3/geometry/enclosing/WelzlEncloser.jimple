org.apache.commons.math3.geometry.enclosing.WelzlEncloser extends java.lang.Object implements org.apache.commons.math3.geometry.enclosing.Encloser
private final org.apache.commons.math3.geometry.enclosing.SupportBallGenerator generator
private final double tolerance
    public void <init>(double, org.apache.commons.math3.geometry.enclosing.SupportBallGenerator)
    {
        org.apache.commons.math3.geometry.enclosing.WelzlEncloser r0;
        double $d0;
        org.apache.commons.math3.geometry.enclosing.SupportBallGenerator r1;

        r0 := @this: org.apache.commons.math3.geometry.enclosing.WelzlEncloser;

        $d0 := @parameter0: double;

        r1 := @parameter1: org.apache.commons.math3.geometry.enclosing.SupportBallGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.geometry.enclosing.WelzlEncloser: double tolerance> = $d0;

        r0.<org.apache.commons.math3.geometry.enclosing.WelzlEncloser: org.apache.commons.math3.geometry.enclosing.SupportBallGenerator generator> = r1;

        return;
    }
    private org.apache.commons.math3.geometry.enclosing.EnclosingBall moveToFrontBall(java.util.List, int, java.util.List)
    {
        org.apache.commons.math3.geometry.enclosing.WelzlEncloser r0;
        java.util.List r1, r2;
        int $i0, $i1, $i2, $i3;
        org.apache.commons.math3.geometry.enclosing.SupportBallGenerator $r3;
        org.apache.commons.math3.geometry.enclosing.EnclosingBall $r4, r5;
        org.apache.commons.math3.geometry.Point $r6;
        org.apache.commons.math3.geometry.Space $r7;
        java.lang.Object $r8;
        double $d0;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.geometry.enclosing.WelzlEncloser;

        r1 := @parameter0: java.util.List;

        $i0 := @parameter1: int;

        r2 := @parameter2: java.util.List;

        $r3 = r0.<org.apache.commons.math3.geometry.enclosing.WelzlEncloser: org.apache.commons.math3.geometry.enclosing.SupportBallGenerator generator>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.geometry.enclosing.SupportBallGenerator: org.apache.commons.math3.geometry.enclosing.EnclosingBall ballOnSupport(java.util.List)>(r2);

        r5 = $r4;

        $i1 = virtualinvoke $r4.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: int getSupportSize()>();

        $r6 = virtualinvoke $r4.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: org.apache.commons.math3.geometry.Point getCenter()>();

        $r7 = interfaceinvoke $r6.<org.apache.commons.math3.geometry.Point: org.apache.commons.math3.geometry.Space getSpace()>();

        $i2 = interfaceinvoke $r7.<org.apache.commons.math3.geometry.Space: int getDimension()>();

        if $i1 > $i2 goto label5;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label6;

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r6 = (org.apache.commons.math3.geometry.Point) $r8;

        $d0 = r0.<org.apache.commons.math3.geometry.enclosing.WelzlEncloser: double tolerance>;

        $z0 = virtualinvoke r5.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: boolean contains(org.apache.commons.math3.geometry.Point,double)>($r6, $d0);

        if $z0 != 0 goto label4;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r6);

        r5 = specialinvoke r0.<org.apache.commons.math3.geometry.enclosing.WelzlEncloser: org.apache.commons.math3.geometry.enclosing.EnclosingBall moveToFrontBall(java.util.List,int,java.util.List)>(r1, $i1, r2);

        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

        $i2 = $i2 + -1;

        interfaceinvoke r2.<java.util.List: java.lang.Object remove(int)>($i2);

        $i2 = $i1;

     label2:
        if $i2 <= 0 goto label3;

        $i3 = $i2 + -1;

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i3);

        interfaceinvoke r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i2, $r8);

        $i2 = $i2 + -1;

        goto label2;

     label3:
        interfaceinvoke r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(0, $r6);

     label4:
        $i1 = $i1 + 1;

        goto label1;

     label5:
        return $r4;

     label6:
        return r5;
    }
    private org.apache.commons.math3.geometry.enclosing.EnclosingBall pivotingBall(java.lang.Iterable)
    {
        org.apache.commons.math3.geometry.enclosing.WelzlEncloser r0;
        java.lang.Iterable r1;
        java.util.ArrayList r2, r4;
        org.apache.commons.math3.geometry.enclosing.EnclosingBall r3, r9, $r10;
        java.util.Iterator $r5;
        java.lang.Object $r6;
        org.apache.commons.math3.geometry.Point r7;
        org.apache.commons.math3.geometry.Space $r8;
        int $i0, $i2;
        double $d0, $d1;
        boolean $z0;
        byte $b1;
        org.apache.commons.math3.exception.MathInternalError $r11;
        java.util.List $r12;

        r0 := @this: org.apache.commons.math3.geometry.enclosing.WelzlEncloser;

        r1 := @parameter0: java.lang.Iterable;

        $r5 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.commons.math3.geometry.Point) $r6;

        r2 = new java.util.ArrayList;

        $r8 = interfaceinvoke r7.<org.apache.commons.math3.geometry.Point: org.apache.commons.math3.geometry.Space getSpace()>();

        $i0 = interfaceinvoke $r8.<org.apache.commons.math3.geometry.Space: int getDimension()>();

        $i0 = $i0 + 1;

        specialinvoke r2.<java.util.ArrayList: void <init>(int)>($i0);

        r4 = new java.util.ArrayList;

        $r8 = interfaceinvoke r7.<org.apache.commons.math3.geometry.Point: org.apache.commons.math3.geometry.Space getSpace()>();

        $i0 = interfaceinvoke $r8.<org.apache.commons.math3.geometry.Space: int getDimension()>();

        $i0 = $i0 + 1;

        specialinvoke r4.<java.util.ArrayList: void <init>(int)>($i0);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r7);

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        r9 = specialinvoke r0.<org.apache.commons.math3.geometry.enclosing.WelzlEncloser: org.apache.commons.math3.geometry.enclosing.EnclosingBall moveToFrontBall(java.util.List,int,java.util.List)>(r2, $i0, r4);

     label1:
        r7 = virtualinvoke r0.<org.apache.commons.math3.geometry.enclosing.WelzlEncloser: org.apache.commons.math3.geometry.Point selectFarthest(java.lang.Iterable,org.apache.commons.math3.geometry.enclosing.EnclosingBall)>(r1, r9);

        $d0 = r0.<org.apache.commons.math3.geometry.enclosing.WelzlEncloser: double tolerance>;

        $z0 = virtualinvoke r9.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: boolean contains(org.apache.commons.math3.geometry.Point,double)>(r7, $d0);

        if $z0 == 0 goto label2;

        return r9;

     label2:
        interfaceinvoke r4.<java.util.List: void clear()>();

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r7);

        r3 = r9;

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $r10 = specialinvoke r0.<org.apache.commons.math3.geometry.enclosing.WelzlEncloser: org.apache.commons.math3.geometry.enclosing.EnclosingBall moveToFrontBall(java.util.List,int,java.util.List)>(r2, $i0, r4);

        r9 = $r10;

        $d0 = virtualinvoke $r10.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: double getRadius()>();

        $d1 = virtualinvoke r3.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: double getRadius()>();

        $b1 = $d0 cmpg $d1;

        if $b1 >= 0 goto label3;

        $r11 = new org.apache.commons.math3.exception.MathInternalError;

        specialinvoke $r11.<org.apache.commons.math3.exception.MathInternalError: void <init>()>();

        throw $r11;

     label3:
        interfaceinvoke r2.<java.util.List: void add(int,java.lang.Object)>(0, r7);

        $i0 = virtualinvoke $r10.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: int getSupportSize()>();

        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

        $r12 = interfaceinvoke r2.<java.util.List: java.util.List subList(int,int)>($i0, $i2);

        interfaceinvoke $r12.<java.util.List: void clear()>();

        goto label1;
    }
    public org.apache.commons.math3.geometry.enclosing.EnclosingBall enclose(java.lang.Iterable)
    {
        org.apache.commons.math3.geometry.enclosing.WelzlEncloser r0;
        java.lang.Iterable r1;
        java.util.ArrayList $r2;
        java.util.Iterator $r3;
        boolean $z0;
        org.apache.commons.math3.geometry.enclosing.SupportBallGenerator $r4;
        org.apache.commons.math3.geometry.enclosing.EnclosingBall $r5;

        r0 := @this: org.apache.commons.math3.geometry.enclosing.WelzlEncloser;

        r1 := @parameter0: java.lang.Iterable;

        if r1 == null goto label1;

        $r3 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

     label1:
        $r4 = r0.<org.apache.commons.math3.geometry.enclosing.WelzlEncloser: org.apache.commons.math3.geometry.enclosing.SupportBallGenerator generator>;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.geometry.enclosing.SupportBallGenerator: org.apache.commons.math3.geometry.enclosing.EnclosingBall ballOnSupport(java.util.List)>($r2);

        return $r5;

     label2:
        $r5 = specialinvoke r0.<org.apache.commons.math3.geometry.enclosing.WelzlEncloser: org.apache.commons.math3.geometry.enclosing.EnclosingBall pivotingBall(java.lang.Iterable)>(r1);

        return $r5;
    }
    public org.apache.commons.math3.geometry.Point selectFarthest(java.lang.Iterable, org.apache.commons.math3.geometry.enclosing.EnclosingBall)
    {
        org.apache.commons.math3.geometry.enclosing.WelzlEncloser r0;
        java.lang.Iterable r1;
        org.apache.commons.math3.geometry.enclosing.EnclosingBall r2;
        org.apache.commons.math3.geometry.Point $r3, r4, r7;
        double d0, $d1;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        byte $b0;

        r0 := @this: org.apache.commons.math3.geometry.enclosing.WelzlEncloser;

        r1 := @parameter0: java.lang.Iterable;

        r2 := @parameter1: org.apache.commons.math3.geometry.enclosing.EnclosingBall;

        $r3 = virtualinvoke r2.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: org.apache.commons.math3.geometry.Point getCenter()>();

        r4 = null;

        d0 = -1.0;

        $r5 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.commons.math3.geometry.Point) $r6;

        $d1 = interfaceinvoke r7.<org.apache.commons.math3.geometry.Point: double distance(org.apache.commons.math3.geometry.Point)>($r3);

        $b0 = $d1 cmpl d0;

        if $b0 <= 0 goto label1;

        r4 = r7;

        d0 = $d1;

        goto label1;

     label2:
        return r4;
    }
