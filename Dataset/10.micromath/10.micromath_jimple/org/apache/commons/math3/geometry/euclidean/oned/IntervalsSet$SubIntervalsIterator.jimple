org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator extends java.lang.Object implements java.util.Iterator
private org.apache.commons.math3.geometry.partitioning.BSPTree current
private double[] pending
final org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet this$0
    void <init>(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet)
    {
        org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator r0;
        org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet $r1;
        org.apache.commons.math3.geometry.partitioning.BSPTree $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        double[] $r5;
        double $d0;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator;

        $r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet;

        r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet: org.apache.commons.math3.geometry.partitioning.BSPTree access$000(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet)>($r1);

        r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.partitioning.BSPTree current> = $r2;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.partitioning.BSPTree current>;

        if $r2 != null goto label2;

        $r2 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet: org.apache.commons.math3.geometry.partitioning.BSPTree getTree(boolean)>(0);

        $r2 = staticinvoke <org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet: org.apache.commons.math3.geometry.partitioning.BSPTree access$100(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet,org.apache.commons.math3.geometry.partitioning.BSPTree)>($r1, $r2);

        $r3 = virtualinvoke $r2.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object getAttribute()>();

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        $r5 = newarray (double)[2];

        $r5[0] = #-Infinity;

        $r5[1] = #Infinity;

        r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: double[] pending> = $r5;

        return;

     label1:
        r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: double[] pending> = null;

        return;

     label2:
        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.partitioning.BSPTree current>;

        $z0 = staticinvoke <org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet: boolean access$200(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet,org.apache.commons.math3.geometry.partitioning.BSPTree)>($r1, $r2);

        if $z0 == 0 goto label3;

        $r5 = newarray (double)[2];

        $r5[0] = #-Infinity;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.partitioning.BSPTree current>;

        $d0 = staticinvoke <org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet: double access$300(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet,org.apache.commons.math3.geometry.partitioning.BSPTree)>($r1, $r2);

        $r5[1] = $d0;

        r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: double[] pending> = $r5;

        return;

     label3:
        specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: void selectPending()>();

        return;
    }
    private void selectPending()
    {
        org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator r0;
        org.apache.commons.math3.geometry.partitioning.BSPTree r1, r3;
        org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet $r2;
        boolean $z0;
        double[] $r4;
        double $d0;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator;

        r1 = r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.partitioning.BSPTree current>;

     label1:
        if r1 == null goto label2;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet this$0>;

        $z0 = staticinvoke <org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet: boolean access$400(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet,org.apache.commons.math3.geometry.partitioning.BSPTree)>($r2, r1);

        if $z0 != 0 goto label2;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet this$0>;

        r1 = staticinvoke <org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet: org.apache.commons.math3.geometry.partitioning.BSPTree access$500(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet,org.apache.commons.math3.geometry.partitioning.BSPTree)>($r2, r1);

        goto label1;

     label2:
        if r1 != null goto label3;

        r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.partitioning.BSPTree current> = null;

        r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: double[] pending> = null;

        return;

     label3:
        r3 = r1;

     label4:
        if r3 == null goto label5;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet this$0>;

        $z0 = staticinvoke <org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet: boolean access$200(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet,org.apache.commons.math3.geometry.partitioning.BSPTree)>($r2, r3);

        if $z0 != 0 goto label5;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet this$0>;

        r3 = staticinvoke <org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet: org.apache.commons.math3.geometry.partitioning.BSPTree access$500(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet,org.apache.commons.math3.geometry.partitioning.BSPTree)>($r2, r3);

        goto label4;

     label5:
        if r3 == null goto label6;

        $r4 = newarray (double)[2];

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet this$0>;

        $d0 = staticinvoke <org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet: double access$300(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet,org.apache.commons.math3.geometry.partitioning.BSPTree)>($r2, r1);

        $r4[0] = $d0;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet this$0>;

        $d0 = staticinvoke <org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet: double access$300(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet,org.apache.commons.math3.geometry.partitioning.BSPTree)>($r2, r3);

        $r4[1] = $d0;

        r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: double[] pending> = $r4;

        r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.partitioning.BSPTree current> = r3;

        return;

     label6:
        $r4 = newarray (double)[2];

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet this$0>;

        $d0 = staticinvoke <org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet: double access$300(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet,org.apache.commons.math3.geometry.partitioning.BSPTree)>($r2, r1);

        $r4[0] = $d0;

        $r4[1] = #Infinity;

        r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: double[] pending> = $r4;

        r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.partitioning.BSPTree current> = null;

        return;
    }
    public boolean hasNext()
    {
        org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator r0;
        double[] $r1;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: double[] pending>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public volatile java.lang.Object next()
    {
        org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator r0;
        double[] $r1;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: double[] next()>();

        return $r1;
    }
    public double[] next()
    {
        org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator r0;
        double[] $r1;
        java.util.NoSuchElementException $r2;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: double[] pending>;

        if $r1 != null goto label1;

        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>()>();

        throw $r2;

     label1:
        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: double[] pending>;

        specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: void selectPending()>();

        return $r1;
    }
    public void remove()
    {
        org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }
