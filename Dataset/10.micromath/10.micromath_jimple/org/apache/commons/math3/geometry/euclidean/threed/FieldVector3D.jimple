org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D extends java.lang.Object implements java.io.Serializable
private static final long serialVersionUID
private final org.apache.commons.math3.RealFieldElement x
private final org.apache.commons.math3.RealFieldElement y
private final org.apache.commons.math3.RealFieldElement z
    public void <init>(double, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1;
        double $d0;
        org.apache.commons.math3.RealFieldElement $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $d0 := @parameter0: double;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x> = $r2;

        $r2 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y> = $r2;

        $r2 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z> = $r2;

        return;
    }
    public void <init>(double, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, double, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1, r2;
        double $d0, $d1;
        org.apache.commons.math3.RealFieldElement $r3, $r4, $r5;
        java.lang.Object $r6;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $d0 := @parameter0: double;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $d1 := @parameter2: double;

        r2 := @parameter3: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r4 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r5 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r6 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object)>($d0, $r4, $d1, $r5);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r6;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x> = $r4;

        $r4 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r5 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r6 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object)>($d0, $r4, $d1, $r5);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r6;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y> = $r4;

        $r4 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r5 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r6 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object)>($d0, $r4, $d1, $r5);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r6;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z> = $r3;

        return;
    }
    public void <init>(double, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, double, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, double, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1, r2, r3;
        double $d0, $d1, $d2;
        org.apache.commons.math3.RealFieldElement $r4, $r5, $r6, $r7;
        java.lang.Object $r8;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $d0 := @parameter0: double;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $d1 := @parameter2: double;

        r2 := @parameter3: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $d2 := @parameter4: double;

        r3 := @parameter5: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r5 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r6 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r7 = virtualinvoke r3.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r8 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object)>($d0, $r5, $d1, $r6, $d2, $r7);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r8;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x> = $r5;

        $r5 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r6 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r7 = virtualinvoke r3.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r8 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object)>($d0, $r5, $d1, $r6, $d2, $r7);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r8;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y> = $r5;

        $r5 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r6 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r7 = virtualinvoke r3.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r8 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object)>($d0, $r5, $d1, $r6, $d2, $r7);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r8;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z> = $r4;

        return;
    }
    public void <init>(double, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, double, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, double, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, double, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1, r2, r3, r4;
        double $d0, $d1, $d2, $d3;
        org.apache.commons.math3.RealFieldElement $r5, $r6, $r7, $r8, $r9;
        java.lang.Object $r10;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $d0 := @parameter0: double;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $d1 := @parameter2: double;

        r2 := @parameter3: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $d2 := @parameter4: double;

        r3 := @parameter5: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $d3 := @parameter6: double;

        r4 := @parameter7: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r6 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r7 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r8 = virtualinvoke r3.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r10 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object,double,java.lang.Object)>($d0, $r6, $d1, $r7, $d2, $r8, $d3, $r9);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r10;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x> = $r6;

        $r6 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r7 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r8 = virtualinvoke r3.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r10 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object,double,java.lang.Object)>($d0, $r6, $d1, $r7, $d2, $r8, $d3, $r9);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r10;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y> = $r6;

        $r6 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r7 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r8 = virtualinvoke r3.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r9 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r10 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object,double,java.lang.Object)>($d0, $r6, $d1, $r7, $d2, $r8, $d3, $r9);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r10;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z> = $r5;

        return;
    }
    public void <init>(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement r1, r2, r4, $r5;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.RealFieldElement;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object cos()>();

        r4 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object cos()>();

        $r5 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r4);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r3;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x> = $r5;

        $r3 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object sin()>();

        r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r4);

        r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y> = r1;

        $r3 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object sin()>();

        r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z> = r1;

        return;
    }
    public void <init>(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement r1, r2, r3;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.RealFieldElement;

        r3 := @parameter2: org.apache.commons.math3.RealFieldElement;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x> = r1;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y> = r2;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z> = r3;

        return;
    }
    public void <init>(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r2;
        org.apache.commons.math3.RealFieldElement r1, $r3;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r4 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r3);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x> = $r3;

        $r3 = r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r4 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r3);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y> = $r3;

        $r3 = r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r4 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r3);

        r1 = (org.apache.commons.math3.RealFieldElement) $r4;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z> = r1;

        return;
    }
    public void <init>(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r2, r4;
        org.apache.commons.math3.RealFieldElement r1, r3, $r5, $r6;
        java.lang.Object $r7;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r3 := @parameter2: org.apache.commons.math3.RealFieldElement;

        r4 := @parameter3: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r6 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r7 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, $r5, r3, $r6);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r7;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x> = $r5;

        $r5 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r6 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r7 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, $r5, r3, $r6);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r7;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y> = $r5;

        $r5 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r6 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r7 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, $r5, r3, $r6);

        r1 = (org.apache.commons.math3.RealFieldElement) $r7;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z> = r1;

        return;
    }
    public void <init>(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r2, r4, r6;
        org.apache.commons.math3.RealFieldElement r1, r3, r5, $r7, $r8, $r9;
        java.lang.Object $r10;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r3 := @parameter2: org.apache.commons.math3.RealFieldElement;

        r4 := @parameter3: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r5 := @parameter4: org.apache.commons.math3.RealFieldElement;

        r6 := @parameter5: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r7 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r8 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = virtualinvoke r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r10 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, $r7, r3, $r8, r5, $r9);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r10;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x> = $r7;

        $r7 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r8 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = virtualinvoke r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r10 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, $r7, r3, $r8, r5, $r9);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r10;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y> = $r7;

        $r7 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r8 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r9 = virtualinvoke r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r10 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, $r7, r3, $r8, r5, $r9);

        r1 = (org.apache.commons.math3.RealFieldElement) $r10;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z> = r1;

        return;
    }
    public void <init>(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r2, r4, r6, r8;
        org.apache.commons.math3.RealFieldElement r1, r3, r5, r7, $r9, $r10, $r11, $r12;
        java.lang.Object $r13;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r3 := @parameter2: org.apache.commons.math3.RealFieldElement;

        r4 := @parameter3: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r5 := @parameter4: org.apache.commons.math3.RealFieldElement;

        r6 := @parameter5: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r7 := @parameter6: org.apache.commons.math3.RealFieldElement;

        r8 := @parameter7: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r9 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r10 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r11 = virtualinvoke r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r12 = virtualinvoke r8.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r13 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, $r9, r3, $r10, r5, $r11, r7, $r12);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r13;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x> = $r9;

        $r9 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r10 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r11 = virtualinvoke r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r12 = virtualinvoke r8.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r13 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, $r9, r3, $r10, r5, $r11, r7, $r12);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r13;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y> = $r9;

        $r9 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r10 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r11 = virtualinvoke r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r12 = virtualinvoke r8.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r13 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, $r9, r3, $r10, r5, $r11, r7, $r12);

        r1 = (org.apache.commons.math3.RealFieldElement) $r13;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z> = r1;

        return;
    }
    public void <init>(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement r1, $r4;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r2;
        double $d0;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        $r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $d0 = virtualinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $r3 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r3;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x> = $r4;

        $d0 = virtualinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $r3 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r3;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y> = $r4;

        $d0 = virtualinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r3 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z> = r1;

        return;
    }
    public void <init>(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement r1, r3, $r6;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r2, $r4;
        double $d0, $d1;
        java.lang.Object $r5;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        $r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        r3 := @parameter2: org.apache.commons.math3.RealFieldElement;

        $r4 := @parameter3: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $d0 = virtualinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $d1 = virtualinvoke $r4.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $r5 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object)>($d0, r1, $d1, r3);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r5;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x> = $r6;

        $d0 = virtualinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $d1 = virtualinvoke $r4.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $r5 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object)>($d0, r1, $d1, r3);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r5;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y> = $r6;

        $d0 = virtualinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $d1 = virtualinvoke $r4.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r5 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object)>($d0, r1, $d1, r3);

        r1 = (org.apache.commons.math3.RealFieldElement) $r5;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z> = r1;

        return;
    }
    public void <init>(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement r1, r3, r5, $r8;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r2, $r4, $r6;
        double $d0, $d1, $d2;
        java.lang.Object $r7;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        $r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        r3 := @parameter2: org.apache.commons.math3.RealFieldElement;

        $r4 := @parameter3: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        r5 := @parameter4: org.apache.commons.math3.RealFieldElement;

        $r6 := @parameter5: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $d0 = virtualinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $d1 = virtualinvoke $r4.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $d2 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $r7 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object)>($d0, r1, $d1, r3, $d2, r5);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r7;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x> = $r8;

        $d0 = virtualinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $d1 = virtualinvoke $r4.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $d2 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $r7 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object)>($d0, r1, $d1, r3, $d2, r5);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r7;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y> = $r8;

        $d0 = virtualinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $d1 = virtualinvoke $r4.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $d2 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r7 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object)>($d0, r1, $d1, r3, $d2, r5);

        r1 = (org.apache.commons.math3.RealFieldElement) $r7;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z> = r1;

        return;
    }
    public void <init>(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement r1, r3, r5, r7, $r10;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r2, $r4, $r6, $r8;
        double $d0, $d1, $d2, $d3;
        java.lang.Object $r9;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        $r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        r3 := @parameter2: org.apache.commons.math3.RealFieldElement;

        $r4 := @parameter3: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        r5 := @parameter4: org.apache.commons.math3.RealFieldElement;

        $r6 := @parameter5: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        r7 := @parameter6: org.apache.commons.math3.RealFieldElement;

        $r8 := @parameter7: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $d0 = virtualinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $d1 = virtualinvoke $r4.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $d2 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $d3 = virtualinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $r9 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object,double,java.lang.Object)>($d0, r1, $d1, r3, $d2, r5, $d3, r7);

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x> = $r10;

        $d0 = virtualinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $d1 = virtualinvoke $r4.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $d2 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $d3 = virtualinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $r9 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object,double,java.lang.Object)>($d0, r1, $d1, r3, $d2, r5, $d3, r7);

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y> = $r10;

        $d0 = virtualinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $d1 = virtualinvoke $r4.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $d2 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $d3 = virtualinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r9 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object,double,java.lang.Object)>($d0, r1, $d1, r3, $d2, r5, $d3, r7);

        r1 = (org.apache.commons.math3.RealFieldElement) $r9;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z> = r1;

        return;
    }
    public void <init>(org.apache.commons.math3.RealFieldElement[]) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement[] r1;
        int $i0;
        org.apache.commons.math3.exception.DimensionMismatchException $r2;
        org.apache.commons.math3.RealFieldElement $r3;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = lengthof r1;

        if $i0 == 3 goto label1;

        $r2 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i0 = lengthof r1;

        specialinvoke $r2.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i0, 3);

        throw $r2;

     label1:
        $r3 = r1[0];

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x> = $r3;

        $r3 = r1[1];

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y> = $r3;

        $r3 = r1[2];

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z> = $r3;

        return;
    }
    public static org.apache.commons.math3.RealFieldElement angle(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) throws org.apache.commons.math3.exception.MathArithmeticException
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1;
        double d0, $d1, $d2;
        org.apache.commons.math3.RealFieldElement $r2, $r3;
        java.lang.Object $r4;
        byte $b0;
        org.apache.commons.math3.exception.MathArithmeticException $r5;
        org.apache.commons.math3.exception.util.LocalizedFormats $r6;
        java.lang.Object[] $r7;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getNorm()>();

        $r3 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getNorm()>();

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r3);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        d0 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $r5 = new org.apache.commons.math3.exception.MathArithmeticException;

        $r6 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats ZERO_NORM>;

        $r7 = newarray (java.lang.Object)[0];

        specialinvoke $r5.<org.apache.commons.math3.exception.MathArithmeticException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r6, $r7);

        throw $r5;

     label1:
        $r3 = staticinvoke <org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement dotProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>(r0, r1);

        d0 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        d0 = d0 * 0.9999;

        $d1 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $d2 = neg d0;

        $b0 = $d1 cmpg $d2;

        if $b0 < 0 goto label2;

        $d1 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d1 cmpl d0;

        if $b0 <= 0 goto label4;

     label2:
        r0 = staticinvoke <org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>(r0, r1);

        d0 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = d0 cmpl 0.0;

        if $b0 < 0 goto label3;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getNorm()>();

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(java.lang.Object)>($r2);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object asin()>();

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        return $r2;

     label3:
        $r3 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getNorm()>();

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(java.lang.Object)>($r2);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object asin()>();

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>(3.141592653589793);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        return $r2;

     label4:
        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(java.lang.Object)>($r2);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object acos()>();

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        return $r2;
    }
    public static org.apache.commons.math3.RealFieldElement angle(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.Vector3D) throws org.apache.commons.math3.exception.MathArithmeticException
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r1;
        double d0, $d1, $d2;
        org.apache.commons.math3.RealFieldElement $r2, $r7;
        java.lang.Object $r3;
        byte $b0;
        org.apache.commons.math3.exception.MathArithmeticException $r4;
        org.apache.commons.math3.exception.util.LocalizedFormats $r5;
        java.lang.Object[] $r6;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getNorm()>();

        d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getNorm()>();

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d0);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        d0 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $r4 = new org.apache.commons.math3.exception.MathArithmeticException;

        $r5 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats ZERO_NORM>;

        $r6 = newarray (java.lang.Object)[0];

        specialinvoke $r4.<org.apache.commons.math3.exception.MathArithmeticException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r5, $r6);

        throw $r4;

     label1:
        $r7 = staticinvoke <org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement dotProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>(r0, $r1);

        d0 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        d0 = d0 * 0.9999;

        $d1 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $d2 = neg d0;

        $b0 = $d1 cmpg $d2;

        if $b0 < 0 goto label2;

        $d1 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d1 cmpl d0;

        if $b0 <= 0 goto label4;

     label2:
        r0 = staticinvoke <org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>(r0, $r1);

        d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = d0 cmpl 0.0;

        if $b0 < 0 goto label3;

        $r7 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getNorm()>();

        $r3 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(java.lang.Object)>($r2);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object asin()>();

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        return $r2;

     label3:
        $r7 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getNorm()>();

        $r3 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(java.lang.Object)>($r2);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object asin()>();

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>(3.141592653589793);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        return $r2;

     label4:
        $r3 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(java.lang.Object)>($r2);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object acos()>();

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        return $r2;
    }
    public static org.apache.commons.math3.RealFieldElement angle(org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) throws org.apache.commons.math3.exception.MathArithmeticException
    {
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r0;
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r1;
        org.apache.commons.math3.RealFieldElement $r2;

        $r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = staticinvoke <org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement angle(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>(r1, $r0);

        return $r2;
    }
    public static org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r0 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>(r1);

        return r0;
    }
    public static org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r1;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        r0 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r1);

        return r0;
    }
    public static org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r0;
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r1, $r2;
        org.apache.commons.math3.RealFieldElement $r3, $r4, $r5, $r7, $r8;
        double $d0, $d1;
        java.lang.Object $r6;

        $r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r3 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $r4 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d1 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $d1 = neg $d1;

        $r5 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r6 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object)>($d0, $r4, $d1, $r5);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r4 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r5 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d1 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $d1 = neg $d1;

        $r7 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r6 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object)>($d0, $r5, $d1, $r7);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r5 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $r7 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d1 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $d1 = neg $d1;

        $r8 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object)>($d0, $r7, $d1, $r8);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r6;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r3, $r4, $r5);

        return $r2;
    }
    public static org.apache.commons.math3.RealFieldElement distance(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1;
        org.apache.commons.math3.RealFieldElement $r2;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement distance(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>(r1);

        return $r2;
    }
    public static org.apache.commons.math3.RealFieldElement distance(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r1;
        org.apache.commons.math3.RealFieldElement $r2;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement distance(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r1);

        return $r2;
    }
    public static org.apache.commons.math3.RealFieldElement distance(org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r0;
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r1;
        org.apache.commons.math3.RealFieldElement $r2;

        $r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement distance(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r0);

        return $r2;
    }
    public static org.apache.commons.math3.RealFieldElement distance1(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1;
        org.apache.commons.math3.RealFieldElement $r2;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement distance1(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>(r1);

        return $r2;
    }
    public static org.apache.commons.math3.RealFieldElement distance1(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r1;
        org.apache.commons.math3.RealFieldElement $r2;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement distance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r1);

        return $r2;
    }
    public static org.apache.commons.math3.RealFieldElement distance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r0;
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r1;
        org.apache.commons.math3.RealFieldElement $r2;

        $r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement distance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r0);

        return $r2;
    }
    public static org.apache.commons.math3.RealFieldElement distanceInf(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1;
        org.apache.commons.math3.RealFieldElement $r2;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement distanceInf(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>(r1);

        return $r2;
    }
    public static org.apache.commons.math3.RealFieldElement distanceInf(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r1;
        org.apache.commons.math3.RealFieldElement $r2;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement distanceInf(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r1);

        return $r2;
    }
    public static org.apache.commons.math3.RealFieldElement distanceInf(org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r0;
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r1;
        org.apache.commons.math3.RealFieldElement $r2;

        $r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement distanceInf(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r0);

        return $r2;
    }
    public static org.apache.commons.math3.RealFieldElement distanceSq(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1;
        org.apache.commons.math3.RealFieldElement $r2;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement distanceSq(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>(r1);

        return $r2;
    }
    public static org.apache.commons.math3.RealFieldElement distanceSq(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r1;
        org.apache.commons.math3.RealFieldElement $r2;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement distanceSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r1);

        return $r2;
    }
    public static org.apache.commons.math3.RealFieldElement distanceSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r0;
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r1;
        org.apache.commons.math3.RealFieldElement $r2;

        $r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement distanceSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r0);

        return $r2;
    }
    public static org.apache.commons.math3.RealFieldElement dotProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1;
        org.apache.commons.math3.RealFieldElement $r2;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement dotProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>(r1);

        return $r2;
    }
    public static org.apache.commons.math3.RealFieldElement dotProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r1;
        org.apache.commons.math3.RealFieldElement $r2;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement dotProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r1);

        return $r2;
    }
    public static org.apache.commons.math3.RealFieldElement dotProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r0;
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r1;
        org.apache.commons.math3.RealFieldElement $r2;

        $r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement dotProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r0);

        return $r2;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D add(double, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1, $r2;
        double $d0;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $d0 := @parameter0: double;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(double,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,double,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>(1.0, r0, $d0, r1);

        return $r2;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D add(double, org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, $r2;
        double $d0, $d1;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r1;
        org.apache.commons.math3.RealFieldElement $r3, $r5, $r6;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $d0 := @parameter0: double;

        $r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d1 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $d1 = $d1 * $d0;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>($d1);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d1 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $d1 = $d1 * $d0;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>($d1);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d1 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $d0 = $d1 * $d0;

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>($d0);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r3, $r5, $r6);

        return $r2;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D add(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r2, $r3;
        org.apache.commons.math3.RealFieldElement r1, $r4;
        org.apache.commons.math3.Field $r5;
        java.lang.Object $r6;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r3 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.Field: java.lang.Object getOne()>();

        $r4 = (org.apache.commons.math3.RealFieldElement) $r6;

        specialinvoke $r3.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>($r4, r0, r1, r2);

        return $r3;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D add(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, $r3;
        org.apache.commons.math3.RealFieldElement r1, $r4, $r6, $r7;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r2;
        double $d0;
        java.lang.Object $r5;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        $r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r3 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d0 = virtualinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $r5 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r5);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d0 = virtualinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $r5 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r5 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r5);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d0 = virtualinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r5 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r5 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r5);

        r1 = (org.apache.commons.math3.RealFieldElement) $r5;

        specialinvoke $r3.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r4, $r6, r1);

        return $r3;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D add(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1, $r2;
        org.apache.commons.math3.RealFieldElement $r3, $r4, $r5, $r7;
        java.lang.Object $r6;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r5 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r6 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r5);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r3 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r3);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r3 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r3);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r6;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r4, $r5, $r3);

        return $r2;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D add(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, $r2;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r1;
        org.apache.commons.math3.RealFieldElement $r3, $r5, $r6;
        double $d0;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>($d0);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>($d0);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>($d0);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r3, $r5, $r6);

        return $r2;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1, $r2;
        org.apache.commons.math3.RealFieldElement $r3, $r4, $r5, $r6, $r7, $r9;
        java.lang.Object $r8;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r6 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r8 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r7 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r8 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r6, $r8, $r7);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r7 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r8 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r9 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r8 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r6, $r7, $r8, $r9);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r9 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r3 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r8 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r7, $r9, $r8, $r3);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r8;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r4, $r5, $r6);

        return $r2;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, $r2;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r1;
        org.apache.commons.math3.RealFieldElement $r3, $r4, $r5, $r7, $r8;
        double $d0, $d1;
        java.lang.Object $r6;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d1 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $d1 = neg $d1;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r6 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object)>($d0, $r4, $d1, $r5);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d1 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $d1 = neg $d1;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r6 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object)>($d0, $r5, $d1, $r7);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d1 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $d1 = neg $d1;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object)>($d0, $r7, $d1, $r8);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r6;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r3, $r4, $r5);

        return $r2;
    }
    public org.apache.commons.math3.RealFieldElement distance(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1;
        org.apache.commons.math3.RealFieldElement $r2, $r3, $r5, $r6;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r3);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r3 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r5);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r2);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r3);

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r5);

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object sqrt()>();

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        return $r2;
    }
    public org.apache.commons.math3.RealFieldElement distance(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r1;
        org.apache.commons.math3.RealFieldElement $r2, $r4, $r5;
        double $d0;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d0);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $r3 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d0);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r3 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d0);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r2);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r3);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r5);

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r3);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object sqrt()>();

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        return $r2;
    }
    public org.apache.commons.math3.RealFieldElement distance1(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1;
        org.apache.commons.math3.RealFieldElement $r2, $r3, $r5, $r6;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r3);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r3 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r5);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r3);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r5);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        return $r2;
    }
    public org.apache.commons.math3.RealFieldElement distance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r1;
        org.apache.commons.math3.RealFieldElement $r2, $r4, $r5;
        double $d0;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d0);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $r3 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d0);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        $r4 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r3 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d0);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        $r5 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r5);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        return $r2;
    }
    public org.apache.commons.math3.RealFieldElement distanceInf(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1;
        org.apache.commons.math3.RealFieldElement $r2, $r3, $r5, $r6;
        java.lang.Object $r4;
        double $d0, $d1;
        byte $b0;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r3);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r3 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r5);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $d0 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $d1 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg $d1;

        if $b0 > 0 goto label2;

        $d0 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $d1 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg $d1;

        if $b0 > 0 goto label1;

        return $r5;

     label1:
        return $r3;

     label2:
        $d0 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $d1 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg $d1;

        if $b0 <= 0 goto label3;

        return $r2;

     label3:
        return $r5;
    }
    public org.apache.commons.math3.RealFieldElement distanceInf(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r1;
        org.apache.commons.math3.RealFieldElement $r2, $r4, $r5;
        double $d0, $d1;
        java.lang.Object $r3;
        byte $b0;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d0);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $r3 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d0);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        $r4 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r3 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d0);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        $r5 = (org.apache.commons.math3.RealFieldElement) $r3;

        $d0 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $d1 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg $d1;

        if $b0 > 0 goto label2;

        $d0 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $d1 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg $d1;

        if $b0 > 0 goto label1;

        return $r5;

     label1:
        return $r4;

     label2:
        $d0 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $d1 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg $d1;

        if $b0 <= 0 goto label3;

        return $r2;

     label3:
        return $r5;
    }
    public org.apache.commons.math3.RealFieldElement distanceSq(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1;
        org.apache.commons.math3.RealFieldElement $r2, $r3, $r5, $r6;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r3);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r3 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r5);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r2);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r3);

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r5);

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        return $r2;
    }
    public org.apache.commons.math3.RealFieldElement distanceSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r1;
        org.apache.commons.math3.RealFieldElement $r2, $r4, $r5;
        double $d0;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d0);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $r3 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d0);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r3 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d0);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r2);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r3);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r5);

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r3);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        return $r2;
    }
    public org.apache.commons.math3.RealFieldElement dotProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1;
        org.apache.commons.math3.RealFieldElement $r2, $r3, $r4, $r5, $r6, $r7, $r9;
        java.lang.Object $r8;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r3 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r5 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r7 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r8 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r4, $r5, $r6, $r7);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r8;

        return $r2;
    }
    public org.apache.commons.math3.RealFieldElement dotProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r1;
        org.apache.commons.math3.RealFieldElement $r2, $r3, $r4, $r5;
        double $d0, $d1, $d2;
        java.lang.Object $r6;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d1 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d2 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r6 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object)>($d0, $r3, $d1, $r4, $d2, $r5);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r6;

        return $r2;
    }
    public boolean equals(java.lang.Object)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r2;
        java.lang.Object $r1;
        boolean $z0;
        org.apache.commons.math3.RealFieldElement $r3, $r4;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        if $z0 == 0 goto label3;

        r2 = (org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) $r1;

        $z0 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: boolean isNaN()>();

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: boolean isNaN()>();

        return $z0;

     label2:
        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r4 = r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r4 = r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r4 = r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label4;

     label3:
        return 0;

     label4:
        return 1;
    }
    public org.apache.commons.math3.RealFieldElement getAlpha()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r2 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r1);

        $r1 = (org.apache.commons.math3.RealFieldElement) $r2;

        return $r1;
    }
    public org.apache.commons.math3.RealFieldElement getDelta()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement $r1, $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getNorm()>();

        $r3 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(java.lang.Object)>($r2);

        $r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object asin()>();

        $r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        return $r1;
    }
    public org.apache.commons.math3.RealFieldElement getNorm()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement $r1, $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r3 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r2);

        $r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r3 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r3);

        $r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r3 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r3);

        $r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object sqrt()>();

        $r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        return $r1;
    }
    public org.apache.commons.math3.RealFieldElement getNorm1()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r2 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        $r1 = (org.apache.commons.math3.RealFieldElement) $r2;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r2 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        $r2 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r2);

        $r1 = (org.apache.commons.math3.RealFieldElement) $r2;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r2 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        $r2 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r2);

        $r1 = (org.apache.commons.math3.RealFieldElement) $r2;

        return $r1;
    }
    public org.apache.commons.math3.RealFieldElement getNormInf()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement $r1, $r3, $r4;
        java.lang.Object $r2;
        double $d0, $d1;
        byte $b0;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r2 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        $r1 = (org.apache.commons.math3.RealFieldElement) $r2;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r2 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        $r3 = (org.apache.commons.math3.RealFieldElement) $r2;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r2 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        $r4 = (org.apache.commons.math3.RealFieldElement) $r2;

        $d0 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $d1 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg $d1;

        if $b0 > 0 goto label2;

        $d0 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $d1 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg $d1;

        if $b0 > 0 goto label1;

        return $r4;

     label1:
        return $r3;

     label2:
        $d0 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $d1 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg $d1;

        if $b0 <= 0 goto label3;

        return $r1;

     label3:
        return $r4;
    }
    public org.apache.commons.math3.RealFieldElement getNormSq()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement $r1, $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r3 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r2);

        $r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r3 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r3);

        $r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r3 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r3);

        $r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        return $r1;
    }
    public org.apache.commons.math3.RealFieldElement getX()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement r1;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        return r1;
    }
    public org.apache.commons.math3.RealFieldElement getY()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement r1;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        return r1;
    }
    public org.apache.commons.math3.RealFieldElement getZ()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement r1;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        return r1;
    }
    public int hashCode()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        boolean $z0;
        org.apache.commons.math3.RealFieldElement $r1;
        int $i0, $i1;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $z0 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: boolean isNaN()>();

        if $z0 == 0 goto label1;

        return 409;

     label1:
        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i0 = $i0 * 107;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $i1 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i1 = $i1 * 83;

        $i0 = $i0 + $i1;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $i1 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i0 = $i0 + $i1;

        $i0 = $i0 * 311;

        return $i0;
    }
    public boolean isInfinite()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        boolean $z0;
        org.apache.commons.math3.RealFieldElement $r1;
        double $d0;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $z0 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: boolean isNaN()>();

        if $z0 != 0 goto label2;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d0 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d0);

        if $z0 != 0 goto label1;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d0 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d0);

        if $z0 != 0 goto label1;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d0 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d0);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    public boolean isNaN()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement $r1;
        double $d0;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d0 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 != 0 goto label1;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d0 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 != 0 goto label1;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d0 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D negate()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, $r1;
        org.apache.commons.math3.RealFieldElement $r2, $r4, $r5;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r3 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r4 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r3 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r5 = (org.apache.commons.math3.RealFieldElement) $r3;

        specialinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r2, $r4, $r5);

        return $r1;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D normalize() throws org.apache.commons.math3.exception.MathArithmeticException
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement $r1;
        double $d0;
        byte $b0;
        org.apache.commons.math3.exception.MathArithmeticException $r2;
        org.apache.commons.math3.exception.util.LocalizedFormats $r3;
        java.lang.Object[] $r4;
        java.lang.Object $r5;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getNorm()>();

        $d0 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $r2 = new org.apache.commons.math3.exception.MathArithmeticException;

        $r3 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR>;

        $r4 = newarray (java.lang.Object)[0];

        specialinvoke $r2.<org.apache.commons.math3.exception.MathArithmeticException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r3, $r4);

        throw $r2;

     label1:
        $r5 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object reciprocal()>();

        $r1 = (org.apache.commons.math3.RealFieldElement) $r5;

        r0 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D scalarMultiply(org.apache.commons.math3.RealFieldElement)>($r1);

        return r0;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D orthogonal() throws org.apache.commons.math3.exception.MathArithmeticException
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, $r8;
        double d0, $d1;
        org.apache.commons.math3.RealFieldElement $r1, $r5, $r7, $r10;
        byte $b0;
        org.apache.commons.math3.exception.MathArithmeticException $r2;
        org.apache.commons.math3.exception.util.LocalizedFormats $r3;
        java.lang.Object[] $r4;
        java.lang.Object $r6;
        org.apache.commons.math3.Field $r9;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getNorm()>();

        d0 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        d0 = 0.6 * d0;

        $b0 = d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $r2 = new org.apache.commons.math3.exception.MathArithmeticException;

        $r3 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats ZERO_NORM>;

        $r4 = newarray (java.lang.Object)[0];

        specialinvoke $r2.<org.apache.commons.math3.exception.MathArithmeticException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r3, $r4);

        throw $r2;

     label1:
        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d1 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d1);

        $b0 = $d1 cmpg d0;

        if $b0 > 0 goto label2;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r6 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r5);

        $r1 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r7);

        $r6 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        $r1 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object sqrt()>();

        $r1 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object reciprocal()>();

        $r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r8 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $r6 = interfaceinvoke $r9.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        $r1 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r5);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r10 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r10);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        specialinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r1, $r5, $r7);

        return $r8;

     label2:
        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d1 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d1);

        $b0 = $d1 cmpg d0;

        if $b0 > 0 goto label3;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r6 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r5);

        $r1 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r7);

        $r6 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        $r1 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object sqrt()>();

        $r1 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object reciprocal()>();

        $r1 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r8 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r6 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r5);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r5 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r9 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $r6 = interfaceinvoke $r9.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        $r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r10 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r6 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r10);

        $r1 = (org.apache.commons.math3.RealFieldElement) $r6;

        specialinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r5, $r7, $r1);

        return $r8;

     label3:
        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r6 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r5);

        $r1 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r7);

        $r6 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        $r1 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object sqrt()>();

        $r1 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object reciprocal()>();

        $r1 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r8 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r6 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r5);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r6 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r7);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r9 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $r6 = interfaceinvoke $r9.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        $r1 = (org.apache.commons.math3.RealFieldElement) $r6;

        specialinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r5, $r7, $r1);

        return $r8;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D scalarMultiply(double)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, $r1;
        double $d0;
        org.apache.commons.math3.RealFieldElement $r2, $r4, $r5;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $d0 := @parameter0: double;

        $r1 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r3 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r3 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r3;

        specialinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r2, $r4, $r5);

        return $r1;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D scalarMultiply(org.apache.commons.math3.RealFieldElement)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, $r2;
        org.apache.commons.math3.RealFieldElement r1, $r3, $r5, $r6;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r1);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r1);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r1);

        r1 = (org.apache.commons.math3.RealFieldElement) $r4;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r3, $r5, r1);

        return $r2;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D subtract(double, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1, $r2;
        double $d0;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $d0 := @parameter0: double;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $d0 = neg $d0;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(double,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,double,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>(1.0, r0, $d0, r1);

        return $r2;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D subtract(double, org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, $r2;
        double $d0, $d1;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r1;
        org.apache.commons.math3.RealFieldElement $r3, $r5, $r6;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $d0 := @parameter0: double;

        $r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d1 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $d1 = $d1 * $d0;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d1);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d1 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $d1 = $d1 * $d0;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d1);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d1 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $d0 = $d1 * $d0;

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d0);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r3, $r5, $r6);

        return $r2;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D subtract(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r2, $r3;
        org.apache.commons.math3.RealFieldElement r1, $r4;
        org.apache.commons.math3.Field $r5;
        java.lang.Object $r6;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r3 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.Field: java.lang.Object getOne()>();

        $r4 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        r1 = (org.apache.commons.math3.RealFieldElement) $r6;

        specialinvoke $r3.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>($r4, r0, r1, r2);

        return $r3;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D subtract(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, $r3;
        org.apache.commons.math3.RealFieldElement r1, $r4, $r6, $r7;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r2;
        double $d0;
        java.lang.Object $r5;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        $r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r3 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d0 = virtualinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $r5 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r5);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d0 = virtualinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $r5 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r5 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r5);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d0 = virtualinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r5 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r5 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r5);

        r1 = (org.apache.commons.math3.RealFieldElement) $r5;

        specialinvoke $r3.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r4, $r6, r1);

        return $r3;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D subtract(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1, $r2;
        org.apache.commons.math3.RealFieldElement $r3, $r4, $r5, $r7;
        java.lang.Object $r6;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r5 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r6 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r5);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r3 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r3);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r3 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r3);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r6;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r4, $r5, $r3);

        return $r2;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D subtract(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, $r2;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r1;
        org.apache.commons.math3.RealFieldElement $r3, $r5, $r6;
        double $d0;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d0);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d0);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d0);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r3, $r5, $r6);

        return $r2;
    }
    public org.apache.commons.math3.RealFieldElement[] toArray()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement $r1;
        org.apache.commons.math3.Field $r2;
        java.lang.Object[] $r3;
        org.apache.commons.math3.RealFieldElement[] r4;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r2 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $r3 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[] buildArray(org.apache.commons.math3.Field,int)>($r2, 3);

        r4 = (org.apache.commons.math3.RealFieldElement[]) $r3;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        r4[0] = $r1;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        r4[1] = $r1;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        r4[2] = $r1;

        return r4;
    }
    public java.lang.String toString()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat $r1;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 = staticinvoke <org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat: org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat getInstance()>();

        $r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.geometry.euclidean.threed.Vector3D toVector3D()>();

        $r3 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat: java.lang.String format(org.apache.commons.math3.geometry.Vector)>($r2);

        return $r3;
    }
    public java.lang.String toString(java.text.NumberFormat)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        java.text.NumberFormat $r1;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat $r2;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 := @parameter0: java.text.NumberFormat;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat: void <init>(java.text.NumberFormat)>($r1);

        $r3 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.geometry.euclidean.threed.Vector3D toVector3D()>();

        $r4 = virtualinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat: java.lang.String format(org.apache.commons.math3.geometry.Vector)>($r3);

        return $r4;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.Vector3D toVector3D()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r1;
        org.apache.commons.math3.RealFieldElement $r2;
        double $d0, $d1, $d2;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 = new org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d0 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d1 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d2 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        specialinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: void <init>(double,double,double)>($d0, $d1, $d2);

        return $r1;
    }
