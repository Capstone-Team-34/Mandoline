org.apache.commons.math3.geometry.euclidean.twod.Segment extends java.lang.Object
private final org.apache.commons.math3.geometry.euclidean.twod.Vector2D end
private final org.apache.commons.math3.geometry.euclidean.twod.Line line
private final org.apache.commons.math3.geometry.euclidean.twod.Vector2D start
    public void <init>(org.apache.commons.math3.geometry.euclidean.twod.Vector2D, org.apache.commons.math3.geometry.euclidean.twod.Vector2D, org.apache.commons.math3.geometry.euclidean.twod.Line)
    {
        org.apache.commons.math3.geometry.euclidean.twod.Segment r0;
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D $r1, $r2;
        org.apache.commons.math3.geometry.euclidean.twod.Line $r3;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.twod.Segment;

        $r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.twod.Vector2D;

        $r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.twod.Vector2D;

        $r3 := @parameter2: org.apache.commons.math3.geometry.euclidean.twod.Line;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Vector2D start> = $r1;

        r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Vector2D end> = $r2;

        r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Line line> = $r3;

        return;
    }
    public double distance(org.apache.commons.math3.geometry.euclidean.twod.Vector2D)
    {
        org.apache.commons.math3.geometry.euclidean.twod.Segment r0;
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D $r1, r2;
        double d0, d1, d2, $d3, $d4;
        byte $b0;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.twod.Segment;

        $r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.twod.Vector2D;

        r2 = r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Vector2D end>;

        d1 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getX()>();

        r2 = r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Vector2D start>;

        d0 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getX()>();

        d0 = d1 - d0;

        r2 = r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Vector2D end>;

        d1 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getY()>();

        r2 = r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Vector2D start>;

        d2 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getY()>();

        d1 = d1 - d2;

        d2 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getX()>();

        r2 = r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Vector2D start>;

        $d3 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getX()>();

        d2 = d2 - $d3;

        d2 = d2 * d0;

        $d3 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getY()>();

        r2 = r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Vector2D start>;

        $d4 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getY()>();

        $d3 = $d3 - $d4;

        $d3 = $d3 * d1;

        d2 = d2 + $d3;

        $d3 = d0 * d0;

        $d4 = d1 * d1;

        $d3 = $d3 + $d4;

        d2 = d2 / $d3;

        $b0 = d2 cmpg 0.0;

        if $b0 < 0 goto label1;

        $b0 = d2 cmpl 1.0;

        if $b0 <= 0 goto label2;

     label1:
        r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Vector2D getStart()>();

        d1 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double distance(org.apache.commons.math3.geometry.Point)>($r1);

        r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Vector2D getEnd()>();

        d0 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double distance(org.apache.commons.math3.geometry.Point)>($r1);

        d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>(d1, d0);

        return d1;

     label2:
        r2 = r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Vector2D start>;

        $d3 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getX()>();

        d0 = d2 * d0;

        d0 = $d3 + d0;

        r2 = r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Vector2D start>;

        $d3 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getY()>();

        d1 = d2 * d1;

        d1 = $d3 + d1;

        r2 = new org.apache.commons.math3.geometry.euclidean.twod.Vector2D;

        specialinvoke r2.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: void <init>(double,double)>(d0, d1);

        d1 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double distance(org.apache.commons.math3.geometry.Point)>($r1);

        return d1;
    }
    public org.apache.commons.math3.geometry.euclidean.twod.Vector2D getEnd()
    {
        org.apache.commons.math3.geometry.euclidean.twod.Segment r0;
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D r1;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.twod.Segment;

        r1 = r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Vector2D end>;

        return r1;
    }
    public org.apache.commons.math3.geometry.euclidean.twod.Line getLine()
    {
        org.apache.commons.math3.geometry.euclidean.twod.Segment r0;
        org.apache.commons.math3.geometry.euclidean.twod.Line r1;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.twod.Segment;

        r1 = r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Line line>;

        return r1;
    }
    public org.apache.commons.math3.geometry.euclidean.twod.Vector2D getStart()
    {
        org.apache.commons.math3.geometry.euclidean.twod.Segment r0;
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D r1;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.twod.Segment;

        r1 = r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Vector2D start>;

        return r1;
    }
