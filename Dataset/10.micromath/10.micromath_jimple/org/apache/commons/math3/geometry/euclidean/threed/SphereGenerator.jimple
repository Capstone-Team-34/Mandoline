org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator extends java.lang.Object implements org.apache.commons.math3.geometry.enclosing.SupportBallGenerator
    public void <init>()
    {
        org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator r0;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private org.apache.commons.math3.fraction.BigFraction minor(org.apache.commons.math3.fraction.BigFraction[], org.apache.commons.math3.fraction.BigFraction[], org.apache.commons.math3.fraction.BigFraction[])
    {
        org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator r0;
        org.apache.commons.math3.fraction.BigFraction[] $r1, $r2, $r3;
        org.apache.commons.math3.fraction.BigFraction $r4, $r5, $r6, $r7;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator;

        $r1 := @parameter0: org.apache.commons.math3.fraction.BigFraction[];

        $r2 := @parameter1: org.apache.commons.math3.fraction.BigFraction[];

        $r3 := @parameter2: org.apache.commons.math3.fraction.BigFraction[];

        $r4 = $r2[0];

        $r5 = $r3[1];

        $r4 = virtualinvoke $r4.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r5);

        $r5 = $r1[2];

        $r6 = $r1[3];

        $r5 = virtualinvoke $r5.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r6);

        $r4 = virtualinvoke $r4.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r5);

        $r5 = $r2[0];

        $r6 = $r3[2];

        $r5 = virtualinvoke $r5.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r6);

        $r6 = $r1[3];

        $r7 = $r1[1];

        $r6 = virtualinvoke $r6.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r7);

        $r5 = virtualinvoke $r5.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r6);

        $r4 = virtualinvoke $r4.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r5);

        $r5 = $r2[0];

        $r6 = $r3[3];

        $r5 = virtualinvoke $r5.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r6);

        $r6 = $r1[1];

        $r7 = $r1[2];

        $r6 = virtualinvoke $r6.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r7);

        $r5 = virtualinvoke $r5.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r6);

        $r4 = virtualinvoke $r4.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r5);

        $r5 = $r2[1];

        $r6 = $r3[0];

        $r5 = virtualinvoke $r5.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r6);

        $r6 = $r1[3];

        $r7 = $r1[2];

        $r6 = virtualinvoke $r6.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r7);

        $r5 = virtualinvoke $r5.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r6);

        $r4 = virtualinvoke $r4.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r5);

        $r5 = $r2[1];

        $r6 = $r3[2];

        $r5 = virtualinvoke $r5.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r6);

        $r6 = $r1[0];

        $r7 = $r1[3];

        $r6 = virtualinvoke $r6.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r7);

        $r5 = virtualinvoke $r5.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r6);

        $r4 = virtualinvoke $r4.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r5);

        $r5 = $r2[1];

        $r6 = $r3[3];

        $r5 = virtualinvoke $r5.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r6);

        $r6 = $r1[2];

        $r7 = $r1[0];

        $r6 = virtualinvoke $r6.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r7);

        $r5 = virtualinvoke $r5.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r6);

        $r4 = virtualinvoke $r4.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r5);

        $r5 = $r2[2];

        $r6 = $r3[0];

        $r5 = virtualinvoke $r5.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r6);

        $r6 = $r1[1];

        $r7 = $r1[3];

        $r6 = virtualinvoke $r6.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r7);

        $r5 = virtualinvoke $r5.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r6);

        $r4 = virtualinvoke $r4.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r5);

        $r5 = $r2[2];

        $r6 = $r3[1];

        $r5 = virtualinvoke $r5.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r6);

        $r6 = $r1[3];

        $r7 = $r1[0];

        $r6 = virtualinvoke $r6.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r7);

        $r5 = virtualinvoke $r5.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r6);

        $r4 = virtualinvoke $r4.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r5);

        $r5 = $r2[2];

        $r6 = $r3[3];

        $r5 = virtualinvoke $r5.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r6);

        $r6 = $r1[0];

        $r7 = $r1[1];

        $r6 = virtualinvoke $r6.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r7);

        $r5 = virtualinvoke $r5.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r6);

        $r4 = virtualinvoke $r4.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r5);

        $r5 = $r2[3];

        $r6 = $r3[0];

        $r5 = virtualinvoke $r5.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r6);

        $r6 = $r1[2];

        $r7 = $r1[1];

        $r6 = virtualinvoke $r6.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r7);

        $r5 = virtualinvoke $r5.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r6);

        $r4 = virtualinvoke $r4.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r5);

        $r5 = $r2[3];

        $r6 = $r3[1];

        $r5 = virtualinvoke $r5.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r6);

        $r6 = $r1[0];

        $r7 = $r1[2];

        $r6 = virtualinvoke $r6.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r7);

        $r5 = virtualinvoke $r5.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r6);

        $r4 = virtualinvoke $r4.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r5);

        $r5 = $r2[3];

        $r6 = $r3[2];

        $r5 = virtualinvoke $r5.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r6);

        $r6 = $r1[1];

        $r7 = $r1[0];

        $r6 = virtualinvoke $r6.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r7);

        $r5 = virtualinvoke $r5.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r6);

        $r4 = virtualinvoke $r4.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r5);

        return $r4;
    }
    public org.apache.commons.math3.geometry.enclosing.EnclosingBall ballOnSupport(java.util.List)
    {
        org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator r0;
        java.util.List r1;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r2, $r4, r7, $r8, r16;
        int $i0;
        org.apache.commons.math3.geometry.enclosing.EnclosingBall $r3, $r13;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D[] $r5;
        java.lang.Object $r6;
        double $d0, $d1, $d2;
        org.apache.commons.math3.geometry.euclidean.threed.Plane r9;
        org.apache.commons.math3.geometry.euclidean.twod.DiskGenerator $r10;
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[] $r11;
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D $r12;
        org.apache.commons.math3.geometry.Point $r14;
        org.apache.commons.math3.geometry.Vector $r15;
        org.apache.commons.math3.fraction.BigFraction[] $r17, $r19, $r20, $r21;
        org.apache.commons.math3.fraction.BigFraction $r18, $r22, $r23, $r24, $r25, $r26;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator;

        r1 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 >= 1 goto label1;

        $r3 = new org.apache.commons.math3.geometry.enclosing.EnclosingBall;

        $r4 = <org.apache.commons.math3.geometry.euclidean.threed.Vector3D: org.apache.commons.math3.geometry.euclidean.threed.Vector3D ZERO>;

        $r5 = newarray (org.apache.commons.math3.geometry.euclidean.threed.Vector3D)[0];

        specialinvoke $r3.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: void <init>(org.apache.commons.math3.geometry.Point,double,org.apache.commons.math3.geometry.Point[])>($r4, #-Infinity, $r5);

        return $r3;

     label1:
        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (org.apache.commons.math3.geometry.euclidean.threed.Vector3D) $r6;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 >= 2 goto label2;

        $r3 = new org.apache.commons.math3.geometry.enclosing.EnclosingBall;

        $r5 = newarray (org.apache.commons.math3.geometry.euclidean.threed.Vector3D)[1];

        $r5[0] = $r4;

        specialinvoke $r3.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: void <init>(org.apache.commons.math3.geometry.Point,double,org.apache.commons.math3.geometry.Point[])>($r4, 0.0, $r5);

        return $r3;

     label2:
        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(1);

        r7 = (org.apache.commons.math3.geometry.euclidean.threed.Vector3D) $r6;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 >= 3 goto label3;

        $r3 = new org.apache.commons.math3.geometry.enclosing.EnclosingBall;

        $r8 = new org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        specialinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: void <init>(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>(0.5, $r4, 0.5, r7);

        $d0 = virtualinvoke $r4.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double distance(org.apache.commons.math3.geometry.Vector)>(r7);

        $d0 = 0.5 * $d0;

        $r5 = newarray (org.apache.commons.math3.geometry.euclidean.threed.Vector3D)[2];

        $r5[0] = $r4;

        $r5[1] = r7;

        specialinvoke $r3.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: void <init>(org.apache.commons.math3.geometry.Point,double,org.apache.commons.math3.geometry.Point[])>($r8, $d0, $r5);

        return $r3;

     label3:
        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(2);

        $r8 = (org.apache.commons.math3.geometry.euclidean.threed.Vector3D) $r6;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 >= 4 goto label4;

        r9 = new org.apache.commons.math3.geometry.euclidean.threed.Plane;

        $d0 = virtualinvoke $r4.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getNorm1()>();

        $d1 = virtualinvoke r7.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getNorm1()>();

        $d0 = $d0 + $d1;

        $d1 = virtualinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getNorm1()>();

        $d0 = $d0 + $d1;

        $d0 = $d0 * 1.0E-10;

        specialinvoke r9.<org.apache.commons.math3.geometry.euclidean.threed.Plane: void <init>(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double)>($r4, r7, $r8, $d0);

        $r10 = new org.apache.commons.math3.geometry.euclidean.twod.DiskGenerator;

        specialinvoke $r10.<org.apache.commons.math3.geometry.euclidean.twod.DiskGenerator: void <init>()>();

        $r11 = newarray (org.apache.commons.math3.geometry.euclidean.twod.Vector2D)[3];

        $r12 = virtualinvoke r9.<org.apache.commons.math3.geometry.euclidean.threed.Plane: org.apache.commons.math3.geometry.euclidean.twod.Vector2D toSubSpace(org.apache.commons.math3.geometry.Vector)>($r4);

        $r11[0] = $r12;

        $r12 = virtualinvoke r9.<org.apache.commons.math3.geometry.euclidean.threed.Plane: org.apache.commons.math3.geometry.euclidean.twod.Vector2D toSubSpace(org.apache.commons.math3.geometry.Vector)>(r7);

        $r11[1] = $r12;

        $r12 = virtualinvoke r9.<org.apache.commons.math3.geometry.euclidean.threed.Plane: org.apache.commons.math3.geometry.euclidean.twod.Vector2D toSubSpace(org.apache.commons.math3.geometry.Vector)>($r8);

        $r11[2] = $r12;

        r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r11);

        $r3 = virtualinvoke $r10.<org.apache.commons.math3.geometry.euclidean.twod.DiskGenerator: org.apache.commons.math3.geometry.enclosing.EnclosingBall ballOnSupport(java.util.List)>(r1);

        $r13 = new org.apache.commons.math3.geometry.enclosing.EnclosingBall;

        $r14 = virtualinvoke $r3.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: org.apache.commons.math3.geometry.Point getCenter()>();

        $r15 = (org.apache.commons.math3.geometry.Vector) $r14;

        $r2 = virtualinvoke r9.<org.apache.commons.math3.geometry.euclidean.threed.Plane: org.apache.commons.math3.geometry.euclidean.threed.Vector3D toSpace(org.apache.commons.math3.geometry.Vector)>($r15);

        $d0 = virtualinvoke $r3.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: double getRadius()>();

        $r5 = newarray (org.apache.commons.math3.geometry.euclidean.threed.Vector3D)[3];

        $r5[0] = $r4;

        $r5[1] = r7;

        $r5[2] = $r8;

        specialinvoke $r13.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: void <init>(org.apache.commons.math3.geometry.Point,double,org.apache.commons.math3.geometry.Point[])>($r2, $d0, $r5);

        return $r13;

     label4:
        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(3);

        r16 = (org.apache.commons.math3.geometry.euclidean.threed.Vector3D) $r6;

        $r17 = newarray (org.apache.commons.math3.fraction.BigFraction)[4];

        $r18 = new org.apache.commons.math3.fraction.BigFraction;

        $d0 = virtualinvoke $r4.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        specialinvoke $r18.<org.apache.commons.math3.fraction.BigFraction: void <init>(double)>($d0);

        $r17[0] = $r18;

        $r18 = new org.apache.commons.math3.fraction.BigFraction;

        $d0 = virtualinvoke r7.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        specialinvoke $r18.<org.apache.commons.math3.fraction.BigFraction: void <init>(double)>($d0);

        $r17[1] = $r18;

        $r18 = new org.apache.commons.math3.fraction.BigFraction;

        $d0 = virtualinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        specialinvoke $r18.<org.apache.commons.math3.fraction.BigFraction: void <init>(double)>($d0);

        $r17[2] = $r18;

        $r18 = new org.apache.commons.math3.fraction.BigFraction;

        $d0 = virtualinvoke r16.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        specialinvoke $r18.<org.apache.commons.math3.fraction.BigFraction: void <init>(double)>($d0);

        $r17[3] = $r18;

        $r19 = newarray (org.apache.commons.math3.fraction.BigFraction)[4];

        $r18 = new org.apache.commons.math3.fraction.BigFraction;

        $d0 = virtualinvoke $r4.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        specialinvoke $r18.<org.apache.commons.math3.fraction.BigFraction: void <init>(double)>($d0);

        $r19[0] = $r18;

        $r18 = new org.apache.commons.math3.fraction.BigFraction;

        $d0 = virtualinvoke r7.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        specialinvoke $r18.<org.apache.commons.math3.fraction.BigFraction: void <init>(double)>($d0);

        $r19[1] = $r18;

        $r18 = new org.apache.commons.math3.fraction.BigFraction;

        $d0 = virtualinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        specialinvoke $r18.<org.apache.commons.math3.fraction.BigFraction: void <init>(double)>($d0);

        $r19[2] = $r18;

        $r18 = new org.apache.commons.math3.fraction.BigFraction;

        $d0 = virtualinvoke r16.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        specialinvoke $r18.<org.apache.commons.math3.fraction.BigFraction: void <init>(double)>($d0);

        $r19[3] = $r18;

        $r20 = newarray (org.apache.commons.math3.fraction.BigFraction)[4];

        $r18 = new org.apache.commons.math3.fraction.BigFraction;

        $d0 = virtualinvoke $r4.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        specialinvoke $r18.<org.apache.commons.math3.fraction.BigFraction: void <init>(double)>($d0);

        $r20[0] = $r18;

        $r18 = new org.apache.commons.math3.fraction.BigFraction;

        $d0 = virtualinvoke r7.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        specialinvoke $r18.<org.apache.commons.math3.fraction.BigFraction: void <init>(double)>($d0);

        $r20[1] = $r18;

        $r18 = new org.apache.commons.math3.fraction.BigFraction;

        $d0 = virtualinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        specialinvoke $r18.<org.apache.commons.math3.fraction.BigFraction: void <init>(double)>($d0);

        $r20[2] = $r18;

        $r18 = new org.apache.commons.math3.fraction.BigFraction;

        $d0 = virtualinvoke r16.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        specialinvoke $r18.<org.apache.commons.math3.fraction.BigFraction: void <init>(double)>($d0);

        $r20[3] = $r18;

        $r21 = newarray (org.apache.commons.math3.fraction.BigFraction)[4];

        $r18 = $r17[0];

        $r22 = $r17[0];

        $r18 = virtualinvoke $r18.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r22);

        $r22 = $r19[0];

        $r23 = $r19[0];

        $r22 = virtualinvoke $r22.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r23);

        $r18 = virtualinvoke $r18.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r22);

        $r22 = $r20[0];

        $r23 = $r20[0];

        $r22 = virtualinvoke $r22.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r23);

        $r18 = virtualinvoke $r18.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r22);

        $r21[0] = $r18;

        $r18 = $r17[1];

        $r22 = $r17[1];

        $r18 = virtualinvoke $r18.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r22);

        $r22 = $r19[1];

        $r23 = $r19[1];

        $r22 = virtualinvoke $r22.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r23);

        $r18 = virtualinvoke $r18.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r22);

        $r22 = $r20[1];

        $r23 = $r20[1];

        $r22 = virtualinvoke $r22.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r23);

        $r18 = virtualinvoke $r18.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r22);

        $r21[1] = $r18;

        $r18 = $r17[2];

        $r22 = $r17[2];

        $r18 = virtualinvoke $r18.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r22);

        $r22 = $r19[2];

        $r23 = $r19[2];

        $r22 = virtualinvoke $r22.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r23);

        $r18 = virtualinvoke $r18.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r22);

        $r22 = $r20[2];

        $r23 = $r20[2];

        $r22 = virtualinvoke $r22.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r23);

        $r18 = virtualinvoke $r18.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r22);

        $r21[2] = $r18;

        $r18 = $r17[3];

        $r22 = $r17[3];

        $r18 = virtualinvoke $r18.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r22);

        $r22 = $r19[3];

        $r23 = $r19[3];

        $r22 = virtualinvoke $r22.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r23);

        $r18 = virtualinvoke $r18.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r22);

        $r22 = $r20[3];

        $r23 = $r20[3];

        $r22 = virtualinvoke $r22.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r23);

        $r18 = virtualinvoke $r18.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r22);

        $r21[3] = $r18;

        $r18 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator: org.apache.commons.math3.fraction.BigFraction minor(org.apache.commons.math3.fraction.BigFraction[],org.apache.commons.math3.fraction.BigFraction[],org.apache.commons.math3.fraction.BigFraction[])>($r17, $r19, $r20);

        $r23 = virtualinvoke $r18.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(int)>(2);

        $r18 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator: org.apache.commons.math3.fraction.BigFraction minor(org.apache.commons.math3.fraction.BigFraction[],org.apache.commons.math3.fraction.BigFraction[],org.apache.commons.math3.fraction.BigFraction[])>($r21, $r19, $r20);

        $r22 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator: org.apache.commons.math3.fraction.BigFraction minor(org.apache.commons.math3.fraction.BigFraction[],org.apache.commons.math3.fraction.BigFraction[],org.apache.commons.math3.fraction.BigFraction[])>($r21, $r17, $r20);

        $r24 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator: org.apache.commons.math3.fraction.BigFraction minor(org.apache.commons.math3.fraction.BigFraction[],org.apache.commons.math3.fraction.BigFraction[],org.apache.commons.math3.fraction.BigFraction[])>($r21, $r17, $r19);

        $r18 = virtualinvoke $r18.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction divide(org.apache.commons.math3.fraction.BigFraction)>($r23);

        $r22 = virtualinvoke $r22.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction divide(org.apache.commons.math3.fraction.BigFraction)>($r23);

        $r22 = virtualinvoke $r22.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction negate()>();

        $r23 = virtualinvoke $r24.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction divide(org.apache.commons.math3.fraction.BigFraction)>($r23);

        $r24 = $r17[0];

        $r25 = virtualinvoke $r24.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r18);

        $r24 = $r19[0];

        $r26 = virtualinvoke $r24.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r22);

        $r24 = $r20[0];

        $r24 = virtualinvoke $r24.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r23);

        $r25 = virtualinvoke $r25.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r25);

        $r26 = virtualinvoke $r26.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r26);

        $r25 = virtualinvoke $r25.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r26);

        $r24 = virtualinvoke $r24.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r24);

        $r24 = virtualinvoke $r25.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r24);

        $r3 = new org.apache.commons.math3.geometry.enclosing.EnclosingBall;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $d0 = virtualinvoke $r18.<org.apache.commons.math3.fraction.BigFraction: double doubleValue()>();

        $d1 = virtualinvoke $r22.<org.apache.commons.math3.fraction.BigFraction: double doubleValue()>();

        $d2 = virtualinvoke $r23.<org.apache.commons.math3.fraction.BigFraction: double doubleValue()>();

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: void <init>(double,double,double)>($d0, $d1, $d2);

        $d0 = virtualinvoke $r24.<org.apache.commons.math3.fraction.BigFraction: double doubleValue()>();

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>($d0);

        $r5 = newarray (org.apache.commons.math3.geometry.euclidean.threed.Vector3D)[4];

        $r5[0] = $r4;

        $r5[1] = r7;

        $r5[2] = $r8;

        $r5[3] = r16;

        specialinvoke $r3.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: void <init>(org.apache.commons.math3.geometry.Point,double,org.apache.commons.math3.geometry.Point[])>($r2, $d0, $r5);

        return $r3;
    }
