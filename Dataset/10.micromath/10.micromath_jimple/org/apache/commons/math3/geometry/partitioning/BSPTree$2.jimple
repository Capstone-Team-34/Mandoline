org.apache.commons.math3.geometry.partitioning.BSPTree$2 extends java.lang.Object
static final int[] $SwitchMap$org$apache$commons$math3$geometry$partitioning$BSPTreeVisitor$Order
static final int[] $SwitchMap$org$apache$commons$math3$geometry$partitioning$Side
    static void <clinit>()
    {
        org.apache.commons.math3.geometry.partitioning.Side[] $r0;
        int $i0;
        int[] $r1;
        org.apache.commons.math3.geometry.partitioning.Side $r2;
        org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order[] $r3;
        org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order $r4;
        java.lang.NoSuchFieldError $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        $r0 = staticinvoke <org.apache.commons.math3.geometry.partitioning.Side: org.apache.commons.math3.geometry.partitioning.Side[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <org.apache.commons.math3.geometry.partitioning.BSPTree$2: int[] $SwitchMap$org$apache$commons$math3$geometry$partitioning$Side> = $r1;

     label01:
        $r1 = <org.apache.commons.math3.geometry.partitioning.BSPTree$2: int[] $SwitchMap$org$apache$commons$math3$geometry$partitioning$Side>;

        $r2 = <org.apache.commons.math3.geometry.partitioning.Side: org.apache.commons.math3.geometry.partitioning.Side PLUS>;

        $i0 = virtualinvoke $r2.<org.apache.commons.math3.geometry.partitioning.Side: int ordinal()>();

     label02:
        $r1[$i0] = 1;

     label03:
        $r1 = <org.apache.commons.math3.geometry.partitioning.BSPTree$2: int[] $SwitchMap$org$apache$commons$math3$geometry$partitioning$Side>;

        $r2 = <org.apache.commons.math3.geometry.partitioning.Side: org.apache.commons.math3.geometry.partitioning.Side MINUS>;

        $i0 = virtualinvoke $r2.<org.apache.commons.math3.geometry.partitioning.Side: int ordinal()>();

     label04:
        $r1[$i0] = 2;

     label05:
        $r1 = <org.apache.commons.math3.geometry.partitioning.BSPTree$2: int[] $SwitchMap$org$apache$commons$math3$geometry$partitioning$Side>;

        $r2 = <org.apache.commons.math3.geometry.partitioning.Side: org.apache.commons.math3.geometry.partitioning.Side BOTH>;

        $i0 = virtualinvoke $r2.<org.apache.commons.math3.geometry.partitioning.Side: int ordinal()>();

     label06:
        $r1[$i0] = 3;

     label07:
        $r3 = staticinvoke <org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order[] values()>();

        $i0 = lengthof $r3;

        $r1 = newarray (int)[$i0];

        <org.apache.commons.math3.geometry.partitioning.BSPTree$2: int[] $SwitchMap$org$apache$commons$math3$geometry$partitioning$BSPTreeVisitor$Order> = $r1;

     label08:
        $r1 = <org.apache.commons.math3.geometry.partitioning.BSPTree$2: int[] $SwitchMap$org$apache$commons$math3$geometry$partitioning$BSPTreeVisitor$Order>;

        $r4 = <org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order PLUS_MINUS_SUB>;

        $i0 = virtualinvoke $r4.<org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: int ordinal()>();

     label09:
        $r1[$i0] = 1;

     label10:
        $r1 = <org.apache.commons.math3.geometry.partitioning.BSPTree$2: int[] $SwitchMap$org$apache$commons$math3$geometry$partitioning$BSPTreeVisitor$Order>;

        $r4 = <org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order PLUS_SUB_MINUS>;

        $i0 = virtualinvoke $r4.<org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: int ordinal()>();

     label11:
        $r1[$i0] = 2;

     label12:
        $r1 = <org.apache.commons.math3.geometry.partitioning.BSPTree$2: int[] $SwitchMap$org$apache$commons$math3$geometry$partitioning$BSPTreeVisitor$Order>;

        $r4 = <org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order MINUS_PLUS_SUB>;

        $i0 = virtualinvoke $r4.<org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: int ordinal()>();

     label13:
        $r1[$i0] = 3;

     label14:
        $r1 = <org.apache.commons.math3.geometry.partitioning.BSPTree$2: int[] $SwitchMap$org$apache$commons$math3$geometry$partitioning$BSPTreeVisitor$Order>;

        $r4 = <org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order MINUS_SUB_PLUS>;

        $i0 = virtualinvoke $r4.<org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: int ordinal()>();

     label15:
        $r1[$i0] = 4;

     label16:
        $r1 = <org.apache.commons.math3.geometry.partitioning.BSPTree$2: int[] $SwitchMap$org$apache$commons$math3$geometry$partitioning$BSPTreeVisitor$Order>;

        $r4 = <org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order SUB_PLUS_MINUS>;

        $i0 = virtualinvoke $r4.<org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: int ordinal()>();

     label17:
        $r1[$i0] = 5;

     label18:
        $r1 = <org.apache.commons.math3.geometry.partitioning.BSPTree$2: int[] $SwitchMap$org$apache$commons$math3$geometry$partitioning$BSPTreeVisitor$Order>;

        $r4 = <org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order SUB_MINUS_PLUS>;

        $i0 = virtualinvoke $r4.<org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: int ordinal()>();

     label19:
        $r1[$i0] = 6;

        return;

     label20:
        $r5 := @caughtexception;

        return;

     label21:
        $r6 := @caughtexception;

        goto label18;

     label22:
        $r7 := @caughtexception;

        goto label16;

     label23:
        $r8 := @caughtexception;

        goto label14;

     label24:
        $r9 := @caughtexception;

        goto label12;

     label25:
        $r10 := @caughtexception;

        goto label10;

     label26:
        $r11 := @caughtexception;

        goto label07;

     label27:
        $r12 := @caughtexception;

        goto label05;

     label28:
        $r13 := @caughtexception;

        goto label03;

        catch java.lang.NoSuchFieldError from label01 to label02 with label28;
        catch java.lang.NoSuchFieldError from label03 to label04 with label27;
        catch java.lang.NoSuchFieldError from label05 to label06 with label26;
        catch java.lang.NoSuchFieldError from label08 to label09 with label25;
        catch java.lang.NoSuchFieldError from label10 to label11 with label24;
        catch java.lang.NoSuchFieldError from label12 to label13 with label23;
        catch java.lang.NoSuchFieldError from label14 to label15 with label22;
        catch java.lang.NoSuchFieldError from label16 to label17 with label21;
        catch java.lang.NoSuchFieldError from label18 to label19 with label20;
    }
