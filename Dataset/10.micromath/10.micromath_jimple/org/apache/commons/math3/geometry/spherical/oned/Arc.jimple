org.apache.commons.math3.geometry.spherical.oned.Arc extends java.lang.Object
private final double lower
private final double middle
private final double tolerance
private final double upper
    public void <init>(double, double, double) throws org.apache.commons.math3.exception.NumberIsTooLargeException
    {
        org.apache.commons.math3.geometry.spherical.oned.Arc r0;
        double $d0, $d1, $d2;
        org.apache.commons.math3.exception.util.LocalizedFormats $r1;
        boolean $z0;
        byte $b0;
        org.apache.commons.math3.exception.NumberIsTooLargeException $r2;
        java.lang.Double $r3, $r4;

        r0 := @this: org.apache.commons.math3.geometry.spherical.oned.Arc;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $d2 := @parameter2: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double tolerance> = $d2;

        $z0 = staticinvoke <org.apache.commons.math3.util.Precision: boolean equals(double,double,int)>($d0, $d1, 0);

        if $z0 != 0 goto label1;

        $d2 = $d1 - $d0;

        $b0 = $d2 cmpl 6.283185307179586;

        if $b0 < 0 goto label2;

     label1:
        r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double lower> = 0.0;

        r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double upper> = 6.283185307179586;

        r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double middle> = 3.141592653589793;

        return;

     label2:
        $b0 = $d0 cmpg $d1;

        if $b0 > 0 goto label3;

        $d2 = staticinvoke <org.apache.commons.math3.util.MathUtils: double normalizeAngle(double,double)>($d0, 3.141592653589793);

        r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double lower> = $d2;

        $d2 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double lower>;

        $d0 = $d1 - $d0;

        $d0 = $d2 + $d0;

        r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double upper> = $d0;

        $d0 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double lower>;

        $d1 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double upper>;

        $d0 = $d0 + $d1;

        $d0 = 0.5 * $d0;

        r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double middle> = $d0;

        return;

     label3:
        $r2 = new org.apache.commons.math3.exception.NumberIsTooLargeException;

        $r1 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats ENDPOINTS_NOT_AN_INTERVAL>;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        specialinvoke $r2.<org.apache.commons.math3.exception.NumberIsTooLargeException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)>($r1, $r3, $r4, 1);

        throw $r2;
    }
    public org.apache.commons.math3.geometry.partitioning.Region$Location checkPoint(double)
    {
        org.apache.commons.math3.geometry.spherical.oned.Arc r0;
        double $d0, $d1, $d2;
        byte $b0;
        org.apache.commons.math3.geometry.partitioning.Region$Location r1;

        r0 := @this: org.apache.commons.math3.geometry.spherical.oned.Arc;

        $d0 := @parameter0: double;

        $d1 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double middle>;

        $d0 = staticinvoke <org.apache.commons.math3.util.MathUtils: double normalizeAngle(double,double)>($d0, $d1);

        $d1 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double lower>;

        $d2 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double tolerance>;

        $d1 = $d1 - $d2;

        $b0 = $d0 cmpg $d1;

        if $b0 < 0 goto label1;

        $d1 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double upper>;

        $d2 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double tolerance>;

        $d1 = $d1 + $d2;

        $b0 = $d0 cmpl $d1;

        if $b0 <= 0 goto label2;

     label1:
        r1 = <org.apache.commons.math3.geometry.partitioning.Region$Location: org.apache.commons.math3.geometry.partitioning.Region$Location OUTSIDE>;

        return r1;

     label2:
        $d1 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double lower>;

        $d2 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double tolerance>;

        $d1 = $d1 + $d2;

        $b0 = $d0 cmpl $d1;

        if $b0 <= 0 goto label3;

        $d1 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double upper>;

        $d2 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double tolerance>;

        $d1 = $d1 - $d2;

        $b0 = $d0 cmpg $d1;

        if $b0 >= 0 goto label3;

        r1 = <org.apache.commons.math3.geometry.partitioning.Region$Location: org.apache.commons.math3.geometry.partitioning.Region$Location INSIDE>;

        return r1;

     label3:
        $d0 = virtualinvoke r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double getSize()>();

        $d1 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double tolerance>;

        $d1 = 6.283185307179586 - $d1;

        $b0 = $d0 cmpl $d1;

        if $b0 < 0 goto label4;

        r1 = <org.apache.commons.math3.geometry.partitioning.Region$Location: org.apache.commons.math3.geometry.partitioning.Region$Location INSIDE>;

        return r1;

     label4:
        r1 = <org.apache.commons.math3.geometry.partitioning.Region$Location: org.apache.commons.math3.geometry.partitioning.Region$Location BOUNDARY>;

        return r1;
    }
    public double getBarycenter()
    {
        org.apache.commons.math3.geometry.spherical.oned.Arc r0;
        double d0;

        r0 := @this: org.apache.commons.math3.geometry.spherical.oned.Arc;

        d0 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double middle>;

        return d0;
    }
    public double getInf()
    {
        org.apache.commons.math3.geometry.spherical.oned.Arc r0;
        double d0;

        r0 := @this: org.apache.commons.math3.geometry.spherical.oned.Arc;

        d0 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double lower>;

        return d0;
    }
    public double getSize()
    {
        org.apache.commons.math3.geometry.spherical.oned.Arc r0;
        double $d0, $d1;

        r0 := @this: org.apache.commons.math3.geometry.spherical.oned.Arc;

        $d1 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double upper>;

        $d0 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double lower>;

        $d0 = $d1 - $d0;

        return $d0;
    }
    public double getSup()
    {
        org.apache.commons.math3.geometry.spherical.oned.Arc r0;
        double d0;

        r0 := @this: org.apache.commons.math3.geometry.spherical.oned.Arc;

        d0 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double upper>;

        return d0;
    }
    public double getTolerance()
    {
        org.apache.commons.math3.geometry.spherical.oned.Arc r0;
        double d0;

        r0 := @this: org.apache.commons.math3.geometry.spherical.oned.Arc;

        d0 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double tolerance>;

        return d0;
    }
