org.apache.commons.math3.geometry.partitioning.RegionFactory$VanishingToLeaf extends java.lang.Object implements org.apache.commons.math3.geometry.partitioning.BSPTree$VanishingCutHandler
private final boolean inside
final org.apache.commons.math3.geometry.partitioning.RegionFactory this$0
    void <init>(org.apache.commons.math3.geometry.partitioning.RegionFactory, boolean)
    {
        org.apache.commons.math3.geometry.partitioning.RegionFactory$VanishingToLeaf r0;
        org.apache.commons.math3.geometry.partitioning.RegionFactory $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.RegionFactory$VanishingToLeaf;

        $r1 := @parameter0: org.apache.commons.math3.geometry.partitioning.RegionFactory;

        $z0 := @parameter1: boolean;

        r0.<org.apache.commons.math3.geometry.partitioning.RegionFactory$VanishingToLeaf: org.apache.commons.math3.geometry.partitioning.RegionFactory this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.geometry.partitioning.RegionFactory$VanishingToLeaf: boolean inside> = $z0;

        return;
    }
    public org.apache.commons.math3.geometry.partitioning.BSPTree fixNode(org.apache.commons.math3.geometry.partitioning.BSPTree)
    {
        org.apache.commons.math3.geometry.partitioning.RegionFactory$VanishingToLeaf r0;
        org.apache.commons.math3.geometry.partitioning.BSPTree r1, $r2;
        java.lang.Object $r3, $r4;
        boolean $z0;
        java.lang.Boolean $r5;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.RegionFactory$VanishingToLeaf;

        r1 := @parameter0: org.apache.commons.math3.geometry.partitioning.BSPTree;

        $r2 = virtualinvoke r1.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree getPlus()>();

        $r3 = virtualinvoke $r2.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object getAttribute()>();

        $r2 = virtualinvoke r1.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree getMinus()>();

        $r4 = virtualinvoke $r2.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object getAttribute()>();

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r2 = new org.apache.commons.math3.geometry.partitioning.BSPTree;

        r1 = virtualinvoke r1.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree getPlus()>();

        $r3 = virtualinvoke r1.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object getAttribute()>();

        specialinvoke $r2.<org.apache.commons.math3.geometry.partitioning.BSPTree: void <init>(java.lang.Object)>($r3);

        return $r2;

     label1:
        r1 = new org.apache.commons.math3.geometry.partitioning.BSPTree;

        $z0 = r0.<org.apache.commons.math3.geometry.partitioning.RegionFactory$VanishingToLeaf: boolean inside>;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        specialinvoke r1.<org.apache.commons.math3.geometry.partitioning.BSPTree: void <init>(java.lang.Object)>($r5);

        return r1;
    }
