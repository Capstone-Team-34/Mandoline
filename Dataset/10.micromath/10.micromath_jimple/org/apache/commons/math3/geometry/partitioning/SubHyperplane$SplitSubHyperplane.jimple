org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane extends java.lang.Object
private final org.apache.commons.math3.geometry.partitioning.SubHyperplane minus
private final org.apache.commons.math3.geometry.partitioning.SubHyperplane plus
    public void <init>(org.apache.commons.math3.geometry.partitioning.SubHyperplane, org.apache.commons.math3.geometry.partitioning.SubHyperplane)
    {
        org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane r0;
        org.apache.commons.math3.geometry.partitioning.SubHyperplane r1, r2;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane;

        r1 := @parameter0: org.apache.commons.math3.geometry.partitioning.SubHyperplane;

        r2 := @parameter1: org.apache.commons.math3.geometry.partitioning.SubHyperplane;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane plus> = r1;

        r0.<org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane minus> = r2;

        return;
    }
    public org.apache.commons.math3.geometry.partitioning.SubHyperplane getMinus()
    {
        org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane r0;
        org.apache.commons.math3.geometry.partitioning.SubHyperplane r1;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane;

        r1 = r0.<org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane minus>;

        return r1;
    }
    public org.apache.commons.math3.geometry.partitioning.SubHyperplane getPlus()
    {
        org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane r0;
        org.apache.commons.math3.geometry.partitioning.SubHyperplane r1;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane;

        r1 = r0.<org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane plus>;

        return r1;
    }
    public org.apache.commons.math3.geometry.partitioning.Side getSide()
    {
        org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane r0;
        org.apache.commons.math3.geometry.partitioning.SubHyperplane $r1;
        boolean $z0;
        org.apache.commons.math3.geometry.partitioning.Side r2;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane;

        $r1 = r0.<org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane plus>;

        if $r1 == null goto label2;

        $r1 = r0.<org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane plus>;

        $z0 = interfaceinvoke $r1.<org.apache.commons.math3.geometry.partitioning.SubHyperplane: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r1 = r0.<org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane minus>;

        if $r1 == null goto label1;

        $r1 = r0.<org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane minus>;

        $z0 = interfaceinvoke $r1.<org.apache.commons.math3.geometry.partitioning.SubHyperplane: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        r2 = <org.apache.commons.math3.geometry.partitioning.Side: org.apache.commons.math3.geometry.partitioning.Side BOTH>;

        return r2;

     label1:
        r2 = <org.apache.commons.math3.geometry.partitioning.Side: org.apache.commons.math3.geometry.partitioning.Side PLUS>;

        return r2;

     label2:
        $r1 = r0.<org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane minus>;

        if $r1 == null goto label3;

        $r1 = r0.<org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane minus>;

        $z0 = interfaceinvoke $r1.<org.apache.commons.math3.geometry.partitioning.SubHyperplane: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        r2 = <org.apache.commons.math3.geometry.partitioning.Side: org.apache.commons.math3.geometry.partitioning.Side MINUS>;

        return r2;

     label3:
        r2 = <org.apache.commons.math3.geometry.partitioning.Side: org.apache.commons.math3.geometry.partitioning.Side HYPER>;

        return r2;
    }
