org.apache.commons.math3.geometry.euclidean.threed.FieldRotation extends java.lang.Object implements java.io.Serializable
private static final long serialVersionUID
private final org.apache.commons.math3.RealFieldElement q0
private final org.apache.commons.math3.RealFieldElement q1
private final org.apache.commons.math3.RealFieldElement q2
private final org.apache.commons.math3.RealFieldElement q3
    public void <init>(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement, boolean)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        org.apache.commons.math3.RealFieldElement r1, r2, r3, r4, $r6;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.RealFieldElement;

        r3 := @parameter2: org.apache.commons.math3.RealFieldElement;

        r4 := @parameter3: org.apache.commons.math3.RealFieldElement;

        $z0 := @parameter4: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r1);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r2);

        $r5 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r5);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r3);

        $r5 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r5);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r4);

        $r5 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r5);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object sqrt()>();

        $r6 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object reciprocal()>();

        $r6 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r1);

        r1 = (org.apache.commons.math3.RealFieldElement) $r5;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0> = r1;

        $r5 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r2);

        r1 = (org.apache.commons.math3.RealFieldElement) $r5;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1> = r1;

        $r5 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r3);

        r1 = (org.apache.commons.math3.RealFieldElement) $r5;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2> = r1;

        $r5 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r4);

        r1 = (org.apache.commons.math3.RealFieldElement) $r5;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3> = r1;

        return;

     label1:
        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0> = r1;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1> = r2;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2> = r3;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3> = r4;

        return;
    }
    public void <init>(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.RealFieldElement) throws org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r1;
        org.apache.commons.math3.RealFieldElement r2;
        org.apache.commons.math3.geometry.euclidean.threed.RotationConvention $r3;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r2 := @parameter1: org.apache.commons.math3.RealFieldElement;

        $r3 = <org.apache.commons.math3.geometry.euclidean.threed.RotationConvention: org.apache.commons.math3.geometry.euclidean.threed.RotationConvention VECTOR_OPERATOR>;

        specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: void <init>(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.geometry.euclidean.threed.RotationConvention)>(r1, r2, $r3);

        return;
    }
    public void <init>(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.RotationConvention) throws org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r1;
        org.apache.commons.math3.RealFieldElement r2, $r4, r10;
        org.apache.commons.math3.geometry.euclidean.threed.RotationConvention $r3, $r8;
        double $d0;
        byte $b0;
        org.apache.commons.math3.exception.MathIllegalArgumentException $r5;
        org.apache.commons.math3.exception.util.LocalizedFormats $r6;
        java.lang.Object[] $r7;
        java.lang.Object $r9;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r2 := @parameter1: org.apache.commons.math3.RealFieldElement;

        $r3 := @parameter2: org.apache.commons.math3.geometry.euclidean.threed.RotationConvention;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getNorm()>();

        $d0 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $r5 = new org.apache.commons.math3.exception.MathIllegalArgumentException;

        $r6 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats ZERO_NORM_FOR_ROTATION_AXIS>;

        $r7 = newarray (java.lang.Object)[0];

        specialinvoke $r5.<org.apache.commons.math3.exception.MathIllegalArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r6, $r7);

        throw $r5;

     label1:
        $r8 = <org.apache.commons.math3.geometry.euclidean.threed.RotationConvention: org.apache.commons.math3.geometry.euclidean.threed.RotationConvention VECTOR_OPERATOR>;

        if $r3 != $r8 goto label3;

        $d0 = -0.5;

     label2:
        $r9 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r9 = interfaceinvoke r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object sin()>();

        r2 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r9 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(java.lang.Object)>($r4);

        r2 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r9 = interfaceinvoke r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object cos()>();

        $r4 = (org.apache.commons.math3.RealFieldElement) $r9;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0> = $r4;

        $r4 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r9;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1> = $r4;

        $r4 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r9;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2> = $r4;

        $r4 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r9 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        r2 = (org.apache.commons.math3.RealFieldElement) $r9;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3> = r2;

        return;

     label3:
        $d0 = 0.5;

        goto label2;
    }
    public void <init>(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) throws org.apache.commons.math3.exception.MathArithmeticException
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r1, r2;
        org.apache.commons.math3.RealFieldElement $r3, $r4;
        java.lang.Object $r5;
        double $d0, $d1;
        byte $b0;
        org.apache.commons.math3.exception.MathArithmeticException $r6;
        org.apache.commons.math3.exception.util.LocalizedFormats $r7;
        java.lang.Object[] $r8;
        org.apache.commons.math3.Field $r9;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getNorm()>();

        $r4 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getNorm()>();

        $r5 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r5;

        $d0 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $r6 = new org.apache.commons.math3.exception.MathArithmeticException;

        $r7 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR>;

        $r8 = newarray (java.lang.Object)[0];

        specialinvoke $r6.<org.apache.commons.math3.exception.MathArithmeticException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r7, $r8);

        throw $r6;

     label1:
        $r4 = staticinvoke <org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement dotProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>(r1, r2);

        $d0 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $d1 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $d1 = -0.999999999999998 * $d1;

        $b0 = $d0 cmpg $d1;

        if $b0 >= 0 goto label2;

        r1 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D orthogonal()>();

        $r9 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $r5 = interfaceinvoke $r9.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        $r3 = (org.apache.commons.math3.RealFieldElement) $r5;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0> = $r3;

        $r3 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r5 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r3 = (org.apache.commons.math3.RealFieldElement) $r5;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1> = $r3;

        $r3 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r5 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r3 = (org.apache.commons.math3.RealFieldElement) $r5;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2> = $r3;

        $r3 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r5 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r3 = (org.apache.commons.math3.RealFieldElement) $r5;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3> = $r3;

        return;

     label2:
        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(java.lang.Object)>($r3);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>(1.0);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(0.5);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object sqrt()>();

        $r4 = (org.apache.commons.math3.RealFieldElement) $r5;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0> = $r4;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r3);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(2.0);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object reciprocal()>();

        $r3 = (org.apache.commons.math3.RealFieldElement) $r5;

        r1 = staticinvoke <org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>(r2, r1);

        $r4 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r5 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r5;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1> = $r4;

        $r4 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r5 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r5;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2> = $r4;

        $r4 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r5 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r5;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3> = $r3;

        return;
    }
    public void <init>(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) throws org.apache.commons.math3.exception.MathArithmeticException
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r1, r2, r3, r4, $r5, $r6;
        org.apache.commons.math3.RealFieldElement $r7, $r12, $r14;
        org.apache.commons.math3.Field $r8;
        java.lang.Object[][] $r9;
        org.apache.commons.math3.RealFieldElement[][] r10;
        org.apache.commons.math3.RealFieldElement[] $r11;
        java.lang.Object $r13;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r3 := @parameter2: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r4 := @parameter3: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r2 = staticinvoke <org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>(r1, r2);

        r2 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D normalize()>();

        $r5 = staticinvoke <org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>(r2, r1);

        $r5 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D normalize()>();

        r1 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D normalize()>();

        r4 = staticinvoke <org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>(r3, r4);

        r4 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D normalize()>();

        $r6 = staticinvoke <org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>(r4, r3);

        $r6 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D normalize()>();

        r3 = virtualinvoke r3.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D normalize()>();

        $r7 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r8 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $r9 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[][] buildArray(org.apache.commons.math3.Field,int,int)>($r8, 3, 3);

        r10 = (org.apache.commons.math3.RealFieldElement[][]) $r9;

        $r11 = r10[0];

        $r7 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r12 = virtualinvoke r3.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r13 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r12);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r12 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r14 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r13 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r14);

        $r13 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r13);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r12 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r14 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r13 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r14);

        $r13 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r13);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r11[0] = $r7;

        $r11 = r10[0];

        $r7 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r12 = virtualinvoke r3.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r13 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r12);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r12 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r14 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r13 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r14);

        $r13 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r13);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r12 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r14 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r13 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r14);

        $r13 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r13);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r11[1] = $r7;

        $r11 = r10[0];

        $r7 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r12 = virtualinvoke r3.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r13 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r12);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r12 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r14 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r13 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r14);

        $r13 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r13);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r12 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r14 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r13 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r14);

        $r13 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r13);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r11[2] = $r7;

        $r11 = r10[1];

        $r7 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r12 = virtualinvoke r3.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r13 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r12);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r12 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r14 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r13 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r14);

        $r13 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r13);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r12 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r14 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r13 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r14);

        $r13 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r13);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r11[0] = $r7;

        $r11 = r10[1];

        $r7 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r12 = virtualinvoke r3.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r13 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r12);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r12 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r14 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r13 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r14);

        $r13 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r13);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r12 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r14 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r13 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r14);

        $r13 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r13);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r11[1] = $r7;

        $r11 = r10[1];

        $r7 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r12 = virtualinvoke r3.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r13 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r12);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r12 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r14 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r13 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r14);

        $r13 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r13);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r12 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r14 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r13 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r14);

        $r13 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r13);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r11[2] = $r7;

        $r11 = r10[2];

        $r7 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r12 = virtualinvoke r3.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r13 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r12);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r12 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r14 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r13 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r14);

        $r13 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r13);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r12 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r14 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r13 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r14);

        $r13 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r13);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r11[0] = $r7;

        $r11 = r10[2];

        $r7 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r12 = virtualinvoke r3.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r13 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r12);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r12 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r14 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r13 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r14);

        $r13 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r13);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r12 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r14 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r13 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r14);

        $r13 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r13);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r11[1] = $r7;

        $r11 = r10[2];

        $r7 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r12 = virtualinvoke r3.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r13 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r12);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r12 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r14 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r13 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r14);

        $r13 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r13);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r12 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r14 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r13 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r14);

        $r13 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r13);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r11[2] = $r7;

        $r11 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement[] mat2quat(org.apache.commons.math3.RealFieldElement[][])>(r10);

        $r7 = $r11[0];

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0> = $r7;

        $r7 = $r11[1];

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1> = $r7;

        $r7 = $r11[2];

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2> = $r7;

        $r7 = $r11[3];

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3> = $r7;

        return;
    }
    public void <init>(org.apache.commons.math3.geometry.euclidean.threed.RotationOrder, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        org.apache.commons.math3.geometry.euclidean.threed.RotationOrder $r1;
        org.apache.commons.math3.RealFieldElement r2, r3, r4;
        org.apache.commons.math3.geometry.euclidean.threed.RotationConvention $r5;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.RotationOrder;

        r2 := @parameter1: org.apache.commons.math3.RealFieldElement;

        r3 := @parameter2: org.apache.commons.math3.RealFieldElement;

        r4 := @parameter3: org.apache.commons.math3.RealFieldElement;

        $r5 = <org.apache.commons.math3.geometry.euclidean.threed.RotationConvention: org.apache.commons.math3.geometry.euclidean.threed.RotationConvention VECTOR_OPERATOR>;

        specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: void <init>(org.apache.commons.math3.geometry.euclidean.threed.RotationOrder,org.apache.commons.math3.geometry.euclidean.threed.RotationConvention,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r1, $r5, r2, r3, r4);

        return;
    }
    public void <init>(org.apache.commons.math3.geometry.euclidean.threed.RotationOrder, org.apache.commons.math3.geometry.euclidean.threed.RotationConvention, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0, r6, r7, r8;
        org.apache.commons.math3.geometry.euclidean.threed.RotationOrder $r1;
        org.apache.commons.math3.geometry.euclidean.threed.RotationConvention $r2;
        org.apache.commons.math3.RealFieldElement r3, r4, r5, r11;
        org.apache.commons.math3.Field $r9;
        java.lang.Object $r10;
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D $r12;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r13;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.RotationOrder;

        $r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.RotationConvention;

        r3 := @parameter2: org.apache.commons.math3.RealFieldElement;

        r4 := @parameter3: org.apache.commons.math3.RealFieldElement;

        r5 := @parameter4: org.apache.commons.math3.RealFieldElement;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r9 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $r10 = interfaceinvoke $r9.<org.apache.commons.math3.Field: java.lang.Object getOne()>();

        r11 = (org.apache.commons.math3.RealFieldElement) $r10;

        r6 = new org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r12 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r13 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.RotationOrder: org.apache.commons.math3.geometry.euclidean.threed.Vector3D getA1()>();

        specialinvoke $r12.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>(r11, $r13);

        specialinvoke r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: void <init>(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.geometry.euclidean.threed.RotationConvention)>($r12, r3, $r2);

        r7 = new org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r12 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r13 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.RotationOrder: org.apache.commons.math3.geometry.euclidean.threed.Vector3D getA2()>();

        specialinvoke $r12.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>(r11, $r13);

        specialinvoke r7.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: void <init>(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.geometry.euclidean.threed.RotationConvention)>($r12, r4, $r2);

        r8 = new org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r12 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r13 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.RotationOrder: org.apache.commons.math3.geometry.euclidean.threed.Vector3D getA3()>();

        specialinvoke $r12.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>(r11, $r13);

        specialinvoke r8.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: void <init>(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.geometry.euclidean.threed.RotationConvention)>($r12, r5, $r2);

        r7 = virtualinvoke r7.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation compose(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,org.apache.commons.math3.geometry.euclidean.threed.RotationConvention)>(r8, $r2);

        r6 = virtualinvoke r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation compose(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,org.apache.commons.math3.geometry.euclidean.threed.RotationConvention)>(r7, $r2);

        r3 = r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0> = r3;

        r3 = r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1> = r3;

        r3 = r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2> = r3;

        r3 = r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3> = r3;

        return;
    }
    public void <init>(org.apache.commons.math3.RealFieldElement[][], double) throws org.apache.commons.math3.geometry.euclidean.threed.NotARotationMatrixException
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        org.apache.commons.math3.RealFieldElement[][] r1;
        double $d0;
        int $i0;
        org.apache.commons.math3.RealFieldElement[] $r2;
        org.apache.commons.math3.geometry.euclidean.threed.NotARotationMatrixException $r3;
        org.apache.commons.math3.exception.util.LocalizedFormats $r4;
        java.lang.Object[] $r5;
        java.lang.Integer $r6;
        org.apache.commons.math3.RealFieldElement $r7, $r8, $r10, $r11, $r12;
        java.lang.Object $r9;
        byte $b1;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement[][];

        $d0 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = lengthof r1;

        if $i0 != 3 goto label1;

        $r2 = r1[0];

        $i0 = lengthof $r2;

        if $i0 != 3 goto label1;

        $r2 = r1[1];

        $i0 = lengthof $r2;

        if $i0 != 3 goto label1;

        $r2 = r1[2];

        $i0 = lengthof $r2;

        if $i0 == 3 goto label2;

     label1:
        $r3 = new org.apache.commons.math3.geometry.euclidean.threed.NotARotationMatrixException;

        $r4 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats ROTATION_MATRIX_DIMENSIONS>;

        $r5 = newarray (java.lang.Object)[2];

        $i0 = lengthof r1;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[0] = $r6;

        $r2 = r1[0];

        $i0 = lengthof $r2;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[1] = $r6;

        specialinvoke $r3.<org.apache.commons.math3.geometry.euclidean.threed.NotARotationMatrixException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r4, $r5);

        throw $r3;

     label2:
        r1 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement[][] orthogonalizeMatrix(org.apache.commons.math3.RealFieldElement[][],double)>(r1, $d0);

        $r2 = r1[1];

        $r7 = $r2[1];

        $r2 = r1[2];

        $r8 = $r2[2];

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r2 = r1[2];

        $r8 = $r2[1];

        $r2 = r1[1];

        $r10 = $r2[2];

        $r9 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r10);

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r9);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r2 = r1[0];

        $r8 = $r2[1];

        $r2 = r1[2];

        $r10 = $r2[2];

        $r9 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r10);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r2 = r1[2];

        $r10 = $r2[1];

        $r2 = r1[0];

        $r11 = $r2[2];

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r11);

        $r9 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r9);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r2 = r1[0];

        $r10 = $r2[1];

        $r2 = r1[1];

        $r11 = $r2[2];

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r11);

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r2 = r1[1];

        $r11 = $r2[1];

        $r2 = r1[0];

        $r12 = $r2[2];

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r12);

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r9);

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r2 = r1[0];

        $r11 = $r2[0];

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r7);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r2 = r1[1];

        $r11 = $r2[0];

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r9);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r2 = r1[2];

        $r8 = $r2[0];

        $r9 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r10);

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r9);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b1 = $d0 cmpg 0.0;

        if $b1 >= 0 goto label3;

        $r3 = new org.apache.commons.math3.geometry.euclidean.threed.NotARotationMatrixException;

        $r4 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats CLOSEST_ORTHOGONAL_MATRIX_HAS_NEGATIVE_DETERMINANT>;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = $r7;

        specialinvoke $r3.<org.apache.commons.math3.geometry.euclidean.threed.NotARotationMatrixException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r4, $r5);

        throw $r3;

     label3:
        $r2 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement[] mat2quat(org.apache.commons.math3.RealFieldElement[][])>(r1);

        $r7 = $r2[0];

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0> = $r7;

        $r7 = $r2[1];

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1> = $r7;

        $r7 = $r2[2];

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2> = $r7;

        $r7 = $r2[3];

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3> = $r7;

        return;
    }
    public static org.apache.commons.math3.geometry.euclidean.threed.FieldRotation applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation, org.apache.commons.math3.geometry.euclidean.threed.FieldRotation)
    {
        org.apache.commons.math3.geometry.euclidean.threed.Rotation $r0;
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r1, $r2;
        org.apache.commons.math3.RealFieldElement $r3, $r5, $r6, $r7, $r8, $r9;
        double $d0;
        java.lang.Object $r4;

        $r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Rotation;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r3 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ0()>();

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ1()>();

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ2()>();

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ3()>();

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ1()>();

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ3()>();

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r7 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ2()>();

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ0()>();

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ2()>();

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r7 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ1()>();

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r8 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ3()>();

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r7 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ0()>();

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r7 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ3()>();

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r8 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ2()>();

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r9 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ1()>();

        $r4 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r8 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ0()>();

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r4;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,boolean)>($r3, $r5, $r6, $r7, 0);

        return $r2;
    }
    public static org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.Rotation $r0;
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r1;
        double d0, $d1;
        org.apache.commons.math3.RealFieldElement $r2, $r3, $r4, $r6, $r7, $r8, $r9;
        java.lang.Object $r5;

        $r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Rotation;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r3 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r4 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ1()>();

        $r5 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d0);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r5;

        d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ2()>();

        $r5 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d0);

        $r5 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r5);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r5;

        d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ3()>();

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d0);

        $r5 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r5);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r5;

        d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ0()>();

        d0 = neg d0;

        r1 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r5 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d0);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r5;

        $d1 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ2()>();

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d1);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r5;

        $d1 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ3()>();

        $r5 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d1);

        $r5 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r5);

        $r5 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r5);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d0);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r5;

        $d1 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ1()>();

        $r5 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d1);

        $r5 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r5);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r2);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d0);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r5;

        $d1 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ3()>();

        $r5 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d1);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r5;

        $d1 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ1()>();

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d1);

        $r5 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r5);

        $r5 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r5);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d0);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r5;

        $d1 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ2()>();

        $r5 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d1);

        $r5 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r5);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r3);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d0);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r5;

        $d1 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ1()>();

        $r5 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d1);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r5;

        $d1 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ2()>();

        $r5 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d1);

        $r5 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r5);

        $r5 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r5);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d0);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r5;

        d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ3()>();

        $r5 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d0);

        $r5 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r5);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r5;

        specialinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r8, $r4);

        return r1;
    }
    public static org.apache.commons.math3.geometry.euclidean.threed.FieldRotation applyTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation, org.apache.commons.math3.geometry.euclidean.threed.FieldRotation)
    {
        org.apache.commons.math3.geometry.euclidean.threed.Rotation $r0;
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r1, $r2;
        org.apache.commons.math3.RealFieldElement $r3, $r5, $r6, $r7, $r8, $r9;
        double $d0;
        java.lang.Object $r4;

        $r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Rotation;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r3 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ0()>();

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ1()>();

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ2()>();

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ3()>();

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ0()>();

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ1()>();

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ3()>();

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r7 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ2()>();

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ0()>();

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r7 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ2()>();

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r7 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ1()>();

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r8 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ3()>();

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r7 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ0()>();

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r8 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ3()>();

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r8 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ2()>();

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r9 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ1()>();

        $r4 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r4;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,boolean)>($r3, $r5, $r6, $r7, 0);

        return $r2;
    }
    public static org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.Rotation $r0;
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r1;
        org.apache.commons.math3.RealFieldElement $r2, $r3, $r4, $r6, $r7, $r8, $r9;
        double $d0;
        java.lang.Object $r5;

        $r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Rotation;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r3 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r4 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ1()>();

        $r5 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r5;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ2()>();

        $r5 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r5 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r5);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r5;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ3()>();

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r5 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r5);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r5;

        r1 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ0()>();

        $r5 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r5;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ2()>();

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r5;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ3()>();

        $r5 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r5 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r5);

        $r5 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r5);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r5;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ0()>();

        $r5 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r5;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ1()>();

        $r5 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r5 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r5);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r2);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r5;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ0()>();

        $r5 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r5;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ3()>();

        $r5 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r5;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ1()>();

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r5 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r5);

        $r5 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r5);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r5;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ0()>();

        $r5 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r5;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ2()>();

        $r5 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r5 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r5);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r3);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r5;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ0()>();

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r5;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ1()>();

        $r5 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r5;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ2()>();

        $r5 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r5 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r5);

        $r5 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r5);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r5;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ0()>();

        $r5 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r5;

        $d0 = virtualinvoke $r0.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ3()>();

        $r5 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r5 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r5);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r5 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r5;

        specialinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r8, $r4);

        return r1;
    }
    private org.apache.commons.math3.RealFieldElement[] buildArray(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        org.apache.commons.math3.RealFieldElement r1, r2, r3;
        org.apache.commons.math3.Field $r4;
        java.lang.Object[] $r5;
        org.apache.commons.math3.RealFieldElement[] r6;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.RealFieldElement;

        r3 := @parameter2: org.apache.commons.math3.RealFieldElement;

        $r4 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $r5 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[] buildArray(org.apache.commons.math3.Field,int)>($r4, 3);

        r6 = (org.apache.commons.math3.RealFieldElement[]) $r5;

        r6[0] = r1;

        r6[1] = r2;

        r6[2] = r3;

        return r6;
    }
    private org.apache.commons.math3.geometry.euclidean.threed.FieldRotation composeInternal(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0, r1, $r2;
        org.apache.commons.math3.RealFieldElement $r3, $r4, $r5, $r7, $r8, $r9, $r10;
        java.lang.Object $r6;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r4 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r6 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r5);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r5 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r7);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r7 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r7 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        $r6 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r5 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r7);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r7 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r7 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r8 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r6 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r3);

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r7 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r8 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r6 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r3);

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r8 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r6 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r3);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r3 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r6 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r9);

        $r6 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r8 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r6 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r3);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r3 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r6 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r9);

        $r6 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r3 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r6 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r9);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r10 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r6 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r3);

        $r6 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r6 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r6;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,boolean)>($r4, $r5, $r7, $r8, 0);

        return $r2;
    }
    private org.apache.commons.math3.geometry.euclidean.threed.FieldRotation composeInternal(org.apache.commons.math3.geometry.euclidean.threed.Rotation)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0, $r2;
        org.apache.commons.math3.geometry.euclidean.threed.Rotation $r1;
        org.apache.commons.math3.RealFieldElement $r3, $r5, $r6, $r7, $r8, $r9;
        double $d0;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Rotation;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ0()>();

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ1()>();

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ2()>();

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ3()>();

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ1()>();

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ0()>();

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ2()>();

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ3()>();

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ2()>();

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ0()>();

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ3()>();

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ1()>();

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ3()>();

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ0()>();

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ1()>();

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ2()>();

        $r4 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r4;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,boolean)>($r3, $r5, $r6, $r7, 0);

        return $r2;
    }
    private org.apache.commons.math3.geometry.euclidean.threed.FieldRotation composeInverseInternal(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0, r1, $r2;
        org.apache.commons.math3.RealFieldElement $r3, $r4, $r5, $r7, $r8, $r9, $r10;
        java.lang.Object $r6;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r4 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r6 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r5);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r5 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r7);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r7 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r7 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        $r6 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r4 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r5 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r7);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r7 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r8 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r6 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r3);

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r7 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r7 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r8 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r6 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r3);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r3 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r6 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r9);

        $r6 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r8 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r6 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r3);

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r8 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r6 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r3);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r3 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r6 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r9);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r10 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r6 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r3);

        $r6 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r6 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r3 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r6 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r9);

        $r6 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r6;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,boolean)>($r4, $r5, $r7, $r8, 0);

        return $r2;
    }
    private org.apache.commons.math3.geometry.euclidean.threed.FieldRotation composeInverseInternal(org.apache.commons.math3.geometry.euclidean.threed.Rotation)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0, $r2;
        org.apache.commons.math3.geometry.euclidean.threed.Rotation $r1;
        org.apache.commons.math3.RealFieldElement $r3, $r5, $r6, $r7, $r8, $r9;
        double $d0;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Rotation;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ0()>();

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ1()>();

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ2()>();

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ3()>();

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ0()>();

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ2()>();

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ3()>();

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ1()>();

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ0()>();

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ3()>();

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ1()>();

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ2()>();

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ0()>();

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ1()>();

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ2()>();

        $r4 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: double getQ3()>();

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r4;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,boolean)>($r3, $r5, $r6, $r7, 0);

        return $r2;
    }
    public static org.apache.commons.math3.RealFieldElement distance(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation, org.apache.commons.math3.geometry.euclidean.threed.FieldRotation)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0, r1;
        org.apache.commons.math3.RealFieldElement $r2;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        r0 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation composeInverseInternal(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation)>(r1);

        $r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement getAngle()>();

        return $r2;
    }
    private org.apache.commons.math3.RealFieldElement[] mat2quat(org.apache.commons.math3.RealFieldElement[][])
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        org.apache.commons.math3.RealFieldElement[][] r1;
        org.apache.commons.math3.RealFieldElement[] $r2, $r6;
        org.apache.commons.math3.RealFieldElement $r3, $r7, $r9;
        org.apache.commons.math3.Field $r4;
        java.lang.Object[] $r5;
        java.lang.Object $r8;
        double $d0;
        byte $b0;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement[][];

        $r2 = r1[0];

        $r3 = $r2[0];

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $r5 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[] buildArray(org.apache.commons.math3.Field,int)>($r4, 4);

        $r2 = (org.apache.commons.math3.RealFieldElement[]) $r5;

        $r6 = r1[0];

        $r3 = $r6[0];

        $r6 = r1[1];

        $r7 = $r6[1];

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r7);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r6 = r1[2];

        $r7 = $r6[2];

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r7);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $d0 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl -0.19;

        if $b0 <= 0 goto label1;

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>(1.0);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object sqrt()>();

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(0.5);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r2[0] = $r3;

        $r3 = $r2[0];

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object reciprocal()>();

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(0.25);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r6 = r1[1];

        $r7 = $r6[2];

        $r6 = r1[2];

        $r9 = $r6[1];

        $r8 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r9);

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r2[1] = $r7;

        $r6 = r1[2];

        $r7 = $r6[0];

        $r6 = r1[0];

        $r9 = $r6[2];

        $r8 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r9);

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r2[2] = $r7;

        $r6 = r1[0];

        $r7 = $r6[1];

        $r6 = r1[1];

        $r9 = $r6[0];

        $r8 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r9);

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r2[3] = $r3;

        return $r2;

     label1:
        $r6 = r1[0];

        $r3 = $r6[0];

        $r6 = r1[1];

        $r7 = $r6[1];

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r7);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r6 = r1[2];

        $r7 = $r6[2];

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r7);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $d0 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl -0.19;

        if $b0 <= 0 goto label2;

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>(1.0);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object sqrt()>();

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(0.5);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r2[1] = $r3;

        $r3 = $r2[1];

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object reciprocal()>();

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(0.25);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r6 = r1[1];

        $r7 = $r6[2];

        $r6 = r1[2];

        $r9 = $r6[1];

        $r8 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r9);

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r2[0] = $r7;

        $r6 = r1[0];

        $r7 = $r6[1];

        $r6 = r1[1];

        $r9 = $r6[0];

        $r8 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r9);

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r2[2] = $r7;

        $r6 = r1[0];

        $r7 = $r6[2];

        $r6 = r1[2];

        $r9 = $r6[0];

        $r8 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r9);

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r2[3] = $r3;

        return $r2;

     label2:
        $r6 = r1[1];

        $r3 = $r6[1];

        $r6 = r1[0];

        $r7 = $r6[0];

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r7);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r6 = r1[2];

        $r7 = $r6[2];

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r7);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $d0 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl -0.19;

        if $b0 <= 0 goto label3;

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>(1.0);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object sqrt()>();

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(0.5);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r2[2] = $r3;

        $r3 = $r2[2];

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object reciprocal()>();

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(0.25);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r6 = r1[2];

        $r7 = $r6[0];

        $r6 = r1[0];

        $r9 = $r6[2];

        $r8 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r9);

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r2[0] = $r7;

        $r6 = r1[0];

        $r7 = $r6[1];

        $r6 = r1[1];

        $r9 = $r6[0];

        $r8 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r9);

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r2[1] = $r7;

        $r6 = r1[2];

        $r7 = $r6[1];

        $r6 = r1[1];

        $r9 = $r6[2];

        $r8 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r9);

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r2[3] = $r3;

        return $r2;

     label3:
        $r6 = r1[2];

        $r3 = $r6[2];

        $r6 = r1[0];

        $r7 = $r6[0];

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r7);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r6 = r1[1];

        $r7 = $r6[1];

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r7);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>(1.0);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object sqrt()>();

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(0.5);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r2[3] = $r3;

        $r3 = $r2[3];

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object reciprocal()>();

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(0.25);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r6 = r1[0];

        $r7 = $r6[1];

        $r6 = r1[1];

        $r9 = $r6[0];

        $r8 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r9);

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r2[0] = $r7;

        $r6 = r1[0];

        $r7 = $r6[2];

        $r6 = r1[2];

        $r9 = $r6[0];

        $r8 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r9);

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r2[1] = $r7;

        $r6 = r1[2];

        $r7 = $r6[1];

        $r6 = r1[1];

        $r9 = $r6[2];

        $r8 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r9);

        $r8 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r2[2] = $r3;

        return $r2;
    }
    private org.apache.commons.math3.RealFieldElement[][] orthogonalizeMatrix(org.apache.commons.math3.RealFieldElement[][], double) throws org.apache.commons.math3.geometry.euclidean.threed.NotARotationMatrixException
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        org.apache.commons.math3.RealFieldElement[][] r1, r15;
        double $d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, $d11;
        org.apache.commons.math3.RealFieldElement[] $r2, $r26;
        org.apache.commons.math3.RealFieldElement r3, r4, r5, r6, r7, r8, r9, r10, r11, $r12, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r27;
        org.apache.commons.math3.Field $r13;
        java.lang.Object[][] $r14;
        int i0;
        java.lang.Object $r16;
        byte $b1;
        org.apache.commons.math3.geometry.euclidean.threed.NotARotationMatrixException $r28;
        org.apache.commons.math3.exception.util.LocalizedFormats $r29;
        java.lang.Object[] $r30;
        java.lang.Integer $r31;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement[][];

        $d0 := @parameter1: double;

        $r2 = r1[0];

        r3 = $r2[0];

        $r2 = r1[0];

        r4 = $r2[1];

        $r2 = r1[0];

        r5 = $r2[2];

        $r2 = r1[1];

        r6 = $r2[0];

        $r2 = r1[1];

        r7 = $r2[1];

        $r2 = r1[1];

        r8 = $r2[2];

        $r2 = r1[2];

        r9 = $r2[0];

        $r2 = r1[2];

        r10 = $r2[1];

        $r2 = r1[2];

        r11 = $r2[2];

        d10 = 0.0;

        $r2 = r1[0];

        $r12 = $r2[0];

        $r13 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $r14 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[][] buildArray(org.apache.commons.math3.Field,int,int)>($r13, 3, 3);

        r15 = (org.apache.commons.math3.RealFieldElement[][]) $r14;

        i0 = 0;

     label1:
        i0 = i0 + 1;

        if i0 >= 11 goto label3;

        $r2 = r1[0];

        $r12 = $r2[0];

        $r16 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r3);

        $r12 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2 = r1[1];

        $r17 = $r2[0];

        $r16 = interfaceinvoke $r17.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r6);

        $r16 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        $r12 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2 = r1[2];

        $r17 = $r2[0];

        $r16 = interfaceinvoke $r17.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r9);

        $r16 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        $r12 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2 = r1[0];

        $r17 = $r2[1];

        $r16 = interfaceinvoke $r17.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r3);

        $r17 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2 = r1[1];

        $r18 = $r2[1];

        $r16 = interfaceinvoke $r18.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r6);

        $r16 = interfaceinvoke $r17.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        $r17 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2 = r1[2];

        $r18 = $r2[1];

        $r16 = interfaceinvoke $r18.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r9);

        $r16 = interfaceinvoke $r17.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        $r17 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2 = r1[0];

        $r18 = $r2[2];

        $r16 = interfaceinvoke $r18.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r3);

        $r18 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2 = r1[1];

        $r19 = $r2[2];

        $r16 = interfaceinvoke $r19.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r6);

        $r16 = interfaceinvoke $r18.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        $r18 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2 = r1[2];

        $r19 = $r2[2];

        $r16 = interfaceinvoke $r19.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r9);

        $r16 = interfaceinvoke $r18.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        $r18 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2 = r1[0];

        $r19 = $r2[0];

        $r16 = interfaceinvoke $r19.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r4);

        $r19 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2 = r1[1];

        $r20 = $r2[0];

        $r16 = interfaceinvoke $r20.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r7);

        $r16 = interfaceinvoke $r19.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        $r19 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2 = r1[2];

        $r20 = $r2[0];

        $r16 = interfaceinvoke $r20.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r10);

        $r16 = interfaceinvoke $r19.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        $r19 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2 = r1[0];

        $r20 = $r2[1];

        $r16 = interfaceinvoke $r20.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r4);

        $r20 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2 = r1[1];

        $r21 = $r2[1];

        $r16 = interfaceinvoke $r21.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r7);

        $r16 = interfaceinvoke $r20.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        $r20 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2 = r1[2];

        $r21 = $r2[1];

        $r16 = interfaceinvoke $r21.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r10);

        $r16 = interfaceinvoke $r20.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        $r20 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2 = r1[0];

        $r21 = $r2[2];

        $r16 = interfaceinvoke $r21.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r4);

        $r21 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2 = r1[1];

        $r22 = $r2[2];

        $r16 = interfaceinvoke $r22.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r7);

        $r16 = interfaceinvoke $r21.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        $r21 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2 = r1[2];

        $r22 = $r2[2];

        $r16 = interfaceinvoke $r22.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r10);

        $r16 = interfaceinvoke $r21.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        $r21 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2 = r1[0];

        $r22 = $r2[0];

        $r16 = interfaceinvoke $r22.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r5);

        $r22 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2 = r1[1];

        $r23 = $r2[0];

        $r16 = interfaceinvoke $r23.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r8);

        $r16 = interfaceinvoke $r22.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        $r22 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2 = r1[2];

        $r23 = $r2[0];

        $r16 = interfaceinvoke $r23.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r11);

        $r16 = interfaceinvoke $r22.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        $r22 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2 = r1[0];

        $r23 = $r2[1];

        $r16 = interfaceinvoke $r23.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r5);

        $r23 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2 = r1[1];

        $r24 = $r2[1];

        $r16 = interfaceinvoke $r24.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r8);

        $r16 = interfaceinvoke $r23.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        $r23 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2 = r1[2];

        $r24 = $r2[1];

        $r16 = interfaceinvoke $r24.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r11);

        $r16 = interfaceinvoke $r23.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        $r23 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2 = r1[0];

        $r24 = $r2[2];

        $r16 = interfaceinvoke $r24.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r5);

        $r24 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2 = r1[1];

        $r25 = $r2[2];

        $r16 = interfaceinvoke $r25.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r8);

        $r16 = interfaceinvoke $r24.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        $r24 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2 = r1[2];

        $r25 = $r2[2];

        $r16 = interfaceinvoke $r25.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r11);

        $r16 = interfaceinvoke $r24.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        $r24 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2 = r15[0];

        $r16 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r12);

        $r25 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r16 = interfaceinvoke r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r17);

        $r16 = interfaceinvoke $r25.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        $r25 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r16 = interfaceinvoke r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r18);

        $r16 = interfaceinvoke $r25.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        $r25 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r26 = r1[0];

        $r27 = $r26[0];

        $r16 = interfaceinvoke $r25.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r27);

        $r25 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r16 = interfaceinvoke $r25.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(0.5);

        $r16 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r16);

        $r25 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2[0] = $r25;

        $r2 = r15[0];

        $r16 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r19);

        $r25 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r16 = interfaceinvoke r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r20);

        $r16 = interfaceinvoke $r25.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        $r25 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r16 = interfaceinvoke r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r21);

        $r16 = interfaceinvoke $r25.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        $r25 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r26 = r1[0];

        $r27 = $r26[1];

        $r16 = interfaceinvoke $r25.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r27);

        $r25 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r16 = interfaceinvoke $r25.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(0.5);

        $r16 = interfaceinvoke r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r16);

        $r25 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2[1] = $r25;

        $r2 = r15[0];

        $r16 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r22);

        r3 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r16 = interfaceinvoke r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r23);

        $r16 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        r4 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r16 = interfaceinvoke r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r24);

        $r16 = interfaceinvoke r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        r4 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r26 = r1[0];

        r3 = $r26[2];

        $r16 = interfaceinvoke r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>(r3);

        r4 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r16 = interfaceinvoke r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(0.5);

        $r16 = interfaceinvoke r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r16);

        r5 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2[2] = r5;

        $r2 = r15[1];

        $r16 = interfaceinvoke r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r12);

        r5 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r16 = interfaceinvoke r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r17);

        $r16 = interfaceinvoke r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        r5 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r16 = interfaceinvoke r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r18);

        $r16 = interfaceinvoke r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        r5 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r26 = r1[1];

        r4 = $r26[0];

        $r16 = interfaceinvoke r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>(r4);

        r5 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r16 = interfaceinvoke r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(0.5);

        $r16 = interfaceinvoke r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r16);

        r5 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2[0] = r5;

        $r2 = r15[1];

        $r16 = interfaceinvoke r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r19);

        r5 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r16 = interfaceinvoke r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r20);

        $r16 = interfaceinvoke r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        r5 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r16 = interfaceinvoke r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r21);

        $r16 = interfaceinvoke r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        r5 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r26 = r1[1];

        r4 = $r26[1];

        $r16 = interfaceinvoke r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>(r4);

        r5 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r16 = interfaceinvoke r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(0.5);

        $r16 = interfaceinvoke r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r16);

        r5 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2[1] = r5;

        $r2 = r15[1];

        $r16 = interfaceinvoke r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r22);

        r6 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r16 = interfaceinvoke r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r23);

        $r16 = interfaceinvoke r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        r7 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r16 = interfaceinvoke r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r24);

        $r16 = interfaceinvoke r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        r7 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r26 = r1[1];

        r6 = $r26[2];

        $r16 = interfaceinvoke r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>(r6);

        r7 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r16 = interfaceinvoke r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(0.5);

        $r16 = interfaceinvoke r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r16);

        r8 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2[2] = r8;

        $r2 = r15[2];

        $r16 = interfaceinvoke r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r12);

        r8 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r16 = interfaceinvoke r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r17);

        $r16 = interfaceinvoke r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        r8 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r16 = interfaceinvoke r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r18);

        $r16 = interfaceinvoke r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        r8 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r26 = r1[2];

        r7 = $r26[0];

        $r16 = interfaceinvoke r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>(r7);

        r8 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r16 = interfaceinvoke r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(0.5);

        $r16 = interfaceinvoke r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r16);

        r8 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2[0] = r8;

        $r2 = r15[2];

        $r16 = interfaceinvoke r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r19);

        r8 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r16 = interfaceinvoke r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r20);

        $r16 = interfaceinvoke r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        r8 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r16 = interfaceinvoke r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r21);

        $r16 = interfaceinvoke r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        r8 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r26 = r1[2];

        r7 = $r26[1];

        $r16 = interfaceinvoke r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>(r7);

        r8 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r16 = interfaceinvoke r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(0.5);

        $r16 = interfaceinvoke r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r16);

        r8 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2[1] = r8;

        $r2 = r15[2];

        $r16 = interfaceinvoke r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r22);

        r9 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r16 = interfaceinvoke r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r23);

        $r16 = interfaceinvoke r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        r10 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r16 = interfaceinvoke r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r24);

        $r16 = interfaceinvoke r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        r10 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r26 = r1[2];

        r9 = $r26[2];

        $r16 = interfaceinvoke r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>(r9);

        r10 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r16 = interfaceinvoke r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(0.5);

        $r16 = interfaceinvoke r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r16);

        r11 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r2[2] = r11;

        $r2 = r15[0];

        r11 = $r2[0];

        d1 = interfaceinvoke r11.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $r2 = r1[0];

        r11 = $r2[0];

        d2 = interfaceinvoke r11.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        d1 = d1 - d2;

        $r2 = r15[0];

        r11 = $r2[1];

        d2 = interfaceinvoke r11.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $r2 = r1[0];

        r11 = $r2[1];

        d3 = interfaceinvoke r11.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        d2 = d2 - d3;

        $r2 = r15[0];

        r11 = $r2[2];

        d3 = interfaceinvoke r11.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $r2 = r1[0];

        r11 = $r2[2];

        d4 = interfaceinvoke r11.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        d3 = d3 - d4;

        $r2 = r15[1];

        r11 = $r2[0];

        d4 = interfaceinvoke r11.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $r2 = r1[1];

        r11 = $r2[0];

        d5 = interfaceinvoke r11.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        d4 = d4 - d5;

        $r2 = r15[1];

        r11 = $r2[1];

        d5 = interfaceinvoke r11.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $r2 = r1[1];

        r11 = $r2[1];

        d6 = interfaceinvoke r11.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        d5 = d5 - d6;

        $r2 = r15[1];

        r11 = $r2[2];

        d6 = interfaceinvoke r11.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $r2 = r1[1];

        r11 = $r2[2];

        d7 = interfaceinvoke r11.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        d6 = d6 - d7;

        $r2 = r15[2];

        r11 = $r2[0];

        d7 = interfaceinvoke r11.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $r2 = r1[2];

        r11 = $r2[0];

        d8 = interfaceinvoke r11.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        d7 = d7 - d8;

        $r2 = r15[2];

        r11 = $r2[1];

        d8 = interfaceinvoke r11.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $r2 = r1[2];

        r11 = $r2[1];

        d9 = interfaceinvoke r11.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        d8 = d8 - d9;

        $r2 = r15[2];

        r11 = $r2[2];

        d9 = interfaceinvoke r11.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $r2 = r1[2];

        r11 = $r2[2];

        $d11 = interfaceinvoke r11.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        d9 = d9 - $d11;

        d1 = d1 * d1;

        d2 = d2 * d2;

        d1 = d1 + d2;

        d2 = d3 * d3;

        d1 = d1 + d2;

        d2 = d4 * d4;

        d1 = d1 + d2;

        d2 = d5 * d5;

        d1 = d1 + d2;

        d2 = d6 * d6;

        d1 = d1 + d2;

        d2 = d7 * d7;

        d1 = d1 + d2;

        d2 = d8 * d8;

        d1 = d1 + d2;

        d2 = d9 * d9;

        d1 = d1 + d2;

        d10 = d1 - d10;

        d10 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d10);

        $b1 = d10 cmpg $d0;

        if $b1 > 0 goto label2;

        return r15;

     label2:
        $r2 = r15[0];

        r3 = $r2[0];

        $r2 = r15[0];

        r4 = $r2[1];

        $r2 = r15[0];

        r5 = $r2[2];

        $r2 = r15[1];

        r6 = $r2[0];

        $r2 = r15[1];

        r7 = $r2[1];

        $r2 = r15[1];

        r8 = $r2[2];

        $r2 = r15[2];

        r9 = $r2[0];

        $r2 = r15[2];

        r10 = $r2[1];

        $r2 = r15[2];

        r11 = $r2[2];

        d10 = d1;

        goto label1;

     label3:
        $r28 = new org.apache.commons.math3.geometry.euclidean.threed.NotARotationMatrixException;

        $r29 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats UNABLE_TO_ORTHOGONOLIZE_MATRIX>;

        $r30 = newarray (java.lang.Object)[1];

        i0 = i0 + -1;

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r30[0] = $r31;

        specialinvoke $r28.<org.apache.commons.math3.geometry.euclidean.threed.NotARotationMatrixException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r29, $r30);

        throw $r28;
    }
    private org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D vector(double, double, double)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        double $d0, $d1, $d2;
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D $r1;
        org.apache.commons.math3.RealFieldElement $r2, r5, $r6;
        org.apache.commons.math3.Field $r3;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $d2 := @parameter2: double;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r1 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r4 = interfaceinvoke r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>($d0);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>($d1);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>($d2);

        r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        specialinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r2, $r6, r5);

        return $r1;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldRotation applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0, r1;
        org.apache.commons.math3.geometry.euclidean.threed.RotationConvention $r2;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r2 = <org.apache.commons.math3.geometry.euclidean.threed.RotationConvention: org.apache.commons.math3.geometry.euclidean.threed.RotationConvention VECTOR_OPERATOR>;

        r0 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation composeInverse(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,org.apache.commons.math3.geometry.euclidean.threed.RotationConvention)>(r1, $r2);

        return r0;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldRotation applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        org.apache.commons.math3.geometry.euclidean.threed.Rotation $r1;
        org.apache.commons.math3.geometry.euclidean.threed.RotationConvention $r2;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Rotation;

        $r2 = <org.apache.commons.math3.geometry.euclidean.threed.RotationConvention: org.apache.commons.math3.geometry.euclidean.threed.RotationConvention VECTOR_OPERATOR>;

        r0 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation composeInverse(org.apache.commons.math3.geometry.euclidean.threed.Rotation,org.apache.commons.math3.geometry.euclidean.threed.RotationConvention)>($r1, $r2);

        return r0;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r1;
        org.apache.commons.math3.RealFieldElement $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11;
        java.lang.Object $r6;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r3 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r4 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r2);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r3);

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        r1 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r6 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r7);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r6 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r10 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r6 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r3);

        $r6 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r6 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r6);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r9);

        $r6 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r2);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r7);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r10 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r6 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r2);

        $r10 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r11 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r6 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r6 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r6 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r6);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r10 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r10);

        $r6 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r3);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r7);

        $r10 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r11 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r6 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r3);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r11 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r6 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r2);

        $r6 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r6 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r6);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r3);

        $r6 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r6;

        specialinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r8, $r9, $r4);

        return r1;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r1;
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D $r2;
        double $d0, $d1, $d2;
        org.apache.commons.math3.RealFieldElement $r3, $r5, $r6, $r7, $r8, $r9, $r10;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $d1 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $d2 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d1);

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d2);

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d2);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d1);

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r7);

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d0);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d1);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r4 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d2);

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d1);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d2);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r4 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d1);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r10 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r4 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d2);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r6, $r7, $r3);

        return $r2;
    }
    public void applyInverseTo(double[], org.apache.commons.math3.RealFieldElement[])
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        double[] $r1;
        org.apache.commons.math3.RealFieldElement[] r2;
        double d0, d1, d2;
        org.apache.commons.math3.RealFieldElement $r3, $r5, $r6, $r7, $r8;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r1 := @parameter0: double[];

        r2 := @parameter1: org.apache.commons.math3.RealFieldElement[];

        d0 = $r1[0];

        d1 = $r1[1];

        d2 = $r1[2];

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d0);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d1);

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d2);

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d0);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d2);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d1);

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r7);

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>(d0);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        r2[0] = $r6;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d1);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d0);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d2);

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r7);

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>(d1);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        r2[1] = $r6;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d2);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d1);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d0);

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r6);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>(d2);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        r2[2] = $r3;

        return;
    }
    public void applyInverseTo(org.apache.commons.math3.RealFieldElement[], org.apache.commons.math3.RealFieldElement[])
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        org.apache.commons.math3.RealFieldElement[] r1, r2;
        org.apache.commons.math3.RealFieldElement r3, r4, r5, $r6, $r8, $r9, $r10, $r11;
        java.lang.Object $r7;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement[];

        r2 := @parameter1: org.apache.commons.math3.RealFieldElement[];

        r3 = r1[0];

        r4 = r1[1];

        r5 = r1[2];

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r7 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r3);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r7 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r4);

        $r7 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r7);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r7 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r5);

        $r7 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r7);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r7 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r8 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r7 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r10 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r7 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r5);

        $r10 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r11 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r7 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r4);

        $r7 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r7);

        $r7 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r7);

        $r7 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r7);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r10 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r7 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r10);

        $r7 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r7);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r7 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r7 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>(r3);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r7;

        r2[0] = $r9;

        $r7 = interfaceinvoke r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r10 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r7 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r3);

        $r10 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r11 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r7 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r5);

        $r7 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r7);

        $r7 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r7);

        $r7 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r7);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r10 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r7 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r10);

        $r7 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r7);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r7 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r7 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>(r4);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r7;

        r2[1] = $r9;

        $r7 = interfaceinvoke r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r10 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r7 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r4);

        r4 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r10 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r7 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r3);

        $r7 = interfaceinvoke r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r7);

        $r7 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r7);

        $r7 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r7);

        r3 = (org.apache.commons.math3.RealFieldElement) $r7;

        r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r7 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r4);

        $r7 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r7);

        r3 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r7 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        r3 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r7 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>(r5);

        r5 = (org.apache.commons.math3.RealFieldElement) $r7;

        r2[2] = r5;

        return;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldRotation applyTo(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0, r1;
        org.apache.commons.math3.geometry.euclidean.threed.RotationConvention $r2;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r2 = <org.apache.commons.math3.geometry.euclidean.threed.RotationConvention: org.apache.commons.math3.geometry.euclidean.threed.RotationConvention VECTOR_OPERATOR>;

        r0 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation compose(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,org.apache.commons.math3.geometry.euclidean.threed.RotationConvention)>(r1, $r2);

        return r0;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldRotation applyTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        org.apache.commons.math3.geometry.euclidean.threed.Rotation $r1;
        org.apache.commons.math3.geometry.euclidean.threed.RotationConvention $r2;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Rotation;

        $r2 = <org.apache.commons.math3.geometry.euclidean.threed.RotationConvention: org.apache.commons.math3.geometry.euclidean.threed.RotationConvention VECTOR_OPERATOR>;

        r0 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation compose(org.apache.commons.math3.geometry.euclidean.threed.Rotation,org.apache.commons.math3.geometry.euclidean.threed.RotationConvention)>($r1, $r2);

        return r0;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r1;
        org.apache.commons.math3.RealFieldElement $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11;
        java.lang.Object $r6;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r3 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r4 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r2);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r3);

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r6;

        r1 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r6 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r6 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r10 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r6 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r3);

        $r6 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r6 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r6);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r2);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r6 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r9);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r10 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r6 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r2);

        $r10 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r11 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r6 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r6 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r6 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r6 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r6);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r9);

        $r6 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r3);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r10 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r6 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r10);

        $r10 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r11 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r6 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r3);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r11 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r6 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r2);

        $r6 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r6 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r6 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r6);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r3);

        $r6 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r6 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r6;

        specialinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r8, $r4);

        return r1;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r1;
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D $r2;
        double $d0, $d1, $d2;
        org.apache.commons.math3.RealFieldElement $r3, $r5, $r6, $r7, $r8, $r9, $r10;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $d1 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $d2 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d1);

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d2);

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d2);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d1);

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r6);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d0);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d1);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r4 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d2);

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r7);

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d1);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d2);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r4 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d1);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r10 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r4 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r8);

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d2);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r5, $r6, $r3);

        return $r2;
    }
    public void applyTo(double[], org.apache.commons.math3.RealFieldElement[])
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        double[] $r1;
        org.apache.commons.math3.RealFieldElement[] r2;
        double d0, d1, d2;
        org.apache.commons.math3.RealFieldElement $r3, $r5, $r6, $r7, $r8;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r1 := @parameter0: double[];

        r2 := @parameter1: org.apache.commons.math3.RealFieldElement[];

        d0 = $r1[0];

        d1 = $r1[1];

        d2 = $r1[2];

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d0);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d1);

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d2);

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d0);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d2);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d1);

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r6);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>(d0);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        r2[0] = $r5;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d1);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d0);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d2);

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r6);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>(d1);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        r2[1] = $r5;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d2);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d1);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r4 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d0);

        $r4 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r6);

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>(d2);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        r2[2] = $r3;

        return;
    }
    public void applyTo(org.apache.commons.math3.RealFieldElement[], org.apache.commons.math3.RealFieldElement[])
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        org.apache.commons.math3.RealFieldElement[] r1, r2;
        org.apache.commons.math3.RealFieldElement r3, r4, r5, $r6, $r8, $r9, $r10, $r11;
        java.lang.Object $r7;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement[];

        r2 := @parameter1: org.apache.commons.math3.RealFieldElement[];

        r3 = r1[0];

        r4 = r1[1];

        r5 = r1[2];

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r7 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r3);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r7 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r4);

        $r7 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r7);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r7 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r5);

        $r7 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r7);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r7 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r9);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r10 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r7 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r5);

        $r10 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r11 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r7 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r4);

        $r7 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r7);

        $r7 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r7);

        $r7 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r7);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r7 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r9);

        $r7 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r7);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r7 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r7 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>(r3);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r7;

        r2[0] = $r8;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r7 = interfaceinvoke r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r9);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r10 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r7 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r3);

        $r10 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r11 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r7 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r5);

        $r7 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r7);

        $r7 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r7);

        $r7 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r7);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r7 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r9);

        $r7 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r7);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r7 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r7 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>(r4);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r7;

        r2[1] = $r8;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r7 = interfaceinvoke r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r9);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r10 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r7 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r4);

        r4 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r10 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r7 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r3);

        $r7 = interfaceinvoke r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r7);

        $r7 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r7);

        $r7 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r7);

        r3 = (org.apache.commons.math3.RealFieldElement) $r7;

        r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r7 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r4);

        $r7 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r7);

        r3 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r7 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        r3 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r7 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>(r5);

        r5 = (org.apache.commons.math3.RealFieldElement) $r7;

        r2[2] = r5;

        return;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldRotation compose(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation, org.apache.commons.math3.geometry.euclidean.threed.RotationConvention)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0, r1;
        org.apache.commons.math3.geometry.euclidean.threed.RotationConvention $r2, $r3;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.RotationConvention;

        $r3 = <org.apache.commons.math3.geometry.euclidean.threed.RotationConvention: org.apache.commons.math3.geometry.euclidean.threed.RotationConvention VECTOR_OPERATOR>;

        if $r2 != $r3 goto label1;

        r0 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation composeInternal(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation)>(r1);

        return r0;

     label1:
        r0 = specialinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation composeInternal(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation)>(r0);

        return r0;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldRotation compose(org.apache.commons.math3.geometry.euclidean.threed.Rotation, org.apache.commons.math3.geometry.euclidean.threed.RotationConvention)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        org.apache.commons.math3.geometry.euclidean.threed.Rotation $r1;
        org.apache.commons.math3.geometry.euclidean.threed.RotationConvention $r2, $r3;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Rotation;

        $r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.RotationConvention;

        $r3 = <org.apache.commons.math3.geometry.euclidean.threed.RotationConvention: org.apache.commons.math3.geometry.euclidean.threed.RotationConvention VECTOR_OPERATOR>;

        if $r2 != $r3 goto label1;

        r0 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation composeInternal(org.apache.commons.math3.geometry.euclidean.threed.Rotation)>($r1);

        return r0;

     label1:
        r0 = staticinvoke <org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation applyTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation)>($r1, r0);

        return r0;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldRotation composeInverse(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation, org.apache.commons.math3.geometry.euclidean.threed.RotationConvention)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0, r1;
        org.apache.commons.math3.geometry.euclidean.threed.RotationConvention $r2, $r3;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.RotationConvention;

        $r3 = <org.apache.commons.math3.geometry.euclidean.threed.RotationConvention: org.apache.commons.math3.geometry.euclidean.threed.RotationConvention VECTOR_OPERATOR>;

        if $r2 != $r3 goto label1;

        r0 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation composeInverseInternal(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation)>(r1);

        return r0;

     label1:
        r0 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation revert()>();

        r0 = specialinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation composeInternal(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation)>(r0);

        return r0;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldRotation composeInverse(org.apache.commons.math3.geometry.euclidean.threed.Rotation, org.apache.commons.math3.geometry.euclidean.threed.RotationConvention)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        org.apache.commons.math3.geometry.euclidean.threed.Rotation $r1;
        org.apache.commons.math3.geometry.euclidean.threed.RotationConvention $r2, $r3;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Rotation;

        $r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.RotationConvention;

        $r3 = <org.apache.commons.math3.geometry.euclidean.threed.RotationConvention: org.apache.commons.math3.geometry.euclidean.threed.RotationConvention VECTOR_OPERATOR>;

        if $r2 != $r3 goto label1;

        r0 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation composeInverseInternal(org.apache.commons.math3.geometry.euclidean.threed.Rotation)>($r1);

        return r0;

     label1:
        r0 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation revert()>();

        r0 = staticinvoke <org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation applyTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation)>($r1, r0);

        return r0;
    }
    public org.apache.commons.math3.RealFieldElement getAngle()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        org.apache.commons.math3.RealFieldElement $r1, $r2, $r4;
        double $d0;
        byte $b0;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $d0 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg -0.1;

        if $b0 < 0 goto label1;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $d0 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.1;

        if $b0 <= 0 goto label2;

     label1:
        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r3 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r2);

        $r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r3 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r3);

        $r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r3 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r3);

        $r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object sqrt()>();

        $r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object asin()>();

        $r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        return $r1;

     label2:
        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $d0 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg 0.0;

        if $b0 >= 0 goto label3;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r3 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object acos()>();

        $r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        return $r1;

     label3:
        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r3 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object acos()>();

        $r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        return $r1;
    }
    public org.apache.commons.math3.RealFieldElement[] getAngles(org.apache.commons.math3.geometry.euclidean.threed.RotationOrder) throws org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        org.apache.commons.math3.geometry.euclidean.threed.RotationOrder $r1;
        org.apache.commons.math3.RealFieldElement[] $r2;
        org.apache.commons.math3.geometry.euclidean.threed.RotationConvention $r3;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.RotationOrder;

        $r3 = <org.apache.commons.math3.geometry.euclidean.threed.RotationConvention: org.apache.commons.math3.geometry.euclidean.threed.RotationConvention VECTOR_OPERATOR>;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement[] getAngles(org.apache.commons.math3.geometry.euclidean.threed.RotationOrder,org.apache.commons.math3.geometry.euclidean.threed.RotationConvention)>($r1, $r3);

        return $r2;
    }
    public org.apache.commons.math3.RealFieldElement[] getAngles(org.apache.commons.math3.geometry.euclidean.threed.RotationOrder, org.apache.commons.math3.geometry.euclidean.threed.RotationConvention) throws org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        org.apache.commons.math3.geometry.euclidean.threed.RotationOrder $r1, $r4;
        org.apache.commons.math3.geometry.euclidean.threed.RotationConvention $r2, $r3;
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D $r5, $r6;
        org.apache.commons.math3.RealFieldElement $r7, $r10, $r11, $r12;
        double $d0;
        byte $b0;
        org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException $r8;
        java.lang.Object $r9;
        org.apache.commons.math3.RealFieldElement[] $r13;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r14;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.RotationOrder;

        $r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.RotationConvention;

        $r3 = <org.apache.commons.math3.geometry.euclidean.threed.RotationConvention: org.apache.commons.math3.geometry.euclidean.threed.RotationConvention VECTOR_OPERATOR>;

        if $r2 != $r3 goto label36;

        $r4 = <org.apache.commons.math3.geometry.euclidean.threed.RotationOrder: org.apache.commons.math3.geometry.euclidean.threed.RotationOrder XYZ>;

        if $r1 != $r4 goto label03;

        $r5 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D vector(double,double,double)>(0.0, 0.0, 1.0);

        $r5 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>($r5);

        $r6 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D vector(double,double,double)>(1.0, 0.0, 0.0);

        $r6 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>($r6);

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg -0.9999999999;

        if $b0 < 0 goto label01;

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.9999999999;

        if $b0 <= 0 goto label02;

     label01:
        $r8 = new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException;

        specialinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException: void <init>(boolean)>(1);

        throw $r8;

     label02:
        $r7 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r10 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r10);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object asin()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r11 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r11 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r12 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r12);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r13 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement[] buildArray(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r10, $r11);

        return $r13;

     label03:
        $r4 = <org.apache.commons.math3.geometry.euclidean.threed.RotationOrder: org.apache.commons.math3.geometry.euclidean.threed.RotationOrder XZY>;

        if $r1 != $r4 goto label06;

        $r5 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D vector(double,double,double)>(0.0, 1.0, 0.0);

        $r5 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>($r5);

        $r6 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D vector(double,double,double)>(1.0, 0.0, 0.0);

        $r6 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>($r6);

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg -0.9999999999;

        if $b0 < 0 goto label04;

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.9999999999;

        if $b0 <= 0 goto label05;

     label04:
        $r8 = new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException;

        specialinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException: void <init>(boolean)>(1);

        throw $r8;

     label05:
        $r7 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r10 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r10);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object asin()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r11 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r12 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r12);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r13 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement[] buildArray(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r10, $r11);

        return $r13;

     label06:
        $r4 = <org.apache.commons.math3.geometry.euclidean.threed.RotationOrder: org.apache.commons.math3.geometry.euclidean.threed.RotationOrder YXZ>;

        if $r1 != $r4 goto label09;

        $r5 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D vector(double,double,double)>(0.0, 0.0, 1.0);

        $r5 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>($r5);

        $r6 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D vector(double,double,double)>(0.0, 1.0, 0.0);

        $r6 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>($r6);

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg -0.9999999999;

        if $b0 < 0 goto label07;

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.9999999999;

        if $b0 <= 0 goto label08;

     label07:
        $r8 = new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException;

        specialinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException: void <init>(boolean)>(1);

        throw $r8;

     label08:
        $r7 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r10 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r10);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object asin()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r11 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r12 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r12);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r13 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement[] buildArray(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r10, $r11);

        return $r13;

     label09:
        $r4 = <org.apache.commons.math3.geometry.euclidean.threed.RotationOrder: org.apache.commons.math3.geometry.euclidean.threed.RotationOrder YZX>;

        if $r1 != $r4 goto label12;

        $r5 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D vector(double,double,double)>(1.0, 0.0, 0.0);

        $r5 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>($r5);

        $r6 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D vector(double,double,double)>(0.0, 1.0, 0.0);

        $r6 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>($r6);

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg -0.9999999999;

        if $b0 < 0 goto label10;

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.9999999999;

        if $b0 <= 0 goto label11;

     label10:
        $r8 = new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException;

        specialinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException: void <init>(boolean)>(1);

        throw $r8;

     label11:
        $r7 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r10 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r10);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object asin()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r11 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r11 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r12 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r12);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r13 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement[] buildArray(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r10, $r11);

        return $r13;

     label12:
        $r4 = <org.apache.commons.math3.geometry.euclidean.threed.RotationOrder: org.apache.commons.math3.geometry.euclidean.threed.RotationOrder ZXY>;

        if $r1 != $r4 goto label15;

        $r5 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D vector(double,double,double)>(0.0, 1.0, 0.0);

        $r5 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>($r5);

        $r6 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D vector(double,double,double)>(0.0, 0.0, 1.0);

        $r6 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>($r6);

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg -0.9999999999;

        if $b0 < 0 goto label13;

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.9999999999;

        if $b0 <= 0 goto label14;

     label13:
        $r8 = new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException;

        specialinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException: void <init>(boolean)>(1);

        throw $r8;

     label14:
        $r7 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r10 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r10);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object asin()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r11 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r11 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r12 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r12);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r13 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement[] buildArray(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r10, $r11);

        return $r13;

     label15:
        $r4 = <org.apache.commons.math3.geometry.euclidean.threed.RotationOrder: org.apache.commons.math3.geometry.euclidean.threed.RotationOrder ZYX>;

        if $r1 != $r4 goto label18;

        $r5 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D vector(double,double,double)>(1.0, 0.0, 0.0);

        $r5 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>($r5);

        $r6 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D vector(double,double,double)>(0.0, 0.0, 1.0);

        $r6 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>($r6);

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg -0.9999999999;

        if $b0 < 0 goto label16;

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.9999999999;

        if $b0 <= 0 goto label17;

     label16:
        $r8 = new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException;

        specialinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException: void <init>(boolean)>(1);

        throw $r8;

     label17:
        $r7 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r10 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r10);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object asin()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r11 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r12 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r12);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r13 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement[] buildArray(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r10, $r11);

        return $r13;

     label18:
        $r4 = <org.apache.commons.math3.geometry.euclidean.threed.RotationOrder: org.apache.commons.math3.geometry.euclidean.threed.RotationOrder XYX>;

        if $r1 != $r4 goto label21;

        $r5 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D vector(double,double,double)>(1.0, 0.0, 0.0);

        $r5 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>($r5);

        $r6 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D vector(double,double,double)>(1.0, 0.0, 0.0);

        $r6 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>($r6);

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg -0.9999999999;

        if $b0 < 0 goto label19;

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.9999999999;

        if $b0 <= 0 goto label20;

     label19:
        $r8 = new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException;

        specialinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException: void <init>(boolean)>(0);

        throw $r8;

     label20:
        $r7 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r10 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r9);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object acos()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r11 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r12 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r12);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r13 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement[] buildArray(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r10, $r11);

        return $r13;

     label21:
        $r4 = <org.apache.commons.math3.geometry.euclidean.threed.RotationOrder: org.apache.commons.math3.geometry.euclidean.threed.RotationOrder XZX>;

        if $r1 != $r4 goto label24;

        $r5 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D vector(double,double,double)>(1.0, 0.0, 0.0);

        $r5 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>($r5);

        $r6 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D vector(double,double,double)>(1.0, 0.0, 0.0);

        $r6 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>($r6);

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg -0.9999999999;

        if $b0 < 0 goto label22;

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.9999999999;

        if $b0 <= 0 goto label23;

     label22:
        $r8 = new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException;

        specialinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException: void <init>(boolean)>(0);

        throw $r8;

     label23:
        $r7 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r10 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r10);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object acos()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r11 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r12 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r9);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r13 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement[] buildArray(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r10, $r11);

        return $r13;

     label24:
        $r4 = <org.apache.commons.math3.geometry.euclidean.threed.RotationOrder: org.apache.commons.math3.geometry.euclidean.threed.RotationOrder YXY>;

        if $r1 != $r4 goto label27;

        $r5 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D vector(double,double,double)>(0.0, 1.0, 0.0);

        $r5 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>($r5);

        $r6 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D vector(double,double,double)>(0.0, 1.0, 0.0);

        $r6 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>($r6);

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg -0.9999999999;

        if $b0 < 0 goto label25;

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.9999999999;

        if $b0 <= 0 goto label26;

     label25:
        $r8 = new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException;

        specialinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException: void <init>(boolean)>(0);

        throw $r8;

     label26:
        $r7 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r10 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r10);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object acos()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r11 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r12 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r9 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r9);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r13 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement[] buildArray(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r10, $r11);

        return $r13;

     label27:
        $r4 = <org.apache.commons.math3.geometry.euclidean.threed.RotationOrder: org.apache.commons.math3.geometry.euclidean.threed.RotationOrder YZY>;

        if $r1 != $r4 goto label30;

        $r5 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D vector(double,double,double)>(0.0, 1.0, 0.0);

        $r5 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>($r5);

        $r6 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D vector(double,double,double)>(0.0, 1.0, 0.0);

        $r6 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>($r6);

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg -0.9999999999;

        if $b0 < 0 goto label28;

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.9999999999;

        if $b0 <= 0 goto label29;

     label28:
        $r8 = new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException;

        specialinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException: void <init>(boolean)>(0);

        throw $r8;

     label29:
        $r7 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r10 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r9);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object acos()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r11 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r12 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r12);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r13 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement[] buildArray(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r10, $r11);

        return $r13;

     label30:
        $r4 = <org.apache.commons.math3.geometry.euclidean.threed.RotationOrder: org.apache.commons.math3.geometry.euclidean.threed.RotationOrder ZXZ>;

        if $r1 != $r4 goto label33;

        $r5 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D vector(double,double,double)>(0.0, 0.0, 1.0);

        $r5 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>($r5);

        $r6 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D vector(double,double,double)>(0.0, 0.0, 1.0);

        $r6 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>($r6);

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg -0.9999999999;

        if $b0 < 0 goto label31;

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.9999999999;

        if $b0 <= 0 goto label32;

     label31:
        $r8 = new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException;

        specialinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException: void <init>(boolean)>(0);

        throw $r8;

     label32:
        $r7 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r10 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r9);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object acos()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r11 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r12 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r12);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r13 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement[] buildArray(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r10, $r11);

        return $r13;

     label33:
        $r5 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D vector(double,double,double)>(0.0, 0.0, 1.0);

        $r5 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>($r5);

        $r6 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D vector(double,double,double)>(0.0, 0.0, 1.0);

        $r6 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>($r6);

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg -0.9999999999;

        if $b0 < 0 goto label34;

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.9999999999;

        if $b0 <= 0 goto label35;

     label34:
        $r8 = new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException;

        specialinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException: void <init>(boolean)>(0);

        throw $r8;

     label35:
        $r7 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r10 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r10);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object acos()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r11 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r12 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r9);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r13 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement[] buildArray(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r10, $r11);

        return $r13;

     label36:
        $r4 = <org.apache.commons.math3.geometry.euclidean.threed.RotationOrder: org.apache.commons.math3.geometry.euclidean.threed.RotationOrder XYZ>;

        if $r1 != $r4 goto label39;

        $r14 = <org.apache.commons.math3.geometry.euclidean.threed.Vector3D: org.apache.commons.math3.geometry.euclidean.threed.Vector3D PLUS_I>;

        $r5 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r14);

        $r14 = <org.apache.commons.math3.geometry.euclidean.threed.Vector3D: org.apache.commons.math3.geometry.euclidean.threed.Vector3D PLUS_K>;

        $r6 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r14);

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg -0.9999999999;

        if $b0 < 0 goto label37;

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.9999999999;

        if $b0 <= 0 goto label38;

     label37:
        $r8 = new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException;

        specialinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException: void <init>(boolean)>(1);

        throw $r8;

     label38:
        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r10);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object asin()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r11 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r11 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r12 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r12);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r13 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement[] buildArray(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r10, $r11);

        return $r13;

     label39:
        $r4 = <org.apache.commons.math3.geometry.euclidean.threed.RotationOrder: org.apache.commons.math3.geometry.euclidean.threed.RotationOrder XZY>;

        if $r1 != $r4 goto label42;

        $r14 = <org.apache.commons.math3.geometry.euclidean.threed.Vector3D: org.apache.commons.math3.geometry.euclidean.threed.Vector3D PLUS_I>;

        $r5 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r14);

        $r14 = <org.apache.commons.math3.geometry.euclidean.threed.Vector3D: org.apache.commons.math3.geometry.euclidean.threed.Vector3D PLUS_J>;

        $r6 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r14);

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg -0.9999999999;

        if $b0 < 0 goto label40;

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.9999999999;

        if $b0 <= 0 goto label41;

     label40:
        $r8 = new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException;

        specialinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException: void <init>(boolean)>(1);

        throw $r8;

     label41:
        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r10);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object asin()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r11 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r12 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r12);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r13 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement[] buildArray(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r10, $r11);

        return $r13;

     label42:
        $r4 = <org.apache.commons.math3.geometry.euclidean.threed.RotationOrder: org.apache.commons.math3.geometry.euclidean.threed.RotationOrder YXZ>;

        if $r1 != $r4 goto label45;

        $r14 = <org.apache.commons.math3.geometry.euclidean.threed.Vector3D: org.apache.commons.math3.geometry.euclidean.threed.Vector3D PLUS_J>;

        $r5 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r14);

        $r14 = <org.apache.commons.math3.geometry.euclidean.threed.Vector3D: org.apache.commons.math3.geometry.euclidean.threed.Vector3D PLUS_K>;

        $r6 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r14);

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg -0.9999999999;

        if $b0 < 0 goto label43;

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.9999999999;

        if $b0 <= 0 goto label44;

     label43:
        $r8 = new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException;

        specialinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException: void <init>(boolean)>(1);

        throw $r8;

     label44:
        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r10);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object asin()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r11 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r12 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r12);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r13 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement[] buildArray(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r10, $r11);

        return $r13;

     label45:
        $r4 = <org.apache.commons.math3.geometry.euclidean.threed.RotationOrder: org.apache.commons.math3.geometry.euclidean.threed.RotationOrder YZX>;

        if $r1 != $r4 goto label48;

        $r14 = <org.apache.commons.math3.geometry.euclidean.threed.Vector3D: org.apache.commons.math3.geometry.euclidean.threed.Vector3D PLUS_J>;

        $r5 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r14);

        $r14 = <org.apache.commons.math3.geometry.euclidean.threed.Vector3D: org.apache.commons.math3.geometry.euclidean.threed.Vector3D PLUS_I>;

        $r6 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r14);

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg -0.9999999999;

        if $b0 < 0 goto label46;

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.9999999999;

        if $b0 <= 0 goto label47;

     label46:
        $r8 = new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException;

        specialinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException: void <init>(boolean)>(1);

        throw $r8;

     label47:
        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r10);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object asin()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r11 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r11 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r12 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r12);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r13 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement[] buildArray(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r10, $r11);

        return $r13;

     label48:
        $r4 = <org.apache.commons.math3.geometry.euclidean.threed.RotationOrder: org.apache.commons.math3.geometry.euclidean.threed.RotationOrder ZXY>;

        if $r1 != $r4 goto label51;

        $r14 = <org.apache.commons.math3.geometry.euclidean.threed.Vector3D: org.apache.commons.math3.geometry.euclidean.threed.Vector3D PLUS_K>;

        $r5 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r14);

        $r14 = <org.apache.commons.math3.geometry.euclidean.threed.Vector3D: org.apache.commons.math3.geometry.euclidean.threed.Vector3D PLUS_J>;

        $r6 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r14);

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg -0.9999999999;

        if $b0 < 0 goto label49;

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.9999999999;

        if $b0 <= 0 goto label50;

     label49:
        $r8 = new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException;

        specialinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException: void <init>(boolean)>(1);

        throw $r8;

     label50:
        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r10);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object asin()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r11 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r11 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r12 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r12);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r13 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement[] buildArray(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r10, $r11);

        return $r13;

     label51:
        $r4 = <org.apache.commons.math3.geometry.euclidean.threed.RotationOrder: org.apache.commons.math3.geometry.euclidean.threed.RotationOrder ZYX>;

        if $r1 != $r4 goto label54;

        $r14 = <org.apache.commons.math3.geometry.euclidean.threed.Vector3D: org.apache.commons.math3.geometry.euclidean.threed.Vector3D PLUS_K>;

        $r5 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r14);

        $r14 = <org.apache.commons.math3.geometry.euclidean.threed.Vector3D: org.apache.commons.math3.geometry.euclidean.threed.Vector3D PLUS_I>;

        $r6 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r14);

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg -0.9999999999;

        if $b0 < 0 goto label52;

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.9999999999;

        if $b0 <= 0 goto label53;

     label52:
        $r8 = new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException;

        specialinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException: void <init>(boolean)>(1);

        throw $r8;

     label53:
        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r10);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object asin()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r11 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r12 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r12);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r13 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement[] buildArray(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r10, $r11);

        return $r13;

     label54:
        $r4 = <org.apache.commons.math3.geometry.euclidean.threed.RotationOrder: org.apache.commons.math3.geometry.euclidean.threed.RotationOrder XYX>;

        if $r1 != $r4 goto label57;

        $r14 = <org.apache.commons.math3.geometry.euclidean.threed.Vector3D: org.apache.commons.math3.geometry.euclidean.threed.Vector3D PLUS_I>;

        $r5 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r14);

        $r14 = <org.apache.commons.math3.geometry.euclidean.threed.Vector3D: org.apache.commons.math3.geometry.euclidean.threed.Vector3D PLUS_I>;

        $r6 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r14);

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg -0.9999999999;

        if $b0 < 0 goto label55;

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.9999999999;

        if $b0 <= 0 goto label56;

     label55:
        $r8 = new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException;

        specialinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException: void <init>(boolean)>(0);

        throw $r8;

     label56:
        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r9);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object acos()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r11 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r12 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r12);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r13 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement[] buildArray(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r10, $r11);

        return $r13;

     label57:
        $r4 = <org.apache.commons.math3.geometry.euclidean.threed.RotationOrder: org.apache.commons.math3.geometry.euclidean.threed.RotationOrder XZX>;

        if $r1 != $r4 goto label60;

        $r14 = <org.apache.commons.math3.geometry.euclidean.threed.Vector3D: org.apache.commons.math3.geometry.euclidean.threed.Vector3D PLUS_I>;

        $r5 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r14);

        $r14 = <org.apache.commons.math3.geometry.euclidean.threed.Vector3D: org.apache.commons.math3.geometry.euclidean.threed.Vector3D PLUS_I>;

        $r6 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r14);

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg -0.9999999999;

        if $b0 < 0 goto label58;

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.9999999999;

        if $b0 <= 0 goto label59;

     label58:
        $r8 = new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException;

        specialinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException: void <init>(boolean)>(0);

        throw $r8;

     label59:
        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r10);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object acos()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r11 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r12 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r9);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r13 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement[] buildArray(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r10, $r11);

        return $r13;

     label60:
        $r4 = <org.apache.commons.math3.geometry.euclidean.threed.RotationOrder: org.apache.commons.math3.geometry.euclidean.threed.RotationOrder YXY>;

        if $r1 != $r4 goto label63;

        $r14 = <org.apache.commons.math3.geometry.euclidean.threed.Vector3D: org.apache.commons.math3.geometry.euclidean.threed.Vector3D PLUS_J>;

        $r5 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r14);

        $r14 = <org.apache.commons.math3.geometry.euclidean.threed.Vector3D: org.apache.commons.math3.geometry.euclidean.threed.Vector3D PLUS_J>;

        $r6 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r14);

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg -0.9999999999;

        if $b0 < 0 goto label61;

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.9999999999;

        if $b0 <= 0 goto label62;

     label61:
        $r8 = new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException;

        specialinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException: void <init>(boolean)>(0);

        throw $r8;

     label62:
        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r10);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object acos()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r11 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r12 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r9 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r9);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r13 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement[] buildArray(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r10, $r11);

        return $r13;

     label63:
        $r4 = <org.apache.commons.math3.geometry.euclidean.threed.RotationOrder: org.apache.commons.math3.geometry.euclidean.threed.RotationOrder YZY>;

        if $r1 != $r4 goto label66;

        $r14 = <org.apache.commons.math3.geometry.euclidean.threed.Vector3D: org.apache.commons.math3.geometry.euclidean.threed.Vector3D PLUS_J>;

        $r5 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r14);

        $r14 = <org.apache.commons.math3.geometry.euclidean.threed.Vector3D: org.apache.commons.math3.geometry.euclidean.threed.Vector3D PLUS_J>;

        $r6 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r14);

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg -0.9999999999;

        if $b0 < 0 goto label64;

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.9999999999;

        if $b0 <= 0 goto label65;

     label64:
        $r8 = new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException;

        specialinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException: void <init>(boolean)>(0);

        throw $r8;

     label65:
        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r9);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object acos()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r11 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r12 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r12);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r13 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement[] buildArray(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r10, $r11);

        return $r13;

     label66:
        $r4 = <org.apache.commons.math3.geometry.euclidean.threed.RotationOrder: org.apache.commons.math3.geometry.euclidean.threed.RotationOrder ZXZ>;

        if $r1 != $r4 goto label69;

        $r14 = <org.apache.commons.math3.geometry.euclidean.threed.Vector3D: org.apache.commons.math3.geometry.euclidean.threed.Vector3D PLUS_K>;

        $r5 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r14);

        $r14 = <org.apache.commons.math3.geometry.euclidean.threed.Vector3D: org.apache.commons.math3.geometry.euclidean.threed.Vector3D PLUS_K>;

        $r6 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r14);

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg -0.9999999999;

        if $b0 < 0 goto label67;

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.9999999999;

        if $b0 <= 0 goto label68;

     label67:
        $r8 = new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException;

        specialinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException: void <init>(boolean)>(0);

        throw $r8;

     label68:
        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r9);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object acos()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r11 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r12 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r12);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r13 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement[] buildArray(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r10, $r11);

        return $r13;

     label69:
        $r14 = <org.apache.commons.math3.geometry.euclidean.threed.Vector3D: org.apache.commons.math3.geometry.euclidean.threed.Vector3D PLUS_K>;

        $r5 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r14);

        $r14 = <org.apache.commons.math3.geometry.euclidean.threed.Vector3D: org.apache.commons.math3.geometry.euclidean.threed.Vector3D PLUS_K>;

        $r6 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r14);

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg -0.9999999999;

        if $b0 < 0 goto label70;

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.9999999999;

        if $b0 <= 0 goto label71;

     label70:
        $r8 = new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException;

        specialinvoke $r8.<org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException: void <init>(boolean)>(0);

        throw $r8;

     label71:
        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r10);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r9 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object acos()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r11 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r12 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r9 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r9);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r13 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement[] buildArray(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r10, $r11);

        return $r13;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D getAxis()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D $r1;
        org.apache.commons.math3.geometry.euclidean.threed.RotationConvention $r2;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r2 = <org.apache.commons.math3.geometry.euclidean.threed.RotationConvention: org.apache.commons.math3.geometry.euclidean.threed.RotationConvention VECTOR_OPERATOR>;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D getAxis(org.apache.commons.math3.geometry.euclidean.threed.RotationConvention)>($r2);

        return $r1;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D getAxis(org.apache.commons.math3.geometry.euclidean.threed.RotationConvention)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        org.apache.commons.math3.geometry.euclidean.threed.RotationConvention $r1, $r8;
        org.apache.commons.math3.RealFieldElement $r2, $r3, $r5, $r9;
        java.lang.Object $r4;
        double $d0, $d1;
        byte $b0;
        org.apache.commons.math3.Field $r6;
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D $r7;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.RotationConvention;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r3);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r5);

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r5);

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        $d0 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label3;

        $r6 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $r7 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r8 = <org.apache.commons.math3.geometry.euclidean.threed.RotationConvention: org.apache.commons.math3.geometry.euclidean.threed.RotationConvention VECTOR_OPERATOR>;

        if $r1 != $r8 goto label2;

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.Field: java.lang.Object getOne()>();

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

     label1:
        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        specialinvoke $r7.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r2, $r3, $r5);

        return $r7;

     label2:
        $r4 = interfaceinvoke $r6.<org.apache.commons.math3.Field: java.lang.Object getOne()>();

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        goto label1;

     label3:
        $r8 = <org.apache.commons.math3.geometry.euclidean.threed.RotationConvention: org.apache.commons.math3.geometry.euclidean.threed.RotationConvention VECTOR_OPERATOR>;

        if $r1 != $r8 goto label5;

        $d0 = 1.0;

     label4:
        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $d1 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d1 cmpg 0.0;

        if $b0 >= 0 goto label6;

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object sqrt()>();

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object reciprocal()>();

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r7 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r2);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r2);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r4 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r2);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        specialinvoke $r7.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r3, $r5, $r2);

        return $r7;

     label5:
        $d0 = -1.0;

        goto label4;

     label6:
        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object sqrt()>();

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object reciprocal()>();

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r4 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r7 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r2);

        $r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r4 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r2);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r4 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r2);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r4;

        specialinvoke $r7.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r3, $r5, $r2);

        return $r7;
    }
    public org.apache.commons.math3.RealFieldElement[][] getMatrix()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        org.apache.commons.math3.RealFieldElement $r1, $r2, $r4, $r5, $r6, $r7, r8, r9, $r10, r11, $r12;
        java.lang.Object $r3;
        org.apache.commons.math3.Field $r13;
        java.lang.Object[][] $r14;
        org.apache.commons.math3.RealFieldElement[][] r15;
        org.apache.commons.math3.RealFieldElement[] $r16;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r3 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r2);

        $r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r3 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r5);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r3 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r6);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r3 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r7);

        r8 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r3 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r7);

        r9 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r3 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r7);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r10 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r3 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r10);

        r11 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r10 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r3 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r10);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r10 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r12 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $r3 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r12);

        $r10 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r12 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r13 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $r14 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[][] buildArray(org.apache.commons.math3.Field,int,int)>($r13, 3, 3);

        r15 = (org.apache.commons.math3.RealFieldElement[][]) $r14;

        $r16 = r15[0];

        $r3 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>(r8);

        r8 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        r8 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>(1.0);

        r8 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r16[0] = r8;

        $r16 = r15[1];

        $r3 = interfaceinvoke r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        r8 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        r8 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r16[0] = r8;

        $r16 = r15[2];

        $r3 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r4);

        r8 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        r8 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r16[0] = r8;

        $r16 = r15[0];

        $r3 = interfaceinvoke r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r16[1] = $r6;

        $r16 = r15[1];

        $r3 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>(r11);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>(1.0);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r16[1] = $r6;

        $r16 = r15[2];

        $r3 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r2);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r16[1] = $r6;

        $r16 = r15[0];

        $r3 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r4);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r16[2] = $r4;

        $r16 = r15[1];

        $r3 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r2);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r2 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r16[2] = $r2;

        $r16 = r15[2];

        $r3 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r10);

        $r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(int)>(2);

        $r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r3 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>(1.0);

        $r1 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r16[2] = $r1;

        return r15;
    }
    public org.apache.commons.math3.RealFieldElement getQ0()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        org.apache.commons.math3.RealFieldElement r1;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        return r1;
    }
    public org.apache.commons.math3.RealFieldElement getQ1()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        org.apache.commons.math3.RealFieldElement r1;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        return r1;
    }
    public org.apache.commons.math3.RealFieldElement getQ2()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        org.apache.commons.math3.RealFieldElement r1;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        return r1;
    }
    public org.apache.commons.math3.RealFieldElement getQ3()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        org.apache.commons.math3.RealFieldElement r1;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        return r1;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.FieldRotation revert()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0, $r1;
        org.apache.commons.math3.RealFieldElement $r2, $r3, $r4, $r6;
        java.lang.Object $r5;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r1 = new org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $r5 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r6 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        specialinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,boolean)>($r6, $r2, $r3, $r4, 0);

        return $r1;
    }
    public org.apache.commons.math3.geometry.euclidean.threed.Rotation toRotation()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r0;
        org.apache.commons.math3.geometry.euclidean.threed.Rotation $r1;
        org.apache.commons.math3.RealFieldElement $r2;
        double $d0, $d1, $d2, $d3;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldRotation;

        $r1 = new org.apache.commons.math3.geometry.euclidean.threed.Rotation;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q0>;

        $d0 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q1>;

        $d1 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q2>;

        $d2 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldRotation: org.apache.commons.math3.RealFieldElement q3>;

        $d3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        specialinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Rotation: void <init>(double,double,double,double,boolean)>($d0, $d1, $d2, $d3, 0);

        return $r1;
    }
