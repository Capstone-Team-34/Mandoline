org.apache.commons.math3.geometry.spherical.twod.Vertex extends java.lang.Object
private final java.util.List circles
private org.apache.commons.math3.geometry.spherical.twod.Edge incoming
private final org.apache.commons.math3.geometry.spherical.twod.S2Point location
private org.apache.commons.math3.geometry.spherical.twod.Edge outgoing
    void <init>(org.apache.commons.math3.geometry.spherical.twod.S2Point)
    {
        org.apache.commons.math3.geometry.spherical.twod.Vertex r0;
        org.apache.commons.math3.geometry.spherical.twod.S2Point $r1;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.commons.math3.geometry.spherical.twod.Vertex;

        $r1 := @parameter0: org.apache.commons.math3.geometry.spherical.twod.S2Point;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.geometry.spherical.twod.Vertex: org.apache.commons.math3.geometry.spherical.twod.S2Point location> = $r1;

        r0.<org.apache.commons.math3.geometry.spherical.twod.Vertex: org.apache.commons.math3.geometry.spherical.twod.Edge incoming> = null;

        r0.<org.apache.commons.math3.geometry.spherical.twod.Vertex: org.apache.commons.math3.geometry.spherical.twod.Edge outgoing> = null;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.math3.geometry.spherical.twod.Vertex: java.util.List circles> = $r2;

        return;
    }
    void bindWith(org.apache.commons.math3.geometry.spherical.twod.Circle)
    {
        org.apache.commons.math3.geometry.spherical.twod.Vertex r0;
        org.apache.commons.math3.geometry.spherical.twod.Circle $r1;
        java.util.List $r2;

        r0 := @this: org.apache.commons.math3.geometry.spherical.twod.Vertex;

        $r1 := @parameter0: org.apache.commons.math3.geometry.spherical.twod.Circle;

        $r2 = r0.<org.apache.commons.math3.geometry.spherical.twod.Vertex: java.util.List circles>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }
    public org.apache.commons.math3.geometry.spherical.twod.Edge getIncoming()
    {
        org.apache.commons.math3.geometry.spherical.twod.Vertex r0;
        org.apache.commons.math3.geometry.spherical.twod.Edge r1;

        r0 := @this: org.apache.commons.math3.geometry.spherical.twod.Vertex;

        r1 = r0.<org.apache.commons.math3.geometry.spherical.twod.Vertex: org.apache.commons.math3.geometry.spherical.twod.Edge incoming>;

        return r1;
    }
    public org.apache.commons.math3.geometry.spherical.twod.S2Point getLocation()
    {
        org.apache.commons.math3.geometry.spherical.twod.Vertex r0;
        org.apache.commons.math3.geometry.spherical.twod.S2Point r1;

        r0 := @this: org.apache.commons.math3.geometry.spherical.twod.Vertex;

        r1 = r0.<org.apache.commons.math3.geometry.spherical.twod.Vertex: org.apache.commons.math3.geometry.spherical.twod.S2Point location>;

        return r1;
    }
    public org.apache.commons.math3.geometry.spherical.twod.Edge getOutgoing()
    {
        org.apache.commons.math3.geometry.spherical.twod.Vertex r0;
        org.apache.commons.math3.geometry.spherical.twod.Edge r1;

        r0 := @this: org.apache.commons.math3.geometry.spherical.twod.Vertex;

        r1 = r0.<org.apache.commons.math3.geometry.spherical.twod.Vertex: org.apache.commons.math3.geometry.spherical.twod.Edge outgoing>;

        return r1;
    }
    void setIncoming(org.apache.commons.math3.geometry.spherical.twod.Edge)
    {
        org.apache.commons.math3.geometry.spherical.twod.Vertex r0;
        org.apache.commons.math3.geometry.spherical.twod.Edge $r1;
        org.apache.commons.math3.geometry.spherical.twod.Circle $r2;

        r0 := @this: org.apache.commons.math3.geometry.spherical.twod.Vertex;

        $r1 := @parameter0: org.apache.commons.math3.geometry.spherical.twod.Edge;

        r0.<org.apache.commons.math3.geometry.spherical.twod.Vertex: org.apache.commons.math3.geometry.spherical.twod.Edge incoming> = $r1;

        $r2 = virtualinvoke $r1.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Circle getCircle()>();

        virtualinvoke r0.<org.apache.commons.math3.geometry.spherical.twod.Vertex: void bindWith(org.apache.commons.math3.geometry.spherical.twod.Circle)>($r2);

        return;
    }
    void setOutgoing(org.apache.commons.math3.geometry.spherical.twod.Edge)
    {
        org.apache.commons.math3.geometry.spherical.twod.Vertex r0;
        org.apache.commons.math3.geometry.spherical.twod.Edge $r1;
        org.apache.commons.math3.geometry.spherical.twod.Circle $r2;

        r0 := @this: org.apache.commons.math3.geometry.spherical.twod.Vertex;

        $r1 := @parameter0: org.apache.commons.math3.geometry.spherical.twod.Edge;

        r0.<org.apache.commons.math3.geometry.spherical.twod.Vertex: org.apache.commons.math3.geometry.spherical.twod.Edge outgoing> = $r1;

        $r2 = virtualinvoke $r1.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Circle getCircle()>();

        virtualinvoke r0.<org.apache.commons.math3.geometry.spherical.twod.Vertex: void bindWith(org.apache.commons.math3.geometry.spherical.twod.Circle)>($r2);

        return;
    }
    org.apache.commons.math3.geometry.spherical.twod.Circle sharedCircleWith(org.apache.commons.math3.geometry.spherical.twod.Vertex)
    {
        org.apache.commons.math3.geometry.spherical.twod.Vertex r0, $r1;
        java.util.List $r2;
        java.util.Iterator $r3, $r6;
        boolean $z0;
        java.lang.Object $r4;
        org.apache.commons.math3.geometry.spherical.twod.Circle r5, r7;

        r0 := @this: org.apache.commons.math3.geometry.spherical.twod.Vertex;

        $r1 := @parameter0: org.apache.commons.math3.geometry.spherical.twod.Vertex;

        $r2 = r0.<org.apache.commons.math3.geometry.spherical.twod.Vertex: java.util.List circles>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.commons.math3.geometry.spherical.twod.Circle) $r4;

        $r2 = $r1.<org.apache.commons.math3.geometry.spherical.twod.Vertex: java.util.List circles>;

        $r6 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.commons.math3.geometry.spherical.twod.Circle) $r4;

        if r5 != r7 goto label2;

        return r5;

     label3:
        return null;
    }
