com.larswerkman.holocolorpicker.OpacityBar extends android.view.View
private static final boolean ORIENTATION_DEFAULT
private static final boolean ORIENTATION_HORIZONTAL
private static final boolean ORIENTATION_VERTICAL
private static final java.lang.String STATE_COLOR
private static final java.lang.String STATE_OPACITY
private static final java.lang.String STATE_PARENT
private int mBarLength
private android.graphics.Paint mBarPaint
private android.graphics.Paint mBarPointerHaloPaint
private int mBarPointerHaloRadius
private android.graphics.Paint mBarPointerPaint
private int mBarPointerPosition
private int mBarPointerRadius
private android.graphics.RectF mBarRect
private int mBarThickness
private int mColor
private float[] mHSVColor
private boolean mIsMovingPointer
private float mOpacToPosFactor
private boolean mOrientation
private com.larswerkman.holocolorpicker.ColorPicker mPicker
private float mPosToOpacFactor
private int mPreferredBarLength
private int oldChangedListenerOpacity
private com.larswerkman.holocolorpicker.OpacityBar$OnOpacityChangedListener onOpacityChangedListener
private android.graphics.Shader shader
    public void <init>(android.content.Context)
    {
        com.larswerkman.holocolorpicker.OpacityBar r0;
        android.content.Context $r1;
        android.graphics.RectF $r2;
        float[] $r3;

        r0 := @this: com.larswerkman.holocolorpicker.OpacityBar;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context)>($r1);

        $r2 = new android.graphics.RectF;

        specialinvoke $r2.<android.graphics.RectF: void <init>()>();

        r0.<com.larswerkman.holocolorpicker.OpacityBar: android.graphics.RectF mBarRect> = $r2;

        $r3 = newarray (float)[3];

        r0.<com.larswerkman.holocolorpicker.OpacityBar: float[] mHSVColor> = $r3;

        r0.<com.larswerkman.holocolorpicker.OpacityBar: com.larswerkman.holocolorpicker.ColorPicker mPicker> = null;

        specialinvoke r0.<com.larswerkman.holocolorpicker.OpacityBar: void init(android.util.AttributeSet,int)>(null, 0);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.larswerkman.holocolorpicker.OpacityBar r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        android.graphics.RectF $r3;
        float[] $r4;

        r0 := @this: com.larswerkman.holocolorpicker.OpacityBar;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r3 = new android.graphics.RectF;

        specialinvoke $r3.<android.graphics.RectF: void <init>()>();

        r0.<com.larswerkman.holocolorpicker.OpacityBar: android.graphics.RectF mBarRect> = $r3;

        $r4 = newarray (float)[3];

        r0.<com.larswerkman.holocolorpicker.OpacityBar: float[] mHSVColor> = $r4;

        r0.<com.larswerkman.holocolorpicker.OpacityBar: com.larswerkman.holocolorpicker.ColorPicker mPicker> = null;

        specialinvoke r0.<com.larswerkman.holocolorpicker.OpacityBar: void init(android.util.AttributeSet,int)>($r2, 0);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.larswerkman.holocolorpicker.OpacityBar r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        android.graphics.RectF $r3;
        float[] $r4;

        r0 := @this: com.larswerkman.holocolorpicker.OpacityBar;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r3 = new android.graphics.RectF;

        specialinvoke $r3.<android.graphics.RectF: void <init>()>();

        r0.<com.larswerkman.holocolorpicker.OpacityBar: android.graphics.RectF mBarRect> = $r3;

        $r4 = newarray (float)[3];

        r0.<com.larswerkman.holocolorpicker.OpacityBar: float[] mHSVColor> = $r4;

        r0.<com.larswerkman.holocolorpicker.OpacityBar: com.larswerkman.holocolorpicker.ColorPicker mPicker> = null;

        specialinvoke r0.<com.larswerkman.holocolorpicker.OpacityBar: void init(android.util.AttributeSet,int)>($r2, $i0);

        return;
    }
    private void calculateColor(int)
    {
        com.larswerkman.holocolorpicker.OpacityBar r0;
        int $i0, $i1;
        float $f0, $f1;
        float[] $r1;

        r0 := @this: com.larswerkman.holocolorpicker.OpacityBar;

        $i0 := @parameter0: int;

        $i1 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $i0 = $i0 - $i1;

        if $i0 >= 0 goto label2;

        $i0 = 0;

     label1:
        $f0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: float mPosToOpacFactor>;

        $f1 = (float) $i0;

        $f0 = $f0 * $f1;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $r1 = r0.<com.larswerkman.holocolorpicker.OpacityBar: float[] mHSVColor>;

        $i0 = staticinvoke <android.graphics.Color: int HSVToColor(int,float[])>($i0, $r1);

        r0.<com.larswerkman.holocolorpicker.OpacityBar: int mColor> = $i0;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mColor>;

        $i0 = staticinvoke <android.graphics.Color: int alpha(int)>($i0);

        if $i0 <= 250 goto label3;

        $r1 = r0.<com.larswerkman.holocolorpicker.OpacityBar: float[] mHSVColor>;

        $i0 = staticinvoke <android.graphics.Color: int HSVToColor(float[])>($r1);

        r0.<com.larswerkman.holocolorpicker.OpacityBar: int mColor> = $i0;

        return;

     label2:
        $i1 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarLength>;

        if $i0 <= $i1 goto label1;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarLength>;

        goto label1;

     label3:
        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mColor>;

        $i0 = staticinvoke <android.graphics.Color: int alpha(int)>($i0);

        if $i0 >= 5 goto label4;

        r0.<com.larswerkman.holocolorpicker.OpacityBar: int mColor> = 0;

     label4:
        return;
    }
    private void init(android.util.AttributeSet, int)
    {
        com.larswerkman.holocolorpicker.OpacityBar r0;
        android.util.AttributeSet $r1;
        int $i0, $i1;
        android.content.Context $r2;
        int[] $r3;
        android.content.res.TypedArray $r4;
        android.content.res.Resources $r5;
        boolean $z0;
        android.graphics.Paint $r6;
        android.graphics.Shader $r7;
        float $f0;

        r0 := @this: com.larswerkman.holocolorpicker.OpacityBar;

        $r1 := @parameter0: android.util.AttributeSet;

        $i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.larswerkman.holocolorpicker.OpacityBar: android.content.Context getContext()>();

        $r3 = <com.mkulesh.micromath.plus.R$styleable: int[] ColorBars>;

        $r4 = virtualinvoke $r2.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r1, $r3, $i0, 0);

        $r2 = virtualinvoke r0.<com.larswerkman.holocolorpicker.OpacityBar: android.content.Context getContext()>();

        $r5 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r5.<android.content.res.Resources: int getDimensionPixelSize(int)>(2131230812);

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, $i0);

        r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarThickness> = $i0;

        $i0 = virtualinvoke $r5.<android.content.res.Resources: int getDimensionPixelSize(int)>(2131230809);

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(1, $i0);

        r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarLength> = $i0;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarLength>;

        r0.<com.larswerkman.holocolorpicker.OpacityBar: int mPreferredBarLength> = $i0;

        $i0 = virtualinvoke $r5.<android.content.res.Resources: int getDimensionPixelSize(int)>(2131230811);

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(2, $i0);

        r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerRadius> = $i0;

        $i0 = virtualinvoke $r5.<android.content.res.Resources: int getDimensionPixelSize(int)>(2131230810);

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(3, $i0);

        r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius> = $i0;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(4, 1);

        r0.<com.larswerkman.holocolorpicker.OpacityBar: boolean mOrientation> = $z0;

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        $r6 = new android.graphics.Paint;

        specialinvoke $r6.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.larswerkman.holocolorpicker.OpacityBar: android.graphics.Paint mBarPaint> = $r6;

        $r6 = r0.<com.larswerkman.holocolorpicker.OpacityBar: android.graphics.Paint mBarPaint>;

        $r7 = r0.<com.larswerkman.holocolorpicker.OpacityBar: android.graphics.Shader shader>;

        virtualinvoke $r6.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($r7);

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarLength>;

        $i1 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $i0 = $i0 + $i1;

        r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerPosition> = $i0;

        $r6 = new android.graphics.Paint;

        specialinvoke $r6.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.larswerkman.holocolorpicker.OpacityBar: android.graphics.Paint mBarPointerHaloPaint> = $r6;

        $r6 = r0.<com.larswerkman.holocolorpicker.OpacityBar: android.graphics.Paint mBarPointerHaloPaint>;

        virtualinvoke $r6.<android.graphics.Paint: void setColor(int)>(-16777216);

        $r6 = r0.<com.larswerkman.holocolorpicker.OpacityBar: android.graphics.Paint mBarPointerHaloPaint>;

        virtualinvoke $r6.<android.graphics.Paint: void setAlpha(int)>(80);

        $r6 = new android.graphics.Paint;

        specialinvoke $r6.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.larswerkman.holocolorpicker.OpacityBar: android.graphics.Paint mBarPointerPaint> = $r6;

        $r6 = r0.<com.larswerkman.holocolorpicker.OpacityBar: android.graphics.Paint mBarPointerPaint>;

        virtualinvoke $r6.<android.graphics.Paint: void setColor(int)>(-8257792);

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarLength>;

        $f0 = (float) $i0;

        $f0 = 255.0F / $f0;

        r0.<com.larswerkman.holocolorpicker.OpacityBar: float mPosToOpacFactor> = $f0;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarLength>;

        $f0 = (float) $i0;

        $f0 = $f0 / 255.0F;

        r0.<com.larswerkman.holocolorpicker.OpacityBar: float mOpacToPosFactor> = $f0;

        return;
    }
    public int getColor()
    {
        com.larswerkman.holocolorpicker.OpacityBar r0;
        int i0;

        r0 := @this: com.larswerkman.holocolorpicker.OpacityBar;

        i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mColor>;

        return i0;
    }
    public com.larswerkman.holocolorpicker.OpacityBar$OnOpacityChangedListener getOnOpacityChangedListener()
    {
        com.larswerkman.holocolorpicker.OpacityBar r0;
        com.larswerkman.holocolorpicker.OpacityBar$OnOpacityChangedListener r1;

        r0 := @this: com.larswerkman.holocolorpicker.OpacityBar;

        r1 = r0.<com.larswerkman.holocolorpicker.OpacityBar: com.larswerkman.holocolorpicker.OpacityBar$OnOpacityChangedListener onOpacityChangedListener>;

        return r1;
    }
    public int getOpacity()
    {
        com.larswerkman.holocolorpicker.OpacityBar r0;
        int $i0, $i1;
        float $f0, $f1;

        r0 := @this: com.larswerkman.holocolorpicker.OpacityBar;

        $f0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: float mPosToOpacFactor>;

        $i1 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerPosition>;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $i0 = $i1 - $i0;

        $f1 = (float) $i0;

        $f0 = $f0 * $f1;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        if $i0 >= 5 goto label1;

        return 0;

     label1:
        if $i0 <= 250 goto label2;

        return 255;

     label2:
        return $i0;
    }
    protected void onDraw(android.graphics.Canvas)
    {
        com.larswerkman.holocolorpicker.OpacityBar r0;
        android.graphics.Canvas $r1;
        android.graphics.RectF $r2;
        android.graphics.Paint $r3;
        boolean $z0;
        int i0, i1, $i2;
        float $f0, $f1, $f2;

        r0 := @this: com.larswerkman.holocolorpicker.OpacityBar;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.larswerkman.holocolorpicker.OpacityBar: android.graphics.RectF mBarRect>;

        $r3 = r0.<com.larswerkman.holocolorpicker.OpacityBar: android.graphics.Paint mBarPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>($r2, $r3);

        $z0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: boolean mOrientation>;

        if $z0 != 1 goto label2;

        i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerPosition>;

        i1 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

     label1:
        $f0 = (float) i0;

        $f1 = (float) i1;

        $i2 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $f2 = (float) $i2;

        $r3 = r0.<com.larswerkman.holocolorpicker.OpacityBar: android.graphics.Paint mBarPointerHaloPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $r3);

        $f0 = (float) i0;

        $f1 = (float) i1;

        i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerRadius>;

        $f2 = (float) i0;

        $r3 = r0.<com.larswerkman.holocolorpicker.OpacityBar: android.graphics.Paint mBarPointerPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $r3);

        return;

     label2:
        i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        i1 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerPosition>;

        goto label1;
    }
    protected void onMeasure(int, int)
    {
        com.larswerkman.holocolorpicker.OpacityBar r0;
        int $i0, $i1, i2, $i3;
        boolean $z0;

        r0 := @this: com.larswerkman.holocolorpicker.OpacityBar;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        i2 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mPreferredBarLength>;

        $i3 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $i3 = $i3 * 2;

        i2 = i2 + $i3;

        $z0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: boolean mOrientation>;

        if $z0 != 1 goto label3;

        $i1 = $i0;

     label1:
        $i0 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        $i1 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        if $i0 != 1073741824 goto label4;

     label2:
        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $i0 = $i0 * 2;

        $i1 = $i1 - $i0;

        r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarLength> = $i1;

        $z0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: boolean mOrientation>;

        if $z0 != 0 goto label6;

        $i1 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarLength>;

        $i1 = $i1 + $i0;

        virtualinvoke r0.<com.larswerkman.holocolorpicker.OpacityBar: void setMeasuredDimension(int,int)>($i0, $i1);

        return;

     label3:
        goto label1;

     label4:
        if $i0 != -2147483648 goto label5;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i1);

        goto label2;

     label5:
        $i1 = i2;

        goto label2;

     label6:
        $i1 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarLength>;

        $i1 = $i1 + $i0;

        virtualinvoke r0.<com.larswerkman.holocolorpicker.OpacityBar: void setMeasuredDimension(int,int)>($i1, $i0);

        return;
    }
    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        com.larswerkman.holocolorpicker.OpacityBar r0;
        android.os.Parcelable $r1;
        android.os.Bundle r2;
        float[] $r3;
        int $i0;

        r0 := @this: com.larswerkman.holocolorpicker.OpacityBar;

        $r1 := @parameter0: android.os.Parcelable;

        r2 = (android.os.Bundle) $r1;

        $r1 = virtualinvoke r2.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("parent");

        specialinvoke r0.<android.view.View: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        $r3 = virtualinvoke r2.<android.os.Bundle: float[] getFloatArray(java.lang.String)>("color");

        $i0 = staticinvoke <android.graphics.Color: int HSVToColor(float[])>($r3);

        virtualinvoke r0.<com.larswerkman.holocolorpicker.OpacityBar: void setColor(int)>($i0);

        $i0 = virtualinvoke r2.<android.os.Bundle: int getInt(java.lang.String)>("opacity");

        virtualinvoke r0.<com.larswerkman.holocolorpicker.OpacityBar: void setOpacity(int)>($i0);

        return;
    }
    protected android.os.Parcelable onSaveInstanceState()
    {
        com.larswerkman.holocolorpicker.OpacityBar r0;
        android.os.Bundle r1;
        android.os.Parcelable $r2;
        float[] $r3;
        int $i0;

        r0 := @this: com.larswerkman.holocolorpicker.OpacityBar;

        $r2 = specialinvoke r0.<android.view.View: android.os.Parcelable onSaveInstanceState()>();

        r1 = new android.os.Bundle;

        specialinvoke r1.<android.os.Bundle: void <init>()>();

        virtualinvoke r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("parent", $r2);

        $r3 = r0.<com.larswerkman.holocolorpicker.OpacityBar: float[] mHSVColor>;

        virtualinvoke r1.<android.os.Bundle: void putFloatArray(java.lang.String,float[])>("color", $r3);

        $i0 = virtualinvoke r0.<com.larswerkman.holocolorpicker.OpacityBar: int getOpacity()>();

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("opacity", $i0);

        return r1;
    }
    protected void onSizeChanged(int, int, int, int)
    {
        com.larswerkman.holocolorpicker.OpacityBar r0;
        int $i0, $i1, $i2, $i3;
        float[] r1;
        boolean $z0;
        android.graphics.RectF $r2;
        float $f0, $f1, $f2, $f3;
        android.graphics.LinearGradient $r3;
        int[] $r4;
        android.graphics.Shader$TileMode $r5;
        android.graphics.Paint $r6;
        android.graphics.Shader $r7;

        r0 := @this: com.larswerkman.holocolorpicker.OpacityBar;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        specialinvoke r0.<android.view.View: void onSizeChanged(int,int,int,int)>($i0, $i1, $i2, $i3);

        $z0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: boolean mOrientation>;

        if $z0 != 1 goto label3;

        $i1 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarLength>;

        $i2 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $i2 = $i1 + $i2;

        $i3 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarThickness>;

        $i1 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $i1 = $i1 * 2;

        $i0 = $i0 - $i1;

        r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarLength> = $i0;

        $r2 = r0.<com.larswerkman.holocolorpicker.OpacityBar: android.graphics.RectF mBarRect>;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $f0 = (float) $i0;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $i1 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarThickness>;

        $i1 = $i1 / 2;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarLength>;

        $i1 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $i0 = $i0 + $i1;

        $f2 = (float) $i0;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $i1 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarThickness>;

        $i1 = $i1 / 2;

        $i0 = $i0 + $i1;

        $f3 = (float) $i0;

        virtualinvoke $r2.<android.graphics.RectF: void set(float,float,float,float)>($f0, $f1, $f2, $f3);

     label1:
        $z0 = virtualinvoke r0.<com.larswerkman.holocolorpicker.OpacityBar: boolean isInEditMode()>();

        if $z0 != 0 goto label4;

        $r3 = new android.graphics.LinearGradient;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $f0 = (float) $i0;

        $f1 = (float) $i2;

        $f2 = (float) $i3;

        $r4 = newarray (int)[2];

        r1 = r0.<com.larswerkman.holocolorpicker.OpacityBar: float[] mHSVColor>;

        $i0 = staticinvoke <android.graphics.Color: int HSVToColor(int,float[])>(0, r1);

        $r4[0] = $i0;

        r1 = r0.<com.larswerkman.holocolorpicker.OpacityBar: float[] mHSVColor>;

        $i0 = staticinvoke <android.graphics.Color: int HSVToColor(int,float[])>(255, r1);

        $r4[1] = $i0;

        $r5 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        specialinvoke $r3.<android.graphics.LinearGradient: void <init>(float,float,float,float,int[],float[],android.graphics.Shader$TileMode)>($f0, 0.0F, $f1, $f2, $r4, null, $r5);

        r0.<com.larswerkman.holocolorpicker.OpacityBar: android.graphics.Shader shader> = $r3;

     label2:
        $r6 = r0.<com.larswerkman.holocolorpicker.OpacityBar: android.graphics.Paint mBarPaint>;

        $r7 = r0.<com.larswerkman.holocolorpicker.OpacityBar: android.graphics.Shader shader>;

        virtualinvoke $r6.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($r7);

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarLength>;

        $f0 = (float) $i0;

        $f0 = 255.0F / $f0;

        r0.<com.larswerkman.holocolorpicker.OpacityBar: float mPosToOpacFactor> = $f0;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarLength>;

        $f0 = (float) $i0;

        $f0 = $f0 / 255.0F;

        r0.<com.larswerkman.holocolorpicker.OpacityBar: float mOpacToPosFactor> = $f0;

        r1 = newarray (float)[3];

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mColor>;

        staticinvoke <android.graphics.Color: void colorToHSV(int,float[])>($i0, r1);

        $z0 = virtualinvoke r0.<com.larswerkman.holocolorpicker.OpacityBar: boolean isInEditMode()>();

        if $z0 != 0 goto label5;

        $f0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: float mOpacToPosFactor>;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mColor>;

        $i0 = staticinvoke <android.graphics.Color: int alpha(int)>($i0);

        $f1 = (float) $i0;

        $f0 = $f0 * $f1;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $f1 = (float) $i0;

        $f0 = $f0 + $f1;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerPosition> = $i0;

        return;

     label3:
        $i2 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarThickness>;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarLength>;

        $i3 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $i3 = $i0 + $i3;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $i0 = $i0 * 2;

        $i0 = $i1 - $i0;

        r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarLength> = $i0;

        $r2 = r0.<com.larswerkman.holocolorpicker.OpacityBar: android.graphics.RectF mBarRect>;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $i1 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarThickness>;

        $i1 = $i1 / 2;

        $i0 = $i0 - $i1;

        $f0 = (float) $i0;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $f1 = (float) $i0;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $i1 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarThickness>;

        $i1 = $i1 / 2;

        $i0 = $i0 + $i1;

        $f2 = (float) $i0;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarLength>;

        $i1 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $i0 = $i0 + $i1;

        $f3 = (float) $i0;

        virtualinvoke $r2.<android.graphics.RectF: void set(float,float,float,float)>($f0, $f1, $f2, $f3);

        goto label1;

     label4:
        $r3 = new android.graphics.LinearGradient;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $f0 = (float) $i0;

        $f1 = (float) $i2;

        $f2 = (float) $i3;

        $r4 = newarray (int)[2];

        $r4[0] = 8519424;

        $r4[1] = -8257792;

        $r5 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        specialinvoke $r3.<android.graphics.LinearGradient: void <init>(float,float,float,float,int[],float[],android.graphics.Shader$TileMode)>($f0, 0.0F, $f1, $f2, $r4, null, $r5);

        r0.<com.larswerkman.holocolorpicker.OpacityBar: android.graphics.Shader shader> = $r3;

        r1 = r0.<com.larswerkman.holocolorpicker.OpacityBar: float[] mHSVColor>;

        staticinvoke <android.graphics.Color: void colorToHSV(int,float[])>(-8257792, r1);

        goto label2;

     label5:
        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarLength>;

        $i1 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $i0 = $i0 + $i1;

        r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerPosition> = $i0;

        return;
    }
    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.larswerkman.holocolorpicker.OpacityBar r0;
        android.view.MotionEvent $r1;
        android.view.ViewParent $r2;
        boolean $z0;
        float $f0, $f1;
        int $i0, $i2;
        byte $b1;
        android.graphics.Paint $r3;
        com.larswerkman.holocolorpicker.ColorPicker $r4;
        com.larswerkman.holocolorpicker.OpacityBar$OnOpacityChangedListener $r5;
        float[] $r6;

        r0 := @this: com.larswerkman.holocolorpicker.OpacityBar;

        $r1 := @parameter0: android.view.MotionEvent;

        $r2 = virtualinvoke r0.<com.larswerkman.holocolorpicker.OpacityBar: android.view.ViewParent getParent()>();

        interfaceinvoke $r2.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

        $z0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: boolean mOrientation>;

        if $z0 != 1 goto label03;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

     label01:
        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        lookupswitch($i0)
        {
            case 0: goto label04;
            case 1: goto label13;
            case 2: goto label06;
            default: goto label02;
        };

     label02:
        return 1;

     label03:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        goto label01;

     label04:
        r0.<com.larswerkman.holocolorpicker.OpacityBar: boolean mIsMovingPointer> = 1;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $f1 = (float) $i0;

        $b1 = $f0 cmpl $f1;

        if $b1 < 0 goto label14;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $i2 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarLength>;

        $i0 = $i0 + $i2;

        $f1 = (float) $i0;

        $b1 = $f0 cmpg $f1;

        if $b1 > 0 goto label14;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerPosition> = $i0;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        specialinvoke r0.<com.larswerkman.holocolorpicker.OpacityBar: void calculateColor(int)>($i0);

        $r3 = r0.<com.larswerkman.holocolorpicker.OpacityBar: android.graphics.Paint mBarPointerPaint>;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mColor>;

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i0);

        $r4 = r0.<com.larswerkman.holocolorpicker.OpacityBar: com.larswerkman.holocolorpicker.ColorPicker mPicker>;

        if $r4 == null goto label05;

        $r4 = r0.<com.larswerkman.holocolorpicker.OpacityBar: com.larswerkman.holocolorpicker.ColorPicker mPicker>;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mColor>;

        virtualinvoke $r4.<com.larswerkman.holocolorpicker.ColorPicker: void setNewCenterColor(int)>($i0);

     label05:
        virtualinvoke r0.<com.larswerkman.holocolorpicker.OpacityBar: void invalidate()>();

        return 1;

     label06:
        $z0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: boolean mIsMovingPointer>;

        if $z0 == 0 goto label08;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $f1 = (float) $i0;

        $b1 = $f0 cmpl $f1;

        if $b1 < 0 goto label09;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $i2 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarLength>;

        $i0 = $i0 + $i2;

        $f1 = (float) $i0;

        $b1 = $f0 cmpg $f1;

        if $b1 > 0 goto label09;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerPosition> = $i0;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        specialinvoke r0.<com.larswerkman.holocolorpicker.OpacityBar: void calculateColor(int)>($i0);

        $r3 = r0.<com.larswerkman.holocolorpicker.OpacityBar: android.graphics.Paint mBarPointerPaint>;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mColor>;

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i0);

        $r4 = r0.<com.larswerkman.holocolorpicker.OpacityBar: com.larswerkman.holocolorpicker.ColorPicker mPicker>;

        if $r4 == null goto label07;

        $r4 = r0.<com.larswerkman.holocolorpicker.OpacityBar: com.larswerkman.holocolorpicker.ColorPicker mPicker>;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mColor>;

        virtualinvoke $r4.<com.larswerkman.holocolorpicker.ColorPicker: void setNewCenterColor(int)>($i0);

     label07:
        virtualinvoke r0.<com.larswerkman.holocolorpicker.OpacityBar: void invalidate()>();

     label08:
        $r5 = r0.<com.larswerkman.holocolorpicker.OpacityBar: com.larswerkman.holocolorpicker.OpacityBar$OnOpacityChangedListener onOpacityChangedListener>;

        if $r5 == null goto label14;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int oldChangedListenerOpacity>;

        $i2 = virtualinvoke r0.<com.larswerkman.holocolorpicker.OpacityBar: int getOpacity()>();

        if $i0 == $i2 goto label14;

        $r5 = r0.<com.larswerkman.holocolorpicker.OpacityBar: com.larswerkman.holocolorpicker.OpacityBar$OnOpacityChangedListener onOpacityChangedListener>;

        $i0 = virtualinvoke r0.<com.larswerkman.holocolorpicker.OpacityBar: int getOpacity()>();

        interfaceinvoke $r5.<com.larswerkman.holocolorpicker.OpacityBar$OnOpacityChangedListener: void onOpacityChanged(int)>($i0);

        $i0 = virtualinvoke r0.<com.larswerkman.holocolorpicker.OpacityBar: int getOpacity()>();

        r0.<com.larswerkman.holocolorpicker.OpacityBar: int oldChangedListenerOpacity> = $i0;

        return 1;

     label09:
        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $f1 = (float) $i0;

        $b1 = $f0 cmpg $f1;

        if $b1 >= 0 goto label11;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerPosition> = $i0;

        r0.<com.larswerkman.holocolorpicker.OpacityBar: int mColor> = 0;

        $r3 = r0.<com.larswerkman.holocolorpicker.OpacityBar: android.graphics.Paint mBarPointerPaint>;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mColor>;

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i0);

        $r4 = r0.<com.larswerkman.holocolorpicker.OpacityBar: com.larswerkman.holocolorpicker.ColorPicker mPicker>;

        if $r4 == null goto label10;

        $r4 = r0.<com.larswerkman.holocolorpicker.OpacityBar: com.larswerkman.holocolorpicker.ColorPicker mPicker>;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mColor>;

        virtualinvoke $r4.<com.larswerkman.holocolorpicker.ColorPicker: void setNewCenterColor(int)>($i0);

     label10:
        virtualinvoke r0.<com.larswerkman.holocolorpicker.OpacityBar: void invalidate()>();

        goto label08;

     label11:
        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $i2 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarLength>;

        $i0 = $i0 + $i2;

        $f1 = (float) $i0;

        $b1 = $f0 cmpl $f1;

        if $b1 <= 0 goto label08;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $i2 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarLength>;

        $i0 = $i0 + $i2;

        r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerPosition> = $i0;

        $r6 = r0.<com.larswerkman.holocolorpicker.OpacityBar: float[] mHSVColor>;

        $i0 = staticinvoke <android.graphics.Color: int HSVToColor(float[])>($r6);

        r0.<com.larswerkman.holocolorpicker.OpacityBar: int mColor> = $i0;

        $r3 = r0.<com.larswerkman.holocolorpicker.OpacityBar: android.graphics.Paint mBarPointerPaint>;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mColor>;

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i0);

        $r4 = r0.<com.larswerkman.holocolorpicker.OpacityBar: com.larswerkman.holocolorpicker.ColorPicker mPicker>;

        if $r4 == null goto label12;

        $r4 = r0.<com.larswerkman.holocolorpicker.OpacityBar: com.larswerkman.holocolorpicker.ColorPicker mPicker>;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mColor>;

        virtualinvoke $r4.<com.larswerkman.holocolorpicker.ColorPicker: void setNewCenterColor(int)>($i0);

     label12:
        virtualinvoke r0.<com.larswerkman.holocolorpicker.OpacityBar: void invalidate()>();

        goto label08;

     label13:
        r0.<com.larswerkman.holocolorpicker.OpacityBar: boolean mIsMovingPointer> = 0;

     label14:
        return 1;
    }
    public void setColor(int)
    {
        com.larswerkman.holocolorpicker.OpacityBar r0;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1, $f2;
        boolean $z0;
        float[] $r1;
        android.graphics.LinearGradient $r2;
        int[] $r3;
        android.graphics.Shader$TileMode $r4;
        android.graphics.Paint $r5;
        android.graphics.Shader $r6;
        com.larswerkman.holocolorpicker.ColorPicker $r7;

        r0 := @this: com.larswerkman.holocolorpicker.OpacityBar;

        $i0 := @parameter0: int;

        $z0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: boolean mOrientation>;

        if $z0 != 1 goto label3;

        $i1 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarLength>;

        $i2 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $i1 = $i1 + $i2;

        $i2 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarThickness>;

     label1:
        $r1 = r0.<com.larswerkman.holocolorpicker.OpacityBar: float[] mHSVColor>;

        staticinvoke <android.graphics.Color: void colorToHSV(int,float[])>($i0, $r1);

        $r2 = new android.graphics.LinearGradient;

        $i3 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $f2 = (float) $i3;

        $f0 = (float) $i1;

        $f1 = (float) $i2;

        $r3 = newarray (int)[2];

        $r1 = r0.<com.larswerkman.holocolorpicker.OpacityBar: float[] mHSVColor>;

        $i1 = staticinvoke <android.graphics.Color: int HSVToColor(int,float[])>(0, $r1);

        $r3[0] = $i1;

        $r3[1] = $i0;

        $r4 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        specialinvoke $r2.<android.graphics.LinearGradient: void <init>(float,float,float,float,int[],float[],android.graphics.Shader$TileMode)>($f2, 0.0F, $f0, $f1, $r3, null, $r4);

        r0.<com.larswerkman.holocolorpicker.OpacityBar: android.graphics.Shader shader> = $r2;

        $r5 = r0.<com.larswerkman.holocolorpicker.OpacityBar: android.graphics.Paint mBarPaint>;

        $r6 = r0.<com.larswerkman.holocolorpicker.OpacityBar: android.graphics.Shader shader>;

        virtualinvoke $r5.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($r6);

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerPosition>;

        specialinvoke r0.<com.larswerkman.holocolorpicker.OpacityBar: void calculateColor(int)>($i0);

        $r5 = r0.<com.larswerkman.holocolorpicker.OpacityBar: android.graphics.Paint mBarPointerPaint>;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mColor>;

        virtualinvoke $r5.<android.graphics.Paint: void setColor(int)>($i0);

        $r7 = r0.<com.larswerkman.holocolorpicker.OpacityBar: com.larswerkman.holocolorpicker.ColorPicker mPicker>;

        if $r7 == null goto label2;

        $r7 = r0.<com.larswerkman.holocolorpicker.OpacityBar: com.larswerkman.holocolorpicker.ColorPicker mPicker>;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mColor>;

        virtualinvoke $r7.<com.larswerkman.holocolorpicker.ColorPicker: void setNewCenterColor(int)>($i0);

     label2:
        virtualinvoke r0.<com.larswerkman.holocolorpicker.OpacityBar: void invalidate()>();

        return;

     label3:
        $i1 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarThickness>;

        $i2 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarLength>;

        $i3 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $i2 = $i2 + $i3;

        goto label1;
    }
    public void setColorPicker(com.larswerkman.holocolorpicker.ColorPicker)
    {
        com.larswerkman.holocolorpicker.OpacityBar r0;
        com.larswerkman.holocolorpicker.ColorPicker $r1;

        r0 := @this: com.larswerkman.holocolorpicker.OpacityBar;

        $r1 := @parameter0: com.larswerkman.holocolorpicker.ColorPicker;

        r0.<com.larswerkman.holocolorpicker.OpacityBar: com.larswerkman.holocolorpicker.ColorPicker mPicker> = $r1;

        return;
    }
    public void setOnOpacityChangedListener(com.larswerkman.holocolorpicker.OpacityBar$OnOpacityChangedListener)
    {
        com.larswerkman.holocolorpicker.OpacityBar r0;
        com.larswerkman.holocolorpicker.OpacityBar$OnOpacityChangedListener $r1;

        r0 := @this: com.larswerkman.holocolorpicker.OpacityBar;

        $r1 := @parameter0: com.larswerkman.holocolorpicker.OpacityBar$OnOpacityChangedListener;

        r0.<com.larswerkman.holocolorpicker.OpacityBar: com.larswerkman.holocolorpicker.OpacityBar$OnOpacityChangedListener onOpacityChangedListener> = $r1;

        return;
    }
    public void setOpacity(int)
    {
        com.larswerkman.holocolorpicker.OpacityBar r0;
        int $i0, $i1;
        float $f0, $f1;
        android.graphics.Paint $r1;
        com.larswerkman.holocolorpicker.ColorPicker $r2;

        r0 := @this: com.larswerkman.holocolorpicker.OpacityBar;

        $i0 := @parameter0: int;

        $f0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: float mOpacToPosFactor>;

        $f1 = (float) $i0;

        $f0 = $f0 * $f1;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $i1 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerHaloRadius>;

        $i0 = $i0 + $i1;

        r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerPosition> = $i0;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mBarPointerPosition>;

        specialinvoke r0.<com.larswerkman.holocolorpicker.OpacityBar: void calculateColor(int)>($i0);

        $r1 = r0.<com.larswerkman.holocolorpicker.OpacityBar: android.graphics.Paint mBarPointerPaint>;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mColor>;

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);

        $r2 = r0.<com.larswerkman.holocolorpicker.OpacityBar: com.larswerkman.holocolorpicker.ColorPicker mPicker>;

        if $r2 == null goto label1;

        $r2 = r0.<com.larswerkman.holocolorpicker.OpacityBar: com.larswerkman.holocolorpicker.ColorPicker mPicker>;

        $i0 = r0.<com.larswerkman.holocolorpicker.OpacityBar: int mColor>;

        virtualinvoke $r2.<com.larswerkman.holocolorpicker.ColorPicker: void setNewCenterColor(int)>($i0);

     label1:
        virtualinvoke r0.<com.larswerkman.holocolorpicker.OpacityBar: void invalidate()>();

        return;
    }
