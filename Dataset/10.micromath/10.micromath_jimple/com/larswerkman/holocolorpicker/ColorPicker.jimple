com.larswerkman.holocolorpicker.ColorPicker extends android.view.View
private static final int[] COLORS
private static final java.lang.String STATE_ANGLE
private static final java.lang.String STATE_OLD_COLOR
private static final java.lang.String STATE_PARENT
private static final java.lang.String STATE_SHOW_OLD_COLOR
private float mAngle
private android.graphics.Paint mCenterHaloPaint
private int mCenterNewColor
private android.graphics.Paint mCenterNewPaint
private int mCenterOldColor
private android.graphics.Paint mCenterOldPaint
private android.graphics.RectF mCenterRectangle
private int mColor
private int mColorCenterHaloRadius
private int mColorCenterRadius
private int mColorPointerHaloRadius
private int mColorPointerRadius
private android.graphics.Paint mColorWheelPaint
private int mColorWheelRadius
private android.graphics.RectF mColorWheelRectangle
private int mColorWheelThickness
private float[] mHSV
private com.larswerkman.holocolorpicker.OpacityBar mOpacityBar
private android.graphics.Paint mPointerColor
private android.graphics.Paint mPointerHaloPaint
private int mPreferredColorCenterHaloRadius
private int mPreferredColorCenterRadius
private int mPreferredColorWheelRadius
private com.larswerkman.holocolorpicker.SVBar mSVbar
private com.larswerkman.holocolorpicker.SaturationBar mSaturationBar
private boolean mShowCenterOldColor
private float mSlopX
private float mSlopY
private boolean mTouchAnywhereOnColorWheelEnabled
private float mTranslationOffset
private boolean mUserIsMovingPointer
private com.larswerkman.holocolorpicker.ValueBar mValueBar
private int oldChangedListenerColor
private int oldSelectedListenerColor
private com.larswerkman.holocolorpicker.ColorPicker$OnColorChangedListener onColorChangedListener
private com.larswerkman.holocolorpicker.ColorPicker$OnColorSelectedListener onColorSelectedListener
    static void <clinit>()
    {
        int[] $r0;

        $r0 = newarray (int)[7];

        $r0[0] = -65536;

        $r0[1] = -65281;

        $r0[2] = -16776961;

        $r0[3] = -16711681;

        $r0[4] = -16711936;

        $r0[5] = -256;

        $r0[6] = -65536;

        <com.larswerkman.holocolorpicker.ColorPicker: int[] COLORS> = $r0;

        return;
    }
    public void <init>(android.content.Context)
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        android.content.Context $r1;
        android.graphics.RectF $r2;
        float[] $r3;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context)>($r1);

        $r2 = new android.graphics.RectF;

        specialinvoke $r2.<android.graphics.RectF: void <init>()>();

        r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.RectF mColorWheelRectangle> = $r2;

        $r2 = new android.graphics.RectF;

        specialinvoke $r2.<android.graphics.RectF: void <init>()>();

        r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.RectF mCenterRectangle> = $r2;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: boolean mUserIsMovingPointer> = 0;

        $r3 = newarray (float)[3];

        r0.<com.larswerkman.holocolorpicker.ColorPicker: float[] mHSV> = $r3;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.SVBar mSVbar> = null;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.OpacityBar mOpacityBar> = null;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.SaturationBar mSaturationBar> = null;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: boolean mTouchAnywhereOnColorWheelEnabled> = 1;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.ValueBar mValueBar> = null;

        specialinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: void init(android.util.AttributeSet,int)>(null, 0);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        android.graphics.RectF $r3;
        float[] $r4;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r3 = new android.graphics.RectF;

        specialinvoke $r3.<android.graphics.RectF: void <init>()>();

        r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.RectF mColorWheelRectangle> = $r3;

        $r3 = new android.graphics.RectF;

        specialinvoke $r3.<android.graphics.RectF: void <init>()>();

        r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.RectF mCenterRectangle> = $r3;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: boolean mUserIsMovingPointer> = 0;

        $r4 = newarray (float)[3];

        r0.<com.larswerkman.holocolorpicker.ColorPicker: float[] mHSV> = $r4;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.SVBar mSVbar> = null;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.OpacityBar mOpacityBar> = null;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.SaturationBar mSaturationBar> = null;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: boolean mTouchAnywhereOnColorWheelEnabled> = 1;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.ValueBar mValueBar> = null;

        specialinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: void init(android.util.AttributeSet,int)>($r2, 0);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        android.graphics.RectF $r3;
        float[] $r4;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r3 = new android.graphics.RectF;

        specialinvoke $r3.<android.graphics.RectF: void <init>()>();

        r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.RectF mColorWheelRectangle> = $r3;

        $r3 = new android.graphics.RectF;

        specialinvoke $r3.<android.graphics.RectF: void <init>()>();

        r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.RectF mCenterRectangle> = $r3;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: boolean mUserIsMovingPointer> = 0;

        $r4 = newarray (float)[3];

        r0.<com.larswerkman.holocolorpicker.ColorPicker: float[] mHSV> = $r4;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.SVBar mSVbar> = null;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.OpacityBar mOpacityBar> = null;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.SaturationBar mSaturationBar> = null;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: boolean mTouchAnywhereOnColorWheelEnabled> = 1;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.ValueBar mValueBar> = null;

        specialinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: void init(android.util.AttributeSet,int)>($r2, $i0);

        return;
    }
    private int ave(int, int, float)
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        int $i0, $i1;
        float $f0, $f1;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $f0 := @parameter2: float;

        $i1 = $i1 - $i0;

        $f1 = (float) $i1;

        $f0 = $f1 * $f0;

        $i1 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $i0 = $i1 + $i0;

        return $i0;
    }
    private int calculateColor(float)
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        float $f0, $f1;
        int i0, i1, i2, $i4, $i5, $i6;
        double $d0;
        byte $b3;
        int[] $r1, $r2;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        $f0 := @parameter0: float;

        $d0 = (double) $f0;

        $d0 = $d0 / 6.283185307179586;

        $f0 = (float) $d0;

        $b3 = $f0 cmpg 0.0F;

        if $b3 >= 0 goto label1;

        $f0 = $f0 + 1.0F;

     label1:
        $b3 = $f0 cmpg 0.0F;

        if $b3 > 0 goto label2;

        $r1 = <com.larswerkman.holocolorpicker.ColorPicker: int[] COLORS>;

        i0 = $r1[0];

        r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColor> = i0;

        $r1 = <com.larswerkman.holocolorpicker.ColorPicker: int[] COLORS>;

        i0 = $r1[0];

        return i0;

     label2:
        $b3 = $f0 cmpl 1.0F;

        if $b3 < 0 goto label3;

        $r1 = <com.larswerkman.holocolorpicker.ColorPicker: int[] COLORS>;

        $r2 = <com.larswerkman.holocolorpicker.ColorPicker: int[] COLORS>;

        i0 = lengthof $r2;

        i0 = i0 + -1;

        i0 = $r1[i0];

        r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColor> = i0;

        $r1 = <com.larswerkman.holocolorpicker.ColorPicker: int[] COLORS>;

        $r2 = <com.larswerkman.holocolorpicker.ColorPicker: int[] COLORS>;

        i0 = lengthof $r2;

        i0 = i0 + -1;

        i0 = $r1[i0];

        return i0;

     label3:
        $r1 = <com.larswerkman.holocolorpicker.ColorPicker: int[] COLORS>;

        i0 = lengthof $r1;

        i0 = i0 + -1;

        $f1 = (float) i0;

        $f0 = $f0 * $f1;

        i2 = (int) $f0;

        $f1 = (float) i2;

        $f0 = $f0 - $f1;

        $r1 = <com.larswerkman.holocolorpicker.ColorPicker: int[] COLORS>;

        i0 = $r1[i2];

        $r1 = <com.larswerkman.holocolorpicker.ColorPicker: int[] COLORS>;

        i2 = i2 + 1;

        i1 = $r1[i2];

        i2 = staticinvoke <android.graphics.Color: int alpha(int)>(i0);

        $i4 = staticinvoke <android.graphics.Color: int alpha(int)>(i1);

        i2 = specialinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: int ave(int,int,float)>(i2, $i4, $f0);

        $i4 = staticinvoke <android.graphics.Color: int red(int)>(i0);

        $i5 = staticinvoke <android.graphics.Color: int red(int)>(i1);

        $i4 = specialinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: int ave(int,int,float)>($i4, $i5, $f0);

        $i5 = staticinvoke <android.graphics.Color: int green(int)>(i0);

        $i6 = staticinvoke <android.graphics.Color: int green(int)>(i1);

        $i5 = specialinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: int ave(int,int,float)>($i5, $i6, $f0);

        i0 = staticinvoke <android.graphics.Color: int blue(int)>(i0);

        i1 = staticinvoke <android.graphics.Color: int blue(int)>(i1);

        i0 = specialinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: int ave(int,int,float)>(i0, i1, $f0);

        i1 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>(i2, $i4, $i5, i0);

        r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColor> = i1;

        i0 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>(i2, $i4, $i5, i0);

        return i0;
    }
    private float[] calculatePointerPosition(float)
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        float $f0, f1;
        int $i0;
        double $d0, $d1;
        float[] $r1;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        $f0 := @parameter0: float;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorWheelRadius>;

        $d0 = (double) $i0;

        $d1 = (double) $f0;

        $d1 = staticinvoke <java.lang.Math: double cos(double)>($d1);

        $d0 = $d0 * $d1;

        f1 = (float) $d0;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorWheelRadius>;

        $d0 = (double) $i0;

        $d1 = (double) $f0;

        $d1 = staticinvoke <java.lang.Math: double sin(double)>($d1);

        $d0 = $d0 * $d1;

        $f0 = (float) $d0;

        $r1 = newarray (float)[2];

        $r1[0] = f1;

        $r1[1] = $f0;

        return $r1;
    }
    private float colorToAngle(int)
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        int $i0;
        float[] r1;
        double $d0;
        float $f0;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        $i0 := @parameter0: int;

        r1 = newarray (float)[3];

        staticinvoke <android.graphics.Color: void colorToHSV(int,float[])>($i0, r1);

        $f0 = r1[0];

        $f0 = neg $f0;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double toRadians(double)>($d0);

        $f0 = (float) $d0;

        return $f0;
    }
    private void init(android.util.AttributeSet, int)
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        android.util.AttributeSet $r1;
        int $i0;
        android.graphics.SweepGradient r2;
        android.content.Context $r3;
        int[] $r4;
        android.content.res.TypedArray $r5;
        android.content.res.Resources $r6;
        android.graphics.Paint $r7;
        android.graphics.Paint$Style $r8;
        float $f0;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        $r1 := @parameter0: android.util.AttributeSet;

        $i0 := @parameter1: int;

        $r3 = virtualinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: android.content.Context getContext()>();

        $r4 = <com.mkulesh.micromath.plus.R$styleable: int[] ColorPicker>;

        $r5 = virtualinvoke $r3.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r1, $r4, $i0, 0);

        $r3 = virtualinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: android.content.Context getContext()>();

        $r6 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r6.<android.content.res.Resources: int getDimensionPixelSize(int)>(2131230818);

        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(1, $i0);

        r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorWheelThickness> = $i0;

        $i0 = virtualinvoke $r6.<android.content.res.Resources: int getDimensionPixelSize(int)>(2131230817);

        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, $i0);

        r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorWheelRadius> = $i0;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorWheelRadius>;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: int mPreferredColorWheelRadius> = $i0;

        $i0 = virtualinvoke $r6.<android.content.res.Resources: int getDimensionPixelSize(int)>(2131230814);

        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(2, $i0);

        r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorCenterRadius> = $i0;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorCenterRadius>;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: int mPreferredColorCenterRadius> = $i0;

        $i0 = virtualinvoke $r6.<android.content.res.Resources: int getDimensionPixelSize(int)>(2131230813);

        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(3, $i0);

        r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorCenterHaloRadius> = $i0;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorCenterHaloRadius>;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: int mPreferredColorCenterHaloRadius> = $i0;

        $i0 = virtualinvoke $r6.<android.content.res.Resources: int getDimensionPixelSize(int)>(2131230816);

        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(4, $i0);

        r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorPointerRadius> = $i0;

        $i0 = virtualinvoke $r6.<android.content.res.Resources: int getDimensionPixelSize(int)>(2131230815);

        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(5, $i0);

        r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorPointerHaloRadius> = $i0;

        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        r0.<com.larswerkman.holocolorpicker.ColorPicker: float mAngle> = -1.5707964F;

        r2 = new android.graphics.SweepGradient;

        $r4 = <com.larswerkman.holocolorpicker.ColorPicker: int[] COLORS>;

        specialinvoke r2.<android.graphics.SweepGradient: void <init>(float,float,int[],float[])>(0.0F, 0.0F, $r4, null);

        $r7 = new android.graphics.Paint;

        specialinvoke $r7.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mColorWheelPaint> = $r7;

        $r7 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mColorWheelPaint>;

        virtualinvoke $r7.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(r2);

        $r7 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mColorWheelPaint>;

        $r8 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r7.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r8);

        $r7 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mColorWheelPaint>;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorWheelThickness>;

        $f0 = (float) $i0;

        virtualinvoke $r7.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        $r7 = new android.graphics.Paint;

        specialinvoke $r7.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mPointerHaloPaint> = $r7;

        $r7 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mPointerHaloPaint>;

        virtualinvoke $r7.<android.graphics.Paint: void setColor(int)>(-16777216);

        $r7 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mPointerHaloPaint>;

        virtualinvoke $r7.<android.graphics.Paint: void setAlpha(int)>(80);

        $r7 = new android.graphics.Paint;

        specialinvoke $r7.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mPointerColor> = $r7;

        $r7 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mPointerColor>;

        $f0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: float mAngle>;

        $i0 = specialinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: int calculateColor(float)>($f0);

        virtualinvoke $r7.<android.graphics.Paint: void setColor(int)>($i0);

        $r7 = new android.graphics.Paint;

        specialinvoke $r7.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mCenterNewPaint> = $r7;

        $r7 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mCenterNewPaint>;

        $f0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: float mAngle>;

        $i0 = specialinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: int calculateColor(float)>($f0);

        virtualinvoke $r7.<android.graphics.Paint: void setColor(int)>($i0);

        $r7 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mCenterNewPaint>;

        $r8 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r7.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r8);

        $r7 = new android.graphics.Paint;

        specialinvoke $r7.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mCenterOldPaint> = $r7;

        $r7 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mCenterOldPaint>;

        $f0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: float mAngle>;

        $i0 = specialinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: int calculateColor(float)>($f0);

        virtualinvoke $r7.<android.graphics.Paint: void setColor(int)>($i0);

        $r7 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mCenterOldPaint>;

        $r8 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r7.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r8);

        $r7 = new android.graphics.Paint;

        specialinvoke $r7.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mCenterHaloPaint> = $r7;

        $r7 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mCenterHaloPaint>;

        virtualinvoke $r7.<android.graphics.Paint: void setColor(int)>(-16777216);

        $r7 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mCenterHaloPaint>;

        virtualinvoke $r7.<android.graphics.Paint: void setAlpha(int)>(0);

        $f0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: float mAngle>;

        $i0 = specialinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: int calculateColor(float)>($f0);

        r0.<com.larswerkman.holocolorpicker.ColorPicker: int mCenterNewColor> = $i0;

        $f0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: float mAngle>;

        $i0 = specialinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: int calculateColor(float)>($f0);

        r0.<com.larswerkman.holocolorpicker.ColorPicker: int mCenterOldColor> = $i0;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: boolean mShowCenterOldColor> = 1;

        return;
    }
    public void addOpacityBar(com.larswerkman.holocolorpicker.OpacityBar)
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        com.larswerkman.holocolorpicker.OpacityBar $r1;
        int $i0;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        $r1 := @parameter0: com.larswerkman.holocolorpicker.OpacityBar;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.OpacityBar mOpacityBar> = $r1;

        $r1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.OpacityBar mOpacityBar>;

        virtualinvoke $r1.<com.larswerkman.holocolorpicker.OpacityBar: void setColorPicker(com.larswerkman.holocolorpicker.ColorPicker)>(r0);

        $r1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.OpacityBar mOpacityBar>;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColor>;

        virtualinvoke $r1.<com.larswerkman.holocolorpicker.OpacityBar: void setColor(int)>($i0);

        return;
    }
    public void addSVBar(com.larswerkman.holocolorpicker.SVBar)
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        com.larswerkman.holocolorpicker.SVBar $r1;
        int $i0;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        $r1 := @parameter0: com.larswerkman.holocolorpicker.SVBar;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.SVBar mSVbar> = $r1;

        $r1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.SVBar mSVbar>;

        virtualinvoke $r1.<com.larswerkman.holocolorpicker.SVBar: void setColorPicker(com.larswerkman.holocolorpicker.ColorPicker)>(r0);

        $r1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.SVBar mSVbar>;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColor>;

        virtualinvoke $r1.<com.larswerkman.holocolorpicker.SVBar: void setColor(int)>($i0);

        return;
    }
    public void addSaturationBar(com.larswerkman.holocolorpicker.SaturationBar)
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        com.larswerkman.holocolorpicker.SaturationBar $r1;
        int $i0;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        $r1 := @parameter0: com.larswerkman.holocolorpicker.SaturationBar;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.SaturationBar mSaturationBar> = $r1;

        $r1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.SaturationBar mSaturationBar>;

        virtualinvoke $r1.<com.larswerkman.holocolorpicker.SaturationBar: void setColorPicker(com.larswerkman.holocolorpicker.ColorPicker)>(r0);

        $r1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.SaturationBar mSaturationBar>;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColor>;

        virtualinvoke $r1.<com.larswerkman.holocolorpicker.SaturationBar: void setColor(int)>($i0);

        return;
    }
    public void addValueBar(com.larswerkman.holocolorpicker.ValueBar)
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        com.larswerkman.holocolorpicker.ValueBar $r1;
        int $i0;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        $r1 := @parameter0: com.larswerkman.holocolorpicker.ValueBar;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.ValueBar mValueBar> = $r1;

        $r1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.ValueBar mValueBar>;

        virtualinvoke $r1.<com.larswerkman.holocolorpicker.ValueBar: void setColorPicker(com.larswerkman.holocolorpicker.ColorPicker)>(r0);

        $r1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.ValueBar mValueBar>;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColor>;

        virtualinvoke $r1.<com.larswerkman.holocolorpicker.ValueBar: void setColor(int)>($i0);

        return;
    }
    public void changeOpacityBarColor(int)
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        int $i0;
        com.larswerkman.holocolorpicker.OpacityBar $r1;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        $i0 := @parameter0: int;

        $r1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.OpacityBar mOpacityBar>;

        if $r1 == null goto label1;

        $r1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.OpacityBar mOpacityBar>;

        virtualinvoke $r1.<com.larswerkman.holocolorpicker.OpacityBar: void setColor(int)>($i0);

     label1:
        return;
    }
    public void changeSaturationBarColor(int)
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        int $i0;
        com.larswerkman.holocolorpicker.SaturationBar $r1;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        $i0 := @parameter0: int;

        $r1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.SaturationBar mSaturationBar>;

        if $r1 == null goto label1;

        $r1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.SaturationBar mSaturationBar>;

        virtualinvoke $r1.<com.larswerkman.holocolorpicker.SaturationBar: void setColor(int)>($i0);

     label1:
        return;
    }
    public void changeValueBarColor(int)
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        int $i0;
        com.larswerkman.holocolorpicker.ValueBar $r1;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        $i0 := @parameter0: int;

        $r1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.ValueBar mValueBar>;

        if $r1 == null goto label1;

        $r1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.ValueBar mValueBar>;

        virtualinvoke $r1.<com.larswerkman.holocolorpicker.ValueBar: void setColor(int)>($i0);

     label1:
        return;
    }
    public int getColor()
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        int i0;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mCenterNewColor>;

        return i0;
    }
    public int getOldCenterColor()
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        int i0;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mCenterOldColor>;

        return i0;
    }
    public com.larswerkman.holocolorpicker.ColorPicker$OnColorChangedListener getOnColorChangedListener()
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        com.larswerkman.holocolorpicker.ColorPicker$OnColorChangedListener r1;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        r1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.ColorPicker$OnColorChangedListener onColorChangedListener>;

        return r1;
    }
    public com.larswerkman.holocolorpicker.ColorPicker$OnColorSelectedListener getOnColorSelectedListener()
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        com.larswerkman.holocolorpicker.ColorPicker$OnColorSelectedListener r1;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        r1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.ColorPicker$OnColorSelectedListener onColorSelectedListener>;

        return r1;
    }
    public boolean getShowOldCenterColor()
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        boolean z0;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        z0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: boolean mShowCenterOldColor>;

        return z0;
    }
    public boolean getTouchAnywhereOnColorWheel()
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        boolean z0;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        z0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: boolean mTouchAnywhereOnColorWheelEnabled>;

        return z0;
    }
    public boolean hasOpacityBar()
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        com.larswerkman.holocolorpicker.OpacityBar $r1;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        $r1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.OpacityBar mOpacityBar>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean hasSVBar()
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        com.larswerkman.holocolorpicker.SVBar $r1;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        $r1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.SVBar mSVbar>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean hasSaturationBar()
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        com.larswerkman.holocolorpicker.SaturationBar $r1;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        $r1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.SaturationBar mSaturationBar>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean hasValueBar()
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        com.larswerkman.holocolorpicker.ValueBar $r1;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        $r1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.ValueBar mValueBar>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    protected void onDraw(android.graphics.Canvas)
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        android.graphics.Canvas $r1;
        float[] $r2;
        float $f0, $f1, $f2;
        android.graphics.RectF $r3;
        android.graphics.Paint $r4;
        int $i0;
        boolean $z0;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        $r1 := @parameter0: android.graphics.Canvas;

        $f0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: float mTranslationOffset>;

        $f1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: float mTranslationOffset>;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $r3 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.RectF mColorWheelRectangle>;

        $r4 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mColorWheelPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawOval(android.graphics.RectF,android.graphics.Paint)>($r3, $r4);

        $f0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: float mAngle>;

        $r2 = specialinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: float[] calculatePointerPosition(float)>($f0);

        $f0 = $r2[0];

        $f1 = $r2[1];

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorPointerHaloRadius>;

        $f2 = (float) $i0;

        $r4 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mPointerHaloPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $r4);

        $f0 = $r2[0];

        $f1 = $r2[1];

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorPointerRadius>;

        $f2 = (float) $i0;

        $r4 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mPointerColor>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $r4);

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorCenterHaloRadius>;

        $f0 = (float) $i0;

        $r4 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mCenterHaloPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>(0.0F, 0.0F, $f0, $r4);

        $z0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: boolean mShowCenterOldColor>;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.RectF mCenterRectangle>;

        $r4 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mCenterOldPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>($r3, 90.0F, 180.0F, 1, $r4);

        $r3 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.RectF mCenterRectangle>;

        $r4 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mCenterNewPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>($r3, 270.0F, 180.0F, 1, $r4);

        return;

     label1:
        $r3 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.RectF mCenterRectangle>;

        $r4 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mCenterNewPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>($r3, 0.0F, 360.0F, 1, $r4);

        return;
    }
    protected void onMeasure(int, int)
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        int $i0, $i1, i2, $i3, $i4;
        float $f0, $f1, $f2, $f3;
        android.graphics.RectF $r1;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        i2 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mPreferredColorWheelRadius>;

        $i3 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorPointerHaloRadius>;

        i2 = i2 + $i3;

        i2 = i2 * 2;

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        $i4 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        $i0 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        $i1 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        if $i3 != 1073741824 goto label3;

        $i3 = $i4;

     label1:
        if $i0 != 1073741824 goto label5;

        $i0 = $i1;

     label2:
        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i0);

        virtualinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: void setMeasuredDimension(int,int)>($i0, $i0);

        $f0 = (float) $i0;

        $f0 = $f0 * 0.5F;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: float mTranslationOffset> = $f0;

        $i0 = $i0 / 2;

        $i1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorWheelThickness>;

        $i0 = $i0 - $i1;

        $i1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorPointerHaloRadius>;

        $i0 = $i0 - $i1;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorWheelRadius> = $i0;

        $r1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.RectF mColorWheelRectangle>;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorWheelRadius>;

        $i0 = neg $i0;

        $f0 = (float) $i0;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorWheelRadius>;

        $i0 = neg $i0;

        $f1 = (float) $i0;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorWheelRadius>;

        $f2 = (float) $i0;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorWheelRadius>;

        $f3 = (float) $i0;

        virtualinvoke $r1.<android.graphics.RectF: void set(float,float,float,float)>($f0, $f1, $f2, $f3);

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mPreferredColorCenterRadius>;

        $f0 = (float) $i0;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorWheelRadius>;

        $f1 = (float) $i0;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mPreferredColorWheelRadius>;

        $f2 = (float) $i0;

        $f1 = $f1 / $f2;

        $f0 = $f0 * $f1;

        $i0 = (int) $f0;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorCenterRadius> = $i0;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mPreferredColorCenterHaloRadius>;

        $f0 = (float) $i0;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorWheelRadius>;

        $f1 = (float) $i0;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mPreferredColorWheelRadius>;

        $f2 = (float) $i0;

        $f1 = $f1 / $f2;

        $f0 = $f0 * $f1;

        $i0 = (int) $f0;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorCenterHaloRadius> = $i0;

        $r1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.RectF mCenterRectangle>;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorCenterRadius>;

        $i0 = neg $i0;

        $f0 = (float) $i0;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorCenterRadius>;

        $i0 = neg $i0;

        $f1 = (float) $i0;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorCenterRadius>;

        $f2 = (float) $i0;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorCenterRadius>;

        $f3 = (float) $i0;

        virtualinvoke $r1.<android.graphics.RectF: void set(float,float,float,float)>($f0, $f1, $f2, $f3);

        return;

     label3:
        if $i3 != -2147483648 goto label4;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i4);

        goto label1;

     label4:
        $i3 = i2;

        goto label1;

     label5:
        if $i0 != -2147483648 goto label6;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i1);

        goto label2;

     label6:
        $i0 = i2;

        goto label2;
    }
    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        android.os.Parcelable $r1;
        android.os.Bundle r2;
        float $f0;
        int $i0;
        boolean $z0;
        android.graphics.Paint $r3;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        $r1 := @parameter0: android.os.Parcelable;

        r2 = (android.os.Bundle) $r1;

        $r1 = virtualinvoke r2.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("parent");

        specialinvoke r0.<android.view.View: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        $f0 = virtualinvoke r2.<android.os.Bundle: float getFloat(java.lang.String)>("angle");

        r0.<com.larswerkman.holocolorpicker.ColorPicker: float mAngle> = $f0;

        $i0 = virtualinvoke r2.<android.os.Bundle: int getInt(java.lang.String)>("color");

        virtualinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: void setOldCenterColor(int)>($i0);

        $z0 = virtualinvoke r2.<android.os.Bundle: boolean getBoolean(java.lang.String)>("showColor");

        r0.<com.larswerkman.holocolorpicker.ColorPicker: boolean mShowCenterOldColor> = $z0;

        $f0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: float mAngle>;

        $i0 = specialinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: int calculateColor(float)>($f0);

        $r3 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mPointerColor>;

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i0);

        virtualinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: void setNewCenterColor(int)>($i0);

        return;
    }
    protected android.os.Parcelable onSaveInstanceState()
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        android.os.Bundle r1;
        android.os.Parcelable $r2;
        float $f0;
        int $i0;
        boolean $z0;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        $r2 = specialinvoke r0.<android.view.View: android.os.Parcelable onSaveInstanceState()>();

        r1 = new android.os.Bundle;

        specialinvoke r1.<android.os.Bundle: void <init>()>();

        virtualinvoke r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("parent", $r2);

        $f0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: float mAngle>;

        virtualinvoke r1.<android.os.Bundle: void putFloat(java.lang.String,float)>("angle", $f0);

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mCenterOldColor>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("color", $i0);

        $z0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: boolean mShowCenterOldColor>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("showColor", $z0);

        return r1;
    }
    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        android.view.MotionEvent $r1;
        float f0, f1, $f2, $f3;
        android.view.ViewParent $r2;
        int $i0, $i2;
        float[] $r3;
        byte $b1;
        boolean $z0;
        android.graphics.Paint $r4;
        double $d0, $d1;
        com.larswerkman.holocolorpicker.OpacityBar $r5;
        com.larswerkman.holocolorpicker.ValueBar $r6;
        com.larswerkman.holocolorpicker.SaturationBar $r7;
        com.larswerkman.holocolorpicker.SVBar $r8;
        com.larswerkman.holocolorpicker.ColorPicker$OnColorSelectedListener $r9;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        $r1 := @parameter0: android.view.MotionEvent;

        $r2 = virtualinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: android.view.ViewParent getParent()>();

        interfaceinvoke $r2.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

        f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        f1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: float mTranslationOffset>;

        f0 = f0 - f1;

        f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $f2 = r0.<com.larswerkman.holocolorpicker.ColorPicker: float mTranslationOffset>;

        f1 = f1 - $f2;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        lookupswitch($i0)
        {
            case 0: goto label02;
            case 1: goto label12;
            case 2: goto label06;
            case 3: goto label14;
            default: goto label01;
        };

     label01:
        return 1;

     label02:
        $f2 = r0.<com.larswerkman.holocolorpicker.ColorPicker: float mAngle>;

        $r3 = specialinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: float[] calculatePointerPosition(float)>($f2);

        $f2 = $r3[0];

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorPointerHaloRadius>;

        $f3 = (float) $i0;

        $f2 = $f2 - $f3;

        $b1 = f0 cmpl $f2;

        if $b1 < 0 goto label03;

        $f2 = $r3[0];

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorPointerHaloRadius>;

        $f3 = (float) $i0;

        $f2 = $f2 + $f3;

        $b1 = f0 cmpg $f2;

        if $b1 > 0 goto label03;

        $f2 = $r3[1];

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorPointerHaloRadius>;

        $f3 = (float) $i0;

        $f2 = $f2 - $f3;

        $b1 = f1 cmpl $f2;

        if $b1 < 0 goto label03;

        $f2 = $r3[1];

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorPointerHaloRadius>;

        $f3 = (float) $i0;

        $f2 = $f2 + $f3;

        $b1 = f1 cmpg $f2;

        if $b1 > 0 goto label03;

        $f2 = $r3[0];

        f0 = f0 - $f2;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: float mSlopX> = f0;

        f0 = $r3[1];

        f0 = f1 - f0;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: float mSlopY> = f0;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: boolean mUserIsMovingPointer> = 1;

        virtualinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: void invalidate()>();

        goto label01;

     label03:
        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorCenterRadius>;

        $i0 = neg $i0;

        $f2 = (float) $i0;

        $b1 = f0 cmpl $f2;

        if $b1 < 0 goto label04;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorCenterRadius>;

        $f2 = (float) $i0;

        $b1 = f0 cmpg $f2;

        if $b1 > 0 goto label04;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorCenterRadius>;

        $i0 = neg $i0;

        $f2 = (float) $i0;

        $b1 = f1 cmpl $f2;

        if $b1 < 0 goto label04;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorCenterRadius>;

        $f2 = (float) $i0;

        $b1 = f1 cmpg $f2;

        if $b1 > 0 goto label04;

        $z0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: boolean mShowCenterOldColor>;

        if $z0 == 0 goto label04;

        $r4 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mCenterHaloPaint>;

        virtualinvoke $r4.<android.graphics.Paint: void setAlpha(int)>(80);

        $i0 = virtualinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: int getOldCenterColor()>();

        virtualinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: void setColor(int)>($i0);

        virtualinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: void invalidate()>();

        goto label01;

     label04:
        $f2 = f0 * f0;

        $f3 = f1 * f1;

        $f2 = $f2 + $f3;

        $d0 = (double) $f2;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorWheelRadius>;

        $i2 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorPointerHaloRadius>;

        $i0 = $i0 + $i2;

        $d1 = (double) $i0;

        $b1 = $d0 cmpg $d1;

        if $b1 > 0 goto label05;

        f0 = f0 * f0;

        f1 = f1 * f1;

        f0 = f0 + f1;

        $d0 = (double) f0;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorWheelRadius>;

        $i2 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColorPointerHaloRadius>;

        $i0 = $i0 - $i2;

        $d1 = (double) $i0;

        $b1 = $d0 cmpl $d1;

        if $b1 < 0 goto label05;

        $z0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: boolean mTouchAnywhereOnColorWheelEnabled>;

        if $z0 == 0 goto label05;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: boolean mUserIsMovingPointer> = 1;

        virtualinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: void invalidate()>();

        goto label01;

     label05:
        $r2 = virtualinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: android.view.ViewParent getParent()>();

        interfaceinvoke $r2.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(0);

        return 0;

     label06:
        $z0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: boolean mUserIsMovingPointer>;

        if $z0 == 0 goto label11;

        $f2 = r0.<com.larswerkman.holocolorpicker.ColorPicker: float mSlopY>;

        f1 = f1 - $f2;

        $d0 = (double) f1;

        f1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: float mSlopX>;

        f0 = f0 - f1;

        $d1 = (double) f0;

        $d0 = staticinvoke <java.lang.Math: double atan2(double,double)>($d0, $d1);

        f0 = (float) $d0;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: float mAngle> = f0;

        $r4 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mPointerColor>;

        f0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: float mAngle>;

        $i0 = specialinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: int calculateColor(float)>(f0);

        virtualinvoke $r4.<android.graphics.Paint: void setColor(int)>($i0);

        f0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: float mAngle>;

        $i0 = specialinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: int calculateColor(float)>(f0);

        r0.<com.larswerkman.holocolorpicker.ColorPicker: int mCenterNewColor> = $i0;

        virtualinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: void setNewCenterColor(int)>($i0);

        $r5 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.OpacityBar mOpacityBar>;

        if $r5 == null goto label07;

        $r5 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.OpacityBar mOpacityBar>;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColor>;

        virtualinvoke $r5.<com.larswerkman.holocolorpicker.OpacityBar: void setColor(int)>($i0);

     label07:
        $r6 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.ValueBar mValueBar>;

        if $r6 == null goto label08;

        $r6 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.ValueBar mValueBar>;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColor>;

        virtualinvoke $r6.<com.larswerkman.holocolorpicker.ValueBar: void setColor(int)>($i0);

     label08:
        $r7 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.SaturationBar mSaturationBar>;

        if $r7 == null goto label09;

        $r7 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.SaturationBar mSaturationBar>;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColor>;

        virtualinvoke $r7.<com.larswerkman.holocolorpicker.SaturationBar: void setColor(int)>($i0);

     label09:
        $r8 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.SVBar mSVbar>;

        if $r8 == null goto label10;

        $r8 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.SVBar mSVbar>;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColor>;

        virtualinvoke $r8.<com.larswerkman.holocolorpicker.SVBar: void setColor(int)>($i0);

     label10:
        virtualinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: void invalidate()>();

        goto label01;

     label11:
        $r2 = virtualinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: android.view.ViewParent getParent()>();

        interfaceinvoke $r2.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(0);

        return 0;

     label12:
        r0.<com.larswerkman.holocolorpicker.ColorPicker: boolean mUserIsMovingPointer> = 0;

        $r4 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mCenterHaloPaint>;

        virtualinvoke $r4.<android.graphics.Paint: void setAlpha(int)>(0);

        $r9 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.ColorPicker$OnColorSelectedListener onColorSelectedListener>;

        if $r9 == null goto label13;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mCenterNewColor>;

        $i2 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int oldSelectedListenerColor>;

        if $i0 == $i2 goto label13;

        $r9 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.ColorPicker$OnColorSelectedListener onColorSelectedListener>;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mCenterNewColor>;

        interfaceinvoke $r9.<com.larswerkman.holocolorpicker.ColorPicker$OnColorSelectedListener: void onColorSelected(int)>($i0);

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mCenterNewColor>;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: int oldSelectedListenerColor> = $i0;

     label13:
        virtualinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: void invalidate()>();

        goto label01;

     label14:
        $r9 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.ColorPicker$OnColorSelectedListener onColorSelectedListener>;

        if $r9 == null goto label01;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mCenterNewColor>;

        $i2 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int oldSelectedListenerColor>;

        if $i0 == $i2 goto label01;

        $r9 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.ColorPicker$OnColorSelectedListener onColorSelectedListener>;

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mCenterNewColor>;

        interfaceinvoke $r9.<com.larswerkman.holocolorpicker.ColorPicker$OnColorSelectedListener: void onColorSelected(int)>($i0);

        $i0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mCenterNewColor>;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: int oldSelectedListenerColor> = $i0;

        goto label01;
    }
    public void setColor(int)
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        int $i0, $i1;
        float $f0, $f1;
        android.graphics.Paint $r1;
        com.larswerkman.holocolorpicker.OpacityBar $r2;
        com.larswerkman.holocolorpicker.SVBar $r3;
        float[] $r4;
        byte $b2;
        com.larswerkman.holocolorpicker.SaturationBar $r5;
        com.larswerkman.holocolorpicker.ValueBar $r6;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        $i0 := @parameter0: int;

        $f0 = specialinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: float colorToAngle(int)>($i0);

        r0.<com.larswerkman.holocolorpicker.ColorPicker: float mAngle> = $f0;

        $r1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mPointerColor>;

        $f0 = r0.<com.larswerkman.holocolorpicker.ColorPicker: float mAngle>;

        $i1 = specialinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: int calculateColor(float)>($f0);

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i1);

        $r2 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.OpacityBar mOpacityBar>;

        if $r2 == null goto label1;

        $r2 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.OpacityBar mOpacityBar>;

        $i1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColor>;

        virtualinvoke $r2.<com.larswerkman.holocolorpicker.OpacityBar: void setColor(int)>($i1);

        $r2 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.OpacityBar mOpacityBar>;

        $i1 = staticinvoke <android.graphics.Color: int alpha(int)>($i0);

        virtualinvoke $r2.<com.larswerkman.holocolorpicker.OpacityBar: void setOpacity(int)>($i1);

     label1:
        $r3 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.SVBar mSVbar>;

        if $r3 == null goto label2;

        $r4 = r0.<com.larswerkman.holocolorpicker.ColorPicker: float[] mHSV>;

        staticinvoke <android.graphics.Color: void colorToHSV(int,float[])>($i0, $r4);

        $r3 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.SVBar mSVbar>;

        $i1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColor>;

        virtualinvoke $r3.<com.larswerkman.holocolorpicker.SVBar: void setColor(int)>($i1);

        $r4 = r0.<com.larswerkman.holocolorpicker.ColorPicker: float[] mHSV>;

        $f0 = $r4[1];

        $r4 = r0.<com.larswerkman.holocolorpicker.ColorPicker: float[] mHSV>;

        $f1 = $r4[2];

        $b2 = $f0 cmpg $f1;

        if $b2 >= 0 goto label5;

        $r3 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.SVBar mSVbar>;

        $r4 = r0.<com.larswerkman.holocolorpicker.ColorPicker: float[] mHSV>;

        $f0 = $r4[1];

        virtualinvoke $r3.<com.larswerkman.holocolorpicker.SVBar: void setSaturation(float)>($f0);

     label2:
        $r5 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.SaturationBar mSaturationBar>;

        if $r5 == null goto label3;

        $r4 = r0.<com.larswerkman.holocolorpicker.ColorPicker: float[] mHSV>;

        staticinvoke <android.graphics.Color: void colorToHSV(int,float[])>($i0, $r4);

        $r5 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.SaturationBar mSaturationBar>;

        $i1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColor>;

        virtualinvoke $r5.<com.larswerkman.holocolorpicker.SaturationBar: void setColor(int)>($i1);

        $r5 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.SaturationBar mSaturationBar>;

        $r4 = r0.<com.larswerkman.holocolorpicker.ColorPicker: float[] mHSV>;

        $f0 = $r4[1];

        virtualinvoke $r5.<com.larswerkman.holocolorpicker.SaturationBar: void setSaturation(float)>($f0);

     label3:
        $r6 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.ValueBar mValueBar>;

        if $r6 == null goto label6;

        $r5 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.SaturationBar mSaturationBar>;

        if $r5 != null goto label6;

        $r4 = r0.<com.larswerkman.holocolorpicker.ColorPicker: float[] mHSV>;

        staticinvoke <android.graphics.Color: void colorToHSV(int,float[])>($i0, $r4);

        $r6 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.ValueBar mValueBar>;

        $i1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mColor>;

        virtualinvoke $r6.<com.larswerkman.holocolorpicker.ValueBar: void setColor(int)>($i1);

        $r6 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.ValueBar mValueBar>;

        $r4 = r0.<com.larswerkman.holocolorpicker.ColorPicker: float[] mHSV>;

        $f0 = $r4[2];

        virtualinvoke $r6.<com.larswerkman.holocolorpicker.ValueBar: void setValue(float)>($f0);

     label4:
        virtualinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: void setNewCenterColor(int)>($i0);

        return;

     label5:
        $r4 = r0.<com.larswerkman.holocolorpicker.ColorPicker: float[] mHSV>;

        $f0 = $r4[1];

        $r4 = r0.<com.larswerkman.holocolorpicker.ColorPicker: float[] mHSV>;

        $f1 = $r4[2];

        $b2 = $f0 cmpl $f1;

        if $b2 <= 0 goto label2;

        $r3 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.SVBar mSVbar>;

        $r4 = r0.<com.larswerkman.holocolorpicker.ColorPicker: float[] mHSV>;

        $f0 = $r4[2];

        virtualinvoke $r3.<com.larswerkman.holocolorpicker.SVBar: void setValue(float)>($f0);

        goto label2;

     label6:
        $r6 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.ValueBar mValueBar>;

        if $r6 == null goto label4;

        $r4 = r0.<com.larswerkman.holocolorpicker.ColorPicker: float[] mHSV>;

        staticinvoke <android.graphics.Color: void colorToHSV(int,float[])>($i0, $r4);

        $r6 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.ValueBar mValueBar>;

        $r4 = r0.<com.larswerkman.holocolorpicker.ColorPicker: float[] mHSV>;

        $f0 = $r4[2];

        virtualinvoke $r6.<com.larswerkman.holocolorpicker.ValueBar: void setValue(float)>($f0);

        goto label4;
    }
    public void setNewCenterColor(int)
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        int $i0, $i1;
        android.graphics.Paint $r1;
        com.larswerkman.holocolorpicker.ColorPicker$OnColorChangedListener $r2;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        $i0 := @parameter0: int;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: int mCenterNewColor> = $i0;

        $r1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mCenterNewPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);

        $i1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int mCenterOldColor>;

        if $i1 != 0 goto label1;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: int mCenterOldColor> = $i0;

        $r1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mCenterOldPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);

     label1:
        $r2 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.ColorPicker$OnColorChangedListener onColorChangedListener>;

        if $r2 == null goto label2;

        $i1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: int oldChangedListenerColor>;

        if $i0 == $i1 goto label2;

        $r2 = r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.ColorPicker$OnColorChangedListener onColorChangedListener>;

        interfaceinvoke $r2.<com.larswerkman.holocolorpicker.ColorPicker$OnColorChangedListener: void onColorChanged(int)>($i0);

        r0.<com.larswerkman.holocolorpicker.ColorPicker: int oldChangedListenerColor> = $i0;

     label2:
        virtualinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: void invalidate()>();

        return;
    }
    public void setOldCenterColor(int)
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        int $i0;
        android.graphics.Paint $r1;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        $i0 := @parameter0: int;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: int mCenterOldColor> = $i0;

        $r1 = r0.<com.larswerkman.holocolorpicker.ColorPicker: android.graphics.Paint mCenterOldPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);

        virtualinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: void invalidate()>();

        return;
    }
    public void setOnColorChangedListener(com.larswerkman.holocolorpicker.ColorPicker$OnColorChangedListener)
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        com.larswerkman.holocolorpicker.ColorPicker$OnColorChangedListener $r1;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        $r1 := @parameter0: com.larswerkman.holocolorpicker.ColorPicker$OnColorChangedListener;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.ColorPicker$OnColorChangedListener onColorChangedListener> = $r1;

        return;
    }
    public void setOnColorSelectedListener(com.larswerkman.holocolorpicker.ColorPicker$OnColorSelectedListener)
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        com.larswerkman.holocolorpicker.ColorPicker$OnColorSelectedListener $r1;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        $r1 := @parameter0: com.larswerkman.holocolorpicker.ColorPicker$OnColorSelectedListener;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: com.larswerkman.holocolorpicker.ColorPicker$OnColorSelectedListener onColorSelectedListener> = $r1;

        return;
    }
    public void setShowOldCenterColor(boolean)
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        boolean $z0;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        $z0 := @parameter0: boolean;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: boolean mShowCenterOldColor> = $z0;

        virtualinvoke r0.<com.larswerkman.holocolorpicker.ColorPicker: void invalidate()>();

        return;
    }
    public void setTouchAnywhereOnColorWheelEnabled(boolean)
    {
        com.larswerkman.holocolorpicker.ColorPicker r0;
        boolean $z0;

        r0 := @this: com.larswerkman.holocolorpicker.ColorPicker;

        $z0 := @parameter0: boolean;

        r0.<com.larswerkman.holocolorpicker.ColorPicker: boolean mTouchAnywhereOnColorWheelEnabled> = $z0;

        return;
    }
