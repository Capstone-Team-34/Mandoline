com.mkulesh.micromath.utils.ViewUtils extends java.lang.Object
public static final int INVALID_INDEX
    public void <init>()
    {
        com.mkulesh.micromath.utils.ViewUtils r0;

        r0 := @this: com.mkulesh.micromath.utils.ViewUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static void Debug(java.lang.Object, java.lang.String)
    {
        java.lang.Object $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.String;

        return;
    }
    public static java.lang.String[] catValues(double[], int)
    {
        double[] $r0;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7, $i8;
        java.lang.String[] r1;
        java.util.HashSet r2;
        boolean z0, z1, $z2;
        java.lang.String r3, $r6, $r7;
        java.lang.StringBuilder $r4;
        java.text.DecimalFormat $r5;
        double $d0;
        byte $b9;

        $r0 := @parameter0: double[];

        $i0 := @parameter1: int;

        $i1 = $i0 + -2;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

        $i2 = $i0 + -2;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        $i3 = lengthof $r0;

        r1 = newarray (java.lang.String)[$i3];

        r2 = new java.util.HashSet;

        specialinvoke r2.<java.util.HashSet: void <init>()>();

        $i3 = 0;

     label01:
        if $i3 >= 2 goto label20;

        if $i3 != 0 goto label06;

        i4 = $i1;

     label02:
        z0 = 0;

        i5 = 0;

     label03:
        if i5 > i4 goto label19;

        if i5 >= 1 goto label07;

        r3 = "0";

     label04:
        i6 = 0;

     label05:
        if i6 >= i5 goto label08;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        i6 = i6 + 1;

        goto label05;

     label06:
        i4 = $i2;

        goto label02;

     label07:
        r3 = "0.";

        goto label04;

     label08:
        if $i3 != 1 goto label09;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("E0");

        r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        $r5 = staticinvoke <com.mkulesh.micromath.utils.CompatUtils: java.text.DecimalFormat getDecimalFormat(java.lang.String)>(r3);

        interfaceinvoke r2.<java.util.Set: void clear()>();

        z1 = 0;

        i7 = 0;

        i6 = 0;

     label10:
        $i8 = lengthof $r0;

        if i6 >= $i8 goto label16;

        $d0 = $r0[i6];

        $b9 = $d0 cmpl 0.0;

        if $b9 == 0 goto label15;

        $d0 = $r0[i6];

        $r6 = virtualinvoke $r5.<java.text.DecimalFormat: java.lang.String format(double)>($d0);

     label11:
        if $r6 == null goto label13;

        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z2 != 0 goto label12;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label13;

     label12:
        $r6 = "0";

     label13:
        r1[i6] = $r6;

        $z2 = interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r6);

        if $z2 != 0 goto label14;

        z1 = 1;

     label14:
        $i8 = virtualinvoke $r6.<java.lang.String: int length()>();

        i7 = staticinvoke <java.lang.Math: int max(int,int)>(i7, $i8);

        i6 = i6 + 1;

        goto label10;

     label15:
        $r6 = "0";

        goto label11;

     label16:
        if z0 == 0 goto label17;

        return r1;

     label17:
        if z1 != 0 goto label18;

        if i7 > $i0 goto label18;

        z0 = 1;

     label18:
        i5 = i5 + 1;

        goto label03;

     label19:
        $i3 = $i3 + 1;

        goto label01;

     label20:
        return r1;
    }
    public static boolean checkDuplicate(java.lang.String[])
    {
        java.lang.String[] $r0;
        java.lang.String r1;
        java.util.HashSet r2;
        int $i0, $i1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String[];

        r2 = new java.util.HashSet;

        specialinvoke r2.<java.util.HashSet: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        r1 = $r0[$i1];

        $z0 = interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        return 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 0;
    }
    public static void collectElemets(android.widget.LinearLayout, java.util.ArrayList)
    {
        android.widget.LinearLayout $r0, r3;
        java.util.ArrayList r1;
        int i0, $i1;
        android.view.View $r2;
        boolean $z0;

        $r0 := @parameter0: android.widget.LinearLayout;

        r1 := @parameter1: java.util.ArrayList;

        i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<android.widget.LinearLayout: int getChildCount()>();

        if i0 >= $i1 goto label3;

        $r2 = virtualinvoke $r0.<android.widget.LinearLayout: android.view.View getChildAt(int)>(i0);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $z0 = $r2 instanceof android.widget.LinearLayout;

        if $z0 == 0 goto label2;

        r3 = (android.widget.LinearLayout) $r2;

        staticinvoke <com.mkulesh.micromath.utils.ViewUtils: void collectElemets(android.widget.LinearLayout,java.util.ArrayList)>(r3, r1);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }
    public static int dpToPx(android.util.DisplayMetrics, int)
    {
        android.util.DisplayMetrics $r0;
        int $i0;
        float $f0, $f1;
        double $d0;

        $r0 := @parameter0: android.util.DisplayMetrics;

        $i0 := @parameter1: int;

        $f1 = (float) $i0;

        $f0 = $r0.<android.util.DisplayMetrics: float density>;

        $f0 = $f1 * $f0;

        $d0 = (double) $f0;

        $d0 = $d0 + 0.5;

        $i0 = (int) $d0;

        return $i0;
    }
    public static int getLayoutDepth(android.widget.LinearLayout)
    {
        android.widget.LinearLayout $r0;
        int i0, $i1;
        android.view.ViewParent $r1, $r3;
        boolean $z0;
        com.mkulesh.micromath.widgets.TwoDScrollView $r2;

        $r0 := @parameter0: android.widget.LinearLayout;

        i0 = 0;

        if $r0 != null goto label1;

        return 0;

     label1:
        $r1 = virtualinvoke $r0.<android.widget.LinearLayout: android.view.ViewParent getParent()>();

     label2:
        if $r1 == null goto label3;

        $z0 = $r1 instanceof com.mkulesh.micromath.widgets.TwoDScrollView;

        if $z0 == 0 goto label4;

        $r2 = (com.mkulesh.micromath.widgets.TwoDScrollView) $r1;

        $i1 = virtualinvoke $r2.<com.mkulesh.micromath.widgets.TwoDScrollView: int getId()>();

        if $i1 != 2131492966 goto label4;

     label3:
        return i0;

     label4:
        $z0 = $r1 instanceof com.mkulesh.micromath.formula.FormulaBase;

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke $r1.<android.view.ViewParent: android.view.ViewParent getParent()>();

        if $r3 != null goto label5;

        i0 = i0 + 2;

        goto label3;

     label5:
        i0 = i0 + 1;

        $r1 = interfaceinvoke $r1.<android.view.ViewParent: android.view.ViewParent getParent()>();

        goto label2;
    }
    public static int getStatusBarHeight(android.app.Activity)
    {
        android.app.Activity $r0;
        android.content.res.Resources $r1;
        int $i0;

        $r0 := @parameter0: android.app.Activity;

        $r1 = virtualinvoke $r0.<android.app.Activity: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r1.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>("status_bar_height", "dimen", "android");

        if $i0 <= 0 goto label1;

        $r1 = virtualinvoke $r0.<android.app.Activity: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

        return $i0;

     label1:
        return 0;
    }
    public static int getViewIndex(android.widget.LinearLayout, android.view.View)
    {
        android.widget.LinearLayout $r0;
        android.view.View $r1, $r2;
        int i0, $i1;

        $r0 := @parameter0: android.widget.LinearLayout;

        $r1 := @parameter1: android.view.View;

        i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<android.widget.LinearLayout: int getChildCount()>();

        if i0 >= $i1 goto label3;

        $r2 = virtualinvoke $r0.<android.widget.LinearLayout: android.view.View getChildAt(int)>(i0);

        if $r2 != $r1 goto label2;

        return i0;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return -1;
    }
    public static void invalidateLayout(android.view.View, android.widget.LinearLayout)
    {
        android.view.View $r0;
        android.widget.LinearLayout $r1;
        com.mkulesh.micromath.utils.ViewUtils$1 $r2;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.widget.LinearLayout;

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        $r2 = new com.mkulesh.micromath.utils.ViewUtils$1;

        specialinvoke $r2.<com.mkulesh.micromath.utils.ViewUtils$1: void <init>(android.widget.LinearLayout)>($r1);

        virtualinvoke $r1.<android.widget.LinearLayout: boolean post(java.lang.Runnable)>($r2);

        return;
    }
    public static boolean isHardwareKeyboardAvailable(android.content.Context)
    {
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.content.res.Configuration $r2;
        int $i0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = $r2.<android.content.res.Configuration: int keyboard>;

        if $i0 == 1 goto label1;

        return 1;

     label1:
        return 0;
    }
    public static int pxToDp(android.util.DisplayMetrics, int)
    {
        android.util.DisplayMetrics $r0;
        int $i0;
        float $f0, $f1;
        double $d0;

        $r0 := @parameter0: android.util.DisplayMetrics;

        $i0 := @parameter1: int;

        $f1 = (float) $i0;

        $f0 = $r0.<android.util.DisplayMetrics: float density>;

        $f0 = $f1 / $f0;

        $d0 = (double) $f0;

        $d0 = $d0 + 0.5;

        $i0 = (int) $d0;

        return $i0;
    }
    public static double roundToNumberOfSignificantDigits(double, int)
    {
        double $d0, $d1, $d2, $d3;
        int $i0, $i2;
        java.math.RoundingMode $r0;
        byte $b1;
        java.math.BigDecimal $r1;
        java.math.MathContext $r2;
        java.lang.ArithmeticException $r3;
        long $l3;

        $d0 := @parameter0: double;

        $i0 := @parameter1: int;

        $d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double log10(double)>(1.7976931348623157E308);

        $d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double floor(double)>($d1);

        $b1 = $d0 cmpl 0.0;

        if $b1 != 0 goto label01;

        return 0.0;

     label01:
        $r1 = new java.math.BigDecimal;

     label02:
        specialinvoke $r1.<java.math.BigDecimal: void <init>(double)>($d0);

     label03:
        $r2 = new java.math.MathContext;

        $r0 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;

     label04:
        specialinvoke $r2.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>($i0, $r0);

        $r1 = virtualinvoke $r1.<java.math.BigDecimal: java.math.BigDecimal round(java.math.MathContext)>($r2);

        $d2 = virtualinvoke $r1.<java.math.BigDecimal: double doubleValue()>();

     label05:
        return $d2;

     label06:
        $r3 := @caughtexception;

        $b1 = $d0 cmpg 0.0;

        if $b1 >= 0 goto label09;

        $d2 = neg $d0;

     label07:
        $d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double log10(double)>($d2);

        $d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double ceil(double)>($d2);

        $i2 = (int) $d2;

        $i0 = $i0 - $i2;

        $d2 = 1.0;

        $d3 = (double) $i0;

        $b1 = $d3 cmpl $d1;

        if $b1 <= 0 goto label10;

        $d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,double)>(10.0, $d1);

        $d2 = (double) $i0;

        $d1 = $d2 - $d1;

        $d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,double)>(10.0, $d1);

     label08:
        $d0 = $d0 * $d3;

        $d0 = $d0 * $d2;

        $l3 = staticinvoke <org.apache.commons.math3.util.FastMath: long round(double)>($d0);

        $d0 = (double) $l3;

        $d0 = $d0 / $d3;

        $d0 = $d0 / $d2;

        return $d0;

     label09:
        $d2 = $d0;

        goto label07;

     label10:
        $d1 = (double) $i0;

        $d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,double)>(10.0, $d1);

        goto label08;

        catch java.lang.ArithmeticException from label02 to label03 with label06;
        catch java.lang.ArithmeticException from label04 to label05 with label06;
    }
    public static boolean showButtonDescription(android.content.Context, android.view.View)
    {
        android.content.Context $r0;
        android.view.View $r1, $r5;
        int[] r2;
        int i0, i1, $i2;
        java.lang.CharSequence $r3;
        android.widget.Toast $r4;
        android.content.res.Resources $r6;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.view.View;

        $r3 = virtualinvoke $r1.<android.view.View: java.lang.CharSequence getContentDescription()>();

        if $r3 == null goto label1;

        i0 = interfaceinvoke $r3.<java.lang.CharSequence: int length()>();

        if i0 <= 0 goto label1;

        r2 = newarray (int)[2];

        virtualinvoke $r1.<android.view.View: void getLocationOnScreen(int[])>(r2);

        $r4 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r0, $r3, 0);

        virtualinvoke $r4.<android.widget.Toast: void setGravity(int,int,int)>(51, 0, 0);

        $r5 = virtualinvoke $r4.<android.widget.Toast: android.view.View getView()>();

        i0 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        virtualinvoke $r5.<android.view.View: void measure(int,int)>(i0, i1);

        i0 = r2[0];

        i1 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        i1 = i1 / 2;

        i0 = i0 + i1;

        $r5 = virtualinvoke $r4.<android.widget.Toast: android.view.View getView()>();

        i1 = virtualinvoke $r5.<android.view.View: int getMeasuredWidth()>();

        i1 = i1 / 2;

        i0 = i0 - i1;

        i1 = r2[1];

        $i2 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i2 = $i2 / 2;

        i1 = i1 - $i2;

        $r1 = virtualinvoke $r4.<android.widget.Toast: android.view.View getView()>();

        $i2 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        i1 = i1 - $i2;

        $r6 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i2 = virtualinvoke $r6.<android.content.res.Resources: int getDimensionPixelSize(int)>(2131230808);

        i1 = i1 - $i2;

        virtualinvoke $r4.<android.widget.Toast: void setGravity(int,int,int)>(51, i0, i1);

        virtualinvoke $r4.<android.widget.Toast: void show()>();

        return 1;

     label1:
        return 0;
    }
    public static void updateMenuItemColor(android.view.MenuItem)
    {
        android.view.MenuItem $r0;
        android.graphics.PorterDuff$Mode $r1;
        android.graphics.drawable.Drawable $r2;
        boolean $z0;

        $r0 := @parameter0: android.view.MenuItem;

        $r2 = interfaceinvoke $r0.<android.view.MenuItem: android.graphics.drawable.Drawable getIcon()>();

        if $r2 == null goto label1;

        $r2 = interfaceinvoke $r0.<android.view.MenuItem: android.graphics.drawable.Drawable getIcon()>();

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void clearColorFilter()>();

        $z0 = interfaceinvoke $r0.<android.view.MenuItem: boolean isEnabled()>();

        if $z0 != 0 goto label1;

        $r2 = interfaceinvoke $r0.<android.view.MenuItem: android.graphics.drawable.Drawable getIcon()>();

        $r1 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_ATOP>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>(-7829368, $r1);

     label1:
        return;
    }
