com.mkulesh.micromath.plots.PlotContour extends com.mkulesh.micromath.formula.CalculationResult implements com.mkulesh.micromath.widgets.SizeChangingLayout$SizeChangedIf com.mkulesh.micromath.properties.PlotPropertiesChangeIf com.mkulesh.micromath.properties.AxisPropertiesChangeIf com.mkulesh.micromath.properties.ColorMapPropertiesChangeIf
private static final java.lang.String STATE_FUNCTIONVIEW_PARAMETERS
private static final java.lang.String STATE_PLOT_STYLE
public static final java.lang.String XML_PROP_PLOT_STYLE
private final java.util.ArrayList axes
private final com.mkulesh.micromath.formula.TermField[] boundaries
private com.mkulesh.micromath.widgets.CustomTextView cornerView1
private com.mkulesh.micromath.widgets.CustomTextView cornerView2
private com.mkulesh.micromath.undo.FormulaState formulaState
private final com.mkulesh.micromath.plots.PlotContour$Function3D function
private com.mkulesh.micromath.formula.TermField functionTerm
private com.mkulesh.micromath.plots.views.PlotView functionView
private android.widget.LinearLayout functionViewLayout
private com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle twoDPlotStyle
private android.widget.LinearLayout xDataLayout
private com.mkulesh.micromath.formula.TermField xMax
private com.mkulesh.micromath.formula.TermField xMin
private com.mkulesh.micromath.formula.TermField yMax
private com.mkulesh.micromath.formula.TermField yMin
    public void <init>(android.content.Context)
    {
        com.mkulesh.micromath.plots.PlotContour r0;
        android.content.Context $r1;
        com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle $r2;
        java.util.ArrayList $r3;
        com.mkulesh.micromath.plots.PlotContour$Function3D $r4;
        com.mkulesh.micromath.formula.TermField[] $r5;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.mkulesh.micromath.formula.CalculationResult: void <init>(com.mkulesh.micromath.formula.FormulaList,android.widget.LinearLayout,int)>(null, null, 0);

        $r2 = <com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle CONTOUR>;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle twoDPlotStyle> = $r2;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField yMin> = null;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField yMax> = null;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField xMin> = null;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField functionTerm> = null;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField xMax> = null;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.mkulesh.micromath.plots.PlotContour: java.util.ArrayList axes> = $r3;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView> = null;

        r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout xDataLayout> = null;

        r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout functionViewLayout> = null;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.widgets.CustomTextView cornerView1> = null;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.widgets.CustomTextView cornerView2> = null;

        $r4 = new com.mkulesh.micromath.plots.PlotContour$Function3D;

        specialinvoke $r4.<com.mkulesh.micromath.plots.PlotContour$Function3D: void <init>(com.mkulesh.micromath.plots.PlotContour)>(r0);

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.PlotContour$Function3D function> = $r4;

        $r5 = newarray (com.mkulesh.micromath.formula.TermField)[4];

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField[] boundaries> = $r5;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.undo.FormulaState formulaState> = null;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.mkulesh.micromath.plots.PlotContour r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle $r3;
        java.util.ArrayList $r4;
        com.mkulesh.micromath.plots.PlotContour$Function3D $r5;
        com.mkulesh.micromath.formula.TermField[] $r6;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.mkulesh.micromath.formula.CalculationResult: void <init>(com.mkulesh.micromath.formula.FormulaList,android.widget.LinearLayout,int)>(null, null, 0);

        $r3 = <com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle CONTOUR>;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle twoDPlotStyle> = $r3;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField yMin> = null;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField yMax> = null;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField xMin> = null;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField functionTerm> = null;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField xMax> = null;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.mkulesh.micromath.plots.PlotContour: java.util.ArrayList axes> = $r4;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView> = null;

        r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout xDataLayout> = null;

        r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout functionViewLayout> = null;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.widgets.CustomTextView cornerView1> = null;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.widgets.CustomTextView cornerView2> = null;

        $r5 = new com.mkulesh.micromath.plots.PlotContour$Function3D;

        specialinvoke $r5.<com.mkulesh.micromath.plots.PlotContour$Function3D: void <init>(com.mkulesh.micromath.plots.PlotContour)>(r0);

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.PlotContour$Function3D function> = $r5;

        $r6 = newarray (com.mkulesh.micromath.formula.TermField)[4];

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField[] boundaries> = $r6;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.undo.FormulaState formulaState> = null;

        return;
    }
    public void <init>(com.mkulesh.micromath.formula.FormulaList, int)
    {
        com.mkulesh.micromath.plots.PlotContour r0;
        com.mkulesh.micromath.formula.FormulaList $r1;
        int $i0;
        com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle $r2;
        java.util.ArrayList $r3;
        com.mkulesh.micromath.plots.PlotContour$Function3D $r4;
        com.mkulesh.micromath.formula.TermField[] $r5;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour;

        $r1 := @parameter0: com.mkulesh.micromath.formula.FormulaList;

        $i0 := @parameter1: int;

        specialinvoke r0.<com.mkulesh.micromath.formula.CalculationResult: void <init>(com.mkulesh.micromath.formula.FormulaList,android.widget.LinearLayout,int)>($r1, null, 0);

        $r2 = <com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle CONTOUR>;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle twoDPlotStyle> = $r2;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField yMin> = null;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField yMax> = null;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField xMin> = null;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField functionTerm> = null;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField xMax> = null;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.mkulesh.micromath.plots.PlotContour: java.util.ArrayList axes> = $r3;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView> = null;

        r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout xDataLayout> = null;

        r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout functionViewLayout> = null;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.widgets.CustomTextView cornerView1> = null;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.widgets.CustomTextView cornerView2> = null;

        $r4 = new com.mkulesh.micromath.plots.PlotContour$Function3D;

        specialinvoke $r4.<com.mkulesh.micromath.plots.PlotContour$Function3D: void <init>(com.mkulesh.micromath.plots.PlotContour)>(r0);

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.PlotContour$Function3D function> = $r4;

        $r5 = newarray (com.mkulesh.micromath.formula.TermField)[4];

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField[] boundaries> = $r5;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.undo.FormulaState formulaState> = null;

        virtualinvoke r0.<com.mkulesh.micromath.plots.PlotContour: void setId(int)>($i0);

        specialinvoke r0.<com.mkulesh.micromath.plots.PlotContour: void onCreate()>();

        return;
    }
    static com.mkulesh.micromath.widgets.CustomTextView access$000(com.mkulesh.micromath.plots.PlotContour)
    {
        com.mkulesh.micromath.plots.PlotContour $r0;
        com.mkulesh.micromath.widgets.CustomTextView r1;

        $r0 := @parameter0: com.mkulesh.micromath.plots.PlotContour;

        r1 = $r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.widgets.CustomTextView cornerView1>;

        return r1;
    }
    static com.mkulesh.micromath.widgets.CustomTextView access$100(com.mkulesh.micromath.plots.PlotContour)
    {
        com.mkulesh.micromath.plots.PlotContour $r0;
        com.mkulesh.micromath.widgets.CustomTextView r1;

        $r0 := @parameter0: com.mkulesh.micromath.plots.PlotContour;

        r1 = $r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.widgets.CustomTextView cornerView2>;

        return r1;
    }
    static com.mkulesh.micromath.formula.TermField access$200(com.mkulesh.micromath.plots.PlotContour)
    {
        com.mkulesh.micromath.plots.PlotContour $r0;
        com.mkulesh.micromath.formula.TermField r1;

        $r0 := @parameter0: com.mkulesh.micromath.plots.PlotContour;

        r1 = $r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField xMin>;

        return r1;
    }
    static com.mkulesh.micromath.formula.TermField access$300(com.mkulesh.micromath.plots.PlotContour)
    {
        com.mkulesh.micromath.plots.PlotContour $r0;
        com.mkulesh.micromath.formula.TermField r1;

        $r0 := @parameter0: com.mkulesh.micromath.plots.PlotContour;

        r1 = $r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField xMax>;

        return r1;
    }
    static com.mkulesh.micromath.formula.TermField access$400(com.mkulesh.micromath.plots.PlotContour)
    {
        com.mkulesh.micromath.plots.PlotContour $r0;
        com.mkulesh.micromath.formula.TermField r1;

        $r0 := @parameter0: com.mkulesh.micromath.plots.PlotContour;

        r1 = $r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField yMin>;

        return r1;
    }
    static com.mkulesh.micromath.formula.TermField access$500(com.mkulesh.micromath.plots.PlotContour)
    {
        com.mkulesh.micromath.plots.PlotContour $r0;
        com.mkulesh.micromath.formula.TermField r1;

        $r0 := @parameter0: com.mkulesh.micromath.plots.PlotContour;

        r1 = $r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField yMax>;

        return r1;
    }
    static com.mkulesh.micromath.formula.TermField access$600(com.mkulesh.micromath.plots.PlotContour)
    {
        com.mkulesh.micromath.plots.PlotContour $r0;
        com.mkulesh.micromath.formula.TermField r1;

        $r0 := @parameter0: com.mkulesh.micromath.plots.PlotContour;

        r1 = $r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField functionTerm>;

        return r1;
    }
    static void access$700(com.mkulesh.micromath.plots.PlotContour, double[])
    {
        com.mkulesh.micromath.plots.PlotContour $r0;
        double[] $r1;

        $r0 := @parameter0: com.mkulesh.micromath.plots.PlotContour;

        $r1 := @parameter1: double[];

        virtualinvoke $r0.<com.mkulesh.micromath.plots.PlotContour: void updateEqualBorders(double[])>($r1);

        return;
    }
    private void onCreate()
    {
        com.mkulesh.micromath.plots.PlotContour r0;
        int $i0, $i1;
        android.widget.LinearLayout $r1, $r11;
        boolean $z0;
        com.mkulesh.micromath.widgets.CustomLayout r2;
        android.view.View $r3;
        com.mkulesh.micromath.widgets.SizeChangingLayout $r4;
        com.mkulesh.micromath.widgets.CustomTextView $r5;
        com.mkulesh.micromath.plots.views.PlotView r6, r10;
        com.mkulesh.micromath.plots.views.ColorMapView $r7;
        com.mkulesh.micromath.formula.FormulaList $r8;
        android.support.v7.app.AppCompatActivity $r9;
        com.mkulesh.micromath.widgets.CustomEditText $r12;
        com.mkulesh.micromath.formula.TermField $r13;
        com.mkulesh.micromath.formula.TermField[] $r14;
        java.util.ArrayList $r15;
        java.util.Iterator $r16;
        java.lang.Object $r17;
        com.mkulesh.micromath.formula.TermField$BracketsType $r18;
        com.mkulesh.micromath.widgets.CustomTextView$SymbolType $r19;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour;

        $i0 = 0;

        virtualinvoke r0.<com.mkulesh.micromath.plots.PlotContour: void inflateRootLayout(int,int,int)>(2130903129, 300, 300);

        $r1 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout layout>;

        $z0 = $r1 instanceof com.mkulesh.micromath.widgets.CustomLayout;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout layout>;

        r2 = (com.mkulesh.micromath.widgets.CustomLayout) $r1;

        virtualinvoke r2.<com.mkulesh.micromath.widgets.CustomLayout: void setCustomFeaturesDisabled(boolean)>(1);

        virtualinvoke r2.<com.mkulesh.micromath.widgets.CustomLayout: void setBaselineAligned(boolean)>(0);

        virtualinvoke r2.<com.mkulesh.micromath.widgets.CustomLayout: void setBaselineAlignedChildIndex(int)>(1);

     label1:
        $r1 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout layout>;

        $r3 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.View findViewById(int)>(2131493136);

        $r1 = (android.widget.LinearLayout) $r3;

        r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout functionViewLayout> = $r1;

        $r1 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout layout>;

        $r3 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.View findViewById(int)>(2131493139);

        $r1 = (android.widget.LinearLayout) $r3;

        r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout xDataLayout> = $r1;

        $r1 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout xDataLayout>;

        $z0 = $r1 instanceof com.mkulesh.micromath.widgets.SizeChangingLayout;

        if $z0 == 0 goto label2;

        $r1 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout xDataLayout>;

        $r4 = (com.mkulesh.micromath.widgets.SizeChangingLayout) $r1;

        virtualinvoke $r4.<com.mkulesh.micromath.widgets.SizeChangingLayout: void setSizeChangedIf(com.mkulesh.micromath.widgets.SizeChangingLayout$SizeChangedIf)>(r0);

     label2:
        $r1 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout layout>;

        $r3 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.View findViewById(int)>(2131493135);

        $r5 = (com.mkulesh.micromath.widgets.CustomTextView) $r3;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.widgets.CustomTextView cornerView1> = $r5;

        $r1 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout layout>;

        $r3 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.View findViewById(int)>(2131493149);

        $r5 = (com.mkulesh.micromath.widgets.CustomTextView) $r3;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.widgets.CustomTextView cornerView2> = $r5;

        $r1 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout layout>;

        $r3 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.View findViewById(int)>(2131493137);

        r6 = (com.mkulesh.micromath.plots.views.PlotView) $r3;

        $r1 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout layout>;

        $r3 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.View findViewById(int)>(2131493148);

        $r7 = (com.mkulesh.micromath.plots.views.ColorMapView) $r3;

        virtualinvoke r6.<com.mkulesh.micromath.plots.views.PlotView: void setColorMapView(com.mkulesh.micromath.plots.views.ColorMapView)>($r7);

        $r8 = virtualinvoke r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r9 = virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke r6.<com.mkulesh.micromath.plots.views.PlotView: void prepare(android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.FormulaChangeIf)>($r9, r0);

        $r1 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout layout>;

        $r3 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.View findViewById(int)>(2131493138);

        r10 = (com.mkulesh.micromath.plots.views.PlotView) $r3;

        $r1 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout layout>;

        $r3 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.View findViewById(int)>(2131493148);

        $r7 = (com.mkulesh.micromath.plots.views.ColorMapView) $r3;

        virtualinvoke r10.<com.mkulesh.micromath.plots.views.PlotView: void setColorMapView(com.mkulesh.micromath.plots.views.ColorMapView)>($r7);

        $r8 = virtualinvoke r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r9 = virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke r10.<com.mkulesh.micromath.plots.views.PlotView: void prepare(android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.FormulaChangeIf)>($r9, r0);

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView> = r6;

        $r1 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout layout>;

        $r3 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.View findViewById(int)>(2131493130);

        $r1 = (android.widget.LinearLayout) $r3;

        $r11 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout layout>;

        $r3 = virtualinvoke $r11.<android.widget.LinearLayout: android.view.View findViewById(int)>(2131493131);

        $r12 = (com.mkulesh.micromath.widgets.CustomEditText) $r3;

        $r13 = virtualinvoke r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField addTerm(com.mkulesh.micromath.formula.FormulaBase,android.widget.LinearLayout,com.mkulesh.micromath.widgets.CustomEditText,com.mkulesh.micromath.widgets.FormulaChangeIf,boolean)>(r0, $r1, $r12, r0, 0);

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField yMax> = $r13;

        $r14 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField[] boundaries>;

        $r13 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField yMax>;

        $r14[0] = $r13;

        $r1 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout layout>;

        $r3 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.View findViewById(int)>(2131493133);

        $r1 = (android.widget.LinearLayout) $r3;

        $r11 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout layout>;

        $r3 = virtualinvoke $r11.<android.widget.LinearLayout: android.view.View findViewById(int)>(2131493134);

        $r12 = (com.mkulesh.micromath.widgets.CustomEditText) $r3;

        $r13 = virtualinvoke r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField addTerm(com.mkulesh.micromath.formula.FormulaBase,android.widget.LinearLayout,com.mkulesh.micromath.widgets.CustomEditText,com.mkulesh.micromath.widgets.FormulaChangeIf,boolean)>(r0, $r1, $r12, r0, 0);

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField yMin> = $r13;

        $r14 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField[] boundaries>;

        $r13 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField yMin>;

        $r14[1] = $r13;

        $r1 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout layout>;

        $r3 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.View findViewById(int)>(2131493140);

        $r1 = (android.widget.LinearLayout) $r3;

        $r11 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout layout>;

        $r3 = virtualinvoke $r11.<android.widget.LinearLayout: android.view.View findViewById(int)>(2131493141);

        $r12 = (com.mkulesh.micromath.widgets.CustomEditText) $r3;

        $r13 = virtualinvoke r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField addTerm(com.mkulesh.micromath.formula.FormulaBase,android.widget.LinearLayout,com.mkulesh.micromath.widgets.CustomEditText,com.mkulesh.micromath.widgets.FormulaChangeIf,boolean)>(r0, $r1, $r12, r0, 0);

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField xMin> = $r13;

        $r14 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField[] boundaries>;

        $r13 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField xMin>;

        $r14[2] = $r13;

        $r1 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout layout>;

        $r3 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.View findViewById(int)>(2131493143);

        $r1 = (android.widget.LinearLayout) $r3;

        $r11 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout layout>;

        $r3 = virtualinvoke $r11.<android.widget.LinearLayout: android.view.View findViewById(int)>(2131493144);

        $r12 = (com.mkulesh.micromath.widgets.CustomEditText) $r3;

        $r13 = virtualinvoke r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField addTerm(com.mkulesh.micromath.formula.FormulaBase,android.widget.LinearLayout,com.mkulesh.micromath.widgets.CustomEditText,com.mkulesh.micromath.widgets.FormulaChangeIf,boolean)>(r0, $r1, $r12, r0, 0);

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField functionTerm> = $r13;

        $r13 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField functionTerm>;

        $r13.<com.mkulesh.micromath.formula.TermField: int termDepth> = 1;

        $r1 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout layout>;

        $r3 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.View findViewById(int)>(2131493146);

        $r1 = (android.widget.LinearLayout) $r3;

        $r11 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout layout>;

        $r3 = virtualinvoke $r11.<android.widget.LinearLayout: android.view.View findViewById(int)>(2131493147);

        $r12 = (com.mkulesh.micromath.widgets.CustomEditText) $r3;

        $r13 = virtualinvoke r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField addTerm(com.mkulesh.micromath.formula.FormulaBase,android.widget.LinearLayout,com.mkulesh.micromath.widgets.CustomEditText,com.mkulesh.micromath.widgets.FormulaChangeIf,boolean)>(r0, $r1, $r12, r0, 0);

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField xMax> = $r13;

        $r14 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField[] boundaries>;

        $r13 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField xMax>;

        $r14[3] = $r13;

        $r15 = r0.<com.mkulesh.micromath.plots.PlotContour: java.util.ArrayList terms>;

        $r16 = virtualinvoke $r15.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (com.mkulesh.micromath.formula.TermField) $r17;

        $r18 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType NEVER>;

        $r13.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$BracketsType bracketsType> = $r18;

        goto label3;

     label4:
        $r14 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField[] boundaries>;

        $i1 = lengthof $r14;

     label5:
        if $i0 >= $i1 goto label6;

        $r13 = $r14[$i0];

        $r13.<com.mkulesh.micromath.formula.TermField: int termDepth> = 2;

        $i0 = $i0 + 1;

        goto label5;

     label6:
        $r15 = r0.<com.mkulesh.micromath.plots.PlotContour: java.util.ArrayList axes>;

        $r1 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout layout>;

        $r3 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.View findViewById(int)>(2131493142);

        $r5 = (com.mkulesh.micromath.widgets.CustomTextView) $r3;

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $r15 = r0.<com.mkulesh.micromath.plots.PlotContour: java.util.ArrayList axes>;

        $r1 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout layout>;

        $r3 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.View findViewById(int)>(2131493145);

        $r5 = (com.mkulesh.micromath.widgets.CustomTextView) $r3;

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $r15 = r0.<com.mkulesh.micromath.plots.PlotContour: java.util.ArrayList axes>;

        $r1 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout layout>;

        $r3 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.View findViewById(int)>(2131493132);

        $r5 = (com.mkulesh.micromath.widgets.CustomTextView) $r3;

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i0 = 0;

     label7:
        $r15 = r0.<com.mkulesh.micromath.plots.PlotContour: java.util.ArrayList axes>;

        $i1 = virtualinvoke $r15.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label8;

        $r15 = r0.<com.mkulesh.micromath.plots.PlotContour: java.util.ArrayList axes>;

        $r17 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r5 = (com.mkulesh.micromath.widgets.CustomTextView) $r17;

        $r19 = <com.mkulesh.micromath.widgets.CustomTextView$SymbolType: com.mkulesh.micromath.widgets.CustomTextView$SymbolType TEXT>;

        $r8 = virtualinvoke r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r9 = virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke $r5.<com.mkulesh.micromath.widgets.CustomTextView: void prepare(com.mkulesh.micromath.widgets.CustomTextView$SymbolType,android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.FormulaChangeIf)>($r19, $r9, r0);

        $i0 = $i0 + 1;

        goto label7;

     label8:
        specialinvoke r0.<com.mkulesh.micromath.plots.PlotContour: void updatePlotView()>();

        return;
    }
    private boolean setEmptyBorders(int, com.mkulesh.micromath.formula.TermField, com.mkulesh.micromath.formula.TermField)
    {
        com.mkulesh.micromath.plots.PlotContour r0;
        int $i0;
        com.mkulesh.micromath.formula.TermField $r1, $r2;
        com.mkulesh.micromath.plots.PlotContour$Function3D $r3;
        double[] $r4;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.mkulesh.micromath.formula.TermField;

        $r2 := @parameter2: com.mkulesh.micromath.formula.TermField;

        $r3 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.PlotContour$Function3D function>;

        $r4 = virtualinvoke $r3.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[] getMinMaxValues(int)>($i0);

        $z0 = specialinvoke r0.<com.mkulesh.micromath.formula.CalculationResult: boolean setEmptyBorders(double[],com.mkulesh.micromath.formula.TermField,com.mkulesh.micromath.formula.TermField)>($r4, $r1, $r2);

        return $z0;
    }
    private void setTwoDPlotStyle(com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle)
    {
        com.mkulesh.micromath.plots.PlotContour r0;
        com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle $r1, $r8;
        com.mkulesh.micromath.properties.PlotProperties r2, $r7;
        com.mkulesh.micromath.properties.AxisProperties r3, $r11;
        android.widget.LinearLayout $r4;
        android.view.View $r5;
        com.mkulesh.micromath.plots.views.PlotView r6, r9;
        int[] $r10;
        int $i0;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour;

        $r1 := @parameter0: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle;

        r2 = null;

        r3 = null;

        $r4 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout layout>;

        $r5 = virtualinvoke $r4.<android.widget.LinearLayout: android.view.View findViewById(int)>(2131493137);

        r6 = (com.mkulesh.micromath.plots.views.PlotView) $r5;

        $r7 = virtualinvoke r6.<com.mkulesh.micromath.plots.views.PlotView: com.mkulesh.micromath.properties.PlotProperties getPlotParameters()>();

        $r8 = <com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle CONTOUR>;

        $r7.<com.mkulesh.micromath.properties.PlotProperties: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle twoDPlotStyle> = $r8;

        $r4 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout layout>;

        $r5 = virtualinvoke $r4.<android.widget.LinearLayout: android.view.View findViewById(int)>(2131493138);

        r9 = (com.mkulesh.micromath.plots.views.PlotView) $r5;

        $r7 = virtualinvoke r9.<com.mkulesh.micromath.plots.views.PlotView: com.mkulesh.micromath.properties.PlotProperties getPlotParameters()>();

        $r8 = <com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle SURFACE>;

        $r7.<com.mkulesh.micromath.properties.PlotProperties: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle twoDPlotStyle> = $r8;

        $r10 = <com.mkulesh.micromath.plots.PlotContour$2: int[] $SwitchMap$com$mkulesh$micromath$properties$PlotProperties$TwoDPlotStyle>;

        $i0 = virtualinvoke $r1.<com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle: int ordinal()>();

        $i0 = $r10[$i0];

        lookupswitch($i0)
        {
            case 1: goto label4;
            case 2: goto label5;
            default: goto label1;
        };

     label1:
        r6 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        virtualinvoke r6.<com.mkulesh.micromath.plots.views.PlotView: void setVisibility(int)>(0);

        if r2 == null goto label2;

        r6 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $r7 = virtualinvoke r6.<com.mkulesh.micromath.plots.views.PlotView: com.mkulesh.micromath.properties.PlotProperties getPlotParameters()>();

        virtualinvoke $r7.<com.mkulesh.micromath.properties.PlotProperties: void assign(com.mkulesh.micromath.properties.PlotProperties)>(r2);

     label2:
        if r3 == null goto label3;

        r6 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $r11 = virtualinvoke r6.<com.mkulesh.micromath.plots.views.PlotView: com.mkulesh.micromath.properties.AxisProperties getAxisParameters()>();

        virtualinvoke $r11.<com.mkulesh.micromath.properties.AxisProperties: void assign(com.mkulesh.micromath.properties.AxisProperties)>(r3);

     label3:
        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle twoDPlotStyle> = $r1;

        return;

     label4:
        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView> = r6;

        r2 = virtualinvoke r9.<com.mkulesh.micromath.plots.views.PlotView: com.mkulesh.micromath.properties.PlotProperties getPlotParameters()>();

        r3 = virtualinvoke r9.<com.mkulesh.micromath.plots.views.PlotView: com.mkulesh.micromath.properties.AxisProperties getAxisParameters()>();

        virtualinvoke r9.<com.mkulesh.micromath.plots.views.PlotView: void setVisibility(int)>(8);

        virtualinvoke r9.<com.mkulesh.micromath.plots.views.PlotView: void setFunction(com.mkulesh.micromath.plots.FunctionIf)>(null);

        $r4 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout functionViewLayout>;

        virtualinvoke $r4.<android.widget.LinearLayout: void setBaselineAlignedChildIndex(int)>(0);

        goto label1;

     label5:
        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView> = r9;

        r2 = virtualinvoke r6.<com.mkulesh.micromath.plots.views.PlotView: com.mkulesh.micromath.properties.PlotProperties getPlotParameters()>();

        r3 = virtualinvoke r6.<com.mkulesh.micromath.plots.views.PlotView: com.mkulesh.micromath.properties.AxisProperties getAxisParameters()>();

        virtualinvoke r6.<com.mkulesh.micromath.plots.views.PlotView: void setVisibility(int)>(8);

        virtualinvoke r9.<com.mkulesh.micromath.plots.views.PlotView: void setFunction(com.mkulesh.micromath.plots.FunctionIf)>(null);

        $r4 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout functionViewLayout>;

        virtualinvoke $r4.<android.widget.LinearLayout: void setBaselineAlignedChildIndex(int)>(1);

        goto label1;
    }
    private void updatePlotView()
    {
        com.mkulesh.micromath.plots.PlotContour r0;
        com.mkulesh.micromath.formula.FormulaList $r1;
        com.mkulesh.micromath.widgets.ScaledDimensions $r2;
        float $f0, $f1;
        com.mkulesh.micromath.plots.views.PlotView $r3;
        android.widget.LinearLayout $r4;
        android.view.ViewGroup$LayoutParams $r5;
        com.mkulesh.micromath.properties.PlotProperties $r6;
        int $i0;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour;

        $r1 = virtualinvoke r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r2 = virtualinvoke $r1.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.widgets.ScaledDimensions getDimen()>();

        $f0 = virtualinvoke $r2.<com.mkulesh.micromath.widgets.ScaledDimensions: float getScaleFactor()>();

        $r3 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        virtualinvoke $r3.<com.mkulesh.micromath.plots.views.PlotView: void setScale(float)>($f0);

        $r4 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout layout>;

        $r5 = virtualinvoke $r4.<android.widget.LinearLayout: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $r6 = virtualinvoke $r3.<com.mkulesh.micromath.plots.views.PlotView: com.mkulesh.micromath.properties.PlotProperties getPlotParameters()>();

        $i0 = $r6.<com.mkulesh.micromath.properties.PlotProperties: int width>;

        $f1 = (float) $i0;

        $f1 = $f1 * $f0;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f1);

        $r5.<android.view.ViewGroup$LayoutParams: int width> = $i0;

        $r4 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout layout>;

        $r5 = virtualinvoke $r4.<android.widget.LinearLayout: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $r6 = virtualinvoke $r3.<com.mkulesh.micromath.plots.views.PlotView: com.mkulesh.micromath.properties.PlotProperties getPlotParameters()>();

        $i0 = $r6.<com.mkulesh.micromath.properties.PlotProperties: int height>;

        $f1 = (float) $i0;

        $f0 = $f1 * $f0;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $r5.<android.view.ViewGroup$LayoutParams: int height> = $i0;

        return;
    }
    public void calculate(com.mkulesh.micromath.formula.CalculaterTask) throws com.mkulesh.micromath.formula.CalculaterTask$CancelException
    {
        com.mkulesh.micromath.plots.PlotContour r0;
        com.mkulesh.micromath.formula.CalculaterTask $r1;
        com.mkulesh.micromath.plots.PlotContour$Function3D $r2;
        com.mkulesh.micromath.plots.views.PlotView $r3;
        boolean $z0;
        com.mkulesh.micromath.plots.views.SurfacePlotView $r4;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour;

        $r1 := @parameter0: com.mkulesh.micromath.formula.CalculaterTask;

        $r2 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.PlotContour$Function3D function>;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.PlotContour$Function3D: void calculate(com.mkulesh.micromath.formula.CalculaterTask)>($r1);

        $r3 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $z0 = $r3 instanceof com.mkulesh.micromath.plots.views.SurfacePlotView;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $r4 = (com.mkulesh.micromath.plots.views.SurfacePlotView) $r3;

        $r2 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.PlotContour$Function3D function>;

        virtualinvoke $r4.<com.mkulesh.micromath.plots.views.SurfacePlotView: void renderSurface(com.mkulesh.micromath.plots.FunctionIf)>($r2);

     label1:
        return;
    }
    public com.mkulesh.micromath.formula.FormulaBase$BaseType getBaseType()
    {
        com.mkulesh.micromath.plots.PlotContour r0;
        com.mkulesh.micromath.formula.FormulaBase$BaseType r1;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour;

        r1 = <com.mkulesh.micromath.formula.FormulaBase$BaseType: com.mkulesh.micromath.formula.FormulaBase$BaseType PLOT_CONTOUR>;

        return r1;
    }
    public com.mkulesh.micromath.properties.PlotPropertiesChangeIf$Dimension getDimension()
    {
        com.mkulesh.micromath.plots.PlotContour r0;
        com.mkulesh.micromath.properties.PlotPropertiesChangeIf$Dimension r1;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour;

        r1 = <com.mkulesh.micromath.properties.PlotPropertiesChangeIf$Dimension: com.mkulesh.micromath.properties.PlotPropertiesChangeIf$Dimension TWO_D>;

        return r1;
    }
    public void invalidateResult()
    {
        com.mkulesh.micromath.plots.PlotContour r0;
        com.mkulesh.micromath.formula.TermField r1;
        int $i0, $i1;
        boolean $z0;
        com.mkulesh.micromath.formula.TermField[] $r2;
        com.mkulesh.micromath.plots.views.PlotView $r3;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour;

        $r2 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField[] boundaries>;

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        r1 = $r2[$i1];

        $z0 = virtualinvoke r1.<com.mkulesh.micromath.formula.TermField: boolean isEmptyOrAutoContent()>();

        if $z0 == 0 goto label2;

        virtualinvoke r1.<com.mkulesh.micromath.formula.TermField: void setText(java.lang.CharSequence)>("");

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r3 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        virtualinvoke $r3.<com.mkulesh.micromath.plots.views.PlotView: void setFunction(com.mkulesh.micromath.plots.FunctionIf)>(null);

        $r3 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        virtualinvoke $r3.<com.mkulesh.micromath.plots.views.PlotView: void invalidate()>();

        return;
    }
    public boolean isContentValid(com.mkulesh.micromath.formula.FormulaBase$ValidationPassType)
    {
        com.mkulesh.micromath.plots.PlotContour r0;
        com.mkulesh.micromath.formula.FormulaBase$ValidationPassType $r1;
        boolean $z0, z1;
        int[] $r2;
        int $i0;
        com.mkulesh.micromath.plots.views.PlotView $r3;
        com.mkulesh.micromath.formula.TermField $r4;
        java.lang.String r5, $r10;
        java.util.ArrayList $r6;
        android.content.Context $r7;
        android.content.res.Resources $r8;
        java.lang.Object[] $r9;
        com.mkulesh.micromath.formula.TermField$ErrorNotification $r11;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour;

        $r1 := @parameter0: com.mkulesh.micromath.formula.FormulaBase$ValidationPassType;

        $z0 = specialinvoke r0.<com.mkulesh.micromath.formula.CalculationResult: boolean isContentValid(com.mkulesh.micromath.formula.FormulaBase$ValidationPassType)>($r1);

        z1 = $z0;

        $r2 = <com.mkulesh.micromath.plots.PlotContour$2: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaBase$ValidationPassType>;

        $i0 = virtualinvoke $r1.<com.mkulesh.micromath.formula.FormulaBase$ValidationPassType: int ordinal()>();

        $i0 = $r2[$i0];

        lookupswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label1;
        };

     label1:
        if z1 != 0 goto label5;

        $r3 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        virtualinvoke $r3.<com.mkulesh.micromath.plots.views.PlotView: void setFunction(com.mkulesh.micromath.plots.FunctionIf)>(null);

        $r3 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        virtualinvoke $r3.<com.mkulesh.micromath.plots.views.PlotView: void invalidate()>();

        return z1;

     label2:
        if $z0 == 0 goto label1;

        $r4 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField functionTerm>;

        if $r4 == null goto label1;

        $r4 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField functionTerm>;

        $z0 = virtualinvoke $r4.<com.mkulesh.micromath.formula.TermField: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        r5 = null;

        $r6 = virtualinvoke r0.<com.mkulesh.micromath.plots.PlotContour: java.util.ArrayList getIndirectIntervals()>();

        $z0 = virtualinvoke $r6.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        z1 = 0;

        $r7 = virtualinvoke r0.<com.mkulesh.micromath.plots.PlotContour: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        r5 = virtualinvoke $r8.<android.content.res.Resources: java.lang.String getString(int)>(2131099787);

        $r9 = newarray (java.lang.Object)[1];

        $r10 = virtualinvoke $r6.<java.util.ArrayList: java.lang.String toString()>();

        $r9[0] = $r10;

        r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r5, $r9);

     label3:
        $r4 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField functionTerm>;

        $r11 = <com.mkulesh.micromath.formula.TermField$ErrorNotification: com.mkulesh.micromath.formula.TermField$ErrorNotification LAYOUT_BORDER>;

        virtualinvoke $r4.<com.mkulesh.micromath.formula.TermField: void setError(java.lang.String,com.mkulesh.micromath.formula.TermField$ErrorNotification,com.mkulesh.micromath.widgets.CustomLayout)>(r5, $r11, null);

        goto label1;

     label4:
        $r6 = virtualinvoke r0.<com.mkulesh.micromath.plots.PlotContour: java.util.ArrayList getDirectIntervals()>();

        $i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if $i0 <= 2 goto label3;

        z1 = 0;

        $r7 = virtualinvoke r0.<com.mkulesh.micromath.plots.PlotContour: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        r5 = virtualinvoke $r8.<android.content.res.Resources: java.lang.String getString(int)>(2131099780);

        goto label3;

     label5:
        return z1;
    }
    public void onAxisPropertiesChange(boolean)
    {
        com.mkulesh.micromath.plots.PlotContour r0;
        boolean $z0;
        com.mkulesh.micromath.formula.TermField $r1, $r2, $r3, $r8;
        com.mkulesh.micromath.undo.FormulaState $r4;
        com.mkulesh.micromath.formula.FormulaList $r5;
        com.mkulesh.micromath.undo.UndoState $r6;
        com.mkulesh.micromath.plots.views.PlotView $r7;
        android.widget.LinearLayout $r9;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour;

        $z0 := @parameter0: boolean;

        if $z0 != 0 goto label1;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.undo.FormulaState formulaState> = null;

        return;

     label1:
        $r4 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.undo.FormulaState formulaState>;

        if $r4 == null goto label2;

        $r5 = virtualinvoke r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r6 = virtualinvoke $r5.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.undo.UndoState getUndoState()>();

        $r4 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.undo.FormulaState formulaState>;

        virtualinvoke $r6.<com.mkulesh.micromath.undo.UndoState: void addEntry(android.os.Parcelable)>($r4);

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.undo.FormulaState formulaState> = null;

     label2:
        $r7 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $r8 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField xMin>;

        $r1 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField xMax>;

        $r2 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField yMin>;

        $r3 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField yMax>;

        virtualinvoke r0.<com.mkulesh.micromath.plots.PlotContour: void updatePlotBoundaries(com.mkulesh.micromath.plots.views.PlotView,com.mkulesh.micromath.formula.TermField,com.mkulesh.micromath.formula.TermField,com.mkulesh.micromath.formula.TermField,com.mkulesh.micromath.formula.TermField)>($r7, $r8, $r1, $r2, $r3);

        $r7 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $r9 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout layout>;

        staticinvoke <com.mkulesh.micromath.utils.ViewUtils: void invalidateLayout(android.view.View,android.widget.LinearLayout)>($r7, $r9);

        return;
    }
    public void onColorMapPropertiesChange(boolean)
    {
        com.mkulesh.micromath.plots.PlotContour r0;
        boolean $z0;
        com.mkulesh.micromath.undo.FormulaState $r1;
        com.mkulesh.micromath.formula.FormulaList $r2;
        com.mkulesh.micromath.undo.UndoState $r3;
        com.mkulesh.micromath.plots.views.PlotView $r4;
        com.mkulesh.micromath.plots.views.ColorMapView $r5;
        com.mkulesh.micromath.plots.PlotContour$Function3D $r6;
        android.widget.LinearLayout $r7;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour;

        $z0 := @parameter0: boolean;

        if $z0 != 0 goto label1;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.undo.FormulaState formulaState> = null;

        return;

     label1:
        $r1 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.undo.FormulaState formulaState>;

        if $r1 == null goto label2;

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.undo.UndoState getUndoState()>();

        $r1 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.undo.FormulaState formulaState>;

        virtualinvoke $r3.<com.mkulesh.micromath.undo.UndoState: void addEntry(android.os.Parcelable)>($r1);

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.undo.FormulaState formulaState> = null;

     label2:
        $r4 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $r5 = virtualinvoke $r4.<com.mkulesh.micromath.plots.views.PlotView: com.mkulesh.micromath.plots.views.ColorMapView getColorMapView()>();

        $r6 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.PlotContour$Function3D function>;

        virtualinvoke $r5.<com.mkulesh.micromath.plots.views.ColorMapView: void setFunction(com.mkulesh.micromath.plots.FunctionIf)>($r6);

        $r4 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $r7 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout layout>;

        staticinvoke <com.mkulesh.micromath.utils.ViewUtils: void invalidateLayout(android.view.View,android.widget.LinearLayout)>($r4, $r7);

        return;
    }
    public void onObjectProperties(android.view.View)
    {
        com.mkulesh.micromath.plots.PlotContour r0;
        android.view.View $r1;
        com.mkulesh.micromath.dialogs.DialogPlotSettings r2;
        com.mkulesh.micromath.formula.FormulaList $r3;
        android.support.v7.app.AppCompatActivity $r4;
        com.mkulesh.micromath.plots.views.PlotView $r5;
        com.mkulesh.micromath.properties.PlotProperties $r6;
        com.mkulesh.micromath.undo.FormulaState $r7;
        com.mkulesh.micromath.plots.views.ColorMapView $r8;
        com.mkulesh.micromath.dialogs.DialogColorMapSettings r9;
        com.mkulesh.micromath.properties.ColorMapProperties $r10;
        java.util.ArrayList $r11;
        boolean $z0;
        com.mkulesh.micromath.dialogs.DialogAxisSettings r12;
        com.mkulesh.micromath.properties.AxisProperties $r13;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour;

        $r1 := @parameter0: android.view.View;

        if $r1 != r0 goto label1;

        r2 = new com.mkulesh.micromath.dialogs.DialogPlotSettings;

        $r3 = virtualinvoke r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r4 = virtualinvoke $r3.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $r6 = virtualinvoke $r5.<com.mkulesh.micromath.plots.views.PlotView: com.mkulesh.micromath.properties.PlotProperties getPlotParameters()>();

        specialinvoke r2.<com.mkulesh.micromath.dialogs.DialogPlotSettings: void <init>(android.app.Activity,com.mkulesh.micromath.properties.PlotPropertiesChangeIf,com.mkulesh.micromath.properties.PlotProperties)>($r4, r0, $r6);

        $r7 = virtualinvoke r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.undo.FormulaState getState()>();

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.undo.FormulaState formulaState> = $r7;

        virtualinvoke r2.<com.mkulesh.micromath.dialogs.DialogPlotSettings: void show()>();

     label1:
        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $r8 = virtualinvoke $r5.<com.mkulesh.micromath.plots.views.PlotView: com.mkulesh.micromath.plots.views.ColorMapView getColorMapView()>();

        if $r1 != $r8 goto label3;

        r9 = new com.mkulesh.micromath.dialogs.DialogColorMapSettings;

        $r3 = virtualinvoke r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r4 = virtualinvoke $r3.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $r8 = virtualinvoke $r5.<com.mkulesh.micromath.plots.views.PlotView: com.mkulesh.micromath.plots.views.ColorMapView getColorMapView()>();

        $r10 = virtualinvoke $r8.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.properties.ColorMapProperties getColorMapParameters()>();

        specialinvoke r9.<com.mkulesh.micromath.dialogs.DialogColorMapSettings: void <init>(android.app.Activity,com.mkulesh.micromath.properties.ColorMapPropertiesChangeIf,com.mkulesh.micromath.properties.ColorMapProperties)>($r4, r0, $r10);

        $r7 = virtualinvoke r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.undo.FormulaState getState()>();

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.undo.FormulaState formulaState> = $r7;

        virtualinvoke r9.<com.mkulesh.micromath.dialogs.DialogColorMapSettings: void show()>();

     label2:
        specialinvoke r0.<com.mkulesh.micromath.formula.CalculationResult: void onObjectProperties(android.view.View)>($r1);

        return;

     label3:
        $r11 = r0.<com.mkulesh.micromath.plots.PlotContour: java.util.ArrayList axes>;

        $z0 = virtualinvoke $r11.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        r12 = new com.mkulesh.micromath.dialogs.DialogAxisSettings;

        $r3 = virtualinvoke r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r4 = virtualinvoke $r3.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $r13 = virtualinvoke $r5.<com.mkulesh.micromath.plots.views.PlotView: com.mkulesh.micromath.properties.AxisProperties getAxisParameters()>();

        specialinvoke r12.<com.mkulesh.micromath.dialogs.DialogAxisSettings: void <init>(android.app.Activity,com.mkulesh.micromath.properties.AxisPropertiesChangeIf,com.mkulesh.micromath.properties.AxisProperties)>($r4, r0, $r13);

        $r7 = virtualinvoke r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.undo.FormulaState getState()>();

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.undo.FormulaState formulaState> = $r7;

        virtualinvoke r12.<com.mkulesh.micromath.dialogs.DialogAxisSettings: void show()>();

        goto label2;
    }
    public void onPlotPropertiesChange(boolean)
    {
        com.mkulesh.micromath.plots.PlotContour r0;
        boolean $z0;
        com.mkulesh.micromath.formula.FormulaList $r1;
        com.mkulesh.micromath.undo.FormulaState $r2;
        com.mkulesh.micromath.undo.UndoState $r3;
        com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle $r4, $r7;
        com.mkulesh.micromath.plots.views.PlotView $r5;
        com.mkulesh.micromath.properties.PlotProperties $r6;
        android.widget.LinearLayout $r8;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour;

        $z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        virtualinvoke $r1.<com.mkulesh.micromath.formula.FormulaList: void finishActiveActionMode()>();

        if $z0 != 0 goto label1;

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.undo.FormulaState formulaState> = null;

        return;

     label1:
        $r2 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.undo.FormulaState formulaState>;

        if $r2 == null goto label2;

        $r1 = virtualinvoke r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r3 = virtualinvoke $r1.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.undo.UndoState getUndoState()>();

        $r2 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.undo.FormulaState formulaState>;

        virtualinvoke $r3.<com.mkulesh.micromath.undo.UndoState: void addEntry(android.os.Parcelable)>($r2);

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.undo.FormulaState formulaState> = null;

     label2:
        $r4 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle twoDPlotStyle>;

        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $r6 = virtualinvoke $r5.<com.mkulesh.micromath.plots.views.PlotView: com.mkulesh.micromath.properties.PlotProperties getPlotParameters()>();

        $r7 = $r6.<com.mkulesh.micromath.properties.PlotProperties: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle twoDPlotStyle>;

        if $r4 == $r7 goto label3;

        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $r6 = virtualinvoke $r5.<com.mkulesh.micromath.plots.views.PlotView: com.mkulesh.micromath.properties.PlotProperties getPlotParameters()>();

        $r4 = $r6.<com.mkulesh.micromath.properties.PlotProperties: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle twoDPlotStyle>;

        specialinvoke r0.<com.mkulesh.micromath.plots.PlotContour: void setTwoDPlotStyle(com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle)>($r4);

        virtualinvoke r0.<com.mkulesh.micromath.plots.PlotContour: void showResult()>();

     label3:
        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        virtualinvoke $r5.<com.mkulesh.micromath.plots.views.PlotView: void updateLabels()>();

        specialinvoke r0.<com.mkulesh.micromath.plots.PlotContour: void updatePlotView()>();

        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $r8 = r0.<com.mkulesh.micromath.plots.PlotContour: android.widget.LinearLayout layout>;

        staticinvoke <com.mkulesh.micromath.utils.ViewUtils: void invalidateLayout(android.view.View,android.widget.LinearLayout)>($r5, $r8);

        return;
    }
    public void onRestoreInstanceState(android.os.Parcelable)
    {
        com.mkulesh.micromath.plots.PlotContour r0;
        android.os.Parcelable $r1;
        boolean $z0;
        android.os.Bundle r2;
        java.lang.String $r3;
        com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle $r4, $r7;
        com.mkulesh.micromath.plots.views.PlotView $r5;
        com.mkulesh.micromath.properties.PlotProperties $r6;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour;

        $r1 := @parameter0: android.os.Parcelable;

        if $r1 != null goto label1;

        return;

     label1:
        $z0 = $r1 instanceof android.os.Bundle;

        if $z0 == 0 goto label4;

        r2 = (android.os.Bundle) $r1;

        $r3 = virtualinvoke r2.<android.os.Bundle: java.lang.String getString(java.lang.String)>("two_d_plot_style");

        if $r3 == null goto label2;

        $r4 = staticinvoke <com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle valueOf(java.lang.String)>($r3);

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle twoDPlotStyle> = $r4;

     label2:
        $r4 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle twoDPlotStyle>;

        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $r6 = virtualinvoke $r5.<com.mkulesh.micromath.plots.views.PlotView: com.mkulesh.micromath.properties.PlotProperties getPlotParameters()>();

        $r7 = $r6.<com.mkulesh.micromath.properties.PlotProperties: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle twoDPlotStyle>;

        if $r4 == $r7 goto label3;

        $r4 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle twoDPlotStyle>;

        specialinvoke r0.<com.mkulesh.micromath.plots.PlotContour: void setTwoDPlotStyle(com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle)>($r4);

     label3:
        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $r1 = virtualinvoke r2.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("functionview_parameters");

        virtualinvoke $r5.<com.mkulesh.micromath.plots.views.PlotView: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        specialinvoke r0.<com.mkulesh.micromath.formula.CalculationResult: void onRestoreInstanceState(android.os.Parcelable)>(r2);

        specialinvoke r0.<com.mkulesh.micromath.plots.PlotContour: void updatePlotView()>();

     label4:
        return;
    }
    public android.os.Parcelable onSaveInstanceState()
    {
        com.mkulesh.micromath.plots.PlotContour r0;
        android.os.Parcelable $r1, $r6;
        boolean $z0;
        android.os.Bundle r2;
        com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle $r3;
        java.lang.String $r4;
        com.mkulesh.micromath.plots.views.PlotView $r5;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour;

        $r1 = specialinvoke r0.<com.mkulesh.micromath.formula.CalculationResult: android.os.Parcelable onSaveInstanceState()>();

        $z0 = $r1 instanceof android.os.Bundle;

        if $z0 == 0 goto label1;

        r2 = (android.os.Bundle) $r1;

        $r3 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle twoDPlotStyle>;

        $r4 = virtualinvoke $r3.<com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle: java.lang.String toString()>();

        virtualinvoke r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("two_d_plot_style", $r4);

        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $r6 = virtualinvoke $r5.<com.mkulesh.micromath.plots.views.PlotView: android.os.Parcelable onSaveInstanceState()>();

        virtualinvoke r2.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("functionview_parameters", $r6);

     label1:
        return $r1;
    }
    public void onSizeChanged(com.mkulesh.micromath.widgets.SizeChangingLayout, int, int)
    {
        com.mkulesh.micromath.plots.PlotContour r0;
        com.mkulesh.micromath.widgets.SizeChangingLayout $r1;
        int $i0, $i1;
        com.mkulesh.micromath.plots.PlotContour$1 $r2;
        com.mkulesh.micromath.widgets.CustomTextView $r3;
        android.view.ViewGroup$LayoutParams $r4;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour;

        $r1 := @parameter0: com.mkulesh.micromath.widgets.SizeChangingLayout;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r3 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.widgets.CustomTextView cornerView1>;

        $r4 = virtualinvoke $r3.<com.mkulesh.micromath.widgets.CustomTextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4.<android.view.ViewGroup$LayoutParams: int height> = $i1;

        $r3 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.widgets.CustomTextView cornerView2>;

        $r4 = virtualinvoke $r3.<com.mkulesh.micromath.widgets.CustomTextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4.<android.view.ViewGroup$LayoutParams: int height> = $i1;

        $r3 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.widgets.CustomTextView cornerView1>;

        $r2 = new com.mkulesh.micromath.plots.PlotContour$1;

        specialinvoke $r2.<com.mkulesh.micromath.plots.PlotContour$1: void <init>(com.mkulesh.micromath.plots.PlotContour)>(r0);

        virtualinvoke $r3.<com.mkulesh.micromath.widgets.CustomTextView: boolean post(java.lang.Runnable)>($r2);

        return;
    }
    public boolean onStartReadXmlTag(org.xmlpull.v1.XmlPullParser)
    {
        com.mkulesh.micromath.plots.PlotContour r0;
        org.xmlpull.v1.XmlPullParser $r1;
        com.mkulesh.micromath.formula.FormulaBase$BaseType $r2;
        java.lang.String $r3, $r4, $r13;
        boolean $z0;
        java.util.Locale $r5;
        com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle $r6, $r9;
        com.mkulesh.micromath.plots.views.PlotView $r7;
        com.mkulesh.micromath.properties.PlotProperties $r8;
        com.mkulesh.micromath.properties.AxisProperties $r10;
        com.mkulesh.micromath.plots.views.ColorMapView $r11;
        com.mkulesh.micromath.properties.ColorMapProperties $r12;
        java.lang.Exception $r14;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        specialinvoke r0.<com.mkulesh.micromath.formula.CalculationResult: boolean onStartReadXmlTag(org.xmlpull.v1.XmlPullParser)>($r1);

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.FormulaBase$BaseType getBaseType()>();

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaBase$BaseType: java.lang.String toString()>();

        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "plotStyle");

        if $r3 == null goto label4;

        $r5 = <java.util.Locale: java.util.Locale ENGLISH>;

     label1:
        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r5);

        $r6 = staticinvoke <com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle valueOf(java.lang.String)>($r3);

        r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle twoDPlotStyle> = $r6;

        $r6 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle twoDPlotStyle>;

        $r7 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $r8 = virtualinvoke $r7.<com.mkulesh.micromath.plots.views.PlotView: com.mkulesh.micromath.properties.PlotProperties getPlotParameters()>();

        $r9 = $r8.<com.mkulesh.micromath.properties.PlotProperties: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle twoDPlotStyle>;

     label2:
        if $r6 == $r9 goto label4;

     label3:
        $r6 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle twoDPlotStyle>;

        specialinvoke r0.<com.mkulesh.micromath.plots.PlotContour: void setTwoDPlotStyle(com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle)>($r6);

     label4:
        $r7 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $r8 = virtualinvoke $r7.<com.mkulesh.micromath.plots.views.PlotView: com.mkulesh.micromath.properties.PlotProperties getPlotParameters()>();

        virtualinvoke $r8.<com.mkulesh.micromath.properties.PlotProperties: void readFromXml(org.xmlpull.v1.XmlPullParser)>($r1);

        $r7 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $r10 = virtualinvoke $r7.<com.mkulesh.micromath.plots.views.PlotView: com.mkulesh.micromath.properties.AxisProperties getAxisParameters()>();

        virtualinvoke $r10.<com.mkulesh.micromath.properties.AxisProperties: void readFromXml(org.xmlpull.v1.XmlPullParser)>($r1);

        $r7 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $r11 = virtualinvoke $r7.<com.mkulesh.micromath.plots.views.PlotView: com.mkulesh.micromath.plots.views.ColorMapView getColorMapView()>();

        $r12 = virtualinvoke $r11.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.properties.ColorMapProperties getColorMapParameters()>();

        virtualinvoke $r12.<com.mkulesh.micromath.properties.ColorMapProperties: void readFromXml(org.xmlpull.v1.XmlPullParser)>($r1);

     label5:
        $r3 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "key");

        $r4 = "term";

        $r13 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r13);

        if $z0 == 0 goto label6;

        if $r3 == null goto label6;

     label6:
        specialinvoke r0.<com.mkulesh.micromath.plots.PlotContour: void updatePlotView()>();

        return 0;

     label7:
        $r14 := @caughtexception;

        goto label4;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
    }
    public boolean onStartWriteXmlTag(org.xmlpull.v1.XmlSerializer, java.lang.String) throws java.lang.Exception
    {
        com.mkulesh.micromath.plots.PlotContour r0;
        org.xmlpull.v1.XmlSerializer $r1;
        java.lang.String $r2, $r5, $r6;
        java.util.Locale $r3;
        com.mkulesh.micromath.formula.FormulaBase$BaseType $r4;
        boolean $z0;
        com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle $r7;
        com.mkulesh.micromath.plots.views.PlotView $r8;
        com.mkulesh.micromath.properties.PlotProperties $r9;
        com.mkulesh.micromath.properties.AxisProperties $r10;
        com.mkulesh.micromath.plots.views.ColorMapView $r11;
        com.mkulesh.micromath.properties.ColorMapProperties $r12;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour;

        $r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.mkulesh.micromath.formula.CalculationResult: boolean onStartWriteXmlTag(org.xmlpull.v1.XmlSerializer,java.lang.String)>($r1, $r2);

        $r4 = virtualinvoke r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.FormulaBase$BaseType getBaseType()>();

        $r5 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaBase$BaseType: java.lang.String toString()>();

        $r6 = interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r6);

        if $z0 == 0 goto label1;

        $r5 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

        $r7 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle twoDPlotStyle>;

        $r6 = virtualinvoke $r7.<com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle: java.lang.String toString()>();

        $r3 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r3);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r5, "plotStyle", $r6);

        $r8 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $r9 = virtualinvoke $r8.<com.mkulesh.micromath.plots.views.PlotView: com.mkulesh.micromath.properties.PlotProperties getPlotParameters()>();

        virtualinvoke $r9.<com.mkulesh.micromath.properties.PlotProperties: void writeToXml(org.xmlpull.v1.XmlSerializer)>($r1);

        $r8 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $r10 = virtualinvoke $r8.<com.mkulesh.micromath.plots.views.PlotView: com.mkulesh.micromath.properties.AxisProperties getAxisParameters()>();

        virtualinvoke $r10.<com.mkulesh.micromath.properties.AxisProperties: void writeToXml(org.xmlpull.v1.XmlSerializer)>($r1);

        $r8 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $r11 = virtualinvoke $r8.<com.mkulesh.micromath.plots.views.PlotView: com.mkulesh.micromath.plots.views.ColorMapView getColorMapView()>();

        $r12 = virtualinvoke $r11.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.properties.ColorMapProperties getColorMapParameters()>();

        virtualinvoke $r12.<com.mkulesh.micromath.properties.ColorMapProperties: void writeToXml(org.xmlpull.v1.XmlSerializer)>($r1);

     label1:
        $r5 = "term";

        $r6 = interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r6);

        if $z0 == 0 goto label2;

        if $r2 == null goto label2;

     label2:
        return 0;
    }
    public void onTermSelection(android.view.View, boolean, java.util.ArrayList)
    {
        com.mkulesh.micromath.plots.PlotContour r0;
        android.view.View $r1;
        boolean $z0, $z1;
        java.util.ArrayList r2, $r5;
        com.mkulesh.micromath.plots.views.PlotView $r3;
        com.mkulesh.micromath.plots.views.ColorMapView $r4;
        int i0, $i1;
        java.lang.Object $r6;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour;

        $r1 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        r2 := @parameter2: java.util.ArrayList;

        if r2 != null goto label1;

        $r3 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        if $r1 != $r3 goto label2;

     label1:
        specialinvoke r0.<com.mkulesh.micromath.formula.CalculationResult: void onTermSelection(android.view.View,boolean,java.util.ArrayList)>($r1, $z0, r2);

        return;

     label2:
        $r3 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $r4 = virtualinvoke $r3.<com.mkulesh.micromath.plots.views.PlotView: com.mkulesh.micromath.plots.views.ColorMapView getColorMapView()>();

        if $r1 != $r4 goto label3;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        goto label1;

     label3:
        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour: java.util.ArrayList axes>;

        $z1 = virtualinvoke $r5.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1);

        if $z1 == 0 goto label1;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        i0 = 0;

     label4:
        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour: java.util.ArrayList axes>;

        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label1;

        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour: java.util.ArrayList axes>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        i0 = i0 + 1;

        goto label4;
    }
    public void showResult()
    {
        com.mkulesh.micromath.plots.PlotContour r0;
        com.mkulesh.micromath.formula.TermField $r1, $r2, $r3, $r9;
        boolean $z0, $z1;
        com.mkulesh.micromath.plots.views.PlotView $r4;
        com.mkulesh.micromath.formula.FormulaList $r5;
        com.mkulesh.micromath.properties.DocumentProperties $r6;
        int $i0;
        com.mkulesh.micromath.plots.PlotContour$Function3D $r7;
        com.mkulesh.micromath.plots.views.SurfacePlotView r8;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour;

        $r1 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField xMin>;

        $r2 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField xMax>;

        $z0 = specialinvoke r0.<com.mkulesh.micromath.plots.PlotContour: boolean setEmptyBorders(int,com.mkulesh.micromath.formula.TermField,com.mkulesh.micromath.formula.TermField)>(0, $r1, $r2);

        $r1 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField yMin>;

        $r2 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField yMax>;

        $z1 = specialinvoke r0.<com.mkulesh.micromath.plots.PlotContour: boolean setEmptyBorders(int,com.mkulesh.micromath.formula.TermField,com.mkulesh.micromath.formula.TermField)>(1, $r1, $r2);

        if $z0 == 0 goto label2;

        if $z1 == 0 goto label2;

        $r4 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $r5 = virtualinvoke r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r6 = virtualinvoke $r5.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.properties.DocumentProperties getDocumentSettings()>();

        $i0 = $r6.<com.mkulesh.micromath.properties.DocumentProperties: int significantDigits>;

        virtualinvoke $r4.<com.mkulesh.micromath.plots.views.PlotView: void setSignificantDigits(int)>($i0);

        $r4 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $r7 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.PlotContour$Function3D function>;

        virtualinvoke $r4.<com.mkulesh.micromath.plots.views.PlotView: void setFunction(com.mkulesh.micromath.plots.FunctionIf)>($r7);

        $r4 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $z0 = $r4 instanceof com.mkulesh.micromath.plots.views.SurfacePlotView;

        if $z0 == 0 goto label1;

        $r4 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        r8 = (com.mkulesh.micromath.plots.views.SurfacePlotView) $r4;

        $z0 = virtualinvoke r8.<com.mkulesh.micromath.plots.views.SurfacePlotView: boolean isRendered()>();

        if $z0 != 0 goto label1;

        $r7 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.PlotContour$Function3D function>;

        virtualinvoke r8.<com.mkulesh.micromath.plots.views.SurfacePlotView: void renderSurface(com.mkulesh.micromath.plots.FunctionIf)>($r7);

     label1:
        $r4 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        $r9 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField xMin>;

        $r1 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField xMax>;

        $r2 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField yMin>;

        $r3 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField yMax>;

        virtualinvoke r0.<com.mkulesh.micromath.plots.PlotContour: void updatePlotBoundaries(com.mkulesh.micromath.plots.views.PlotView,com.mkulesh.micromath.formula.TermField,com.mkulesh.micromath.formula.TermField,com.mkulesh.micromath.formula.TermField,com.mkulesh.micromath.formula.TermField)>($r4, $r9, $r1, $r2, $r3);

        $r4 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        virtualinvoke $r4.<com.mkulesh.micromath.plots.views.PlotView: void invalidate()>();

        return;

     label2:
        $r4 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        virtualinvoke $r4.<com.mkulesh.micromath.plots.views.PlotView: void setFunction(com.mkulesh.micromath.plots.FunctionIf)>(null);

        $r4 = r0.<com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.plots.views.PlotView functionView>;

        virtualinvoke $r4.<com.mkulesh.micromath.plots.views.PlotView: void invalidate()>();

        return;
    }
    public void updateTextSize()
    {
        com.mkulesh.micromath.plots.PlotContour r0;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour;

        specialinvoke r0.<com.mkulesh.micromath.formula.CalculationResult: void updateTextSize()>();

        specialinvoke r0.<com.mkulesh.micromath.plots.PlotContour: void updatePlotView()>();

        return;
    }
