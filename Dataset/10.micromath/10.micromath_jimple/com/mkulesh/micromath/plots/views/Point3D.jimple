com.mkulesh.micromath.plots.views.Point3D extends java.lang.Object
public double x
public double y
public double z
    void <init>(double, double, double)
    {
        com.mkulesh.micromath.plots.views.Point3D r0;
        double $d0, $d1, $d2;

        r0 := @this: com.mkulesh.micromath.plots.views.Point3D;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $d2 := @parameter2: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.Point3D: double x> = $d0;

        r0.<com.mkulesh.micromath.plots.views.Point3D: double y> = $d1;

        r0.<com.mkulesh.micromath.plots.views.Point3D: double z> = $d2;

        return;
    }
    public final boolean isInvalid()
    {
        com.mkulesh.micromath.plots.views.Point3D r0;
        boolean $z0;
        double $d0;

        r0 := @this: com.mkulesh.micromath.plots.views.Point3D;

        $d0 = r0.<com.mkulesh.micromath.plots.views.Point3D: double z>;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        return $z0;
    }
    public void projection(android.graphics.Point, com.mkulesh.micromath.plots.views.SurfacePlotProjector)
    {
        com.mkulesh.micromath.plots.views.Point3D r0;
        android.graphics.Point $r1;
        com.mkulesh.micromath.plots.views.SurfacePlotProjector $r2;
        double $d0, $d1, $d2, $d3;

        r0 := @this: com.mkulesh.micromath.plots.views.Point3D;

        $r1 := @parameter0: android.graphics.Point;

        $r2 := @parameter1: com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        $d0 = r0.<com.mkulesh.micromath.plots.views.Point3D: double x>;

        $d1 = r0.<com.mkulesh.micromath.plots.views.Point3D: double y>;

        $d2 = r0.<com.mkulesh.micromath.plots.views.Point3D: double z>;

        $d3 = $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double zmin>;

        $d2 = $d2 - $d3;

        $d3 = $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double zfactor>;

        $d2 = $d2 * $d3;

        $d2 = $d2 - 10.0;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r1, $d0, $d1, $d2);

        return;
    }
    public final void transform(com.mkulesh.micromath.plots.views.SurfacePlotProjector)
    {
        com.mkulesh.micromath.plots.views.Point3D r0;
        com.mkulesh.micromath.plots.views.SurfacePlotProjector $r1;
        double $d0, $d1, $d2;

        r0 := @this: com.mkulesh.micromath.plots.views.Point3D;

        $r1 := @parameter0: com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        $d0 = r0.<com.mkulesh.micromath.plots.views.Point3D: double x>;

        $d1 = virtualinvoke $r1.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double getXScaling()>();

        $d0 = $d0 / $d1;

        r0.<com.mkulesh.micromath.plots.views.Point3D: double x> = $d0;

        $d0 = r0.<com.mkulesh.micromath.plots.views.Point3D: double y>;

        $d1 = virtualinvoke $r1.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double getYScaling()>();

        $d0 = $d0 / $d1;

        r0.<com.mkulesh.micromath.plots.views.Point3D: double y> = $d0;

        $d0 = $r1.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double zmax>;

        $d1 = $r1.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double zmin>;

        $d0 = $d0 - $d1;

        $d1 = r0.<com.mkulesh.micromath.plots.views.Point3D: double z>;

        $d2 = virtualinvoke $r1.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double getZScaling()>();

        $d1 = $d1 / $d2;

        $d1 = $d1 + 10.0;

        $d0 = $d0 * $d1;

        $d0 = $d0 / 20.0;

        $d1 = $r1.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double zmin>;

        $d0 = $d0 + $d1;

        r0.<com.mkulesh.micromath.plots.views.Point3D: double z> = $d0;

        return;
    }
