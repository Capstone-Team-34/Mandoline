com.mkulesh.micromath.plots.views.ContourPlotView extends com.mkulesh.micromath.plots.views.PlanePlotView
    public void <init>(android.content.Context)
    {
        com.mkulesh.micromath.plots.views.ContourPlotView r0;
        android.content.Context $r1;

        r0 := @this: com.mkulesh.micromath.plots.views.ContourPlotView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: void <init>(android.content.Context)>($r1);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.mkulesh.micromath.plots.views.ContourPlotView r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        r0 := @this: com.mkulesh.micromath.plots.views.ContourPlotView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        specialinvoke r0.<com.mkulesh.micromath.plots.views.ContourPlotView: void prepare(android.util.AttributeSet)>($r2);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.mkulesh.micromath.plots.views.ContourPlotView r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;

        r0 := @this: com.mkulesh.micromath.plots.views.ContourPlotView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        specialinvoke r0.<com.mkulesh.micromath.plots.views.ContourPlotView: void prepare(android.util.AttributeSet)>($r2);

        return;
    }
    private void prepare(android.util.AttributeSet)
    {
        com.mkulesh.micromath.plots.views.ContourPlotView r0;
        android.util.AttributeSet $r1;
        com.mkulesh.micromath.properties.PlotProperties $r2;
        com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle $r3;

        r0 := @this: com.mkulesh.micromath.plots.views.ContourPlotView;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.properties.PlotProperties plotParameters>;

        $r3 = <com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle CONTOUR>;

        $r2.<com.mkulesh.micromath.properties.PlotProperties: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle twoDPlotStyle> = $r3;

        return;
    }
    protected void drawContent(android.graphics.Canvas, com.mkulesh.micromath.plots.FunctionIf)
    {
        com.mkulesh.micromath.plots.views.ContourPlotView r0;
        android.graphics.Canvas $r1;
        com.mkulesh.micromath.plots.FunctionIf $r2;
        android.graphics.Paint $r3, r4;
        double d0, d1, $d2, $d3;
        double[] $r5, $r6, $r8;
        double[][] $r7;
        int $i0, $i1, i2, $i3;
        android.graphics.Paint$Style $r9;
        com.mkulesh.micromath.math.Vector2D $r10, $r12;
        com.mkulesh.micromath.plots.views.PhysicalArea $r11;
        byte $b4;
        android.graphics.Rect $r13;
        android.graphics.Point $r14;
        com.mkulesh.micromath.plots.views.ColorMapView $r15;
        float $f0, $f1, $f2, $f3;

        r0 := @this: com.mkulesh.micromath.plots.views.ContourPlotView;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: com.mkulesh.micromath.plots.FunctionIf;

        r4 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: android.graphics.Paint paint>;

        $r5 = interfaceinvoke $r2.<com.mkulesh.micromath.plots.FunctionIf: double[] getXValues()>();

        $r6 = interfaceinvoke $r2.<com.mkulesh.micromath.plots.FunctionIf: double[] getYValues()>();

        $r7 = interfaceinvoke $r2.<com.mkulesh.micromath.plots.FunctionIf: double[][] getZValues()>();

        if $r5 == null goto label17;

        if $r6 == null goto label17;

        if $r7 != null goto label01;

        return;

     label01:
        $r8 = interfaceinvoke $r2.<com.mkulesh.micromath.plots.FunctionIf: double[] getMinMaxValues(int)>(0);

        d0 = $r8[1];

        $r8 = interfaceinvoke $r2.<com.mkulesh.micromath.plots.FunctionIf: double[] getMinMaxValues(int)>(0);

        d1 = $r8[0];

        d0 = d0 - d1;

        $r8 = interfaceinvoke $r2.<com.mkulesh.micromath.plots.FunctionIf: double[] getMinMaxValues(int)>(1);

        d1 = $r8[1];

        $r8 = interfaceinvoke $r2.<com.mkulesh.micromath.plots.FunctionIf: double[] getMinMaxValues(int)>(1);

        $d2 = $r8[0];

        d1 = d1 - $d2;

        $i0 = lengthof $r5;

        if $i0 > 1 goto label07;

     label02:
        $i0 = lengthof $r6;

        if $i0 > 1 goto label08;

     label03:
        $r9 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke r4.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r9);

        $i0 = 0;

     label04:
        $i1 = lengthof $r5;

        if $i0 >= $i1 goto label17;

        i2 = -1;

        $i1 = 0;

     label05:
        $i3 = lengthof $r6;

        if $i1 >= $i3 goto label16;

        $r10 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.math.Vector2D tmpVec>;

        $d2 = $r5[$i0];

        $d2 = $d2 - d0;

        $r10.<com.mkulesh.micromath.math.Vector2D: double x> = $d2;

        $r10 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.math.Vector2D tmpVec>;

        $d2 = $r10.<com.mkulesh.micromath.math.Vector2D: double x>;

        $r11 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r10 = virtualinvoke $r11.<com.mkulesh.micromath.plots.views.PhysicalArea: com.mkulesh.micromath.math.Vector2D getMax()>();

        $d3 = $r10.<com.mkulesh.micromath.math.Vector2D: double x>;

        $b4 = $d2 cmpl $d3;

        if $b4 <= 0 goto label09;

     label06:
        $i1 = $i1 + 1;

        goto label05;

     label07:
        $i0 = lengthof $r5;

        $i0 = $i0 * 2;

        $i0 = $i0 + -2;

        $d2 = (double) $i0;

        d0 = d0 / $d2;

        goto label02;

     label08:
        $i0 = lengthof $r6;

        $i0 = $i0 * 2;

        $i0 = $i0 + -2;

        $d2 = (double) $i0;

        d1 = d1 / $d2;

        goto label03;

     label09:
        $r10 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.math.Vector2D tmpVec>;

        $d2 = $r10.<com.mkulesh.micromath.math.Vector2D: double x>;

        $r11 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r10 = virtualinvoke $r11.<com.mkulesh.micromath.plots.views.PhysicalArea: com.mkulesh.micromath.math.Vector2D getMin()>();

        $d3 = $r10.<com.mkulesh.micromath.math.Vector2D: double x>;

        $b4 = $d2 cmpg $d3;

        if $b4 >= 0 goto label10;

        $r10 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.math.Vector2D tmpVec>;

        $r11 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r12 = virtualinvoke $r11.<com.mkulesh.micromath.plots.views.PhysicalArea: com.mkulesh.micromath.math.Vector2D getMin()>();

        $d2 = $r12.<com.mkulesh.micromath.math.Vector2D: double x>;

        $r10.<com.mkulesh.micromath.math.Vector2D: double x> = $d2;

     label10:
        $r10 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.math.Vector2D tmpVec>;

        $d2 = $r6[$i1];

        $d2 = $d2 - d1;

        $r10.<com.mkulesh.micromath.math.Vector2D: double y> = $d2;

        $r10 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.math.Vector2D tmpVec>;

        $d2 = $r10.<com.mkulesh.micromath.math.Vector2D: double y>;

        $r11 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r10 = virtualinvoke $r11.<com.mkulesh.micromath.plots.views.PhysicalArea: com.mkulesh.micromath.math.Vector2D getMax()>();

        $d3 = $r10.<com.mkulesh.micromath.math.Vector2D: double y>;

        $b4 = $d2 cmpl $d3;

        if $b4 > 0 goto label06;

        $r10 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.math.Vector2D tmpVec>;

        $d2 = $r10.<com.mkulesh.micromath.math.Vector2D: double y>;

        $r11 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r10 = virtualinvoke $r11.<com.mkulesh.micromath.plots.views.PhysicalArea: com.mkulesh.micromath.math.Vector2D getMin()>();

        $d3 = $r10.<com.mkulesh.micromath.math.Vector2D: double y>;

        $b4 = $d2 cmpg $d3;

        if $b4 >= 0 goto label11;

        $r10 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.math.Vector2D tmpVec>;

        $r11 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r12 = virtualinvoke $r11.<com.mkulesh.micromath.plots.views.PhysicalArea: com.mkulesh.micromath.math.Vector2D getMin()>();

        $d2 = $r12.<com.mkulesh.micromath.math.Vector2D: double y>;

        $r10.<com.mkulesh.micromath.math.Vector2D: double y> = $d2;

     label11:
        $r11 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r10 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.math.Vector2D tmpVec>;

        $r13 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: android.graphics.Rect rect>;

        $r14 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: android.graphics.Point p1>;

        virtualinvoke $r11.<com.mkulesh.micromath.plots.views.PhysicalArea: void toScreenPoint(com.mkulesh.micromath.math.Vector2D,android.graphics.Rect,android.graphics.Point)>($r10, $r13, $r14);

        $r10 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.math.Vector2D tmpVec>;

        $d2 = $r5[$i0];

        $d2 = $d2 + d0;

        $r10.<com.mkulesh.micromath.math.Vector2D: double x> = $d2;

        $r10 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.math.Vector2D tmpVec>;

        $d2 = $r10.<com.mkulesh.micromath.math.Vector2D: double x>;

        $r11 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r10 = virtualinvoke $r11.<com.mkulesh.micromath.plots.views.PhysicalArea: com.mkulesh.micromath.math.Vector2D getMin()>();

        $d3 = $r10.<com.mkulesh.micromath.math.Vector2D: double x>;

        $b4 = $d2 cmpg $d3;

        if $b4 < 0 goto label06;

        $r10 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.math.Vector2D tmpVec>;

        $d2 = $r10.<com.mkulesh.micromath.math.Vector2D: double x>;

        $r11 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r10 = virtualinvoke $r11.<com.mkulesh.micromath.plots.views.PhysicalArea: com.mkulesh.micromath.math.Vector2D getMax()>();

        $d3 = $r10.<com.mkulesh.micromath.math.Vector2D: double x>;

        $b4 = $d2 cmpl $d3;

        if $b4 <= 0 goto label12;

        $r10 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.math.Vector2D tmpVec>;

        $r11 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r12 = virtualinvoke $r11.<com.mkulesh.micromath.plots.views.PhysicalArea: com.mkulesh.micromath.math.Vector2D getMax()>();

        $d2 = $r12.<com.mkulesh.micromath.math.Vector2D: double x>;

        $r10.<com.mkulesh.micromath.math.Vector2D: double x> = $d2;

     label12:
        $r10 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.math.Vector2D tmpVec>;

        $d2 = $r6[$i1];

        $d2 = $d2 + d1;

        $r10.<com.mkulesh.micromath.math.Vector2D: double y> = $d2;

        $r10 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.math.Vector2D tmpVec>;

        $d2 = $r10.<com.mkulesh.micromath.math.Vector2D: double y>;

        $r11 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r10 = virtualinvoke $r11.<com.mkulesh.micromath.plots.views.PhysicalArea: com.mkulesh.micromath.math.Vector2D getMin()>();

        $d3 = $r10.<com.mkulesh.micromath.math.Vector2D: double y>;

        $b4 = $d2 cmpg $d3;

        if $b4 < 0 goto label06;

        $r10 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.math.Vector2D tmpVec>;

        $d2 = $r10.<com.mkulesh.micromath.math.Vector2D: double y>;

        $r11 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r10 = virtualinvoke $r11.<com.mkulesh.micromath.plots.views.PhysicalArea: com.mkulesh.micromath.math.Vector2D getMax()>();

        $d3 = $r10.<com.mkulesh.micromath.math.Vector2D: double y>;

        $b4 = $d2 cmpl $d3;

        if $b4 <= 0 goto label13;

        $r10 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.math.Vector2D tmpVec>;

        $r11 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r12 = virtualinvoke $r11.<com.mkulesh.micromath.plots.views.PhysicalArea: com.mkulesh.micromath.math.Vector2D getMax()>();

        $d2 = $r12.<com.mkulesh.micromath.math.Vector2D: double y>;

        $r10.<com.mkulesh.micromath.math.Vector2D: double y> = $d2;

     label13:
        $r11 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r10 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.math.Vector2D tmpVec>;

        $r13 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: android.graphics.Rect rect>;

        $r14 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: android.graphics.Point p2>;

        virtualinvoke $r11.<com.mkulesh.micromath.plots.views.PhysicalArea: void toScreenPoint(com.mkulesh.micromath.math.Vector2D,android.graphics.Rect,android.graphics.Point)>($r10, $r13, $r14);

        $r15 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.plots.views.ColorMapView colorMapView>;

        if $r15 == null goto label14;

        $r15 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: com.mkulesh.micromath.plots.views.ColorMapView colorMapView>;

        $r8 = $r7[$i0];

        $d2 = $r8[$i1];

        $r8 = interfaceinvoke $r2.<com.mkulesh.micromath.plots.FunctionIf: double[] getMinMaxValues(int)>(2);

        $i3 = virtualinvoke $r15.<com.mkulesh.micromath.plots.views.ColorMapView: int getPaletteColor(double,double[],int)>($d2, $r8, 255);

        virtualinvoke r4.<android.graphics.Paint: void setColor(int)>($i3);

     label14:
        if i2 < 0 goto label15;

        $r14 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: android.graphics.Point p1>;

        $r14.<android.graphics.Point: int y> = i2;

     label15:
        $r14 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: android.graphics.Point p1>;

        i2 = $r14.<android.graphics.Point: int x>;

        $f0 = (float) i2;

        $r14 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: android.graphics.Point p1>;

        i2 = $r14.<android.graphics.Point: int y>;

        $f1 = (float) i2;

        $r14 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: android.graphics.Point p2>;

        i2 = $r14.<android.graphics.Point: int x>;

        $f2 = (float) i2;

        $r14 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: android.graphics.Point p2>;

        i2 = $r14.<android.graphics.Point: int y>;

        $f3 = (float) i2;

        $r3 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $f3, $r3);

        $r14 = r0.<com.mkulesh.micromath.plots.views.ContourPlotView: android.graphics.Point p2>;

        i2 = $r14.<android.graphics.Point: int y>;

        goto label06;

     label16:
        $i0 = $i0 + 1;

        goto label04;

     label17:
        return;
    }
