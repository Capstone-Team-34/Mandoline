com.mkulesh.micromath.plots.views.SurfacePlotView extends com.mkulesh.micromath.plots.views.PlotView
private static final int CENTER
private static final int COLOR_MESH_LINES
private static final int COLOR_WALL
private static final int LEFT
private static final int RIGHT
private static final int TOP
private final int[] color
private final com.mkulesh.micromath.plots.views.Point3D cop
private final double[][] cubeBounds
private int factor_x
private int factor_y
private final boolean isDrawLabels
private final com.mkulesh.micromath.math.Vector2D labelCenter
private final android.graphics.Point p1
private final android.graphics.Point p2
private final int[] poly_x
private final int[] poly_y
private final com.mkulesh.micromath.plots.views.SurfacePlotProjector projector
private final android.graphics.Rect rect
private final android.graphics.Rect tmpRect
private final com.mkulesh.micromath.plots.views.Point3D[] tmpVertex
private com.mkulesh.micromath.plots.views.Point3D[] vertex
private final int[] vertsColors
private final float[] vertsValues
private com.mkulesh.micromath.plots.views.PlotView$Label[] xLabels
private com.mkulesh.micromath.plots.views.PlotView$Label[] yLabels
    public void <init>(android.content.Context)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotView r0;
        android.content.Context $r1;
        com.mkulesh.micromath.plots.views.SurfacePlotProjector $r2;
        android.graphics.Rect $r3;
        android.graphics.Point $r4;
        int[] $r5;
        com.mkulesh.micromath.plots.views.Point3D[] $r6;
        com.mkulesh.micromath.plots.views.Point3D $r7;
        float[] $r8;
        double[][] $r9;
        double[] $r10;
        com.mkulesh.micromath.math.Vector2D $r11;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.PlotView: void <init>(android.content.Context)>($r1);

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: boolean isDrawLabels> = 1;

        $r2 = new com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        specialinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector> = $r2;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Rect rect> = $r3;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Rect tmpRect> = $r3;

        $r4 = new android.graphics.Point;

        specialinvoke $r4.<android.graphics.Point: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1> = $r4;

        $r4 = new android.graphics.Point;

        specialinvoke $r4.<android.graphics.Point: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2> = $r4;

        $r5 = newarray (int)[5];

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x> = $r5;

        $r5 = newarray (int)[5];

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_y> = $r5;

        $r5 = newarray (int)[5];

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] color> = $r5;

        $r6 = newarray (com.mkulesh.micromath.plots.views.Point3D)[4];

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D[] tmpVertex> = $r6;

        $r7 = new com.mkulesh.micromath.plots.views.Point3D;

        specialinvoke $r7.<com.mkulesh.micromath.plots.views.Point3D: void <init>(double,double,double)>(0.0, 0.0, 0.0);

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D cop> = $r7;

        $r8 = newarray (float)[12];

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: float[] vertsValues> = $r8;

        $r5 = newarray (int)[12];

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] vertsColors> = $r5;

        $r9 = newarray (double[])[8];

        $r10 = newarray (double)[3];

        $r10[0] = -10.0;

        $r10[1] = -10.0;

        $r10[2] = -10.0;

        $r9[0] = $r10;

        $r10 = newarray (double)[3];

        $r10[0] = -10.0;

        $r10[1] = 10.0;

        $r10[2] = -10.0;

        $r9[1] = $r10;

        $r10 = newarray (double)[3];

        $r10[0] = 10.0;

        $r10[1] = 10.0;

        $r10[2] = -10.0;

        $r9[2] = $r10;

        $r10 = newarray (double)[3];

        $r10[0] = 10.0;

        $r10[1] = -10.0;

        $r10[2] = -10.0;

        $r9[3] = $r10;

        $r10 = newarray (double)[3];

        $r10[0] = -10.0;

        $r10[1] = -10.0;

        $r10[2] = 10.0;

        $r9[4] = $r10;

        $r10 = newarray (double)[3];

        $r10[0] = -10.0;

        $r10[1] = 10.0;

        $r10[2] = 10.0;

        $r9[5] = $r10;

        $r10 = newarray (double)[3];

        $r10[0] = 10.0;

        $r10[1] = 10.0;

        $r10[2] = 10.0;

        $r9[6] = $r10;

        $r10 = newarray (double)[3];

        $r10[0] = 10.0;

        $r10[1] = -10.0;

        $r10[2] = 10.0;

        $r9[7] = $r10;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: double[][] cubeBounds> = $r9;

        $r11 = new com.mkulesh.micromath.math.Vector2D;

        specialinvoke $r11.<com.mkulesh.micromath.math.Vector2D: void <init>(double,double)>(-10.0, -10.0);

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.math.Vector2D labelCenter> = $r11;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] xLabels> = null;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] yLabels> = null;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotView r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        com.mkulesh.micromath.plots.views.SurfacePlotProjector $r3;
        android.graphics.Rect $r4;
        android.graphics.Point $r5;
        int[] $r6;
        com.mkulesh.micromath.plots.views.Point3D[] $r7;
        com.mkulesh.micromath.plots.views.Point3D $r8;
        float[] $r9;
        double[][] $r10;
        double[] $r11;
        com.mkulesh.micromath.math.Vector2D $r12;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.PlotView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: boolean isDrawLabels> = 1;

        $r3 = new com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        specialinvoke $r3.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector> = $r3;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Rect rect> = $r4;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Rect tmpRect> = $r4;

        $r5 = new android.graphics.Point;

        specialinvoke $r5.<android.graphics.Point: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1> = $r5;

        $r5 = new android.graphics.Point;

        specialinvoke $r5.<android.graphics.Point: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2> = $r5;

        $r6 = newarray (int)[5];

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x> = $r6;

        $r6 = newarray (int)[5];

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_y> = $r6;

        $r6 = newarray (int)[5];

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] color> = $r6;

        $r7 = newarray (com.mkulesh.micromath.plots.views.Point3D)[4];

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D[] tmpVertex> = $r7;

        $r8 = new com.mkulesh.micromath.plots.views.Point3D;

        specialinvoke $r8.<com.mkulesh.micromath.plots.views.Point3D: void <init>(double,double,double)>(0.0, 0.0, 0.0);

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D cop> = $r8;

        $r9 = newarray (float)[12];

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: float[] vertsValues> = $r9;

        $r6 = newarray (int)[12];

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] vertsColors> = $r6;

        $r10 = newarray (double[])[8];

        $r11 = newarray (double)[3];

        $r11[0] = -10.0;

        $r11[1] = -10.0;

        $r11[2] = -10.0;

        $r10[0] = $r11;

        $r11 = newarray (double)[3];

        $r11[0] = -10.0;

        $r11[1] = 10.0;

        $r11[2] = -10.0;

        $r10[1] = $r11;

        $r11 = newarray (double)[3];

        $r11[0] = 10.0;

        $r11[1] = 10.0;

        $r11[2] = -10.0;

        $r10[2] = $r11;

        $r11 = newarray (double)[3];

        $r11[0] = 10.0;

        $r11[1] = -10.0;

        $r11[2] = -10.0;

        $r10[3] = $r11;

        $r11 = newarray (double)[3];

        $r11[0] = -10.0;

        $r11[1] = -10.0;

        $r11[2] = 10.0;

        $r10[4] = $r11;

        $r11 = newarray (double)[3];

        $r11[0] = -10.0;

        $r11[1] = 10.0;

        $r11[2] = 10.0;

        $r10[5] = $r11;

        $r11 = newarray (double)[3];

        $r11[0] = 10.0;

        $r11[1] = 10.0;

        $r11[2] = 10.0;

        $r10[6] = $r11;

        $r11 = newarray (double)[3];

        $r11[0] = 10.0;

        $r11[1] = -10.0;

        $r11[2] = 10.0;

        $r10[7] = $r11;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: double[][] cubeBounds> = $r10;

        $r12 = new com.mkulesh.micromath.math.Vector2D;

        specialinvoke $r12.<com.mkulesh.micromath.math.Vector2D: void <init>(double,double)>(-10.0, -10.0);

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.math.Vector2D labelCenter> = $r12;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] xLabels> = null;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] yLabels> = null;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void prepare(android.util.AttributeSet)>($r2);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotView r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        com.mkulesh.micromath.plots.views.SurfacePlotProjector $r3;
        android.graphics.Rect $r4;
        android.graphics.Point $r5;
        int[] $r6;
        com.mkulesh.micromath.plots.views.Point3D[] $r7;
        com.mkulesh.micromath.plots.views.Point3D $r8;
        float[] $r9;
        double[][] $r10;
        double[] $r11;
        com.mkulesh.micromath.math.Vector2D $r12;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.PlotView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: boolean isDrawLabels> = 1;

        $r3 = new com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        specialinvoke $r3.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector> = $r3;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Rect rect> = $r4;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Rect tmpRect> = $r4;

        $r5 = new android.graphics.Point;

        specialinvoke $r5.<android.graphics.Point: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1> = $r5;

        $r5 = new android.graphics.Point;

        specialinvoke $r5.<android.graphics.Point: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2> = $r5;

        $r6 = newarray (int)[5];

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x> = $r6;

        $r6 = newarray (int)[5];

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_y> = $r6;

        $r6 = newarray (int)[5];

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] color> = $r6;

        $r7 = newarray (com.mkulesh.micromath.plots.views.Point3D)[4];

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D[] tmpVertex> = $r7;

        $r8 = new com.mkulesh.micromath.plots.views.Point3D;

        specialinvoke $r8.<com.mkulesh.micromath.plots.views.Point3D: void <init>(double,double,double)>(0.0, 0.0, 0.0);

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D cop> = $r8;

        $r9 = newarray (float)[12];

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: float[] vertsValues> = $r9;

        $r6 = newarray (int)[12];

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] vertsColors> = $r6;

        $r10 = newarray (double[])[8];

        $r11 = newarray (double)[3];

        $r11[0] = -10.0;

        $r11[1] = -10.0;

        $r11[2] = -10.0;

        $r10[0] = $r11;

        $r11 = newarray (double)[3];

        $r11[0] = -10.0;

        $r11[1] = 10.0;

        $r11[2] = -10.0;

        $r10[1] = $r11;

        $r11 = newarray (double)[3];

        $r11[0] = 10.0;

        $r11[1] = 10.0;

        $r11[2] = -10.0;

        $r10[2] = $r11;

        $r11 = newarray (double)[3];

        $r11[0] = 10.0;

        $r11[1] = -10.0;

        $r11[2] = -10.0;

        $r10[3] = $r11;

        $r11 = newarray (double)[3];

        $r11[0] = -10.0;

        $r11[1] = -10.0;

        $r11[2] = 10.0;

        $r10[4] = $r11;

        $r11 = newarray (double)[3];

        $r11[0] = -10.0;

        $r11[1] = 10.0;

        $r11[2] = 10.0;

        $r10[5] = $r11;

        $r11 = newarray (double)[3];

        $r11[0] = 10.0;

        $r11[1] = 10.0;

        $r11[2] = 10.0;

        $r10[6] = $r11;

        $r11 = newarray (double)[3];

        $r11[0] = 10.0;

        $r11[1] = -10.0;

        $r11[2] = 10.0;

        $r10[7] = $r11;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: double[][] cubeBounds> = $r10;

        $r12 = new com.mkulesh.micromath.math.Vector2D;

        specialinvoke $r12.<com.mkulesh.micromath.math.Vector2D: void <init>(double,double)>(-10.0, -10.0);

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.math.Vector2D labelCenter> = $r12;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] xLabels> = null;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] yLabels> = null;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void prepare(android.util.AttributeSet)>($r2);

        return;
    }
    private void drawArea(android.graphics.Canvas, int, int, int, int, int, int)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotView r0;
        android.graphics.Canvas $r1;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        com.mkulesh.micromath.plots.FunctionIf $r4;
        double[] $r5;
        com.mkulesh.micromath.plots.views.Point3D[] $r6, $r7;
        com.mkulesh.micromath.plots.views.Point3D $r8;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotView;

        $r1 := @parameter0: android.graphics.Canvas;

        $i4 := @parameter1: int;

        $i0 := @parameter2: int;

        $i5 := @parameter3: int;

        $i1 := @parameter4: int;

        $i6 := @parameter5: int;

        $i2 := @parameter6: int;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: java.util.ArrayList functions>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r4 = (com.mkulesh.micromath.plots.FunctionIf) $r3;

        $r5 = interfaceinvoke $r4.<com.mkulesh.micromath.plots.FunctionIf: double[] getYValues()>();

        i3 = lengthof $r5;

        i3 = i3 + -1;

        $i7 = i3 + 1;

        $i4 = $i4 * $i7;

        $i7 = i3 + 1;

        $i6 = $i6 * $i7;

        i3 = i3 + 1;

        $i5 = $i5 * i3;

     label1:
        if $i0 == $i1 goto label5;

        $r6 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D[] tmpVertex>;

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D[] vertex>;

        i3 = $i4 + $i0;

        $r8 = $r7[i3];

        $r6[1] = $r8;

        $r6 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D[] tmpVertex>;

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D[] vertex>;

        i3 = $i4 + $i0;

        i3 = i3 + $i2;

        $r8 = $r7[i3];

        $r6[2] = $r8;

        i3 = $i4;

     label2:
        if i3 == $i5 goto label4;

        $r6 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D[] tmpVertex>;

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D[] tmpVertex>;

        $r8 = $r7[1];

        $r6[0] = $r8;

        $r6 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D[] tmpVertex>;

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D[] vertex>;

        $i7 = i3 + $i6;

        $i7 = $i7 + $i0;

        $r8 = $r7[$i7];

        $r6[1] = $r8;

        $r6 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D[] tmpVertex>;

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D[] tmpVertex>;

        $r8 = $r7[2];

        $r6[3] = $r8;

        $r6 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D[] tmpVertex>;

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D[] vertex>;

        $i7 = i3 + $i6;

        $i7 = $i7 + $i0;

        $i7 = $i7 + $i2;

        $r8 = $r7[$i7];

        $r6[2] = $r8;

        $r6 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D[] tmpVertex>;

        $z0 = staticinvoke <com.mkulesh.micromath.plots.views.SurfacePlotView: boolean isPointsValid(com.mkulesh.micromath.plots.views.Point3D[])>($r6);

        if $z0 == 0 goto label3;

        $r6 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D[] tmpVertex>;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawPlane(android.graphics.Canvas,com.mkulesh.micromath.plots.views.Point3D[],int)>($r1, $r6, 4);

     label3:
        i3 = i3 + $i6;

        goto label2;

     label4:
        $i0 = $i0 + $i2;

        goto label1;

     label5:
        return;
    }
    private void drawBoundingBox(android.graphics.Canvas)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotView r0;
        android.graphics.Canvas $r1;
        com.mkulesh.micromath.plots.views.SurfacePlotProjector $r2;
        android.graphics.Point $r3;
        int $i0, $i1, $i2, $i3;
        double $d0, $d1;
        android.graphics.Paint $r4;
        android.text.TextPaint $r5;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotView;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_x>;

        $i0 = $i0 * 10;

        $d0 = (double) $i0;

        $i0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_y>;

        $i0 = $i0 * 10;

        $d1 = (double) $i0;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, $d0, $d1, 10.0);

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

        $r5 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.text.TextPaint getPaint()>();

        $i0 = virtualinvoke $r5.<android.text.TextPaint: int getColor()>();

        virtualinvoke $r4.<android.graphics.Paint: void setColor(int)>($i0);

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_x>;

        $i0 = neg $i0;

        $i0 = $i0 * 10;

        $d0 = (double) $i0;

        $i0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_y>;

        $i0 = $i0 * 10;

        $d1 = (double) $i0;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, $d0, $d1, 10.0);

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i0 = $r3.<android.graphics.Point: int x>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i1 = $r3.<android.graphics.Point: int y>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i2 = $r3.<android.graphics.Point: int x>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i3 = $r3.<android.graphics.Point: int y>;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawLine(android.graphics.Canvas,int,int,int,int)>($r1, $i0, $i1, $i2, $i3);

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_x>;

        $i0 = $i0 * 10;

        $d0 = (double) $i0;

        $i0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_y>;

        $i0 = neg $i0;

        $i0 = $i0 * 10;

        $d1 = (double) $i0;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, $d0, $d1, 10.0);

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i0 = $r3.<android.graphics.Point: int x>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i1 = $r3.<android.graphics.Point: int y>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i2 = $r3.<android.graphics.Point: int x>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i3 = $r3.<android.graphics.Point: int y>;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawLine(android.graphics.Canvas,int,int,int,int)>($r1, $i0, $i1, $i2, $i3);

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_x>;

        $i0 = $i0 * 10;

        $d0 = (double) $i0;

        $i0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_y>;

        $i0 = $i0 * 10;

        $d1 = (double) $i0;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, $d0, $d1, -10.0);

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i0 = $r3.<android.graphics.Point: int x>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i1 = $r3.<android.graphics.Point: int y>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i2 = $r3.<android.graphics.Point: int x>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i3 = $r3.<android.graphics.Point: int y>;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawLine(android.graphics.Canvas,int,int,int,int)>($r1, $i0, $i1, $i2, $i3);

        return;
    }
    private void drawBoxGridsLabels(android.graphics.Canvas)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotView r0;
        android.graphics.Canvas $r1;
        com.mkulesh.micromath.plots.views.SurfacePlotProjector $r2;
        android.graphics.Point $r3;
        int[] $r4, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean z0, z1;
        com.mkulesh.micromath.plots.views.ColorMapView $r5;
        com.mkulesh.micromath.properties.ColorMapProperties $r6;
        double $d0, $d1, $d2, $d3;
        android.graphics.Paint $r8;
        android.text.TextPaint $r9;
        com.mkulesh.micromath.properties.AxisProperties $r10;
        float $f0;
        double[][] $r11;
        double[] $r12;
        com.mkulesh.micromath.plots.views.PlotView$Label[] $r13;
        com.mkulesh.micromath.plots.views.PlotView$Label $r14;
        java.lang.String $r15;
        byte $b6;
        java.util.ArrayList $r16;
        java.lang.Object $r17;
        com.mkulesh.micromath.plots.FunctionIf $r18;
        java.lang.String[] $r19;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotView;

        $r1 := @parameter0: android.graphics.Canvas;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_y> = 1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_x> = 1;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, 0.0, 0.0, -10.0);

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i0 = $r3.<android.graphics.Point: int x>;

        $r4[0] = $i0;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, 10.5, 0.0, -10.0);

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i0 = $r3.<android.graphics.Point: int x>;

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x>;

        $i1 = $r4[0];

        if $i0 <= $i1 goto label06;

        z0 = 1;

     label01:
        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i0 = $r3.<android.graphics.Point: int y>;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, -10.5, 0.0, -10.0);

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i1 = $r3.<android.graphics.Point: int y>;

        if $i1 <= $i0 goto label02;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_x> = -1;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i0 = $r3.<android.graphics.Point: int x>;

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x>;

        $i1 = $r4[0];

        if $i0 <= $i1 goto label07;

        z0 = 1;

     label02:
        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, 0.0, 10.5, -10.0);

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i0 = $r3.<android.graphics.Point: int x>;

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x>;

        $i1 = $r4[0];

        if $i0 <= $i1 goto label08;

        z1 = 1;

     label03:
        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i0 = $r3.<android.graphics.Point: int y>;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, 0.0, -10.5, -10.0);

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i1 = $r3.<android.graphics.Point: int y>;

        if $i1 <= $i0 goto label04;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_y> = -1;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i0 = $r3.<android.graphics.Point: int x>;

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x>;

        $i1 = $r4[0];

        if $i0 <= $i1 goto label09;

        z1 = 1;

     label04:
        $r5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.ColorMapView colorMapView>;

        $r6 = virtualinvoke $r5.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.properties.ColorMapProperties getColorMapParameters()>();

        $i0 = $r6.<com.mkulesh.micromath.properties.ColorMapProperties: int zLabelsNumber>;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_x>;

        $i1 = neg $i1;

        $i1 = $i1 * 10;

        $d0 = (double) $i1;

        $i1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_y>;

        $i1 = neg $i1;

        $i1 = $i1 * 10;

        $d1 = (double) $i1;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, $d0, $d1, -10.0);

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i1 = $r3.<android.graphics.Point: int x>;

        $r4[0] = $i1;

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_y>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i1 = $r3.<android.graphics.Point: int y>;

        $r4[0] = $i1;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_x>;

        $i1 = neg $i1;

        $i1 = $i1 * 10;

        $d0 = (double) $i1;

        $i1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_y>;

        $i1 = neg $i1;

        $i1 = $i1 * 10;

        $d1 = (double) $i1;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, $d0, $d1, 10.0);

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i1 = $r3.<android.graphics.Point: int x>;

        $r4[1] = $i1;

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_y>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i1 = $r3.<android.graphics.Point: int y>;

        $r4[1] = $i1;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_x>;

        $i1 = $i1 * 10;

        $d0 = (double) $i1;

        $i1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_y>;

        $i1 = neg $i1;

        $i1 = $i1 * 10;

        $d1 = (double) $i1;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, $d0, $d1, 10.0);

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i1 = $r3.<android.graphics.Point: int x>;

        $r4[2] = $i1;

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_y>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i1 = $r3.<android.graphics.Point: int y>;

        $r4[2] = $i1;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_x>;

        $i1 = $i1 * 10;

        $d0 = (double) $i1;

        $i1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_y>;

        $i1 = neg $i1;

        $i1 = $i1 * 10;

        $d1 = (double) $i1;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, $d0, $d1, -10.0);

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i1 = $r3.<android.graphics.Point: int x>;

        $r4[3] = $i1;

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_y>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i1 = $r3.<android.graphics.Point: int y>;

        $r4[3] = $i1;

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x>;

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x>;

        $i1 = $r7[0];

        $r4[4] = $i1;

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_y>;

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_y>;

        $i1 = $r7[0];

        $r4[4] = $i1;

        $r8 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

        virtualinvoke $r8.<android.graphics.Paint: void setColor(int)>(-3355444);

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x>;

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_y>;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawFilledPolygon(android.graphics.Canvas,int,int[],int[],int[])>($r1, 4, $r4, $r7, null);

        $r8 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

        $r9 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.text.TextPaint getPaint()>();

        $i1 = virtualinvoke $r9.<android.text.TextPaint: int getColor()>();

        virtualinvoke $r8.<android.graphics.Paint: void setColor(int)>($i1);

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x>;

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_y>;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawPolygon(android.graphics.Canvas,int,int[],int[])>($r1, 5, $r4, $r7);

        $r8 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

        $r10 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.AxisProperties axisParameters>;

        $i1 = $r10.<com.mkulesh.micromath.properties.AxisProperties: int gridLineColor>;

        virtualinvoke $r8.<android.graphics.Paint: void setColor(int)>($i1);

        $i1 = 1;

     label05:
        $i2 = $i0 + 1;

        if $i1 >= $i2 goto label10;

        $i2 = $i0 + 1;

        $f0 = (float) $i2;

        $f0 = 20.0F / $f0;

        $d0 = (double) $f0;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_x>;

        $i2 = neg $i2;

        $i2 = $i2 * 10;

        $d1 = (double) $i2;

        $i2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_y>;

        $i2 = neg $i2;

        $i2 = $i2 * 10;

        $d2 = (double) $i2;

        $d3 = (double) $i1;

        $d3 = $d3 * $d0;

        $d3 = -10.0 + $d3;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, $d1, $d2, $d3);

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_x>;

        $i2 = $i2 * 10;

        $d1 = (double) $i2;

        $i2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_y>;

        $i2 = neg $i2;

        $i2 = $i2 * 10;

        $d2 = (double) $i2;

        $d3 = (double) $i1;

        $d0 = $d3 * $d0;

        $d0 = -10.0 + $d0;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, $d1, $d2, $d0);

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i2 = $r3.<android.graphics.Point: int x>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i3 = $r3.<android.graphics.Point: int y>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i4 = $r3.<android.graphics.Point: int x>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i5 = $r3.<android.graphics.Point: int y>;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawLine(android.graphics.Canvas,int,int,int,int)>($r1, $i2, $i3, $i4, $i5);

        $i1 = $i1 + 1;

        goto label05;

     label06:
        z0 = 0;

        goto label01;

     label07:
        z0 = 0;

        goto label02;

     label08:
        z1 = 0;

        goto label03;

     label09:
        z1 = 0;

        goto label04;

     label10:
        $i1 = 1;

     label11:
        $r10 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.AxisProperties axisParameters>;

        $i2 = $r10.<com.mkulesh.micromath.properties.AxisProperties: int xLabelsNumber>;

        $i2 = $i2 + 1;

        if $i1 >= $i2 goto label12;

        $r10 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.AxisProperties axisParameters>;

        $i2 = $r10.<com.mkulesh.micromath.properties.AxisProperties: int xLabelsNumber>;

        $i2 = $i2 + 1;

        $f0 = (float) $i2;

        $f0 = 20.0F / $f0;

        $d0 = (double) $f0;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $d1 = (double) $i1;

        $d1 = $d1 * $d0;

        $d1 = -10.0 + $d1;

        $i2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_y>;

        $i2 = neg $i2;

        $i2 = $i2 * 10;

        $d2 = (double) $i2;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, $d1, $d2, -10.0);

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $d1 = (double) $i1;

        $d0 = $d1 * $d0;

        $d0 = -10.0 + $d0;

        $i2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_y>;

        $i2 = neg $i2;

        $i2 = $i2 * 10;

        $d1 = (double) $i2;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, $d0, $d1, 10.0);

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i2 = $r3.<android.graphics.Point: int x>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i3 = $r3.<android.graphics.Point: int y>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i4 = $r3.<android.graphics.Point: int x>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i5 = $r3.<android.graphics.Point: int y>;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawLine(android.graphics.Canvas,int,int,int,int)>($r1, $i2, $i3, $i4, $i5);

        $i1 = $i1 + 1;

        goto label11;

     label12:
        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_x>;

        $i1 = neg $i1;

        $i1 = $i1 * 10;

        $d0 = (double) $i1;

        $i1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_y>;

        $i1 = $i1 * 10;

        $d1 = (double) $i1;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, $d0, $d1, 10.0);

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i1 = $r3.<android.graphics.Point: int x>;

        $r4[2] = $i1;

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_y>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i1 = $r3.<android.graphics.Point: int y>;

        $r4[2] = $i1;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_x>;

        $i1 = neg $i1;

        $i1 = $i1 * 10;

        $d0 = (double) $i1;

        $i1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_y>;

        $i1 = $i1 * 10;

        $d1 = (double) $i1;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, $d0, $d1, -10.0);

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i1 = $r3.<android.graphics.Point: int x>;

        $r4[3] = $i1;

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_y>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i1 = $r3.<android.graphics.Point: int y>;

        $r4[3] = $i1;

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x>;

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x>;

        $i1 = $r7[0];

        $r4[4] = $i1;

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_y>;

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_y>;

        $i1 = $r7[0];

        $r4[4] = $i1;

        $r8 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

        virtualinvoke $r8.<android.graphics.Paint: void setColor(int)>(-3355444);

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x>;

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_y>;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawFilledPolygon(android.graphics.Canvas,int,int[],int[],int[])>($r1, 4, $r4, $r7, null);

        $r8 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

        $r9 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.text.TextPaint getPaint()>();

        $i1 = virtualinvoke $r9.<android.text.TextPaint: int getColor()>();

        virtualinvoke $r8.<android.graphics.Paint: void setColor(int)>($i1);

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x>;

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_y>;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawPolygon(android.graphics.Canvas,int,int[],int[])>($r1, 5, $r4, $r7);

        $r8 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

        $r10 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.AxisProperties axisParameters>;

        $i1 = $r10.<com.mkulesh.micromath.properties.AxisProperties: int gridLineColor>;

        virtualinvoke $r8.<android.graphics.Paint: void setColor(int)>($i1);

        $i1 = 1;

     label13:
        $i2 = $i0 + 1;

        if $i1 >= $i2 goto label14;

        $i2 = $i0 + 1;

        $f0 = (float) $i2;

        $f0 = 20.0F / $f0;

        $d0 = (double) $f0;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_x>;

        $i2 = neg $i2;

        $i2 = $i2 * 10;

        $d1 = (double) $i2;

        $i2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_y>;

        $i2 = $i2 * 10;

        $d2 = (double) $i2;

        $d3 = (double) $i1;

        $d3 = $d3 * $d0;

        $d3 = -10.0 + $d3;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, $d1, $d2, $d3);

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_x>;

        $i2 = neg $i2;

        $i2 = $i2 * 10;

        $d1 = (double) $i2;

        $i2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_y>;

        $i2 = neg $i2;

        $i2 = $i2 * 10;

        $d2 = (double) $i2;

        $d3 = (double) $i1;

        $d0 = $d3 * $d0;

        $d0 = -10.0 + $d0;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, $d1, $d2, $d0);

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i2 = $r3.<android.graphics.Point: int x>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i3 = $r3.<android.graphics.Point: int y>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i4 = $r3.<android.graphics.Point: int x>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i5 = $r3.<android.graphics.Point: int y>;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawLine(android.graphics.Canvas,int,int,int,int)>($r1, $i2, $i3, $i4, $i5);

        $i1 = $i1 + 1;

        goto label13;

     label14:
        $i0 = 1;

     label15:
        $r10 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.AxisProperties axisParameters>;

        $i1 = $r10.<com.mkulesh.micromath.properties.AxisProperties: int yLabelsNumber>;

        $i1 = $i1 + 1;

        if $i0 >= $i1 goto label16;

        $r10 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.AxisProperties axisParameters>;

        $i1 = $r10.<com.mkulesh.micromath.properties.AxisProperties: int yLabelsNumber>;

        $i1 = $i1 + 1;

        $f0 = (float) $i1;

        $f0 = 20.0F / $f0;

        $d0 = (double) $f0;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_x>;

        $i1 = neg $i1;

        $i1 = $i1 * 10;

        $d1 = (double) $i1;

        $d2 = (double) $i0;

        $d2 = $d2 * $d0;

        $d2 = -10.0 + $d2;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, $d1, $d2, -10.0);

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_x>;

        $i1 = neg $i1;

        $i1 = $i1 * 10;

        $d1 = (double) $i1;

        $d2 = (double) $i0;

        $d0 = $d2 * $d0;

        $d0 = -10.0 + $d0;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, $d1, $d0, 10.0);

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i1 = $r3.<android.graphics.Point: int x>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i2 = $r3.<android.graphics.Point: int y>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i3 = $r3.<android.graphics.Point: int x>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i4 = $r3.<android.graphics.Point: int y>;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawLine(android.graphics.Canvas,int,int,int,int)>($r1, $i1, $i2, $i3, $i4);

        $i0 = $i0 + 1;

        goto label15;

     label16:
        $i0 = 0;

     label17:
        if $i0 >= 4 goto label18;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $r11 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: double[][] cubeBounds>;

        $r12 = $r11[$i0];

        $d0 = $r12[0];

        $r11 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: double[][] cubeBounds>;

        $r12 = $r11[$i0];

        $d1 = $r12[1];

        $r11 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: double[][] cubeBounds>;

        $r12 = $r11[$i0];

        $d2 = $r12[2];

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, $d0, $d1, $d2);

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i1 = $r3.<android.graphics.Point: int x>;

        $r4[$i0] = $i1;

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_y>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i1 = $r3.<android.graphics.Point: int y>;

        $r4[$i0] = $i1;

        $i0 = $i0 + 1;

        goto label17;

     label18:
        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x>;

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x>;

        $i0 = $r7[0];

        $r4[4] = $i0;

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_y>;

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_y>;

        $i0 = $r7[0];

        $r4[4] = $i0;

        $r8 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

        virtualinvoke $r8.<android.graphics.Paint: void setColor(int)>(-3355444);

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x>;

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_y>;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawFilledPolygon(android.graphics.Canvas,int,int[],int[],int[])>($r1, 4, $r4, $r7, null);

        $r8 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

        $r9 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.text.TextPaint getPaint()>();

        $i0 = virtualinvoke $r9.<android.text.TextPaint: int getColor()>();

        virtualinvoke $r8.<android.graphics.Paint: void setColor(int)>($i0);

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x>;

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_y>;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawPolygon(android.graphics.Canvas,int,int[],int[])>($r1, 5, $r4, $r7);

        $i0 = 0;

     label19:
        $r10 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.AxisProperties axisParameters>;

        $i1 = $r10.<com.mkulesh.micromath.properties.AxisProperties: int xLabelsNumber>;

        $i1 = $i1 + 1;

        if $i0 > $i1 goto label24;

        $r10 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.AxisProperties axisParameters>;

        $i1 = $r10.<com.mkulesh.micromath.properties.AxisProperties: int xLabelsNumber>;

        $i1 = $i1 + 1;

        $f0 = (float) $i1;

        $f0 = 20.0F / $f0;

        $d0 = (double) $f0;

        if $i0 <= 0 goto label20;

        $r10 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.AxisProperties axisParameters>;

        $i1 = $r10.<com.mkulesh.micromath.properties.AxisProperties: int xLabelsNumber>;

        $i1 = $i1 + 1;

        if $i0 >= $i1 goto label20;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $d1 = (double) $i0;

        $d1 = $d1 * $d0;

        $d1 = -10.0 + $d1;

        $i1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_y>;

        $i1 = $i1 * 10;

        $d2 = (double) $i1;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, $d1, $d2, -10.0);

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $d1 = (double) $i0;

        $d1 = $d1 * $d0;

        $d1 = -10.0 + $d1;

        $i1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_y>;

        $i1 = neg $i1;

        $i1 = $i1 * 10;

        $d2 = (double) $i1;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, $d1, $d2, -10.0);

        $r8 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

        $r10 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.AxisProperties axisParameters>;

        $i1 = $r10.<com.mkulesh.micromath.properties.AxisProperties: int gridLineColor>;

        virtualinvoke $r8.<android.graphics.Paint: void setColor(int)>($i1);

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i1 = $r3.<android.graphics.Point: int x>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i2 = $r3.<android.graphics.Point: int y>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i3 = $r3.<android.graphics.Point: int x>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i4 = $r3.<android.graphics.Point: int y>;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawLine(android.graphics.Canvas,int,int,int,int)>($r1, $i1, $i2, $i3, $i4);

     label20:
        $r13 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] xLabels>;

        if $r13 == null goto label22;

        $r13 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] xLabels>;

        $i1 = lengthof $r13;

        if $i0 >= $i1 goto label22;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $d1 = (double) $i0;

        $d0 = $d1 * $d0;

        $d0 = -10.0 + $d0;

        $i1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_y>;

        $f0 = (float) $i1;

        $f0 = $f0 * 10.5F;

        $d1 = (double) $f0;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, $d0, $d1, -10.0);

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i1 = $r3.<android.graphics.Point: int x>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i2 = $r3.<android.graphics.Point: int y>;

        $r13 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] xLabels>;

        $r14 = $r13[$i0];

        $r15 = $r14.<com.mkulesh.micromath.plots.views.PlotView$Label: java.lang.String name>;

        if z1 == 0 goto label23;

        $b6 = 2;

     label21:
        virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawString(android.graphics.Canvas,int,int,java.lang.String,int,int,float)>($r1, $i1, $i2, $r15, $b6, 0, 1.0F);

     label22:
        $i0 = $i0 + 1;

        goto label19;

     label23:
        $b6 = 3;

        goto label21;

     label24:
        $i0 = 0;

     label25:
        $r10 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.AxisProperties axisParameters>;

        $i1 = $r10.<com.mkulesh.micromath.properties.AxisProperties: int yLabelsNumber>;

        $i1 = $i1 + 1;

        if $i0 > $i1 goto label30;

        $r10 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.AxisProperties axisParameters>;

        $i1 = $r10.<com.mkulesh.micromath.properties.AxisProperties: int yLabelsNumber>;

        $i1 = $i1 + 1;

        $f0 = (float) $i1;

        $f0 = 20.0F / $f0;

        $d0 = (double) $f0;

        if $i0 <= 0 goto label26;

        $r10 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.AxisProperties axisParameters>;

        $i1 = $r10.<com.mkulesh.micromath.properties.AxisProperties: int yLabelsNumber>;

        $i1 = $i1 + 1;

        if $i0 >= $i1 goto label26;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_x>;

        $i1 = $i1 * 10;

        $d1 = (double) $i1;

        $d2 = (double) $i0;

        $d2 = $d2 * $d0;

        $d2 = -10.0 + $d2;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, $d1, $d2, -10.0);

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_x>;

        $i1 = neg $i1;

        $i1 = $i1 * 10;

        $d1 = (double) $i1;

        $d2 = (double) $i0;

        $d2 = $d2 * $d0;

        $d2 = -10.0 + $d2;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, $d1, $d2, -10.0);

        $r8 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

        $r10 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.AxisProperties axisParameters>;

        $i1 = $r10.<com.mkulesh.micromath.properties.AxisProperties: int gridLineColor>;

        virtualinvoke $r8.<android.graphics.Paint: void setColor(int)>($i1);

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i1 = $r3.<android.graphics.Point: int x>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i2 = $r3.<android.graphics.Point: int y>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i3 = $r3.<android.graphics.Point: int x>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i4 = $r3.<android.graphics.Point: int y>;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawLine(android.graphics.Canvas,int,int,int,int)>($r1, $i1, $i2, $i3, $i4);

     label26:
        $r13 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] yLabels>;

        if $r13 == null goto label28;

        $r13 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] yLabels>;

        $i1 = lengthof $r13;

        if $i0 >= $i1 goto label28;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_x>;

        $f0 = (float) $i1;

        $f0 = $f0 * 10.5F;

        $d1 = (double) $f0;

        $d2 = (double) $i0;

        $d0 = $d2 * $d0;

        $d0 = -10.0 + $d0;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, $d1, $d0, -10.0);

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i1 = $r3.<android.graphics.Point: int x>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i2 = $r3.<android.graphics.Point: int y>;

        $r13 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] yLabels>;

        $r14 = $r13[$i0];

        $r15 = $r14.<com.mkulesh.micromath.plots.views.PlotView$Label: java.lang.String name>;

        if z0 == 0 goto label29;

        $b6 = 2;

     label27:
        virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawString(android.graphics.Canvas,int,int,java.lang.String,int,int,float)>($r1, $i1, $i2, $r15, $b6, 0, 1.0F);

     label28:
        $i0 = $i0 + 1;

        goto label25;

     label29:
        $b6 = 3;

        goto label27;

     label30:
        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_y>;

        $i0 = $i0 * 13;

        $d0 = (double) $i0;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, 0.0, $d0, -10.0);

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i0 = $r3.<android.graphics.Point: int x>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i1 = $r3.<android.graphics.Point: int y>;

        $r16 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: java.util.ArrayList functions>;

        $r17 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r18 = (com.mkulesh.micromath.plots.FunctionIf) $r17;

        $r19 = interfaceinvoke $r18.<com.mkulesh.micromath.plots.FunctionIf: java.lang.String[] getLabels()>();

        $r15 = $r19[0];

        virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawString(android.graphics.Canvas,int,int,java.lang.String,int,int,float)>($r1, $i0, $i1, $r15, 1, 0, 2.0F);

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_x>;

        $i0 = $i0 * 13;

        $d0 = (double) $i0;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, $d0, 0.0, -10.0);

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i0 = $r3.<android.graphics.Point: int x>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i1 = $r3.<android.graphics.Point: int y>;

        $r16 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: java.util.ArrayList functions>;

        $r17 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r18 = (com.mkulesh.micromath.plots.FunctionIf) $r17;

        $r19 = interfaceinvoke $r18.<com.mkulesh.micromath.plots.FunctionIf: java.lang.String[] getLabels()>();

        $r15 = $r19[1];

        virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawString(android.graphics.Canvas,int,int,java.lang.String,int,int,float)>($r1, $i0, $i1, $r15, 1, 0, 2.0F);

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_x>;

        $i0 = neg $i0;

        $i0 = $i0 * 10;

        $d0 = (double) $i0;

        $i0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int factor_y>;

        $i0 = $i0 * 12;

        $d1 = (double) $i0;

        virtualinvoke $r2.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r3, $d0, $d1, 0.0);

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i0 = $r3.<android.graphics.Point: int x>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p2>;

        $i1 = $r3.<android.graphics.Point: int y>;

        $r16 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: java.util.ArrayList functions>;

        $r17 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r18 = (com.mkulesh.micromath.plots.FunctionIf) $r17;

        $r19 = interfaceinvoke $r18.<com.mkulesh.micromath.plots.FunctionIf: java.lang.String[] getLabels()>();

        $r15 = $r19[2];

        virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawString(android.graphics.Canvas,int,int,java.lang.String,int,int,float)>($r1, $i0, $i1, $r15, 1, 0, 2.0F);

        return;
    }
    private void drawFilledPolygon(android.graphics.Canvas, int, int[], int[], int[])
    {
        com.mkulesh.micromath.plots.views.SurfacePlotView r0;
        android.graphics.Canvas $r1;
        int $i0, $i1, $i2;
        int[] $r2, $r3, $r4;
        android.graphics.Paint $r5;
        android.graphics.Paint$Style $r6;
        android.graphics.Path $r7;
        float $f0, $f1;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotView;

        $r1 := @parameter0: android.graphics.Canvas;

        $i0 := @parameter1: int;

        $r2 := @parameter2: int[];

        $r3 := @parameter3: int[];

        $r4 := @parameter4: int[];

        $r5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

        $r6 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r5.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r6);

        if $i0 != 4 goto label1;

        virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawVertices(android.graphics.Canvas,int,int[],int[],int[])>($r1, $i0, $r2, $r3, $r4);

        return;

     label1:
        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Path path>;

        virtualinvoke $r7.<android.graphics.Path: void reset()>();

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Path path>;

        $i1 = $r2[0];

        $f0 = (float) $i1;

        $i1 = $r3[0];

        $f1 = (float) $i1;

        virtualinvoke $r7.<android.graphics.Path: void moveTo(float,float)>($f0, $f1);

        $i1 = 1;

     label2:
        if $i1 >= $i0 goto label3;

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Path path>;

        $i2 = $r2[$i1];

        $f0 = (float) $i2;

        $i2 = $r3[$i1];

        $f1 = (float) $i2;

        virtualinvoke $r7.<android.graphics.Path: void lineTo(float,float)>($f0, $f1);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Path path>;

        virtualinvoke $r7.<android.graphics.Path: void close()>();

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Path path>;

        $r5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r7, $r5);

        return;
    }
    private void drawLine(android.graphics.Canvas, int, int, int, int)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotView r0;
        android.graphics.Canvas $r1;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1, $f2, $f3;
        android.graphics.Paint $r2;
        android.graphics.Paint$Style $r3;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotView;

        $r1 := @parameter0: android.graphics.Canvas;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

        $r3 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r3);

        $f3 = (float) $i0;

        $f0 = (float) $i1;

        $f1 = (float) $i2;

        $f2 = (float) $i3;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f3, $f0, $f1, $f2, $r2);

        return;
    }
    private void drawPlane(android.graphics.Canvas, com.mkulesh.micromath.plots.views.Point3D[], int)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotView r0;
        android.graphics.Canvas $r1;
        com.mkulesh.micromath.plots.views.Point3D[] $r2;
        int $i0, i1, i4, i5, $i7;
        int[] $r3, $r14, $r15;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7;
        java.util.ArrayList $r4;
        java.lang.Object $r5;
        com.mkulesh.micromath.plots.FunctionIf $r6;
        double[] $r7;
        com.mkulesh.micromath.plots.views.Point3D $r8;
        byte $b2, $b3, $b6;
        boolean z0, z1;
        com.mkulesh.micromath.plots.views.SurfacePlotProjector $r9;
        android.graphics.Point $r10;
        com.mkulesh.micromath.plots.views.ColorMapView $r11;
        com.mkulesh.micromath.properties.PlotProperties $r12;
        android.graphics.Paint $r13;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotView;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: com.mkulesh.micromath.plots.views.Point3D[];

        $i0 := @parameter2: int;

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: java.util.ArrayList functions>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r6 = (com.mkulesh.micromath.plots.FunctionIf) $r5;

        $r7 = interfaceinvoke $r6.<com.mkulesh.micromath.plots.FunctionIf: double[] getMinMaxValues(int)>(2);

        d1 = $r7[0];

        d0 = $r7[1];

        i1 = 0;

        d2 = 0.0;

        $r8 = $r2[0];

        $d3 = $r8.<com.mkulesh.micromath.plots.views.Point3D: double z>;

        $b2 = $d3 cmpg d1;

        if $b2 >= 0 goto label12;

        $b2 = 1;

     label01:
        if $b2 != 0 goto label13;

        $r8 = $r2[0];

        $d3 = $r8.<com.mkulesh.micromath.plots.views.Point3D: double z>;

        $b3 = $d3 cmpg d0;

        if $b3 > 0 goto label13;

        z0 = 1;

     label02:
        i4 = 1;

        i5 = 0;

     label03:
        if i5 >= $i0 goto label23;

        $r8 = $r2[i4];

        $d3 = $r8.<com.mkulesh.micromath.plots.views.Point3D: double z>;

        $b3 = $d3 cmpg d1;

        if $b3 >= 0 goto label14;

        $b3 = 1;

     label04:
        if $b3 != 0 goto label15;

        $r8 = $r2[i4];

        $d3 = $r8.<com.mkulesh.micromath.plots.views.Point3D: double z>;

        $b6 = $d3 cmpg d0;

        if $b6 > 0 goto label15;

        z1 = 1;

     label05:
        if z0 != 0 goto label06;

        if z1 != 0 goto label06;

        $i7 = $b2 ^ $b3;

        if $i7 == 0 goto label10;

     label06:
        if z0 != 0 goto label09;

        if $b2 == 0 goto label16;

        $d3 = d1;

     label07:
        $r8 = $r2[i4];

        $d4 = $r8.<com.mkulesh.micromath.plots.views.Point3D: double z>;

        $d4 = $d3 - $d4;

        $r8 = $r2[i5];

        $d5 = $r8.<com.mkulesh.micromath.plots.views.Point3D: double z>;

        $r8 = $r2[i4];

        $d6 = $r8.<com.mkulesh.micromath.plots.views.Point3D: double z>;

        $d5 = $d5 - $d6;

        $d4 = $d4 / $d5;

        $r8 = $r2[i5];

        $d5 = $r8.<com.mkulesh.micromath.plots.views.Point3D: double x>;

        $r8 = $r2[i4];

        $d6 = $r8.<com.mkulesh.micromath.plots.views.Point3D: double x>;

        $d5 = $d5 - $d6;

        $d5 = $d5 * $d4;

        $r8 = $r2[i4];

        $d6 = $r8.<com.mkulesh.micromath.plots.views.Point3D: double x>;

        $d5 = $d5 + $d6;

        $r8 = $r2[i5];

        $d6 = $r8.<com.mkulesh.micromath.plots.views.Point3D: double y>;

        $r8 = $r2[i4];

        $d7 = $r8.<com.mkulesh.micromath.plots.views.Point3D: double y>;

        $d6 = $d6 - $d7;

        $d4 = $d6 * $d4;

        $r8 = $r2[i4];

        $d6 = $r8.<com.mkulesh.micromath.plots.views.Point3D: double y>;

        $d4 = $d4 + $d6;

        if $b2 == 0 goto label17;

        $r9 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r10 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        virtualinvoke $r9.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r10, $d5, $d4, -10.0);

     label08:
        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x>;

        $r10 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i7 = $r10.<android.graphics.Point: int x>;

        $r3[i1] = $i7;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_y>;

        $r10 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i7 = $r10.<android.graphics.Point: int y>;

        $r3[i1] = $i7;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] color>;

        $r11 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.ColorMapView colorMapView>;

        $r12 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.PlotProperties plotParameters>;

        $i7 = $r12.<com.mkulesh.micromath.properties.PlotProperties: int meshOpacity>;

        $i7 = virtualinvoke $r11.<com.mkulesh.micromath.plots.views.ColorMapView: int getPaletteColor(double,double[],int)>($d3, $r7, $i7);

        $r3[i1] = $i7;

        i1 = i1 + 1;

        d2 = d2 + $d3;

     label09:
        if z1 == 0 goto label18;

        $r8 = $r2[i4];

        $r10 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $r9 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        virtualinvoke $r8.<com.mkulesh.micromath.plots.views.Point3D: void projection(android.graphics.Point,com.mkulesh.micromath.plots.views.SurfacePlotProjector)>($r10, $r9);

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x>;

        $r10 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i7 = $r10.<android.graphics.Point: int x>;

        $r3[i1] = $i7;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_y>;

        $r10 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i7 = $r10.<android.graphics.Point: int y>;

        $r3[i1] = $i7;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] color>;

        $r11 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.ColorMapView colorMapView>;

        $r8 = $r2[i4];

        $d3 = $r8.<com.mkulesh.micromath.plots.views.Point3D: double z>;

        $r12 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.PlotProperties plotParameters>;

        $i7 = $r12.<com.mkulesh.micromath.properties.PlotProperties: int meshOpacity>;

        $i7 = virtualinvoke $r11.<com.mkulesh.micromath.plots.views.ColorMapView: int getPaletteColor(double,double[],int)>($d3, $r7, $i7);

        $r3[i1] = $i7;

        i1 = i1 + 1;

        $r8 = $r2[i4];

        $d3 = $r8.<com.mkulesh.micromath.plots.views.Point3D: double z>;

        d2 = d2 + $d3;

     label10:
        i4 = i4 + 1;

        if i4 != $i0 goto label11;

        i4 = 0;

     label11:
        z0 = z1;

        $b2 = $b3;

        i5 = i5 + 1;

        goto label03;

     label12:
        $b2 = 0;

        goto label01;

     label13:
        z0 = 0;

        goto label02;

     label14:
        $b3 = 0;

        goto label04;

     label15:
        z1 = 0;

        goto label05;

     label16:
        $d3 = d0;

        goto label07;

     label17:
        $r9 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r10 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        virtualinvoke $r9.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r10, $d5, $d4, 10.0);

        goto label08;

     label18:
        if $b3 == 0 goto label21;

        $d3 = d1;

     label19:
        $r8 = $r2[i5];

        $d4 = $r8.<com.mkulesh.micromath.plots.views.Point3D: double z>;

        $d4 = $d3 - $d4;

        $r8 = $r2[i4];

        $d5 = $r8.<com.mkulesh.micromath.plots.views.Point3D: double z>;

        $r8 = $r2[i5];

        $d6 = $r8.<com.mkulesh.micromath.plots.views.Point3D: double z>;

        $d5 = $d5 - $d6;

        $d4 = $d4 / $d5;

        $r8 = $r2[i4];

        $d5 = $r8.<com.mkulesh.micromath.plots.views.Point3D: double x>;

        $r8 = $r2[i5];

        $d6 = $r8.<com.mkulesh.micromath.plots.views.Point3D: double x>;

        $d5 = $d5 - $d6;

        $d5 = $d5 * $d4;

        $r8 = $r2[i5];

        $d6 = $r8.<com.mkulesh.micromath.plots.views.Point3D: double x>;

        $d5 = $d5 + $d6;

        $r8 = $r2[i4];

        $d6 = $r8.<com.mkulesh.micromath.plots.views.Point3D: double y>;

        $r8 = $r2[i5];

        $d7 = $r8.<com.mkulesh.micromath.plots.views.Point3D: double y>;

        $d6 = $d6 - $d7;

        $d4 = $d6 * $d4;

        $r8 = $r2[i5];

        $d6 = $r8.<com.mkulesh.micromath.plots.views.Point3D: double y>;

        $d4 = $d4 + $d6;

        if $b3 == 0 goto label22;

        $r9 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r10 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        virtualinvoke $r9.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r10, $d5, $d4, -10.0);

     label20:
        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x>;

        $r10 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i7 = $r10.<android.graphics.Point: int x>;

        $r3[i1] = $i7;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_y>;

        $r10 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i7 = $r10.<android.graphics.Point: int y>;

        $r3[i1] = $i7;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] color>;

        $r11 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.ColorMapView colorMapView>;

        $r12 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.PlotProperties plotParameters>;

        $i7 = $r12.<com.mkulesh.micromath.properties.PlotProperties: int meshOpacity>;

        $i7 = virtualinvoke $r11.<com.mkulesh.micromath.plots.views.ColorMapView: int getPaletteColor(double,double[],int)>($d3, $r7, $i7);

        $r3[i1] = $i7;

        i1 = i1 + 1;

        d2 = d2 + $d3;

        goto label10;

     label21:
        $d3 = d0;

        goto label19;

     label22:
        $r9 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r10 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        virtualinvoke $r9.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r10, $d5, $d4, 10.0);

        goto label20;

     label23:
        if i1 <= 0 goto label27;

        $r13 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

        $r11 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.ColorMapView colorMapView>;

        d0 = (double) i1;

        d2 = d2 / d0;

        $i0 = virtualinvoke $r11.<com.mkulesh.micromath.plots.views.ColorMapView: int getPaletteColor(double,double[],int)>(d2, $r7, 255);

        virtualinvoke $r13.<android.graphics.Paint: void setColor(int)>($i0);

        $r12 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.PlotProperties plotParameters>;

        z0 = $r12.<com.mkulesh.micromath.properties.PlotProperties: boolean meshFill>;

        if z0 == 0 goto label24;

        $r14 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x>;

        $r15 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_y>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] color>;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawFilledPolygon(android.graphics.Canvas,int,int[],int[],int[])>($r1, i1, $r14, $r15, $r3);

     label24:
        $r12 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.PlotProperties plotParameters>;

        z0 = $r12.<com.mkulesh.micromath.properties.PlotProperties: boolean meshLines>;

        if z0 == 0 goto label25;

        $r13 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

        virtualinvoke $r13.<android.graphics.Paint: void setColor(int)>(-1862270977);

     label25:
        $r12 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.PlotProperties plotParameters>;

        z0 = $r12.<com.mkulesh.micromath.properties.PlotProperties: boolean meshLines>;

        if z0 != 0 goto label26;

        $r12 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.PlotProperties plotParameters>;

        z0 = $r12.<com.mkulesh.micromath.properties.PlotProperties: boolean meshFill>;

        if z0 != 0 goto label27;

     label26:
        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x>;

        $r14 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x>;

        $i0 = $r14[0];

        $r3[i1] = $i0;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_y>;

        $r14 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_y>;

        $i0 = $r14[0];

        $r3[i1] = $i0;

        $i0 = i1 + 1;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_x>;

        $r14 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] poly_y>;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawPolygon(android.graphics.Canvas,int,int[],int[])>($r1, $i0, $r3, $r14);

        $r13 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

        virtualinvoke $r13.<android.graphics.Paint: void setAlpha(int)>(255);

     label27:
        return;
    }
    private void drawPolygon(android.graphics.Canvas, int, int[], int[])
    {
        com.mkulesh.micromath.plots.views.SurfacePlotView r0;
        android.graphics.Canvas $r1;
        int $i0, i1, $i2;
        int[] $r2, $r3;
        float $f0, $f1, $f2, $f3;
        android.graphics.Paint $r4;
        android.graphics.Paint$Style $r5;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotView;

        $r1 := @parameter0: android.graphics.Canvas;

        $i0 := @parameter1: int;

        $r2 := @parameter2: int[];

        $r3 := @parameter3: int[];

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

        $r5 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r4.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r5);

        i1 = 1;

     label1:
        if i1 >= $i0 goto label2;

        $i2 = i1 + -1;

        $i2 = $r2[$i2];

        $f3 = (float) $i2;

        $i2 = i1 + -1;

        $i2 = $r3[$i2];

        $f0 = (float) $i2;

        $i2 = $r2[i1];

        $f1 = (float) $i2;

        $i2 = $r3[i1];

        $f2 = (float) $i2;

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f3, $f0, $f1, $f2, $r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
    private void drawSurface(android.graphics.Canvas)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotView r0;
        android.graphics.Canvas $r1;
        int i0, $i1, i3, i4, i6, i7;
        double d0, $d1;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        com.mkulesh.micromath.plots.FunctionIf $r4;
        double[] $r5;
        com.mkulesh.micromath.plots.views.SurfacePlotProjector $r6;
        com.mkulesh.micromath.plots.views.Point3D $r7;
        byte $b2, b5, $b8;
        boolean z0, z1;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotView;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: java.util.ArrayList functions>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r4 = (com.mkulesh.micromath.plots.FunctionIf) $r3;

        $r5 = interfaceinvoke $r4.<com.mkulesh.micromath.plots.FunctionIf: double[] getXValues()>();

        $i1 = lengthof $r5;

        $i1 = $i1 + -1;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: java.util.ArrayList functions>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r4 = (com.mkulesh.micromath.plots.FunctionIf) $r3;

        $r5 = interfaceinvoke $r4.<com.mkulesh.micromath.plots.FunctionIf: double[] getYValues()>();

        i0 = lengthof $r5;

        i0 = i0 + -1;

        $r6 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        d0 = virtualinvoke $r6.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double getDistance()>();

        $r6 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $d1 = virtualinvoke $r6.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double getCosElevationAngle()>();

        d0 = d0 * $d1;

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D cop>;

        $r6 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $d1 = virtualinvoke $r6.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double getSinRotationAngle()>();

        $d1 = $d1 * d0;

        $r7.<com.mkulesh.micromath.plots.views.Point3D: double x> = $d1;

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D cop>;

        $r6 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $d1 = virtualinvoke $r6.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double getCosRotationAngle()>();

        d0 = $d1 * d0;

        $r7.<com.mkulesh.micromath.plots.views.Point3D: double y> = d0;

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D cop>;

        $r6 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        d0 = virtualinvoke $r6.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double getDistance()>();

        $r6 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $d1 = virtualinvoke $r6.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double getSinElevationAngle()>();

        d0 = d0 * $d1;

        $r7.<com.mkulesh.micromath.plots.views.Point3D: double z> = d0;

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D cop>;

        $r6 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        virtualinvoke $r7.<com.mkulesh.micromath.plots.views.Point3D: void transform(com.mkulesh.micromath.plots.views.SurfacePlotProjector)>($r6);

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D cop>;

        d0 = $r7.<com.mkulesh.micromath.plots.views.Point3D: double x>;

        $b2 = d0 cmpl 0.0;

        if $b2 <= 0 goto label07;

        z0 = 1;

     label01:
        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D cop>;

        d0 = $r7.<com.mkulesh.micromath.plots.views.Point3D: double y>;

        $b2 = d0 cmpl 0.0;

        if $b2 <= 0 goto label08;

        z1 = 1;

     label02:
        if z0 == 0 goto label09;

        i3 = 0;

        i4 = $i1;

        b5 = 1;

     label03:
        if z1 == 0 goto label10;

        i6 = 0;

        i7 = i0;

        $b2 = 1;

     label04:
        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D cop>;

        d0 = $r7.<com.mkulesh.micromath.plots.views.Point3D: double x>;

        $b8 = d0 cmpl 10.0;

        if $b8 > 0 goto label05;

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D cop>;

        d0 = $r7.<com.mkulesh.micromath.plots.views.Point3D: double x>;

        $b8 = d0 cmpg -10.0;

        if $b8 >= 0 goto label12;

     label05:
        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D cop>;

        d0 = $r7.<com.mkulesh.micromath.plots.views.Point3D: double y>;

        $b8 = d0 cmpl 10.0;

        if $b8 > 0 goto label06;

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D cop>;

        d0 = $r7.<com.mkulesh.micromath.plots.views.Point3D: double y>;

        $b8 = d0 cmpg -10.0;

        if $b8 >= 0 goto label11;

     label06:
        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawArea(android.graphics.Canvas,int,int,int,int,int,int)>($r1, i3, i6, i4, i7, b5, $b2);

        return;

     label07:
        z0 = 0;

        goto label01;

     label08:
        z1 = 0;

        goto label02;

     label09:
        i3 = $i1;

        i4 = 0;

        b5 = -1;

        goto label03;

     label10:
        i6 = i0;

        i7 = 0;

        $b2 = -1;

        goto label04;

     label11:
        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D cop>;

        d0 = $r7.<com.mkulesh.micromath.plots.views.Point3D: double y>;

        d0 = d0 + 10.0;

        $d1 = (double) i0;

        d0 = d0 * $d1;

        d0 = d0 / 20.0;

        $i1 = (int) d0;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawArea(android.graphics.Canvas,int,int,int,int,int,int)>($r1, i3, 0, i4, $i1, b5, 1);

        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawArea(android.graphics.Canvas,int,int,int,int,int,int)>($r1, i3, i0, i4, $i1, b5, -1);

        return;

     label12:
        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D cop>;

        d0 = $r7.<com.mkulesh.micromath.plots.views.Point3D: double y>;

        b5 = d0 cmpl 10.0;

        if b5 > 0 goto label13;

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D cop>;

        d0 = $r7.<com.mkulesh.micromath.plots.views.Point3D: double y>;

        b5 = d0 cmpg -10.0;

        if b5 >= 0 goto label14;

     label13:
        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D cop>;

        d0 = $r7.<com.mkulesh.micromath.plots.views.Point3D: double x>;

        d0 = d0 + 10.0;

        $d1 = (double) $i1;

        d0 = d0 * $d1;

        d0 = d0 / 20.0;

        i0 = (int) d0;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawArea(android.graphics.Canvas,int,int,int,int,int,int)>($r1, 0, i6, i0, i7, 1, $b2);

        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawArea(android.graphics.Canvas,int,int,int,int,int,int)>($r1, $i1, i6, i0, i7, -1, $b2);

        return;

     label14:
        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D cop>;

        d0 = $r7.<com.mkulesh.micromath.plots.views.Point3D: double x>;

        d0 = d0 + 10.0;

        $d1 = (double) $i1;

        d0 = d0 * $d1;

        d0 = d0 / 20.0;

        i3 = (int) d0;

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D cop>;

        d0 = $r7.<com.mkulesh.micromath.plots.views.Point3D: double y>;

        d0 = d0 + 10.0;

        $d1 = (double) i0;

        d0 = d0 * $d1;

        d0 = d0 / 20.0;

        i4 = (int) d0;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawArea(android.graphics.Canvas,int,int,int,int,int,int)>($r1, 0, 0, i3, i4, 1, 1);

        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawArea(android.graphics.Canvas,int,int,int,int,int,int)>($r1, 0, i0, i3, i4, 1, -1);

        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawArea(android.graphics.Canvas,int,int,int,int,int,int)>($r1, $i1, 0, i3, i4, -1, 1);

        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawArea(android.graphics.Canvas,int,int,int,int,int,int)>($r1, $i1, i0, i3, i4, -1, -1);

        return;
    }
    private void getScaledPadding(android.graphics.Rect)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotView r0;
        android.graphics.Rect $r1;
        int i0, $i1, $i2, $i3, $i4;
        com.mkulesh.micromath.properties.AxisProperties $r2;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotView;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.AxisProperties axisParameters>;

        i0 = virtualinvoke $r2.<com.mkulesh.micromath.properties.AxisProperties: int getLabelLineSize()>();

        i0 = i0 * 2;

        $i1 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int getPaddingLeft()>();

        $i1 = $i1 + i0;

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int getPaddingTop()>();

        $i3 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int getPaddingRight()>();

        $i4 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int getPaddingBottom()>();

        i0 = $i4 + i0;

        virtualinvoke $r1.<android.graphics.Rect: void set(int,int,int,int)>($i1, $i2, $i3, i0);

        return;
    }
    private static boolean isPointsValid(com.mkulesh.micromath.plots.views.Point3D[])
    {
        com.mkulesh.micromath.plots.views.Point3D[] $r0;
        com.mkulesh.micromath.plots.views.Point3D $r1;
        boolean $z0;

        $r0 := @parameter0: com.mkulesh.micromath.plots.views.Point3D[];

        $r1 = $r0[0];

        $z0 = virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Point3D: boolean isInvalid()>();

        if $z0 != 0 goto label1;

        $r1 = $r0[1];

        $z0 = virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Point3D: boolean isInvalid()>();

        if $z0 != 0 goto label1;

        $r1 = $r0[2];

        $z0 = virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Point3D: boolean isInvalid()>();

        if $z0 != 0 goto label1;

        $r1 = $r0[3];

        $z0 = virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Point3D: boolean isInvalid()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    private com.mkulesh.micromath.plots.views.PlotView$Label[] makeLabels(int, int, double[])
    {
        com.mkulesh.micromath.plots.views.SurfacePlotView r0;
        int $i0, $i1, $i2;
        double[] $r1;
        com.mkulesh.micromath.math.Vector2D $r2;
        double d0, d1, $d2;
        byte $b3;
        java.lang.String[] $r3;
        com.mkulesh.micromath.plots.views.PlotView$Label[] r4;
        com.mkulesh.micromath.plots.views.PlotView$Label $r5;
        java.lang.String $r6;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: double[];

        d1 = $r1[0];

        d0 = $r1[1];

        d0 = d0 - d1;

        d0 = staticinvoke <java.lang.Math: double abs(double)>(d0);

        $i2 = $i1 + 1;

        $d2 = (double) $i2;

        d0 = d0 / $d2;

        $b3 = d0 cmpl 0.0;

        if $b3 != 0 goto label1;

        return null;

     label1:
        $i1 = $i1 + 2;

        $r1 = newarray (double)[$i1];

        $i1 = 0;

     label2:
        $i2 = lengthof $r1;

        if $i1 >= $i2 goto label3;

        $d2 = (double) $i1;

        $d2 = $d2 * d0;

        $d2 = $d2 + d1;

        $r1[$i1] = $d2;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $i1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int significantDigits>;

        $r3 = staticinvoke <com.mkulesh.micromath.utils.ViewUtils: java.lang.String[] catValues(double[],int)>($r1, $i1);

        $i1 = lengthof $r1;

        r4 = newarray (com.mkulesh.micromath.plots.views.PlotView$Label)[$i1];

        $i1 = 0;

     label4:
        $i2 = lengthof r4;

        if $i1 >= $i2 goto label5;

        $r5 = new com.mkulesh.micromath.plots.views.PlotView$Label;

        d1 = $r1[$i1];

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.math.Vector2D labelCenter>;

        specialinvoke $r5.<com.mkulesh.micromath.plots.views.PlotView$Label: void <init>(com.mkulesh.micromath.plots.views.PlotView,int,double,com.mkulesh.micromath.math.Vector2D)>(r0, $i0, d1, $r2);

        r4[$i1] = $r5;

        $r5 = r4[$i1];

        $r6 = $r3[$i1];

        $r5.<com.mkulesh.micromath.plots.views.PlotView$Label: java.lang.String name> = $r6;

        $i1 = $i1 + 1;

        goto label4;

     label5:
        return r4;
    }
    private void prepare(android.util.AttributeSet)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotView r0;
        android.util.AttributeSet $r1;
        int $i0;
        com.mkulesh.micromath.properties.PlotProperties $r2;
        com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle $r3;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotView;

        $r1 := @parameter0: android.util.AttributeSet;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 11 goto label1;

        virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void setLayerType(int,android.graphics.Paint)>(0, null);

     label1:
        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.PlotProperties plotParameters>;

        $r3 = <com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle SURFACE>;

        $r2.<com.mkulesh.micromath.properties.PlotProperties: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle twoDPlotStyle> = $r3;

        return;
    }
    private void prepareProjector()
    {
        com.mkulesh.micromath.plots.views.SurfacePlotView r0;
        int i0, i1, $i2, i3, i4, $i5;
        double d0, d1, $d2;
        com.mkulesh.micromath.plots.views.SurfacePlotProjector $r1, $r7;
        android.graphics.Rect $r2;
        com.mkulesh.micromath.properties.PlotProperties $r3;
        android.graphics.Point $r4;
        double[][] $r5;
        double[] $r6;
        byte $b6;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotView;

        $r1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Rect rect>;

        i1 = virtualinvoke $r2.<android.graphics.Rect: int width()>();

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Rect rect>;

        $i2 = virtualinvoke $r2.<android.graphics.Rect: int height()>();

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void setProjectionArea(int,int)>(i1, $i2);

        $r1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void setScaling(double)>(1.0);

        $r1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void setDistance(double)>(100.0);

        $r1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void set2DScaling(double)>(1.0);

        $r1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.PlotProperties plotParameters>;

        i1 = $r3.<com.mkulesh.micromath.properties.PlotProperties: int rotation>;

        d0 = (double) i1;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void setRotationAngle(double)>(d0);

        $r1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.PlotProperties plotParameters>;

        i1 = $r3.<com.mkulesh.micromath.properties.PlotProperties: int elevation>;

        d0 = (double) i1;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void setElevationAngle(double)>(d0);

        $r1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void set2DTranslation(int,int)>(0, 0);

        i0 = 2147483647;

        i3 = -2147483648;

        i1 = 2147483647;

        $i2 = -2147483648;

        i4 = 0;

     label1:
        if i4 >= 8 goto label2;

        $r1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $r5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: double[][] cubeBounds>;

        $r6 = $r5[i4];

        d0 = $r6[0];

        $r5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: double[][] cubeBounds>;

        $r6 = $r5[i4];

        d1 = $r6[1];

        $r5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: double[][] cubeBounds>;

        $r6 = $r5[i4];

        $d2 = $r6[2];

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r4, d0, d1, $d2);

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i5 = $r4.<android.graphics.Point: int x>;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i5);

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i5 = $r4.<android.graphics.Point: int x>;

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(i3, $i5);

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i5 = $r4.<android.graphics.Point: int y>;

        i1 = staticinvoke <java.lang.Math: int min(int,int)>(i1, $i5);

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i5 = $r4.<android.graphics.Point: int y>;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i5);

        i4 = i4 + 1;

        goto label1;

     label2:
        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Rect rect>;

        i4 = virtualinvoke $r2.<android.graphics.Rect: int width()>();

        if i4 == 0 goto label3;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Rect rect>;

        i4 = virtualinvoke $r2.<android.graphics.Rect: int height()>();

        if i4 == 0 goto label3;

        i0 = i3 - i0;

        d0 = (double) i0;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Rect rect>;

        i0 = virtualinvoke $r2.<android.graphics.Rect: int width()>();

        d1 = (double) i0;

        d0 = d0 / d1;

        i1 = $i2 - i1;

        d1 = (double) i1;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Rect rect>;

        i1 = virtualinvoke $r2.<android.graphics.Rect: int height()>();

        $d2 = (double) i1;

        d1 = d1 / $d2;

        d0 = staticinvoke <java.lang.Math: double max(double,double)>(d0, d1);

        d0 = 1.0499999523162842 * d0;

        $b6 = d0 cmpl 0.0;

        if $b6 == 0 goto label3;

        $r1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        d1 = virtualinvoke $r7.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double get2DScaling()>();

        d0 = d1 / d0;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void set2DScaling(double)>(d0);

     label3:
        i3 = 2147483647;

        i4 = -2147483648;

        i1 = 2147483647;

        $i2 = -2147483648;

        i0 = 0;

     label4:
        if i0 >= 8 goto label5;

        $r1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $r5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: double[][] cubeBounds>;

        $r6 = $r5[i0];

        d0 = $r6[0];

        $r5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: double[][] cubeBounds>;

        $r6 = $r5[i0];

        d1 = $r6[1];

        $r5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: double[][] cubeBounds>;

        $r6 = $r5[i0];

        $d2 = $r6[2];

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void project(android.graphics.Point,double,double,double)>($r4, d0, d1, $d2);

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i5 = $r4.<android.graphics.Point: int x>;

        i3 = staticinvoke <java.lang.Math: int min(int,int)>(i3, $i5);

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i5 = $r4.<android.graphics.Point: int x>;

        i4 = staticinvoke <java.lang.Math: int max(int,int)>(i4, $i5);

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i5 = $r4.<android.graphics.Point: int y>;

        i1 = staticinvoke <java.lang.Math: int min(int,int)>(i1, $i5);

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Point p1>;

        $i5 = $r4.<android.graphics.Point: int y>;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i5);

        i0 = i0 + 1;

        goto label4;

     label5:
        i0 = i3 + i4;

        i0 = i0 / 2;

        i1 = i1 + $i2;

        i1 = i1 / 2;

        $r1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Rect rect>;

        $i2 = virtualinvoke $r2.<android.graphics.Rect: int centerX()>();

        $i2 = $i2 - i0;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Rect rect>;

        i0 = virtualinvoke $r2.<android.graphics.Rect: int centerY()>();

        i1 = i0 - i1;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void set2DTranslation(int,int)>($i2, i1);

        return;
    }
    public void drawString(android.graphics.Canvas, int, int, java.lang.String, int, int, float)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotView r0;
        android.graphics.Canvas $r1;
        java.lang.String $r2;
        int $i0, $i1, $i2, $i3, $i4;
        float $f0, $f1;
        android.graphics.Rect $r3;
        android.graphics.Paint $r4;
        android.text.TextPaint $r5;
        android.graphics.Paint$Style $r6;
        com.mkulesh.micromath.properties.AxisProperties $r7;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotView;

        $r1 := @parameter0: android.graphics.Canvas;

        $i2 := @parameter1: int;

        $i3 := @parameter2: int;

        $r2 := @parameter3: java.lang.String;

        $i0 := @parameter4: int;

        $i1 := @parameter5: int;

        $f0 := @parameter6: float;

        if $r2 != null goto label1;

        return;

     label1:
        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

        $r5 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.text.TextPaint getPaint()>();

        $i4 = virtualinvoke $r5.<android.text.TextPaint: int getColor()>();

        virtualinvoke $r4.<android.graphics.Paint: void setColor(int)>($i4);

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

        $r6 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r4.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r6);

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.AxisProperties axisParameters>;

        $i4 = virtualinvoke $r7.<com.mkulesh.micromath.properties.AxisProperties: int getLabelTextSize()>();

        $i4 = $i4 + -3;

        $f1 = (float) $i4;

        $f0 = $f1 * $f0;

        virtualinvoke $r4.<android.graphics.Paint: void setTextSize(float)>($f0);

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

        $i4 = virtualinvoke $r2.<java.lang.String: int length()>();

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Rect tmpRect>;

        virtualinvoke $r4.<android.graphics.Paint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)>($r2, 0, $i4, $r3);

        lookupswitch($i1)
        {
            case 0: goto label4;
            case 1: goto label5;
            default: goto label2;
        };

     label2:
        lookupswitch($i0)
        {
            case 1: goto label7;
            case 2: goto label3;
            case 3: goto label6;
            default: goto label3;
        };

     label3:
        $f0 = (float) $i2;

        $f1 = (float) $i3;

        $r4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r2, $f0, $f1, $r4);

        return;

     label4:
        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Rect tmpRect>;

        $i1 = virtualinvoke $r3.<android.graphics.Rect: int height()>();

        $i3 = $i3 + $i1;

        goto label2;

     label5:
        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Rect tmpRect>;

        $i1 = virtualinvoke $r3.<android.graphics.Rect: int height()>();

        $i1 = $i1 / 2;

        $i3 = $i3 + $i1;

        goto label2;

     label6:
        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Rect tmpRect>;

        $i0 = virtualinvoke $r3.<android.graphics.Rect: int width()>();

        $i2 = $i2 - $i0;

        goto label3;

     label7:
        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Rect tmpRect>;

        $i0 = virtualinvoke $r3.<android.graphics.Rect: int width()>();

        $i0 = $i0 / 2;

        $i2 = $i2 - $i0;

        goto label3;
    }
    protected void drawVertices(android.graphics.Canvas, int, int[], int[], int[])
    {
        com.mkulesh.micromath.plots.views.SurfacePlotView r0;
        android.graphics.Canvas $r1;
        int $i0, $i1;
        int[] $r2, $r3, $r4;
        float[] $r5;
        android.graphics.Paint $r6;
        float $f0;
        android.graphics.Canvas$VertexMode $r7;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotView;

        $r1 := @parameter0: android.graphics.Canvas;

        $i0 := @parameter1: int;

        $r2 := @parameter2: int[];

        $r3 := @parameter3: int[];

        $r4 := @parameter4: int[];

        $r5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: float[] vertsValues>;

        $i0 = $r2[0];

        $f0 = (float) $i0;

        $r5[0] = $f0;

        $r5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: float[] vertsValues>;

        $i0 = $r3[0];

        $f0 = (float) $i0;

        $r5[1] = $f0;

        $r5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: float[] vertsValues>;

        $i0 = $r2[1];

        $f0 = (float) $i0;

        $r5[2] = $f0;

        $r5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: float[] vertsValues>;

        $i0 = $r3[1];

        $f0 = (float) $i0;

        $r5[3] = $f0;

        $r5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: float[] vertsValues>;

        $i0 = $r2[2];

        $f0 = (float) $i0;

        $r5[4] = $f0;

        $r5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: float[] vertsValues>;

        $i0 = $r3[2];

        $f0 = (float) $i0;

        $r5[5] = $f0;

        $r5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: float[] vertsValues>;

        $i0 = $r2[0];

        $f0 = (float) $i0;

        $r5[6] = $f0;

        $r5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: float[] vertsValues>;

        $i0 = $r3[0];

        $f0 = (float) $i0;

        $r5[7] = $f0;

        $r5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: float[] vertsValues>;

        $i0 = $r2[3];

        $f0 = (float) $i0;

        $r5[8] = $f0;

        $r5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: float[] vertsValues>;

        $i0 = $r3[3];

        $f0 = (float) $i0;

        $r5[9] = $f0;

        $r5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: float[] vertsValues>;

        $i0 = $r2[2];

        $f0 = (float) $i0;

        $r5[10] = $f0;

        $r5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: float[] vertsValues>;

        $i0 = $r3[2];

        $f0 = (float) $i0;

        $r5[11] = $f0;

        if $r4 == null goto label2;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] vertsColors>;

        $i0 = $r4[0];

        $r2[0] = $i0;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] vertsColors>;

        $i0 = $r4[1];

        $r2[1] = $i0;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] vertsColors>;

        $i0 = $r4[2];

        $r2[2] = $i0;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] vertsColors>;

        $i0 = $r4[0];

        $r2[3] = $i0;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] vertsColors>;

        $i0 = $r4[3];

        $r2[4] = $i0;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] vertsColors>;

        $i0 = $r4[2];

        $r2[5] = $i0;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] vertsColors>;

        $r2[6] = -16777216;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] vertsColors>;

        $r2[7] = -16777216;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] vertsColors>;

        $r2[8] = -16777216;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] vertsColors>;

        $r2[9] = -16777216;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] vertsColors>;

        $r2[10] = -16777216;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] vertsColors>;

        $r2[11] = -16777216;

     label1:
        $r7 = <android.graphics.Canvas$VertexMode: android.graphics.Canvas$VertexMode TRIANGLES>;

        $r5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: float[] vertsValues>;

        $i0 = lengthof $r5;

        $r5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: float[] vertsValues>;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] vertsColors>;

        $r6 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawVertices(android.graphics.Canvas$VertexMode,int,float[],int,float[],int,int[],int,short[],int,int,android.graphics.Paint)>($r7, $i0, $r5, 0, null, 0, $r2, 0, null, 0, 0, $r6);

        return;

     label2:
        $i0 = 0;

     label3:
        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] vertsColors>;

        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label1;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int[] vertsColors>;

        $r6 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

        $i1 = virtualinvoke $r6.<android.graphics.Paint: int getColor()>();

        $r2[$i0] = $i1;

        $i0 = $i0 + 1;

        goto label3;
    }
    public boolean isRendered()
    {
        com.mkulesh.micromath.plots.views.SurfacePlotView r0;
        com.mkulesh.micromath.plots.views.Point3D[] $r1;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotView;

        $r1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D[] vertex>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    protected void onDraw(android.graphics.Canvas)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotView r0;
        android.graphics.Canvas $r1, r2;
        android.graphics.Bitmap $r3;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.Bitmap$Config $r4;
        android.graphics.Rect $r5, $r6;
        android.graphics.Paint $r7;
        java.util.ArrayList $r8;
        boolean $z0;
        com.mkulesh.micromath.plots.views.Point3D[] $r9;
        com.mkulesh.micromath.plots.views.SurfacePlotProjector $r10;
        double $d0;
        float $f0;
        com.mkulesh.micromath.properties.PlotProperties $r11;
        android.graphics.Paint$Style $r12;
        android.text.TextPaint $r13;
        java.lang.OutOfMemoryError r14;
        android.content.Context $r15;
        android.content.res.Resources $r16;
        java.lang.String $r17;
        android.widget.Toast $r18;
        java.lang.Exception r19;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotView;

        $r1 := @parameter0: android.graphics.Canvas;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Bitmap drawingCache>;

        if $r3 != null goto label51;

     label01:
        $i0 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int getMeasuredWidth()>();

        $i1 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int getMeasuredHeight()>();

     label02:
        $r4 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

     label03:
        $r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r4);

     label04:
        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Bitmap drawingCache> = $r3;

     label05:
        r2 = new android.graphics.Canvas;

     label06:
        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Bitmap drawingCache>;

     label07:
        specialinvoke r2.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r3);

        virtualinvoke r2.<android.graphics.Canvas: void drawColor(int)>(0);

     label08:
        $r5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Rect tmpRect>;

     label09:
        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void getScaledPadding(android.graphics.Rect)>($r5);

     label10:
        $r5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Rect rect>;

        $r6 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Rect tmpRect>;

        $i0 = $r6.<android.graphics.Rect: int left>;

        $r6 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Rect tmpRect>;

        $i1 = $r6.<android.graphics.Rect: int top>;

     label11:
        $i2 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int getRight()>();

        $i3 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int getLeft()>();

     label12:
        $i2 = $i2 - $i3;

     label13:
        $r6 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Rect tmpRect>;

        $i3 = $r6.<android.graphics.Rect: int right>;

     label14:
        $i2 = $i2 - $i3;

     label15:
        $i3 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int getBottom()>();

        $i4 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: int getTop()>();

     label16:
        $i3 = $i3 - $i4;

     label17:
        $r6 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Rect tmpRect>;

        $i4 = $r6.<android.graphics.Rect: int bottom>;

     label18:
        $i3 = $i3 - $i4;

     label19:
        virtualinvoke $r5.<android.graphics.Rect: void set(int,int,int,int)>($i0, $i1, $i2, $i3);

     label20:
        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

     label21:
        virtualinvoke $r7.<android.graphics.Paint: void setStrokeWidth(float)>(0.0F);

     label22:
        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

     label23:
        virtualinvoke $r7.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

     label24:
        $r8 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: java.util.ArrayList functions>;

     label25:
        if $r8 == null goto label52;

     label26:
        $r8 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: java.util.ArrayList functions>;

     label27:
        $z0 = virtualinvoke $r8.<java.util.ArrayList: boolean isEmpty()>();

     label28:
        if $z0 != 0 goto label52;

     label29:
        $r9 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D[] vertex>;

     label30:
        if $r9 == null goto label52;

     label31:
        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void prepareProjector()>();

     label32:
        $r10 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

     label33:
        $d0 = virtualinvoke $r10.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double get2DScaling()>();

     label34:
        $f0 = (float) $d0;

     label35:
        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

     label36:
        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

     label37:
        $f0 = (float) $i0;

     label38:
        virtualinvoke $r7.<android.graphics.Paint: void setTextSize(float)>($f0);

     label39:
        $r11 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.PlotProperties plotParameters>;

     label40:
        $z0 = virtualinvoke $r11.<com.mkulesh.micromath.properties.PlotProperties: boolean isNoAxes()>();

     label41:
        if $z0 != 0 goto label43;

     label42:
        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawBoxGridsLabels(android.graphics.Canvas)>(r2);

     label43:
        virtualinvoke r2.<android.graphics.Canvas: int save()>();

     label44:
        $r5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Rect rect>;

     label45:
        virtualinvoke r2.<android.graphics.Canvas: boolean clipRect(android.graphics.Rect)>($r5);

        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawSurface(android.graphics.Canvas)>(r2);

     label46:
        $r11 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.PlotProperties plotParameters>;

     label47:
        $z0 = virtualinvoke $r11.<com.mkulesh.micromath.properties.PlotProperties: boolean isNoAxes()>();

     label48:
        if $z0 != 0 goto label50;

     label49:
        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void drawBoundingBox(android.graphics.Canvas)>(r2);

     label50:
        virtualinvoke r2.<android.graphics.Canvas: void restore()>();

     label51:
        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Bitmap drawingCache>;

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r3, 0.0F, 0.0F, $r7);

        return;

     label52:
        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

     label53:
        $r12 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

     label54:
        virtualinvoke $r7.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r12);

     label55:
        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

     label56:
        $r13 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.text.TextPaint getPaint()>();

        $i0 = virtualinvoke $r13.<android.text.TextPaint: int getColor()>();

        virtualinvoke $r7.<android.graphics.Paint: void setColor(int)>($i0);

     label57:
        $r5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Rect rect>;

        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.graphics.Paint paint>;

     label58:
        virtualinvoke r2.<android.graphics.Canvas: void drawRect(android.graphics.Rect,android.graphics.Paint)>($r5, $r7);

     label59:
        goto label51;

     label60:
        r14 := @caughtexception;

        $r15 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.content.Context getContext()>();

        $r16 = virtualinvoke $r15.<android.content.Context: android.content.res.Resources getResources()>();

        $r17 = virtualinvoke $r16.<android.content.res.Resources: java.lang.String getString(int)>(2131099800);

        $r15 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.content.Context getContext()>();

        $r18 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r15, $r17, 1);

        virtualinvoke $r18.<android.widget.Toast: void show()>();

        return;

     label61:
        r19 := @caughtexception;

        $r15 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.content.Context getContext()>();

        $r16 = virtualinvoke $r15.<android.content.Context: android.content.res.Resources getResources()>();

        $r17 = virtualinvoke $r16.<android.content.res.Resources: java.lang.String getString(int)>(2131099800);

        $r15 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: android.content.Context getContext()>();

        $r18 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r15, $r17, 1);

        virtualinvoke $r18.<android.widget.Toast: void show()>();

        return;

        catch java.lang.OutOfMemoryError from label01 to label04 with label60;
        catch java.lang.OutOfMemoryError from label05 to label06 with label60;
        catch java.lang.OutOfMemoryError from label07 to label08 with label60;
        catch java.lang.OutOfMemoryError from label09 to label10 with label60;
        catch java.lang.OutOfMemoryError from label11 to label12 with label60;
        catch java.lang.OutOfMemoryError from label15 to label16 with label60;
        catch java.lang.OutOfMemoryError from label19 to label20 with label60;
        catch java.lang.OutOfMemoryError from label21 to label22 with label60;
        catch java.lang.OutOfMemoryError from label23 to label24 with label60;
        catch java.lang.OutOfMemoryError from label27 to label28 with label60;
        catch java.lang.OutOfMemoryError from label31 to label32 with label60;
        catch java.lang.OutOfMemoryError from label33 to label34 with label60;
        catch java.lang.OutOfMemoryError from label35 to label36 with label60;
        catch java.lang.OutOfMemoryError from label38 to label39 with label60;
        catch java.lang.OutOfMemoryError from label40 to label41 with label60;
        catch java.lang.OutOfMemoryError from label42 to label44 with label60;
        catch java.lang.OutOfMemoryError from label45 to label46 with label60;
        catch java.lang.OutOfMemoryError from label47 to label48 with label60;
        catch java.lang.OutOfMemoryError from label49 to label51 with label60;
        catch java.lang.Exception from label01 to label02 with label61;
        catch java.lang.Exception from label03 to label05 with label61;
        catch java.lang.Exception from label06 to label12 with label61;
        catch java.lang.Exception from label13 to label14 with label61;
        catch java.lang.Exception from label15 to label16 with label61;
        catch java.lang.Exception from label17 to label18 with label61;
        catch java.lang.Exception from label19 to label25 with label61;
        catch java.lang.Exception from label26 to label28 with label61;
        catch java.lang.Exception from label29 to label30 with label61;
        catch java.lang.Exception from label31 to label34 with label61;
        catch java.lang.Exception from label35 to label37 with label61;
        catch java.lang.Exception from label38 to label41 with label61;
        catch java.lang.Exception from label42 to label48 with label61;
        catch java.lang.Exception from label49 to label51 with label61;
        catch java.lang.OutOfMemoryError from label53 to label55 with label60;
        catch java.lang.OutOfMemoryError from label56 to label57 with label60;
        catch java.lang.OutOfMemoryError from label58 to label59 with label60;
        catch java.lang.Exception from label52 to label53 with label61;
        catch java.lang.Exception from label54 to label59 with label61;
    }
    public void renderSurface(com.mkulesh.micromath.plots.FunctionIf)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotView r0;
        com.mkulesh.micromath.plots.FunctionIf $r1;
        int i0, i1, $i2, i3, i4;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, $d9;
        double[] $r2;
        double[][] $r3;
        java.lang.String[] $r4;
        com.mkulesh.micromath.plots.views.Point3D[] $r5;
        boolean $z0;
        byte $b5;
        com.mkulesh.micromath.plots.views.Point3D $r6;
        com.mkulesh.micromath.plots.views.SurfacePlotProjector $r7;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotView;

        $r1 := @parameter0: com.mkulesh.micromath.plots.FunctionIf;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D[] vertex> = null;

        if $r1 == null goto label11;

        $r2 = interfaceinvoke $r1.<com.mkulesh.micromath.plots.FunctionIf: double[] getXValues()>();

        if $r2 == null goto label11;

        $r2 = interfaceinvoke $r1.<com.mkulesh.micromath.plots.FunctionIf: double[] getYValues()>();

        if $r2 == null goto label11;

        $r3 = interfaceinvoke $r1.<com.mkulesh.micromath.plots.FunctionIf: double[][] getZValues()>();

        if $r3 == null goto label11;

        $r4 = interfaceinvoke $r1.<com.mkulesh.micromath.plots.FunctionIf: java.lang.String[] getLabels()>();

        if $r4 != null goto label01;

        return;

     label01:
        $r2 = interfaceinvoke $r1.<com.mkulesh.micromath.plots.FunctionIf: double[] getMinMaxValues(int)>(0);

        d2 = $r2[0];

        $r2 = interfaceinvoke $r1.<com.mkulesh.micromath.plots.FunctionIf: double[] getMinMaxValues(int)>(0);

        d1 = $r2[1];

        $r2 = interfaceinvoke $r1.<com.mkulesh.micromath.plots.FunctionIf: double[] getMinMaxValues(int)>(1);

        d5 = $r2[0];

        $r2 = interfaceinvoke $r1.<com.mkulesh.micromath.plots.FunctionIf: double[] getMinMaxValues(int)>(1);

        d0 = $r2[1];

        $r2 = interfaceinvoke $r1.<com.mkulesh.micromath.plots.FunctionIf: double[] getXValues()>();

        i0 = lengthof $r2;

        $r2 = interfaceinvoke $r1.<com.mkulesh.micromath.plots.FunctionIf: double[] getYValues()>();

        i1 = lengthof $r2;

        $i2 = i1 * i0;

        $r5 = newarray (com.mkulesh.micromath.plots.views.Point3D)[$i2];

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D[] vertex> = $r5;

        d1 = d1 - d2;

        d1 = 20.0 / d1;

        d0 = d0 - d5;

        d4 = 20.0 / d0;

        d6 = #NaN;

        d7 = #NaN;

        $i2 = 0;

        i3 = 0;

     label02:
        if $i2 >= i0 goto label10;

        $r2 = interfaceinvoke $r1.<com.mkulesh.micromath.plots.FunctionIf: double[] getXValues()>();

        d0 = $r2[$i2];

        i4 = 0;

     label03:
        if i4 >= i1 goto label09;

        $r2 = interfaceinvoke $r1.<com.mkulesh.micromath.plots.FunctionIf: double[] getYValues()>();

        d3 = $r2[i4];

        $r3 = interfaceinvoke $r1.<com.mkulesh.micromath.plots.FunctionIf: double[][] getZValues()>();

        $r2 = $r3[$i2];

        d8 = $r2[i4];

        $z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d8);

        if $z0 == 0 goto label04;

        d8 = #NaN;

     label04:
        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d8);

        if $z0 != 0 goto label06;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d6);

        if $z0 != 0 goto label05;

        $b5 = d8 cmpl d6;

        if $b5 <= 0 goto label07;

     label05:
        d6 = d8;

     label06:
        $r5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D[] vertex>;

        $r6 = new com.mkulesh.micromath.plots.views.Point3D;

        $d9 = d0 - d2;

        $d9 = $d9 * d1;

        $d9 = $d9 - 10.0;

        d3 = d3 - d5;

        d3 = d3 * d4;

        d3 = d3 - 10.0;

        specialinvoke $r6.<com.mkulesh.micromath.plots.views.Point3D: void <init>(double,double,double)>($d9, d3, d8);

        $r5[i3] = $r6;

        i3 = i3 + 1;

        i4 = i4 + 1;

        goto label03;

     label07:
        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d7);

        if $z0 != 0 goto label08;

        $b5 = d8 cmpg d7;

        if $b5 >= 0 goto label06;

     label08:
        d7 = d8;

        goto label06;

     label09:
        $i2 = $i2 + 1;

        goto label02;

     label10:
        $r7 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.SurfacePlotProjector projector>;

        $r2 = interfaceinvoke $r1.<com.mkulesh.micromath.plots.FunctionIf: double[] getMinMaxValues(int)>(2);

        d2 = $r2[0];

        $r2 = interfaceinvoke $r1.<com.mkulesh.micromath.plots.FunctionIf: double[] getMinMaxValues(int)>(2);

        d5 = $r2[1];

        virtualinvoke $r7.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void setZRange(double,double)>(d2, d5);

     label11:
        return;
    }
    public void setArea(double, double, double, double)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotView r0;
        double $d0, $d1, $d2, $d3;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotView;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $d2 := @parameter2: double;

        $d3 := @parameter3: double;

        virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void updateLabels()>();

        return;
    }
    public void setFunction(com.mkulesh.micromath.plots.FunctionIf)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotView r0;
        com.mkulesh.micromath.plots.FunctionIf $r1;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotView;

        $r1 := @parameter0: com.mkulesh.micromath.plots.FunctionIf;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.PlotView: void setFunction(com.mkulesh.micromath.plots.FunctionIf)>($r1);

        if $r1 != null goto label1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.Point3D[] vertex> = null;

     label1:
        return;
    }
    public void setScale(float)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotView r0;
        float $f0;
        android.graphics.Rect r1;
        int $i0, $i1, $i2, $i3;
        com.mkulesh.micromath.properties.AxisProperties $r2;
        com.mkulesh.micromath.plots.views.ColorMapView $r3;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotView;

        $f0 := @parameter0: float;

        virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void clearDrawingCache()>();

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.AxisProperties axisParameters>;

        $r2.<com.mkulesh.micromath.properties.AxisProperties: float scaleFactor> = $f0;

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.ColorMapView colorMapView>;

        if $r3 == null goto label1;

        r1 = new android.graphics.Rect;

        specialinvoke r1.<android.graphics.Rect: void <init>()>();

        specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: void getScaledPadding(android.graphics.Rect)>(r1);

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.ColorMapView colorMapView>;

        $i2 = r1.<android.graphics.Rect: int left>;

        $i3 = r1.<android.graphics.Rect: int top>;

        $i0 = r1.<android.graphics.Rect: int left>;

        $i1 = r1.<android.graphics.Rect: int bottom>;

        virtualinvoke $r3.<com.mkulesh.micromath.plots.views.ColorMapView: void setPadding(int,int,int,int)>($i2, $i3, $i0, $i1);

        $r3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.ColorMapView colorMapView>;

        $r2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.AxisProperties axisParameters>;

        $i0 = virtualinvoke $r2.<com.mkulesh.micromath.properties.AxisProperties: int getLabelTextSize()>();

        $f0 = (float) $i0;

        virtualinvoke $r3.<com.mkulesh.micromath.plots.views.ColorMapView: void setTextSize(int,float)>(0, $f0);

     label1:
        return;
    }
    public void updateLabels()
    {
        com.mkulesh.micromath.plots.views.SurfacePlotView r0;
        java.util.ArrayList $r1;
        boolean $z0;
        java.lang.Object $r2;
        com.mkulesh.micromath.plots.FunctionIf $r3;
        double[] $r4;
        com.mkulesh.micromath.properties.AxisProperties $r5;
        int $i0;
        com.mkulesh.micromath.plots.views.PlotView$Label[] $r6;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotView;

        $r1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: java.util.ArrayList functions>;

        if $r1 == null goto label1;

        $r1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: java.util.ArrayList functions>;

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: java.util.ArrayList functions>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r3 = (com.mkulesh.micromath.plots.FunctionIf) $r2;

        $r4 = interfaceinvoke $r3.<com.mkulesh.micromath.plots.FunctionIf: double[] getMinMaxValues(int)>(0);

        if $r4 == null goto label1;

        $r1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: java.util.ArrayList functions>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r3 = (com.mkulesh.micromath.plots.FunctionIf) $r2;

        $r4 = interfaceinvoke $r3.<com.mkulesh.micromath.plots.FunctionIf: double[] getMinMaxValues(int)>(1);

        if $r4 != null goto label2;

     label1:
        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] xLabels> = null;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] yLabels> = null;

        return;

     label2:
        $r5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.AxisProperties axisParameters>;

        $i0 = $r5.<com.mkulesh.micromath.properties.AxisProperties: int xLabelsNumber>;

        $r1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: java.util.ArrayList functions>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r3 = (com.mkulesh.micromath.plots.FunctionIf) $r2;

        $r4 = interfaceinvoke $r3.<com.mkulesh.micromath.plots.FunctionIf: double[] getMinMaxValues(int)>(0);

        $r6 = specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] makeLabels(int,int,double[])>(0, $i0, $r4);

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] xLabels> = $r6;

        $r5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.properties.AxisProperties axisParameters>;

        $i0 = $r5.<com.mkulesh.micromath.properties.AxisProperties: int yLabelsNumber>;

        $r1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: java.util.ArrayList functions>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r3 = (com.mkulesh.micromath.plots.FunctionIf) $r2;

        $r4 = interfaceinvoke $r3.<com.mkulesh.micromath.plots.FunctionIf: double[] getMinMaxValues(int)>(1);

        $r6 = specialinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] makeLabels(int,int,double[])>(1, $i0, $r4);

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] yLabels> = $r6;

        return;
    }
