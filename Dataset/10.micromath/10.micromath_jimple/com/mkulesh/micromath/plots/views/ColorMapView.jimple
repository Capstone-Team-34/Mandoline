com.mkulesh.micromath.plots.views.ColorMapView extends com.mkulesh.micromath.widgets.CustomTextView
private static final java.lang.String COLOR_BAR_WIDTH_PATTERN
private final com.mkulesh.micromath.plots.views.Palette coldHotPalette
private final com.mkulesh.micromath.properties.ColorMapProperties colorMapParameters
private final com.mkulesh.micromath.plots.views.Palette coolPalette
private final com.mkulesh.micromath.plots.views.Palette earthSkyPalette
private final com.mkulesh.micromath.plots.views.Palette firePalette
private com.mkulesh.micromath.plots.FunctionIf function
private final com.mkulesh.micromath.plots.views.Palette grayscalePalette
private final com.mkulesh.micromath.plots.views.Palette greenBluePalette
private boolean isHorizontal
private com.mkulesh.micromath.plots.views.ColorMapView$Label[] labels
private final double[] minMaxValues
private final android.graphics.Paint paint
private final com.mkulesh.micromath.plots.views.Palette rainbowPalette
private final android.graphics.Rect rect
private int significantDigits
private final android.graphics.Rect tmpRect
    public void <init>(android.content.Context)
    {
        com.mkulesh.micromath.plots.views.ColorMapView r0;
        android.content.Context $r1;
        com.mkulesh.micromath.properties.ColorMapProperties $r2;
        android.graphics.Paint $r3;
        android.graphics.Rect $r4;
        double[] $r5;
        com.mkulesh.micromath.plots.views.Palette $r6;
        com.mkulesh.micromath.plots.views.Palette$ColorType $r7;

        r0 := @this: com.mkulesh.micromath.plots.views.ColorMapView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.mkulesh.micromath.widgets.CustomTextView: void <init>(android.content.Context)>($r1);

        $r2 = new com.mkulesh.micromath.properties.ColorMapProperties;

        specialinvoke $r2.<com.mkulesh.micromath.properties.ColorMapProperties: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.properties.ColorMapProperties colorMapParameters> = $r2;

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.FunctionIf function> = null;

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.ColorMapView$Label[] labels> = null;

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: int significantDigits> = 6;

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Paint paint> = $r3;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Rect rect> = $r4;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Rect tmpRect> = $r4;

        $r5 = newarray (double)[2];

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: double[] minMaxValues> = $r5;

        $r6 = new com.mkulesh.micromath.plots.views.Palette;

        $r7 = <com.mkulesh.micromath.plots.views.Palette$ColorType: com.mkulesh.micromath.plots.views.Palette$ColorType RGB>;

        specialinvoke $r6.<com.mkulesh.micromath.plots.views.Palette: void <init>(com.mkulesh.micromath.plots.views.Palette$ColorType)>($r7);

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette coolPalette> = $r6;

        $r6 = new com.mkulesh.micromath.plots.views.Palette;

        $r7 = <com.mkulesh.micromath.plots.views.Palette$ColorType: com.mkulesh.micromath.plots.views.Palette$ColorType RGB>;

        specialinvoke $r6.<com.mkulesh.micromath.plots.views.Palette: void <init>(com.mkulesh.micromath.plots.views.Palette$ColorType)>($r7);

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette firePalette> = $r6;

        $r6 = new com.mkulesh.micromath.plots.views.Palette;

        $r7 = <com.mkulesh.micromath.plots.views.Palette$ColorType: com.mkulesh.micromath.plots.views.Palette$ColorType RGB>;

        specialinvoke $r6.<com.mkulesh.micromath.plots.views.Palette: void <init>(com.mkulesh.micromath.plots.views.Palette$ColorType)>($r7);

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette coldHotPalette> = $r6;

        $r6 = new com.mkulesh.micromath.plots.views.Palette;

        $r7 = <com.mkulesh.micromath.plots.views.Palette$ColorType: com.mkulesh.micromath.plots.views.Palette$ColorType HSV>;

        specialinvoke $r6.<com.mkulesh.micromath.plots.views.Palette: void <init>(com.mkulesh.micromath.plots.views.Palette$ColorType)>($r7);

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette rainbowPalette> = $r6;

        $r6 = new com.mkulesh.micromath.plots.views.Palette;

        $r7 = <com.mkulesh.micromath.plots.views.Palette$ColorType: com.mkulesh.micromath.plots.views.Palette$ColorType RGB>;

        specialinvoke $r6.<com.mkulesh.micromath.plots.views.Palette: void <init>(com.mkulesh.micromath.plots.views.Palette$ColorType)>($r7);

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette earthSkyPalette> = $r6;

        $r6 = new com.mkulesh.micromath.plots.views.Palette;

        $r7 = <com.mkulesh.micromath.plots.views.Palette$ColorType: com.mkulesh.micromath.plots.views.Palette$ColorType RGB>;

        specialinvoke $r6.<com.mkulesh.micromath.plots.views.Palette: void <init>(com.mkulesh.micromath.plots.views.Palette$ColorType)>($r7);

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette grayscalePalette> = $r6;

        $r6 = new com.mkulesh.micromath.plots.views.Palette;

        $r7 = <com.mkulesh.micromath.plots.views.Palette$ColorType: com.mkulesh.micromath.plots.views.Palette$ColorType RGB>;

        specialinvoke $r6.<com.mkulesh.micromath.plots.views.Palette: void <init>(com.mkulesh.micromath.plots.views.Palette$ColorType)>($r7);

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette greenBluePalette> = $r6;

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: boolean isHorizontal> = 0;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.mkulesh.micromath.plots.views.ColorMapView r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        com.mkulesh.micromath.properties.ColorMapProperties $r3;
        android.graphics.Paint $r4;
        android.graphics.Rect $r5;
        double[] $r6;
        com.mkulesh.micromath.plots.views.Palette $r7;
        com.mkulesh.micromath.plots.views.Palette$ColorType $r8;

        r0 := @this: com.mkulesh.micromath.plots.views.ColorMapView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.mkulesh.micromath.widgets.CustomTextView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r3 = new com.mkulesh.micromath.properties.ColorMapProperties;

        specialinvoke $r3.<com.mkulesh.micromath.properties.ColorMapProperties: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.properties.ColorMapProperties colorMapParameters> = $r3;

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.FunctionIf function> = null;

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.ColorMapView$Label[] labels> = null;

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: int significantDigits> = 6;

        $r4 = new android.graphics.Paint;

        specialinvoke $r4.<android.graphics.Paint: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Paint paint> = $r4;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Rect rect> = $r5;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Rect tmpRect> = $r5;

        $r6 = newarray (double)[2];

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: double[] minMaxValues> = $r6;

        $r7 = new com.mkulesh.micromath.plots.views.Palette;

        $r8 = <com.mkulesh.micromath.plots.views.Palette$ColorType: com.mkulesh.micromath.plots.views.Palette$ColorType RGB>;

        specialinvoke $r7.<com.mkulesh.micromath.plots.views.Palette: void <init>(com.mkulesh.micromath.plots.views.Palette$ColorType)>($r8);

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette coolPalette> = $r7;

        $r7 = new com.mkulesh.micromath.plots.views.Palette;

        $r8 = <com.mkulesh.micromath.plots.views.Palette$ColorType: com.mkulesh.micromath.plots.views.Palette$ColorType RGB>;

        specialinvoke $r7.<com.mkulesh.micromath.plots.views.Palette: void <init>(com.mkulesh.micromath.plots.views.Palette$ColorType)>($r8);

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette firePalette> = $r7;

        $r7 = new com.mkulesh.micromath.plots.views.Palette;

        $r8 = <com.mkulesh.micromath.plots.views.Palette$ColorType: com.mkulesh.micromath.plots.views.Palette$ColorType RGB>;

        specialinvoke $r7.<com.mkulesh.micromath.plots.views.Palette: void <init>(com.mkulesh.micromath.plots.views.Palette$ColorType)>($r8);

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette coldHotPalette> = $r7;

        $r7 = new com.mkulesh.micromath.plots.views.Palette;

        $r8 = <com.mkulesh.micromath.plots.views.Palette$ColorType: com.mkulesh.micromath.plots.views.Palette$ColorType HSV>;

        specialinvoke $r7.<com.mkulesh.micromath.plots.views.Palette: void <init>(com.mkulesh.micromath.plots.views.Palette$ColorType)>($r8);

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette rainbowPalette> = $r7;

        $r7 = new com.mkulesh.micromath.plots.views.Palette;

        $r8 = <com.mkulesh.micromath.plots.views.Palette$ColorType: com.mkulesh.micromath.plots.views.Palette$ColorType RGB>;

        specialinvoke $r7.<com.mkulesh.micromath.plots.views.Palette: void <init>(com.mkulesh.micromath.plots.views.Palette$ColorType)>($r8);

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette earthSkyPalette> = $r7;

        $r7 = new com.mkulesh.micromath.plots.views.Palette;

        $r8 = <com.mkulesh.micromath.plots.views.Palette$ColorType: com.mkulesh.micromath.plots.views.Palette$ColorType RGB>;

        specialinvoke $r7.<com.mkulesh.micromath.plots.views.Palette: void <init>(com.mkulesh.micromath.plots.views.Palette$ColorType)>($r8);

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette grayscalePalette> = $r7;

        $r7 = new com.mkulesh.micromath.plots.views.Palette;

        $r8 = <com.mkulesh.micromath.plots.views.Palette$ColorType: com.mkulesh.micromath.plots.views.Palette$ColorType RGB>;

        specialinvoke $r7.<com.mkulesh.micromath.plots.views.Palette: void <init>(com.mkulesh.micromath.plots.views.Palette$ColorType)>($r8);

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette greenBluePalette> = $r7;

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: boolean isHorizontal> = 0;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.ColorMapView: void prepare(android.util.AttributeSet)>($r2);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.mkulesh.micromath.plots.views.ColorMapView r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        com.mkulesh.micromath.properties.ColorMapProperties $r3;
        android.graphics.Paint $r4;
        android.graphics.Rect $r5;
        double[] $r6;
        com.mkulesh.micromath.plots.views.Palette $r7;
        com.mkulesh.micromath.plots.views.Palette$ColorType $r8;

        r0 := @this: com.mkulesh.micromath.plots.views.ColorMapView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<com.mkulesh.micromath.widgets.CustomTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r3 = new com.mkulesh.micromath.properties.ColorMapProperties;

        specialinvoke $r3.<com.mkulesh.micromath.properties.ColorMapProperties: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.properties.ColorMapProperties colorMapParameters> = $r3;

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.FunctionIf function> = null;

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.ColorMapView$Label[] labels> = null;

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: int significantDigits> = 6;

        $r4 = new android.graphics.Paint;

        specialinvoke $r4.<android.graphics.Paint: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Paint paint> = $r4;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Rect rect> = $r5;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Rect tmpRect> = $r5;

        $r6 = newarray (double)[2];

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: double[] minMaxValues> = $r6;

        $r7 = new com.mkulesh.micromath.plots.views.Palette;

        $r8 = <com.mkulesh.micromath.plots.views.Palette$ColorType: com.mkulesh.micromath.plots.views.Palette$ColorType RGB>;

        specialinvoke $r7.<com.mkulesh.micromath.plots.views.Palette: void <init>(com.mkulesh.micromath.plots.views.Palette$ColorType)>($r8);

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette coolPalette> = $r7;

        $r7 = new com.mkulesh.micromath.plots.views.Palette;

        $r8 = <com.mkulesh.micromath.plots.views.Palette$ColorType: com.mkulesh.micromath.plots.views.Palette$ColorType RGB>;

        specialinvoke $r7.<com.mkulesh.micromath.plots.views.Palette: void <init>(com.mkulesh.micromath.plots.views.Palette$ColorType)>($r8);

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette firePalette> = $r7;

        $r7 = new com.mkulesh.micromath.plots.views.Palette;

        $r8 = <com.mkulesh.micromath.plots.views.Palette$ColorType: com.mkulesh.micromath.plots.views.Palette$ColorType RGB>;

        specialinvoke $r7.<com.mkulesh.micromath.plots.views.Palette: void <init>(com.mkulesh.micromath.plots.views.Palette$ColorType)>($r8);

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette coldHotPalette> = $r7;

        $r7 = new com.mkulesh.micromath.plots.views.Palette;

        $r8 = <com.mkulesh.micromath.plots.views.Palette$ColorType: com.mkulesh.micromath.plots.views.Palette$ColorType HSV>;

        specialinvoke $r7.<com.mkulesh.micromath.plots.views.Palette: void <init>(com.mkulesh.micromath.plots.views.Palette$ColorType)>($r8);

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette rainbowPalette> = $r7;

        $r7 = new com.mkulesh.micromath.plots.views.Palette;

        $r8 = <com.mkulesh.micromath.plots.views.Palette$ColorType: com.mkulesh.micromath.plots.views.Palette$ColorType RGB>;

        specialinvoke $r7.<com.mkulesh.micromath.plots.views.Palette: void <init>(com.mkulesh.micromath.plots.views.Palette$ColorType)>($r8);

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette earthSkyPalette> = $r7;

        $r7 = new com.mkulesh.micromath.plots.views.Palette;

        $r8 = <com.mkulesh.micromath.plots.views.Palette$ColorType: com.mkulesh.micromath.plots.views.Palette$ColorType RGB>;

        specialinvoke $r7.<com.mkulesh.micromath.plots.views.Palette: void <init>(com.mkulesh.micromath.plots.views.Palette$ColorType)>($r8);

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette grayscalePalette> = $r7;

        $r7 = new com.mkulesh.micromath.plots.views.Palette;

        $r8 = <com.mkulesh.micromath.plots.views.Palette$ColorType: com.mkulesh.micromath.plots.views.Palette$ColorType RGB>;

        specialinvoke $r7.<com.mkulesh.micromath.plots.views.Palette: void <init>(com.mkulesh.micromath.plots.views.Palette$ColorType)>($r8);

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette greenBluePalette> = $r7;

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: boolean isHorizontal> = 0;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.ColorMapView: void prepare(android.util.AttributeSet)>($r2);

        return;
    }
    private void drawHorizontalBar(android.graphics.Canvas, android.graphics.Paint)
    {
        com.mkulesh.micromath.plots.views.ColorMapView r0;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r2;
        float $f0, $f1, $f2, $f3;
        int i0, i1, $i2;
        android.graphics.Rect $r3;
        double[] $r4;
        double $d0;

        r0 := @this: com.mkulesh.micromath.plots.views.ColorMapView;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.graphics.Paint;

        $r3 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Rect rect>;

        i1 = $r3.<android.graphics.Rect: int left>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Rect rect>;

        i0 = $r3.<android.graphics.Rect: int right>;

        $r4 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: double[] minMaxValues>;

        $d0 = (double) i1;

        $r4[0] = $d0;

        $r4 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: double[] minMaxValues>;

        $d0 = (double) i0;

        $r4[1] = $d0;

     label1:
        if i1 >= i0 goto label2;

        $d0 = (double) i1;

        $r4 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: double[] minMaxValues>;

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.ColorMapView: int getPaletteColor(double,double[],int)>($d0, $r4, 255);

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>($i2);

        $f1 = (float) i1;

        $r3 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Rect rect>;

        $i2 = $r3.<android.graphics.Rect: int top>;

        $f2 = (float) $i2;

        $f3 = (float) i1;

        $r3 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Rect rect>;

        $i2 = $r3.<android.graphics.Rect: int bottom>;

        $f0 = (float) $i2;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f1, $f2, $f3, $f0, $r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
    private void drawLabels(android.graphics.Canvas, android.graphics.Paint, double[])
    {
        com.mkulesh.micromath.plots.views.ColorMapView r0;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r2;
        double[] $r3;
        java.lang.String r4;
        int i0, i1, $i2, $i3;
        com.mkulesh.micromath.plots.views.ColorMapView$Label[] $r5;
        android.text.TextPaint $r6;
        android.graphics.Paint$Style $r7;
        float $f0, $f1;
        android.graphics.Rect $r8;
        double $d0, $d1, $d2, $d3;
        com.mkulesh.micromath.plots.views.ColorMapView$Label $r9;

        r0 := @this: com.mkulesh.micromath.plots.views.ColorMapView;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.graphics.Paint;

        $r3 := @parameter2: double[];

        $r5 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.ColorMapView$Label[] labels>;

        if $r5 != null goto label1;

        return;

     label1:
        $r6 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.text.TextPaint getPaint()>();

        i0 = virtualinvoke $r6.<android.text.TextPaint: int getColor()>();

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>(i0);

        $r7 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r7);

        $f0 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.ColorMapView: float getTextSize()>();

        virtualinvoke $r2.<android.graphics.Paint: void setTextSize(float)>($f0);

        r4 = "___";

        i0 = virtualinvoke r4.<java.lang.String: int length()>();

        $r8 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Rect tmpRect>;

        virtualinvoke $r2.<android.graphics.Paint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)>("___", 0, i0, $r8);

        $r8 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Rect rect>;

        i0 = $r8.<android.graphics.Rect: int left>;

        $r8 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Rect tmpRect>;

        $i2 = virtualinvoke $r8.<android.graphics.Rect: int width()>();

        i0 = i0 + $i2;

        i0 = i0 + 1;

        $d0 = $r3[1];

        $d1 = $r3[0];

        $d0 = $d0 - $d1;

        $d0 = staticinvoke <java.lang.Math: double abs(double)>($d0);

        $i2 = 0;

     label2:
        $r5 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.ColorMapView$Label[] labels>;

        i1 = lengthof $r5;

        if $i2 >= i1 goto label3;

        $r8 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Rect rect>;

        i1 = $r8.<android.graphics.Rect: int bottom>;

        $r8 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Rect rect>;

        $i3 = virtualinvoke $r8.<android.graphics.Rect: int height()>();

        $d1 = (double) $i3;

        $r5 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.ColorMapView$Label[] labels>;

        $r9 = $r5[$i2];

        $d2 = $r9.<com.mkulesh.micromath.plots.views.ColorMapView$Label: double y>;

        $d3 = $r3[0];

        $d2 = $d2 - $d3;

        $d1 = $d1 * $d2;

        $d1 = $d1 / $d0;

        $i3 = (int) $d1;

        i1 = i1 - $i3;

        $r5 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.ColorMapView$Label[] labels>;

        $r9 = $r5[$i2];

        r4 = $r9.<com.mkulesh.micromath.plots.views.ColorMapView$Label: java.lang.String name>;

        $i3 = virtualinvoke r4.<java.lang.String: int length()>();

        $r8 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Rect tmpRect>;

        virtualinvoke $r2.<android.graphics.Paint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)>(r4, 0, $i3, $r8);

        $r8 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Rect tmpRect>;

        $i3 = virtualinvoke $r8.<android.graphics.Rect: int height()>();

        $d1 = (double) $i3;

        $d2 = (double) $i2;

        $d1 = $d1 * $d2;

        $r5 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.ColorMapView$Label[] labels>;

        $i3 = lengthof $r5;

        $i3 = $i3 + -1;

        $d2 = (double) $i3;

        $d1 = $d1 / $d2;

        $i3 = (int) $d1;

        i1 = i1 + $i3;

        $r8 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Rect tmpRect>;

        virtualinvoke $r8.<android.graphics.Rect: void offset(int,int)>(i0, i1);

        $r8 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Rect tmpRect>;

        i1 = $r8.<android.graphics.Rect: int left>;

        $f0 = (float) i1;

        $r8 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Rect tmpRect>;

        i1 = $r8.<android.graphics.Rect: int bottom>;

        $f1 = (float) i1;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>(r4, $f0, $f1, $r2);

        $i2 = $i2 + 1;

        goto label2;

     label3:
        return;
    }
    private void drawVerticalBar(android.graphics.Canvas, android.graphics.Paint)
    {
        com.mkulesh.micromath.plots.views.ColorMapView r0;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r2;
        int i0, $i1, $i2, $i3, $i4, $i5;
        float $f0, $f1, $f2, $f3;
        java.lang.String $r3;
        android.graphics.Rect $r4;
        double[] $r5;
        double $d0;

        r0 := @this: com.mkulesh.micromath.plots.views.ColorMapView;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.graphics.Paint;

        $f0 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.ColorMapView: float getTextSize()>();

        virtualinvoke $r2.<android.graphics.Paint: void setTextSize(float)>($f0);

        $r3 = "___";

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        $r4 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Rect tmpRect>;

        virtualinvoke $r2.<android.graphics.Paint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)>("___", 0, $i1, $r4);

        $r4 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Rect rect>;

        $i1 = $r4.<android.graphics.Rect: int top>;

        $r4 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Rect rect>;

        $i2 = $r4.<android.graphics.Rect: int bottom>;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        $r4 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Rect rect>;

        $i2 = $r4.<android.graphics.Rect: int top>;

        $r4 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Rect rect>;

        $i3 = $r4.<android.graphics.Rect: int bottom>;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i3);

        $r5 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: double[] minMaxValues>;

        $d0 = (double) $i1;

        $r5[0] = $d0;

        $r5 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: double[] minMaxValues>;

        $d0 = (double) $i2;

        $r5[1] = $d0;

        $i3 = $i1;

     label1:
        if $i3 >= $i2 goto label2;

        $d0 = (double) $i3;

        $r5 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: double[] minMaxValues>;

        i0 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.ColorMapView: int getPaletteColor(double,double[],int)>($d0, $r5, 255);

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>(i0);

        i0 = $i3 - $i1;

        i0 = $i2 - i0;

        $r4 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Rect rect>;

        $i4 = $r4.<android.graphics.Rect: int left>;

        $f0 = (float) $i4;

        $f1 = (float) i0;

        $r4 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Rect rect>;

        $i4 = $r4.<android.graphics.Rect: int left>;

        $r4 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Rect tmpRect>;

        $i5 = virtualinvoke $r4.<android.graphics.Rect: int width()>();

        $i4 = $i4 + $i5;

        $i4 = $i4 + -1;

        $f2 = (float) $i4;

        $f3 = (float) i0;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $f3, $r2);

        $i3 = $i3 + 1;

        goto label1;

     label2:
        return;
    }
    private com.mkulesh.micromath.plots.views.ColorMapView$Label[] makeLabels(int, double[])
    {
        com.mkulesh.micromath.plots.views.ColorMapView r0;
        int $i0, $i1;
        double[] $r1;
        double d0, d1, $d2;
        java.lang.String $r2;
        byte $b2;
        java.lang.String[] $r3;
        com.mkulesh.micromath.plots.views.ColorMapView$Label[] r4;
        com.mkulesh.micromath.plots.views.ColorMapView$Label $r5;

        r0 := @this: com.mkulesh.micromath.plots.views.ColorMapView;

        $i0 := @parameter0: int;

        $r1 := @parameter1: double[];

        d1 = $r1[0];

        d0 = $r1[1];

        d0 = d0 - d1;

        d0 = staticinvoke <java.lang.Math: double abs(double)>(d0);

        $i1 = $i0 + 1;

        $d2 = (double) $i1;

        d0 = d0 / $d2;

        $b2 = d0 cmpl 0.0;

        if $b2 != 0 goto label1;

        return null;

     label1:
        $i0 = $i0 + 2;

        $r1 = newarray (double)[$i0];

        $i0 = 0;

     label2:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label3;

        $d2 = (double) $i0;

        $d2 = $d2 * d0;

        $d2 = $d2 + d1;

        $r1[$i0] = $d2;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        $i0 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: int significantDigits>;

        $r3 = staticinvoke <com.mkulesh.micromath.utils.ViewUtils: java.lang.String[] catValues(double[],int)>($r1, $i0);

        $i0 = lengthof $r1;

        r4 = newarray (com.mkulesh.micromath.plots.views.ColorMapView$Label)[$i0];

        $i0 = 0;

     label4:
        $i1 = lengthof r4;

        if $i0 >= $i1 goto label5;

        $r5 = new com.mkulesh.micromath.plots.views.ColorMapView$Label;

        d1 = $r1[$i0];

        $r2 = $r3[$i0];

        specialinvoke $r5.<com.mkulesh.micromath.plots.views.ColorMapView$Label: void <init>(com.mkulesh.micromath.plots.views.ColorMapView,double,java.lang.String)>(r0, d1, $r2);

        r4[$i0] = $r5;

        $i0 = $i0 + 1;

        goto label4;

     label5:
        return r4;
    }
    private void prepare(android.util.AttributeSet)
    {
        com.mkulesh.micromath.plots.views.ColorMapView r0;
        android.util.AttributeSet $r1;
        android.content.Context $r2;
        int[] $r3;
        android.content.res.TypedArray $r4;
        boolean $z0;
        com.mkulesh.micromath.properties.ColorMapProperties $r5;
        java.lang.String $r6;
        com.mkulesh.micromath.properties.ColorMapProperties$ColorMap $r7;
        java.lang.Exception $r8;

        r0 := @this: com.mkulesh.micromath.plots.views.ColorMapView;

        $r1 := @parameter0: android.util.AttributeSet;

        virtualinvoke r0.<com.mkulesh.micromath.plots.views.ColorMapView: void setText(java.lang.CharSequence)>("___");

        if $r1 == null goto label3;

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.content.Context getContext()>();

        $r3 = <com.mkulesh.micromath.plus.R$styleable: int[] ColorMapViewExtension>;

        $r4 = virtualinvoke $r2.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r1, $r3, 0, 0);

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, 0);

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: boolean isHorizontal> = $z0;

     label1:
        $r5 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.properties.ColorMapProperties colorMapParameters>;

        $r6 = virtualinvoke $r4.<android.content.res.TypedArray: java.lang.String getString(int)>(1);

        $r7 = staticinvoke <com.mkulesh.micromath.properties.ColorMapProperties$ColorMap: com.mkulesh.micromath.properties.ColorMapProperties$ColorMap valueOf(java.lang.String)>($r6);

        $r5.<com.mkulesh.micromath.properties.ColorMapProperties: com.mkulesh.micromath.properties.ColorMapProperties$ColorMap colorMap> = $r7;

     label2:
        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

     label3:
        specialinvoke r0.<com.mkulesh.micromath.plots.views.ColorMapView: void preparePalette()>();

        return;

     label4:
        $r8 := @caughtexception;

        goto label2;

        catch java.lang.Exception from label1 to label2 with label4;
    }
    private void preparePalette()
    {
        com.mkulesh.micromath.plots.views.ColorMapView r0;
        com.mkulesh.micromath.plots.views.Palette $r1;

        r0 := @this: com.mkulesh.micromath.plots.views.ColorMapView;

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette coolPalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: int split(double)>(0.17);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette coolPalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: int split(double)>(0.83);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette coolPalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: void setDivisionPointColorComponents(int,float,float,float)>(0, 1.0F, 1.0F, 1.0F);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette coolPalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: void setDivisionPointColorComponents(int,float,float,float)>(1, 0.0F, 1.0F, 1.0F);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette coolPalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: void setDivisionPointColorComponents(int,float,float,float)>(2, 0.0F, 0.0F, 1.0F);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette coolPalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: void setDivisionPointColorComponents(int,float,float,float)>(3, 0.0F, 0.0F, 0.0F);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette firePalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: int split(double)>(0.17);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette firePalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: int split(double)>(0.83);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette firePalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: void setDivisionPointColorComponents(int,float,float,float)>(0, 1.0F, 1.0F, 1.0F);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette firePalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: void setDivisionPointColorComponents(int,float,float,float)>(1, 1.0F, 1.0F, 0.0F);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette firePalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: void setDivisionPointColorComponents(int,float,float,float)>(2, 1.0F, 0.0F, 0.0F);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette firePalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: void setDivisionPointColorComponents(int,float,float,float)>(3, 0.0F, 0.0F, 0.0F);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette coldHotPalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: int split(double)>(0.08);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette coldHotPalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: int split(double)>(0.38);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette coldHotPalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: int split(double)>(0.5);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette coldHotPalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: int split(double)>(0.62);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette coldHotPalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: int split(double)>(0.92);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette coldHotPalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: void setDivisionPointColorComponents(int,float,float,float)>(0, 0.8F, 1.0F, 1.0F);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette coldHotPalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: void setDivisionPointColorComponents(int,float,float,float)>(1, 0.0F, 1.0F, 1.0F);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette coldHotPalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: void setDivisionPointColorComponents(int,float,float,float)>(2, 0.0F, 0.0F, 1.0F);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette coldHotPalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: void setDivisionPointColorComponents(int,float,float,float)>(3, 0.0F, 0.0F, 0.0F);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette coldHotPalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: void setDivisionPointColorComponents(int,float,float,float)>(4, 1.0F, 0.0F, 0.0F);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette coldHotPalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: void setDivisionPointColorComponents(int,float,float,float)>(5, 1.0F, 1.0F, 0.0F);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette coldHotPalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: void setDivisionPointColorComponents(int,float,float,float)>(6, 1.0F, 1.0F, 0.8F);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette earthSkyPalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: int split(double)>(0.15);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette earthSkyPalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: int split(double)>(0.33);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette earthSkyPalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: int split(double)>(0.67);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette earthSkyPalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: int split(double)>(0.85);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette earthSkyPalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: void setDivisionPointColorComponents(int,float,float,float)>(0, 1.0F, 1.0F, 0.0F);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette earthSkyPalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: void setDivisionPointColorComponents(int,float,float,float)>(1, 1.0F, 0.8F, 0.0F);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette earthSkyPalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: void setDivisionPointColorComponents(int,float,float,float)>(2, 0.53F, 0.12F, 0.075F);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette earthSkyPalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: void setDivisionPointColorComponents(int,float,float,float)>(3, 0.0F, 0.0F, 0.6F);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette earthSkyPalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: void setDivisionPointColorComponents(int,float,float,float)>(4, 0.0F, 0.4F, 1.0F);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette earthSkyPalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: void setDivisionPointColorComponents(int,float,float,float)>(5, 0.0F, 1.0F, 1.0F);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette greenBluePalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: int split(double)>(0.23);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette greenBluePalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: int split(double)>(0.5);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette greenBluePalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: int split(double)>(0.72);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette greenBluePalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: void setDivisionPointColorComponents(int,float,float,float)>(0, 0.0F, 1.0F, 0.0F);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette greenBluePalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: void setDivisionPointColorComponents(int,float,float,float)>(1, 1.0F, 1.0F, 0.0F);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette greenBluePalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: void setDivisionPointColorComponents(int,float,float,float)>(2, 1.0F, 0.5F, 0.5F);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette greenBluePalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: void setDivisionPointColorComponents(int,float,float,float)>(3, 1.0F, 0.0F, 1.0F);

        $r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette greenBluePalette>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.Palette: void setDivisionPointColorComponents(int,float,float,float)>(4, 0.0F, 0.0F, 1.0F);

        return;
    }
    public com.mkulesh.micromath.properties.ColorMapProperties getColorMapParameters()
    {
        com.mkulesh.micromath.plots.views.ColorMapView r0;
        com.mkulesh.micromath.properties.ColorMapProperties r1;

        r0 := @this: com.mkulesh.micromath.plots.views.ColorMapView;

        r1 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.properties.ColorMapProperties colorMapParameters>;

        return r1;
    }
    public int getPaletteColor(double, double[], int)
    {
        com.mkulesh.micromath.plots.views.ColorMapView r0;
        double $d0, $d1, $d2;
        double[] $r1;
        int $i0, $i1;
        int[] $r2;
        com.mkulesh.micromath.properties.ColorMapProperties $r3;
        com.mkulesh.micromath.properties.ColorMapProperties$ColorMap $r4;
        com.mkulesh.micromath.plots.views.Palette $r5;

        r0 := @this: com.mkulesh.micromath.plots.views.ColorMapView;

        $d0 := @parameter0: double;

        $r1 := @parameter1: double[];

        $i0 := @parameter2: int;

        $d2 = $r1[1];

        $d1 = $r1[0];

        $d1 = $d2 - $d1;

        $d1 = staticinvoke <java.lang.Math: double abs(double)>($d1);

        $r2 = <com.mkulesh.micromath.plots.views.ColorMapView$1: int[] $SwitchMap$com$mkulesh$micromath$properties$ColorMapProperties$ColorMap>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.properties.ColorMapProperties colorMapParameters>;

        $r4 = $r3.<com.mkulesh.micromath.properties.ColorMapProperties: com.mkulesh.micromath.properties.ColorMapProperties$ColorMap colorMap>;

        $i1 = virtualinvoke $r4.<com.mkulesh.micromath.properties.ColorMapProperties$ColorMap: int ordinal()>();

        $i1 = $r2[$i1];

        lookupswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label7;
            case 7: goto label8;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        $r5 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette coolPalette>;

        $d2 = $r1[0];

        $d0 = $d0 - $d2;

        $d0 = $d0 / $d1;

        $i0 = virtualinvoke $r5.<com.mkulesh.micromath.plots.views.Palette: int getColor(double,int)>($d0, $i0);

        return $i0;

     label3:
        $r5 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette firePalette>;

        $d2 = $r1[0];

        $d0 = $d0 - $d2;

        $d0 = $d0 / $d1;

        $i0 = virtualinvoke $r5.<com.mkulesh.micromath.plots.views.Palette: int getColor(double,int)>($d0, $i0);

        return $i0;

     label4:
        $r5 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette coldHotPalette>;

        $d2 = $r1[0];

        $d0 = $d0 - $d2;

        $d0 = $d0 / $d1;

        $i0 = virtualinvoke $r5.<com.mkulesh.micromath.plots.views.Palette: int getColor(double,int)>($d0, $i0);

        return $i0;

     label5:
        $r5 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette rainbowPalette>;

        $d2 = $r1[0];

        $d0 = $d0 - $d2;

        $d0 = $d0 / $d1;

        $i0 = virtualinvoke $r5.<com.mkulesh.micromath.plots.views.Palette: int getColor(double,int)>($d0, $i0);

        return $i0;

     label6:
        $r5 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette earthSkyPalette>;

        $d2 = $r1[0];

        $d0 = $d0 - $d2;

        $d0 = $d0 / $d1;

        $i0 = virtualinvoke $r5.<com.mkulesh.micromath.plots.views.Palette: int getColor(double,int)>($d0, $i0);

        return $i0;

     label7:
        $r5 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette greenBluePalette>;

        $d2 = $r1[0];

        $d0 = $d0 - $d2;

        $d0 = $d0 / $d1;

        $i0 = virtualinvoke $r5.<com.mkulesh.micromath.plots.views.Palette: int getColor(double,int)>($d0, $i0);

        return $i0;

     label8:
        $r5 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.Palette grayscalePalette>;

        $d2 = $r1[0];

        $d0 = $d0 - $d2;

        $d0 = $d0 / $d1;

        $i0 = virtualinvoke $r5.<com.mkulesh.micromath.plots.views.Palette: int getColor(double,int)>($d0, $i0);

        return $i0;
    }
    protected void onDraw(android.graphics.Canvas)
    {
        com.mkulesh.micromath.plots.views.ColorMapView r0;
        android.graphics.Canvas $r1;
        android.graphics.Rect $r2;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.Paint $r3;
        android.graphics.Paint$Style $r4;
        boolean $z0;
        com.mkulesh.micromath.plots.FunctionIf $r5;
        double[] $r6;

        r0 := @this: com.mkulesh.micromath.plots.views.ColorMapView;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Rect rect>;

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.ColorMapView: int getPaddingLeft()>();

        $i1 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.ColorMapView: int getPaddingTop()>();

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.ColorMapView: int getRight()>();

        $i3 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.ColorMapView: int getLeft()>();

        $i2 = $i2 - $i3;

        $i3 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.ColorMapView: int getPaddingRight()>();

        $i2 = $i2 - $i3;

        $i3 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.ColorMapView: int getBottom()>();

        $i4 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.ColorMapView: int getTop()>();

        $i3 = $i3 - $i4;

        $i4 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.ColorMapView: int getPaddingBottom()>();

        $i3 = $i3 - $i4;

        virtualinvoke $r2.<android.graphics.Rect: void set(int,int,int,int)>($i0, $i1, $i2, $i3);

        $r3 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Paint paint>;

        $r4 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r4);

        $r3 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Paint paint>;

        virtualinvoke $r3.<android.graphics.Paint: void setStrokeWidth(float)>(0.0F);

        $r3 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Paint paint>;

        virtualinvoke $r3.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $z0 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: boolean isHorizontal>;

        if $z0 == 0 goto label2;

        $r3 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Paint paint>;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.ColorMapView: void drawHorizontalBar(android.graphics.Canvas,android.graphics.Paint)>($r1, $r3);

     label1:
        $r5 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.FunctionIf function>;

        if $r5 == null goto label3;

        $r5 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.FunctionIf function>;

        $r6 = interfaceinvoke $r5.<com.mkulesh.micromath.plots.FunctionIf: double[] getMinMaxValues(int)>(2);

        if $r6 == null goto label3;

        $r3 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Paint paint>;

        $r5 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.FunctionIf function>;

        $r6 = interfaceinvoke $r5.<com.mkulesh.micromath.plots.FunctionIf: double[] getMinMaxValues(int)>(2);

        specialinvoke r0.<com.mkulesh.micromath.plots.views.ColorMapView: void drawLabels(android.graphics.Canvas,android.graphics.Paint,double[])>($r1, $r3, $r6);

        return;

     label2:
        $r3 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: android.graphics.Paint paint>;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.ColorMapView: void drawVerticalBar(android.graphics.Canvas,android.graphics.Paint)>($r1, $r3);

        goto label1;

     label3:
        return;
    }
    public void prepare(android.support.v7.app.AppCompatActivity, com.mkulesh.micromath.widgets.FormulaChangeIf)
    {
        com.mkulesh.micromath.plots.views.ColorMapView r0;
        android.support.v7.app.AppCompatActivity $r1;
        com.mkulesh.micromath.widgets.FormulaChangeIf $r2;
        com.mkulesh.micromath.widgets.CustomTextView$SymbolType $r3;

        r0 := @this: com.mkulesh.micromath.plots.views.ColorMapView;

        $r1 := @parameter0: android.support.v7.app.AppCompatActivity;

        $r2 := @parameter1: com.mkulesh.micromath.widgets.FormulaChangeIf;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.ColorMapView: void prepare(android.util.AttributeSet)>(null);

        $r3 = <com.mkulesh.micromath.widgets.CustomTextView$SymbolType: com.mkulesh.micromath.widgets.CustomTextView$SymbolType EMPTY>;

        specialinvoke r0.<com.mkulesh.micromath.widgets.CustomTextView: void prepare(com.mkulesh.micromath.widgets.CustomTextView$SymbolType,android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.FormulaChangeIf)>($r3, $r1, $r2);

        return;
    }
    public void setFunction(com.mkulesh.micromath.plots.FunctionIf)
    {
        com.mkulesh.micromath.plots.views.ColorMapView r0;
        com.mkulesh.micromath.plots.FunctionIf $r1;
        com.mkulesh.micromath.plots.views.ColorMapView$Label r2;
        com.mkulesh.micromath.plots.FunctionIf$Type $r3, $r4;
        double[] $r5;
        com.mkulesh.micromath.properties.ColorMapProperties $r6;
        int $i0, $i1, $i2, $i3;
        com.mkulesh.micromath.plots.views.ColorMapView$Label[] $r7;
        java.lang.String r8, $r9;
        java.lang.StringBuilder $r10, $r11;

        r0 := @this: com.mkulesh.micromath.plots.views.ColorMapView;

        $r1 := @parameter0: com.mkulesh.micromath.plots.FunctionIf;

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.FunctionIf function> = $r1;

        if $r1 == null goto label4;

        $r3 = interfaceinvoke $r1.<com.mkulesh.micromath.plots.FunctionIf: com.mkulesh.micromath.plots.FunctionIf$Type getType()>();

        $r4 = <com.mkulesh.micromath.plots.FunctionIf$Type: com.mkulesh.micromath.plots.FunctionIf$Type FUNCTION_3D>;

        if $r3 != $r4 goto label4;

        $r5 = interfaceinvoke $r1.<com.mkulesh.micromath.plots.FunctionIf: double[] getMinMaxValues(int)>(2);

        if $r5 == null goto label4;

        $r6 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.properties.ColorMapProperties colorMapParameters>;

        $i0 = $r6.<com.mkulesh.micromath.properties.ColorMapProperties: int zLabelsNumber>;

        $r5 = interfaceinvoke $r1.<com.mkulesh.micromath.plots.FunctionIf: double[] getMinMaxValues(int)>(2);

        $r7 = specialinvoke r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.ColorMapView$Label[] makeLabels(int,double[])>($i0, $r5);

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.ColorMapView$Label[] labels> = $r7;

     label1:
        r8 = null;

        $r7 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.ColorMapView$Label[] labels>;

        if $r7 == null goto label6;

        $r7 = r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.ColorMapView$Label[] labels>;

        $i0 = lengthof $r7;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label6;

        r2 = $r7[$i1];

        if r8 != null goto label5;

        r8 = r2.<com.mkulesh.micromath.plots.views.ColorMapView$Label: java.lang.String name>;

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        r0.<com.mkulesh.micromath.plots.views.ColorMapView: com.mkulesh.micromath.plots.views.ColorMapView$Label[] labels> = null;

        goto label1;

     label5:
        $r9 = r2.<com.mkulesh.micromath.plots.views.ColorMapView$Label: java.lang.String name>;

        $i2 = virtualinvoke $r9.<java.lang.String: int length()>();

        $i3 = virtualinvoke r8.<java.lang.String: int length()>();

        if $i2 <= $i3 goto label3;

        r8 = r2.<com.mkulesh.micromath.plots.views.ColorMapView$Label: java.lang.String name>;

        goto label3;

     label6:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("___");

        if r8 == null goto label8;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        r8 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label7:
        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        r8 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.mkulesh.micromath.plots.views.ColorMapView: void setText(java.lang.CharSequence)>(r8);

        return;

     label8:
        r8 = "";

        goto label7;
    }
    public void setSignificantDigits(int)
    {
        com.mkulesh.micromath.plots.views.ColorMapView r0;
        int $i0;

        r0 := @this: com.mkulesh.micromath.plots.views.ColorMapView;

        $i0 := @parameter0: int;

        r0.<com.mkulesh.micromath.plots.views.ColorMapView: int significantDigits> = $i0;

        return;
    }
