com.mkulesh.micromath.plots.views.SurfacePlotProjector extends java.lang.Object
private final double DEGTORAD
private double _2D_scale
private int _2D_trans_x
private int _2D_trans_y
private int center_x
private int center_y
private double cos_elevation
private double cos_rotation
private double distance
private double elevation
private double factor
private double rotation
private double scale_x
private double scale_y
private double scale_z
private double sin_elevation
private double sin_rotation
private double sx_cos
private double sx_sin
private double sy_cos
private double sy_sin
private double sz_cos
private double sz_sin
private double tmpValue
private int trans_x
private int trans_y
private int x1
private int x2
private int y1
private int y2
public double zfactor
public double zmax
public double zmin
    void <init>()
    {
        com.mkulesh.micromath.plots.views.SurfacePlotProjector r0;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double DEGTORAD> = 0.017453292519943295;

        virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void setScaling(double)>(1.0);

        virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void setRotationAngle(double)>(0.0);

        virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void setElevationAngle(double)>(0.0);

        virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void setDistance(double)>(10.0);

        virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void set2DScaling(double)>(1.0);

        virtualinvoke r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: void set2DTranslation(int,int)>(0, 0);

        return;
    }
    public double get2DScaling()
    {
        com.mkulesh.micromath.plots.views.SurfacePlotProjector r0;
        double d0;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double _2D_scale>;

        return d0;
    }
    public int get2D_xTranslation()
    {
        com.mkulesh.micromath.plots.views.SurfacePlotProjector r0;
        int i0;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        i0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int _2D_trans_x>;

        return i0;
    }
    public int get2D_yTranslation()
    {
        com.mkulesh.micromath.plots.views.SurfacePlotProjector r0;
        int i0;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        i0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int _2D_trans_y>;

        return i0;
    }
    public double getCosElevationAngle()
    {
        com.mkulesh.micromath.plots.views.SurfacePlotProjector r0;
        double d0;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double cos_elevation>;

        return d0;
    }
    public double getCosRotationAngle()
    {
        com.mkulesh.micromath.plots.views.SurfacePlotProjector r0;
        double d0;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double cos_rotation>;

        return d0;
    }
    public double getDistance()
    {
        com.mkulesh.micromath.plots.views.SurfacePlotProjector r0;
        double d0;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double distance>;

        return d0;
    }
    public double getElevationAngle()
    {
        com.mkulesh.micromath.plots.views.SurfacePlotProjector r0;
        double d0;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double elevation>;

        return d0;
    }
    public double getRotationAngle()
    {
        com.mkulesh.micromath.plots.views.SurfacePlotProjector r0;
        double d0;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double rotation>;

        return d0;
    }
    public double getSinElevationAngle()
    {
        com.mkulesh.micromath.plots.views.SurfacePlotProjector r0;
        double d0;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sin_elevation>;

        return d0;
    }
    public double getSinRotationAngle()
    {
        com.mkulesh.micromath.plots.views.SurfacePlotProjector r0;
        double d0;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sin_rotation>;

        return d0;
    }
    public double getXScaling()
    {
        com.mkulesh.micromath.plots.views.SurfacePlotProjector r0;
        double d0;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_x>;

        return d0;
    }
    public double getYScaling()
    {
        com.mkulesh.micromath.plots.views.SurfacePlotProjector r0;
        double d0;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_y>;

        return d0;
    }
    public double getZScaling()
    {
        com.mkulesh.micromath.plots.views.SurfacePlotProjector r0;
        double d0;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_z>;

        return d0;
    }
    public void project(android.graphics.Point, double, double, double)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotProjector r0;
        android.graphics.Point $r1;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        float $f0;
        int $i0, $i1;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        $r1 := @parameter0: android.graphics.Point;

        $d1 := @parameter1: double;

        $d2 := @parameter2: double;

        $d0 := @parameter3: double;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double tmpValue> = $d1;

        $d3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sx_cos>;

        $d1 = $d3 * $d1;

        $d3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sy_sin>;

        $d3 = $d3 * $d2;

        $d1 = $d1 + $d3;

        $d3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double tmpValue>;

        $d4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sx_sin>;

        $d3 = $d3 * $d4;

        $d4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sy_cos>;

        $d2 = $d4 * $d2;

        $d2 = $d3 + $d2;

        $d3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double factor>;

        $d4 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double cos_elevation>;

        $d4 = $d4 * $d2;

        $d5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sz_sin>;

        $d5 = $d5 * $d0;

        $d4 = $d4 - $d5;

        $d5 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double distance>;

        $d4 = $d4 + $d5;

        $d3 = $d3 / $d4;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double tmpValue> = $d3;

        $d3 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double tmpValue>;

        $d1 = $d3 * $d1;

        $f0 = (float) $d1;

        $i0 = staticinvoke <org.apache.commons.math3.util.FastMath: int round(float)>($f0);

        $i1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int trans_x>;

        $i0 = $i0 + $i1;

        $r1.<android.graphics.Point: int x> = $i0;

        $d1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sin_elevation>;

        $d1 = $d1 * $d2;

        $d2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sz_cos>;

        $d2 = $d2 * $d0;

        $d1 = $d1 + $d2;

        $d2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double tmpValue>;

        $d2 = neg $d2;

        $d1 = $d1 * $d2;

        $f0 = (float) $d1;

        $i0 = staticinvoke <org.apache.commons.math3.util.FastMath: int round(float)>($f0);

        $i1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int trans_y>;

        $i0 = $i0 + $i1;

        $r1.<android.graphics.Point: int y> = $i0;

        return;
    }
    public void set2DScaling(double)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotProjector r0;
        double $d0, $d1;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        $d0 := @parameter0: double;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double _2D_scale> = $d0;

        $d1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double distance>;

        $d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double _2D_scale>;

        $d0 = $d1 * $d0;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double factor> = $d0;

        return;
    }
    public void set2DTranslation(int, int)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotProjector r0;
        int $i0, $i1;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int _2D_trans_x> = $i0;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int _2D_trans_y> = $i1;

        $i0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int center_x>;

        $i1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int _2D_trans_x>;

        $i0 = $i0 + $i1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int trans_x> = $i0;

        $i0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int center_y>;

        $i1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int _2D_trans_y>;

        $i0 = $i0 + $i1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int trans_y> = $i0;

        return;
    }
    public void set2D_xTranslation(int)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotProjector r0;
        int $i0, $i1;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        $i0 := @parameter0: int;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int _2D_trans_x> = $i0;

        $i1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int center_x>;

        $i0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int _2D_trans_x>;

        $i0 = $i1 + $i0;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int trans_x> = $i0;

        return;
    }
    public void set2D_yTranslation(int)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotProjector r0;
        int $i0, $i1;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        $i0 := @parameter0: int;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int _2D_trans_y> = $i0;

        $i1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int center_y>;

        $i0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int _2D_trans_y>;

        $i0 = $i1 + $i0;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int trans_y> = $i0;

        return;
    }
    public void setDistance(double)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotProjector r0;
        double $d0, $d1;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        $d0 := @parameter0: double;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double distance> = $d0;

        $d1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double distance>;

        $d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double _2D_scale>;

        $d0 = $d1 * $d0;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double factor> = $d0;

        return;
    }
    public void setElevationAngle(double)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotProjector r0;
        double $d0, $d1;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        $d0 := @parameter0: double;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double elevation> = $d0;

        $d1 = $d0 * 0.017453292519943295;

        $d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double sin(double)>($d1);

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sin_elevation> = $d1;

        $d0 = $d0 * 0.017453292519943295;

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double cos(double)>($d0);

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double cos_elevation> = $d0;

        $d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_z>;

        $d1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double cos_elevation>;

        $d0 = $d0 * $d1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sz_cos> = $d0;

        $d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_z>;

        $d1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sin_elevation>;

        $d0 = $d0 * $d1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sz_sin> = $d0;

        return;
    }
    public void setProjectionArea(int, int)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotProjector r0;
        int $i0, $i1, $i2;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int x1> = 0;

        $i2 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int x1>;

        $i0 = $i2 + $i0;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int x2> = $i0;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int y1> = 0;

        $i0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int y1>;

        $i0 = $i0 + $i1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int y2> = $i0;

        $i0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int x1>;

        $i1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int x2>;

        $i0 = $i0 + $i1;

        $i0 = $i0 / 2;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int center_x> = $i0;

        $i0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int y1>;

        $i1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int y2>;

        $i0 = $i0 + $i1;

        $i0 = $i0 / 2;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int center_y> = $i0;

        $i0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int center_x>;

        $i1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int _2D_trans_x>;

        $i0 = $i0 + $i1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int trans_x> = $i0;

        $i0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int center_y>;

        $i1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int _2D_trans_y>;

        $i0 = $i0 + $i1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: int trans_y> = $i0;

        return;
    }
    public void setRotationAngle(double)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotProjector r0;
        double $d0, $d1;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        $d0 := @parameter0: double;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double rotation> = $d0;

        $d1 = $d0 * 0.017453292519943295;

        $d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double sin(double)>($d1);

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sin_rotation> = $d1;

        $d0 = $d0 * 0.017453292519943295;

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double cos(double)>($d0);

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double cos_rotation> = $d0;

        $d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_x>;

        $d0 = neg $d0;

        $d1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double cos_rotation>;

        $d0 = $d0 * $d1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sx_cos> = $d0;

        $d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_x>;

        $d0 = neg $d0;

        $d1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sin_rotation>;

        $d0 = $d0 * $d1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sx_sin> = $d0;

        $d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_y>;

        $d0 = neg $d0;

        $d1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double cos_rotation>;

        $d0 = $d0 * $d1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sy_cos> = $d0;

        $d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_y>;

        $d1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sin_rotation>;

        $d0 = $d0 * $d1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sy_sin> = $d0;

        return;
    }
    public void setScaling(double)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotProjector r0;
        double $d0, $d1;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        $d0 := @parameter0: double;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_z> = $d0;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_y> = $d0;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_x> = $d0;

        $d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_x>;

        $d0 = neg $d0;

        $d1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double cos_rotation>;

        $d0 = $d0 * $d1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sx_cos> = $d0;

        $d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_x>;

        $d0 = neg $d0;

        $d1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sin_rotation>;

        $d0 = $d0 * $d1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sx_sin> = $d0;

        $d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_y>;

        $d0 = neg $d0;

        $d1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double cos_rotation>;

        $d0 = $d0 * $d1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sy_cos> = $d0;

        $d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_y>;

        $d1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sin_rotation>;

        $d0 = $d0 * $d1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sy_sin> = $d0;

        $d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_z>;

        $d1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double cos_elevation>;

        $d0 = $d0 * $d1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sz_cos> = $d0;

        $d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_z>;

        $d1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sin_elevation>;

        $d0 = $d0 * $d1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sz_sin> = $d0;

        return;
    }
    public void setScaling(double, double, double)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotProjector r0;
        double $d0, $d1, $d2;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $d2 := @parameter2: double;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_x> = $d0;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_y> = $d1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_z> = $d2;

        $d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_x>;

        $d0 = neg $d0;

        $d1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double cos_rotation>;

        $d0 = $d0 * $d1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sx_cos> = $d0;

        $d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_x>;

        $d0 = neg $d0;

        $d1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sin_rotation>;

        $d0 = $d0 * $d1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sx_sin> = $d0;

        $d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_y>;

        $d0 = neg $d0;

        $d1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double cos_rotation>;

        $d0 = $d0 * $d1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sy_cos> = $d0;

        $d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_y>;

        $d1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sin_rotation>;

        $d0 = $d0 * $d1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sy_sin> = $d0;

        $d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_z>;

        $d1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double cos_elevation>;

        $d0 = $d0 * $d1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sz_cos> = $d0;

        $d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_z>;

        $d1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sin_elevation>;

        $d0 = $d0 * $d1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sz_sin> = $d0;

        return;
    }
    public void setXScaling(double)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotProjector r0;
        double $d0, $d1;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        $d0 := @parameter0: double;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_x> = $d0;

        $d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_x>;

        $d0 = neg $d0;

        $d1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double cos_rotation>;

        $d0 = $d0 * $d1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sx_cos> = $d0;

        $d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_x>;

        $d0 = neg $d0;

        $d1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sin_rotation>;

        $d0 = $d0 * $d1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sx_sin> = $d0;

        return;
    }
    public void setYScaling(double)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotProjector r0;
        double $d0, $d1;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        $d0 := @parameter0: double;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_y> = $d0;

        $d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_y>;

        $d0 = neg $d0;

        $d1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double cos_rotation>;

        $d0 = $d0 * $d1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sy_cos> = $d0;

        $d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_y>;

        $d1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sin_rotation>;

        $d0 = $d0 * $d1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sy_sin> = $d0;

        return;
    }
    public void setZRange(double, double)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotProjector r0;
        double $d0, $d1;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double zmin> = $d0;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double zmax> = $d1;

        $d0 = $d1 - $d0;

        $d0 = 20.0 / $d0;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double zfactor> = $d0;

        return;
    }
    public void setZScaling(double)
    {
        com.mkulesh.micromath.plots.views.SurfacePlotProjector r0;
        double $d0, $d1;

        r0 := @this: com.mkulesh.micromath.plots.views.SurfacePlotProjector;

        $d0 := @parameter0: double;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_z> = $d0;

        $d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_z>;

        $d1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double cos_elevation>;

        $d0 = $d0 * $d1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sz_cos> = $d0;

        $d0 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double scale_z>;

        $d1 = r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sin_elevation>;

        $d0 = $d0 * $d1;

        r0.<com.mkulesh.micromath.plots.views.SurfacePlotProjector: double sz_sin> = $d0;

        return;
    }
