com.mkulesh.micromath.plots.views.PlanePlotView extends com.mkulesh.micromath.plots.views.PlotView
protected final com.mkulesh.micromath.plots.views.PhysicalArea area
private int arrowLength
private int arrowStroke
private final com.mkulesh.micromath.math.Vector2D labelCenter
protected final android.graphics.Point p1
protected final android.graphics.Point p2
protected final android.graphics.Rect rect
protected final android.graphics.Rect tmpRect
protected final com.mkulesh.micromath.math.Vector2D tmpVec
private com.mkulesh.micromath.plots.views.PlotView$Label[] xLabels
private com.mkulesh.micromath.plots.views.PlotView$Label[] yLabels
    public void <init>(android.content.Context)
    {
        com.mkulesh.micromath.plots.views.PlanePlotView r0;
        android.content.Context $r1;
        com.mkulesh.micromath.plots.views.PhysicalArea $r2;
        com.mkulesh.micromath.math.Vector2D $r3;
        android.graphics.Rect $r4;
        android.graphics.Point $r5;

        r0 := @this: com.mkulesh.micromath.plots.views.PlanePlotView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.PlotView: void <init>(android.content.Context)>($r1);

        $r2 = new com.mkulesh.micromath.plots.views.PhysicalArea;

        specialinvoke $r2.<com.mkulesh.micromath.plots.views.PhysicalArea: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PhysicalArea area> = $r2;

        $r3 = new com.mkulesh.micromath.math.Vector2D;

        specialinvoke $r3.<com.mkulesh.micromath.math.Vector2D: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.math.Vector2D labelCenter> = $r3;

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int arrowLength> = 0;

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int arrowStroke> = 0;

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] xLabels> = null;

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] yLabels> = null;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Rect rect> = $r4;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Rect tmpRect> = $r4;

        $r5 = new android.graphics.Point;

        specialinvoke $r5.<android.graphics.Point: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p1> = $r5;

        $r5 = new android.graphics.Point;

        specialinvoke $r5.<android.graphics.Point: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p2> = $r5;

        $r3 = new com.mkulesh.micromath.math.Vector2D;

        specialinvoke $r3.<com.mkulesh.micromath.math.Vector2D: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.math.Vector2D tmpVec> = $r3;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.mkulesh.micromath.plots.views.PlanePlotView r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        com.mkulesh.micromath.plots.views.PhysicalArea $r3;
        com.mkulesh.micromath.math.Vector2D $r4;
        android.graphics.Rect $r5;
        android.graphics.Point $r6;

        r0 := @this: com.mkulesh.micromath.plots.views.PlanePlotView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.PlotView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r3 = new com.mkulesh.micromath.plots.views.PhysicalArea;

        specialinvoke $r3.<com.mkulesh.micromath.plots.views.PhysicalArea: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PhysicalArea area> = $r3;

        $r4 = new com.mkulesh.micromath.math.Vector2D;

        specialinvoke $r4.<com.mkulesh.micromath.math.Vector2D: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.math.Vector2D labelCenter> = $r4;

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int arrowLength> = 0;

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int arrowStroke> = 0;

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] xLabels> = null;

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] yLabels> = null;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Rect rect> = $r5;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Rect tmpRect> = $r5;

        $r6 = new android.graphics.Point;

        specialinvoke $r6.<android.graphics.Point: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p1> = $r6;

        $r6 = new android.graphics.Point;

        specialinvoke $r6.<android.graphics.Point: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p2> = $r6;

        $r4 = new com.mkulesh.micromath.math.Vector2D;

        specialinvoke $r4.<com.mkulesh.micromath.math.Vector2D: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.math.Vector2D tmpVec> = $r4;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.mkulesh.micromath.plots.views.PlanePlotView r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        com.mkulesh.micromath.plots.views.PhysicalArea $r3;
        com.mkulesh.micromath.math.Vector2D $r4;
        android.graphics.Rect $r5;
        android.graphics.Point $r6;

        r0 := @this: com.mkulesh.micromath.plots.views.PlanePlotView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<com.mkulesh.micromath.plots.views.PlotView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r3 = new com.mkulesh.micromath.plots.views.PhysicalArea;

        specialinvoke $r3.<com.mkulesh.micromath.plots.views.PhysicalArea: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PhysicalArea area> = $r3;

        $r4 = new com.mkulesh.micromath.math.Vector2D;

        specialinvoke $r4.<com.mkulesh.micromath.math.Vector2D: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.math.Vector2D labelCenter> = $r4;

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int arrowLength> = 0;

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int arrowStroke> = 0;

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] xLabels> = null;

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] yLabels> = null;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Rect rect> = $r5;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Rect tmpRect> = $r5;

        $r6 = new android.graphics.Point;

        specialinvoke $r6.<android.graphics.Point: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p1> = $r6;

        $r6 = new android.graphics.Point;

        specialinvoke $r6.<android.graphics.Point: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p2> = $r6;

        $r4 = new com.mkulesh.micromath.math.Vector2D;

        specialinvoke $r4.<com.mkulesh.micromath.math.Vector2D: void <init>()>();

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.math.Vector2D tmpVec> = $r4;

        return;
    }
    private com.mkulesh.micromath.plots.views.PlotView$Label[] makeLabels(int, int)
    {
        com.mkulesh.micromath.plots.views.PlanePlotView r0;
        int $i0, $i1, i3, $i4;
        java.util.ArrayList r1;
        com.mkulesh.micromath.plots.views.PhysicalArea $r2;
        com.mkulesh.micromath.math.Vector2D $r3;
        double $d0, $d1, $d2, $d3, $d4;
        byte $b2;
        java.lang.Double $r4;
        double[] $r5;
        java.lang.Object $r6;
        java.lang.String[] $r7;
        com.mkulesh.micromath.plots.views.PlotView$Label[] $r8;
        com.mkulesh.micromath.plots.views.PlotView$Label $r9;
        java.lang.String $r10;

        r0 := @this: com.mkulesh.micromath.plots.views.PlanePlotView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i1 != 0 goto label01;

        return null;

     label01:
        $r2 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.plots.views.PhysicalArea: com.mkulesh.micromath.math.Vector2D getMin()>();

        $d0 = virtualinvoke $r3.<com.mkulesh.micromath.math.Vector2D: double get(int)>($i0);

        $r2 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.plots.views.PhysicalArea: com.mkulesh.micromath.math.Vector2D getMax()>();

        $d1 = virtualinvoke $r3.<com.mkulesh.micromath.math.Vector2D: double get(int)>($i0);

        $r3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.math.Vector2D labelCenter>;

        $d2 = virtualinvoke $r3.<com.mkulesh.micromath.math.Vector2D: double get(int)>($i0);

        $b2 = $d2 cmpl $d0;

        if $b2 <= 0 goto label12;

        $r3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.math.Vector2D labelCenter>;

        $d2 = virtualinvoke $r3.<com.mkulesh.micromath.math.Vector2D: double get(int)>($i0);

        $b2 = $d2 cmpg $d1;

        if $b2 >= 0 goto label12;

        $r2 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.plots.views.PhysicalArea: com.mkulesh.micromath.math.Vector2D getDim()>();

        $d2 = virtualinvoke $r3.<com.mkulesh.micromath.math.Vector2D: double get(int)>($i0);

        $d3 = (double) $i1;

        $d2 = $d2 / $d3;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        i3 = 0;

     label02:
        if i3 >= $i1 goto label04;

        $i4 = $i1 - i3;

        $d3 = (double) $i4;

        $d3 = -1.0 * $d3;

        $d3 = $d3 * $d2;

        $d4 = $d2 / 2.0;

        $d4 = $d4 + $d0;

        $b2 = $d3 cmpl $d4;

        if $b2 < 0 goto label03;

        $b2 = $d3 cmpg 0.0;

        if $b2 >= 0 goto label03;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label03:
        i3 = i3 + 1;

        goto label02;

     label04:
        if $i0 != 0 goto label05;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label05:
        i3 = 1;

     label06:
        if i3 > $i1 goto label08;

        $d0 = (double) i3;

        $d0 = $d0 * $d2;

        $b2 = $d0 cmpl 0.0;

        if $b2 <= 0 goto label07;

        $d3 = $d2 / 2.0;

        $d3 = $d1 - $d3;

        $b2 = $d0 cmpg $d3;

        if $b2 > 0 goto label07;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label07:
        i3 = i3 + 1;

        goto label06;

     label08:
        $i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $r5 = newarray (double)[$i1];

        $i1 = 0;

     label09:
        i3 = lengthof $r5;

        if $i1 >= i3 goto label10;

        $r6 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.Double) $r6;

        $d0 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        $r5[$i1] = $d0;

        $i1 = $i1 + 1;

        goto label09;

     label10:
        $i1 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int significantDigits>;

        $r7 = staticinvoke <com.mkulesh.micromath.utils.ViewUtils: java.lang.String[] catValues(double[],int)>($r5, $i1);

        $i1 = lengthof $r5;

        $r8 = newarray (com.mkulesh.micromath.plots.views.PlotView$Label)[$i1];

        $i1 = 0;

     label11:
        i3 = lengthof $r8;

        if $i1 >= i3 goto label16;

        $r9 = new com.mkulesh.micromath.plots.views.PlotView$Label;

        $d0 = $r5[$i1];

        $r3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.math.Vector2D labelCenter>;

        specialinvoke $r9.<com.mkulesh.micromath.plots.views.PlotView$Label: void <init>(com.mkulesh.micromath.plots.views.PlotView,int,double,com.mkulesh.micromath.math.Vector2D)>(r0, $i0, $d0, $r3);

        $r8[$i1] = $r9;

        $r9 = $r8[$i1];

        $r10 = $r7[$i1];

        $r9.<com.mkulesh.micromath.plots.views.PlotView$Label: java.lang.String name> = $r10;

        $i1 = $i1 + 1;

        goto label11;

     label12:
        i3 = $i1 + 2;

        $r5 = newarray (double)[i3];

        $r2 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.plots.views.PhysicalArea: com.mkulesh.micromath.math.Vector2D getDim()>();

        $d1 = virtualinvoke $r3.<com.mkulesh.micromath.math.Vector2D: double get(int)>($i0);

        i3 = lengthof $r5;

        i3 = i3 + -1;

        $d2 = (double) i3;

        $d1 = $d1 / $d2;

        i3 = 1;

     label13:
        $i4 = lengthof $r5;

        if i3 > $i4 goto label14;

        $i4 = i3 + -1;

        $d2 = (double) $i4;

        $d2 = $d2 * $d1;

        $d2 = $d2 + $d0;

        $i4 = i3 + -1;

        $r5[$i4] = $d2;

        i3 = i3 + 1;

        goto label13;

     label14:
        i3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int significantDigits>;

        $r7 = staticinvoke <com.mkulesh.micromath.utils.ViewUtils: java.lang.String[] catValues(double[],int)>($r5, i3);

        $r8 = newarray (com.mkulesh.micromath.plots.views.PlotView$Label)[$i1];

        $i1 = 0;

     label15:
        i3 = lengthof $r8;

        if $i1 >= i3 goto label16;

        $r9 = new com.mkulesh.micromath.plots.views.PlotView$Label;

        i3 = $i1 + 1;

        $d0 = $r5[i3];

        $r3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.math.Vector2D labelCenter>;

        specialinvoke $r9.<com.mkulesh.micromath.plots.views.PlotView$Label: void <init>(com.mkulesh.micromath.plots.views.PlotView,int,double,com.mkulesh.micromath.math.Vector2D)>(r0, $i0, $d0, $r3);

        $r8[$i1] = $r9;

        $r9 = $r8[$i1];

        i3 = $i1 + 1;

        $r10 = $r7[i3];

        $r9.<com.mkulesh.micromath.plots.views.PlotView$Label: java.lang.String name> = $r10;

        $i1 = $i1 + 1;

        goto label15;

     label16:
        return $r8;
    }
    protected void drawBorder(android.graphics.Canvas, android.graphics.Paint)
    {
        com.mkulesh.micromath.plots.views.PlanePlotView r0;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r2;
        android.graphics.Paint$Style $r3;
        android.text.TextPaint $r4;
        int $i0;
        float $f0;
        int[] $r5;
        com.mkulesh.micromath.properties.PlotProperties $r6;
        com.mkulesh.micromath.properties.PlotProperties$AxesStyle $r7;
        android.graphics.Rect $r8;

        r0 := @this: com.mkulesh.micromath.plots.views.PlanePlotView;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.graphics.Paint;

        $r3 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r3);

        $r4 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.text.TextPaint getPaint()>();

        $i0 = virtualinvoke $r4.<android.text.TextPaint: int getColor()>();

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>($i0);

        $i0 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int strokeWidth>;

        $f0 = (float) $i0;

        virtualinvoke $r2.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        $r5 = <com.mkulesh.micromath.plots.views.PlanePlotView$1: int[] $SwitchMap$com$mkulesh$micromath$properties$PlotProperties$AxesStyle>;

        $r6 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.properties.PlotProperties plotParameters>;

        $r7 = $r6.<com.mkulesh.micromath.properties.PlotProperties: com.mkulesh.micromath.properties.PlotProperties$AxesStyle axesStyle>;

        $i0 = virtualinvoke $r7.<com.mkulesh.micromath.properties.PlotProperties$AxesStyle: int ordinal()>();

        $i0 = $r5[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            default: goto label1;
        };

     label1:
        return;

     label2:
        $r8 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Rect rect>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(android.graphics.Rect,android.graphics.Paint)>($r8, $r2);

        return;

     label3:
        virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: void drawCross(android.graphics.Canvas,android.graphics.Paint)>($r1, $r2);

        return;
    }
protected abstract void drawContent(android.graphics.Canvas, com.mkulesh.micromath.plots.FunctionIf) { 
// no body
} 
    protected void drawCross(android.graphics.Canvas, android.graphics.Paint)
    {
        com.mkulesh.micromath.plots.views.PlanePlotView r0;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r2;
        com.mkulesh.micromath.math.Vector2D $r3, $r5;
        com.mkulesh.micromath.plots.views.PhysicalArea $r4;
        double $d0, $d1;
        android.graphics.Rect $r6;
        android.graphics.Point $r7;
        int $i0, $i1;
        float $f0, $f1, $f2, $f3;

        r0 := @this: com.mkulesh.micromath.plots.views.PlanePlotView;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.graphics.Paint;

        $r3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.math.Vector2D tmpVec>;

        $r4 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r5 = virtualinvoke $r4.<com.mkulesh.micromath.plots.views.PhysicalArea: com.mkulesh.micromath.math.Vector2D getMin()>();

        $d0 = $r5.<com.mkulesh.micromath.math.Vector2D: double x>;

        $r5 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.math.Vector2D labelCenter>;

        $d1 = $r5.<com.mkulesh.micromath.math.Vector2D: double y>;

        virtualinvoke $r3.<com.mkulesh.micromath.math.Vector2D: void set(double,double)>($d0, $d1);

        $r4 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.math.Vector2D tmpVec>;

        $r6 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Rect rect>;

        $r7 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p1>;

        virtualinvoke $r4.<com.mkulesh.micromath.plots.views.PhysicalArea: void toScreenPoint(com.mkulesh.micromath.math.Vector2D,android.graphics.Rect,android.graphics.Point)>($r3, $r6, $r7);

        $r3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.math.Vector2D tmpVec>;

        $r4 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r5 = virtualinvoke $r4.<com.mkulesh.micromath.plots.views.PhysicalArea: com.mkulesh.micromath.math.Vector2D getMax()>();

        $d0 = $r5.<com.mkulesh.micromath.math.Vector2D: double x>;

        $r5 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.math.Vector2D labelCenter>;

        $d1 = $r5.<com.mkulesh.micromath.math.Vector2D: double y>;

        virtualinvoke $r3.<com.mkulesh.micromath.math.Vector2D: void set(double,double)>($d0, $d1);

        $r4 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.math.Vector2D tmpVec>;

        $r6 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Rect rect>;

        $r7 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p2>;

        virtualinvoke $r4.<com.mkulesh.micromath.plots.views.PhysicalArea: void toScreenPoint(com.mkulesh.micromath.math.Vector2D,android.graphics.Rect,android.graphics.Point)>($r3, $r6, $r7);

        $r7 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p2>;

        $i0 = $r7.<android.graphics.Point: int x>;

        $i1 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int arrowLength>;

        $i0 = $i0 + $i1;

        $r7.<android.graphics.Point: int x> = $i0;

        $r7 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p1>;

        $i0 = $r7.<android.graphics.Point: int x>;

        $f0 = (float) $i0;

        $r7 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p1>;

        $i0 = $r7.<android.graphics.Point: int y>;

        $f1 = (float) $i0;

        $r7 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p2>;

        $i0 = $r7.<android.graphics.Point: int x>;

        $i1 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int strokeWidth>;

        $i1 = $i1 * 2;

        $i0 = $i0 - $i1;

        $f2 = (float) $i0;

        $r7 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p2>;

        $i0 = $r7.<android.graphics.Point: int y>;

        $f3 = (float) $i0;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $f3, $r2);

        $r7 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p2>;

        $i0 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int arrowStroke>;

        $i1 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int arrowLength>;

        virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: void drawHorArrowHead(android.graphics.Canvas,android.graphics.Point,int,int,android.graphics.Paint)>($r1, $r7, $i0, $i1, $r2);

        $i0 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int strokeWidth>;

        $f0 = (float) $i0;

        virtualinvoke $r2.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        $r3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.math.Vector2D tmpVec>;

        $r5 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.math.Vector2D labelCenter>;

        $d0 = $r5.<com.mkulesh.micromath.math.Vector2D: double x>;

        $r4 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r5 = virtualinvoke $r4.<com.mkulesh.micromath.plots.views.PhysicalArea: com.mkulesh.micromath.math.Vector2D getMin()>();

        $d1 = $r5.<com.mkulesh.micromath.math.Vector2D: double y>;

        virtualinvoke $r3.<com.mkulesh.micromath.math.Vector2D: void set(double,double)>($d0, $d1);

        $r4 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.math.Vector2D tmpVec>;

        $r6 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Rect rect>;

        $r7 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p1>;

        virtualinvoke $r4.<com.mkulesh.micromath.plots.views.PhysicalArea: void toScreenPoint(com.mkulesh.micromath.math.Vector2D,android.graphics.Rect,android.graphics.Point)>($r3, $r6, $r7);

        $r3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.math.Vector2D tmpVec>;

        $r5 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.math.Vector2D labelCenter>;

        $d0 = $r5.<com.mkulesh.micromath.math.Vector2D: double x>;

        $r4 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r5 = virtualinvoke $r4.<com.mkulesh.micromath.plots.views.PhysicalArea: com.mkulesh.micromath.math.Vector2D getMax()>();

        $d1 = $r5.<com.mkulesh.micromath.math.Vector2D: double y>;

        virtualinvoke $r3.<com.mkulesh.micromath.math.Vector2D: void set(double,double)>($d0, $d1);

        $r4 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.math.Vector2D tmpVec>;

        $r6 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Rect rect>;

        $r7 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p2>;

        virtualinvoke $r4.<com.mkulesh.micromath.plots.views.PhysicalArea: void toScreenPoint(com.mkulesh.micromath.math.Vector2D,android.graphics.Rect,android.graphics.Point)>($r3, $r6, $r7);

        $r7 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p2>;

        $i0 = $r7.<android.graphics.Point: int y>;

        $i1 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int arrowLength>;

        $i0 = $i0 - $i1;

        $r7.<android.graphics.Point: int y> = $i0;

        $r7 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p1>;

        $i0 = $r7.<android.graphics.Point: int x>;

        $f0 = (float) $i0;

        $r7 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p1>;

        $i0 = $r7.<android.graphics.Point: int y>;

        $f1 = (float) $i0;

        $r7 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p2>;

        $i0 = $r7.<android.graphics.Point: int x>;

        $f2 = (float) $i0;

        $r7 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p2>;

        $i0 = $r7.<android.graphics.Point: int y>;

        $i1 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int strokeWidth>;

        $i1 = $i1 * 2;

        $i0 = $i0 + $i1;

        $f3 = (float) $i0;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $f3, $r2);

        $r7 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p2>;

        $i0 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int arrowStroke>;

        $i1 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int arrowLength>;

        virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: void drawVerArrowHead(android.graphics.Canvas,android.graphics.Point,int,int,android.graphics.Paint)>($r1, $r7, $i0, $i1, $r2);

        return;
    }
    protected void drawGrid(int, android.graphics.Canvas, android.graphics.Paint)
    {
        com.mkulesh.micromath.plots.views.PlanePlotView r0;
        int $i0, $i1, $i2;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r2;
        com.mkulesh.micromath.plots.views.PlotView$Label[] r3;
        android.graphics.Paint$Style $r4;
        com.mkulesh.micromath.properties.AxisProperties $r5;
        float $f0, $f1, $f2, $f3;
        com.mkulesh.micromath.plots.views.PhysicalArea $r6;
        com.mkulesh.micromath.plots.views.PlotView$Label $r7;
        com.mkulesh.micromath.math.Vector2D $r8;
        android.graphics.Rect $r9;
        android.graphics.Point $r10;

        r0 := @this: com.mkulesh.micromath.plots.views.PlanePlotView;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.graphics.Canvas;

        $r2 := @parameter2: android.graphics.Paint;

        if $i0 != 0 goto label2;

        r3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] xLabels>;

     label1:
        if r3 != null goto label3;

        return;

     label2:
        r3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] yLabels>;

        goto label1;

     label3:
        $r4 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r4);

        $r5 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.properties.AxisProperties axisParameters>;

        $i1 = $r5.<com.mkulesh.micromath.properties.AxisProperties: int gridLineColor>;

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>($i1);

        $r5 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.properties.AxisProperties axisParameters>;

        $i1 = virtualinvoke $r5.<com.mkulesh.micromath.properties.AxisProperties: int getGridLineWidth()>();

        $f0 = (float) $i1;

        virtualinvoke $r2.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        $i1 = 0;

     label4:
        $i2 = lengthof r3;

        if $i1 >= $i2 goto label7;

        $r6 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r7 = r3[$i1];

        $r8 = $r7.<com.mkulesh.micromath.plots.views.PlotView$Label: com.mkulesh.micromath.math.Vector2D point>;

        $r9 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Rect rect>;

        $r10 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p1>;

        virtualinvoke $r6.<com.mkulesh.micromath.plots.views.PhysicalArea: void toScreenPoint(com.mkulesh.micromath.math.Vector2D,android.graphics.Rect,android.graphics.Point)>($r8, $r9, $r10);

        if $i0 != 0 goto label6;

        $r10 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p1>;

        $i2 = $r10.<android.graphics.Point: int x>;

        $f0 = (float) $i2;

        $r9 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Rect rect>;

        $i2 = $r9.<android.graphics.Rect: int top>;

        $f1 = (float) $i2;

        $r10 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p1>;

        $i2 = $r10.<android.graphics.Point: int x>;

        $f2 = (float) $i2;

        $r9 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Rect rect>;

        $i2 = $r9.<android.graphics.Rect: int bottom>;

        $f3 = (float) $i2;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $f3, $r2);

     label5:
        $i1 = $i1 + 1;

        goto label4;

     label6:
        $r9 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Rect rect>;

        $i2 = $r9.<android.graphics.Rect: int left>;

        $f0 = (float) $i2;

        $r10 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p1>;

        $i2 = $r10.<android.graphics.Point: int y>;

        $f1 = (float) $i2;

        $r9 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Rect rect>;

        $i2 = $r9.<android.graphics.Rect: int right>;

        $f2 = (float) $i2;

        $r10 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p1>;

        $i2 = $r10.<android.graphics.Point: int y>;

        $f3 = (float) $i2;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $f3, $r2);

        goto label5;

     label7:
        return;
    }
    protected void drawHorArrowHead(android.graphics.Canvas, android.graphics.Point, int, int, android.graphics.Paint)
    {
        com.mkulesh.micromath.plots.views.PlanePlotView r0;
        android.graphics.Canvas $r1;
        android.graphics.Point $r2;
        int $i0, $i1, i2, $i3;
        android.graphics.Paint $r3;
        float $f0, $f1, $f2, $f3;

        r0 := @this: com.mkulesh.micromath.plots.views.PlanePlotView;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.graphics.Point;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 := @parameter4: android.graphics.Paint;

        virtualinvoke $r3.<android.graphics.Paint: void setStrokeWidth(float)>(0.0F);

        i2 = 0;

     label1:
        $i3 = $i1 / 2;

        if i2 >= $i3 goto label2;

        $i3 = $r2.<android.graphics.Point: int x>;

        $i3 = $i3 - i2;

        $f0 = (float) $i3;

        $i3 = $r2.<android.graphics.Point: int y>;

        $f1 = (float) $i3;

        $i3 = $r2.<android.graphics.Point: int x>;

        $i3 = $i3 - $i1;

        $f2 = (float) $i3;

        $i3 = $r2.<android.graphics.Point: int y>;

        $i3 = $i3 - $i0;

        $f3 = (float) $i3;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $f3, $r3);

        $i3 = $r2.<android.graphics.Point: int x>;

        $i3 = $i3 - i2;

        $f0 = (float) $i3;

        $i3 = $r2.<android.graphics.Point: int y>;

        $f1 = (float) $i3;

        $i3 = $r2.<android.graphics.Point: int x>;

        $i3 = $i3 - $i1;

        $f2 = (float) $i3;

        $i3 = $r2.<android.graphics.Point: int y>;

        $i3 = $i3 + $i0;

        $f3 = (float) $i3;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $f3, $r3);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }
    protected void drawLabeles(int, android.graphics.Canvas, android.graphics.Paint)
    {
        com.mkulesh.micromath.plots.views.PlanePlotView r0;
        int $i0, $i1, i2, $i3, $i4, $i5;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r2;
        java.lang.String r3;
        com.mkulesh.micromath.plots.views.PlotView$Label[] r4;
        android.text.TextPaint $r5;
        com.mkulesh.micromath.properties.AxisProperties $r6;
        float $f0, $f1, $f2, $f3;
        com.mkulesh.micromath.plots.views.PhysicalArea $r7;
        com.mkulesh.micromath.plots.views.PlotView$Label $r8;
        com.mkulesh.micromath.math.Vector2D $r9;
        android.graphics.Rect $r10;
        android.graphics.Point $r11;

        r0 := @this: com.mkulesh.micromath.plots.views.PlanePlotView;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.graphics.Canvas;

        $r2 := @parameter2: android.graphics.Paint;

        if $i0 != 0 goto label2;

        r4 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] xLabels>;

     label1:
        if r4 != null goto label3;

        return;

     label2:
        r4 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] yLabels>;

        goto label1;

     label3:
        $r5 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.text.TextPaint getPaint()>();

        virtualinvoke $r2.<android.graphics.Paint: void set(android.graphics.Paint)>($r5);

        $r5 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.text.TextPaint getPaint()>();

        $i1 = virtualinvoke $r5.<android.text.TextPaint: int getColor()>();

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>($i1);

        $r6 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.properties.AxisProperties axisParameters>;

        $i1 = virtualinvoke $r6.<com.mkulesh.micromath.properties.AxisProperties: int getLabelTextSize()>();

        $f0 = (float) $i1;

        virtualinvoke $r2.<android.graphics.Paint: void setTextSize(float)>($f0);

        $r6 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.properties.AxisProperties axisParameters>;

        $i1 = virtualinvoke $r6.<com.mkulesh.micromath.properties.AxisProperties: int getLabelLineSize()>();

        i2 = 0;

     label4:
        $i3 = lengthof r4;

        if i2 >= $i3 goto label7;

        $r7 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r8 = r4[i2];

        $r9 = $r8.<com.mkulesh.micromath.plots.views.PlotView$Label: com.mkulesh.micromath.math.Vector2D point>;

        $r10 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Rect rect>;

        $r11 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p1>;

        virtualinvoke $r7.<com.mkulesh.micromath.plots.views.PhysicalArea: void toScreenPoint(com.mkulesh.micromath.math.Vector2D,android.graphics.Rect,android.graphics.Point)>($r9, $r10, $r11);

        $r8 = r4[i2];

        r3 = $r8.<com.mkulesh.micromath.plots.views.PlotView$Label: java.lang.String name>;

        $i3 = virtualinvoke r3.<java.lang.String: int length()>();

        $r10 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Rect tmpRect>;

        virtualinvoke $r2.<android.graphics.Paint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)>(r3, 0, $i3, $r10);

        $f0 = (float) $i1;

        virtualinvoke $r2.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        if $i0 != 0 goto label6;

        $r11 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p1>;

        $i3 = $r11.<android.graphics.Point: int x>;

        $f0 = (float) $i3;

        $r11 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p1>;

        $i3 = $r11.<android.graphics.Point: int y>;

        $i3 = $i3 - $i1;

        $f1 = (float) $i3;

        $r11 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p1>;

        $i3 = $r11.<android.graphics.Point: int x>;

        $f2 = (float) $i3;

        $r11 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p1>;

        $i3 = $r11.<android.graphics.Point: int y>;

        $i3 = $i3 + $i1;

        $f3 = (float) $i3;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $f3, $r2);

        $r10 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Rect tmpRect>;

        $r11 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p1>;

        $i3 = $r11.<android.graphics.Point: int x>;

        $r6 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.properties.AxisProperties axisParameters>;

        $i4 = virtualinvoke $r6.<com.mkulesh.micromath.properties.AxisProperties: int getGridLineWidth()>();

        $i3 = $i3 + $i4;

        $i3 = $i3 + 1;

        $r11 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p1>;

        $i4 = $r11.<android.graphics.Point: int y>;

        $i4 = $i4 - $i1;

        $i4 = $i4 + -2;

        virtualinvoke $r10.<android.graphics.Rect: void offset(int,int)>($i3, $i4);

     label5:
        virtualinvoke $r2.<android.graphics.Paint: void setStrokeWidth(float)>(1.0F);

        $r10 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Rect tmpRect>;

        $i3 = $r10.<android.graphics.Rect: int left>;

        $f0 = (float) $i3;

        $r10 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Rect tmpRect>;

        $i3 = $r10.<android.graphics.Rect: int bottom>;

        $f1 = (float) $i3;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>(r3, $f0, $f1, $r2);

        i2 = i2 + 1;

        goto label4;

     label6:
        $r11 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p1>;

        $i3 = $r11.<android.graphics.Point: int x>;

        $i3 = $i3 - $i1;

        $f0 = (float) $i3;

        $r11 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p1>;

        $i3 = $r11.<android.graphics.Point: int y>;

        $f1 = (float) $i3;

        $r11 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p1>;

        $i3 = $r11.<android.graphics.Point: int x>;

        $i3 = $i3 + $i1;

        $f2 = (float) $i3;

        $r11 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p1>;

        $i3 = $r11.<android.graphics.Point: int y>;

        $f3 = (float) $i3;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $f3, $r2);

        $r10 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Rect tmpRect>;

        $r11 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p1>;

        $i3 = $r11.<android.graphics.Point: int x>;

        $i3 = $i3 + $i1;

        $i3 = $i3 + 2;

        $r11 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Point p1>;

        $i4 = $r11.<android.graphics.Point: int y>;

        $r6 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.properties.AxisProperties axisParameters>;

        $i5 = virtualinvoke $r6.<com.mkulesh.micromath.properties.AxisProperties: int getGridLineWidth()>();

        $i4 = $i4 - $i5;

        $i4 = $i4 + -2;

        virtualinvoke $r10.<android.graphics.Rect: void offset(int,int)>($i3, $i4);

        goto label5;

     label7:
        return;
    }
    protected void drawVerArrowHead(android.graphics.Canvas, android.graphics.Point, int, int, android.graphics.Paint)
    {
        com.mkulesh.micromath.plots.views.PlanePlotView r0;
        android.graphics.Canvas $r1;
        android.graphics.Point $r2;
        int $i0, $i1, i2, $i3;
        android.graphics.Paint $r3;
        float $f0, $f1, $f2, $f3;

        r0 := @this: com.mkulesh.micromath.plots.views.PlanePlotView;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.graphics.Point;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 := @parameter4: android.graphics.Paint;

        virtualinvoke $r3.<android.graphics.Paint: void setStrokeWidth(float)>(0.0F);

        i2 = 0;

     label1:
        $i3 = $i1 / 2;

        if i2 >= $i3 goto label2;

        $i3 = $r2.<android.graphics.Point: int x>;

        $f0 = (float) $i3;

        $i3 = $r2.<android.graphics.Point: int y>;

        $i3 = $i3 + i2;

        $f1 = (float) $i3;

        $i3 = $r2.<android.graphics.Point: int x>;

        $i3 = $i3 - $i0;

        $f2 = (float) $i3;

        $i3 = $r2.<android.graphics.Point: int y>;

        $i3 = $i3 + $i1;

        $f3 = (float) $i3;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $f3, $r3);

        $i3 = $r2.<android.graphics.Point: int x>;

        $f0 = (float) $i3;

        $i3 = $r2.<android.graphics.Point: int y>;

        $i3 = $i3 + i2;

        $f1 = (float) $i3;

        $i3 = $r2.<android.graphics.Point: int x>;

        $i3 = $i3 + $i0;

        $f2 = (float) $i3;

        $i3 = $r2.<android.graphics.Point: int y>;

        $i3 = $i3 + $i1;

        $f3 = (float) $i3;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $f3, $r3);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }
    protected void getScaledPadding(android.graphics.Rect)
    {
        com.mkulesh.micromath.plots.views.PlanePlotView r0;
        android.graphics.Rect $r1;
        int $i0, $i1, $i2, $i3, $i4;
        com.mkulesh.micromath.properties.AxisProperties $r2;
        com.mkulesh.micromath.properties.PlotProperties $r3;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.plots.views.PlanePlotView;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.properties.AxisProperties axisParameters>;

        $i1 = virtualinvoke $r2.<com.mkulesh.micromath.properties.AxisProperties: int getLabelLineSize()>();

        $i1 = $i1 * 2;

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int arrowStroke> = $i1;

        $r3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.properties.PlotProperties plotParameters>;

        $z0 = virtualinvoke $r3.<com.mkulesh.micromath.properties.PlotProperties: boolean isCrossedAxes()>();

        if $z0 == 0 goto label2;

        $i1 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int arrowStroke>;

        $i1 = $i1 * 4;

     label1:
        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int arrowLength> = $i1;

        $i1 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int getPaddingLeft()>();

        $i2 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int arrowStroke>;

        $i1 = $i1 + $i2;

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int getPaddingTop()>();

        $i3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int arrowLength>;

        $i2 = $i2 + $i3;

        $i3 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int getPaddingRight()>();

        $i0 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int arrowLength>;

        $i3 = $i3 + $i0;

        $i4 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int getPaddingBottom()>();

        $i0 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int arrowStroke>;

        $i0 = $i4 + $i0;

        virtualinvoke $r1.<android.graphics.Rect: void set(int,int,int,int)>($i1, $i2, $i3, $i0);

        return;

     label2:
        $i1 = 0;

        goto label1;
    }
    protected void onDraw(android.graphics.Canvas)
    {
        com.mkulesh.micromath.plots.views.PlanePlotView r0;
        android.graphics.Canvas $r1, r2;
        android.graphics.Bitmap $r3;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.Bitmap$Config $r4;
        android.graphics.Rect $r5, $r6;
        android.graphics.Paint $r7;
        android.graphics.Paint$Style $r8;
        java.util.ArrayList $r9;
        boolean $z0, $z1;
        java.util.Iterator $r10;
        java.lang.Object $r11;
        com.mkulesh.micromath.plots.FunctionIf r12;
        com.mkulesh.micromath.plots.FunctionIf$Type $r13, $r14;
        com.mkulesh.micromath.properties.PlotProperties $r15;
        java.lang.OutOfMemoryError r16;
        android.content.Context $r17;
        android.content.res.Resources $r18;
        java.lang.String $r19;
        android.widget.Toast $r20;
        java.lang.Exception r21;

        r0 := @this: com.mkulesh.micromath.plots.views.PlanePlotView;

        $r1 := @parameter0: android.graphics.Canvas;

        $r3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Bitmap drawingCache>;

        if $r3 != null goto label61;

     label01:
        $i0 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int getMeasuredWidth()>();

        $i1 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int getMeasuredHeight()>();

     label02:
        $r4 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

     label03:
        $r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r4);

     label04:
        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Bitmap drawingCache> = $r3;

     label05:
        r2 = new android.graphics.Canvas;

     label06:
        $r3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Bitmap drawingCache>;

     label07:
        specialinvoke r2.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r3);

        virtualinvoke r2.<android.graphics.Canvas: void drawColor(int)>(0);

     label08:
        $r5 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Rect tmpRect>;

     label09:
        virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: void getScaledPadding(android.graphics.Rect)>($r5);

     label10:
        $r5 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Rect rect>;

        $r6 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Rect tmpRect>;

        $i0 = $r6.<android.graphics.Rect: int left>;

        $r6 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Rect tmpRect>;

        $i1 = $r6.<android.graphics.Rect: int top>;

     label11:
        $i2 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int getRight()>();

        $i3 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int getLeft()>();

     label12:
        $i2 = $i2 - $i3;

     label13:
        $r6 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Rect tmpRect>;

        $i3 = $r6.<android.graphics.Rect: int right>;

     label14:
        $i2 = $i2 - $i3;

     label15:
        $i3 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int getBottom()>();

        $i4 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: int getTop()>();

     label16:
        $i3 = $i3 - $i4;

     label17:
        $r6 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Rect tmpRect>;

        $i4 = $r6.<android.graphics.Rect: int bottom>;

     label18:
        $i3 = $i3 - $i4;

     label19:
        virtualinvoke $r5.<android.graphics.Rect: void set(int,int,int,int)>($i0, $i1, $i2, $i3);

     label20:
        $r7 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Paint paint>;

     label21:
        $r8 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

     label22:
        virtualinvoke $r7.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r8);

     label23:
        $r7 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Paint paint>;

     label24:
        virtualinvoke $r7.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

     label25:
        $r9 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: java.util.ArrayList functions>;

     label26:
        if $r9 == null goto label59;

     label27:
        $r9 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: java.util.ArrayList functions>;

     label28:
        $z0 = virtualinvoke $r9.<java.util.ArrayList: boolean isEmpty()>();

     label29:
        if $z0 != 0 goto label59;

     label30:
        $r7 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Paint paint>;

     label31:
        virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: void drawGrid(int,android.graphics.Canvas,android.graphics.Paint)>(0, r2, $r7);

     label32:
        $r7 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Paint paint>;

     label33:
        virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: void drawGrid(int,android.graphics.Canvas,android.graphics.Paint)>(1, r2, $r7);

     label34:
        $z0 = 0;

     label35:
        $r9 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: java.util.ArrayList functions>;

     label36:
        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.util.Iterator iterator()>();

     label37:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

     label38:
        if $z1 == 0 goto label47;

     label39:
        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

     label40:
        r12 = (com.mkulesh.micromath.plots.FunctionIf) $r11;

     label41:
        if r12 == null goto label37;

     label42:
        virtualinvoke r2.<android.graphics.Canvas: int save()>();

     label43:
        $r5 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Rect rect>;

     label44:
        virtualinvoke r2.<android.graphics.Canvas: boolean clipRect(android.graphics.Rect)>($r5);

        virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: void drawContent(android.graphics.Canvas,com.mkulesh.micromath.plots.FunctionIf)>(r2, r12);

        virtualinvoke r2.<android.graphics.Canvas: void restore()>();

        $r13 = interfaceinvoke r12.<com.mkulesh.micromath.plots.FunctionIf: com.mkulesh.micromath.plots.FunctionIf$Type getType()>();

     label45:
        $r14 = <com.mkulesh.micromath.plots.FunctionIf$Type: com.mkulesh.micromath.plots.FunctionIf$Type FUNCTION_3D>;

     label46:
        if $r13 != $r14 goto label37;

        $z0 = 1;

        goto label37;

     label47:
        if $z0 == 0 goto label52;

     label48:
        $r7 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Paint paint>;

     label49:
        virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: void drawGrid(int,android.graphics.Canvas,android.graphics.Paint)>(0, r2, $r7);

     label50:
        $r7 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Paint paint>;

     label51:
        virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: void drawGrid(int,android.graphics.Canvas,android.graphics.Paint)>(1, r2, $r7);

     label52:
        $r15 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.properties.PlotProperties plotParameters>;

     label53:
        $z0 = virtualinvoke $r15.<com.mkulesh.micromath.properties.PlotProperties: boolean isNoAxes()>();

     label54:
        if $z0 != 0 goto label59;

     label55:
        $r7 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Paint paint>;

     label56:
        virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: void drawLabeles(int,android.graphics.Canvas,android.graphics.Paint)>(0, r2, $r7);

     label57:
        $r7 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Paint paint>;

     label58:
        virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: void drawLabeles(int,android.graphics.Canvas,android.graphics.Paint)>(1, r2, $r7);

     label59:
        $r7 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Paint paint>;

     label60:
        virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: void drawBorder(android.graphics.Canvas,android.graphics.Paint)>(r2, $r7);

     label61:
        $r3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Bitmap drawingCache>;

        $r7 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r3, 0.0F, 0.0F, $r7);

        return;

     label62:
        r16 := @caughtexception;

        $r17 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.content.Context getContext()>();

        $r18 = virtualinvoke $r17.<android.content.Context: android.content.res.Resources getResources()>();

        $r19 = virtualinvoke $r18.<android.content.res.Resources: java.lang.String getString(int)>(2131099800);

        $r17 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.content.Context getContext()>();

        $r20 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r17, $r19, 1);

        virtualinvoke $r20.<android.widget.Toast: void show()>();

        return;

     label63:
        r21 := @caughtexception;

        $r17 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.content.Context getContext()>();

        $r18 = virtualinvoke $r17.<android.content.Context: android.content.res.Resources getResources()>();

        $r19 = virtualinvoke $r18.<android.content.res.Resources: java.lang.String getString(int)>(2131099800);

        $r17 = virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: android.content.Context getContext()>();

        $r20 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r17, $r19, 1);

        virtualinvoke $r20.<android.widget.Toast: void show()>();

        return;

        catch java.lang.OutOfMemoryError from label01 to label04 with label62;
        catch java.lang.OutOfMemoryError from label05 to label06 with label62;
        catch java.lang.OutOfMemoryError from label07 to label08 with label62;
        catch java.lang.OutOfMemoryError from label09 to label10 with label62;
        catch java.lang.OutOfMemoryError from label11 to label12 with label62;
        catch java.lang.OutOfMemoryError from label15 to label16 with label62;
        catch java.lang.OutOfMemoryError from label19 to label20 with label62;
        catch java.lang.OutOfMemoryError from label21 to label23 with label62;
        catch java.lang.OutOfMemoryError from label24 to label25 with label62;
        catch java.lang.OutOfMemoryError from label28 to label29 with label62;
        catch java.lang.OutOfMemoryError from label31 to label32 with label62;
        catch java.lang.OutOfMemoryError from label33 to label34 with label62;
        catch java.lang.OutOfMemoryError from label36 to label38 with label62;
        catch java.lang.OutOfMemoryError from label39 to label40 with label62;
        catch java.lang.OutOfMemoryError from label42 to label43 with label62;
        catch java.lang.OutOfMemoryError from label44 to label46 with label62;
        catch java.lang.OutOfMemoryError from label49 to label50 with label62;
        catch java.lang.OutOfMemoryError from label51 to label52 with label62;
        catch java.lang.OutOfMemoryError from label53 to label54 with label62;
        catch java.lang.OutOfMemoryError from label56 to label57 with label62;
        catch java.lang.OutOfMemoryError from label58 to label59 with label62;
        catch java.lang.OutOfMemoryError from label60 to label61 with label62;
        catch java.lang.Exception from label01 to label02 with label63;
        catch java.lang.Exception from label03 to label05 with label63;
        catch java.lang.Exception from label06 to label12 with label63;
        catch java.lang.Exception from label13 to label14 with label63;
        catch java.lang.Exception from label15 to label16 with label63;
        catch java.lang.Exception from label17 to label18 with label63;
        catch java.lang.Exception from label19 to label21 with label63;
        catch java.lang.Exception from label22 to label26 with label63;
        catch java.lang.Exception from label27 to label29 with label63;
        catch java.lang.Exception from label30 to label34 with label63;
        catch java.lang.Exception from label35 to label38 with label63;
        catch java.lang.Exception from label39 to label41 with label63;
        catch java.lang.Exception from label42 to label45 with label63;
        catch java.lang.Exception from label48 to label54 with label63;
        catch java.lang.Exception from label55 to label61 with label63;
    }
    public void setArea(double, double, double, double)
    {
        com.mkulesh.micromath.plots.views.PlanePlotView r0;
        double $d0, $d1, $d2, $d3;
        com.mkulesh.micromath.plots.views.PhysicalArea $r1;

        r0 := @this: com.mkulesh.micromath.plots.views.PlanePlotView;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $d2 := @parameter2: double;

        $d3 := @parameter3: double;

        $r1 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.PhysicalArea: void set(double,double,double,double)>($d0, $d1, $d2, $d3);

        virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: void updateLabels()>();

        return;
    }
    public void setScale(float)
    {
        com.mkulesh.micromath.plots.views.PlanePlotView r0;
        float $f0;
        android.graphics.Rect r1;
        int $i0, $i1, $i2, $i3;
        com.mkulesh.micromath.properties.AxisProperties $r2;
        com.mkulesh.micromath.plots.views.ColorMapView $r3;

        r0 := @this: com.mkulesh.micromath.plots.views.PlanePlotView;

        $f0 := @parameter0: float;

        virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: void clearDrawingCache()>();

        $r2 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.properties.AxisProperties axisParameters>;

        $r2.<com.mkulesh.micromath.properties.AxisProperties: float scaleFactor> = $f0;

        $r3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.ColorMapView colorMapView>;

        if $r3 == null goto label1;

        r1 = new android.graphics.Rect;

        specialinvoke r1.<android.graphics.Rect: void <init>()>();

        virtualinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: void getScaledPadding(android.graphics.Rect)>(r1);

        $r3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.ColorMapView colorMapView>;

        $i2 = r1.<android.graphics.Rect: int left>;

        $i3 = r1.<android.graphics.Rect: int top>;

        $i0 = r1.<android.graphics.Rect: int left>;

        $i1 = r1.<android.graphics.Rect: int bottom>;

        virtualinvoke $r3.<com.mkulesh.micromath.plots.views.ColorMapView: void setPadding(int,int,int,int)>($i2, $i3, $i0, $i1);

        $r3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.ColorMapView colorMapView>;

        $r2 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.properties.AxisProperties axisParameters>;

        $i0 = virtualinvoke $r2.<com.mkulesh.micromath.properties.AxisProperties: int getLabelTextSize()>();

        $f0 = (float) $i0;

        virtualinvoke $r3.<com.mkulesh.micromath.plots.views.ColorMapView: void setTextSize(int,float)>(0, $f0);

     label1:
        return;
    }
    public void updateLabels()
    {
        com.mkulesh.micromath.plots.views.PlanePlotView r0;
        double $d0, $d1;
        com.mkulesh.micromath.properties.PlotProperties $r1;
        boolean $z0;
        com.mkulesh.micromath.math.Vector2D $r2, $r4;
        com.mkulesh.micromath.plots.views.PhysicalArea $r3;
        byte $b0;
        com.mkulesh.micromath.properties.AxisProperties $r5;
        int $i1;
        com.mkulesh.micromath.plots.views.PlotView$Label[] $r6;

        r0 := @this: com.mkulesh.micromath.plots.views.PlanePlotView;

        $d0 = 0.0;

        $r1 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.properties.PlotProperties plotParameters>;

        $z0 = virtualinvoke $r1.<com.mkulesh.micromath.properties.PlotProperties: boolean isCrossedAxes()>();

        if $z0 == 0 goto label7;

        $r2 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.math.Vector2D labelCenter>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r4 = virtualinvoke $r3.<com.mkulesh.micromath.plots.views.PhysicalArea: com.mkulesh.micromath.math.Vector2D getMin()>();

        $d1 = $r4.<com.mkulesh.micromath.math.Vector2D: double x>;

        $b0 = $d1 cmpl 0.0;

        if $b0 <= 0 goto label4;

        $r3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r4 = virtualinvoke $r3.<com.mkulesh.micromath.plots.views.PhysicalArea: com.mkulesh.micromath.math.Vector2D getMin()>();

        $d1 = $r4.<com.mkulesh.micromath.math.Vector2D: double x>;

     label1:
        $r2.<com.mkulesh.micromath.math.Vector2D: double x> = $d1;

        $r2 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.math.Vector2D labelCenter>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r4 = virtualinvoke $r3.<com.mkulesh.micromath.plots.views.PhysicalArea: com.mkulesh.micromath.math.Vector2D getMin()>();

        $d1 = $r4.<com.mkulesh.micromath.math.Vector2D: double y>;

        $b0 = $d1 cmpl 0.0;

        if $b0 <= 0 goto label6;

        $r3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r4 = virtualinvoke $r3.<com.mkulesh.micromath.plots.views.PhysicalArea: com.mkulesh.micromath.math.Vector2D getMin()>();

        $d0 = $r4.<com.mkulesh.micromath.math.Vector2D: double y>;

     label2:
        $r2.<com.mkulesh.micromath.math.Vector2D: double y> = $d0;

     label3:
        $r5 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.properties.AxisProperties axisParameters>;

        $i1 = $r5.<com.mkulesh.micromath.properties.AxisProperties: int xLabelsNumber>;

        $r6 = specialinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] makeLabels(int,int)>(0, $i1);

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] xLabels> = $r6;

        $r5 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.properties.AxisProperties axisParameters>;

        $i1 = $r5.<com.mkulesh.micromath.properties.AxisProperties: int yLabelsNumber>;

        $r6 = specialinvoke r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] makeLabels(int,int)>(1, $i1);

        r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PlotView$Label[] yLabels> = $r6;

        return;

     label4:
        $r3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r4 = virtualinvoke $r3.<com.mkulesh.micromath.plots.views.PhysicalArea: com.mkulesh.micromath.math.Vector2D getMax()>();

        $d1 = $r4.<com.mkulesh.micromath.math.Vector2D: double x>;

        $b0 = $d1 cmpg 0.0;

        if $b0 >= 0 goto label5;

        $r3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r4 = virtualinvoke $r3.<com.mkulesh.micromath.plots.views.PhysicalArea: com.mkulesh.micromath.math.Vector2D getMax()>();

        $d1 = $r4.<com.mkulesh.micromath.math.Vector2D: double x>;

        goto label1;

     label5:
        $d1 = 0.0;

        goto label1;

     label6:
        $r3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r4 = virtualinvoke $r3.<com.mkulesh.micromath.plots.views.PhysicalArea: com.mkulesh.micromath.math.Vector2D getMax()>();

        $d1 = $r4.<com.mkulesh.micromath.math.Vector2D: double y>;

        $b0 = $d1 cmpg 0.0;

        if $b0 >= 0 goto label2;

        $r3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r4 = virtualinvoke $r3.<com.mkulesh.micromath.plots.views.PhysicalArea: com.mkulesh.micromath.math.Vector2D getMax()>();

        $d0 = $r4.<com.mkulesh.micromath.math.Vector2D: double y>;

        goto label2;

     label7:
        $r2 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.math.Vector2D labelCenter>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r4 = virtualinvoke $r3.<com.mkulesh.micromath.plots.views.PhysicalArea: com.mkulesh.micromath.math.Vector2D getMin()>();

        $d0 = $r4.<com.mkulesh.micromath.math.Vector2D: double x>;

        $r2.<com.mkulesh.micromath.math.Vector2D: double x> = $d0;

        $r2 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.math.Vector2D labelCenter>;

        $r3 = r0.<com.mkulesh.micromath.plots.views.PlanePlotView: com.mkulesh.micromath.plots.views.PhysicalArea area>;

        $r4 = virtualinvoke $r3.<com.mkulesh.micromath.plots.views.PhysicalArea: com.mkulesh.micromath.math.Vector2D getMin()>();

        $d0 = $r4.<com.mkulesh.micromath.math.Vector2D: double y>;

        $r2.<com.mkulesh.micromath.math.Vector2D: double y> = $d0;

        goto label3;
    }
