com.mkulesh.micromath.plots.PlotContour$Function3D extends java.lang.Object implements com.mkulesh.micromath.plots.FunctionIf
private final com.mkulesh.micromath.math.CalculatedValue[][] argValues
private final java.lang.String[] labels
private final double[][] minMaxValues
final com.mkulesh.micromath.plots.PlotContour this$0
private double[] xValues
private double[] yValues
private double[][] zValues
    public void <init>(com.mkulesh.micromath.plots.PlotContour)
    {
        com.mkulesh.micromath.plots.PlotContour$Function3D r0;
        com.mkulesh.micromath.plots.PlotContour $r1;
        double[] $r2, $r9;
        int[] $r3;
        java.lang.Class $r4;
        java.lang.Object $r5;
        double[][] $r6;
        com.mkulesh.micromath.math.CalculatedValue[][] $r7;
        java.lang.String[] $r8;
        int i0;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour$Function3D;

        $r1 := @parameter0: com.mkulesh.micromath.plots.PlotContour;

        r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: com.mkulesh.micromath.plots.PlotContour this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (double)[1];

        r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[] xValues> = $r2;

        $r2 = newarray (double)[1];

        r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[] yValues> = $r2;

        $r3 = newarray (int)[2];

        $r3[0] = 1;

        $r3[1] = 1;

        $r4 = <java.lang.Double: java.lang.Class TYPE>;

        $r5 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r4, $r3);

        $r6 = (double[][]) $r5;

        r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[][] zValues> = $r6;

        $r3 = newarray (int)[2];

        $r3[0] = 3;

        $r3[1] = 2;

        $r4 = <java.lang.Double: java.lang.Class TYPE>;

        $r5 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r4, $r3);

        $r6 = (double[][]) $r5;

        r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[][] minMaxValues> = $r6;

        $r3 = newarray (int)[2];

        $r3[0] = 2;

        $r3[1] = 1;

        $r5 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>(class "Lcom/mkulesh/micromath/math/CalculatedValue;", $r3);

        $r7 = (com.mkulesh.micromath.math.CalculatedValue[][]) $r5;

        r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: com.mkulesh.micromath.math.CalculatedValue[][] argValues> = $r7;

        $r8 = newarray (java.lang.String)[3];

        r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: java.lang.String[] labels> = $r8;

        i0 = 0;

     label1:
        if i0 >= 3 goto label2;

        $r6 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[][] minMaxValues>;

        $r2 = $r6[i0];

        $r6 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[][] minMaxValues>;

        $r9 = $r6[i0];

        $r9[1] = 0.0;

        $r2[0] = 0.0;

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }
    public void calculate(com.mkulesh.micromath.formula.CalculaterTask) throws com.mkulesh.micromath.formula.CalculaterTask$CancelException
    {
        com.mkulesh.micromath.plots.PlotContour$Function3D r0;
        com.mkulesh.micromath.formula.CalculaterTask $r1;
        com.mkulesh.micromath.math.CalculatedValue r2, $r15, $r18;
        com.mkulesh.micromath.plots.PlotContour $r3;
        java.util.ArrayList $r4;
        int $i0, $i1, $i2;
        double[][] $r5;
        double[] $r6, $r10;
        com.mkulesh.micromath.formula.TermField $r7;
        boolean $z0;
        double $d0, $d1;
        java.lang.Object $r8;
        com.mkulesh.micromath.formula.Equation $r9;
        java.lang.String[] $r11;
        java.lang.String $r12;
        com.mkulesh.micromath.math.CalculatedValue[][] $r13;
        com.mkulesh.micromath.math.CalculatedValue[] $r14;
        int[] $r16;
        java.lang.Class $r17;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour$Function3D;

        $r1 := @parameter0: com.mkulesh.micromath.formula.CalculaterTask;

        $r15 = new com.mkulesh.micromath.math.CalculatedValue;

        r2 = $r15;

        specialinvoke $r15.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        $r3 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: com.mkulesh.micromath.plots.PlotContour this$0>;

        $r4 = virtualinvoke $r3.<com.mkulesh.micromath.plots.PlotContour: java.util.ArrayList getDirectIntervals()>();

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i0 == 2 goto label01;

        return;

     label01:
        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[][] minMaxValues>;

        $r6 = $r5[0];

        $d0 = (double) -4503599627370496L;

        $r6[0] = $d0;

        $r3 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: com.mkulesh.micromath.plots.PlotContour this$0>;

        $r7 = staticinvoke <com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField access$200(com.mkulesh.micromath.plots.PlotContour)>($r3);

        $z0 = virtualinvoke $r7.<com.mkulesh.micromath.formula.TermField: boolean isEmpty()>();

        if $z0 != 0 goto label02;

        $r3 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: com.mkulesh.micromath.plots.PlotContour this$0>;

        $r7 = staticinvoke <com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField access$200(com.mkulesh.micromath.plots.PlotContour)>($r3);

        virtualinvoke $r15.<com.mkulesh.micromath.math.CalculatedValue: void processRealTerm(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.formula.TermField)>($r1, $r7);

        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[][] minMaxValues>;

        $r6 = $r5[0];

        $d0 = virtualinvoke $r15.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $r6[0] = $d0;

     label02:
        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[][] minMaxValues>;

        $r6 = $r5[0];

        $d0 = (double) 9218868437227405312L;

        $r6[1] = $d0;

        $r3 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: com.mkulesh.micromath.plots.PlotContour this$0>;

        $r7 = staticinvoke <com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField access$300(com.mkulesh.micromath.plots.PlotContour)>($r3);

        $z0 = virtualinvoke $r7.<com.mkulesh.micromath.formula.TermField: boolean isEmpty()>();

        if $z0 != 0 goto label03;

        $r3 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: com.mkulesh.micromath.plots.PlotContour this$0>;

        $r7 = staticinvoke <com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField access$300(com.mkulesh.micromath.plots.PlotContour)>($r3);

        virtualinvoke r2.<com.mkulesh.micromath.math.CalculatedValue: void processRealTerm(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.formula.TermField)>($r1, $r7);

        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[][] minMaxValues>;

        $r6 = $r5[0];

        $d0 = virtualinvoke r2.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $r6[1] = $d0;

     label03:
        $r8 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r9 = (com.mkulesh.micromath.formula.Equation) $r8;

        $r6 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[] xValues>;

        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[][] minMaxValues>;

        $r10 = $r5[0];

        $r6 = virtualinvoke $r9.<com.mkulesh.micromath.formula.Equation: double[] fillBoundedInterval(com.mkulesh.micromath.formula.CalculaterTask,double[],double[])>($r1, $r6, $r10);

        r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[] xValues> = $r6;

        $r6 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[] xValues>;

        if $r6 == null goto label13;

        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[][] minMaxValues>;

        $r6 = $r5[1];

        $d0 = (double) -4503599627370496L;

        $r6[0] = $d0;

        $r3 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: com.mkulesh.micromath.plots.PlotContour this$0>;

        $r7 = staticinvoke <com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField access$400(com.mkulesh.micromath.plots.PlotContour)>($r3);

        $z0 = virtualinvoke $r7.<com.mkulesh.micromath.formula.TermField: boolean isEmpty()>();

        if $z0 != 0 goto label04;

        $r3 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: com.mkulesh.micromath.plots.PlotContour this$0>;

        $r7 = staticinvoke <com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField access$400(com.mkulesh.micromath.plots.PlotContour)>($r3);

        virtualinvoke r2.<com.mkulesh.micromath.math.CalculatedValue: void processRealTerm(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.formula.TermField)>($r1, $r7);

        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[][] minMaxValues>;

        $r6 = $r5[1];

        $d0 = virtualinvoke r2.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $r6[0] = $d0;

     label04:
        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[][] minMaxValues>;

        $r6 = $r5[1];

        $d0 = (double) 9218868437227405312L;

        $r6[1] = $d0;

        $r3 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: com.mkulesh.micromath.plots.PlotContour this$0>;

        $r7 = staticinvoke <com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField access$500(com.mkulesh.micromath.plots.PlotContour)>($r3);

        $z0 = virtualinvoke $r7.<com.mkulesh.micromath.formula.TermField: boolean isEmpty()>();

        if $z0 != 0 goto label05;

        $r3 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: com.mkulesh.micromath.plots.PlotContour this$0>;

        $r7 = staticinvoke <com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField access$500(com.mkulesh.micromath.plots.PlotContour)>($r3);

        virtualinvoke r2.<com.mkulesh.micromath.math.CalculatedValue: void processRealTerm(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.formula.TermField)>($r1, $r7);

        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[][] minMaxValues>;

        $r6 = $r5[1];

        $d0 = virtualinvoke r2.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $r6[1] = $d0;

     label05:
        $r8 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(1);

        $r9 = (com.mkulesh.micromath.formula.Equation) $r8;

        $r6 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[] yValues>;

        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[][] minMaxValues>;

        $r10 = $r5[1];

        $r6 = virtualinvoke $r9.<com.mkulesh.micromath.formula.Equation: double[] fillBoundedInterval(com.mkulesh.micromath.formula.CalculaterTask,double[],double[])>($r1, $r6, $r10);

        r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[] yValues> = $r6;

        $r6 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[] yValues>;

        if $r6 == null goto label13;

        $r11 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: java.lang.String[] labels>;

        $r8 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r9 = (com.mkulesh.micromath.formula.Equation) $r8;

        $r12 = virtualinvoke $r9.<com.mkulesh.micromath.formula.Equation: java.lang.String getName()>();

        $r11[0] = $r12;

        $r11 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: java.lang.String[] labels>;

        $r8 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(1);

        $r9 = (com.mkulesh.micromath.formula.Equation) $r8;

        $r12 = virtualinvoke $r9.<com.mkulesh.micromath.formula.Equation: java.lang.String getName()>();

        $r11[1] = $r12;

        $r11 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: java.lang.String[] labels>;

        $r11[2] = "";

        $r13 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: com.mkulesh.micromath.math.CalculatedValue[][] argValues>;

        $r14 = $r13[0];

        $r15 = $r14[0];

        if $r15 != null goto label06;

        $r13 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: com.mkulesh.micromath.math.CalculatedValue[][] argValues>;

        $r14 = $r13[0];

        $r18 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r18.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        $r14[0] = $r18;

        $r13 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: com.mkulesh.micromath.math.CalculatedValue[][] argValues>;

        $r14 = $r13[1];

        $r18 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r18.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        $r14[0] = $r18;

     label06:
        $r6 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[] xValues>;

        $i0 = lengthof $r6;

        $r6 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[] yValues>;

        $i1 = lengthof $r6;

        $r16 = newarray (int)[2];

        $r16[0] = $i0;

        $r16[1] = $i1;

        $r17 = <java.lang.Double: java.lang.Class TYPE>;

        $r8 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r17, $r16);

        $r5 = (double[][]) $r8;

        r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[][] zValues> = $r5;

        $i0 = 0;

     label07:
        $r6 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[] xValues>;

        $i1 = lengthof $r6;

        if $i0 >= $i1 goto label12;

        $r13 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: com.mkulesh.micromath.math.CalculatedValue[][] argValues>;

        $r14 = $r13[0];

        $r15 = $r14[0];

        $r6 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[] xValues>;

        $d0 = $r6[$i0];

        virtualinvoke $r15.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>($d0);

        $r8 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r9 = (com.mkulesh.micromath.formula.Equation) $r8;

        $r13 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: com.mkulesh.micromath.math.CalculatedValue[][] argValues>;

        $r14 = $r13[0];

        virtualinvoke $r9.<com.mkulesh.micromath.formula.Equation: boolean setArgumentValues(com.mkulesh.micromath.math.CalculatedValue[])>($r14);

        $i1 = 0;

     label08:
        $r6 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[] yValues>;

        $i2 = lengthof $r6;

        if $i1 >= $i2 goto label11;

        $r13 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: com.mkulesh.micromath.math.CalculatedValue[][] argValues>;

        $r14 = $r13[1];

        $r15 = $r14[0];

        $r6 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[] yValues>;

        $d0 = $r6[$i1];

        virtualinvoke $r15.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>($d0);

        $r8 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(1);

        $r9 = (com.mkulesh.micromath.formula.Equation) $r8;

        $r13 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: com.mkulesh.micromath.math.CalculatedValue[][] argValues>;

        $r14 = $r13[1];

        virtualinvoke $r9.<com.mkulesh.micromath.formula.Equation: boolean setArgumentValues(com.mkulesh.micromath.math.CalculatedValue[])>($r14);

        $r3 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: com.mkulesh.micromath.plots.PlotContour this$0>;

        $r7 = staticinvoke <com.mkulesh.micromath.plots.PlotContour: com.mkulesh.micromath.formula.TermField access$600(com.mkulesh.micromath.plots.PlotContour)>($r3);

        virtualinvoke r2.<com.mkulesh.micromath.math.CalculatedValue: void processRealTerm(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.formula.TermField)>($r1, $r7);

        $d0 = virtualinvoke r2.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[][] zValues>;

        $r6 = $r5[$i0];

        $r6[$i1] = $d0;

        if $i0 != 0 goto label10;

        if $i1 != 0 goto label10;

        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[][] minMaxValues>;

        $r6 = $r5[2];

        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[][] minMaxValues>;

        $r10 = $r5[2];

        $r10[1] = $d0;

        $r6[0] = $d0;

     label09:
        $i1 = $i1 + 1;

        goto label08;

     label10:
        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[][] minMaxValues>;

        $r6 = $r5[2];

        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[][] minMaxValues>;

        $r10 = $r5[2];

        $d1 = $r10[0];

        $d1 = staticinvoke <java.lang.Math: double min(double,double)>($d1, $d0);

        $r6[0] = $d1;

        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[][] minMaxValues>;

        $r6 = $r5[2];

        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[][] minMaxValues>;

        $r10 = $r5[2];

        $d1 = $r10[1];

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d1, $d0);

        $r6[1] = $d0;

        goto label09;

     label11:
        $i0 = $i0 + 1;

        goto label07;

     label12:
        $r3 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: com.mkulesh.micromath.plots.PlotContour this$0>;

        $r5 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[][] minMaxValues>;

        $r6 = $r5[2];

        staticinvoke <com.mkulesh.micromath.plots.PlotContour: void access$700(com.mkulesh.micromath.plots.PlotContour,double[])>($r3, $r6);

     label13:
        return;
    }
    public java.lang.String[] getLabels()
    {
        com.mkulesh.micromath.plots.PlotContour$Function3D r0;
        java.lang.String[] r1;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour$Function3D;

        r1 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: java.lang.String[] labels>;

        return r1;
    }
    public com.mkulesh.micromath.properties.LineProperties getLineParameters()
    {
        com.mkulesh.micromath.plots.PlotContour$Function3D r0;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour$Function3D;

        return null;
    }
    public double[] getMinMaxValues(int)
    {
        com.mkulesh.micromath.plots.PlotContour$Function3D r0;
        int $i0, $i1;
        double[][] $r1;
        double[] $r2;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour$Function3D;

        $i0 := @parameter0: int;

        $r1 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[][] minMaxValues>;

        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label1;

        $r1 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[][] minMaxValues>;

        $r2 = $r1[$i0];

        return $r2;

     label1:
        return null;
    }
    public com.mkulesh.micromath.plots.FunctionIf$Type getType()
    {
        com.mkulesh.micromath.plots.PlotContour$Function3D r0;
        com.mkulesh.micromath.plots.FunctionIf$Type r1;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour$Function3D;

        r1 = <com.mkulesh.micromath.plots.FunctionIf$Type: com.mkulesh.micromath.plots.FunctionIf$Type FUNCTION_3D>;

        return r1;
    }
    public double[] getXValues()
    {
        com.mkulesh.micromath.plots.PlotContour$Function3D r0;
        double[] r1;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour$Function3D;

        r1 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[] xValues>;

        return r1;
    }
    public double[] getYValues()
    {
        com.mkulesh.micromath.plots.PlotContour$Function3D r0;
        double[] r1;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour$Function3D;

        r1 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[] yValues>;

        return r1;
    }
    public double[][] getZValues()
    {
        com.mkulesh.micromath.plots.PlotContour$Function3D r0;
        double[][] r1;

        r0 := @this: com.mkulesh.micromath.plots.PlotContour$Function3D;

        r1 = r0.<com.mkulesh.micromath.plots.PlotContour$Function3D: double[][] zValues>;

        return r1;
    }
