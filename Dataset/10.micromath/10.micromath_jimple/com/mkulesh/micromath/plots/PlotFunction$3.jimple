com.mkulesh.micromath.plots.PlotFunction$3 extends java.lang.Object implements java.util.Comparator
final com.mkulesh.micromath.plots.PlotFunction this$0
    void <init>(com.mkulesh.micromath.plots.PlotFunction)
    {
        com.mkulesh.micromath.plots.PlotFunction$3 r0;
        com.mkulesh.micromath.plots.PlotFunction $r1;

        r0 := @this: com.mkulesh.micromath.plots.PlotFunction$3;

        $r1 := @parameter0: com.mkulesh.micromath.plots.PlotFunction;

        r0.<com.mkulesh.micromath.plots.PlotFunction$3: com.mkulesh.micromath.plots.PlotFunction this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public int compare(com.mkulesh.micromath.plots.PlotFunction$Function2D, com.mkulesh.micromath.plots.PlotFunction$Function2D)
    {
        com.mkulesh.micromath.plots.PlotFunction$3 r0;
        com.mkulesh.micromath.plots.PlotFunction$Function2D $r1, $r2;
        int $i0, $i1;

        r0 := @this: com.mkulesh.micromath.plots.PlotFunction$3;

        $r1 := @parameter0: com.mkulesh.micromath.plots.PlotFunction$Function2D;

        $r2 := @parameter1: com.mkulesh.micromath.plots.PlotFunction$Function2D;

        $i0 = $r1.<com.mkulesh.micromath.plots.PlotFunction$Function2D: int index>;

        $i1 = $r2.<com.mkulesh.micromath.plots.PlotFunction$Function2D: int index>;

        if $i0 != $i1 goto label1;

        return 0;

     label1:
        $i0 = $r1.<com.mkulesh.micromath.plots.PlotFunction$Function2D: int index>;

        $i1 = $r2.<com.mkulesh.micromath.plots.PlotFunction$Function2D: int index>;

        if $i0 >= $i1 goto label2;

        return -1;

     label2:
        return 1;
    }
    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        com.mkulesh.micromath.plots.PlotFunction$3 r0;
        int $i0;
        java.lang.Object $r1, $r2;
        com.mkulesh.micromath.plots.PlotFunction$Function2D $r3, $r4;

        r0 := @this: com.mkulesh.micromath.plots.PlotFunction$3;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (com.mkulesh.micromath.plots.PlotFunction$Function2D) $r1;

        $r4 = (com.mkulesh.micromath.plots.PlotFunction$Function2D) $r2;

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.plots.PlotFunction$3: int compare(com.mkulesh.micromath.plots.PlotFunction$Function2D,com.mkulesh.micromath.plots.PlotFunction$Function2D)>($r3, $r4);

        return $i0;
    }
