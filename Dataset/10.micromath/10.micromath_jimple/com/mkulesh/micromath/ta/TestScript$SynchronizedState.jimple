com.mkulesh.micromath.ta.TestScript$SynchronizedState extends java.lang.Object
private com.mkulesh.micromath.ta.TestScript$State mystate
final com.mkulesh.micromath.ta.TestScript this$0
    public void <init>(com.mkulesh.micromath.ta.TestScript)
    {
        com.mkulesh.micromath.ta.TestScript$SynchronizedState r0;
        com.mkulesh.micromath.ta.TestScript $r1;

        r0 := @this: com.mkulesh.micromath.ta.TestScript$SynchronizedState;

        $r1 := @parameter0: com.mkulesh.micromath.ta.TestScript;

        r0.<com.mkulesh.micromath.ta.TestScript$SynchronizedState: com.mkulesh.micromath.ta.TestScript this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mkulesh.micromath.ta.TestScript$SynchronizedState: com.mkulesh.micromath.ta.TestScript$State mystate> = null;

        return;
    }
    public com.mkulesh.micromath.ta.TestScript$State get()
    {
        com.mkulesh.micromath.ta.TestScript$SynchronizedState r0;
        com.mkulesh.micromath.ta.TestScript$State r1;

        r0 := @this: com.mkulesh.micromath.ta.TestScript$SynchronizedState;

        r1 = r0.<com.mkulesh.micromath.ta.TestScript$SynchronizedState: com.mkulesh.micromath.ta.TestScript$State mystate>;

        return r1;
    }
    public void set(com.mkulesh.micromath.ta.TestScript$State)
    {
        com.mkulesh.micromath.ta.TestScript$SynchronizedState r0;
        com.mkulesh.micromath.ta.TestScript$State $r1;
        java.lang.Throwable $r2;

        r0 := @this: com.mkulesh.micromath.ta.TestScript$SynchronizedState;

        $r1 := @parameter0: com.mkulesh.micromath.ta.TestScript$State;

        entermonitor r0;

     label1:
        r0.<com.mkulesh.micromath.ta.TestScript$SynchronizedState: com.mkulesh.micromath.ta.TestScript$State mystate> = $r1;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
