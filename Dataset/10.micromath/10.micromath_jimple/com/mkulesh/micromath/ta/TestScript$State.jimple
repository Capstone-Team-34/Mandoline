com.mkulesh.micromath.ta.TestScript$State extends java.lang.Enum
private static final com.mkulesh.micromath.ta.TestScript$State[] $VALUES
public static final enum com.mkulesh.micromath.ta.TestScript$State CALCULATE
public static final enum com.mkulesh.micromath.ta.TestScript$State CALCULATE_FINISHED
public static final enum com.mkulesh.micromath.ta.TestScript$State LOAD
public static final enum com.mkulesh.micromath.ta.TestScript$State LOAD_FINISHED
    static void <clinit>()
    {
        com.mkulesh.micromath.ta.TestScript$State $r0;
        com.mkulesh.micromath.ta.TestScript$State[] $r1;

        $r0 = new com.mkulesh.micromath.ta.TestScript$State;

        specialinvoke $r0.<com.mkulesh.micromath.ta.TestScript$State: void <init>(java.lang.String,int)>("LOAD", 0);

        <com.mkulesh.micromath.ta.TestScript$State: com.mkulesh.micromath.ta.TestScript$State LOAD> = $r0;

        $r0 = new com.mkulesh.micromath.ta.TestScript$State;

        specialinvoke $r0.<com.mkulesh.micromath.ta.TestScript$State: void <init>(java.lang.String,int)>("CALCULATE", 1);

        <com.mkulesh.micromath.ta.TestScript$State: com.mkulesh.micromath.ta.TestScript$State CALCULATE> = $r0;

        $r0 = new com.mkulesh.micromath.ta.TestScript$State;

        specialinvoke $r0.<com.mkulesh.micromath.ta.TestScript$State: void <init>(java.lang.String,int)>("LOAD_FINISHED", 2);

        <com.mkulesh.micromath.ta.TestScript$State: com.mkulesh.micromath.ta.TestScript$State LOAD_FINISHED> = $r0;

        $r0 = new com.mkulesh.micromath.ta.TestScript$State;

        specialinvoke $r0.<com.mkulesh.micromath.ta.TestScript$State: void <init>(java.lang.String,int)>("CALCULATE_FINISHED", 3);

        <com.mkulesh.micromath.ta.TestScript$State: com.mkulesh.micromath.ta.TestScript$State CALCULATE_FINISHED> = $r0;

        $r1 = newarray (com.mkulesh.micromath.ta.TestScript$State)[4];

        $r0 = <com.mkulesh.micromath.ta.TestScript$State: com.mkulesh.micromath.ta.TestScript$State LOAD>;

        $r1[0] = $r0;

        $r0 = <com.mkulesh.micromath.ta.TestScript$State: com.mkulesh.micromath.ta.TestScript$State CALCULATE>;

        $r1[1] = $r0;

        $r0 = <com.mkulesh.micromath.ta.TestScript$State: com.mkulesh.micromath.ta.TestScript$State LOAD_FINISHED>;

        $r1[2] = $r0;

        $r0 = <com.mkulesh.micromath.ta.TestScript$State: com.mkulesh.micromath.ta.TestScript$State CALCULATE_FINISHED>;

        $r1[3] = $r0;

        <com.mkulesh.micromath.ta.TestScript$State: com.mkulesh.micromath.ta.TestScript$State[] $VALUES> = $r1;

        return;
    }
    private void <init>(java.lang.String, int)
    {
        com.mkulesh.micromath.ta.TestScript$State r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: com.mkulesh.micromath.ta.TestScript$State;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }
    public static com.mkulesh.micromath.ta.TestScript$State valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        com.mkulesh.micromath.ta.TestScript$State $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/mkulesh/micromath/ta/TestScript$State;", $r0);

        $r2 = (com.mkulesh.micromath.ta.TestScript$State) $r1;

        return $r2;
    }
    public static com.mkulesh.micromath.ta.TestScript$State[] values()
    {
        java.lang.Object $r0;
        com.mkulesh.micromath.ta.TestScript$State[] $r1;

        $r1 = <com.mkulesh.micromath.ta.TestScript$State: com.mkulesh.micromath.ta.TestScript$State[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (com.mkulesh.micromath.ta.TestScript$State[]) $r0;

        return $r1;
    }
