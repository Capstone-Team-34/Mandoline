com.mkulesh.micromath.ta.TestSession extends android.os.AsyncTask
public static final java.lang.String EXPORT_DOC_DIR
public static final java.lang.String REPORT_HTML_FILE
private static final int STEP_CALC
private static final int STEP_EXPORT
private static final int STEP_READ
public static final java.lang.String TAKE_SCREENSHOTS_DIR
public static final java.lang.String TEST_CONFIGURATION
private final android.app.Activity context
private final com.mkulesh.micromath.formula.FormulaList formulas
private final com.mkulesh.micromath.utils.SynchronizedBoolean isPublishRuns
private final com.mkulesh.micromath.ta.TestSession$Mode mode
private final java.lang.CharSequence[] scripts
private com.mkulesh.micromath.ta.TestScript testScript
private final java.util.ArrayList testScripts
    public void <init>(com.mkulesh.micromath.formula.FormulaList, com.mkulesh.micromath.ta.TestSession$Mode)
    {
        com.mkulesh.micromath.ta.TestSession r0;
        com.mkulesh.micromath.formula.FormulaList $r1;
        com.mkulesh.micromath.ta.TestSession$Mode $r2;
        com.mkulesh.micromath.utils.SynchronizedBoolean $r3;
        java.util.ArrayList $r4;
        android.support.v7.app.AppCompatActivity $r5;
        int[] $r6;
        int $i0;
        android.app.Activity $r7;
        android.content.res.Resources $r8;
        java.lang.String[] $r9;

        r0 := @this: com.mkulesh.micromath.ta.TestSession;

        $r1 := @parameter0: com.mkulesh.micromath.formula.FormulaList;

        $r2 := @parameter1: com.mkulesh.micromath.ta.TestSession$Mode;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        $r3 = new com.mkulesh.micromath.utils.SynchronizedBoolean;

        specialinvoke $r3.<com.mkulesh.micromath.utils.SynchronizedBoolean: void <init>()>();

        r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.utils.SynchronizedBoolean isPublishRuns> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.mkulesh.micromath.ta.TestSession: java.util.ArrayList testScripts> = $r4;

        r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.ta.TestScript testScript> = null;

        r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.formula.FormulaList formulas> = $r1;

        $r5 = virtualinvoke $r1.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        r0.<com.mkulesh.micromath.ta.TestSession: android.app.Activity context> = $r5;

        r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.ta.TestSession$Mode mode> = $r2;

        $r6 = <com.mkulesh.micromath.ta.TestSession$1: int[] $SwitchMap$com$mkulesh$micromath$ta$TestSession$Mode>;

        $i0 = virtualinvoke $r2.<com.mkulesh.micromath.ta.TestSession$Mode: int ordinal()>();

        $i0 = $r6[$i0];

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label1;
        };

     label1:
        r0.<com.mkulesh.micromath.ta.TestSession: java.lang.CharSequence[] scripts> = null;

     label2:
        virtualinvoke $r1.<com.mkulesh.micromath.formula.FormulaList: void setTaSession(com.mkulesh.micromath.ta.TestSession)>(r0);

        return;

     label3:
        $r7 = r0.<com.mkulesh.micromath.ta.TestSession: android.app.Activity context>;

        $r8 = virtualinvoke $r7.<android.app.Activity: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r8.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(2131165191);

        r0.<com.mkulesh.micromath.ta.TestSession: java.lang.CharSequence[] scripts> = $r9;

        goto label2;

     label4:
        $r7 = r0.<com.mkulesh.micromath.ta.TestSession: android.app.Activity context>;

        $r8 = virtualinvoke $r7.<android.app.Activity: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r8.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(2131165192);

        r0.<com.mkulesh.micromath.ta.TestSession: java.lang.CharSequence[] scripts> = $r9;

        goto label2;

     label5:
        $r7 = r0.<com.mkulesh.micromath.ta.TestSession: android.app.Activity context>;

        $r8 = virtualinvoke $r7.<android.app.Activity: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r8.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(2131165189);

        r0.<com.mkulesh.micromath.ta.TestSession: java.lang.CharSequence[] scripts> = $r9;

        goto label2;
    }
    private void callPublish(int, int) throws java.lang.InterruptedException
    {
        com.mkulesh.micromath.ta.TestSession r0;
        int $i0, $i1;
        com.mkulesh.micromath.utils.SynchronizedBoolean $r1, $r4;
        java.lang.Integer[] $r2;
        java.lang.Integer $r3;
        boolean $z0;
        java.lang.Throwable $r5;

        r0 := @this: com.mkulesh.micromath.ta.TestSession;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.utils.SynchronizedBoolean isPublishRuns>;

        virtualinvoke $r1.<com.mkulesh.micromath.utils.SynchronizedBoolean: void set(boolean)>(1);

        $r2 = newarray (java.lang.Integer)[2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[0] = $r3;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r2[1] = $r3;

        virtualinvoke r0.<com.mkulesh.micromath.ta.TestSession: void publishProgress(java.lang.Object[])>($r2);

        $r1 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.utils.SynchronizedBoolean isPublishRuns>;

        entermonitor $r1;

     label1:
        $r4 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.utils.SynchronizedBoolean isPublishRuns>;

        $z0 = virtualinvoke $r4.<com.mkulesh.micromath.utils.SynchronizedBoolean: boolean isSet()>();

        if $z0 == 0 goto label4;

        $r4 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.utils.SynchronizedBoolean isPublishRuns>;

        virtualinvoke $r4.<java.lang.Object: void wait()>();

        goto label1;

     label2:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label3:
        throw $r5;

     label4:
        exitmonitor $r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label3 with label2;
        catch java.lang.Throwable from label4 to label5 with label2;
    }
    private void exportLatex(java.lang.String, java.lang.String)
    {
        com.mkulesh.micromath.ta.TestSession r0;
        java.lang.String $r1, $r2, $r9;
        com.mkulesh.micromath.fman.AdapterFileSystem r3;
        java.io.File r4, r5;
        com.mkulesh.micromath.export.Exporter$Parameters r6;
        java.lang.StringBuilder $r7;
        android.app.Activity $r8;
        android.net.Uri $r10, $r11;
        com.mkulesh.micromath.formula.FormulaList $r12;
        com.mkulesh.micromath.fman.FileType $r13;

        r0 := @this: com.mkulesh.micromath.ta.TestSession;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        r4 = new java.io.File;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = r0.<com.mkulesh.micromath.ta.TestSession: android.app.Activity context>;

        r5 = virtualinvoke $r8.<android.app.Activity: java.io.File getExternalFilesDir(java.lang.String)>(null);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r4.<java.io.File: void <init>(java.lang.String)>($r9);

        virtualinvoke r4.<java.io.File: boolean mkdir()>();

        r5 = new java.io.File;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tex");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r5.<java.io.File: void <init>(java.io.File,java.lang.String)>(r4, $r9);

        $r10 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>(r5);

        $r10 = staticinvoke <com.mkulesh.micromath.fman.FileUtils: android.net.Uri ensureScheme(android.net.Uri)>($r10);

        r4 = new java.io.File;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = r0.<com.mkulesh.micromath.ta.TestSession: android.app.Activity context>;

        r5 = virtualinvoke $r8.<android.app.Activity: java.io.File getExternalFilesDir(java.lang.String)>(null);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("graphics");

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r4.<java.io.File: void <init>(java.lang.String)>($r1);

        virtualinvoke r4.<java.io.File: boolean mkdir()>();

        $r11 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>(r4);

        $r11 = staticinvoke <com.mkulesh.micromath.fman.FileUtils: android.net.Uri ensureScheme(android.net.Uri)>($r11);

        r3 = new com.mkulesh.micromath.fman.AdapterFileSystem;

        $r8 = r0.<com.mkulesh.micromath.ta.TestSession: android.app.Activity context>;

        specialinvoke r3.<com.mkulesh.micromath.fman.AdapterFileSystem: void <init>(android.content.Context)>($r8);

        virtualinvoke r3.<com.mkulesh.micromath.fman.AdapterFileSystem: void setUri(android.net.Uri)>($r11);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exporting document ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", graphics uri: ");

        $r1 = virtualinvoke r3.<com.mkulesh.micromath.fman.AdapterFileSystem: java.lang.String getDir()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.mkulesh.micromath.utils.ViewUtils: void Debug(java.lang.Object,java.lang.String)>(r0, $r1);

        r6 = new com.mkulesh.micromath.export.Exporter$Parameters;

        specialinvoke r6.<com.mkulesh.micromath.export.Exporter$Parameters: void <init>()>();

        r6.<com.mkulesh.micromath.export.Exporter$Parameters: boolean skipDocumentHeader> = 1;

        r6.<com.mkulesh.micromath.export.Exporter$Parameters: boolean skipImageLocale> = 1;

        r6.<com.mkulesh.micromath.export.Exporter$Parameters: java.lang.String imageDirectory> = "graphics";

        $r12 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.formula.FormulaList formulas>;

        $r13 = <com.mkulesh.micromath.fman.FileType: com.mkulesh.micromath.fman.FileType LATEX>;

        staticinvoke <com.mkulesh.micromath.export.Exporter: boolean write(com.mkulesh.micromath.formula.FormulaList,android.net.Uri,com.mkulesh.micromath.fman.FileType,com.mkulesh.micromath.fman.AdapterIf,com.mkulesh.micromath.export.Exporter$Parameters)>($r12, $r10, $r13, r3, r6);

        return;
    }
    public static boolean isAutotestOnStart(android.content.Context)
    {
        android.content.Context $r0;
        java.io.File r1, $r2;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        r1 = new java.io.File;

        $r2 = virtualinvoke $r0.<android.content.Context: java.io.File getExternalFilesDir(java.lang.String)>(null);

        specialinvoke r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "autotest.cfg");

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        return $z0;
    }
    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        com.mkulesh.micromath.ta.TestSession r0;
        java.lang.Void $r1;
        java.lang.Object[] $r2;
        java.lang.Void[] $r3;

        r0 := @this: com.mkulesh.micromath.ta.TestSession;

        $r2 := @parameter0: java.lang.Object[];

        $r3 = (java.lang.Void[]) $r2;

        $r1 = virtualinvoke r0.<com.mkulesh.micromath.ta.TestSession: java.lang.Void doInBackground(java.lang.Void[])>($r3);

        return $r1;
    }
    protected transient java.lang.Void doInBackground(java.lang.Void[])
    {
        com.mkulesh.micromath.ta.TestSession r0;
        java.lang.Void[] $r1;
        java.lang.Exception r2;
        java.lang.StringBuilder $r3;
        java.lang.CharSequence[] $r4;
        int $i0, $i1;
        java.lang.String $r5;
        com.mkulesh.micromath.utils.SynchronizedBoolean $r6;
        java.lang.CharSequence $r7;
        android.net.Uri $r8;
        boolean $z0;
        com.mkulesh.micromath.ta.TestScript $r9;
        com.mkulesh.micromath.ta.TestScript$State[] $r10;
        com.mkulesh.micromath.ta.TestScript$State $r11, $r12;
        com.mkulesh.micromath.ta.TestSession$Mode $r13, $r14;
        java.util.ArrayList $r15;
        com.mkulesh.micromath.formula.FormulaList $r16;

        r0 := @this: com.mkulesh.micromath.ta.TestSession;

        $r1 := @parameter0: java.lang.Void[];

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Autotest session is started, session contains ");

        $r4 = r0.<com.mkulesh.micromath.ta.TestSession: java.lang.CharSequence[] scripts>;

        $i0 = lengthof $r4;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" scripts");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.mkulesh.micromath.utils.ViewUtils: void Debug(java.lang.Object,java.lang.String)>(r0, $r5);

        $r6 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.utils.SynchronizedBoolean isPublishRuns>;

        virtualinvoke $r6.<com.mkulesh.micromath.utils.SynchronizedBoolean: void set(boolean)>(0);

        $i0 = 0;

     label01:
        $r4 = r0.<com.mkulesh.micromath.ta.TestSession: java.lang.CharSequence[] scripts>;

        $i1 = lengthof $r4;

     label02:
        if $i0 >= $i1 goto label20;

     label03:
        $r4 = r0.<com.mkulesh.micromath.ta.TestSession: java.lang.CharSequence[] scripts>;

        $r7 = $r4[$i0];

        $r5 = (java.lang.String) $r7;

        $r8 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r5);

        $z0 = staticinvoke <com.mkulesh.micromath.fman.FileUtils: boolean isAssetUri(android.net.Uri)>($r8);

     label04:
        if $z0 != 0 goto label06;

     label05:
        $i0 = $i0 + 1;

        goto label01;

     label06:
        $r9 = new com.mkulesh.micromath.ta.TestScript;

     label07:
        $r5 = virtualinvoke $r8.<android.net.Uri: java.lang.String toString()>();

        specialinvoke $r9.<com.mkulesh.micromath.ta.TestScript: void <init>(java.lang.String)>($r5);

        r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.ta.TestScript testScript> = $r9;

     label08:
        $i1 = 0;

     label09:
        if $i1 >= 2 goto label17;

     label10:
        $r9 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.ta.TestScript testScript>;

        $r10 = staticinvoke <com.mkulesh.micromath.ta.TestScript$State: com.mkulesh.micromath.ta.TestScript$State[] values()>();

        $r11 = $r10[$i1];

        virtualinvoke $r9.<com.mkulesh.micromath.ta.TestScript: void setState(com.mkulesh.micromath.ta.TestScript$State)>($r11);

        $r9 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.ta.TestScript testScript>;

        $r11 = virtualinvoke $r9.<com.mkulesh.micromath.ta.TestScript: com.mkulesh.micromath.ta.TestScript$State getState()>();

        specialinvoke r0.<com.mkulesh.micromath.ta.TestSession: void callPublish(int,int)>($i1, $i0);

        $r9 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.ta.TestScript testScript>;

        $r11 = virtualinvoke $r9.<com.mkulesh.micromath.ta.TestScript: com.mkulesh.micromath.ta.TestScript$State waitStateChange(com.mkulesh.micromath.ta.TestScript$State)>($r11);

     label11:
        $r12 = <com.mkulesh.micromath.ta.TestScript$State: com.mkulesh.micromath.ta.TestScript$State CALCULATE_FINISHED>;

        if $r11 != $r12 goto label21;

     label12:
        $r13 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.ta.TestSession$Mode mode>;

     label13:
        $r14 = <com.mkulesh.micromath.ta.TestSession$Mode: com.mkulesh.micromath.ta.TestSession$Mode EXPORT_DOC>;

        if $r13 == $r14 goto label16;

     label14:
        $r13 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.ta.TestSession$Mode mode>;

     label15:
        $r14 = <com.mkulesh.micromath.ta.TestSession$Mode: com.mkulesh.micromath.ta.TestSession$Mode TAKE_SCREENSHOTS>;

        if $r13 != $r14 goto label17;

     label16:
        specialinvoke r0.<com.mkulesh.micromath.ta.TestSession: void callPublish(int,int)>(2, $i0);

     label17:
        $r9 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.ta.TestScript testScript>;

        virtualinvoke $r9.<com.mkulesh.micromath.ta.TestScript: void finish()>();

        $r15 = r0.<com.mkulesh.micromath.ta.TestSession: java.util.ArrayList testScripts>;

        $r9 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.ta.TestScript testScript>;

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.ta.TestScript testScript> = null;

        staticinvoke <java.lang.Thread: void sleep(long)>(500L);

     label18:
        goto label05;

     label19:
        r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can not execute test script: ");

        $r5 = virtualinvoke r2.<java.lang.Exception: java.lang.String getLocalizedMessage()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.mkulesh.micromath.utils.ViewUtils: void Debug(java.lang.Object,java.lang.String)>(r0, $r5);

     label20:
        $r16 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.formula.FormulaList formulas>;

        virtualinvoke $r16.<com.mkulesh.micromath.formula.FormulaList: void setTaSession(com.mkulesh.micromath.ta.TestSession)>(null);

        $r5 = virtualinvoke r0.<com.mkulesh.micromath.ta.TestSession: java.lang.String getDescription()>();

        staticinvoke <com.mkulesh.micromath.utils.ViewUtils: void Debug(java.lang.Object,java.lang.String)>(r0, $r5);

        return null;

     label21:
        $i1 = $i1 + 1;

        goto label09;

        catch java.lang.Exception from label01 to label02 with label19;
        catch java.lang.Exception from label03 to label04 with label19;
        catch java.lang.Exception from label07 to label08 with label19;
        catch java.lang.Exception from label10 to label11 with label19;
        catch java.lang.Exception from label12 to label13 with label19;
        catch java.lang.Exception from label14 to label15 with label19;
        catch java.lang.Exception from label16 to label18 with label19;
    }
    public java.lang.String getDescription()
    {
        com.mkulesh.micromath.ta.TestSession r0;
        com.mkulesh.micromath.ta.TestScript$NumberType $r1;
        int $i0, $i1;
        java.lang.StringBuilder $r2;
        java.util.ArrayList $r3;
        java.lang.String $r4;

        r0 := @this: com.mkulesh.micromath.ta.TestSession;

        $r1 = <com.mkulesh.micromath.ta.TestScript$NumberType: com.mkulesh.micromath.ta.TestScript$NumberType FAILED>;

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.ta.TestSession: int getTestCaseNumber(com.mkulesh.micromath.ta.TestScript$NumberType)>($r1);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Test session: number of scrips: ");

        $r3 = r0.<com.mkulesh.micromath.ta.TestSession: java.util.ArrayList testScripts>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", number of test cases: ");

        $r1 = <com.mkulesh.micromath.ta.TestScript$NumberType: com.mkulesh.micromath.ta.TestScript$NumberType TOTAL>;

        $i1 = virtualinvoke r0.<com.mkulesh.micromath.ta.TestSession: int getTestCaseNumber(com.mkulesh.micromath.ta.TestScript$NumberType)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", passed: ");

        $r1 = <com.mkulesh.micromath.ta.TestScript$NumberType: com.mkulesh.micromath.ta.TestScript$NumberType PASSED>;

        $i1 = virtualinvoke r0.<com.mkulesh.micromath.ta.TestSession: int getTestCaseNumber(com.mkulesh.micromath.ta.TestScript$NumberType)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", failed: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", status: ");

        if $i0 != 0 goto label2;

        $r4 = "PASSED";

     label1:
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label2:
        $r4 = "FAILED";

        goto label1;
    }
    public int getTestCaseNumber(com.mkulesh.micromath.ta.TestScript$NumberType)
    {
        com.mkulesh.micromath.ta.TestSession r0;
        com.mkulesh.micromath.ta.TestScript$NumberType $r1;
        int i0, $i1;
        java.util.ArrayList $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.mkulesh.micromath.ta.TestScript r5;

        r0 := @this: com.mkulesh.micromath.ta.TestSession;

        $r1 := @parameter0: com.mkulesh.micromath.ta.TestScript$NumberType;

        i0 = 0;

        $r2 = r0.<com.mkulesh.micromath.ta.TestSession: java.util.ArrayList testScripts>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.mkulesh.micromath.ta.TestScript) $r4;

        $i1 = virtualinvoke r5.<com.mkulesh.micromath.ta.TestScript: int getTestCaseNumber(com.mkulesh.micromath.ta.TestScript$NumberType)>($r1);

        i0 = i0 + $i1;

        goto label1;

     label2:
        return i0;
    }
    protected volatile void onPostExecute(java.lang.Object)
    {
        com.mkulesh.micromath.ta.TestSession r0;
        java.lang.Object $r1;
        java.lang.Void $r2;

        r0 := @this: com.mkulesh.micromath.ta.TestSession;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Void) $r1;

        virtualinvoke r0.<com.mkulesh.micromath.ta.TestSession: void onPostExecute(java.lang.Void)>($r2);

        return;
    }
    protected void onPostExecute(java.lang.Void)
    {
        com.mkulesh.micromath.ta.TestSession r0;
        java.lang.Void $r1;
        android.content.Intent r2;
        java.io.FileOutputStream r3;
        java.io.StringWriter r4;
        com.mkulesh.micromath.ta.TestSession$Mode $r5, $r6;
        java.io.File r7, $r9;
        android.app.Activity $r8;
        java.lang.String $r10;
        byte[] $r11;
        android.content.res.Resources $r12;
        java.lang.Object[] $r13;
        android.widget.Toast $r14;
        boolean $z0;
        com.mkulesh.micromath.formula.FormulaList $r15;
        android.support.v7.app.AppCompatActivity $r16;
        java.lang.Exception r17, r19;
        android.net.Uri $r18;

        r0 := @this: com.mkulesh.micromath.ta.TestSession;

        $r1 := @parameter0: java.lang.Void;

        specialinvoke r0.<android.os.AsyncTask: void onPostExecute(java.lang.Object)>($r1);

        $r5 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.ta.TestSession$Mode mode>;

        $r6 = <com.mkulesh.micromath.ta.TestSession$Mode: com.mkulesh.micromath.ta.TestSession$Mode EXPORT_DOC>;

        if $r5 == $r6 goto label11;

        $r5 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.ta.TestSession$Mode mode>;

        $r6 = <com.mkulesh.micromath.ta.TestSession$Mode: com.mkulesh.micromath.ta.TestSession$Mode TAKE_SCREENSHOTS>;

        if $r5 != $r6 goto label01;

        return;

     label01:
        r7 = new java.io.File;

        $r8 = r0.<com.mkulesh.micromath.ta.TestSession: android.app.Activity context>;

        $r9 = virtualinvoke $r8.<android.app.Activity: java.io.File getExternalFilesDir(java.lang.String)>(null);

        specialinvoke r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, "autotest.html");

        if r7 == null goto label05;

        r3 = new java.io.FileOutputStream;

     label02:
        specialinvoke r3.<java.io.FileOutputStream: void <init>(java.io.File)>(r7);

     label03:
        r4 = new java.io.StringWriter;

     label04:
        specialinvoke r4.<java.io.StringWriter: void <init>()>();

        virtualinvoke r0.<com.mkulesh.micromath.ta.TestSession: void publishHtmlReport(java.io.StringWriter)>(r4);

        $r10 = virtualinvoke r4.<java.io.StringWriter: java.lang.String toString()>();

        $r11 = virtualinvoke $r10.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r3.<java.io.FileOutputStream: void write(byte[])>($r11);

        virtualinvoke r3.<java.io.FileOutputStream: void close()>();

        $r8 = r0.<com.mkulesh.micromath.ta.TestSession: android.app.Activity context>;

        $r12 = virtualinvoke $r8.<android.app.Activity: android.content.res.Resources getResources()>();

        $r10 = virtualinvoke $r12.<android.content.res.Resources: java.lang.String getString(int)>(2131099905);

        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = "autotest.html";

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r10, $r13);

        $r8 = r0.<com.mkulesh.micromath.ta.TestSession: android.app.Activity context>;

        $r14 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r8, $r10, 1);

        virtualinvoke $r14.<android.widget.Toast: void show()>();

     label05:
        $r8 = r0.<com.mkulesh.micromath.ta.TestSession: android.app.Activity context>;

        $z0 = staticinvoke <com.mkulesh.micromath.ta.TestSession: boolean isAutotestOnStart(android.content.Context)>($r8);

        if $z0 == 0 goto label07;

        $r15 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.formula.FormulaList formulas>;

        $r16 = virtualinvoke $r15.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke $r16.<android.support.v7.app.AppCompatActivity: void finish()>();

        return;

     label06:
        r17 := @caughtexception;

        $r8 = r0.<com.mkulesh.micromath.ta.TestSession: android.app.Activity context>;

        $r12 = virtualinvoke $r8.<android.app.Activity: android.content.res.Resources getResources()>();

        $r10 = virtualinvoke $r12.<android.content.res.Resources: java.lang.String getString(int)>(2131099783);

        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = "autotest.html";

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r10, $r13);

        $r8 = r0.<com.mkulesh.micromath.ta.TestSession: android.app.Activity context>;

        $r14 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r8, $r10, 1);

        virtualinvoke $r14.<android.widget.Toast: void show()>();

        r7 = null;

        goto label05;

     label07:
        if r7 == null goto label11;

        r2 = new android.content.Intent;

     label08:
        specialinvoke r2.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.VIEW");

        $r18 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>(r7);

        virtualinvoke r2.<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>($r18, "text/html");

        $r15 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.formula.FormulaList formulas>;

        $r16 = virtualinvoke $r15.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke $r16.<android.support.v7.app.AppCompatActivity: void startActivity(android.content.Intent)>(r2);

     label09:
        return;

     label10:
        r19 := @caughtexception;

        $r8 = r0.<com.mkulesh.micromath.ta.TestSession: android.app.Activity context>;

        $r10 = virtualinvoke r19.<java.lang.Exception: java.lang.String getLocalizedMessage()>();

        $r14 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r8, $r10, 1);

        virtualinvoke $r14.<android.widget.Toast: void show()>();

     label11:
        return;

        catch java.lang.Exception from label02 to label03 with label06;
        catch java.lang.Exception from label04 to label05 with label06;
        catch java.lang.Exception from label08 to label09 with label10;
    }
    protected transient void onProgressUpdate(java.lang.Integer[])
    {
        com.mkulesh.micromath.ta.TestSession r0;
        java.lang.Integer[] $r1;
        com.mkulesh.micromath.formula.XmlLoaderTask$PostAction $r2;
        int $i0, $i1, $i2;
        com.mkulesh.micromath.utils.SynchronizedBoolean $r3;
        java.lang.Integer $r4;
        java.lang.CharSequence[] $r5;
        java.lang.CharSequence r6;
        java.lang.String r7, $r20;
        com.mkulesh.micromath.formula.FormulaList $r8;
        android.net.Uri $r9;
        com.mkulesh.micromath.ta.TestScript $r10;
        com.mkulesh.micromath.ta.TestSession$Mode $r11, $r12;
        com.mkulesh.micromath.formula.FormulaListView $r13;
        android.widget.LinearLayout $r14;
        android.view.View $r15;
        boolean $z0;
        com.mkulesh.micromath.formula.TextFragment r16;
        java.util.ArrayList $r17;
        java.lang.Object $r18;
        com.mkulesh.micromath.formula.TermField $r19;
        java.lang.StringBuilder $r21;

        r0 := @this: com.mkulesh.micromath.ta.TestSession;

        $r1 := @parameter0: java.lang.Integer[];

        if $r1 == null goto label01;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label02;

     label01:
        $r3 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.utils.SynchronizedBoolean isPublishRuns>;

        virtualinvoke $r3.<com.mkulesh.micromath.utils.SynchronizedBoolean: void set(boolean)>(0);

        return;

     label02:
        $r4 = $r1[0];

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $r4 = $r1[1];

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $r5 = r0.<com.mkulesh.micromath.ta.TestSession: java.lang.CharSequence[] scripts>;

        $i2 = lengthof $r5;

        if $i1 >= $i2 goto label03;

        lookupswitch($i0)
        {
            case 0: goto label04;
            case 1: goto label05;
            case 2: goto label07;
            default: goto label03;
        };

     label03:
        $r3 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.utils.SynchronizedBoolean isPublishRuns>;

        virtualinvoke $r3.<com.mkulesh.micromath.utils.SynchronizedBoolean: void set(boolean)>(0);

        return;

     label04:
        $r5 = r0.<com.mkulesh.micromath.ta.TestSession: java.lang.CharSequence[] scripts>;

        r6 = $r5[$i1];

        r7 = (java.lang.String) r6;

        $r8 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.formula.FormulaList formulas>;

        virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaList: void clear()>();

        $r8 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.formula.FormulaList formulas>;

        $r9 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r7);

        $r2 = <com.mkulesh.micromath.formula.XmlLoaderTask$PostAction: com.mkulesh.micromath.formula.XmlLoaderTask$PostAction NONE>;

        virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaList: void readFromResource(android.net.Uri,com.mkulesh.micromath.formula.XmlLoaderTask$PostAction)>($r9, $r2);

        goto label03;

     label05:
        $r5 = r0.<com.mkulesh.micromath.ta.TestSession: java.lang.CharSequence[] scripts>;

        r6 = $r5[$i1];

        r7 = (java.lang.String) r6;

        $r10 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.ta.TestScript testScript>;

        virtualinvoke $r10.<com.mkulesh.micromath.ta.TestScript: void setScriptContent(java.lang.String)>(r7);

        $r11 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.ta.TestSession$Mode mode>;

        $r12 = <com.mkulesh.micromath.ta.TestSession$Mode: com.mkulesh.micromath.ta.TestSession$Mode TEST_SCRIPS>;

        if $r11 != $r12 goto label06;

        $r8 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.formula.FormulaList formulas>;

        $r13 = virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView getFormulaListView()>();

        $r14 = virtualinvoke $r13.<com.mkulesh.micromath.formula.FormulaListView: android.widget.LinearLayout getList()>();

        $i0 = virtualinvoke $r14.<android.widget.LinearLayout: int getChildCount()>();

        if $i0 <= 0 goto label06;

        $r8 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.formula.FormulaList formulas>;

        $r13 = virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView getFormulaListView()>();

        $r14 = virtualinvoke $r13.<com.mkulesh.micromath.formula.FormulaListView: android.widget.LinearLayout getList()>();

        $r15 = virtualinvoke $r14.<android.widget.LinearLayout: android.view.View getChildAt(int)>(0);

        $z0 = $r15 instanceof com.mkulesh.micromath.formula.TextFragment;

        if $z0 == 0 goto label06;

        $r10 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.ta.TestScript testScript>;

        r16 = (com.mkulesh.micromath.formula.TextFragment) $r15;

        $r17 = virtualinvoke r16.<com.mkulesh.micromath.formula.TextFragment: java.util.ArrayList getTerms()>();

        $r18 = virtualinvoke $r17.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r19 = (com.mkulesh.micromath.formula.TermField) $r18;

        $r20 = virtualinvoke $r19.<com.mkulesh.micromath.formula.TermField: java.lang.String getText()>();

        virtualinvoke $r10.<com.mkulesh.micromath.ta.TestScript: void setScriptContent(java.lang.String)>($r20);

     label06:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calculating test script: ");

        $r21 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        r7 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.mkulesh.micromath.utils.ViewUtils: void Debug(java.lang.Object,java.lang.String)>(r0, r7);

        $r8 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.formula.FormulaList formulas>;

        virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaList: void calculate()>();

        goto label03;

     label07:
        $r5 = r0.<com.mkulesh.micromath.ta.TestSession: java.lang.CharSequence[] scripts>;

        r6 = $r5[$i1];

        r7 = (java.lang.String) r6;

        $r9 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r7);

        r7 = virtualinvoke $r9.<android.net.Uri: java.lang.String getLastPathSegment()>();

        $z0 = virtualinvoke r7.<java.lang.String: boolean contains(java.lang.CharSequence)>(".xml");

        if $z0 == 0 goto label09;

        r7 = virtualinvoke r7.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(".xml", "");

     label08:
        $r11 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.ta.TestSession$Mode mode>;

        $r12 = <com.mkulesh.micromath.ta.TestSession$Mode: com.mkulesh.micromath.ta.TestSession$Mode EXPORT_DOC>;

        if $r11 != $r12 goto label10;

        specialinvoke r0.<com.mkulesh.micromath.ta.TestSession: void exportLatex(java.lang.String,java.lang.String)>("doc", r7);

        goto label03;

     label09:
        r7 = virtualinvoke r7.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(".mmt", "");

        goto label08;

     label10:
        $r11 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.ta.TestSession$Mode mode>;

        $r12 = <com.mkulesh.micromath.ta.TestSession$Mode: com.mkulesh.micromath.ta.TestSession$Mode TAKE_SCREENSHOTS>;

        if $r11 != $r12 goto label03;

        virtualinvoke r0.<com.mkulesh.micromath.ta.TestSession: boolean takeScreenshot(java.lang.String,java.lang.String)>("screenshots", r7);

        goto label03;
    }
    protected volatile void onProgressUpdate(java.lang.Object[])
    {
        com.mkulesh.micromath.ta.TestSession r0;
        java.lang.Object[] $r1;
        java.lang.Integer[] $r2;

        r0 := @this: com.mkulesh.micromath.ta.TestSession;

        $r1 := @parameter0: java.lang.Object[];

        $r2 = (java.lang.Integer[]) $r1;

        virtualinvoke r0.<com.mkulesh.micromath.ta.TestSession: void onProgressUpdate(java.lang.Integer[])>($r2);

        return;
    }
    public void publishHtmlReport(java.io.StringWriter) throws java.lang.Exception
    {
        com.mkulesh.micromath.ta.TestSession r0;
        java.io.StringWriter $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        int $i0, $i1;
        android.app.Activity $r4;
        android.content.pm.PackageManager $r5;
        android.content.pm.PackageInfo $r6;
        android.content.res.Resources $r7;
        android.content.pm.ApplicationInfo $r8;
        java.util.ArrayList $r9;
        java.util.Iterator $r10;
        boolean $z0;
        java.lang.Object $r11;
        com.mkulesh.micromath.ta.TestScript r12;
        com.mkulesh.micromath.ta.TestScript$NumberType $r13;

        r0 := @this: com.mkulesh.micromath.ta.TestSession;

        $r1 := @parameter0: java.io.StringWriter;

        virtualinvoke $r1.<java.io.StringWriter: java.io.StringWriter append(java.lang.CharSequence)>("<!DOCTYPE html>\n");

        virtualinvoke $r1.<java.io.StringWriter: java.io.StringWriter append(java.lang.CharSequence)>("<html><head>\n");

        virtualinvoke $r1.<java.io.StringWriter: java.io.StringWriter append(java.lang.CharSequence)>("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n");

        virtualinvoke $r1.<java.io.StringWriter: java.io.StringWriter append(java.lang.CharSequence)>("<title>Test session</title>\n");

        virtualinvoke $r1.<java.io.StringWriter: java.io.StringWriter append(java.lang.CharSequence)>("</head><body>");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<p>Device information: ");

        $r3 = <android.os.Build: java.lang.String DEVICE>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", model ");

        $r3 = <android.os.Build: java.lang.String MODEL>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", OS version ");

        $r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.version");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", API level ");

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</p>");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.StringWriter: java.io.StringWriter append(java.lang.CharSequence)>($r3);

        $r4 = r0.<com.mkulesh.micromath.ta.TestSession: android.app.Activity context>;

        $r5 = virtualinvoke $r4.<android.app.Activity: android.content.pm.PackageManager getPackageManager()>();

        $r4 = r0.<com.mkulesh.micromath.ta.TestSession: android.app.Activity context>;

        $r3 = virtualinvoke $r4.<android.app.Activity: java.lang.String getPackageName()>();

        $r6 = virtualinvoke $r5.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r3, 0);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<p>App version: ");

        $r4 = r0.<com.mkulesh.micromath.ta.TestSession: android.app.Activity context>;

        $r7 = virtualinvoke $r4.<android.app.Activity: android.content.res.Resources getResources()>();

        $r8 = $r6.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r8.<android.content.pm.ApplicationInfo: int labelRes>;

        $r3 = virtualinvoke $r7.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r3 = $r6.<android.content.pm.PackageInfo: java.lang.String versionName>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</p>");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.StringWriter: java.io.StringWriter append(java.lang.CharSequence)>($r3);

        $r9 = r0.<com.mkulesh.micromath.ta.TestSession: java.util.ArrayList testScripts>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (com.mkulesh.micromath.ta.TestScript) $r11;

        virtualinvoke r12.<com.mkulesh.micromath.ta.TestScript: void publishHtmlReport(java.io.StringWriter)>($r1);

        goto label1;

     label2:
        virtualinvoke $r1.<java.io.StringWriter: java.io.StringWriter append(java.lang.CharSequence)>("\n\n<h1>Summary</h1>\n");

        $r13 = <com.mkulesh.micromath.ta.TestScript$NumberType: com.mkulesh.micromath.ta.TestScript$NumberType FAILED>;

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.ta.TestSession: int getTestCaseNumber(com.mkulesh.micromath.ta.TestScript$NumberType)>($r13);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<p><b>Number of scrips</b>: ");

        $r9 = r0.<com.mkulesh.micromath.ta.TestSession: java.util.ArrayList testScripts>;

        $i1 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</p>\n");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.StringWriter: java.io.StringWriter append(java.lang.CharSequence)>($r3);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<p><b>Number of test cases</b>: ");

        $r13 = <com.mkulesh.micromath.ta.TestScript$NumberType: com.mkulesh.micromath.ta.TestScript$NumberType TOTAL>;

        $i1 = virtualinvoke r0.<com.mkulesh.micromath.ta.TestSession: int getTestCaseNumber(com.mkulesh.micromath.ta.TestScript$NumberType)>($r13);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</p>\n");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.StringWriter: java.io.StringWriter append(java.lang.CharSequence)>($r3);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<p><b>Passed</b>: ");

        $r13 = <com.mkulesh.micromath.ta.TestScript$NumberType: com.mkulesh.micromath.ta.TestScript$NumberType PASSED>;

        $i1 = virtualinvoke r0.<com.mkulesh.micromath.ta.TestSession: int getTestCaseNumber(com.mkulesh.micromath.ta.TestScript$NumberType)>($r13);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</p>\n");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.StringWriter: java.io.StringWriter append(java.lang.CharSequence)>($r3);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<p><b>Failed</b>: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</p>\n");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.StringWriter: java.io.StringWriter append(java.lang.CharSequence)>($r3);

        if $i0 != 0 goto label4;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<p><b>Status</b>: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<font color=\"green\">PASSED</font>");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</p>\n\n");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.StringWriter: java.io.StringWriter append(java.lang.CharSequence)>($r3);

        virtualinvoke $r1.<java.io.StringWriter: java.io.StringWriter append(java.lang.CharSequence)>("</body></html>\n");

        return;

     label4:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<p><b>Status</b>: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<font color=\"red\">FAILED</font>");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;
    }
    public void setInOperation(android.os.AsyncTask, boolean)
    {
        com.mkulesh.micromath.ta.TestSession r0;
        android.os.AsyncTask $r1;
        boolean $z0;
        com.mkulesh.micromath.ta.TestScript $r2;
        com.mkulesh.micromath.ta.TestScript$State $r3;

        r0 := @this: com.mkulesh.micromath.ta.TestSession;

        $r1 := @parameter0: android.os.AsyncTask;

        $z0 := @parameter1: boolean;

        $r2 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.ta.TestScript testScript>;

        if $r2 == null goto label2;

        if $z0 != 0 goto label2;

        $z0 = $r1 instanceof com.mkulesh.micromath.formula.XmlLoaderTask;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.ta.TestScript testScript>;

        $r3 = <com.mkulesh.micromath.ta.TestScript$State: com.mkulesh.micromath.ta.TestScript$State LOAD_FINISHED>;

        virtualinvoke $r2.<com.mkulesh.micromath.ta.TestScript: void setState(com.mkulesh.micromath.ta.TestScript$State)>($r3);

        return;

     label1:
        $z0 = $r1 instanceof com.mkulesh.micromath.formula.CalculaterTask;

        if $z0 == 0 goto label2;

        $r2 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.ta.TestScript testScript>;

        $r3 = <com.mkulesh.micromath.ta.TestScript$State: com.mkulesh.micromath.ta.TestScript$State CALCULATE_FINISHED>;

        virtualinvoke $r2.<com.mkulesh.micromath.ta.TestScript: void setState(com.mkulesh.micromath.ta.TestScript$State)>($r3);

     label2:
        return;
    }
    public void setResult(java.lang.String, java.lang.String)
    {
        com.mkulesh.micromath.ta.TestSession r0;
        java.lang.String $r1, $r2;
        com.mkulesh.micromath.ta.TestScript $r3;

        r0 := @this: com.mkulesh.micromath.ta.TestSession;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.ta.TestScript testScript>;

        if $r3 == null goto label1;

        $r3 = r0.<com.mkulesh.micromath.ta.TestSession: com.mkulesh.micromath.ta.TestScript testScript>;

        virtualinvoke $r3.<com.mkulesh.micromath.ta.TestScript: void setResult(java.lang.String,java.lang.String)>($r1, $r2);

     label1:
        return;
    }
    public boolean takeScreenshot(java.lang.String, java.lang.String)
    {
        com.mkulesh.micromath.ta.TestSession r0;
        java.lang.String $r1, $r2, $r16;
        java.lang.Exception r3;
        java.io.File r4, r5;
        java.lang.StringBuilder $r6;
        android.app.Activity $r7;
        android.net.Uri $r8;
        java.io.OutputStream $r9;
        android.view.Window $r10;
        android.view.View $r11;
        android.graphics.Bitmap $r12;
        int $i0, $i1, $i2;
        android.graphics.Bitmap$CompressFormat $r13;
        android.content.res.Resources $r14;
        java.lang.Object[] $r15;
        android.widget.Toast $r17;

        r0 := @this: com.mkulesh.micromath.ta.TestSession;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        r5 = new java.io.File;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = r0.<com.mkulesh.micromath.ta.TestSession: android.app.Activity context>;

        r4 = virtualinvoke $r7.<android.app.Activity: java.io.File getExternalFilesDir(java.lang.String)>(null);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r5.<java.io.File: void <init>(java.lang.String)>($r1);

        virtualinvoke r5.<java.io.File: boolean mkdir()>();

        r4 = new java.io.File;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".png");

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r4.<java.io.File: void <init>(java.io.File,java.lang.String)>(r5, $r1);

        if r4 != null goto label1;

        return 0;

     label1:
        $r8 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>(r4);

        $r8 = staticinvoke <com.mkulesh.micromath.fman.FileUtils: android.net.Uri ensureScheme(android.net.Uri)>($r8);

        $r7 = r0.<com.mkulesh.micromath.ta.TestSession: android.app.Activity context>;

        $r9 = staticinvoke <com.mkulesh.micromath.fman.FileUtils: java.io.OutputStream getOutputStream(android.content.Context,android.net.Uri)>($r7, $r8);

        if $r9 != null goto label2;

        return 0;

     label2:
        $r7 = r0.<com.mkulesh.micromath.ta.TestSession: android.app.Activity context>;

        $r10 = virtualinvoke $r7.<android.app.Activity: android.view.Window getWindow()>();

        $r11 = virtualinvoke $r10.<android.view.Window: android.view.View getDecorView()>();

        $r11 = virtualinvoke $r11.<android.view.View: android.view.View getRootView()>();

        virtualinvoke $r11.<android.view.View: void setDrawingCacheEnabled(boolean)>(1);

        $r12 = virtualinvoke $r11.<android.view.View: android.graphics.Bitmap getDrawingCache()>();

        $r12 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>($r12);

        virtualinvoke $r11.<android.view.View: void setDrawingCacheEnabled(boolean)>(0);

        $r7 = r0.<com.mkulesh.micromath.ta.TestSession: android.app.Activity context>;

        $i0 = staticinvoke <com.mkulesh.micromath.utils.ViewUtils: int getStatusBarHeight(android.app.Activity)>($r7);

        $i1 = virtualinvoke $r12.<android.graphics.Bitmap: int getWidth()>();

        $i2 = virtualinvoke $r12.<android.graphics.Bitmap: int getHeight()>();

     label3:
        $i2 = $i2 - $i0;

     label4:
        $r12 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>($r12, 0, $i0, $i1, $i2, null, 1);

     label5:
        $r13 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

     label6:
        virtualinvoke $r12.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r13, 100, $r9);

        virtualinvoke $r9.<java.io.OutputStream: void flush()>();

        virtualinvoke $r9.<java.io.OutputStream: void close()>();

        $r7 = r0.<com.mkulesh.micromath.ta.TestSession: android.app.Activity context>;

        $r14 = virtualinvoke $r7.<android.app.Activity: android.content.res.Resources getResources()>();

        $r1 = virtualinvoke $r14.<android.content.res.Resources: java.lang.String getString(int)>(2131099905);

        $r15 = newarray (java.lang.Object)[1];

        $r16 = virtualinvoke r4.<java.io.File: java.lang.String getName()>();

        $r15[0] = $r16;

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r1, $r15);

        $r7 = r0.<com.mkulesh.micromath.ta.TestSession: android.app.Activity context>;

        $r17 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r7, $r1, 1);

        virtualinvoke $r17.<android.widget.Toast: void show()>();

     label7:
        return 1;

     label8:
        r3 := @caughtexception;

        $r7 = r0.<com.mkulesh.micromath.ta.TestSession: android.app.Activity context>;

        $r14 = virtualinvoke $r7.<android.app.Activity: android.content.res.Resources getResources()>();

        $r1 = virtualinvoke $r14.<android.content.res.Resources: java.lang.String getString(int)>(2131099783);

        $r15 = newarray (java.lang.Object)[1];

        $r15[0] = $r2;

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r1, $r15);

        $r7 = r0.<com.mkulesh.micromath.ta.TestSession: android.app.Activity context>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r2 = virtualinvoke r3.<java.lang.Exception: java.lang.String getLocalizedMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.mkulesh.micromath.utils.ViewUtils: void Debug(java.lang.Object,java.lang.String)>($r7, $r2);

        $r7 = r0.<com.mkulesh.micromath.ta.TestSession: android.app.Activity context>;

        $r17 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r7, $r1, 1);

        virtualinvoke $r17.<android.widget.Toast: void show()>();

        goto label7;

        catch java.lang.Exception from label2 to label3 with label8;
        catch java.lang.Exception from label4 to label5 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }
