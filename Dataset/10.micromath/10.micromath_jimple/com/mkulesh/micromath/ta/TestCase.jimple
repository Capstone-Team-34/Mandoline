com.mkulesh.micromath.ta.TestCase extends java.lang.Object
public static final java.lang.String BEGIN_FIELD
public static final java.lang.String DESIRED_FIELD
public static final java.lang.String END_FIELD
public static final java.lang.String[] PARAMETERS
public static final java.lang.String RESULT_FIELD
private java.lang.String beginField
private java.lang.String desiredField
private java.lang.String endField
private long endTime
private java.lang.String resultField
private long startTime
    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[5];

        $r0[0] = "TC";

        $r0[1] = "Duration (ms)";

        $r0[2] = "Result";

        $r0[3] = "Desired";

        $r0[4] = "Status";

        <com.mkulesh.micromath.ta.TestCase: java.lang.String[] PARAMETERS> = $r0;

        return;
    }
    public void <init>(java.lang.String)
    {
        com.mkulesh.micromath.ta.TestCase r0;
        java.lang.String $r1;
        java.util.Calendar $r2;
        long $l0;

        r0 := @this: com.mkulesh.micromath.ta.TestCase;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mkulesh.micromath.ta.TestCase: java.lang.String beginField> = null;

        r0.<com.mkulesh.micromath.ta.TestCase: java.lang.String resultField> = null;

        r0.<com.mkulesh.micromath.ta.TestCase: java.lang.String desiredField> = null;

        r0.<com.mkulesh.micromath.ta.TestCase: java.lang.String endField> = null;

        r0.<com.mkulesh.micromath.ta.TestCase: long startTime> = 0L;

        r0.<com.mkulesh.micromath.ta.TestCase: long endTime> = 0L;

        r0.<com.mkulesh.micromath.ta.TestCase: java.lang.String beginField> = $r1;

        $r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $l0 = virtualinvoke $r2.<java.util.Calendar: long getTimeInMillis()>();

        r0.<com.mkulesh.micromath.ta.TestCase: long startTime> = $l0;

        return;
    }
    private boolean compareValues(java.lang.String, java.lang.String)
    {
        com.mkulesh.micromath.ta.TestCase r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.ta.TestCase;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 == null goto label1;

        if $r2 != null goto label2;

     label1:
        return 0;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }
    private java.lang.String getError()
    {
        com.mkulesh.micromath.ta.TestCase r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.ta.TestCase;

        $r1 = r0.<com.mkulesh.micromath.ta.TestCase: java.lang.String beginField>;

        if $r1 != null goto label1;

        return "TC ERROR: \"begin\" field is not found";

     label1:
        $r1 = r0.<com.mkulesh.micromath.ta.TestCase: java.lang.String resultField>;

        if $r1 != null goto label2;

        return "TC ERROR: \"result\" field is not found";

     label2:
        $r1 = r0.<com.mkulesh.micromath.ta.TestCase: java.lang.String desiredField>;

        if $r1 != null goto label3;

        return "TC ERROR: \"desired\" field is not found";

     label3:
        $r1 = r0.<com.mkulesh.micromath.ta.TestCase: java.lang.String endField>;

        if $r1 != null goto label4;

        return "TC ERROR: \"end\" field is not found";

     label4:
        $r2 = r0.<com.mkulesh.micromath.ta.TestCase: java.lang.String beginField>;

        $r1 = r0.<com.mkulesh.micromath.ta.TestCase: java.lang.String endField>;

        $z0 = specialinvoke r0.<com.mkulesh.micromath.ta.TestCase: boolean compareValues(java.lang.String,java.lang.String)>($r2, $r1);

        if $z0 != 0 goto label5;

        return "TC ERROR: begin and end fields have different values";

     label5:
        return null;
    }
    public void finish(java.lang.String)
    {
        com.mkulesh.micromath.ta.TestCase r0;
        java.lang.String $r1;
        java.util.Calendar $r2;
        long $l0;

        r0 := @this: com.mkulesh.micromath.ta.TestCase;

        $r1 := @parameter0: java.lang.String;

        r0.<com.mkulesh.micromath.ta.TestCase: java.lang.String endField> = $r1;

        $r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $l0 = virtualinvoke $r2.<java.util.Calendar: long getTimeInMillis()>();

        r0.<com.mkulesh.micromath.ta.TestCase: long endTime> = $l0;

        $r1 = virtualinvoke r0.<com.mkulesh.micromath.ta.TestCase: java.lang.String getDescription()>();

        staticinvoke <com.mkulesh.micromath.utils.ViewUtils: void Debug(java.lang.Object,java.lang.String)>(r0, $r1);

        return;
    }
    public java.lang.String getDescription()
    {
        com.mkulesh.micromath.ta.TestCase r0;
        long $l0, $l1;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;
        java.lang.String[] $r3;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.ta.TestCase;

        $r1 = specialinvoke r0.<com.mkulesh.micromath.ta.TestCase: java.lang.String getError()>();

        if $r1 == null goto label1;

        return $r1;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = <com.mkulesh.micromath.ta.TestCase: java.lang.String[] PARAMETERS>;

        $r1 = $r3[0];

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r1 = r0.<com.mkulesh.micromath.ta.TestCase: java.lang.String beginField>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r3 = <com.mkulesh.micromath.ta.TestCase: java.lang.String[] PARAMETERS>;

        $r1 = $r3[1];

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $l1 = r0.<com.mkulesh.micromath.ta.TestCase: long endTime>;

        $l0 = r0.<com.mkulesh.micromath.ta.TestCase: long startTime>;

        $l0 = $l1 - $l0;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r3 = <com.mkulesh.micromath.ta.TestCase: java.lang.String[] PARAMETERS>;

        $r1 = $r3[2];

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r1 = r0.<com.mkulesh.micromath.ta.TestCase: java.lang.String resultField>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r3 = <com.mkulesh.micromath.ta.TestCase: java.lang.String[] PARAMETERS>;

        $r1 = $r3[3];

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r1 = r0.<com.mkulesh.micromath.ta.TestCase: java.lang.String desiredField>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r3 = <com.mkulesh.micromath.ta.TestCase: java.lang.String[] PARAMETERS>;

        $r1 = $r3[4];

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.ta.TestCase: boolean isPassed()>();

        if $z0 == 0 goto label3;

        $r1 = "PASSED";

     label2:
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label3:
        $r1 = "FAILED";

        goto label2;
    }
    public boolean isPassed()
    {
        com.mkulesh.micromath.ta.TestCase r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.ta.TestCase;

        $r1 = specialinvoke r0.<com.mkulesh.micromath.ta.TestCase: java.lang.String getError()>();

        if $r1 == null goto label1;

        return 0;

     label1:
        $r2 = r0.<com.mkulesh.micromath.ta.TestCase: java.lang.String resultField>;

        $r1 = r0.<com.mkulesh.micromath.ta.TestCase: java.lang.String desiredField>;

        $z0 = specialinvoke r0.<com.mkulesh.micromath.ta.TestCase: boolean compareValues(java.lang.String,java.lang.String)>($r2, $r1);

        return $z0;
    }
    public void publishHtmlReport(java.io.StringWriter)
    {
        com.mkulesh.micromath.ta.TestCase r0;
        java.io.StringWriter $r1;
        long $l0, $l2;
        java.lang.String $r2, $r5;
        java.lang.StringBuilder $r3;
        java.lang.String[] $r4;
        int $i1;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.ta.TestCase;

        $r1 := @parameter0: java.io.StringWriter;

        $r2 = specialinvoke r0.<com.mkulesh.micromath.ta.TestCase: java.lang.String getError()>();

        if $r2 == null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    <tr><td colspan=\"");

        $r4 = <com.mkulesh.micromath.ta.TestCase: java.lang.String[] PARAMETERS>;

        $i1 = lengthof $r4;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"><font color=\"red\">");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</font></td></tr>");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.StringWriter: java.io.StringWriter append(java.lang.CharSequence)>($r2);

        return;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    <tr>");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<td>");

        $r2 = r0.<com.mkulesh.micromath.ta.TestCase: java.lang.String beginField>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</td>");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<td>");

        $l2 = r0.<com.mkulesh.micromath.ta.TestCase: long endTime>;

        $l0 = r0.<com.mkulesh.micromath.ta.TestCase: long startTime>;

        $l0 = $l2 - $l0;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</td>");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<td>");

        $r2 = r0.<com.mkulesh.micromath.ta.TestCase: java.lang.String resultField>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</td>");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<td>");

        $r2 = r0.<com.mkulesh.micromath.ta.TestCase: java.lang.String desiredField>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</td>");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.ta.TestCase: boolean isPassed()>();

        if $z0 == 0 goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<font color=\"green\">PASSED</font>");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<td>");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</td>");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</tr>\n");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.StringWriter: java.io.StringWriter append(java.lang.CharSequence)>($r2);

        return;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<font color=\"red\">FAILED</font>");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;
    }
    public void setDesiredField(java.lang.String)
    {
        com.mkulesh.micromath.ta.TestCase r0;
        java.lang.String $r1;

        r0 := @this: com.mkulesh.micromath.ta.TestCase;

        $r1 := @parameter0: java.lang.String;

        r0.<com.mkulesh.micromath.ta.TestCase: java.lang.String desiredField> = $r1;

        return;
    }
    public void setResultField(java.lang.String)
    {
        com.mkulesh.micromath.ta.TestCase r0;
        java.lang.String $r1;

        r0 := @this: com.mkulesh.micromath.ta.TestCase;

        $r1 := @parameter0: java.lang.String;

        r0.<com.mkulesh.micromath.ta.TestCase: java.lang.String resultField> = $r1;

        return;
    }
