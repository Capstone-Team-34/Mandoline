com.mkulesh.micromath.widgets.TwoDScrollView extends android.widget.FrameLayout
static final int ANIMATED_SCROLL_GAP
static final float MAX_SCROLL_FACTOR
private int autoScrollMargins
private com.mkulesh.micromath.widgets.ListChangeIf listChangeIf
private android.view.View mChildToScrollTo
private android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom
private android.support.v4.widget.EdgeEffectCompat mEdgeGlowLeft
private android.support.v4.widget.EdgeEffectCompat mEdgeGlowRight
private android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop
private android.support.v4.view.GestureDetectorCompat mGestureDetector
private com.mkulesh.micromath.widgets.TwoDScrollView$MyGestureListener mGestureListener
private boolean mIsLayoutDirty
private long mLastScroll
private android.view.ScaleGestureDetector mScaleGestureDetector
private com.mkulesh.micromath.widgets.TwoDScrollView$MyScaleListener mScaleListener
private android.widget.Scroller mScroller
private final android.graphics.Rect mTempRect
    public void <init>(android.content.Context)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        android.content.Context $r1;
        android.graphics.Rect $r2;
        com.mkulesh.micromath.widgets.TwoDScrollView$MyGestureListener $r3;
        com.mkulesh.micromath.widgets.TwoDScrollView$MyScaleListener $r4;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context)>($r1);

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: com.mkulesh.micromath.widgets.ListChangeIf listChangeIf> = null;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect> = $r2;

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: boolean mIsLayoutDirty> = 1;

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.view.View mChildToScrollTo> = null;

        $r3 = new com.mkulesh.micromath.widgets.TwoDScrollView$MyGestureListener;

        specialinvoke $r3.<com.mkulesh.micromath.widgets.TwoDScrollView$MyGestureListener: void <init>(com.mkulesh.micromath.widgets.TwoDScrollView,com.mkulesh.micromath.widgets.TwoDScrollView$1)>(r0, null);

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: com.mkulesh.micromath.widgets.TwoDScrollView$MyGestureListener mGestureListener> = $r3;

        $r4 = new com.mkulesh.micromath.widgets.TwoDScrollView$MyScaleListener;

        specialinvoke $r4.<com.mkulesh.micromath.widgets.TwoDScrollView$MyScaleListener: void <init>(com.mkulesh.micromath.widgets.TwoDScrollView,com.mkulesh.micromath.widgets.TwoDScrollView$1)>(r0, null);

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: com.mkulesh.micromath.widgets.TwoDScrollView$MyScaleListener mScaleListener> = $r4;

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int autoScrollMargins> = 0;

        specialinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: void prepare(android.util.AttributeSet)>(null);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        android.graphics.Rect $r3;
        com.mkulesh.micromath.widgets.TwoDScrollView$MyGestureListener $r4;
        com.mkulesh.micromath.widgets.TwoDScrollView$MyScaleListener $r5;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: com.mkulesh.micromath.widgets.ListChangeIf listChangeIf> = null;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect> = $r3;

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: boolean mIsLayoutDirty> = 1;

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.view.View mChildToScrollTo> = null;

        $r4 = new com.mkulesh.micromath.widgets.TwoDScrollView$MyGestureListener;

        specialinvoke $r4.<com.mkulesh.micromath.widgets.TwoDScrollView$MyGestureListener: void <init>(com.mkulesh.micromath.widgets.TwoDScrollView,com.mkulesh.micromath.widgets.TwoDScrollView$1)>(r0, null);

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: com.mkulesh.micromath.widgets.TwoDScrollView$MyGestureListener mGestureListener> = $r4;

        $r5 = new com.mkulesh.micromath.widgets.TwoDScrollView$MyScaleListener;

        specialinvoke $r5.<com.mkulesh.micromath.widgets.TwoDScrollView$MyScaleListener: void <init>(com.mkulesh.micromath.widgets.TwoDScrollView,com.mkulesh.micromath.widgets.TwoDScrollView$1)>(r0, null);

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: com.mkulesh.micromath.widgets.TwoDScrollView$MyScaleListener mScaleListener> = $r5;

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int autoScrollMargins> = 0;

        specialinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: void prepare(android.util.AttributeSet)>($r2);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        android.graphics.Rect $r3;
        com.mkulesh.micromath.widgets.TwoDScrollView$MyGestureListener $r4;
        com.mkulesh.micromath.widgets.TwoDScrollView$MyScaleListener $r5;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: com.mkulesh.micromath.widgets.ListChangeIf listChangeIf> = null;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect> = $r3;

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: boolean mIsLayoutDirty> = 1;

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.view.View mChildToScrollTo> = null;

        $r4 = new com.mkulesh.micromath.widgets.TwoDScrollView$MyGestureListener;

        specialinvoke $r4.<com.mkulesh.micromath.widgets.TwoDScrollView$MyGestureListener: void <init>(com.mkulesh.micromath.widgets.TwoDScrollView,com.mkulesh.micromath.widgets.TwoDScrollView$1)>(r0, null);

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: com.mkulesh.micromath.widgets.TwoDScrollView$MyGestureListener mGestureListener> = $r4;

        $r5 = new com.mkulesh.micromath.widgets.TwoDScrollView$MyScaleListener;

        specialinvoke $r5.<com.mkulesh.micromath.widgets.TwoDScrollView$MyScaleListener: void <init>(com.mkulesh.micromath.widgets.TwoDScrollView,com.mkulesh.micromath.widgets.TwoDScrollView$1)>(r0, null);

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: com.mkulesh.micromath.widgets.TwoDScrollView$MyScaleListener mScaleListener> = $r5;

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int autoScrollMargins> = 0;

        specialinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: void prepare(android.util.AttributeSet)>($r2);

        return;
    }
    static android.support.v4.widget.EdgeEffectCompat access$1000(com.mkulesh.micromath.widgets.TwoDScrollView)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView $r0;
        android.support.v4.widget.EdgeEffectCompat r1;

        $r0 := @parameter0: com.mkulesh.micromath.widgets.TwoDScrollView;

        r1 = $r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop>;

        return r1;
    }
    static android.support.v4.widget.EdgeEffectCompat access$1100(com.mkulesh.micromath.widgets.TwoDScrollView)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView $r0;
        android.support.v4.widget.EdgeEffectCompat r1;

        $r0 := @parameter0: com.mkulesh.micromath.widgets.TwoDScrollView;

        r1 = $r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom>;

        return r1;
    }
    static com.mkulesh.micromath.widgets.ListChangeIf access$1200(com.mkulesh.micromath.widgets.TwoDScrollView)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView $r0;
        com.mkulesh.micromath.widgets.ListChangeIf r1;

        $r0 := @parameter0: com.mkulesh.micromath.widgets.TwoDScrollView;

        r1 = $r0.<com.mkulesh.micromath.widgets.TwoDScrollView: com.mkulesh.micromath.widgets.ListChangeIf listChangeIf>;

        return r1;
    }
    static boolean access$300(com.mkulesh.micromath.widgets.TwoDScrollView)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView $r0;
        boolean $z0;

        $r0 := @parameter0: com.mkulesh.micromath.widgets.TwoDScrollView;

        $z0 = specialinvoke $r0.<com.mkulesh.micromath.widgets.TwoDScrollView: boolean canScrollX()>();

        return $z0;
    }
    static com.mkulesh.micromath.widgets.TwoDScrollView$MyScaleListener access$400(com.mkulesh.micromath.widgets.TwoDScrollView)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView $r0;
        com.mkulesh.micromath.widgets.TwoDScrollView$MyScaleListener r1;

        $r0 := @parameter0: com.mkulesh.micromath.widgets.TwoDScrollView;

        r1 = $r0.<com.mkulesh.micromath.widgets.TwoDScrollView: com.mkulesh.micromath.widgets.TwoDScrollView$MyScaleListener mScaleListener>;

        return r1;
    }
    static int access$500(com.mkulesh.micromath.widgets.TwoDScrollView)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView $r0;
        int $i0;

        $r0 := @parameter0: com.mkulesh.micromath.widgets.TwoDScrollView;

        $i0 = specialinvoke $r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollRangeX()>();

        return $i0;
    }
    static android.support.v4.widget.EdgeEffectCompat access$600(com.mkulesh.micromath.widgets.TwoDScrollView)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView $r0;
        android.support.v4.widget.EdgeEffectCompat r1;

        $r0 := @parameter0: com.mkulesh.micromath.widgets.TwoDScrollView;

        r1 = $r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowLeft>;

        return r1;
    }
    static android.support.v4.widget.EdgeEffectCompat access$700(com.mkulesh.micromath.widgets.TwoDScrollView)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView $r0;
        android.support.v4.widget.EdgeEffectCompat r1;

        $r0 := @parameter0: com.mkulesh.micromath.widgets.TwoDScrollView;

        r1 = $r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowRight>;

        return r1;
    }
    static boolean access$800(com.mkulesh.micromath.widgets.TwoDScrollView)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView $r0;
        boolean $z0;

        $r0 := @parameter0: com.mkulesh.micromath.widgets.TwoDScrollView;

        $z0 = specialinvoke $r0.<com.mkulesh.micromath.widgets.TwoDScrollView: boolean canScrollY()>();

        return $z0;
    }
    static int access$900(com.mkulesh.micromath.widgets.TwoDScrollView)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView $r0;
        int $i0;

        $r0 := @parameter0: com.mkulesh.micromath.widgets.TwoDScrollView;

        $i0 = specialinvoke $r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollRangeY()>();

        return $i0;
    }
    private boolean canScrollX()
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        android.widget.LinearLayout $r1;
        int $i0, $i1, $i2;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $r1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.LinearLayout getMainLayout()>();

        if $r1 == null goto label1;

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getWidth()>();

        $i1 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getPaddingLeft()>();

        $i1 = $i1 + $i2;

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getPaddingRight()>();

        $i1 = $i1 + $i2;

        if $i0 >= $i1 goto label1;

        return 1;

     label1:
        return 0;
    }
    private boolean canScrollY()
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        android.widget.LinearLayout $r1;
        int $i0, $i1, $i2;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $r1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.LinearLayout getMainLayout()>();

        if $r1 == null goto label1;

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getHeight()>();

        $i1 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getPaddingTop()>();

        $i1 = $i1 + $i2;

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getPaddingBottom()>();

        $i1 = $i1 + $i2;

        if $i0 >= $i1 goto label1;

        return 1;

     label1:
        return 0;
    }
    private int clamp(int, int, int)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        int $i0, $i1, $i2, i3;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        i3 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $i0 >= $i1 goto label1;

        if i3 >= 0 goto label2;

     label1:
        return 0;

     label2:
        $i2 = $i0 + i3;

        if $i2 <= $i1 goto label3;

        i3 = $i1 - $i0;

     label3:
        return i3;
    }
    private void doScroll(int, int)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        int $i0, $i1;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 != 0 goto label1;

        if $i1 == 0 goto label2;

     label1:
        virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: void smoothScrollBy(int,int)>($i0, $i1);

     label2:
        return;
    }
    private android.view.View findFocusableViewInBounds(boolean, int, int, boolean, int, int)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        boolean $z0, $z1, z2, z3, z4, z5;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10;
        java.util.ArrayList $r1;
        android.view.View r2, r4;
        java.lang.Object $r3;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z1 := @parameter3: boolean;

        $i2 := @parameter4: int;

        $i3 := @parameter5: int;

        $r1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: java.util.ArrayList getFocusables(int)>(2);

        r2 = null;

        z2 = 0;

        $i4 = interfaceinvoke $r1.<java.util.List: int size()>();

        i5 = 0;

     label01:
        if i5 >= $i4 goto label16;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i5);

        r4 = (android.view.View) $r3;

        $i6 = virtualinvoke r4.<android.view.View: int getTop()>();

        $i7 = virtualinvoke r4.<android.view.View: int getBottom()>();

        $i8 = virtualinvoke r4.<android.view.View: int getLeft()>();

        $i9 = virtualinvoke r4.<android.view.View: int getRight()>();

        if $i0 >= $i7 goto label03;

        if $i6 >= $i1 goto label03;

        if $i2 >= $i9 goto label03;

        if $i8 >= $i3 goto label03;

        if $i0 >= $i6 goto label04;

        if $i7 >= $i1 goto label04;

        if $i2 >= $i8 goto label04;

        if $i9 >= $i3 goto label04;

        z3 = 1;

     label02:
        if r2 != null goto label05;

        r2 = r4;

        z2 = z3;

     label03:
        i5 = i5 + 1;

        goto label01;

     label04:
        z3 = 0;

        goto label02;

     label05:
        if $z0 == 0 goto label06;

        $i10 = virtualinvoke r2.<android.view.View: int getTop()>();

        if $i6 < $i10 goto label07;

     label06:
        if $z0 != 0 goto label12;

        $i6 = virtualinvoke r2.<android.view.View: int getBottom()>();

        if $i7 <= $i6 goto label12;

     label07:
        z4 = 1;

     label08:
        if $z1 == 0 goto label09;

        $i7 = virtualinvoke r2.<android.view.View: int getLeft()>();

        if $i8 < $i7 goto label10;

     label09:
        if $z1 != 0 goto label13;

        $i8 = virtualinvoke r2.<android.view.View: int getRight()>();

        if $i9 <= $i8 goto label13;

     label10:
        z5 = 1;

     label11:
        if z2 == 0 goto label14;

        if z3 == 0 goto label03;

        if z4 == 0 goto label03;

        if z5 == 0 goto label03;

        r2 = r4;

        goto label03;

     label12:
        z4 = 0;

        goto label08;

     label13:
        z5 = 0;

        goto label11;

     label14:
        if z3 == 0 goto label15;

        r2 = r4;

        z2 = 1;

        goto label03;

     label15:
        if z4 == 0 goto label03;

        if z5 == 0 goto label03;

        r2 = r4;

        goto label03;

     label16:
        return r2;
    }
    private android.view.View findFocusableViewInMyBounds(boolean, int, boolean, int, android.view.View)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        boolean $z0, $z1;
        int $i0, $i1, i2, i3, i4, $i5;
        android.view.View r1;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $z1 := @parameter2: boolean;

        $i1 := @parameter3: int;

        r1 := @parameter4: android.view.View;

        i2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getVerticalFadingEdgeLength()>();

        i3 = i2 / 2;

        i2 = $i0 + i3;

        i4 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getHeight()>();

        $i0 = i4 + $i0;

        $i0 = $i0 - i3;

        i3 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getHorizontalFadingEdgeLength()>();

        i4 = i3 / 2;

        i3 = $i1 + i4;

        $i5 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getWidth()>();

        $i1 = $i5 + $i1;

        $i1 = $i1 - i4;

        if r1 == null goto label1;

        i4 = virtualinvoke r1.<android.view.View: int getTop()>();

        if i4 >= $i0 goto label1;

        i4 = virtualinvoke r1.<android.view.View: int getBottom()>();

        if i4 <= i2 goto label1;

        i4 = virtualinvoke r1.<android.view.View: int getLeft()>();

        if i4 >= $i1 goto label1;

        i4 = virtualinvoke r1.<android.view.View: int getRight()>();

        if i4 <= i3 goto label1;

        return r1;

     label1:
        r1 = specialinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.view.View findFocusableViewInBounds(boolean,int,int,boolean,int,int)>($z0, i2, $i0, $z1, i3, $i1);

        return r1;
    }
    private int getScrollRangeX()
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        int $i0, $i1, $i2;
        android.widget.LinearLayout $r1;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getChildCount()>();

        if $i0 <= 0 goto label1;

        $r1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.LinearLayout getMainLayout()>();

        $i0 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $i1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getWidth()>();

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getPaddingLeft()>();

        $i1 = $i1 - $i2;

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getPaddingRight()>();

        $i1 = $i1 - $i2;

        $i0 = $i0 - $i1;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        return $i0;

     label1:
        return 0;
    }
    private int getScrollRangeY()
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        int $i0, $i1, $i2;
        android.widget.LinearLayout $r1;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getChildCount()>();

        if $i0 <= 0 goto label1;

        $r1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.LinearLayout getMainLayout()>();

        $i0 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        $i1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getHeight()>();

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getPaddingBottom()>();

        $i1 = $i1 - $i2;

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getPaddingTop()>();

        $i1 = $i1 - $i2;

        $i0 = $i0 - $i1;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        return $i0;

     label1:
        return 0;
    }
    private boolean isViewDescendantOf(android.view.View, android.view.View)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        android.view.View $r1, $r2;
        android.view.ViewParent $r3;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        if $r1 != $r2 goto label1;

        return 1;

     label1:
        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

        $z0 = $r3 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label2;

        $r1 = (android.view.View) $r3;

        $z0 = specialinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: boolean isViewDescendantOf(android.view.View,android.view.View)>($r1, $r2);

        if $z0 != 0 goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }
    private void prepare(android.util.AttributeSet)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        android.util.AttributeSet $r1;
        android.widget.Scroller $r2;
        android.content.Context $r3;
        android.view.ScaleGestureDetector $r4;
        com.mkulesh.micromath.widgets.TwoDScrollView$MyScaleListener $r5;
        android.support.v4.view.GestureDetectorCompat $r6;
        com.mkulesh.micromath.widgets.TwoDScrollView$MyGestureListener $r7;
        int[] $r8;
        android.content.res.TypedArray $r9;
        int $i0;
        android.support.v4.widget.EdgeEffectCompat $r10;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $r1 := @parameter0: android.util.AttributeSet;

        virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: void setFocusable(boolean)>(1);

        virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: void setDescendantFocusability(int)>(262144);

        virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: void setWillNotDraw(boolean)>(0);

        $r2 = new android.widget.Scroller;

        $r3 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.content.Context getContext()>();

        specialinvoke $r2.<android.widget.Scroller: void <init>(android.content.Context)>($r3);

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.Scroller mScroller> = $r2;

        $r4 = new android.view.ScaleGestureDetector;

        $r3 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.content.Context getContext()>();

        $r5 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: com.mkulesh.micromath.widgets.TwoDScrollView$MyScaleListener mScaleListener>;

        specialinvoke $r4.<android.view.ScaleGestureDetector: void <init>(android.content.Context,android.view.ScaleGestureDetector$OnScaleGestureListener)>($r3, $r5);

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.view.ScaleGestureDetector mScaleGestureDetector> = $r4;

        $r6 = new android.support.v4.view.GestureDetectorCompat;

        $r3 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.content.Context getContext()>();

        $r7 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: com.mkulesh.micromath.widgets.TwoDScrollView$MyGestureListener mGestureListener>;

        specialinvoke $r6.<android.support.v4.view.GestureDetectorCompat: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener)>($r3, $r7);

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.support.v4.view.GestureDetectorCompat mGestureDetector> = $r6;

        if $r1 == null goto label1;

        $r3 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.content.Context getContext()>();

        $r8 = <com.mkulesh.micromath.plus.R$styleable: int[] CustomViewExtension>;

        $r9 = virtualinvoke $r3.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r1, $r8, 0, 0);

        $i0 = virtualinvoke $r9.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(18, 0);

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int autoScrollMargins> = $i0;

        virtualinvoke $r9.<android.content.res.TypedArray: void recycle()>();

     label1:
        $r10 = new android.support.v4.widget.EdgeEffectCompat;

        $r3 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.content.Context getContext()>();

        specialinvoke $r10.<android.support.v4.widget.EdgeEffectCompat: void <init>(android.content.Context)>($r3);

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowLeft> = $r10;

        $r10 = new android.support.v4.widget.EdgeEffectCompat;

        $r3 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.content.Context getContext()>();

        specialinvoke $r10.<android.support.v4.widget.EdgeEffectCompat: void <init>(android.content.Context)>($r3);

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop> = $r10;

        $r10 = new android.support.v4.widget.EdgeEffectCompat;

        $r3 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.content.Context getContext()>();

        specialinvoke $r10.<android.support.v4.widget.EdgeEffectCompat: void <init>(android.content.Context)>($r3);

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowRight> = $r10;

        $r10 = new android.support.v4.widget.EdgeEffectCompat;

        $r3 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.content.Context getContext()>();

        specialinvoke $r10.<android.support.v4.widget.EdgeEffectCompat: void <init>(android.content.Context)>($r3);

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom> = $r10;

        virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: void setWillNotDraw(boolean)>(0);

        return;
    }
    private boolean scrollAndFocus(int, int, int, int, int, int)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i8;
        boolean z0, z1;
        android.view.View $r1;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i4 := @parameter4: int;

        $i5 := @parameter5: int;

        i6 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getHeight()>();

        $i8 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollY()>();

        i6 = $i8 + i6;

        if $i0 != 33 goto label06;

        z0 = 1;

     label01:
        i7 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getWidth()>();

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollX()>();

        i7 = $i0 + i7;

        if $i3 != 33 goto label07;

        z1 = 1;

     label02:
        $r1 = specialinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.view.View findFocusableViewInBounds(boolean,int,int,boolean,int,int)>(z0, $i1, $i2, z1, $i4, $i5);

        if $r1 != null goto label03;

     label03:
        if $i1 < $i8 goto label04;

        if $i2 <= i6 goto label05;

     label04:
        if $i4 < $i0 goto label08;

        if $i5 > i7 goto label08;

     label05:
        return 0;

     label06:
        z0 = 0;

        goto label01;

     label07:
        z1 = 0;

        goto label02;

     label08:
        if z0 == 0 goto label11;

        $i1 = $i1 - $i8;

     label09:
        if z1 == 0 goto label12;

        $i0 = $i4 - $i0;

     label10:
        specialinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: void doScroll(int,int)>($i0, $i1);

        return 1;

     label11:
        $i1 = $i2 - i6;

        goto label09;

     label12:
        $i0 = $i5 - i7;

        goto label10;
    }
    public void addView(android.view.View)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        android.view.View $r1;
        int $i0;
        java.lang.IllegalStateException $r2;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getChildCount()>();

        if $i0 <= 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("TwoDScrollView can host only one direct child");

        throw $r2;

     label1:
        specialinvoke r0.<android.widget.FrameLayout: void addView(android.view.View)>($r1);

        return;
    }
    public void addView(android.view.View, int)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        android.view.View $r1;
        int $i0, $i1;
        java.lang.IllegalStateException $r2;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getChildCount()>();

        if $i1 <= 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("TwoDScrollView can host only one direct child");

        throw $r2;

     label1:
        specialinvoke r0.<android.widget.FrameLayout: void addView(android.view.View,int)>($r1, $i0);

        return;
    }
    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        android.view.View $r1;
        int $i0, $i1;
        android.view.ViewGroup$LayoutParams $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        $i1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getChildCount()>();

        if $i1 <= 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("TwoDScrollView can host only one direct child");

        throw $r3;

     label1:
        specialinvoke r0.<android.widget.FrameLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>($r1, $i0, $r2);

        return;
    }
    public void addView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        int $i0;
        java.lang.IllegalStateException $r3;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getChildCount()>();

        if $i0 <= 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("TwoDScrollView can host only one direct child");

        throw $r3;

     label1:
        specialinvoke r0.<android.widget.FrameLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r1, $r2);

        return;
    }
    public boolean arrowScroll(int, boolean)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        int $i0, $i1, i2, $i3, $i4, $i5;
        boolean $z0;
        android.view.View $r1, r2;
        android.view.FocusFinder $r3;
        android.graphics.Rect $r4;
        android.widget.LinearLayout $r5;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.view.View findFocus()>();

        r2 = $r1;

        if $r1 != r0 goto label01;

        r2 = null;

     label01:
        $r3 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        $r1 = virtualinvoke $r3.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r0, r2, $i0);

        if $z0 == 0 goto label04;

        $i1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getMaxScrollAmountHorizontal()>();

     label02:
        if $z0 != 0 goto label10;

        if $r1 == null goto label05;

        $r4 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke $r1.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r4);

        $r4 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r1, $r4);

        $r4 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect>;

        $i1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int computeScrollDeltaToGetChildRectOnScreenY(android.graphics.Rect)>($r4);

        specialinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: void doScroll(int,int)>(0, $i1);

        virtualinvoke $r1.<android.view.View: boolean requestFocus(int)>($i0);

     label03:
        return 1;

     label04:
        $i1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getMaxScrollAmountVertical()>();

        goto label02;

     label05:
        i2 = $i1;

        if $i0 != 33 goto label08;

        $i3 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollY()>();

        if $i3 >= $i1 goto label08;

        i2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollY()>();

     label06:
        if i2 == 0 goto label16;

        if $i0 != 130 goto label09;

     label07:
        specialinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: void doScroll(int,int)>(0, i2);

        goto label03;

     label08:
        if $i0 != 130 goto label06;

        $i3 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getChildCount()>();

        if $i3 <= 0 goto label06;

        $r5 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.LinearLayout getMainLayout()>();

        $i3 = virtualinvoke $r5.<android.widget.LinearLayout: int getBottom()>();

        $i4 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollY()>();

        $i5 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getHeight()>();

        $i4 = $i4 + $i5;

        $i5 = $i3 - $i4;

        if $i5 >= $i1 goto label06;

        i2 = $i3 - $i4;

        goto label06;

     label09:
        i2 = neg i2;

        goto label07;

     label10:
        if $r1 == null goto label11;

        $r4 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke $r1.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r4);

        $r4 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r1, $r4);

        $r4 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect>;

        $i1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int computeScrollDeltaToGetChildRectOnScreenX(android.graphics.Rect)>($r4);

        specialinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: void doScroll(int,int)>($i1, 0);

        virtualinvoke $r1.<android.view.View: boolean requestFocus(int)>($i0);

        goto label03;

     label11:
        i2 = $i1;

        if $i0 != 33 goto label14;

        $i3 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollY()>();

        if $i3 >= $i1 goto label14;

        i2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollY()>();

     label12:
        if i2 == 0 goto label16;

        if $i0 != 130 goto label15;

     label13:
        specialinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: void doScroll(int,int)>(i2, 0);

        goto label03;

     label14:
        if $i0 != 130 goto label12;

        $i3 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getChildCount()>();

        if $i3 <= 0 goto label12;

        $r5 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.LinearLayout getMainLayout()>();

        $i3 = virtualinvoke $r5.<android.widget.LinearLayout: int getBottom()>();

        $i4 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollY()>();

        $i5 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getHeight()>();

        $i4 = $i4 + $i5;

        $i5 = $i3 - $i4;

        if $i5 >= $i1 goto label12;

        i2 = $i3 - $i4;

        goto label12;

     label15:
        i2 = neg i2;

        goto label13;

     label16:
        return 0;
    }
    protected int computeHorizontalScrollRange()
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        int $i0;
        android.widget.LinearLayout $r1;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getChildCount()>();

        if $i0 != 0 goto label1;

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getWidth()>();

        return $i0;

     label1:
        $r1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.LinearLayout getMainLayout()>();

        $i0 = virtualinvoke $r1.<android.widget.LinearLayout: int getRight()>();

        return $i0;
    }
    public void computeScroll()
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        android.widget.Scroller $r1;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.widget.LinearLayout $r2;
        android.support.v4.widget.EdgeEffectCompat $r3;
        com.mkulesh.micromath.widgets.TwoDScrollView$MyGestureListener $r4;
        float $f0;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $r1 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.Scroller mScroller>;

        $z0 = virtualinvoke $r1.<android.widget.Scroller: boolean computeScrollOffset()>();

        if $z0 == 0 goto label10;

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollX()>();

        $i1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollY()>();

        $r1 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.Scroller mScroller>;

        $i2 = virtualinvoke $r1.<android.widget.Scroller: int getCurrX()>();

        $r1 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.Scroller mScroller>;

        $i3 = virtualinvoke $r1.<android.widget.Scroller: int getCurrY()>();

        if $i0 != $i2 goto label01;

        if $i1 == $i3 goto label06;

     label01:
        $i4 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getChildCount()>();

        if $i4 <= 0 goto label07;

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.LinearLayout getMainLayout()>();

        $i4 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getWidth()>();

        $i5 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getPaddingRight()>();

        $i4 = $i4 - $i5;

        $i5 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getPaddingLeft()>();

        $i4 = $i4 - $i5;

        $i5 = virtualinvoke $r2.<android.view.View: int getWidth()>();

        $i4 = specialinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int clamp(int,int,int)>($i2, $i4, $i5);

        $i5 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getHeight()>();

        $i6 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getPaddingBottom()>();

        $i5 = $i5 - $i6;

        $i6 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getPaddingTop()>();

        $i5 = $i5 - $i6;

        $i6 = virtualinvoke $r2.<android.view.View: int getHeight()>();

        $i5 = specialinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int clamp(int,int,int)>($i3, $i5, $i6);

        virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: void scrollTo(int,int)>($i4, $i5);

     label02:
        $i4 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollX()>();

        if $i0 != $i4 goto label03;

        $i4 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollY()>();

        if $i1 == $i4 goto label04;

     label03:
        $i4 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollX()>();

        $i5 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollY()>();

        virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: void onScrollChanged(int,int,int,int)>($i4, $i5, $i0, $i1);

     label04:
        $i5 = specialinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollRangeX()>();

        $i4 = specialinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollRangeY()>();

        if $i2 >= 0 goto label08;

        if $i0 < 0 goto label08;

        $r3 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowLeft>;

        $r4 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: com.mkulesh.micromath.widgets.TwoDScrollView$MyGestureListener mGestureListener>;

        $f0 = $r4.<com.mkulesh.micromath.widgets.TwoDScrollView$MyGestureListener: float velocityX>;

        $i0 = (int) $f0;

        virtualinvoke $r3.<android.support.v4.widget.EdgeEffectCompat: boolean onAbsorb(int)>($i0);

     label05:
        if $i3 >= 0 goto label09;

        if $i1 < 0 goto label09;

        $r3 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop>;

        $r4 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: com.mkulesh.micromath.widgets.TwoDScrollView$MyGestureListener mGestureListener>;

        $f0 = $r4.<com.mkulesh.micromath.widgets.TwoDScrollView$MyGestureListener: float velocityY>;

        $i1 = (int) $f0;

        virtualinvoke $r3.<android.support.v4.widget.EdgeEffectCompat: boolean onAbsorb(int)>($i1);

     label06:
        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r0);

        return;

     label07:
        virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: void scrollTo(int,int)>($i2, $i3);

        goto label02;

     label08:
        if $i2 <= $i5 goto label05;

        if $i0 > $i5 goto label05;

        $r3 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowRight>;

        $r4 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: com.mkulesh.micromath.widgets.TwoDScrollView$MyGestureListener mGestureListener>;

        $f0 = $r4.<com.mkulesh.micromath.widgets.TwoDScrollView$MyGestureListener: float velocityX>;

        $i0 = (int) $f0;

        virtualinvoke $r3.<android.support.v4.widget.EdgeEffectCompat: boolean onAbsorb(int)>($i0);

        goto label05;

     label09:
        if $i3 <= $i4 goto label06;

        if $i1 > $i4 goto label06;

        $r3 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom>;

        $r4 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: com.mkulesh.micromath.widgets.TwoDScrollView$MyGestureListener mGestureListener>;

        $f0 = $r4.<com.mkulesh.micromath.widgets.TwoDScrollView$MyGestureListener: float velocityY>;

        $i1 = (int) $f0;

        virtualinvoke $r3.<android.support.v4.widget.EdgeEffectCompat: boolean onAbsorb(int)>($i1);

        goto label06;

     label10:
        return;
    }
    protected int computeScrollDeltaToGetChildRectOnScreenX(android.graphics.Rect)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        android.graphics.Rect $r1;
        int i0, $i1, $i2, i3, $i4, $i5;
        android.widget.LinearLayout $r2;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $r1 := @parameter0: android.graphics.Rect;

        i0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getChildCount()>();

        if i0 != 0 goto label1;

        return 0;

     label1:
        $i1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getWidth()>();

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollX()>();

        i3 = $i2;

        i0 = $i2 + $i1;

        $i4 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getHorizontalFadingEdgeLength()>();

        $i5 = $r1.<android.graphics.Rect: int left>;

        if $i5 <= 0 goto label2;

        i3 = $i2 + $i4;

     label2:
        $i2 = $r1.<android.graphics.Rect: int right>;

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.LinearLayout getMainLayout()>();

        $i5 = virtualinvoke $r2.<android.widget.LinearLayout: int getWidth()>();

        if $i2 >= $i5 goto label3;

        i0 = i0 - $i4;

     label3:
        $i4 = $r1.<android.graphics.Rect: int right>;

        if $i4 <= i0 goto label6;

        $i4 = $r1.<android.graphics.Rect: int left>;

        if $i4 <= i3 goto label6;

        $i4 = virtualinvoke $r1.<android.graphics.Rect: int width()>();

        if $i4 <= $i1 goto label5;

        $i1 = $r1.<android.graphics.Rect: int left>;

        i3 = $i1 - i3;

     label4:
        $r2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.LinearLayout getMainLayout()>();

        $i1 = virtualinvoke $r2.<android.widget.LinearLayout: int getRight()>();

        i0 = $i1 - i0;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>(i3, i0);

        return i0;

     label5:
        i3 = $r1.<android.graphics.Rect: int right>;

        i3 = i3 - i0;

        goto label4;

     label6:
        $i4 = $r1.<android.graphics.Rect: int left>;

        if $i4 >= i3 goto label9;

        $i4 = $r1.<android.graphics.Rect: int right>;

        if $i4 >= i0 goto label9;

        $i4 = virtualinvoke $r1.<android.graphics.Rect: int width()>();

        if $i4 <= $i1 goto label8;

        i3 = $r1.<android.graphics.Rect: int right>;

        i0 = i0 - i3;

        i0 = 0 - i0;

     label7:
        i3 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollX()>();

        i3 = neg i3;

        i0 = staticinvoke <java.lang.Math: int max(int,int)>(i0, i3);

        return i0;

     label8:
        i0 = $r1.<android.graphics.Rect: int left>;

        i0 = i3 - i0;

        i0 = 0 - i0;

        goto label7;

     label9:
        return 0;
    }
    protected int computeScrollDeltaToGetChildRectOnScreenY(android.graphics.Rect)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        android.graphics.Rect $r1;
        int i0, $i1, $i2, i3, $i4, $i5;
        android.widget.LinearLayout $r2;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $r1 := @parameter0: android.graphics.Rect;

        i0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getChildCount()>();

        if i0 != 0 goto label1;

        return 0;

     label1:
        $i1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getHeight()>();

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollY()>();

        i3 = $i2;

        i0 = $i2 + $i1;

        $i4 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getVerticalFadingEdgeLength()>();

        $i5 = $r1.<android.graphics.Rect: int top>;

        if $i5 <= 0 goto label2;

        i3 = $i2 + $i4;

     label2:
        $i2 = $r1.<android.graphics.Rect: int bottom>;

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.LinearLayout getMainLayout()>();

        $i5 = virtualinvoke $r2.<android.widget.LinearLayout: int getHeight()>();

        if $i2 >= $i5 goto label3;

        i0 = i0 - $i4;

     label3:
        $i4 = $r1.<android.graphics.Rect: int bottom>;

        if $i4 <= i0 goto label6;

        $i4 = $r1.<android.graphics.Rect: int top>;

        if $i4 <= i3 goto label6;

        $i4 = virtualinvoke $r1.<android.graphics.Rect: int height()>();

        if $i4 <= $i1 goto label5;

        $i1 = $r1.<android.graphics.Rect: int top>;

        i3 = $i1 - i3;

     label4:
        $r2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.LinearLayout getMainLayout()>();

        $i1 = virtualinvoke $r2.<android.widget.LinearLayout: int getBottom()>();

        i0 = $i1 - i0;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>(i3, i0);

        return i0;

     label5:
        i3 = $r1.<android.graphics.Rect: int bottom>;

        i3 = i3 - i0;

        goto label4;

     label6:
        $i4 = $r1.<android.graphics.Rect: int top>;

        if $i4 >= i3 goto label9;

        $i4 = $r1.<android.graphics.Rect: int bottom>;

        if $i4 >= i0 goto label9;

        $i4 = virtualinvoke $r1.<android.graphics.Rect: int height()>();

        if $i4 <= $i1 goto label8;

        i3 = $r1.<android.graphics.Rect: int bottom>;

        i0 = i0 - i3;

        i0 = 0 - i0;

     label7:
        i3 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollY()>();

        i3 = neg i3;

        i0 = staticinvoke <java.lang.Math: int max(int,int)>(i0, i3);

        return i0;

     label8:
        i0 = $r1.<android.graphics.Rect: int top>;

        i0 = i3 - i0;

        i0 = 0 - i0;

        goto label7;

     label9:
        return 0;
    }
    protected int computeVerticalScrollRange()
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        int $i0;
        android.widget.LinearLayout $r1;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getChildCount()>();

        if $i0 != 0 goto label1;

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getHeight()>();

        return $i0;

     label1:
        $r1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.LinearLayout getMainLayout()>();

        $i0 = virtualinvoke $r1.<android.widget.LinearLayout: int getBottom()>();

        return $i0;
    }
    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        android.view.KeyEvent $r1;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $r1 := @parameter0: android.view.KeyEvent;

        $z0 = specialinvoke r0.<android.widget.FrameLayout: boolean dispatchKeyEvent(android.view.KeyEvent)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: boolean executeKeyEvent(android.view.KeyEvent)>($r1);

        return $z0;
    }
    public void draw(android.graphics.Canvas)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        android.graphics.Canvas $r1;
        boolean z0, $z1;
        android.widget.LinearLayout $r2;
        int $i0, $i1, $i2, $i3, $i4;
        android.support.v4.widget.EdgeEffectCompat $r3;
        float $f0, $f1;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.widget.FrameLayout: void draw(android.graphics.Canvas)>($r1);

        z0 = 0;

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.LinearLayout getMainLayout()>();

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getWidth()>();

        $i1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getPaddingLeft()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getPaddingRight()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke $r2.<android.view.View: int getWidth()>();

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getHeight()>();

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getPaddingTop()>();

        $i0 = $i0 - $i2;

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getPaddingBottom()>();

        $i0 = $i0 - $i2;

        $i2 = virtualinvoke $r2.<android.view.View: int getHeight()>();

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i2);

        $r3 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop>;

        $z1 = virtualinvoke $r3.<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()>();

        if $z1 != 0 goto label2;

        $i2 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $i3 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getPaddingLeft()>();

        $f0 = (float) $i3;

        $i3 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollY()>();

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(0, $i3);

        $f1 = (float) $i3;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $r3 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop>;

        $i3 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getHeight()>();

        virtualinvoke $r3.<android.support.v4.widget.EdgeEffectCompat: void setSize(int,int)>($i1, $i3);

        $r3 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop>;

        $z1 = virtualinvoke $r3.<android.support.v4.widget.EdgeEffectCompat: boolean draw(android.graphics.Canvas)>($r1);

        if $z1 == 0 goto label1;

        z0 = 1;

     label1:
        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i2);

     label2:
        $r3 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom>;

        $z1 = virtualinvoke $r3.<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()>();

        if $z1 != 0 goto label4;

        $i2 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $i3 = neg $i1;

        $i4 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getPaddingLeft()>();

        $i3 = $i3 + $i4;

        $f0 = (float) $i3;

        $i3 = specialinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollRangeY()>();

        $i4 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollY()>();

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i4);

        $i4 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getHeight()>();

        $i3 = $i3 + $i4;

        $f1 = (float) $i3;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $f0 = (float) $i1;

        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float,float,float)>(180.0F, $f0, 0.0F);

        $r3 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom>;

        $i3 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getHeight()>();

        virtualinvoke $r3.<android.support.v4.widget.EdgeEffectCompat: void setSize(int,int)>($i1, $i3);

        $r3 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom>;

        $z1 = virtualinvoke $r3.<android.support.v4.widget.EdgeEffectCompat: boolean draw(android.graphics.Canvas)>($r1);

        if $z1 == 0 goto label3;

        z0 = 1;

     label3:
        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i2);

     label4:
        $r3 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowLeft>;

        $z1 = virtualinvoke $r3.<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()>();

        if $z1 != 0 goto label6;

        $i1 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float)>(270.0F);

        $i2 = neg $i0;

        $i3 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getPaddingTop()>();

        $i2 = $i2 + $i3;

        $f0 = (float) $i2;

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollX()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>(0, $i2);

        $f1 = (float) $i2;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $r3 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowLeft>;

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getWidth()>();

        virtualinvoke $r3.<android.support.v4.widget.EdgeEffectCompat: void setSize(int,int)>($i0, $i2);

        $r3 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowLeft>;

        $z1 = virtualinvoke $r3.<android.support.v4.widget.EdgeEffectCompat: boolean draw(android.graphics.Canvas)>($r1);

        if $z1 == 0 goto label5;

        z0 = 1;

     label5:
        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i1);

     label6:
        $r3 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowRight>;

        $z1 = virtualinvoke $r3.<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()>();

        if $z1 != 0 goto label8;

        $i1 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float)>(90.0F);

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getPaddingTop()>();

        $i2 = neg $i2;

        $f0 = (float) $i2;

        $i2 = specialinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollRangeX()>();

        $i3 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollX()>();

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i3);

        $i3 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getWidth()>();

        $i2 = $i2 + $i3;

        $i2 = neg $i2;

        $f1 = (float) $i2;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $r3 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowRight>;

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getWidth()>();

        virtualinvoke $r3.<android.support.v4.widget.EdgeEffectCompat: void setSize(int,int)>($i0, $i2);

        $r3 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowRight>;

        $z1 = virtualinvoke $r3.<android.support.v4.widget.EdgeEffectCompat: boolean draw(android.graphics.Canvas)>($r1);

        if $z1 == 0 goto label7;

        z0 = 1;

     label7:
        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i1);

     label8:
        if z0 == 0 goto label9;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r0);

     label9:
        return;
    }
    public boolean executeKeyEvent(android.view.KeyEvent)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        android.view.KeyEvent $r1;
        android.graphics.Rect $r2;
        int $i0;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $r1 := @parameter0: android.view.KeyEvent;

        $r2 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke $r2.<android.graphics.Rect: void setEmpty()>();

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getAction()>();

        if $i0 != 0 goto label10;

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getKeyCode()>();

        lookupswitch($i0)
        {
            case 19: goto label02;
            case 20: goto label04;
            case 21: goto label06;
            case 22: goto label08;
            default: goto label01;
        };

     label01:
        return 0;

     label02:
        $z0 = virtualinvoke $r1.<android.view.KeyEvent: boolean isAltPressed()>();

        if $z0 != 0 goto label03;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: boolean arrowScroll(int,boolean)>(33, 0);

        return $z0;

     label03:
        $z0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: boolean fullScroll(int,boolean)>(33, 0);

        return $z0;

     label04:
        $z0 = virtualinvoke $r1.<android.view.KeyEvent: boolean isAltPressed()>();

        if $z0 != 0 goto label05;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: boolean arrowScroll(int,boolean)>(130, 0);

        return $z0;

     label05:
        $z0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: boolean fullScroll(int,boolean)>(130, 0);

        return $z0;

     label06:
        $z0 = virtualinvoke $r1.<android.view.KeyEvent: boolean isAltPressed()>();

        if $z0 != 0 goto label07;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: boolean arrowScroll(int,boolean)>(17, 1);

        return $z0;

     label07:
        $z0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: boolean fullScroll(int,boolean)>(17, 1);

        return $z0;

     label08:
        $z0 = virtualinvoke $r1.<android.view.KeyEvent: boolean isAltPressed()>();

        if $z0 != 0 goto label09;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: boolean arrowScroll(int,boolean)>(66, 1);

        return $z0;

     label09:
        $z0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: boolean fullScroll(int,boolean)>(66, 1);

        return $z0;

     label10:
        return 0;
    }
    public void fling(int, int)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.widget.LinearLayout $r1;
        android.widget.Scroller $r2;
        boolean z0, z1;
        android.view.View $r3;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i3 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getChildCount()>();

        if $i3 <= 0 goto label6;

        $i3 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getHeight()>();

        $i4 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getPaddingBottom()>();

        $i3 = $i3 - $i4;

        $i4 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getPaddingTop()>();

        $i3 = $i3 - $i4;

        $r1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.LinearLayout getMainLayout()>();

        $i4 = virtualinvoke $r1.<android.widget.LinearLayout: int getHeight()>();

        $i5 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getWidth()>();

        $i6 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getPaddingRight()>();

        $i5 = $i5 - $i6;

        $i6 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getPaddingLeft()>();

        $i2 = $i5 - $i6;

        $r1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.LinearLayout getMainLayout()>();

        $i7 = virtualinvoke $r1.<android.widget.LinearLayout: int getWidth()>();

        $r2 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.Scroller mScroller>;

        $i5 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollX()>();

        $i6 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollY()>();

        $i2 = $i7 - $i2;

        $i3 = $i4 - $i3;

        virtualinvoke $r2.<android.widget.Scroller: void fling(int,int,int,int,int,int,int,int)>($i5, $i6, $i0, $i1, 0, $i2, 0, $i3);

        if $i1 <= 0 goto label4;

        z0 = 1;

     label1:
        if $i0 <= 0 goto label5;

        z1 = 1;

     label2:
        $r2 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.Scroller mScroller>;

        $i0 = virtualinvoke $r2.<android.widget.Scroller: int getFinalX()>();

        $r2 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.Scroller mScroller>;

        $i1 = virtualinvoke $r2.<android.widget.Scroller: int getFinalY()>();

        $r3 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.view.View findFocus()>();

        $r3 = specialinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.view.View findFocusableViewInMyBounds(boolean,int,boolean,int,android.view.View)>(z1, $i0, z0, $i1, $r3);

        if $r3 != null goto label3;

     label3:
        $r2 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.Scroller mScroller>;

        $i0 = virtualinvoke $r2.<android.widget.Scroller: int getDuration()>();

        virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: boolean awakenScrollBars(int)>($i0);

        virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: void invalidate()>();

        return;

     label4:
        z0 = 0;

        goto label1;

     label5:
        z1 = 0;

        goto label2;

     label6:
        return;
    }
    public boolean fullScroll(int, boolean)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        int $i0, $i1, $i2;
        boolean $z0;
        android.graphics.Rect $r1, $r3;
        android.view.View $r2;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        if $z0 != 0 goto label4;

        if $i0 != 130 goto label3;

        $z0 = 1;

     label1:
        $i1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getHeight()>();

        $r1 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect>;

        $r1.<android.graphics.Rect: int top> = 0;

        $r1 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect>;

        $r1.<android.graphics.Rect: int bottom> = $i1;

        if $z0 == 0 goto label2;

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getChildCount()>();

        if $i2 <= 0 goto label2;

        $i2 = $i2 + -1;

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.view.View getChildAt(int)>($i2);

        $r1 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect>;

        $i2 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        $r1.<android.graphics.Rect: int bottom> = $i2;

        $r1 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect>;

        $r3 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect>;

        $i2 = $r3.<android.graphics.Rect: int bottom>;

        $i1 = $i2 - $i1;

        $r1.<android.graphics.Rect: int top> = $i1;

     label2:
        $r1 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect>;

        $i1 = $r1.<android.graphics.Rect: int top>;

        $r1 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect>;

        $i2 = $r1.<android.graphics.Rect: int bottom>;

        $z0 = specialinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: boolean scrollAndFocus(int,int,int,int,int,int)>($i0, $i1, $i2, 0, 0, 0);

        return $z0;

     label3:
        $z0 = 0;

        goto label1;

     label4:
        if $i0 != 130 goto label7;

        $z0 = 1;

     label5:
        $i1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getWidth()>();

        $r1 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect>;

        $r1.<android.graphics.Rect: int left> = 0;

        $r1 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect>;

        $r1.<android.graphics.Rect: int right> = $i1;

        if $z0 == 0 goto label6;

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getChildCount()>();

        if $i2 <= 0 goto label6;

        $i2 = $i2 + -1;

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.view.View getChildAt(int)>($i2);

        $r1 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect>;

        $i2 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        $r1.<android.graphics.Rect: int right> = $i2;

        $r1 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect>;

        $r3 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect>;

        $i2 = $r3.<android.graphics.Rect: int right>;

        $i1 = $i2 - $i1;

        $r1.<android.graphics.Rect: int left> = $i1;

     label6:
        $r1 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect>;

        $i1 = $r1.<android.graphics.Rect: int top>;

        $r1 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect>;

        $i2 = $r1.<android.graphics.Rect: int bottom>;

        $z0 = specialinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: boolean scrollAndFocus(int,int,int,int,int,int)>(0, 0, 0, $i0, $i1, $i2);

        return $z0;

     label7:
        $z0 = 0;

        goto label5;
    }
    protected float getBottomFadingEdgeStrength()
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        int i0, $i1, $i2, $i3;
        android.widget.LinearLayout $r1;
        float $f0, $f1;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $i1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getChildCount()>();

        if $i1 != 0 goto label1;

        return 0.0F;

     label1:
        $i1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getVerticalFadingEdgeLength()>();

        i0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getHeight()>();

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getPaddingBottom()>();

        i0 = i0 - $i2;

        $r1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.LinearLayout getMainLayout()>();

        $i2 = virtualinvoke $r1.<android.widget.LinearLayout: int getBottom()>();

        $i3 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollY()>();

        $i2 = $i2 - $i3;

        i0 = $i2 - i0;

        if i0 >= $i1 goto label2;

        $f0 = (float) i0;

        $f1 = (float) $i1;

        $f0 = $f0 / $f1;

        return $f0;

     label2:
        return 1.0F;
    }
    protected float getLeftFadingEdgeStrength()
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        float $f0, $f1;
        int $i0, $i1;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getChildCount()>();

        if $i0 != 0 goto label1;

        return 0.0F;

     label1:
        $i0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getHorizontalFadingEdgeLength()>();

        $i1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollX()>();

        if $i1 >= $i0 goto label2;

        $i1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollX()>();

        $f1 = (float) $i1;

        $f0 = (float) $i0;

        $f0 = $f1 / $f0;

        return $f0;

     label2:
        return 1.0F;
    }
    public android.widget.LinearLayout getMainLayout()
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        android.view.View $r1;
        android.widget.LinearLayout $r2;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $r1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.view.View getChildAt(int)>(0);

        $r2 = (android.widget.LinearLayout) $r1;

        return $r2;
    }
    public int getMaxScrollAmountHorizontal()
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        int $i0;
        float $f0;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getWidth()>();

        $f0 = (float) $i0;

        $f0 = 0.5F * $f0;

        $i0 = (int) $f0;

        return $i0;
    }
    public int getMaxScrollAmountVertical()
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        int $i0;
        float $f0;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getHeight()>();

        $f0 = (float) $i0;

        $f0 = 0.5F * $f0;

        $i0 = (int) $f0;

        return $i0;
    }
    protected float getRightFadingEdgeStrength()
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        int i0, $i1, $i2, $i3;
        android.widget.LinearLayout $r1;
        float $f0, $f1;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $i1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getChildCount()>();

        if $i1 != 0 goto label1;

        return 0.0F;

     label1:
        $i1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getHorizontalFadingEdgeLength()>();

        i0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getWidth()>();

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getPaddingRight()>();

        i0 = i0 - $i2;

        $r1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.LinearLayout getMainLayout()>();

        $i2 = virtualinvoke $r1.<android.widget.LinearLayout: int getRight()>();

        $i3 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollX()>();

        $i2 = $i2 - $i3;

        i0 = $i2 - i0;

        if i0 >= $i1 goto label2;

        $f0 = (float) i0;

        $f1 = (float) $i1;

        $f0 = $f0 / $f1;

        return $f0;

     label2:
        return 1.0F;
    }
    protected float getTopFadingEdgeStrength()
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        float $f0, $f1;
        int $i0, $i1;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getChildCount()>();

        if $i0 != 0 goto label1;

        return 0.0F;

     label1:
        $i0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getVerticalFadingEdgeLength()>();

        $i1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollY()>();

        if $i1 >= $i0 goto label2;

        $i1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollY()>();

        $f1 = (float) $i1;

        $f0 = (float) $i0;

        $f0 = $f1 / $f0;

        return $f0;

     label2:
        return 1.0F;
    }
    protected void measureChild(android.view.View, int, int)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        android.view.View $r1;
        int $i0, $i1;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i0 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i0, $i1);

        return;
    }
    protected void measureChildWithMargins(android.view.View, int, int, int, int)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3;
        android.view.ViewGroup$LayoutParams $r2;
        android.view.ViewGroup$MarginLayoutParams r3;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.view.ViewGroup$MarginLayoutParams) $r2;

        $i0 = r3.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i1 = r3.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i0 = $i0 + $i1;

        $i0 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i0, 0);

        $i1 = r3.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i2 = r3.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i1 = $i1 + $i2;

        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i1, 0);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i0, $i1);

        return;
    }
    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        android.view.MotionEvent $r1;
        int $i0;
        com.mkulesh.micromath.widgets.TwoDScrollView$MyGestureListener $r2;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)>($r1);

        if $i0 != 0 goto label1;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getEdgeFlags()>();

        if $i0 == 0 goto label1;

        return 0;

     label1:
        virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        $r2 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: com.mkulesh.micromath.widgets.TwoDScrollView$MyGestureListener mGestureListener>;

        $z0 = staticinvoke <com.mkulesh.micromath.widgets.TwoDScrollView$MyGestureListener: boolean access$200(com.mkulesh.micromath.widgets.TwoDScrollView$MyGestureListener)>($r2);

        return $z0;
    }
    protected void onLayout(boolean, int, int, int, int)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        specialinvoke r0.<android.widget.FrameLayout: void onLayout(boolean,int,int,int,int)>($z0, $i0, $i1, $i2, $i3);

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: boolean mIsLayoutDirty> = 0;

        $r1 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.view.View mChildToScrollTo>;

        if $r1 == null goto label1;

        $r1 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.view.View mChildToScrollTo>;

        $z0 = specialinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: boolean isViewDescendantOf(android.view.View,android.view.View)>($r1, r0);

        if $z0 == 0 goto label1;

        $r1 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.view.View mChildToScrollTo>;

        virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: void scrollToChild(android.view.View)>($r1);

     label1:
        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.view.View mChildToScrollTo> = null;

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollX()>();

        $i1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollY()>();

        virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: void scrollTo(int,int)>($i0, $i1);

        return;
    }
    protected void onSizeChanged(int, int, int, int)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        specialinvoke r0.<android.widget.FrameLayout: void onSizeChanged(int,int,int,int)>($i0, $i1, $i2, $i3);

        $r1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.view.View findFocus()>();

        if $r1 == null goto label2;

        if r0 != $r1 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: void scrollToChild(android.view.View)>($r1);

     label2:
        return;
    }
    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        android.view.MotionEvent $r1;
        android.view.ScaleGestureDetector $r2;
        boolean $z0, $z1;
        android.support.v4.view.GestureDetectorCompat $r3;
        int $i0;
        com.mkulesh.micromath.widgets.TwoDScrollView$MyGestureListener $r4;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.view.ScaleGestureDetector mScaleGestureDetector>;

        $z0 = virtualinvoke $r2.<android.view.ScaleGestureDetector: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        $r3 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.support.v4.view.GestureDetectorCompat mGestureDetector>;

        $z1 = virtualinvoke $r3.<android.support.v4.view.GestureDetectorCompat: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        if $z1 != 0 goto label1;

        if $z0 == 0 goto label6;

     label1:
        $z0 = 1;

     label2:
        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)>($r1);

        if $i0 == 1 goto label3;

        if $i0 == 3 goto label3;

        if $i0 != 6 goto label4;

     label3:
        $r4 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: com.mkulesh.micromath.widgets.TwoDScrollView$MyGestureListener mGestureListener>;

        virtualinvoke $r4.<com.mkulesh.micromath.widgets.TwoDScrollView$MyGestureListener: void finish()>();

     label4:
        if $z0 != 0 goto label5;

        $z0 = specialinvoke r0.<android.widget.FrameLayout: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        if $z0 == 0 goto label7;

     label5:
        return 1;

     label6:
        $z0 = 0;

        goto label2;

     label7:
        return 0;
    }
    public void requestChildFocus(android.view.View, android.view.View)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        android.view.View $r1, $r2;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        $z0 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: boolean mIsLayoutDirty>;

        if $z0 != 0 goto label2;

        virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: void scrollToChild(android.view.View)>($r2);

     label1:
        specialinvoke r0.<android.widget.FrameLayout: void requestChildFocus(android.view.View,android.view.View)>($r1, $r2);

        return;

     label2:
        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.view.View mChildToScrollTo> = $r2;

        goto label1;
    }
    public boolean requestChildRectangleOnScreen(android.view.View, android.graphics.Rect, boolean)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        android.view.View $r1;
        android.graphics.Rect $r2;
        boolean $z0, $z1;
        int $i0, $i1, $i2;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Rect;

        $z0 := @parameter2: boolean;

        $z1 = $r1 instanceof android.view.ViewGroup;

        if $z1 == 0 goto label1;

        return 1;

     label1:
        $i0 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $i1 = virtualinvoke $r1.<android.view.View: int getScrollX()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i2 = virtualinvoke $r1.<android.view.View: int getScrollY()>();

        $i1 = $i1 - $i2;

        virtualinvoke $r2.<android.graphics.Rect: void offset(int,int)>($i0, $i1);

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: boolean scrollToChildRect(android.graphics.Rect,boolean)>($r2, $z0);

        return $z0;
    }
    public void requestLayout()
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: boolean mIsLayoutDirty> = 1;

        specialinvoke r0.<android.widget.FrameLayout: void requestLayout()>();

        return;
    }
    public void scrollTo(int, int)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        int $i0, $i1, $i2, $i3;
        android.widget.LinearLayout $r1;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getChildCount()>();

        if $i2 <= 0 goto label2;

        $r1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.LinearLayout getMainLayout()>();

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getWidth()>();

        $i3 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getPaddingRight()>();

        $i2 = $i2 - $i3;

        $i3 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getPaddingLeft()>();

        $i2 = $i2 - $i3;

        $i3 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $i0 = specialinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int clamp(int,int,int)>($i0, $i2, $i3);

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getHeight()>();

        $i3 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getPaddingBottom()>();

        $i2 = $i2 - $i3;

        $i3 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getPaddingTop()>();

        $i2 = $i2 - $i3;

        $i3 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        $i1 = specialinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int clamp(int,int,int)>($i1, $i2, $i3);

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollX()>();

        if $i0 != $i2 goto label1;

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollY()>();

        if $i1 == $i2 goto label2;

     label1:
        specialinvoke r0.<android.widget.FrameLayout: void scrollTo(int,int)>($i0, $i1);

     label2:
        return;
    }
    public void scrollToChild(android.view.View)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        android.view.View $r1;
        android.graphics.Rect $r2;
        int $i0, $i1;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $r1 := @parameter0: android.view.View;

        $r2 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke $r1.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r2);

        $r2 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r1, $r2);

        $r2 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect>;

        $i0 = $r2.<android.graphics.Rect: int top>;

        $i1 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int autoScrollMargins>;

        $i0 = $i0 - $i1;

        $r2.<android.graphics.Rect: int top> = $i0;

        $r2 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect>;

        $i0 = $r2.<android.graphics.Rect: int bottom>;

        $i1 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int autoScrollMargins>;

        $i0 = $i0 + $i1;

        $r2.<android.graphics.Rect: int bottom> = $i0;

        $r2 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect>;

        $i0 = $r2.<android.graphics.Rect: int left>;

        $i1 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int autoScrollMargins>;

        $i0 = $i0 - $i1;

        $r2.<android.graphics.Rect: int left> = $i0;

        $r2 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect>;

        $i0 = $r2.<android.graphics.Rect: int right>;

        $i1 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int autoScrollMargins>;

        $i0 = $i0 + $i1;

        $r2.<android.graphics.Rect: int right> = $i0;

        $r2 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect>;

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int computeScrollDeltaToGetChildRectOnScreenX(android.graphics.Rect)>($r2);

        $r2 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.graphics.Rect mTempRect>;

        $i1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int computeScrollDeltaToGetChildRectOnScreenY(android.graphics.Rect)>($r2);

        if $i0 != 0 goto label1;

        if $i1 == 0 goto label2;

     label1:
        virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: void scrollBy(int,int)>($i0, $i1);

     label2:
        return;
    }
    public boolean scrollToChildRect(android.graphics.Rect, boolean)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        android.graphics.Rect $r1;
        boolean $z0, z1;
        int $i0, $i1;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $r1 := @parameter0: android.graphics.Rect;

        $z0 := @parameter1: boolean;

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int computeScrollDeltaToGetChildRectOnScreenX(android.graphics.Rect)>($r1);

        $i1 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int computeScrollDeltaToGetChildRectOnScreenY(android.graphics.Rect)>($r1);

        if $i0 != 0 goto label1;

        if $i1 == 0 goto label3;

     label1:
        z1 = 1;

     label2:
        if z1 == 0 goto label5;

        if $z0 == 0 goto label4;

        virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: void scrollBy(int,int)>($i0, $i1);

        return z1;

     label3:
        z1 = 0;

        goto label2;

     label4:
        virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: void smoothScrollBy(int,int)>($i0, $i1);

     label5:
        return z1;
    }
    public void setMainLayout(android.widget.LinearLayout)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        android.widget.LinearLayout $r1;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $r1 := @parameter0: android.widget.LinearLayout;

        virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: void removeAllViews()>();

        specialinvoke r0.<android.widget.FrameLayout: void addView(android.view.View)>($r1);

        return;
    }
    public void setScaleListener(android.support.v7.app.AppCompatActivity, com.mkulesh.micromath.widgets.ListChangeIf)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        android.support.v7.app.AppCompatActivity $r1;
        com.mkulesh.micromath.widgets.ListChangeIf $r2;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $r1 := @parameter0: android.support.v7.app.AppCompatActivity;

        $r2 := @parameter1: com.mkulesh.micromath.widgets.ListChangeIf;

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: com.mkulesh.micromath.widgets.ListChangeIf listChangeIf> = $r2;

        return;
    }
    public final void smoothScrollBy(int, int)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        int $i0, $i1, $i5, $i6;
        long l2, $l3;
        byte $b4;
        android.widget.Scroller $r1;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        l2 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        $l3 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: long mLastScroll>;

        l2 = l2 - $l3;

        $b4 = l2 cmp 250L;

        if $b4 <= 0 goto label2;

        $r1 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.Scroller mScroller>;

        $i5 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollX()>();

        $i6 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollY()>();

        virtualinvoke $r1.<android.widget.Scroller: void startScroll(int,int,int,int)>($i5, $i6, $i0, $i1);

        $r1 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.Scroller mScroller>;

        $i0 = virtualinvoke $r1.<android.widget.Scroller: int getDuration()>();

        virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: boolean awakenScrollBars(int)>($i0);

        virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: void invalidate()>();

     label1:
        l2 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        r0.<com.mkulesh.micromath.widgets.TwoDScrollView: long mLastScroll> = l2;

        return;

     label2:
        $r1 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.Scroller mScroller>;

        $z0 = virtualinvoke $r1.<android.widget.Scroller: boolean isFinished()>();

        if $z0 != 0 goto label3;

        $r1 = r0.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.Scroller mScroller>;

        virtualinvoke $r1.<android.widget.Scroller: void abortAnimation()>();

     label3:
        virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: void scrollBy(int,int)>($i0, $i1);

        goto label1;
    }
    public final void smoothScrollTo(int, int)
    {
        com.mkulesh.micromath.widgets.TwoDScrollView r0;
        int $i0, $i1, $i2;

        r0 := @this: com.mkulesh.micromath.widgets.TwoDScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollX()>();

        $i0 = $i0 - $i2;

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: int getScrollY()>();

        $i1 = $i1 - $i2;

        virtualinvoke r0.<com.mkulesh.micromath.widgets.TwoDScrollView: void smoothScrollBy(int,int)>($i0, $i1);

        return;
    }
