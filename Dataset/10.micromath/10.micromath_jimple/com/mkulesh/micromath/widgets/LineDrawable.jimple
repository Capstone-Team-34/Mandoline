com.mkulesh.micromath.widgets.LineDrawable extends android.graphics.drawable.Drawable
private final android.graphics.Paint mPaint
private final android.graphics.Path path
    public void <init>(android.graphics.Paint, int, int)
    {
        com.mkulesh.micromath.widgets.LineDrawable r0;
        android.graphics.Paint $r1;
        int $i0, $i1;
        android.graphics.Path $r2;

        r0 := @this: com.mkulesh.micromath.widgets.LineDrawable;

        $r1 := @parameter0: android.graphics.Paint;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r2 = new android.graphics.Path;

        specialinvoke $r2.<android.graphics.Path: void <init>()>();

        r0.<com.mkulesh.micromath.widgets.LineDrawable: android.graphics.Path path> = $r2;

        r0.<com.mkulesh.micromath.widgets.LineDrawable: android.graphics.Paint mPaint> = $r1;

        virtualinvoke r0.<com.mkulesh.micromath.widgets.LineDrawable: void setBounds(int,int,int,int)>(0, 0, $i0, $i1);

        return;
    }
    public void draw(android.graphics.Canvas)
    {
        com.mkulesh.micromath.widgets.LineDrawable r0;
        android.graphics.Canvas $r1;
        float f0, $f1;
        android.graphics.Rect $r2;
        int $i0;
        android.graphics.Paint $r3;
        android.graphics.Path $r4;

        r0 := @this: com.mkulesh.micromath.widgets.LineDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.widgets.LineDrawable: android.graphics.Rect getBounds()>();

        $i0 = virtualinvoke $r2.<android.graphics.Rect: int height()>();

        f0 = (float) $i0;

        $r3 = r0.<com.mkulesh.micromath.widgets.LineDrawable: android.graphics.Paint mPaint>;

        $f1 = virtualinvoke $r3.<android.graphics.Paint: float getStrokeWidth()>();

        f0 = f0 - $f1;

        f0 = f0 / 2.0F;

        $r4 = r0.<com.mkulesh.micromath.widgets.LineDrawable: android.graphics.Path path>;

        virtualinvoke $r4.<android.graphics.Path: void reset()>();

        $r4 = r0.<com.mkulesh.micromath.widgets.LineDrawable: android.graphics.Path path>;

        virtualinvoke $r4.<android.graphics.Path: void moveTo(float,float)>(0.0F, f0);

        $r4 = r0.<com.mkulesh.micromath.widgets.LineDrawable: android.graphics.Path path>;

        $i0 = virtualinvoke $r2.<android.graphics.Rect: int width()>();

        $f1 = (float) $i0;

        virtualinvoke $r4.<android.graphics.Path: void lineTo(float,float)>($f1, f0);

        $r4 = r0.<com.mkulesh.micromath.widgets.LineDrawable: android.graphics.Path path>;

        $r3 = r0.<com.mkulesh.micromath.widgets.LineDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r4, $r3);

        return;
    }
    public int getOpacity()
    {
        com.mkulesh.micromath.widgets.LineDrawable r0;

        r0 := @this: com.mkulesh.micromath.widgets.LineDrawable;

        return -3;
    }
    protected boolean onLevelChange(int)
    {
        com.mkulesh.micromath.widgets.LineDrawable r0;
        int $i0;

        r0 := @this: com.mkulesh.micromath.widgets.LineDrawable;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.mkulesh.micromath.widgets.LineDrawable: void invalidateSelf()>();

        return 1;
    }
    public void setAlpha(int)
    {
        com.mkulesh.micromath.widgets.LineDrawable r0;
        int $i0;

        r0 := @this: com.mkulesh.micromath.widgets.LineDrawable;

        $i0 := @parameter0: int;

        return;
    }
    public void setColorFilter(android.graphics.ColorFilter)
    {
        com.mkulesh.micromath.widgets.LineDrawable r0;
        android.graphics.ColorFilter $r1;

        r0 := @this: com.mkulesh.micromath.widgets.LineDrawable;

        $r1 := @parameter0: android.graphics.ColorFilter;

        return;
    }
