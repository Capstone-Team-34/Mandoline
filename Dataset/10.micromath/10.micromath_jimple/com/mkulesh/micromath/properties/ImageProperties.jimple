com.mkulesh.micromath.properties.ImageProperties extends java.lang.Object implements android.os.Parcelable
public static final android.os.Parcelable$Creator CREATOR
public static final int DEFAULT_SIZE
public static final java.lang.String EMPTY_FILE_NAME
public static final java.lang.String XML_PROP_EMBEDDED
public static final java.lang.String XML_PROP_FILE_NAME
public static final java.lang.String XML_PROP_HEIGHT
public static final java.lang.String XML_PROP_ORIGINAL_SIZE
public static final java.lang.String XML_PROP_WIDTH
private android.util.DisplayMetrics displayMetrics
public boolean embedded
public java.lang.String fileName
public int height
public boolean originalSize
public android.net.Uri parentDirectory
public int width
    static void <clinit>()
    {
        com.mkulesh.micromath.properties.ImageProperties$1 $r0;

        $r0 = new com.mkulesh.micromath.properties.ImageProperties$1;

        specialinvoke $r0.<com.mkulesh.micromath.properties.ImageProperties$1: void <init>()>();

        <com.mkulesh.micromath.properties.ImageProperties: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }
    public void <init>()
    {
        com.mkulesh.micromath.properties.ImageProperties r0;

        r0 := @this: com.mkulesh.micromath.properties.ImageProperties;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mkulesh.micromath.properties.ImageProperties: android.util.DisplayMetrics displayMetrics> = null;

        r0.<com.mkulesh.micromath.properties.ImageProperties: java.lang.String fileName> = "";

        r0.<com.mkulesh.micromath.properties.ImageProperties: boolean embedded> = 1;

        r0.<com.mkulesh.micromath.properties.ImageProperties: boolean originalSize> = 1;

        r0.<com.mkulesh.micromath.properties.ImageProperties: int width> = 100;

        r0.<com.mkulesh.micromath.properties.ImageProperties: int height> = 100;

        r0.<com.mkulesh.micromath.properties.ImageProperties: android.net.Uri parentDirectory> = null;

        return;
    }
    public void <init>(android.os.Parcel)
    {
        com.mkulesh.micromath.properties.ImageProperties r0;
        android.os.Parcel $r1;

        r0 := @this: com.mkulesh.micromath.properties.ImageProperties;

        $r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mkulesh.micromath.properties.ImageProperties: android.util.DisplayMetrics displayMetrics> = null;

        r0.<com.mkulesh.micromath.properties.ImageProperties: java.lang.String fileName> = "";

        r0.<com.mkulesh.micromath.properties.ImageProperties: boolean embedded> = 1;

        r0.<com.mkulesh.micromath.properties.ImageProperties: boolean originalSize> = 1;

        r0.<com.mkulesh.micromath.properties.ImageProperties: int width> = 100;

        r0.<com.mkulesh.micromath.properties.ImageProperties: int height> = 100;

        r0.<com.mkulesh.micromath.properties.ImageProperties: android.net.Uri parentDirectory> = null;

        virtualinvoke r0.<com.mkulesh.micromath.properties.ImageProperties: void readFromParcel(android.os.Parcel)>($r1);

        return;
    }
    public void assign(com.mkulesh.micromath.properties.ImageProperties)
    {
        com.mkulesh.micromath.properties.ImageProperties r0, $r1;
        java.lang.String $r2;
        boolean $z0;
        int $i0;

        r0 := @this: com.mkulesh.micromath.properties.ImageProperties;

        $r1 := @parameter0: com.mkulesh.micromath.properties.ImageProperties;

        $r2 = $r1.<com.mkulesh.micromath.properties.ImageProperties: java.lang.String fileName>;

        r0.<com.mkulesh.micromath.properties.ImageProperties: java.lang.String fileName> = $r2;

        $z0 = $r1.<com.mkulesh.micromath.properties.ImageProperties: boolean embedded>;

        r0.<com.mkulesh.micromath.properties.ImageProperties: boolean embedded> = $z0;

        $z0 = $r1.<com.mkulesh.micromath.properties.ImageProperties: boolean originalSize>;

        r0.<com.mkulesh.micromath.properties.ImageProperties: boolean originalSize> = $z0;

        $i0 = $r1.<com.mkulesh.micromath.properties.ImageProperties: int width>;

        r0.<com.mkulesh.micromath.properties.ImageProperties: int width> = $i0;

        $i0 = $r1.<com.mkulesh.micromath.properties.ImageProperties: int height>;

        r0.<com.mkulesh.micromath.properties.ImageProperties: int height> = $i0;

        return;
    }
    public int describeContents()
    {
        com.mkulesh.micromath.properties.ImageProperties r0;

        r0 := @this: com.mkulesh.micromath.properties.ImageProperties;

        return 0;
    }
    public void initialize(android.content.Context)
    {
        com.mkulesh.micromath.properties.ImageProperties r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;

        r0 := @this: com.mkulesh.micromath.properties.ImageProperties;

        $r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        r0.<com.mkulesh.micromath.properties.ImageProperties: android.util.DisplayMetrics displayMetrics> = $r3;

        return;
    }
    public boolean isAsset()
    {
        com.mkulesh.micromath.properties.ImageProperties r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: com.mkulesh.micromath.properties.ImageProperties;

        $r1 = r0.<com.mkulesh.micromath.properties.ImageProperties: java.lang.String fileName>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("asset:/");

        return $z0;
    }
    public void readFromParcel(android.os.Parcel)
    {
        com.mkulesh.micromath.properties.ImageProperties r0;
        android.os.Parcel $r1;
        java.lang.String $r2;
        java.lang.Boolean $r3;
        boolean $z0;
        int $i0;

        r0 := @this: com.mkulesh.micromath.properties.ImageProperties;

        $r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke $r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.mkulesh.micromath.properties.ImageProperties: java.lang.String fileName> = $r2;

        $r2 = virtualinvoke $r1.<android.os.Parcel: java.lang.String readString()>();

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r2);

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        r0.<com.mkulesh.micromath.properties.ImageProperties: boolean embedded> = $z0;

        $r2 = virtualinvoke $r1.<android.os.Parcel: java.lang.String readString()>();

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r2);

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        r0.<com.mkulesh.micromath.properties.ImageProperties: boolean originalSize> = $z0;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        r0.<com.mkulesh.micromath.properties.ImageProperties: int width> = $i0;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        r0.<com.mkulesh.micromath.properties.ImageProperties: int height> = $i0;

        return;
    }
    public void readFromXml(org.xmlpull.v1.XmlPullParser)
    {
        com.mkulesh.micromath.properties.ImageProperties r0;
        org.xmlpull.v1.XmlPullParser $r1;
        java.lang.String $r2, r3;
        java.lang.Boolean $r4;
        boolean $z0;
        android.util.DisplayMetrics $r5;
        int $i0;

        r0 := @this: com.mkulesh.micromath.properties.ImageProperties;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "fileName");

        r3 = $r2;

        if $r2 != null goto label1;

        r3 = "";

     label1:
        r0.<com.mkulesh.micromath.properties.ImageProperties: java.lang.String fileName> = r3;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "embedded");

        if $r2 == null goto label2;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r2);

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        r0.<com.mkulesh.micromath.properties.ImageProperties: boolean embedded> = $z0;

     label2:
        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "originalSize");

        if $r2 == null goto label3;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r2);

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        r0.<com.mkulesh.micromath.properties.ImageProperties: boolean originalSize> = $z0;

     label3:
        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "width");

        if $r2 == null goto label4;

        $r5 = r0.<com.mkulesh.micromath.properties.ImageProperties: android.util.DisplayMetrics displayMetrics>;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        $i0 = staticinvoke <com.mkulesh.micromath.utils.ViewUtils: int dpToPx(android.util.DisplayMetrics,int)>($r5, $i0);

        r0.<com.mkulesh.micromath.properties.ImageProperties: int width> = $i0;

     label4:
        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "height");

        if $r2 == null goto label5;

        $r5 = r0.<com.mkulesh.micromath.properties.ImageProperties: android.util.DisplayMetrics displayMetrics>;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        $i0 = staticinvoke <com.mkulesh.micromath.utils.ViewUtils: int dpToPx(android.util.DisplayMetrics,int)>($r5, $i0);

        r0.<com.mkulesh.micromath.properties.ImageProperties: int height> = $i0;

     label5:
        return;
    }
    public void writeToParcel(android.os.Parcel, int)
    {
        com.mkulesh.micromath.properties.ImageProperties r0;
        android.os.Parcel $r1;
        int $i0;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.properties.ImageProperties;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $r2 = r0.<com.mkulesh.micromath.properties.ImageProperties: java.lang.String fileName>;

        virtualinvoke $r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $z0 = r0.<com.mkulesh.micromath.properties.ImageProperties: boolean embedded>;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0);

        virtualinvoke $r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $z0 = r0.<com.mkulesh.micromath.properties.ImageProperties: boolean originalSize>;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0);

        virtualinvoke $r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $i0 = r0.<com.mkulesh.micromath.properties.ImageProperties: int width>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $i0 = r0.<com.mkulesh.micromath.properties.ImageProperties: int height>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        return;
    }
    public void writeToXml(org.xmlpull.v1.XmlSerializer) throws java.lang.Exception
    {
        com.mkulesh.micromath.properties.ImageProperties r0;
        org.xmlpull.v1.XmlSerializer $r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        android.util.DisplayMetrics $r4;
        int $i0;

        r0 := @this: com.mkulesh.micromath.properties.ImageProperties;

        $r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r2 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

        $r3 = r0.<com.mkulesh.micromath.properties.ImageProperties: java.lang.String fileName>;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r2, "fileName", $r3);

        $r2 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

        $z0 = r0.<com.mkulesh.micromath.properties.ImageProperties: boolean embedded>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r2, "embedded", $r3);

        $r2 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

        $z0 = r0.<com.mkulesh.micromath.properties.ImageProperties: boolean originalSize>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r2, "originalSize", $r3);

        $r2 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

        $r4 = r0.<com.mkulesh.micromath.properties.ImageProperties: android.util.DisplayMetrics displayMetrics>;

        $i0 = r0.<com.mkulesh.micromath.properties.ImageProperties: int width>;

        $i0 = staticinvoke <com.mkulesh.micromath.utils.ViewUtils: int pxToDp(android.util.DisplayMetrics,int)>($r4, $i0);

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r2, "width", $r3);

        $r2 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

        $r4 = r0.<com.mkulesh.micromath.properties.ImageProperties: android.util.DisplayMetrics displayMetrics>;

        $i0 = r0.<com.mkulesh.micromath.properties.ImageProperties: int height>;

        $i0 = staticinvoke <com.mkulesh.micromath.utils.ViewUtils: int pxToDp(android.util.DisplayMetrics,int)>($r4, $i0);

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r2, "height", $r3);

        return;
    }
