com.mkulesh.micromath.properties.TextProperties extends java.lang.Object implements android.os.Parcelable
public static final android.os.Parcelable$Creator CREATOR
public static final boolean DEFAULT_NUMBERING
public static final com.mkulesh.micromath.properties.TextProperties$TextStyle DEFAULT_TEXT_STYLE
public static final java.lang.String XML_PROP_NUMBERING
public static final java.lang.String XML_PROP_TEXT_STYLE
public boolean numbering
public com.mkulesh.micromath.properties.TextProperties$TextStyle textStyle
    static void <clinit>()
    {
        com.mkulesh.micromath.properties.TextProperties$TextStyle $r0;
        com.mkulesh.micromath.properties.TextProperties$1 $r1;

        $r0 = <com.mkulesh.micromath.properties.TextProperties$TextStyle: com.mkulesh.micromath.properties.TextProperties$TextStyle TEXT_BODY>;

        <com.mkulesh.micromath.properties.TextProperties: com.mkulesh.micromath.properties.TextProperties$TextStyle DEFAULT_TEXT_STYLE> = $r0;

        $r1 = new com.mkulesh.micromath.properties.TextProperties$1;

        specialinvoke $r1.<com.mkulesh.micromath.properties.TextProperties$1: void <init>()>();

        <com.mkulesh.micromath.properties.TextProperties: android.os.Parcelable$Creator CREATOR> = $r1;

        return;
    }
    public void <init>()
    {
        com.mkulesh.micromath.properties.TextProperties r0;
        com.mkulesh.micromath.properties.TextProperties$TextStyle $r1;

        r0 := @this: com.mkulesh.micromath.properties.TextProperties;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <com.mkulesh.micromath.properties.TextProperties: com.mkulesh.micromath.properties.TextProperties$TextStyle DEFAULT_TEXT_STYLE>;

        r0.<com.mkulesh.micromath.properties.TextProperties: com.mkulesh.micromath.properties.TextProperties$TextStyle textStyle> = $r1;

        r0.<com.mkulesh.micromath.properties.TextProperties: boolean numbering> = 0;

        return;
    }
    public void <init>(android.os.Parcel)
    {
        com.mkulesh.micromath.properties.TextProperties r0;
        android.os.Parcel $r1;
        com.mkulesh.micromath.properties.TextProperties$TextStyle $r2;

        r0 := @this: com.mkulesh.micromath.properties.TextProperties;

        $r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <com.mkulesh.micromath.properties.TextProperties: com.mkulesh.micromath.properties.TextProperties$TextStyle DEFAULT_TEXT_STYLE>;

        r0.<com.mkulesh.micromath.properties.TextProperties: com.mkulesh.micromath.properties.TextProperties$TextStyle textStyle> = $r2;

        r0.<com.mkulesh.micromath.properties.TextProperties: boolean numbering> = 0;

        virtualinvoke r0.<com.mkulesh.micromath.properties.TextProperties: void readFromParcel(android.os.Parcel)>($r1);

        return;
    }
    public static final int[] getInitialNumber()
    {
        int[] r0;
        com.mkulesh.micromath.properties.TextProperties$TextStyle[] $r1;
        int $i0, $i1;

        $r1 = staticinvoke <com.mkulesh.micromath.properties.TextProperties$TextStyle: com.mkulesh.micromath.properties.TextProperties$TextStyle[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof r0;

        if $i0 >= $i1 goto label2;

        r0[$i0] = 0;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r0;
    }
    public void assign(com.mkulesh.micromath.properties.TextProperties)
    {
        com.mkulesh.micromath.properties.TextProperties r0, $r1;
        com.mkulesh.micromath.properties.TextProperties$TextStyle $r2;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.properties.TextProperties;

        $r1 := @parameter0: com.mkulesh.micromath.properties.TextProperties;

        $r2 = $r1.<com.mkulesh.micromath.properties.TextProperties: com.mkulesh.micromath.properties.TextProperties$TextStyle textStyle>;

        r0.<com.mkulesh.micromath.properties.TextProperties: com.mkulesh.micromath.properties.TextProperties$TextStyle textStyle> = $r2;

        $z0 = $r1.<com.mkulesh.micromath.properties.TextProperties: boolean numbering>;

        r0.<com.mkulesh.micromath.properties.TextProperties: boolean numbering> = $z0;

        return;
    }
    public int describeContents()
    {
        com.mkulesh.micromath.properties.TextProperties r0;

        r0 := @this: com.mkulesh.micromath.properties.TextProperties;

        return 0;
    }
    public int getDepth()
    {
        com.mkulesh.micromath.properties.TextProperties r0;
        boolean $z0;
        com.mkulesh.micromath.properties.TextProperties$TextStyle $r1;
        int $i0, $i1;

        r0 := @this: com.mkulesh.micromath.properties.TextProperties;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.properties.TextProperties: boolean isHeader()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.mkulesh.micromath.properties.TextProperties: com.mkulesh.micromath.properties.TextProperties$TextStyle textStyle>;

        $i0 = virtualinvoke $r1.<com.mkulesh.micromath.properties.TextProperties$TextStyle: int ordinal()>();

        $r1 = <com.mkulesh.micromath.properties.TextProperties$TextStyle: com.mkulesh.micromath.properties.TextProperties$TextStyle SUBSUBSECTION>;

        $i1 = virtualinvoke $r1.<com.mkulesh.micromath.properties.TextProperties$TextStyle: int ordinal()>();

        $i0 = $i0 - $i1;

        return $i0;

     label1:
        return 0;
    }
    public boolean isHeader()
    {
        com.mkulesh.micromath.properties.TextProperties r0;
        com.mkulesh.micromath.properties.TextProperties$TextStyle $r1, $r2;

        r0 := @this: com.mkulesh.micromath.properties.TextProperties;

        $r2 = r0.<com.mkulesh.micromath.properties.TextProperties: com.mkulesh.micromath.properties.TextProperties$TextStyle textStyle>;

        $r1 = <com.mkulesh.micromath.properties.TextProperties$TextStyle: com.mkulesh.micromath.properties.TextProperties$TextStyle TEXT_BODY>;

        if $r2 == $r1 goto label1;

        return 1;

     label1:
        return 0;
    }
    public void readFromParcel(android.os.Parcel)
    {
        com.mkulesh.micromath.properties.TextProperties r0;
        android.os.Parcel $r1;
        java.lang.String $r2;
        com.mkulesh.micromath.properties.TextProperties$TextStyle $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.properties.TextProperties;

        $r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke $r1.<android.os.Parcel: java.lang.String readString()>();

        $r3 = staticinvoke <com.mkulesh.micromath.properties.TextProperties$TextStyle: com.mkulesh.micromath.properties.TextProperties$TextStyle valueOf(java.lang.String)>($r2);

        r0.<com.mkulesh.micromath.properties.TextProperties: com.mkulesh.micromath.properties.TextProperties$TextStyle textStyle> = $r3;

        $r2 = virtualinvoke $r1.<android.os.Parcel: java.lang.String readString()>();

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r2);

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        r0.<com.mkulesh.micromath.properties.TextProperties: boolean numbering> = $z0;

        return;
    }
    public void readFromXml(org.xmlpull.v1.XmlPullParser)
    {
        com.mkulesh.micromath.properties.TextProperties r0;
        org.xmlpull.v1.XmlPullParser $r1;
        java.lang.String $r2;
        java.util.Locale $r3;
        com.mkulesh.micromath.properties.TextProperties$TextStyle $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.lang.Exception $r6;

        r0 := @this: com.mkulesh.micromath.properties.TextProperties;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "textStyle");

        if $r2 == null goto label2;

        $r3 = <java.util.Locale: java.util.Locale ENGLISH>;

     label1:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r3);

        $r4 = staticinvoke <com.mkulesh.micromath.properties.TextProperties$TextStyle: com.mkulesh.micromath.properties.TextProperties$TextStyle valueOf(java.lang.String)>($r2);

        r0.<com.mkulesh.micromath.properties.TextProperties: com.mkulesh.micromath.properties.TextProperties$TextStyle textStyle> = $r4;

     label2:
        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "numbering");

        if $r2 == null goto label4;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r2);

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        r0.<com.mkulesh.micromath.properties.TextProperties: boolean numbering> = $z0;

        return;

     label3:
        $r6 := @caughtexception;

        goto label2;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public void writeToParcel(android.os.Parcel, int)
    {
        com.mkulesh.micromath.properties.TextProperties r0;
        android.os.Parcel $r1;
        int $i0;
        com.mkulesh.micromath.properties.TextProperties$TextStyle $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.properties.TextProperties;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $r2 = r0.<com.mkulesh.micromath.properties.TextProperties: com.mkulesh.micromath.properties.TextProperties$TextStyle textStyle>;

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.properties.TextProperties$TextStyle: java.lang.String toString()>();

        virtualinvoke $r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $z0 = r0.<com.mkulesh.micromath.properties.TextProperties: boolean numbering>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0);

        virtualinvoke $r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        return;
    }
    public void writeToXml(org.xmlpull.v1.XmlSerializer) throws java.lang.Exception
    {
        com.mkulesh.micromath.properties.TextProperties r0;
        org.xmlpull.v1.XmlSerializer $r1;
        java.util.Locale $r2;
        com.mkulesh.micromath.properties.TextProperties$TextStyle $r3, $r4;
        java.lang.String $r5, $r6;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.properties.TextProperties;

        $r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r3 = r0.<com.mkulesh.micromath.properties.TextProperties: com.mkulesh.micromath.properties.TextProperties$TextStyle textStyle>;

        $r4 = <com.mkulesh.micromath.properties.TextProperties: com.mkulesh.micromath.properties.TextProperties$TextStyle DEFAULT_TEXT_STYLE>;

        if $r3 == $r4 goto label1;

        $r5 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

        $r3 = r0.<com.mkulesh.micromath.properties.TextProperties: com.mkulesh.micromath.properties.TextProperties$TextStyle textStyle>;

        $r6 = virtualinvoke $r3.<com.mkulesh.micromath.properties.TextProperties$TextStyle: java.lang.String toString()>();

        $r2 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r5, "textStyle", $r6);

     label1:
        $z0 = r0.<com.mkulesh.micromath.properties.TextProperties: boolean numbering>;

        if $z0 == 0 goto label2;

        $r5 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

        $z0 = r0.<com.mkulesh.micromath.properties.TextProperties: boolean numbering>;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r5, "numbering", $r6);

     label2:
        return;
    }
