com.mkulesh.micromath.properties.AxisProperties extends java.lang.Object implements android.os.Parcelable
public static final android.os.Parcelable$Creator CREATOR
public static final java.lang.String XML_PROP_GRIDLINECOLOR
public static final java.lang.String XML_PROP_XLABELSNUMBER
public static final java.lang.String XML_PROP_YLABELSNUMBER
public int gridLineColor
private int gridLineWidth
private int labelLineSize
private int labelTextSize
public float scaleFactor
public int xLabelsNumber
public int yLabelsNumber
    static void <clinit>()
    {
        com.mkulesh.micromath.properties.AxisProperties$1 $r0;

        $r0 = new com.mkulesh.micromath.properties.AxisProperties$1;

        specialinvoke $r0.<com.mkulesh.micromath.properties.AxisProperties$1: void <init>()>();

        <com.mkulesh.micromath.properties.AxisProperties: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }
    public void <init>()
    {
        com.mkulesh.micromath.properties.AxisProperties r0;

        r0 := @this: com.mkulesh.micromath.properties.AxisProperties;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mkulesh.micromath.properties.AxisProperties: float scaleFactor> = 1.0F;

        r0.<com.mkulesh.micromath.properties.AxisProperties: int gridLineColor> = -7829368;

        r0.<com.mkulesh.micromath.properties.AxisProperties: int xLabelsNumber> = 3;

        r0.<com.mkulesh.micromath.properties.AxisProperties: int yLabelsNumber> = 3;

        r0.<com.mkulesh.micromath.properties.AxisProperties: int labelLineSize> = 5;

        r0.<com.mkulesh.micromath.properties.AxisProperties: int labelTextSize> = 20;

        r0.<com.mkulesh.micromath.properties.AxisProperties: int gridLineWidth> = 1;

        return;
    }
    public void <init>(android.os.Parcel)
    {
        com.mkulesh.micromath.properties.AxisProperties r0;
        android.os.Parcel $r1;

        r0 := @this: com.mkulesh.micromath.properties.AxisProperties;

        $r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mkulesh.micromath.properties.AxisProperties: float scaleFactor> = 1.0F;

        r0.<com.mkulesh.micromath.properties.AxisProperties: int gridLineColor> = -7829368;

        r0.<com.mkulesh.micromath.properties.AxisProperties: int xLabelsNumber> = 3;

        r0.<com.mkulesh.micromath.properties.AxisProperties: int yLabelsNumber> = 3;

        r0.<com.mkulesh.micromath.properties.AxisProperties: int labelLineSize> = 5;

        r0.<com.mkulesh.micromath.properties.AxisProperties: int labelTextSize> = 20;

        r0.<com.mkulesh.micromath.properties.AxisProperties: int gridLineWidth> = 1;

        virtualinvoke r0.<com.mkulesh.micromath.properties.AxisProperties: void readFromParcel(android.os.Parcel)>($r1);

        return;
    }
    public void assign(com.mkulesh.micromath.properties.AxisProperties)
    {
        com.mkulesh.micromath.properties.AxisProperties r0, $r1;
        float $f0;
        int $i0;

        r0 := @this: com.mkulesh.micromath.properties.AxisProperties;

        $r1 := @parameter0: com.mkulesh.micromath.properties.AxisProperties;

        $f0 = $r1.<com.mkulesh.micromath.properties.AxisProperties: float scaleFactor>;

        r0.<com.mkulesh.micromath.properties.AxisProperties: float scaleFactor> = $f0;

        $i0 = $r1.<com.mkulesh.micromath.properties.AxisProperties: int gridLineColor>;

        r0.<com.mkulesh.micromath.properties.AxisProperties: int gridLineColor> = $i0;

        $i0 = $r1.<com.mkulesh.micromath.properties.AxisProperties: int xLabelsNumber>;

        r0.<com.mkulesh.micromath.properties.AxisProperties: int xLabelsNumber> = $i0;

        $i0 = $r1.<com.mkulesh.micromath.properties.AxisProperties: int yLabelsNumber>;

        r0.<com.mkulesh.micromath.properties.AxisProperties: int yLabelsNumber> = $i0;

        $i0 = $r1.<com.mkulesh.micromath.properties.AxisProperties: int labelLineSize>;

        r0.<com.mkulesh.micromath.properties.AxisProperties: int labelLineSize> = $i0;

        $i0 = $r1.<com.mkulesh.micromath.properties.AxisProperties: int labelTextSize>;

        r0.<com.mkulesh.micromath.properties.AxisProperties: int labelTextSize> = $i0;

        $i0 = $r1.<com.mkulesh.micromath.properties.AxisProperties: int gridLineWidth>;

        r0.<com.mkulesh.micromath.properties.AxisProperties: int gridLineWidth> = $i0;

        return;
    }
    public int describeContents()
    {
        com.mkulesh.micromath.properties.AxisProperties r0;

        r0 := @this: com.mkulesh.micromath.properties.AxisProperties;

        return 0;
    }
    public int getGridLineWidth()
    {
        com.mkulesh.micromath.properties.AxisProperties r0;
        float $f0, $f1;
        int $i0;

        r0 := @this: com.mkulesh.micromath.properties.AxisProperties;

        $i0 = r0.<com.mkulesh.micromath.properties.AxisProperties: int gridLineWidth>;

        $f1 = (float) $i0;

        $f0 = r0.<com.mkulesh.micromath.properties.AxisProperties: float scaleFactor>;

        $f0 = $f1 * $f0;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        return $i0;
    }
    public int getLabelLineSize()
    {
        com.mkulesh.micromath.properties.AxisProperties r0;
        float $f0, $f1;
        int $i0;

        r0 := @this: com.mkulesh.micromath.properties.AxisProperties;

        $i0 = r0.<com.mkulesh.micromath.properties.AxisProperties: int labelLineSize>;

        $f1 = (float) $i0;

        $f0 = r0.<com.mkulesh.micromath.properties.AxisProperties: float scaleFactor>;

        $f0 = $f1 * $f0;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        return $i0;
    }
    public int getLabelTextSize()
    {
        com.mkulesh.micromath.properties.AxisProperties r0;
        float $f0, $f1;
        int $i0;

        r0 := @this: com.mkulesh.micromath.properties.AxisProperties;

        $i0 = r0.<com.mkulesh.micromath.properties.AxisProperties: int labelTextSize>;

        $f1 = (float) $i0;

        $f0 = r0.<com.mkulesh.micromath.properties.AxisProperties: float scaleFactor>;

        $f0 = $f1 * $f0;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        return $i0;
    }
    public void initialize(android.content.res.TypedArray)
    {
        com.mkulesh.micromath.properties.AxisProperties r0;
        android.content.res.TypedArray $r1;
        int $i0;

        r0 := @this: com.mkulesh.micromath.properties.AxisProperties;

        $r1 := @parameter0: android.content.res.TypedArray;

        $i0 = r0.<com.mkulesh.micromath.properties.AxisProperties: int labelLineSize>;

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(2, $i0);

        r0.<com.mkulesh.micromath.properties.AxisProperties: int labelLineSize> = $i0;

        $i0 = r0.<com.mkulesh.micromath.properties.AxisProperties: int labelTextSize>;

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(3, $i0);

        r0.<com.mkulesh.micromath.properties.AxisProperties: int labelTextSize> = $i0;

        $i0 = r0.<com.mkulesh.micromath.properties.AxisProperties: int gridLineColor>;

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getColor(int,int)>(0, $i0);

        r0.<com.mkulesh.micromath.properties.AxisProperties: int gridLineColor> = $i0;

        $i0 = r0.<com.mkulesh.micromath.properties.AxisProperties: int gridLineWidth>;

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(1, $i0);

        r0.<com.mkulesh.micromath.properties.AxisProperties: int gridLineWidth> = $i0;

        $i0 = r0.<com.mkulesh.micromath.properties.AxisProperties: int xLabelsNumber>;

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getInt(int,int)>(4, $i0);

        r0.<com.mkulesh.micromath.properties.AxisProperties: int xLabelsNumber> = $i0;

        $i0 = r0.<com.mkulesh.micromath.properties.AxisProperties: int yLabelsNumber>;

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getInt(int,int)>(5, $i0);

        r0.<com.mkulesh.micromath.properties.AxisProperties: int yLabelsNumber> = $i0;

        return;
    }
    public void readFromParcel(android.os.Parcel)
    {
        com.mkulesh.micromath.properties.AxisProperties r0;
        android.os.Parcel $r1;
        int $i0;

        r0 := @this: com.mkulesh.micromath.properties.AxisProperties;

        $r1 := @parameter0: android.os.Parcel;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        r0.<com.mkulesh.micromath.properties.AxisProperties: int labelLineSize> = $i0;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        r0.<com.mkulesh.micromath.properties.AxisProperties: int labelTextSize> = $i0;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        r0.<com.mkulesh.micromath.properties.AxisProperties: int gridLineColor> = $i0;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        r0.<com.mkulesh.micromath.properties.AxisProperties: int gridLineWidth> = $i0;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        r0.<com.mkulesh.micromath.properties.AxisProperties: int xLabelsNumber> = $i0;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        r0.<com.mkulesh.micromath.properties.AxisProperties: int yLabelsNumber> = $i0;

        return;
    }
    public void readFromXml(org.xmlpull.v1.XmlPullParser)
    {
        com.mkulesh.micromath.properties.AxisProperties r0;
        org.xmlpull.v1.XmlPullParser $r1;
        java.lang.String $r2;
        int $i0;

        r0 := @this: com.mkulesh.micromath.properties.AxisProperties;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "xLabelsNumber");

        if $r2 == null goto label1;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        r0.<com.mkulesh.micromath.properties.AxisProperties: int xLabelsNumber> = $i0;

     label1:
        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "yLabelsNumber");

        if $r2 == null goto label2;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        r0.<com.mkulesh.micromath.properties.AxisProperties: int yLabelsNumber> = $i0;

     label2:
        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "gridLineColor");

        if $r2 == null goto label3;

        $i0 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>($r2);

        r0.<com.mkulesh.micromath.properties.AxisProperties: int gridLineColor> = $i0;

     label3:
        return;
    }
    public void writeToParcel(android.os.Parcel, int)
    {
        com.mkulesh.micromath.properties.AxisProperties r0;
        android.os.Parcel $r1;
        int $i0;
        long $l1;

        r0 := @this: com.mkulesh.micromath.properties.AxisProperties;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = r0.<com.mkulesh.micromath.properties.AxisProperties: int labelLineSize>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $i0 = r0.<com.mkulesh.micromath.properties.AxisProperties: int labelTextSize>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $i0 = r0.<com.mkulesh.micromath.properties.AxisProperties: int gridLineColor>;

        $l1 = (long) $i0;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l1);

        $i0 = r0.<com.mkulesh.micromath.properties.AxisProperties: int gridLineWidth>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $i0 = r0.<com.mkulesh.micromath.properties.AxisProperties: int xLabelsNumber>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $i0 = r0.<com.mkulesh.micromath.properties.AxisProperties: int yLabelsNumber>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        return;
    }
    public void writeToXml(org.xmlpull.v1.XmlSerializer) throws java.lang.Exception
    {
        com.mkulesh.micromath.properties.AxisProperties r0;
        org.xmlpull.v1.XmlSerializer $r1;
        java.lang.String $r2, $r3;
        int $i0;
        java.lang.Object[] $r4;
        java.lang.Integer $r5;

        r0 := @this: com.mkulesh.micromath.properties.AxisProperties;

        $r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r2 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

        $i0 = r0.<com.mkulesh.micromath.properties.AxisProperties: int xLabelsNumber>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r2, "xLabelsNumber", $r3);

        $r2 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

        $i0 = r0.<com.mkulesh.micromath.properties.AxisProperties: int yLabelsNumber>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r2, "yLabelsNumber", $r3);

        $r2 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

        $r4 = newarray (java.lang.Object)[1];

        $i0 = r0.<com.mkulesh.micromath.properties.AxisProperties: int gridLineColor>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4[0] = $r5;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("#%08X", $r4);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r2, "gridLineColor", $r3);

        return;
    }
