com.mkulesh.micromath.properties.LineProperties$ShapeType extends java.lang.Enum
private static final com.mkulesh.micromath.properties.LineProperties$ShapeType[] $VALUES
public static final enum com.mkulesh.micromath.properties.LineProperties$ShapeType CIRCLE
public static final enum com.mkulesh.micromath.properties.LineProperties$ShapeType CROSS
public static final enum com.mkulesh.micromath.properties.LineProperties$ShapeType DIAMOND
public static final enum com.mkulesh.micromath.properties.LineProperties$ShapeType NONE
public static final enum com.mkulesh.micromath.properties.LineProperties$ShapeType SQUARE
    static void <clinit>()
    {
        com.mkulesh.micromath.properties.LineProperties$ShapeType $r0;
        com.mkulesh.micromath.properties.LineProperties$ShapeType[] $r1;

        $r0 = new com.mkulesh.micromath.properties.LineProperties$ShapeType;

        specialinvoke $r0.<com.mkulesh.micromath.properties.LineProperties$ShapeType: void <init>(java.lang.String,int)>("NONE", 0);

        <com.mkulesh.micromath.properties.LineProperties$ShapeType: com.mkulesh.micromath.properties.LineProperties$ShapeType NONE> = $r0;

        $r0 = new com.mkulesh.micromath.properties.LineProperties$ShapeType;

        specialinvoke $r0.<com.mkulesh.micromath.properties.LineProperties$ShapeType: void <init>(java.lang.String,int)>("SQUARE", 1);

        <com.mkulesh.micromath.properties.LineProperties$ShapeType: com.mkulesh.micromath.properties.LineProperties$ShapeType SQUARE> = $r0;

        $r0 = new com.mkulesh.micromath.properties.LineProperties$ShapeType;

        specialinvoke $r0.<com.mkulesh.micromath.properties.LineProperties$ShapeType: void <init>(java.lang.String,int)>("CIRCLE", 2);

        <com.mkulesh.micromath.properties.LineProperties$ShapeType: com.mkulesh.micromath.properties.LineProperties$ShapeType CIRCLE> = $r0;

        $r0 = new com.mkulesh.micromath.properties.LineProperties$ShapeType;

        specialinvoke $r0.<com.mkulesh.micromath.properties.LineProperties$ShapeType: void <init>(java.lang.String,int)>("DIAMOND", 3);

        <com.mkulesh.micromath.properties.LineProperties$ShapeType: com.mkulesh.micromath.properties.LineProperties$ShapeType DIAMOND> = $r0;

        $r0 = new com.mkulesh.micromath.properties.LineProperties$ShapeType;

        specialinvoke $r0.<com.mkulesh.micromath.properties.LineProperties$ShapeType: void <init>(java.lang.String,int)>("CROSS", 4);

        <com.mkulesh.micromath.properties.LineProperties$ShapeType: com.mkulesh.micromath.properties.LineProperties$ShapeType CROSS> = $r0;

        $r1 = newarray (com.mkulesh.micromath.properties.LineProperties$ShapeType)[5];

        $r0 = <com.mkulesh.micromath.properties.LineProperties$ShapeType: com.mkulesh.micromath.properties.LineProperties$ShapeType NONE>;

        $r1[0] = $r0;

        $r0 = <com.mkulesh.micromath.properties.LineProperties$ShapeType: com.mkulesh.micromath.properties.LineProperties$ShapeType SQUARE>;

        $r1[1] = $r0;

        $r0 = <com.mkulesh.micromath.properties.LineProperties$ShapeType: com.mkulesh.micromath.properties.LineProperties$ShapeType CIRCLE>;

        $r1[2] = $r0;

        $r0 = <com.mkulesh.micromath.properties.LineProperties$ShapeType: com.mkulesh.micromath.properties.LineProperties$ShapeType DIAMOND>;

        $r1[3] = $r0;

        $r0 = <com.mkulesh.micromath.properties.LineProperties$ShapeType: com.mkulesh.micromath.properties.LineProperties$ShapeType CROSS>;

        $r1[4] = $r0;

        <com.mkulesh.micromath.properties.LineProperties$ShapeType: com.mkulesh.micromath.properties.LineProperties$ShapeType[] $VALUES> = $r1;

        return;
    }
    private void <init>(java.lang.String, int)
    {
        com.mkulesh.micromath.properties.LineProperties$ShapeType r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: com.mkulesh.micromath.properties.LineProperties$ShapeType;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }
    public static com.mkulesh.micromath.properties.LineProperties$ShapeType valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        com.mkulesh.micromath.properties.LineProperties$ShapeType $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/mkulesh/micromath/properties/LineProperties$ShapeType;", $r0);

        $r2 = (com.mkulesh.micromath.properties.LineProperties$ShapeType) $r1;

        return $r2;
    }
    public static com.mkulesh.micromath.properties.LineProperties$ShapeType[] values()
    {
        java.lang.Object $r0;
        com.mkulesh.micromath.properties.LineProperties$ShapeType[] $r1;

        $r1 = <com.mkulesh.micromath.properties.LineProperties$ShapeType: com.mkulesh.micromath.properties.LineProperties$ShapeType[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (com.mkulesh.micromath.properties.LineProperties$ShapeType[]) $r0;

        return $r1;
    }
