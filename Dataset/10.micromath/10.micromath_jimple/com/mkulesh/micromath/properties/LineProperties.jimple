com.mkulesh.micromath.properties.LineProperties extends java.lang.Object implements android.os.Parcelable
public static final android.os.Parcelable$Creator CREATOR
public static final java.lang.String XML_PROP_COLOR
public static final java.lang.String XML_PROP_LINESTYLE
public static final java.lang.String XML_PROP_SHAPESIZE
public static final java.lang.String XML_PROP_SHAPETYPE
public static final java.lang.String XML_PROP_WIDTH
public int color
public com.mkulesh.micromath.properties.LineProperties$LineStyle lineStyle
private android.graphics.Paint paint
public float scaleFactor
public int shapeSize
public com.mkulesh.micromath.properties.LineProperties$ShapeType shapeType
public int width
    static void <clinit>()
    {
        com.mkulesh.micromath.properties.LineProperties$1 $r0;

        $r0 = new com.mkulesh.micromath.properties.LineProperties$1;

        specialinvoke $r0.<com.mkulesh.micromath.properties.LineProperties$1: void <init>()>();

        <com.mkulesh.micromath.properties.LineProperties: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }
    public void <init>()
    {
        com.mkulesh.micromath.properties.LineProperties r0;
        com.mkulesh.micromath.properties.LineProperties$LineStyle $r1;
        com.mkulesh.micromath.properties.LineProperties$ShapeType $r2;
        android.graphics.Paint $r3;

        r0 := @this: com.mkulesh.micromath.properties.LineProperties;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mkulesh.micromath.properties.LineProperties: float scaleFactor> = 1.0F;

        r0.<com.mkulesh.micromath.properties.LineProperties: int color> = -16776961;

        r0.<com.mkulesh.micromath.properties.LineProperties: int width> = 3;

        $r1 = <com.mkulesh.micromath.properties.LineProperties$LineStyle: com.mkulesh.micromath.properties.LineProperties$LineStyle SOLID>;

        r0.<com.mkulesh.micromath.properties.LineProperties: com.mkulesh.micromath.properties.LineProperties$LineStyle lineStyle> = $r1;

        $r2 = <com.mkulesh.micromath.properties.LineProperties$ShapeType: com.mkulesh.micromath.properties.LineProperties$ShapeType NONE>;

        r0.<com.mkulesh.micromath.properties.LineProperties: com.mkulesh.micromath.properties.LineProperties$ShapeType shapeType> = $r2;

        r0.<com.mkulesh.micromath.properties.LineProperties: int shapeSize> = 300;

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>()>();

        r0.<com.mkulesh.micromath.properties.LineProperties: android.graphics.Paint paint> = $r3;

        return;
    }
    public void <init>(android.os.Parcel)
    {
        com.mkulesh.micromath.properties.LineProperties r0;
        android.os.Parcel $r1;
        com.mkulesh.micromath.properties.LineProperties$LineStyle $r2;
        com.mkulesh.micromath.properties.LineProperties$ShapeType $r3;
        android.graphics.Paint $r4;

        r0 := @this: com.mkulesh.micromath.properties.LineProperties;

        $r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mkulesh.micromath.properties.LineProperties: float scaleFactor> = 1.0F;

        r0.<com.mkulesh.micromath.properties.LineProperties: int color> = -16776961;

        r0.<com.mkulesh.micromath.properties.LineProperties: int width> = 3;

        $r2 = <com.mkulesh.micromath.properties.LineProperties$LineStyle: com.mkulesh.micromath.properties.LineProperties$LineStyle SOLID>;

        r0.<com.mkulesh.micromath.properties.LineProperties: com.mkulesh.micromath.properties.LineProperties$LineStyle lineStyle> = $r2;

        $r3 = <com.mkulesh.micromath.properties.LineProperties$ShapeType: com.mkulesh.micromath.properties.LineProperties$ShapeType NONE>;

        r0.<com.mkulesh.micromath.properties.LineProperties: com.mkulesh.micromath.properties.LineProperties$ShapeType shapeType> = $r3;

        r0.<com.mkulesh.micromath.properties.LineProperties: int shapeSize> = 300;

        $r4 = new android.graphics.Paint;

        specialinvoke $r4.<android.graphics.Paint: void <init>()>();

        r0.<com.mkulesh.micromath.properties.LineProperties: android.graphics.Paint paint> = $r4;

        virtualinvoke r0.<com.mkulesh.micromath.properties.LineProperties: void readFromParcel(android.os.Parcel)>($r1);

        return;
    }
    public void assign(com.mkulesh.micromath.properties.LineProperties)
    {
        com.mkulesh.micromath.properties.LineProperties r0, $r1;
        float $f0;
        int $i0;
        com.mkulesh.micromath.properties.LineProperties$LineStyle $r2;
        com.mkulesh.micromath.properties.LineProperties$ShapeType $r3;

        r0 := @this: com.mkulesh.micromath.properties.LineProperties;

        $r1 := @parameter0: com.mkulesh.micromath.properties.LineProperties;

        $f0 = $r1.<com.mkulesh.micromath.properties.LineProperties: float scaleFactor>;

        r0.<com.mkulesh.micromath.properties.LineProperties: float scaleFactor> = $f0;

        $i0 = $r1.<com.mkulesh.micromath.properties.LineProperties: int color>;

        r0.<com.mkulesh.micromath.properties.LineProperties: int color> = $i0;

        $i0 = $r1.<com.mkulesh.micromath.properties.LineProperties: int width>;

        r0.<com.mkulesh.micromath.properties.LineProperties: int width> = $i0;

        $r2 = $r1.<com.mkulesh.micromath.properties.LineProperties: com.mkulesh.micromath.properties.LineProperties$LineStyle lineStyle>;

        r0.<com.mkulesh.micromath.properties.LineProperties: com.mkulesh.micromath.properties.LineProperties$LineStyle lineStyle> = $r2;

        $r3 = $r1.<com.mkulesh.micromath.properties.LineProperties: com.mkulesh.micromath.properties.LineProperties$ShapeType shapeType>;

        r0.<com.mkulesh.micromath.properties.LineProperties: com.mkulesh.micromath.properties.LineProperties$ShapeType shapeType> = $r3;

        $i0 = $r1.<com.mkulesh.micromath.properties.LineProperties: int shapeSize>;

        r0.<com.mkulesh.micromath.properties.LineProperties: int shapeSize> = $i0;

        virtualinvoke r0.<com.mkulesh.micromath.properties.LineProperties: void preparePaint()>();

        return;
    }
    public int describeContents()
    {
        com.mkulesh.micromath.properties.LineProperties r0;

        r0 := @this: com.mkulesh.micromath.properties.LineProperties;

        return 0;
    }
    public android.graphics.Paint getPaint()
    {
        com.mkulesh.micromath.properties.LineProperties r0;
        android.graphics.Paint r1;

        r0 := @this: com.mkulesh.micromath.properties.LineProperties;

        r1 = r0.<com.mkulesh.micromath.properties.LineProperties: android.graphics.Paint paint>;

        return r1;
    }
    public void preparePaint()
    {
        com.mkulesh.micromath.properties.LineProperties r0;
        int $i0, $i1;
        float $f0, $f1;
        android.graphics.Paint $r1;
        android.graphics.Paint$Style $r2;
        int[] $r3;
        com.mkulesh.micromath.properties.LineProperties$LineStyle $r4;
        android.graphics.DashPathEffect $r5;
        float[] $r6;

        r0 := @this: com.mkulesh.micromath.properties.LineProperties;

        $i0 = r0.<com.mkulesh.micromath.properties.LineProperties: int width>;

        $f0 = (float) $i0;

        $f1 = r0.<com.mkulesh.micromath.properties.LineProperties: float scaleFactor>;

        $f0 = $f0 * $f1;

        $i1 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $i0 = $i1;

        if $i1 != 0 goto label1;

        $i0 = 1;

     label1:
        $r1 = r0.<com.mkulesh.micromath.properties.LineProperties: android.graphics.Paint paint>;

        $r2 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r1.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r2);

        $r1 = r0.<com.mkulesh.micromath.properties.LineProperties: android.graphics.Paint paint>;

        $i1 = r0.<com.mkulesh.micromath.properties.LineProperties: int color>;

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i1);

        $r1 = r0.<com.mkulesh.micromath.properties.LineProperties: android.graphics.Paint paint>;

        $f0 = (float) $i0;

        virtualinvoke $r1.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        $r1 = r0.<com.mkulesh.micromath.properties.LineProperties: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r3 = <com.mkulesh.micromath.properties.LineProperties$2: int[] $SwitchMap$com$mkulesh$micromath$properties$LineProperties$LineStyle>;

        $r4 = r0.<com.mkulesh.micromath.properties.LineProperties: com.mkulesh.micromath.properties.LineProperties$LineStyle lineStyle>;

        $i1 = virtualinvoke $r4.<com.mkulesh.micromath.properties.LineProperties$LineStyle: int ordinal()>();

        $i1 = $r3[$i1];

        lookupswitch($i1)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            default: goto label2;
        };

     label2:
        return;

     label3:
        $r1 = r0.<com.mkulesh.micromath.properties.LineProperties: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>(null);

        return;

     label4:
        $r1 = r0.<com.mkulesh.micromath.properties.LineProperties: android.graphics.Paint paint>;

        $r5 = new android.graphics.DashPathEffect;

        $r6 = newarray (float)[2];

        $f0 = (float) $i0;

        $f0 = $f0 * 1.5F;

        $r6[0] = $f0;

        $f0 = (float) $i0;

        $f0 = $f0 * 1.5F;

        $r6[1] = $f0;

        specialinvoke $r5.<android.graphics.DashPathEffect: void <init>(float[],float)>($r6, 0.0F);

        virtualinvoke $r1.<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>($r5);

        return;

     label5:
        $r1 = r0.<com.mkulesh.micromath.properties.LineProperties: android.graphics.Paint paint>;

        $r5 = new android.graphics.DashPathEffect;

        $r6 = newarray (float)[2];

        $i1 = $i0 * 6;

        $f0 = (float) $i1;

        $r6[0] = $f0;

        $i0 = $i0 * 6;

        $f0 = (float) $i0;

        $r6[1] = $f0;

        specialinvoke $r5.<android.graphics.DashPathEffect: void <init>(float[],float)>($r6, 0.0F);

        virtualinvoke $r1.<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>($r5);

        return;

     label6:
        $r1 = r0.<com.mkulesh.micromath.properties.LineProperties: android.graphics.Paint paint>;

        $r5 = new android.graphics.DashPathEffect;

        $r6 = newarray (float)[4];

        $i1 = $i0 * 6;

        $f0 = (float) $i1;

        $r6[0] = $f0;

        $f0 = (float) $i0;

        $f0 = 2.0F * $f0;

        $r6[1] = $f0;

        $f0 = (float) $i0;

        $f0 = $f0 * 1.5F;

        $r6[2] = $f0;

        $f0 = (float) $i0;

        $f0 = 2.0F * $f0;

        $r6[3] = $f0;

        specialinvoke $r5.<android.graphics.DashPathEffect: void <init>(float[],float)>($r6, 0.0F);

        virtualinvoke $r1.<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>($r5);

        return;
    }
    public void readFromParcel(android.os.Parcel)
    {
        com.mkulesh.micromath.properties.LineProperties r0;
        android.os.Parcel $r1;
        int $i0;
        java.lang.String $r2;
        com.mkulesh.micromath.properties.LineProperties$LineStyle $r3;
        com.mkulesh.micromath.properties.LineProperties$ShapeType $r4;

        r0 := @this: com.mkulesh.micromath.properties.LineProperties;

        $r1 := @parameter0: android.os.Parcel;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        r0.<com.mkulesh.micromath.properties.LineProperties: int color> = $i0;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        r0.<com.mkulesh.micromath.properties.LineProperties: int width> = $i0;

        $r2 = virtualinvoke $r1.<android.os.Parcel: java.lang.String readString()>();

        $r3 = staticinvoke <com.mkulesh.micromath.properties.LineProperties$LineStyle: com.mkulesh.micromath.properties.LineProperties$LineStyle valueOf(java.lang.String)>($r2);

        r0.<com.mkulesh.micromath.properties.LineProperties: com.mkulesh.micromath.properties.LineProperties$LineStyle lineStyle> = $r3;

        $r2 = virtualinvoke $r1.<android.os.Parcel: java.lang.String readString()>();

        $r4 = staticinvoke <com.mkulesh.micromath.properties.LineProperties$ShapeType: com.mkulesh.micromath.properties.LineProperties$ShapeType valueOf(java.lang.String)>($r2);

        r0.<com.mkulesh.micromath.properties.LineProperties: com.mkulesh.micromath.properties.LineProperties$ShapeType shapeType> = $r4;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        r0.<com.mkulesh.micromath.properties.LineProperties: int shapeSize> = $i0;

        return;
    }
    public void readFromXml(org.xmlpull.v1.XmlPullParser)
    {
        com.mkulesh.micromath.properties.LineProperties r0;
        org.xmlpull.v1.XmlPullParser $r1;
        java.lang.String $r2;
        int $i0;
        java.util.Locale $r3;
        com.mkulesh.micromath.properties.LineProperties$LineStyle $r4;
        com.mkulesh.micromath.properties.LineProperties$ShapeType $r5;
        java.lang.Exception $r6, $r7;

        r0 := @this: com.mkulesh.micromath.properties.LineProperties;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "color");

        if $r2 == null goto label1;

        $i0 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>($r2);

        r0.<com.mkulesh.micromath.properties.LineProperties: int color> = $i0;

     label1:
        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "width");

        if $r2 == null goto label2;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        r0.<com.mkulesh.micromath.properties.LineProperties: int width> = $i0;

     label2:
        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "lineStyle");

        if $r2 == null goto label4;

        $r3 = <java.util.Locale: java.util.Locale ENGLISH>;

     label3:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r3);

        $r4 = staticinvoke <com.mkulesh.micromath.properties.LineProperties$LineStyle: com.mkulesh.micromath.properties.LineProperties$LineStyle valueOf(java.lang.String)>($r2);

        r0.<com.mkulesh.micromath.properties.LineProperties: com.mkulesh.micromath.properties.LineProperties$LineStyle lineStyle> = $r4;

     label4:
        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "shapeType");

        if $r2 == null goto label6;

        $r3 = <java.util.Locale: java.util.Locale ENGLISH>;

     label5:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r3);

        $r5 = staticinvoke <com.mkulesh.micromath.properties.LineProperties$ShapeType: com.mkulesh.micromath.properties.LineProperties$ShapeType valueOf(java.lang.String)>($r2);

        r0.<com.mkulesh.micromath.properties.LineProperties: com.mkulesh.micromath.properties.LineProperties$ShapeType shapeType> = $r5;

     label6:
        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "shapeSize");

        if $r2 == null goto label9;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        r0.<com.mkulesh.micromath.properties.LineProperties: int shapeSize> = $i0;

        return;

     label7:
        $r6 := @caughtexception;

        goto label6;

     label8:
        $r7 := @caughtexception;

        goto label4;

     label9:
        return;

        catch java.lang.Exception from label3 to label4 with label8;
        catch java.lang.Exception from label5 to label6 with label7;
    }
    public void setNextDefault(com.mkulesh.micromath.properties.LineProperties)
    {
        com.mkulesh.micromath.properties.LineProperties r0, $r1;
        float[] r2;
        int[] $r3;
        com.mkulesh.micromath.properties.LineProperties$LineStyle $r4;
        int $i0;
        float $f0;
        byte $b1;

        r0 := @this: com.mkulesh.micromath.properties.LineProperties;

        $r1 := @parameter0: com.mkulesh.micromath.properties.LineProperties;

        $r3 = <com.mkulesh.micromath.properties.LineProperties$2: int[] $SwitchMap$com$mkulesh$micromath$properties$LineProperties$LineStyle>;

        $r4 = $r1.<com.mkulesh.micromath.properties.LineProperties: com.mkulesh.micromath.properties.LineProperties$LineStyle lineStyle>;

        $i0 = virtualinvoke $r4.<com.mkulesh.micromath.properties.LineProperties$LineStyle: int ordinal()>();

        $i0 = $r3[$i0];

        lookupswitch($i0)
        {
            case 1: goto label4;
            case 2: goto label6;
            case 3: goto label5;
            case 4: goto label7;
            default: goto label1;
        };

     label1:
        r2 = newarray (float)[3];

        $i0 = $r1.<com.mkulesh.micromath.properties.LineProperties: int color>;

        staticinvoke <android.graphics.Color: void colorToHSV(int,float[])>($i0, r2);

        $f0 = r2[0];

        $f0 = $f0 + 90.0F;

        r2[0] = $f0;

        $f0 = r2[0];

        $b1 = $f0 cmpl 360.0F;

        if $b1 < 0 goto label2;

        $f0 = r2[0];

        $f0 = $f0 - 360.0F;

        r2[0] = $f0;

     label2:
        $f0 = r2[0];

        $b1 = $f0 cmpl 0.0F;

        if $b1 <= 0 goto label3;

        $f0 = r2[0];

        $b1 = $f0 cmpg 180.0F;

        if $b1 >= 0 goto label3;

        $f0 = r2[2];

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, 0.6F);

        r2[2] = $f0;

     label3:
        $i0 = $r1.<com.mkulesh.micromath.properties.LineProperties: int color>;

        $i0 = staticinvoke <android.graphics.Color: int alpha(int)>($i0);

        $i0 = staticinvoke <android.graphics.Color: int HSVToColor(int,float[])>($i0, r2);

        r0.<com.mkulesh.micromath.properties.LineProperties: int color> = $i0;

        return;

     label4:
        $r4 = <com.mkulesh.micromath.properties.LineProperties$LineStyle: com.mkulesh.micromath.properties.LineProperties$LineStyle DASHED>;

        r0.<com.mkulesh.micromath.properties.LineProperties: com.mkulesh.micromath.properties.LineProperties$LineStyle lineStyle> = $r4;

        goto label1;

     label5:
        $r4 = <com.mkulesh.micromath.properties.LineProperties$LineStyle: com.mkulesh.micromath.properties.LineProperties$LineStyle DOTTED>;

        r0.<com.mkulesh.micromath.properties.LineProperties: com.mkulesh.micromath.properties.LineProperties$LineStyle lineStyle> = $r4;

        goto label1;

     label6:
        $r4 = <com.mkulesh.micromath.properties.LineProperties$LineStyle: com.mkulesh.micromath.properties.LineProperties$LineStyle DASH_DOT>;

        r0.<com.mkulesh.micromath.properties.LineProperties: com.mkulesh.micromath.properties.LineProperties$LineStyle lineStyle> = $r4;

        goto label1;

     label7:
        $r4 = <com.mkulesh.micromath.properties.LineProperties$LineStyle: com.mkulesh.micromath.properties.LineProperties$LineStyle SOLID>;

        r0.<com.mkulesh.micromath.properties.LineProperties: com.mkulesh.micromath.properties.LineProperties$LineStyle lineStyle> = $r4;

        goto label1;
    }
    public void writeToParcel(android.os.Parcel, int)
    {
        com.mkulesh.micromath.properties.LineProperties r0;
        android.os.Parcel $r1;
        int $i0;
        com.mkulesh.micromath.properties.LineProperties$LineStyle $r2;
        java.lang.String $r3;
        com.mkulesh.micromath.properties.LineProperties$ShapeType $r4;

        r0 := @this: com.mkulesh.micromath.properties.LineProperties;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = r0.<com.mkulesh.micromath.properties.LineProperties: int color>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $i0 = r0.<com.mkulesh.micromath.properties.LineProperties: int width>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $r2 = r0.<com.mkulesh.micromath.properties.LineProperties: com.mkulesh.micromath.properties.LineProperties$LineStyle lineStyle>;

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.properties.LineProperties$LineStyle: java.lang.String toString()>();

        virtualinvoke $r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $r4 = r0.<com.mkulesh.micromath.properties.LineProperties: com.mkulesh.micromath.properties.LineProperties$ShapeType shapeType>;

        $r3 = virtualinvoke $r4.<com.mkulesh.micromath.properties.LineProperties$ShapeType: java.lang.String toString()>();

        virtualinvoke $r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $i0 = r0.<com.mkulesh.micromath.properties.LineProperties: int shapeSize>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        return;
    }
    public void writeToXml(org.xmlpull.v1.XmlSerializer) throws java.lang.Exception
    {
        com.mkulesh.micromath.properties.LineProperties r0;
        org.xmlpull.v1.XmlSerializer $r1;
        java.lang.String $r2, $r5;
        java.lang.Object[] $r3;
        int $i0;
        java.lang.Integer $r4;
        com.mkulesh.micromath.properties.LineProperties$LineStyle $r6;
        java.util.Locale $r7;
        com.mkulesh.micromath.properties.LineProperties$ShapeType $r8;

        r0 := @this: com.mkulesh.micromath.properties.LineProperties;

        $r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r2 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

        $r3 = newarray (java.lang.Object)[1];

        $i0 = r0.<com.mkulesh.micromath.properties.LineProperties: int color>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("#%08X", $r3);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r2, "color", $r5);

        $r2 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

        $i0 = r0.<com.mkulesh.micromath.properties.LineProperties: int width>;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r2, "width", $r5);

        $r2 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

        $r6 = r0.<com.mkulesh.micromath.properties.LineProperties: com.mkulesh.micromath.properties.LineProperties$LineStyle lineStyle>;

        $r5 = virtualinvoke $r6.<com.mkulesh.micromath.properties.LineProperties$LineStyle: java.lang.String toString()>();

        $r7 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r7);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r2, "lineStyle", $r5);

        $r2 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

        $r8 = r0.<com.mkulesh.micromath.properties.LineProperties: com.mkulesh.micromath.properties.LineProperties$ShapeType shapeType>;

        $r5 = virtualinvoke $r8.<com.mkulesh.micromath.properties.LineProperties$ShapeType: java.lang.String toString()>();

        $r7 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r7);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r2, "shapeType", $r5);

        $r2 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

        $i0 = r0.<com.mkulesh.micromath.properties.LineProperties: int shapeSize>;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r2, "shapeSize", $r5);

        return;
    }
