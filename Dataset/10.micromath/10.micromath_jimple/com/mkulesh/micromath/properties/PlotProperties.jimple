com.mkulesh.micromath.properties.PlotProperties extends java.lang.Object implements android.os.Parcelable
public static final android.os.Parcelable$Creator CREATOR
public static final java.lang.String XML_PROP_AXES_STYLE
public static final java.lang.String XML_PROP_ELEVATION
public static final java.lang.String XML_PROP_HEIGHT
public static final java.lang.String XML_PROP_MESH_FILL
public static final java.lang.String XML_PROP_MESH_LINES
public static final java.lang.String XML_PROP_MESH_OPACITY
public static final java.lang.String XML_PROP_ROTATION
public static final java.lang.String XML_PROP_WIDTH
public com.mkulesh.micromath.properties.PlotProperties$AxesStyle axesStyle
private android.util.DisplayMetrics displayMetrics
public int elevation
public int height
public boolean meshFill
public boolean meshLines
public int meshOpacity
public int rotation
public com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle twoDPlotStyle
public int width
    static void <clinit>()
    {
        com.mkulesh.micromath.properties.PlotProperties$1 $r0;

        $r0 = new com.mkulesh.micromath.properties.PlotProperties$1;

        specialinvoke $r0.<com.mkulesh.micromath.properties.PlotProperties$1: void <init>()>();

        <com.mkulesh.micromath.properties.PlotProperties: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }
    public void <init>()
    {
        com.mkulesh.micromath.properties.PlotProperties r0;
        com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle $r1;
        com.mkulesh.micromath.properties.PlotProperties$AxesStyle $r2;

        r0 := @this: com.mkulesh.micromath.properties.PlotProperties;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mkulesh.micromath.properties.PlotProperties: android.util.DisplayMetrics displayMetrics> = null;

        $r1 = <com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle CONTOUR>;

        r0.<com.mkulesh.micromath.properties.PlotProperties: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle twoDPlotStyle> = $r1;

        r0.<com.mkulesh.micromath.properties.PlotProperties: int width> = 300;

        r0.<com.mkulesh.micromath.properties.PlotProperties: int height> = 300;

        $r2 = <com.mkulesh.micromath.properties.PlotProperties$AxesStyle: com.mkulesh.micromath.properties.PlotProperties$AxesStyle BOXED>;

        r0.<com.mkulesh.micromath.properties.PlotProperties: com.mkulesh.micromath.properties.PlotProperties$AxesStyle axesStyle> = $r2;

        r0.<com.mkulesh.micromath.properties.PlotProperties: boolean meshLines> = 0;

        r0.<com.mkulesh.micromath.properties.PlotProperties: boolean meshFill> = 0;

        r0.<com.mkulesh.micromath.properties.PlotProperties: int meshOpacity> = 150;

        r0.<com.mkulesh.micromath.properties.PlotProperties: int rotation> = 35;

        r0.<com.mkulesh.micromath.properties.PlotProperties: int elevation> = 20;

        return;
    }
    public void <init>(android.os.Parcel)
    {
        com.mkulesh.micromath.properties.PlotProperties r0;
        android.os.Parcel $r1;
        com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle $r2;
        com.mkulesh.micromath.properties.PlotProperties$AxesStyle $r3;

        r0 := @this: com.mkulesh.micromath.properties.PlotProperties;

        $r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mkulesh.micromath.properties.PlotProperties: android.util.DisplayMetrics displayMetrics> = null;

        $r2 = <com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle CONTOUR>;

        r0.<com.mkulesh.micromath.properties.PlotProperties: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle twoDPlotStyle> = $r2;

        r0.<com.mkulesh.micromath.properties.PlotProperties: int width> = 300;

        r0.<com.mkulesh.micromath.properties.PlotProperties: int height> = 300;

        $r3 = <com.mkulesh.micromath.properties.PlotProperties$AxesStyle: com.mkulesh.micromath.properties.PlotProperties$AxesStyle BOXED>;

        r0.<com.mkulesh.micromath.properties.PlotProperties: com.mkulesh.micromath.properties.PlotProperties$AxesStyle axesStyle> = $r3;

        r0.<com.mkulesh.micromath.properties.PlotProperties: boolean meshLines> = 0;

        r0.<com.mkulesh.micromath.properties.PlotProperties: boolean meshFill> = 0;

        r0.<com.mkulesh.micromath.properties.PlotProperties: int meshOpacity> = 150;

        r0.<com.mkulesh.micromath.properties.PlotProperties: int rotation> = 35;

        r0.<com.mkulesh.micromath.properties.PlotProperties: int elevation> = 20;

        virtualinvoke r0.<com.mkulesh.micromath.properties.PlotProperties: void readFromParcel(android.os.Parcel)>($r1);

        return;
    }
    public void assign(com.mkulesh.micromath.properties.PlotProperties)
    {
        com.mkulesh.micromath.properties.PlotProperties r0, $r1;
        int $i0;
        com.mkulesh.micromath.properties.PlotProperties$AxesStyle $r2;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.properties.PlotProperties;

        $r1 := @parameter0: com.mkulesh.micromath.properties.PlotProperties;

        $i0 = $r1.<com.mkulesh.micromath.properties.PlotProperties: int width>;

        r0.<com.mkulesh.micromath.properties.PlotProperties: int width> = $i0;

        $i0 = $r1.<com.mkulesh.micromath.properties.PlotProperties: int height>;

        r0.<com.mkulesh.micromath.properties.PlotProperties: int height> = $i0;

        $r2 = $r1.<com.mkulesh.micromath.properties.PlotProperties: com.mkulesh.micromath.properties.PlotProperties$AxesStyle axesStyle>;

        r0.<com.mkulesh.micromath.properties.PlotProperties: com.mkulesh.micromath.properties.PlotProperties$AxesStyle axesStyle> = $r2;

        $z0 = $r1.<com.mkulesh.micromath.properties.PlotProperties: boolean meshLines>;

        r0.<com.mkulesh.micromath.properties.PlotProperties: boolean meshLines> = $z0;

        $z0 = $r1.<com.mkulesh.micromath.properties.PlotProperties: boolean meshFill>;

        r0.<com.mkulesh.micromath.properties.PlotProperties: boolean meshFill> = $z0;

        $i0 = $r1.<com.mkulesh.micromath.properties.PlotProperties: int meshOpacity>;

        r0.<com.mkulesh.micromath.properties.PlotProperties: int meshOpacity> = $i0;

        $i0 = $r1.<com.mkulesh.micromath.properties.PlotProperties: int rotation>;

        r0.<com.mkulesh.micromath.properties.PlotProperties: int rotation> = $i0;

        $i0 = $r1.<com.mkulesh.micromath.properties.PlotProperties: int elevation>;

        r0.<com.mkulesh.micromath.properties.PlotProperties: int elevation> = $i0;

        return;
    }
    public int describeContents()
    {
        com.mkulesh.micromath.properties.PlotProperties r0;

        r0 := @this: com.mkulesh.micromath.properties.PlotProperties;

        return 0;
    }
    public void initialize(android.content.Context)
    {
        com.mkulesh.micromath.properties.PlotProperties r0;
        android.content.Context $r1;
        int i0, $i1;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;

        r0 := @this: com.mkulesh.micromath.properties.PlotProperties;

        $r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        r0.<com.mkulesh.micromath.properties.PlotProperties: android.util.DisplayMetrics displayMetrics> = $r3;

        $r3 = r0.<com.mkulesh.micromath.properties.PlotProperties: android.util.DisplayMetrics displayMetrics>;

        i0 = $r3.<android.util.DisplayMetrics: int heightPixels>;

        $r3 = r0.<com.mkulesh.micromath.properties.PlotProperties: android.util.DisplayMetrics displayMetrics>;

        $i1 = $r3.<android.util.DisplayMetrics: int widthPixels>;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i1);

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = virtualinvoke $r2.<android.content.res.Resources: int getDimensionPixelOffset(int)>(2131230803);

        $i1 = $i1 * 2;

        i0 = i0 - $i1;

        r0.<com.mkulesh.micromath.properties.PlotProperties: int width> = i0;

        r0.<com.mkulesh.micromath.properties.PlotProperties: int height> = i0;

        return;
    }
    public boolean isCrossedAxes()
    {
        com.mkulesh.micromath.properties.PlotProperties r0;
        com.mkulesh.micromath.properties.PlotProperties$AxesStyle $r1, $r2;

        r0 := @this: com.mkulesh.micromath.properties.PlotProperties;

        $r2 = r0.<com.mkulesh.micromath.properties.PlotProperties: com.mkulesh.micromath.properties.PlotProperties$AxesStyle axesStyle>;

        $r1 = <com.mkulesh.micromath.properties.PlotProperties$AxesStyle: com.mkulesh.micromath.properties.PlotProperties$AxesStyle CROSSED>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean isNoAxes()
    {
        com.mkulesh.micromath.properties.PlotProperties r0;
        com.mkulesh.micromath.properties.PlotProperties$AxesStyle $r1, $r2;

        r0 := @this: com.mkulesh.micromath.properties.PlotProperties;

        $r2 = r0.<com.mkulesh.micromath.properties.PlotProperties: com.mkulesh.micromath.properties.PlotProperties$AxesStyle axesStyle>;

        $r1 = <com.mkulesh.micromath.properties.PlotProperties$AxesStyle: com.mkulesh.micromath.properties.PlotProperties$AxesStyle NONE>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }
    public void readFromParcel(android.os.Parcel)
    {
        com.mkulesh.micromath.properties.PlotProperties r0;
        android.os.Parcel $r1;
        int $i0;
        java.lang.String $r2;
        com.mkulesh.micromath.properties.PlotProperties$AxesStyle $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.properties.PlotProperties;

        $r1 := @parameter0: android.os.Parcel;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        r0.<com.mkulesh.micromath.properties.PlotProperties: int width> = $i0;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        r0.<com.mkulesh.micromath.properties.PlotProperties: int height> = $i0;

        $r2 = virtualinvoke $r1.<android.os.Parcel: java.lang.String readString()>();

        $r3 = staticinvoke <com.mkulesh.micromath.properties.PlotProperties$AxesStyle: com.mkulesh.micromath.properties.PlotProperties$AxesStyle valueOf(java.lang.String)>($r2);

        r0.<com.mkulesh.micromath.properties.PlotProperties: com.mkulesh.micromath.properties.PlotProperties$AxesStyle axesStyle> = $r3;

        $r2 = virtualinvoke $r1.<android.os.Parcel: java.lang.String readString()>();

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r2);

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        r0.<com.mkulesh.micromath.properties.PlotProperties: boolean meshLines> = $z0;

        $r2 = virtualinvoke $r1.<android.os.Parcel: java.lang.String readString()>();

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r2);

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        r0.<com.mkulesh.micromath.properties.PlotProperties: boolean meshFill> = $z0;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        r0.<com.mkulesh.micromath.properties.PlotProperties: int meshOpacity> = $i0;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        r0.<com.mkulesh.micromath.properties.PlotProperties: int rotation> = $i0;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        r0.<com.mkulesh.micromath.properties.PlotProperties: int elevation> = $i0;

        return;
    }
    public void readFromXml(org.xmlpull.v1.XmlPullParser)
    {
        com.mkulesh.micromath.properties.PlotProperties r0;
        org.xmlpull.v1.XmlPullParser $r1;
        java.lang.String $r2;
        android.util.DisplayMetrics $r3;
        int $i0;
        java.util.Locale $r4;
        com.mkulesh.micromath.properties.PlotProperties$AxesStyle $r5;
        java.lang.Boolean $r6;
        boolean $z0;
        java.lang.Exception $r7;

        r0 := @this: com.mkulesh.micromath.properties.PlotProperties;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "width");

        if $r2 == null goto label01;

        $r3 = r0.<com.mkulesh.micromath.properties.PlotProperties: android.util.DisplayMetrics displayMetrics>;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        $i0 = staticinvoke <com.mkulesh.micromath.utils.ViewUtils: int dpToPx(android.util.DisplayMetrics,int)>($r3, $i0);

        r0.<com.mkulesh.micromath.properties.PlotProperties: int width> = $i0;

     label01:
        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "height");

        if $r2 == null goto label02;

        $r3 = r0.<com.mkulesh.micromath.properties.PlotProperties: android.util.DisplayMetrics displayMetrics>;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        $i0 = staticinvoke <com.mkulesh.micromath.utils.ViewUtils: int dpToPx(android.util.DisplayMetrics,int)>($r3, $i0);

        r0.<com.mkulesh.micromath.properties.PlotProperties: int height> = $i0;

     label02:
        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "axes_style");

        if $r2 == null goto label04;

        $r4 = <java.util.Locale: java.util.Locale ENGLISH>;

     label03:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r4);

        $r5 = staticinvoke <com.mkulesh.micromath.properties.PlotProperties$AxesStyle: com.mkulesh.micromath.properties.PlotProperties$AxesStyle valueOf(java.lang.String)>($r2);

        r0.<com.mkulesh.micromath.properties.PlotProperties: com.mkulesh.micromath.properties.PlotProperties$AxesStyle axesStyle> = $r5;

     label04:
        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "meshLines");

        if $r2 == null goto label05;

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r2);

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        r0.<com.mkulesh.micromath.properties.PlotProperties: boolean meshLines> = $z0;

     label05:
        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "meshFill");

        if $r2 == null goto label06;

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r2);

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        r0.<com.mkulesh.micromath.properties.PlotProperties: boolean meshFill> = $z0;

     label06:
        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "meshOpacity");

        if $r2 == null goto label07;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        r0.<com.mkulesh.micromath.properties.PlotProperties: int meshOpacity> = $i0;

     label07:
        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "rotation");

        if $r2 == null goto label08;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        r0.<com.mkulesh.micromath.properties.PlotProperties: int rotation> = $i0;

     label08:
        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "elevation");

        if $r2 == null goto label10;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        r0.<com.mkulesh.micromath.properties.PlotProperties: int elevation> = $i0;

        return;

     label09:
        $r7 := @caughtexception;

        goto label04;

     label10:
        return;

        catch java.lang.Exception from label03 to label04 with label09;
    }
    public void writeToParcel(android.os.Parcel, int)
    {
        com.mkulesh.micromath.properties.PlotProperties r0;
        android.os.Parcel $r1;
        int $i0;
        com.mkulesh.micromath.properties.PlotProperties$AxesStyle $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.properties.PlotProperties;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = r0.<com.mkulesh.micromath.properties.PlotProperties: int width>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $i0 = r0.<com.mkulesh.micromath.properties.PlotProperties: int height>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $r2 = r0.<com.mkulesh.micromath.properties.PlotProperties: com.mkulesh.micromath.properties.PlotProperties$AxesStyle axesStyle>;

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.properties.PlotProperties$AxesStyle: java.lang.String toString()>();

        virtualinvoke $r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $z0 = r0.<com.mkulesh.micromath.properties.PlotProperties: boolean meshLines>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0);

        virtualinvoke $r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $z0 = r0.<com.mkulesh.micromath.properties.PlotProperties: boolean meshFill>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0);

        virtualinvoke $r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $i0 = r0.<com.mkulesh.micromath.properties.PlotProperties: int meshOpacity>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $i0 = r0.<com.mkulesh.micromath.properties.PlotProperties: int rotation>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $i0 = r0.<com.mkulesh.micromath.properties.PlotProperties: int elevation>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        return;
    }
    public void writeToXml(org.xmlpull.v1.XmlSerializer) throws java.lang.Exception
    {
        com.mkulesh.micromath.properties.PlotProperties r0;
        org.xmlpull.v1.XmlSerializer $r1;
        java.lang.String $r2, $r4;
        android.util.DisplayMetrics $r3;
        int $i0;
        com.mkulesh.micromath.properties.PlotProperties$AxesStyle $r5;
        java.util.Locale $r6;
        com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle $r7, $r8;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.properties.PlotProperties;

        $r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r2 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

        $r3 = r0.<com.mkulesh.micromath.properties.PlotProperties: android.util.DisplayMetrics displayMetrics>;

        $i0 = r0.<com.mkulesh.micromath.properties.PlotProperties: int width>;

        $i0 = staticinvoke <com.mkulesh.micromath.utils.ViewUtils: int pxToDp(android.util.DisplayMetrics,int)>($r3, $i0);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r2, "width", $r4);

        $r2 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

        $r3 = r0.<com.mkulesh.micromath.properties.PlotProperties: android.util.DisplayMetrics displayMetrics>;

        $i0 = r0.<com.mkulesh.micromath.properties.PlotProperties: int height>;

        $i0 = staticinvoke <com.mkulesh.micromath.utils.ViewUtils: int pxToDp(android.util.DisplayMetrics,int)>($r3, $i0);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r2, "height", $r4);

        $r2 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

        $r5 = r0.<com.mkulesh.micromath.properties.PlotProperties: com.mkulesh.micromath.properties.PlotProperties$AxesStyle axesStyle>;

        $r4 = virtualinvoke $r5.<com.mkulesh.micromath.properties.PlotProperties$AxesStyle: java.lang.String toString()>();

        $r6 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r6);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r2, "axes_style", $r4);

        $r7 = r0.<com.mkulesh.micromath.properties.PlotProperties: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle twoDPlotStyle>;

        $r8 = <com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle: com.mkulesh.micromath.properties.PlotProperties$TwoDPlotStyle SURFACE>;

        if $r7 != $r8 goto label1;

        $r2 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

        $z0 = r0.<com.mkulesh.micromath.properties.PlotProperties: boolean meshLines>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r2, "meshLines", $r4);

        $r2 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

        $z0 = r0.<com.mkulesh.micromath.properties.PlotProperties: boolean meshFill>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r2, "meshFill", $r4);

        $r2 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

        $i0 = r0.<com.mkulesh.micromath.properties.PlotProperties: int meshOpacity>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r2, "meshOpacity", $r4);

        $r2 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

        $i0 = r0.<com.mkulesh.micromath.properties.PlotProperties: int rotation>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r2, "rotation", $r4);

        $r2 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

        $i0 = r0.<com.mkulesh.micromath.properties.PlotProperties: int elevation>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r2, "elevation", $r4);

     label1:
        return;
    }
