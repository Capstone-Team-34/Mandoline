com.mkulesh.micromath.properties.PlotProperties$AxesStyle extends java.lang.Enum
private static final com.mkulesh.micromath.properties.PlotProperties$AxesStyle[] $VALUES
public static final enum com.mkulesh.micromath.properties.PlotProperties$AxesStyle BOXED
public static final enum com.mkulesh.micromath.properties.PlotProperties$AxesStyle CROSSED
public static final enum com.mkulesh.micromath.properties.PlotProperties$AxesStyle NONE
    static void <clinit>()
    {
        com.mkulesh.micromath.properties.PlotProperties$AxesStyle $r0;
        com.mkulesh.micromath.properties.PlotProperties$AxesStyle[] $r1;

        $r0 = new com.mkulesh.micromath.properties.PlotProperties$AxesStyle;

        specialinvoke $r0.<com.mkulesh.micromath.properties.PlotProperties$AxesStyle: void <init>(java.lang.String,int)>("BOXED", 0);

        <com.mkulesh.micromath.properties.PlotProperties$AxesStyle: com.mkulesh.micromath.properties.PlotProperties$AxesStyle BOXED> = $r0;

        $r0 = new com.mkulesh.micromath.properties.PlotProperties$AxesStyle;

        specialinvoke $r0.<com.mkulesh.micromath.properties.PlotProperties$AxesStyle: void <init>(java.lang.String,int)>("CROSSED", 1);

        <com.mkulesh.micromath.properties.PlotProperties$AxesStyle: com.mkulesh.micromath.properties.PlotProperties$AxesStyle CROSSED> = $r0;

        $r0 = new com.mkulesh.micromath.properties.PlotProperties$AxesStyle;

        specialinvoke $r0.<com.mkulesh.micromath.properties.PlotProperties$AxesStyle: void <init>(java.lang.String,int)>("NONE", 2);

        <com.mkulesh.micromath.properties.PlotProperties$AxesStyle: com.mkulesh.micromath.properties.PlotProperties$AxesStyle NONE> = $r0;

        $r1 = newarray (com.mkulesh.micromath.properties.PlotProperties$AxesStyle)[3];

        $r0 = <com.mkulesh.micromath.properties.PlotProperties$AxesStyle: com.mkulesh.micromath.properties.PlotProperties$AxesStyle BOXED>;

        $r1[0] = $r0;

        $r0 = <com.mkulesh.micromath.properties.PlotProperties$AxesStyle: com.mkulesh.micromath.properties.PlotProperties$AxesStyle CROSSED>;

        $r1[1] = $r0;

        $r0 = <com.mkulesh.micromath.properties.PlotProperties$AxesStyle: com.mkulesh.micromath.properties.PlotProperties$AxesStyle NONE>;

        $r1[2] = $r0;

        <com.mkulesh.micromath.properties.PlotProperties$AxesStyle: com.mkulesh.micromath.properties.PlotProperties$AxesStyle[] $VALUES> = $r1;

        return;
    }
    private void <init>(java.lang.String, int)
    {
        com.mkulesh.micromath.properties.PlotProperties$AxesStyle r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: com.mkulesh.micromath.properties.PlotProperties$AxesStyle;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }
    public static com.mkulesh.micromath.properties.PlotProperties$AxesStyle valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        com.mkulesh.micromath.properties.PlotProperties$AxesStyle $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/mkulesh/micromath/properties/PlotProperties$AxesStyle;", $r0);

        $r2 = (com.mkulesh.micromath.properties.PlotProperties$AxesStyle) $r1;

        return $r2;
    }
    public static com.mkulesh.micromath.properties.PlotProperties$AxesStyle[] values()
    {
        java.lang.Object $r0;
        com.mkulesh.micromath.properties.PlotProperties$AxesStyle[] $r1;

        $r1 = <com.mkulesh.micromath.properties.PlotProperties$AxesStyle: com.mkulesh.micromath.properties.PlotProperties$AxesStyle[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (com.mkulesh.micromath.properties.PlotProperties$AxesStyle[]) $r0;

        return $r1;
    }
