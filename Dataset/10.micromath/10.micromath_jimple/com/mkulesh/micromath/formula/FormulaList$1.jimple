com.mkulesh.micromath.formula.FormulaList$1 extends java.lang.Object
static final int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaBase$BaseType
static final int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaList$SelectionMode
static final int[] $SwitchMap$com$mkulesh$micromath$widgets$ListChangeIf$FormulaType
    static void <clinit>()
    {
        com.mkulesh.micromath.formula.FormulaList$SelectionMode[] $r0;
        int $i0;
        int[] $r1;
        com.mkulesh.micromath.formula.FormulaList$SelectionMode $r2;
        com.mkulesh.micromath.formula.FormulaBase$BaseType[] $r3;
        com.mkulesh.micromath.formula.FormulaBase$BaseType $r4;
        com.mkulesh.micromath.widgets.ListChangeIf$FormulaType[] $r5;
        com.mkulesh.micromath.widgets.ListChangeIf$FormulaType $r6;
        java.lang.NoSuchFieldError $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;

        $r0 = staticinvoke <com.mkulesh.micromath.formula.FormulaList$SelectionMode: com.mkulesh.micromath.formula.FormulaList$SelectionMode[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <com.mkulesh.micromath.formula.FormulaList$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaList$SelectionMode> = $r1;

     label01:
        $r1 = <com.mkulesh.micromath.formula.FormulaList$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaList$SelectionMode>;

        $r2 = <com.mkulesh.micromath.formula.FormulaList$SelectionMode: com.mkulesh.micromath.formula.FormulaList$SelectionMode ADD>;

        $i0 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaList$SelectionMode: int ordinal()>();

     label02:
        $r1[$i0] = 1;

     label03:
        $r1 = <com.mkulesh.micromath.formula.FormulaList$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaList$SelectionMode>;

        $r2 = <com.mkulesh.micromath.formula.FormulaList$SelectionMode: com.mkulesh.micromath.formula.FormulaList$SelectionMode CLEAR>;

        $i0 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaList$SelectionMode: int ordinal()>();

     label04:
        $r1[$i0] = 2;

     label05:
        $r1 = <com.mkulesh.micromath.formula.FormulaList$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaList$SelectionMode>;

        $r2 = <com.mkulesh.micromath.formula.FormulaList$SelectionMode: com.mkulesh.micromath.formula.FormulaList$SelectionMode CLEAR_ALL>;

        $i0 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaList$SelectionMode: int ordinal()>();

     label06:
        $r1[$i0] = 3;

     label07:
        $r3 = staticinvoke <com.mkulesh.micromath.formula.FormulaBase$BaseType: com.mkulesh.micromath.formula.FormulaBase$BaseType[] values()>();

        $i0 = lengthof $r3;

        $r1 = newarray (int)[$i0];

        <com.mkulesh.micromath.formula.FormulaList$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaBase$BaseType> = $r1;

     label08:
        $r1 = <com.mkulesh.micromath.formula.FormulaList$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaBase$BaseType>;

        $r4 = <com.mkulesh.micromath.formula.FormulaBase$BaseType: com.mkulesh.micromath.formula.FormulaBase$BaseType EQUATION>;

        $i0 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaBase$BaseType: int ordinal()>();

     label09:
        $r1[$i0] = 1;

     label10:
        $r1 = <com.mkulesh.micromath.formula.FormulaList$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaBase$BaseType>;

        $r4 = <com.mkulesh.micromath.formula.FormulaBase$BaseType: com.mkulesh.micromath.formula.FormulaBase$BaseType RESULT>;

        $i0 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaBase$BaseType: int ordinal()>();

     label11:
        $r1[$i0] = 2;

     label12:
        $r1 = <com.mkulesh.micromath.formula.FormulaList$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaBase$BaseType>;

        $r4 = <com.mkulesh.micromath.formula.FormulaBase$BaseType: com.mkulesh.micromath.formula.FormulaBase$BaseType PLOT_FUNCTION>;

        $i0 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaBase$BaseType: int ordinal()>();

     label13:
        $r1[$i0] = 3;

     label14:
        $r1 = <com.mkulesh.micromath.formula.FormulaList$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaBase$BaseType>;

        $r4 = <com.mkulesh.micromath.formula.FormulaBase$BaseType: com.mkulesh.micromath.formula.FormulaBase$BaseType PLOT_CONTOUR>;

        $i0 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaBase$BaseType: int ordinal()>();

     label15:
        $r1[$i0] = 4;

     label16:
        $r1 = <com.mkulesh.micromath.formula.FormulaList$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaBase$BaseType>;

        $r4 = <com.mkulesh.micromath.formula.FormulaBase$BaseType: com.mkulesh.micromath.formula.FormulaBase$BaseType TEXT_FRAGMENT>;

        $i0 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaBase$BaseType: int ordinal()>();

     label17:
        $r1[$i0] = 5;

     label18:
        $r1 = <com.mkulesh.micromath.formula.FormulaList$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaBase$BaseType>;

        $r4 = <com.mkulesh.micromath.formula.FormulaBase$BaseType: com.mkulesh.micromath.formula.FormulaBase$BaseType IMAGE_FRAGMENT>;

        $i0 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaBase$BaseType: int ordinal()>();

     label19:
        $r1[$i0] = 6;

     label20:
        $r1 = <com.mkulesh.micromath.formula.FormulaList$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaBase$BaseType>;

        $r4 = <com.mkulesh.micromath.formula.FormulaBase$BaseType: com.mkulesh.micromath.formula.FormulaBase$BaseType TERM>;

        $i0 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaBase$BaseType: int ordinal()>();

     label21:
        $r1[$i0] = 7;

     label22:
        $r5 = staticinvoke <com.mkulesh.micromath.widgets.ListChangeIf$FormulaType: com.mkulesh.micromath.widgets.ListChangeIf$FormulaType[] values()>();

        $i0 = lengthof $r5;

        $r1 = newarray (int)[$i0];

        <com.mkulesh.micromath.formula.FormulaList$1: int[] $SwitchMap$com$mkulesh$micromath$widgets$ListChangeIf$FormulaType> = $r1;

     label23:
        $r1 = <com.mkulesh.micromath.formula.FormulaList$1: int[] $SwitchMap$com$mkulesh$micromath$widgets$ListChangeIf$FormulaType>;

        $r6 = <com.mkulesh.micromath.widgets.ListChangeIf$FormulaType: com.mkulesh.micromath.widgets.ListChangeIf$FormulaType EQUATION>;

        $i0 = virtualinvoke $r6.<com.mkulesh.micromath.widgets.ListChangeIf$FormulaType: int ordinal()>();

     label24:
        $r1[$i0] = 1;

     label25:
        $r1 = <com.mkulesh.micromath.formula.FormulaList$1: int[] $SwitchMap$com$mkulesh$micromath$widgets$ListChangeIf$FormulaType>;

        $r6 = <com.mkulesh.micromath.widgets.ListChangeIf$FormulaType: com.mkulesh.micromath.widgets.ListChangeIf$FormulaType RESULT>;

        $i0 = virtualinvoke $r6.<com.mkulesh.micromath.widgets.ListChangeIf$FormulaType: int ordinal()>();

     label26:
        $r1[$i0] = 2;

     label27:
        $r1 = <com.mkulesh.micromath.formula.FormulaList$1: int[] $SwitchMap$com$mkulesh$micromath$widgets$ListChangeIf$FormulaType>;

        $r6 = <com.mkulesh.micromath.widgets.ListChangeIf$FormulaType: com.mkulesh.micromath.widgets.ListChangeIf$FormulaType PLOT_FUNCTION>;

        $i0 = virtualinvoke $r6.<com.mkulesh.micromath.widgets.ListChangeIf$FormulaType: int ordinal()>();

     label28:
        $r1[$i0] = 3;

     label29:
        $r1 = <com.mkulesh.micromath.formula.FormulaList$1: int[] $SwitchMap$com$mkulesh$micromath$widgets$ListChangeIf$FormulaType>;

        $r6 = <com.mkulesh.micromath.widgets.ListChangeIf$FormulaType: com.mkulesh.micromath.widgets.ListChangeIf$FormulaType PLOT_CONTOUR>;

        $i0 = virtualinvoke $r6.<com.mkulesh.micromath.widgets.ListChangeIf$FormulaType: int ordinal()>();

     label30:
        $r1[$i0] = 4;

     label31:
        $r1 = <com.mkulesh.micromath.formula.FormulaList$1: int[] $SwitchMap$com$mkulesh$micromath$widgets$ListChangeIf$FormulaType>;

        $r6 = <com.mkulesh.micromath.widgets.ListChangeIf$FormulaType: com.mkulesh.micromath.widgets.ListChangeIf$FormulaType TEXT_FRAGMENT>;

        $i0 = virtualinvoke $r6.<com.mkulesh.micromath.widgets.ListChangeIf$FormulaType: int ordinal()>();

     label32:
        $r1[$i0] = 5;

     label33:
        $r1 = <com.mkulesh.micromath.formula.FormulaList$1: int[] $SwitchMap$com$mkulesh$micromath$widgets$ListChangeIf$FormulaType>;

        $r6 = <com.mkulesh.micromath.widgets.ListChangeIf$FormulaType: com.mkulesh.micromath.widgets.ListChangeIf$FormulaType IMAGE_FRAGMENT>;

        $i0 = virtualinvoke $r6.<com.mkulesh.micromath.widgets.ListChangeIf$FormulaType: int ordinal()>();

     label34:
        $r1[$i0] = 6;

        return;

     label35:
        $r7 := @caughtexception;

        return;

     label36:
        $r8 := @caughtexception;

        goto label33;

     label37:
        $r9 := @caughtexception;

        goto label31;

     label38:
        $r10 := @caughtexception;

        goto label29;

     label39:
        $r11 := @caughtexception;

        goto label27;

     label40:
        $r12 := @caughtexception;

        goto label25;

     label41:
        $r13 := @caughtexception;

        goto label22;

     label42:
        $r14 := @caughtexception;

        goto label20;

     label43:
        $r15 := @caughtexception;

        goto label18;

     label44:
        $r16 := @caughtexception;

        goto label16;

     label45:
        $r17 := @caughtexception;

        goto label14;

     label46:
        $r18 := @caughtexception;

        goto label12;

     label47:
        $r19 := @caughtexception;

        goto label10;

     label48:
        $r20 := @caughtexception;

        goto label07;

     label49:
        $r21 := @caughtexception;

        goto label05;

     label50:
        $r22 := @caughtexception;

        goto label03;

        catch java.lang.NoSuchFieldError from label01 to label02 with label50;
        catch java.lang.NoSuchFieldError from label03 to label04 with label49;
        catch java.lang.NoSuchFieldError from label05 to label06 with label48;
        catch java.lang.NoSuchFieldError from label08 to label09 with label47;
        catch java.lang.NoSuchFieldError from label10 to label11 with label46;
        catch java.lang.NoSuchFieldError from label12 to label13 with label45;
        catch java.lang.NoSuchFieldError from label14 to label15 with label44;
        catch java.lang.NoSuchFieldError from label16 to label17 with label43;
        catch java.lang.NoSuchFieldError from label18 to label19 with label42;
        catch java.lang.NoSuchFieldError from label20 to label21 with label41;
        catch java.lang.NoSuchFieldError from label23 to label24 with label40;
        catch java.lang.NoSuchFieldError from label25 to label26 with label39;
        catch java.lang.NoSuchFieldError from label27 to label28 with label38;
        catch java.lang.NoSuchFieldError from label29 to label30 with label37;
        catch java.lang.NoSuchFieldError from label31 to label32 with label36;
        catch java.lang.NoSuchFieldError from label33 to label34 with label35;
    }
