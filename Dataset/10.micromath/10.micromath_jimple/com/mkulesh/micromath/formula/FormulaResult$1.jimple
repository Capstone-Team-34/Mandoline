com.mkulesh.micromath.formula.FormulaResult$1 extends java.lang.Object
static final int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaBase$ValidationPassType
static final int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaResult$ResultType
    static void <clinit>()
    {
        com.mkulesh.micromath.formula.FormulaResult$ResultType[] $r0;
        int $i0;
        int[] $r1;
        com.mkulesh.micromath.formula.FormulaResult$ResultType $r2;
        com.mkulesh.micromath.formula.FormulaBase$ValidationPassType[] $r3;
        com.mkulesh.micromath.formula.FormulaBase$ValidationPassType $r4;
        java.lang.NoSuchFieldError $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        $r0 = staticinvoke <com.mkulesh.micromath.formula.FormulaResult$ResultType: com.mkulesh.micromath.formula.FormulaResult$ResultType[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <com.mkulesh.micromath.formula.FormulaResult$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaResult$ResultType> = $r1;

     label01:
        $r1 = <com.mkulesh.micromath.formula.FormulaResult$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaResult$ResultType>;

        $r2 = <com.mkulesh.micromath.formula.FormulaResult$ResultType: com.mkulesh.micromath.formula.FormulaResult$ResultType NONE>;

        $i0 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaResult$ResultType: int ordinal()>();

     label02:
        $r1[$i0] = 1;

     label03:
        $r1 = <com.mkulesh.micromath.formula.FormulaResult$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaResult$ResultType>;

        $r2 = <com.mkulesh.micromath.formula.FormulaResult$ResultType: com.mkulesh.micromath.formula.FormulaResult$ResultType NAN>;

        $i0 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaResult$ResultType: int ordinal()>();

     label04:
        $r1[$i0] = 2;

     label05:
        $r1 = <com.mkulesh.micromath.formula.FormulaResult$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaResult$ResultType>;

        $r2 = <com.mkulesh.micromath.formula.FormulaResult$ResultType: com.mkulesh.micromath.formula.FormulaResult$ResultType CONSTANT>;

        $i0 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaResult$ResultType: int ordinal()>();

     label06:
        $r1[$i0] = 3;

     label07:
        $r1 = <com.mkulesh.micromath.formula.FormulaResult$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaResult$ResultType>;

        $r2 = <com.mkulesh.micromath.formula.FormulaResult$ResultType: com.mkulesh.micromath.formula.FormulaResult$ResultType ARRAY_1D>;

        $i0 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaResult$ResultType: int ordinal()>();

     label08:
        $r1[$i0] = 4;

     label09:
        $r1 = <com.mkulesh.micromath.formula.FormulaResult$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaResult$ResultType>;

        $r2 = <com.mkulesh.micromath.formula.FormulaResult$ResultType: com.mkulesh.micromath.formula.FormulaResult$ResultType ARRAY_2D>;

        $i0 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaResult$ResultType: int ordinal()>();

     label10:
        $r1[$i0] = 5;

     label11:
        $r3 = staticinvoke <com.mkulesh.micromath.formula.FormulaBase$ValidationPassType: com.mkulesh.micromath.formula.FormulaBase$ValidationPassType[] values()>();

        $i0 = lengthof $r3;

        $r1 = newarray (int)[$i0];

        <com.mkulesh.micromath.formula.FormulaResult$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaBase$ValidationPassType> = $r1;

     label12:
        $r1 = <com.mkulesh.micromath.formula.FormulaResult$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaBase$ValidationPassType>;

        $r4 = <com.mkulesh.micromath.formula.FormulaBase$ValidationPassType: com.mkulesh.micromath.formula.FormulaBase$ValidationPassType VALIDATE_SINGLE_FORMULA>;

        $i0 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaBase$ValidationPassType: int ordinal()>();

     label13:
        $r1[$i0] = 1;

     label14:
        $r1 = <com.mkulesh.micromath.formula.FormulaResult$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaBase$ValidationPassType>;

        $r4 = <com.mkulesh.micromath.formula.FormulaBase$ValidationPassType: com.mkulesh.micromath.formula.FormulaBase$ValidationPassType VALIDATE_LINKS>;

        $i0 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaBase$ValidationPassType: int ordinal()>();

     label15:
        $r1[$i0] = 2;

        return;

     label16:
        $r5 := @caughtexception;

        return;

     label17:
        $r6 := @caughtexception;

        goto label14;

     label18:
        $r7 := @caughtexception;

        goto label11;

     label19:
        $r8 := @caughtexception;

        goto label09;

     label20:
        $r9 := @caughtexception;

        goto label07;

     label21:
        $r10 := @caughtexception;

        goto label05;

     label22:
        $r11 := @caughtexception;

        goto label03;

        catch java.lang.NoSuchFieldError from label01 to label02 with label22;
        catch java.lang.NoSuchFieldError from label03 to label04 with label21;
        catch java.lang.NoSuchFieldError from label05 to label06 with label20;
        catch java.lang.NoSuchFieldError from label07 to label08 with label19;
        catch java.lang.NoSuchFieldError from label09 to label10 with label18;
        catch java.lang.NoSuchFieldError from label12 to label13 with label17;
        catch java.lang.NoSuchFieldError from label14 to label15 with label16;
    }
