com.mkulesh.micromath.formula.Equation$EquationConstantResult extends java.lang.Object
final com.mkulesh.micromath.formula.Equation this$0
private com.mkulesh.micromath.math.CalculatedValue value
    private void <init>(com.mkulesh.micromath.formula.Equation)
    {
        com.mkulesh.micromath.formula.Equation$EquationConstantResult r0;
        com.mkulesh.micromath.formula.Equation $r1;

        r0 := @this: com.mkulesh.micromath.formula.Equation$EquationConstantResult;

        $r1 := @parameter0: com.mkulesh.micromath.formula.Equation;

        r0.<com.mkulesh.micromath.formula.Equation$EquationConstantResult: com.mkulesh.micromath.formula.Equation this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mkulesh.micromath.formula.Equation$EquationConstantResult: com.mkulesh.micromath.math.CalculatedValue value> = null;

        return;
    }
    void <init>(com.mkulesh.micromath.formula.Equation, com.mkulesh.micromath.formula.Equation$1)
    {
        com.mkulesh.micromath.formula.Equation$EquationConstantResult r0;
        com.mkulesh.micromath.formula.Equation $r1;
        com.mkulesh.micromath.formula.Equation$1 $r2;

        r0 := @this: com.mkulesh.micromath.formula.Equation$EquationConstantResult;

        $r1 := @parameter0: com.mkulesh.micromath.formula.Equation;

        $r2 := @parameter1: com.mkulesh.micromath.formula.Equation$1;

        specialinvoke r0.<com.mkulesh.micromath.formula.Equation$EquationConstantResult: void <init>(com.mkulesh.micromath.formula.Equation)>($r1);

        return;
    }
    public com.mkulesh.micromath.math.CalculatedValue getValue(com.mkulesh.micromath.formula.CalculaterTask) throws com.mkulesh.micromath.formula.CalculaterTask$CancelException
    {
        com.mkulesh.micromath.formula.Equation$EquationConstantResult r0;
        com.mkulesh.micromath.formula.CalculaterTask $r1;
        com.mkulesh.micromath.math.CalculatedValue $r2;
        com.mkulesh.micromath.formula.TermField $r3;
        com.mkulesh.micromath.formula.Equation $r4;

        r0 := @this: com.mkulesh.micromath.formula.Equation$EquationConstantResult;

        $r1 := @parameter0: com.mkulesh.micromath.formula.CalculaterTask;

        $r2 = r0.<com.mkulesh.micromath.formula.Equation$EquationConstantResult: com.mkulesh.micromath.math.CalculatedValue value>;

        if $r2 != null goto label1;

        $r2 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.Equation$EquationConstantResult: com.mkulesh.micromath.math.CalculatedValue value> = $r2;

        $r4 = r0.<com.mkulesh.micromath.formula.Equation$EquationConstantResult: com.mkulesh.micromath.formula.Equation this$0>;

        $r3 = staticinvoke <com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.TermField access$000(com.mkulesh.micromath.formula.Equation)>($r4);

        $r2 = r0.<com.mkulesh.micromath.formula.Equation$EquationConstantResult: com.mkulesh.micromath.math.CalculatedValue value>;

        virtualinvoke $r3.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.math.CalculatedValue$ValueType getValue(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.math.CalculatedValue)>($r1, $r2);

     label1:
        $r2 = r0.<com.mkulesh.micromath.formula.Equation$EquationConstantResult: com.mkulesh.micromath.math.CalculatedValue value>;

        return $r2;
    }
