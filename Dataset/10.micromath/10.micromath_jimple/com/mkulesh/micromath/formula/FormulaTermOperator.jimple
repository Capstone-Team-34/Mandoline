com.mkulesh.micromath.formula.FormulaTermOperator extends com.mkulesh.micromath.formula.FormulaTerm
private final com.mkulesh.micromath.math.CalculatedValue fDer
private final com.mkulesh.micromath.math.CalculatedValue fVal
private final com.mkulesh.micromath.math.CalculatedValue gDer
private final com.mkulesh.micromath.math.CalculatedValue gVal
private com.mkulesh.micromath.formula.TermField leftTerm
private com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType operatorType
private com.mkulesh.micromath.formula.TermField rightTerm
private boolean useBrackets
    public void <init>(android.content.Context)
    {
        com.mkulesh.micromath.formula.FormulaTermOperator r0;
        android.content.Context $r1;
        com.mkulesh.micromath.math.CalculatedValue $r2;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermOperator;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTerm: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType operatorType> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField leftTerm> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField rightTerm> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermOperator: boolean useBrackets> = 0;

        $r2 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fVal> = $r2;

        $r2 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gVal> = $r2;

        $r2 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fDer> = $r2;

        $r2 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gDer> = $r2;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.mkulesh.micromath.formula.FormulaTermOperator r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        com.mkulesh.micromath.math.CalculatedValue $r3;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermOperator;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTerm: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType operatorType> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField leftTerm> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField rightTerm> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermOperator: boolean useBrackets> = 0;

        $r3 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fVal> = $r3;

        $r3 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gVal> = $r3;

        $r3 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fDer> = $r3;

        $r3 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gDer> = $r3;

        return;
    }
    public void <init>(com.mkulesh.micromath.formula.TermField, android.widget.LinearLayout, java.lang.String, int) throws java.lang.Exception
    {
        com.mkulesh.micromath.formula.FormulaTermOperator r0;
        com.mkulesh.micromath.formula.TermField $r1;
        android.widget.LinearLayout $r2;
        java.lang.String $r3;
        int $i0, $i1;
        com.mkulesh.micromath.formula.FormulaBase $r4;
        com.mkulesh.micromath.math.CalculatedValue $r5;
        com.mkulesh.micromath.formula.TermField$BracketsType $r6;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermOperator;

        $r1 := @parameter0: com.mkulesh.micromath.formula.TermField;

        $r2 := @parameter1: android.widget.LinearLayout;

        $r3 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $r4 = virtualinvoke $r1.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $i1 = $r1.<com.mkulesh.micromath.formula.TermField: int termDepth>;

        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTerm: void <init>(com.mkulesh.micromath.formula.FormulaBase,android.widget.LinearLayout,int)>($r4, $r2, $i1);

        r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType operatorType> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField leftTerm> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField rightTerm> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermOperator: boolean useBrackets> = 0;

        $r5 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r5.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fVal> = $r5;

        $r5 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r5.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gVal> = $r5;

        $r5 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r5.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fDer> = $r5;

        $r5 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r5.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gDer> = $r5;

        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermOperator: void setParentField(com.mkulesh.micromath.formula.TermField)>($r1);

        $r6 = $r1.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$BracketsType bracketsType>;

        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTermOperator: void onCreate(java.lang.String,int,com.mkulesh.micromath.formula.TermField$BracketsType)>($r3, $i0, $r6);

        return;
    }
    public static com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType getOperatorType(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r4;
        com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType r2;
        int $i0, $i1, $i2;
        com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType[] $r3;
        java.util.Locale $r5;
        boolean $z0;
        android.content.res.Resources $r6;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r3 = staticinvoke <com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType: com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType[] values()>();

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        r2 = $r3[$i1];

        $r4 = virtualinvoke r2.<com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType: java.lang.String toString()>();

        $r5 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r5);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label2;

        $r6 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i2 = virtualinvoke r2.<com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType: int getSymbolId()>();

        $r4 = virtualinvoke $r6.<android.content.res.Resources: java.lang.String getString(int)>($i2);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r4);

        if $z0 == 0 goto label3;

     label2:
        return r2;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        return null;
    }
    public static boolean isOperator(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType getOperatorType(android.content.Context,java.lang.String)>($r0, $r1);

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    private void onCreate(java.lang.String, int, com.mkulesh.micromath.formula.TermField$BracketsType) throws java.lang.Exception
    {
        com.mkulesh.micromath.formula.FormulaTermOperator r0;
        java.lang.String $r1, $r12;
        int $i0, $i1, $i2;
        com.mkulesh.micromath.formula.TermField$BracketsType $r2, $r10;
        boolean $z0;
        android.widget.LinearLayout $r3;
        java.lang.Exception $r4;
        java.lang.StringBuilder $r5;
        android.content.Context $r6;
        com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType $r7;
        int[] $r8;
        com.mkulesh.micromath.formula.TermField $r9, $r13;
        android.content.res.Resources $r11;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermOperator;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: com.mkulesh.micromath.formula.TermField$BracketsType;

        $i1 = 2130903106;

        $z0 = 0;

        if $i0 < 0 goto label01;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: android.widget.LinearLayout layout>;

        $i2 = virtualinvoke $r3.<android.widget.LinearLayout: int getChildCount()>();

        if $i0 <= $i2 goto label02;

     label01:
        $r4 = new java.lang.Exception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot create FormulaTermOperator for invalid insertion index ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>($r1);

        throw $r4;

     label02:
        $r6 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermOperator: android.content.Context getContext()>();

        $r7 = staticinvoke <com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType getOperatorType(android.content.Context,java.lang.String)>($r6, $r1);

        r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType operatorType> = $r7;

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType operatorType>;

        if $r7 != null goto label03;

        $r4 = new java.lang.Exception;

        specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>("cannot create FormulaTermOperator for unknown operator");

        throw $r4;

     label03:
        $r8 = <com.mkulesh.micromath.formula.FormulaTermOperator$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaTermOperator$OperatorType>;

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType operatorType>;

        $i2 = virtualinvoke $r7.<com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType: int ordinal()>();

        $i2 = $r8[$i2];

        lookupswitch($i2)
        {
            case 1: goto label06;
            case 2: goto label06;
            case 3: goto label10;
            case 4: goto label14;
            case 5: goto label10;
            case 6: goto label18;
            default: goto label04;
        };

     label04:
        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermOperator: void initializeElements(int)>($i0);

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField leftTerm>;

        if $r9 == null goto label05;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField rightTerm>;

        if $r9 != null goto label19;

     label05:
        $r4 = new java.lang.Exception;

        specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>("cannot initialize operator terms");

        throw $r4;

     label06:
        $r10 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType NEVER>;

        if $r2 == $r10 goto label07;

        $z0 = 1;

     label07:
        r0.<com.mkulesh.micromath.formula.FormulaTermOperator: boolean useBrackets> = $z0;

        $z0 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: boolean useBrackets>;

        if $z0 == 0 goto label09;

        $i1 = 2130903106;

     label08:
        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermOperator: void inflateElements(int,boolean)>($i1, 1);

        goto label04;

     label09:
        $i1 = 2130903105;

        goto label08;

     label10:
        $r10 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType ALWAYS>;

        if $r2 != $r10 goto label11;

        $z0 = 1;

     label11:
        r0.<com.mkulesh.micromath.formula.FormulaTermOperator: boolean useBrackets> = $z0;

        $z0 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: boolean useBrackets>;

        if $z0 == 0 goto label13;

     label12:
        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermOperator: void inflateElements(int,boolean)>($i1, 1);

        goto label04;

     label13:
        $i1 = 2130903105;

        goto label12;

     label14:
        $r10 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType ALWAYS>;

        if $r2 != $r10 goto label15;

        $z0 = 1;

     label15:
        r0.<com.mkulesh.micromath.formula.FormulaTermOperator: boolean useBrackets> = $z0;

        $z0 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: boolean useBrackets>;

        if $z0 == 0 goto label17;

        $i1 = 2130903109;

     label16:
        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermOperator: void inflateElements(int,boolean)>($i1, 1);

        goto label04;

     label17:
        $i1 = 2130903108;

        goto label16;

     label18:
        r0.<com.mkulesh.micromath.formula.FormulaTermOperator: boolean useBrackets> = 0;

        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermOperator: void inflateElements(int,boolean)>(2130903107, 1);

        goto label04;

     label19:
        $r6 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermOperator: android.content.Context getContext()>();

        $r11 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType operatorType>;

        $i0 = virtualinvoke $r7.<com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType: int getSymbolId()>();

        $r12 = virtualinvoke $r11.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField leftTerm>;

        $r13 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField rightTerm>;

        staticinvoke <com.mkulesh.micromath.formula.TermField: void divideString(java.lang.String,java.lang.String,com.mkulesh.micromath.formula.TermField,com.mkulesh.micromath.formula.TermField)>($r1, $r12, $r9, $r13);

        $r8 = <com.mkulesh.micromath.formula.FormulaTermOperator$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaTermOperator$OperatorType>;

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType operatorType>;

        $i0 = virtualinvoke $r7.<com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType: int ordinal()>();

        $i0 = $r8[$i0];

        lookupswitch($i0)
        {
            case 1: goto label21;
            case 2: goto label23;
            case 3: goto label22;
            case 4: goto label21;
            case 5: goto label22;
            case 6: goto label24;
            default: goto label20;
        };

     label20:
        return;

     label21:
        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField leftTerm>;

        $r2 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType NEVER>;

        $r9.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$BracketsType bracketsType> = $r2;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField rightTerm>;

        $r2 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType NEVER>;

        $r9.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$BracketsType bracketsType> = $r2;

        return;

     label22:
        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField leftTerm>;

        $r2 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType IFNECESSARY>;

        $r9.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$BracketsType bracketsType> = $r2;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField rightTerm>;

        $r2 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType IFNECESSARY>;

        $r9.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$BracketsType bracketsType> = $r2;

        return;

     label23:
        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField leftTerm>;

        $r2 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType NEVER>;

        $r9.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$BracketsType bracketsType> = $r2;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField rightTerm>;

        $r2 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType IFNECESSARY>;

        $r9.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$BracketsType bracketsType> = $r2;

        return;

     label24:
        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField leftTerm>;

        $r2 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType ALWAYS>;

        $r9.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$BracketsType bracketsType> = $r2;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField rightTerm>;

        $r2 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType NEVER>;

        $r9.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$BracketsType bracketsType> = $r2;

        return;
    }
    public com.mkulesh.micromath.math.CalculatedValue$ValueType getDerivativeValue(java.lang.String, com.mkulesh.micromath.formula.CalculaterTask, com.mkulesh.micromath.math.CalculatedValue) throws com.mkulesh.micromath.formula.CalculaterTask$CancelException
    {
        com.mkulesh.micromath.formula.FormulaTermOperator r0;
        java.lang.String $r1;
        com.mkulesh.micromath.formula.CalculaterTask $r2;
        com.mkulesh.micromath.math.CalculatedValue $r3, r4, r5, $r11, $r12;
        com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType $r6;
        com.mkulesh.micromath.formula.TermField $r7;
        int[] $r8;
        int $i0;
        com.mkulesh.micromath.math.CalculatedValue$ErrorType $r9;
        com.mkulesh.micromath.math.CalculatedValue$ValueType $r10;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermOperator;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.mkulesh.micromath.formula.CalculaterTask;

        $r3 := @parameter2: com.mkulesh.micromath.math.CalculatedValue;

        $r6 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType operatorType>;

        if $r6 == null goto label1;

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField leftTerm>;

        if $r7 == null goto label1;

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField rightTerm>;

        if $r7 == null goto label1;

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField leftTerm>;

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fDer>;

        virtualinvoke $r7.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.math.CalculatedValue$ValueType getDerivativeValue(java.lang.String,com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.math.CalculatedValue)>($r1, $r2, r4);

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField rightTerm>;

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gDer>;

        virtualinvoke $r7.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.math.CalculatedValue$ValueType getDerivativeValue(java.lang.String,com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.math.CalculatedValue)>($r1, $r2, r4);

        $r8 = <com.mkulesh.micromath.formula.FormulaTermOperator$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaTermOperator$OperatorType>;

        $r6 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType operatorType>;

        $i0 = virtualinvoke $r6.<com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType: int ordinal()>();

        $i0 = $r8[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label5;
            case 6: goto label6;
            default: goto label1;
        };

     label1:
        $r9 = <com.mkulesh.micromath.math.CalculatedValue$ErrorType: com.mkulesh.micromath.math.CalculatedValue$ErrorType TERM_NOT_READY>;

        $r10 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType invalidate(com.mkulesh.micromath.math.CalculatedValue$ErrorType)>($r9);

        return $r10;

     label2:
        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fDer>;

        r5 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gDer>;

        $r10 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType add(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r4, r5);

        return $r10;

     label3:
        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fDer>;

        r5 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gDer>;

        $r10 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType subtract(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r4, r5);

        return $r10;

     label4:
        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField leftTerm>;

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fVal>;

        virtualinvoke $r7.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.math.CalculatedValue$ValueType getValue(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.math.CalculatedValue)>($r2, r4);

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField rightTerm>;

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gVal>;

        virtualinvoke $r7.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.math.CalculatedValue$ValueType getValue(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.math.CalculatedValue)>($r2, r4);

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fDer>;

        r5 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fDer>;

        $r11 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gVal>;

        virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r5, $r11);

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fVal>;

        r5 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fVal>;

        $r11 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gDer>;

        virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r5, $r11);

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fDer>;

        r5 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fVal>;

        $r10 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType add(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r4, r5);

        return $r10;

     label5:
        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField leftTerm>;

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fVal>;

        virtualinvoke $r7.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.math.CalculatedValue$ValueType getValue(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.math.CalculatedValue)>($r2, r4);

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField rightTerm>;

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gVal>;

        virtualinvoke $r7.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.math.CalculatedValue$ValueType getValue(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.math.CalculatedValue)>($r2, r4);

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fDer>;

        r5 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fDer>;

        $r11 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gVal>;

        virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r5, $r11);

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fVal>;

        r5 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fVal>;

        $r11 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gDer>;

        virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r5, $r11);

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gDer>;

        r5 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fDer>;

        $r11 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fVal>;

        virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType subtract(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r5, $r11);

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fDer>;

        r5 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gVal>;

        $r11 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gVal>;

        virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r5, $r11);

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gDer>;

        r5 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fDer>;

        $r10 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType divide(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r4, r5);

        return $r10;

     label6:
        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField leftTerm>;

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fVal>;

        virtualinvoke $r7.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.math.CalculatedValue$ValueType getValue(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.math.CalculatedValue)>($r2, r4);

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField rightTerm>;

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gVal>;

        virtualinvoke $r7.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.math.CalculatedValue$ValueType getValue(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.math.CalculatedValue)>($r2, r4);

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fDer>;

        $z0 = virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: boolean isZero()>();

        if $z0 == 0 goto label7;

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gDer>;

        $z0 = virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: boolean isZero()>();

        if $z0 == 0 goto label7;

        $r10 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>(0.0);

        return $r10;

     label7:
        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fDer>;

        $z0 = virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: boolean isZero()>();

        if $z0 != 0 goto label8;

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gDer>;

        $z0 = virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: boolean isZero()>();

        if $z0 == 0 goto label8;

        r4 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r5 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gVal>;

        $r11 = <com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue ONE>;

        virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType subtract(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r5, $r11);

        r5 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fVal>;

        virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType pow(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r5, r4);

        r5 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gVal>;

        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r5, r4);

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fDer>;

        $r10 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>($r3, r4);

        return $r10;

     label8:
        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fDer>;

        $z0 = virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: boolean isZero()>();

        if $z0 == 0 goto label9;

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gDer>;

        $z0 = virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: boolean isZero()>();

        if $z0 != 0 goto label9;

        r4 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r5 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fVal>;

        virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType log(com.mkulesh.micromath.math.CalculatedValue)>(r5);

        r5 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fVal>;

        $r11 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gVal>;

        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType pow(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r5, $r11);

        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>($r3, r4);

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gDer>;

        $r10 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>($r3, r4);

        return $r10;

     label9:
        r4 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r5 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke r5.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        $r11 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fDer>;

        $r12 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gVal>;

        virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>($r11, $r12);

        $r11 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fVal>;

        virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType divide(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r4, $r11);

        $r11 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fVal>;

        virtualinvoke r5.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType log(com.mkulesh.micromath.math.CalculatedValue)>($r11);

        $r11 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gDer>;

        virtualinvoke r5.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>($r11, r5);

        virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType add(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r4, r5);

        r5 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fVal>;

        $r11 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gVal>;

        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType pow(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r5, $r11);

        $r10 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>($r3, r4);

        return $r10;
    }
    public com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType getOperatorType()
    {
        com.mkulesh.micromath.formula.FormulaTermOperator r0;
        com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType r1;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermOperator;

        r1 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType operatorType>;

        return r1;
    }
    public java.lang.String getTermCode()
    {
        com.mkulesh.micromath.formula.FormulaTermOperator r0;
        java.util.Locale $r1;
        com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType $r2;
        java.lang.String $r3;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermOperator;

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType getOperatorType()>();

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType: java.lang.String toString()>();

        $r1 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1);

        return $r3;
    }
    public com.mkulesh.micromath.formula.FormulaTerm$TermType getTermType()
    {
        com.mkulesh.micromath.formula.FormulaTermOperator r0;
        com.mkulesh.micromath.formula.FormulaTerm$TermType r1;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermOperator;

        r1 = <com.mkulesh.micromath.formula.FormulaTerm$TermType: com.mkulesh.micromath.formula.FormulaTerm$TermType OPERATOR>;

        return r1;
    }
    public com.mkulesh.micromath.math.CalculatedValue$ValueType getValue(com.mkulesh.micromath.formula.CalculaterTask, com.mkulesh.micromath.math.CalculatedValue) throws com.mkulesh.micromath.formula.CalculaterTask$CancelException
    {
        com.mkulesh.micromath.formula.FormulaTermOperator r0;
        com.mkulesh.micromath.formula.CalculaterTask $r1;
        com.mkulesh.micromath.math.CalculatedValue $r2, $r5, $r9;
        com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType $r3;
        com.mkulesh.micromath.formula.TermField $r4;
        int[] $r6;
        int $i0;
        com.mkulesh.micromath.math.CalculatedValue$ErrorType $r7;
        com.mkulesh.micromath.math.CalculatedValue$ValueType $r8;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermOperator;

        $r1 := @parameter0: com.mkulesh.micromath.formula.CalculaterTask;

        $r2 := @parameter1: com.mkulesh.micromath.math.CalculatedValue;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType operatorType>;

        if $r3 == null goto label1;

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField leftTerm>;

        if $r4 == null goto label1;

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField rightTerm>;

        if $r4 == null goto label1;

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField leftTerm>;

        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fVal>;

        virtualinvoke $r4.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.math.CalculatedValue$ValueType getValue(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.math.CalculatedValue)>($r1, $r5);

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField rightTerm>;

        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gVal>;

        virtualinvoke $r4.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.math.CalculatedValue$ValueType getValue(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.math.CalculatedValue)>($r1, $r5);

        $r6 = <com.mkulesh.micromath.formula.FormulaTermOperator$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaTermOperator$OperatorType>;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType operatorType>;

        $i0 = virtualinvoke $r3.<com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType: int ordinal()>();

        $i0 = $r6[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label5;
            case 6: goto label6;
            default: goto label1;
        };

     label1:
        $r7 = <com.mkulesh.micromath.math.CalculatedValue$ErrorType: com.mkulesh.micromath.math.CalculatedValue$ErrorType TERM_NOT_READY>;

        $r8 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType invalidate(com.mkulesh.micromath.math.CalculatedValue$ErrorType)>($r7);

        return $r8;

     label2:
        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fVal>;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gVal>;

        $r8 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType add(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>($r5, $r9);

        return $r8;

     label3:
        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fVal>;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gVal>;

        $r8 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType subtract(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>($r5, $r9);

        return $r8;

     label4:
        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fVal>;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gVal>;

        $r8 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>($r5, $r9);

        return $r8;

     label5:
        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fVal>;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gVal>;

        $r8 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType divide(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>($r5, $r9);

        return $r8;

     label6:
        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue fVal>;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.math.CalculatedValue gVal>;

        $r8 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType pow(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>($r5, $r9);

        return $r8;
    }
    protected com.mkulesh.micromath.widgets.CustomTextView initializeSymbol(com.mkulesh.micromath.widgets.CustomTextView)
    {
        com.mkulesh.micromath.formula.FormulaTermOperator r0;
        com.mkulesh.micromath.widgets.CustomTextView $r1;
        java.lang.CharSequence $r2;
        java.lang.String $r3, $r6;
        android.content.Context $r4;
        android.content.res.Resources $r5;
        boolean $z0;
        int[] $r7;
        com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType $r8;
        int $i0;
        com.mkulesh.micromath.widgets.CustomTextView$SymbolType $r9;
        com.mkulesh.micromath.formula.FormulaBase $r10;
        com.mkulesh.micromath.formula.FormulaList $r11;
        android.support.v7.app.AppCompatActivity $r12;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermOperator;

        $r1 := @parameter0: com.mkulesh.micromath.widgets.CustomTextView;

        $r2 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: java.lang.CharSequence getText()>();

        if $r2 == null goto label10;

        $r2 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: java.lang.CharSequence getText()>();

        $r3 = interfaceinvoke $r2.<java.lang.CharSequence: java.lang.String toString()>();

        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermOperator: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131099957);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label08;

        $r7 = <com.mkulesh.micromath.formula.FormulaTermOperator$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaTermOperator$OperatorType>;

        $r8 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType operatorType>;

        $i0 = virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType: int ordinal()>();

        $i0 = $r7[$i0];

        lookupswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            default: goto label01;
        };

     label01:
        return $r1;

     label02:
        $r9 = <com.mkulesh.micromath.widgets.CustomTextView$SymbolType: com.mkulesh.micromath.widgets.CustomTextView$SymbolType PLUS>;

        $r10 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r11 = virtualinvoke $r10.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r12 = virtualinvoke $r11.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void prepare(com.mkulesh.micromath.widgets.CustomTextView$SymbolType,android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.FormulaChangeIf)>($r9, $r12, r0);

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void setText(java.lang.CharSequence)>("..");

        return $r1;

     label03:
        $r9 = <com.mkulesh.micromath.widgets.CustomTextView$SymbolType: com.mkulesh.micromath.widgets.CustomTextView$SymbolType MINUS>;

        $r10 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r11 = virtualinvoke $r10.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r12 = virtualinvoke $r11.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void prepare(com.mkulesh.micromath.widgets.CustomTextView$SymbolType,android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.FormulaChangeIf)>($r9, $r12, r0);

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void setText(java.lang.CharSequence)>("..");

        return $r1;

     label04:
        $r9 = <com.mkulesh.micromath.widgets.CustomTextView$SymbolType: com.mkulesh.micromath.widgets.CustomTextView$SymbolType MULT>;

        $r10 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r11 = virtualinvoke $r10.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r12 = virtualinvoke $r11.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void prepare(com.mkulesh.micromath.widgets.CustomTextView$SymbolType,android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.FormulaChangeIf)>($r9, $r12, r0);

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void setText(java.lang.CharSequence)>(".");

        return $r1;

     label05:
        $r9 = <com.mkulesh.micromath.widgets.CustomTextView$SymbolType: com.mkulesh.micromath.widgets.CustomTextView$SymbolType HOR_LINE>;

        $r10 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r11 = virtualinvoke $r10.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r12 = virtualinvoke $r11.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void prepare(com.mkulesh.micromath.widgets.CustomTextView$SymbolType,android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.FormulaChangeIf)>($r9, $r12, r0);

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void setText(java.lang.CharSequence)>("_");

        return $r1;

     label06:
        $r9 = <com.mkulesh.micromath.widgets.CustomTextView$SymbolType: com.mkulesh.micromath.widgets.CustomTextView$SymbolType SLASH>;

        $r10 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r11 = virtualinvoke $r10.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r12 = virtualinvoke $r11.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void prepare(com.mkulesh.micromath.widgets.CustomTextView$SymbolType,android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.FormulaChangeIf)>($r9, $r12, r0);

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void setText(java.lang.CharSequence)>("_");

        return $r1;

     label07:
        $r9 = <com.mkulesh.micromath.widgets.CustomTextView$SymbolType: com.mkulesh.micromath.widgets.CustomTextView$SymbolType TEXT>;

        $r10 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r11 = virtualinvoke $r10.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r12 = virtualinvoke $r11.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void prepare(com.mkulesh.micromath.widgets.CustomTextView$SymbolType,android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.FormulaChangeIf)>($r9, $r12, r0);

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void setText(java.lang.CharSequence)>("_");

        return $r1;

     label08:
        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermOperator: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131099944);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label09;

        $r9 = <com.mkulesh.micromath.widgets.CustomTextView$SymbolType: com.mkulesh.micromath.widgets.CustomTextView$SymbolType LEFT_BRACKET>;

        $r10 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r11 = virtualinvoke $r10.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r12 = virtualinvoke $r11.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void prepare(com.mkulesh.micromath.widgets.CustomTextView$SymbolType,android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.FormulaChangeIf)>($r9, $r12, r0);

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void setText(java.lang.CharSequence)>(".");

        return $r1;

     label09:
        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermOperator: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131099964);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label10;

        $r9 = <com.mkulesh.micromath.widgets.CustomTextView$SymbolType: com.mkulesh.micromath.widgets.CustomTextView$SymbolType RIGHT_BRACKET>;

        $r10 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r11 = virtualinvoke $r10.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r12 = virtualinvoke $r11.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void prepare(com.mkulesh.micromath.widgets.CustomTextView$SymbolType,android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.FormulaChangeIf)>($r9, $r12, r0);

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void setText(java.lang.CharSequence)>(".");

     label10:
        return $r1;
    }
    protected com.mkulesh.micromath.widgets.CustomEditText initializeTerm(com.mkulesh.micromath.widgets.CustomEditText, android.widget.LinearLayout)
    {
        com.mkulesh.micromath.formula.FormulaTermOperator r0;
        com.mkulesh.micromath.widgets.CustomEditText $r1;
        android.widget.LinearLayout $r2;
        android.text.Editable $r3;
        java.lang.String $r4, $r7;
        android.content.Context $r5;
        android.content.res.Resources $r6;
        boolean $z0;
        com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType $r8, $r9;
        com.mkulesh.micromath.formula.FormulaBase $r10;
        com.mkulesh.micromath.formula.TermField $r11;
        byte b0;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermOperator;

        $r1 := @parameter0: com.mkulesh.micromath.widgets.CustomEditText;

        $r2 := @parameter1: android.widget.LinearLayout;

        $r3 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomEditText: android.text.Editable getText()>();

        if $r3 == null goto label6;

        $r3 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomEditText: android.text.Editable getText()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r5 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermOperator: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r6.<android.content.res.Resources: java.lang.String getString(int)>(2131099945);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label2;

        $r8 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType operatorType>;

        $r9 = <com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType: com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType DIVIDE>;

        if $r8 != $r9 goto label5;

        $z0 = 1;

     label1:
        $r10 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r11 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField addTerm(com.mkulesh.micromath.formula.FormulaBase,android.widget.LinearLayout,com.mkulesh.micromath.widgets.CustomEditText,com.mkulesh.micromath.widgets.FormulaChangeIf,boolean)>($r10, $r2, $r1, r0, $z0);

        r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField leftTerm> = $r11;

     label2:
        $r3 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomEditText: android.text.Editable getText()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r5 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermOperator: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r6.<android.content.res.Resources: java.lang.String getString(int)>(2131099965);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label6;

        b0 = 0;

        $r8 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType operatorType>;

        $r9 = <com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType: com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType DIVIDE>;

        if $r8 != $r9 goto label3;

        b0 = 1;

     label3:
        $r8 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType operatorType>;

        $r9 = <com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType: com.mkulesh.micromath.formula.FormulaTermOperator$OperatorType POWER>;

        if $r8 != $r9 goto label4;

        b0 = 3;

     label4:
        $r10 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r11 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField addTerm(com.mkulesh.micromath.formula.FormulaBase,android.widget.LinearLayout,int,com.mkulesh.micromath.widgets.CustomEditText,com.mkulesh.micromath.widgets.FormulaChangeIf,int)>($r10, $r2, -1, $r1, r0, b0);

        r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField rightTerm> = $r11;

        return $r1;

     label5:
        $z0 = 0;

        goto label1;

     label6:
        return $r1;
    }
    public com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType isDifferentiable(java.lang.String)
    {
        com.mkulesh.micromath.formula.FormulaTermOperator r0;
        java.lang.String $r1;
        com.mkulesh.micromath.formula.TermField $r2;
        com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType $r3;
        int $i0, $i1;
        com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType[] $r4;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermOperator;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField leftTerm>;

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType isDifferentiable(java.lang.String)>($r1);

        $i0 = virtualinvoke $r3.<com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: int ordinal()>();

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField rightTerm>;

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType isDifferentiable(java.lang.String)>($r1);

        $i1 = virtualinvoke $r3.<com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: int ordinal()>();

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $r4 = staticinvoke <com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType[] values()>();

        $r3 = $r4[$i0];

        return $r3;
    }
    public boolean isUseBrackets()
    {
        com.mkulesh.micromath.formula.FormulaTermOperator r0;
        boolean z0;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermOperator;

        z0 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: boolean useBrackets>;

        return z0;
    }
    public void onDelete(com.mkulesh.micromath.widgets.CustomEditText)
    {
        com.mkulesh.micromath.formula.FormulaTermOperator r0;
        com.mkulesh.micromath.widgets.CustomEditText $r1;
        com.mkulesh.micromath.formula.TermField $r2, r3;
        int $i0;
        com.mkulesh.micromath.formula.FormulaBase $r4;
        com.mkulesh.micromath.formula.FormulaList $r5;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermOperator;

        $r1 := @parameter0: com.mkulesh.micromath.widgets.CustomEditText;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField parentField>;

        if $r2 == null goto label2;

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField findTerm(com.mkulesh.micromath.widgets.CustomEditText)>($r1);

        r3 = null;

        if $r2 == null goto label1;

        r3 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField leftTerm>;

        if $r2 != r3 goto label3;

        r3 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField rightTerm>;

     label1:
        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField parentField>;

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermOperator: int removeElements()>();

        virtualinvoke $r2.<com.mkulesh.micromath.formula.TermField: void onTermDelete(int,com.mkulesh.micromath.formula.TermField)>($i0, r3);

     label2:
        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r5 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        virtualinvoke $r5.<com.mkulesh.micromath.formula.FormulaList: void onManualInput()>();

        return;

     label3:
        r3 = r0.<com.mkulesh.micromath.formula.FormulaTermOperator: com.mkulesh.micromath.formula.TermField leftTerm>;

        goto label1;
    }
