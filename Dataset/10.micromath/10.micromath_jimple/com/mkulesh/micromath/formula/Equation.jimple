com.mkulesh.micromath.formula.Equation extends com.mkulesh.micromath.formula.CalculationResult implements com.mkulesh.micromath.formula.ArgumentHolderIf com.mkulesh.micromath.formula.CalculatableIf
private com.mkulesh.micromath.math.CalculatedValue[] argumentValues
private com.mkulesh.micromath.math.EquationArrayResult arrayResult
private com.mkulesh.micromath.formula.Equation$EquationConstantResult constantResult
private com.mkulesh.micromath.formula.TermField leftTerm
private com.mkulesh.micromath.formula.TermField rightTerm
    public void <init>(android.content.Context)
    {
        com.mkulesh.micromath.formula.Equation r0;
        android.content.Context $r1;

        r0 := @this: com.mkulesh.micromath.formula.Equation;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.mkulesh.micromath.formula.CalculationResult: void <init>(com.mkulesh.micromath.formula.FormulaList,android.widget.LinearLayout,int)>(null, null, 0);

        r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.TermField leftTerm> = null;

        r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.TermField rightTerm> = null;

        r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.math.CalculatedValue[] argumentValues> = null;

        r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.Equation$EquationConstantResult constantResult> = null;

        r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.math.EquationArrayResult arrayResult> = null;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.mkulesh.micromath.formula.Equation r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        r0 := @this: com.mkulesh.micromath.formula.Equation;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.mkulesh.micromath.formula.CalculationResult: void <init>(com.mkulesh.micromath.formula.FormulaList,android.widget.LinearLayout,int)>(null, null, 0);

        r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.TermField leftTerm> = null;

        r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.TermField rightTerm> = null;

        r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.math.CalculatedValue[] argumentValues> = null;

        r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.Equation$EquationConstantResult constantResult> = null;

        r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.math.EquationArrayResult arrayResult> = null;

        return;
    }
    public void <init>(com.mkulesh.micromath.formula.FormulaList, int)
    {
        com.mkulesh.micromath.formula.Equation r0;
        com.mkulesh.micromath.formula.FormulaList $r1;
        int $i0;

        r0 := @this: com.mkulesh.micromath.formula.Equation;

        $r1 := @parameter0: com.mkulesh.micromath.formula.FormulaList;

        $i0 := @parameter1: int;

        specialinvoke r0.<com.mkulesh.micromath.formula.CalculationResult: void <init>(com.mkulesh.micromath.formula.FormulaList,android.widget.LinearLayout,int)>($r1, null, 0);

        r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.TermField leftTerm> = null;

        r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.TermField rightTerm> = null;

        r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.math.CalculatedValue[] argumentValues> = null;

        r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.Equation$EquationConstantResult constantResult> = null;

        r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.math.EquationArrayResult arrayResult> = null;

        virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: void setId(int)>($i0);

        specialinvoke r0.<com.mkulesh.micromath.formula.Equation: void onCreate()>();

        return;
    }
    static com.mkulesh.micromath.formula.TermField access$000(com.mkulesh.micromath.formula.Equation)
    {
        com.mkulesh.micromath.formula.Equation $r0;
        com.mkulesh.micromath.formula.TermField r1;

        $r0 := @parameter0: com.mkulesh.micromath.formula.Equation;

        r1 = $r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.TermField rightTerm>;

        return r1;
    }
    private java.lang.String checkArrayResult()
    {
        com.mkulesh.micromath.formula.Equation r0, r10;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        java.util.ArrayList $r3, $r7;
        int $i0;
        java.lang.String $r4, $r6;
        java.lang.Object[] $r5;
        java.util.Iterator $r8;
        boolean $z0;
        java.lang.Object $r9;
        com.mkulesh.micromath.formula.FormulaList $r11;
        com.mkulesh.micromath.formula.FormulaBase $r12;

        r0 := @this: com.mkulesh.micromath.formula.Equation;

        $r1 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: java.util.ArrayList getArguments()>();

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i0 <= 3 goto label1;

        $r4 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int)>(2131099789);

        $r5 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(200);

        $r5[0] = $r6;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r4, $r5);

        return $r4;

     label1:
        $r7 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: java.util.ArrayList getAllIntervals()>();

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.mkulesh.micromath.formula.Equation) $r9;

        $r4 = virtualinvoke r10.<com.mkulesh.micromath.formula.Equation: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean contains(java.lang.Object)>($r4);

        if $z0 != 0 goto label2;

        $r4 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int)>(2131099791);

        $r5 = newarray (java.lang.Object)[1];

        $r6 = virtualinvoke r10.<com.mkulesh.micromath.formula.Equation: java.lang.String getName()>();

        $r5[0] = $r6;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r4, $r5);

        return $r4;

     label3:
        $r8 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r9;

        $r11 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: int getId()>();

        $r12 = virtualinvoke $r11.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase getFormula(java.lang.String,int,int,boolean)>($r4, 0, $i0, 1);

        if $r12 == null goto label5;

        $z0 = $r12 instanceof com.mkulesh.micromath.formula.Equation;

        if $z0 == 0 goto label5;

        r10 = (com.mkulesh.micromath.formula.Equation) $r12;

        $z0 = virtualinvoke r10.<com.mkulesh.micromath.formula.Equation: boolean isInterval()>();

        if $z0 != 0 goto label4;

     label5:
        $r6 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int)>(2131099790);

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = $r4;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r6, $r5);

        return $r4;

     label6:
        return null;
    }
    private boolean isConstantResult()
    {
        com.mkulesh.micromath.formula.Equation r0;
        java.util.ArrayList $r1, $r2;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.formula.Equation;

        $r1 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: java.util.ArrayList getAllIntervals()>();

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: java.util.ArrayList getArguments()>();

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    private void onCreate()
    {
        com.mkulesh.micromath.formula.Equation r0;
        android.widget.LinearLayout $r1;
        android.view.View $r2;
        com.mkulesh.micromath.widgets.CustomEditText r3;
        com.mkulesh.micromath.formula.TermField $r4;
        com.mkulesh.micromath.widgets.CustomTextView r5;
        com.mkulesh.micromath.widgets.CustomTextView$SymbolType $r6;
        com.mkulesh.micromath.formula.FormulaList $r7;
        android.support.v7.app.AppCompatActivity $r8;
        com.mkulesh.micromath.formula.TermField$BracketsType $r9;

        r0 := @this: com.mkulesh.micromath.formula.Equation;

        virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: void inflateRootLayout(int,int,int)>(2130903089, -2, -2);

        $r1 = r0.<com.mkulesh.micromath.formula.Equation: android.widget.LinearLayout layout>;

        $r2 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.View findViewById(int)>(2131493090);

        r3 = (com.mkulesh.micromath.widgets.CustomEditText) $r2;

        $r1 = r0.<com.mkulesh.micromath.formula.Equation: android.widget.LinearLayout layout>;

        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.TermField addTerm(com.mkulesh.micromath.formula.FormulaBase,android.widget.LinearLayout,com.mkulesh.micromath.widgets.CustomEditText,com.mkulesh.micromath.widgets.FormulaChangeIf,boolean)>(r0, $r1, r3, r0, 0);

        r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.TermField leftTerm> = $r4;

        $r1 = r0.<com.mkulesh.micromath.formula.Equation: android.widget.LinearLayout layout>;

        $r2 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.View findViewById(int)>(2131493091);

        r5 = (com.mkulesh.micromath.widgets.CustomTextView) $r2;

        $r6 = <com.mkulesh.micromath.widgets.CustomTextView$SymbolType: com.mkulesh.micromath.widgets.CustomTextView$SymbolType TEXT>;

        $r7 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r8 = virtualinvoke $r7.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke r5.<com.mkulesh.micromath.widgets.CustomTextView: void prepare(com.mkulesh.micromath.widgets.CustomTextView$SymbolType,android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.FormulaChangeIf)>($r6, $r8, r0);

        $r1 = r0.<com.mkulesh.micromath.formula.Equation: android.widget.LinearLayout layout>;

        $r2 = virtualinvoke $r1.<android.widget.LinearLayout: android.view.View findViewById(int)>(2131493092);

        r3 = (com.mkulesh.micromath.widgets.CustomEditText) $r2;

        $r1 = r0.<com.mkulesh.micromath.formula.Equation: android.widget.LinearLayout layout>;

        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.TermField addTerm(com.mkulesh.micromath.formula.FormulaBase,android.widget.LinearLayout,com.mkulesh.micromath.widgets.CustomEditText,com.mkulesh.micromath.widgets.FormulaChangeIf,boolean)>(r0, $r1, r3, r0, 0);

        r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.TermField rightTerm> = $r4;

        $r4 = r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.TermField rightTerm>;

        $r9 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType NEVER>;

        $r4.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$BracketsType bracketsType> = $r9;

        return;
    }
    public void calculate(com.mkulesh.micromath.formula.CalculaterTask) throws com.mkulesh.micromath.formula.CalculaterTask$CancelException
    {
        com.mkulesh.micromath.formula.Equation r0;
        com.mkulesh.micromath.formula.CalculaterTask $r1;
        java.util.ArrayList $r2;
        com.mkulesh.micromath.math.EquationArrayResult $r3;

        r0 := @this: com.mkulesh.micromath.formula.Equation;

        $r1 := @parameter0: com.mkulesh.micromath.formula.CalculaterTask;

        $r3 = r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.math.EquationArrayResult arrayResult>;

        if $r3 != null goto label1;

        return;

     label1:
        $r3 = r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.math.EquationArrayResult arrayResult>;

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: java.util.ArrayList getArguments()>();

        virtualinvoke $r3.<com.mkulesh.micromath.math.EquationArrayResult: void calculate(com.mkulesh.micromath.formula.CalculaterTask,java.util.ArrayList)>($r1, $r2);

        return;
    }
    public boolean enableDetails()
    {
        com.mkulesh.micromath.formula.Equation r0;
        com.mkulesh.micromath.math.EquationArrayResult $r1;
        int $i0;
        com.mkulesh.micromath.math.CalculatedValue[] $r2;

        r0 := @this: com.mkulesh.micromath.formula.Equation;

        $r1 = r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.math.EquationArrayResult arrayResult>;

        if $r1 == null goto label1;

        $r1 = r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.math.EquationArrayResult arrayResult>;

        $i0 = virtualinvoke $r1.<com.mkulesh.micromath.math.EquationArrayResult: int getDimNumber()>();

        if $i0 != 1 goto label1;

        $r1 = r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.math.EquationArrayResult arrayResult>;

        $r2 = virtualinvoke $r1.<com.mkulesh.micromath.math.EquationArrayResult: com.mkulesh.micromath.math.CalculatedValue[] getRawValues()>();

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean enableObjectProperties()
    {
        com.mkulesh.micromath.formula.Equation r0;

        r0 := @this: com.mkulesh.micromath.formula.Equation;

        return 0;
    }
    public double[] fillBoundedInterval(com.mkulesh.micromath.formula.CalculaterTask, double[], double[]) throws com.mkulesh.micromath.formula.CalculaterTask$CancelException
    {
        com.mkulesh.micromath.formula.Equation r0;
        com.mkulesh.micromath.formula.CalculaterTask $r1;
        double[] $r2, $r3;
        boolean $z0;
        int $i0, $i1;
        java.util.ArrayList $r5, $r8;
        java.lang.Object $r6;
        java.lang.Double $r7;
        double $d0, $d1;
        byte $b2;

        r0 := @this: com.mkulesh.micromath.formula.Equation;

        $r1 := @parameter0: com.mkulesh.micromath.formula.CalculaterTask;

        $r2 := @parameter1: double[];

        $r3 := @parameter2: double[];

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: boolean isInterval()>();

        if $z0 == 0 goto label01;

        if $r3 == null goto label01;

        $i0 = lengthof $r3;

        if $i0 == 2 goto label02;

     label01:
        return null;

     label02:
        $r5 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: java.util.ArrayList getInterval(com.mkulesh.micromath.formula.CalculaterTask)>($r1);

        if $r5 == null goto label03;

        $z0 = virtualinvoke $r5.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label04;

     label03:
        return null;

     label04:
        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        $i0 = 0;

     label05:
        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label06;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r7 = (java.lang.Double) $r6;

        $d0 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        $d1 = $r3[1];

        $b2 = $d1 cmpl #Infinity;

        if $b2 == 0 goto label10;

        $d1 = $r3[1];

        $b2 = $d0 cmpl $d1;

        if $b2 <= 0 goto label10;

     label06:
        if $r2 == null goto label14;

        $i0 = lengthof $r2;

        $i1 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if $i0 != $i1 goto label14;

     label07:
        $d0 = (double) 9221120237041090560L;

        $r3[1] = $d0;

        $r3[0] = #NaN;

        $i0 = 0;

     label08:
        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label16;

        $r6 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r7 = (java.lang.Double) $r6;

        $d0 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        $r2[$i0] = $d0;

        if $i0 != 0 goto label15;

        $r3[1] = $d0;

        $r3[0] = $d0;

     label09:
        $i0 = $i0 + 1;

        goto label08;

     label10:
        $d1 = $r3[0];

        $b2 = $d1 cmpl #-Infinity;

        if $b2 == 0 goto label11;

        $d1 = $r3[0];

        $b2 = $d0 cmpl $d1;

        if $b2 >= 0 goto label12;

     label11:
        $d1 = $r3[0];

        $b2 = $d1 cmpl #-Infinity;

        if $b2 != 0 goto label13;

     label12:
        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

     label13:
        $i0 = $i0 + 1;

        goto label05;

     label14:
        $i0 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        $r2 = newarray (double)[$i0];

        goto label07;

     label15:
        $d1 = $r3[0];

        $d1 = staticinvoke <java.lang.Math: double min(double,double)>($d1, $d0);

        $r3[0] = $d1;

        $d1 = $r3[1];

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d1, $d0);

        $r3[1] = $d0;

        goto label09;

     label16:
        return $r2;
    }
    public int getArgumentIndex(java.lang.String)
    {
        com.mkulesh.micromath.formula.Equation r0;
        java.lang.String $r1;
        java.util.ArrayList $r2;
        int $i0;

        r0 := @this: com.mkulesh.micromath.formula.Equation;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: java.util.ArrayList getArguments()>();

        if $r2 == null goto label1;

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: java.util.ArrayList getArguments()>();

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int indexOf(java.lang.Object)>($r1);

        return $i0;

     label1:
        return -1;
    }
    public com.mkulesh.micromath.math.CalculatedValue getArgumentValue(int)
    {
        com.mkulesh.micromath.formula.Equation r0;
        int $i0, $i1;
        com.mkulesh.micromath.math.CalculatedValue[] $r1;
        com.mkulesh.micromath.math.CalculatedValue $r2;

        r0 := @this: com.mkulesh.micromath.formula.Equation;

        $i0 := @parameter0: int;

        $r1 = r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.math.CalculatedValue[] argumentValues>;

        if $r1 == null goto label1;

        $r1 = r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.math.CalculatedValue[] argumentValues>;

        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label1;

        $r1 = r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.math.CalculatedValue[] argumentValues>;

        $r2 = $r1[$i0];

        if $r2 == null goto label1;

        $r1 = r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.math.CalculatedValue[] argumentValues>;

        $r2 = $r1[$i0];

        return $r2;

     label1:
        $r2 = <com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue NaN>;

        return $r2;
    }
    public java.util.ArrayList getArguments()
    {
        com.mkulesh.micromath.formula.Equation r0;
        com.mkulesh.micromath.formula.TermField $r1;
        com.mkulesh.micromath.formula.TermParser $r2;
        java.util.ArrayList $r3;

        r0 := @this: com.mkulesh.micromath.formula.Equation;

        $r1 = r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.TermField leftTerm>;

        $r2 = virtualinvoke $r1.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermParser getParser()>();

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.formula.TermParser: java.util.ArrayList getFunctionArgs()>();

        return $r3;
    }
    public com.mkulesh.micromath.formula.FormulaBase$BaseType getBaseType()
    {
        com.mkulesh.micromath.formula.Equation r0;
        com.mkulesh.micromath.formula.FormulaBase$BaseType r1;

        r0 := @this: com.mkulesh.micromath.formula.Equation;

        r1 = <com.mkulesh.micromath.formula.FormulaBase$BaseType: com.mkulesh.micromath.formula.FormulaBase$BaseType EQUATION>;

        return r1;
    }
    public com.mkulesh.micromath.math.CalculatedValue$ValueType getDerivativeValue(java.lang.String, com.mkulesh.micromath.formula.CalculaterTask, com.mkulesh.micromath.math.CalculatedValue) throws com.mkulesh.micromath.formula.CalculaterTask$CancelException
    {
        com.mkulesh.micromath.formula.Equation r0;
        java.lang.String $r1;
        com.mkulesh.micromath.formula.CalculaterTask $r2;
        com.mkulesh.micromath.math.CalculatedValue $r3;
        com.mkulesh.micromath.math.CalculatedValue$ValueType $r4;
        com.mkulesh.micromath.formula.TermField $r5;

        r0 := @this: com.mkulesh.micromath.formula.Equation;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.mkulesh.micromath.formula.CalculaterTask;

        $r3 := @parameter2: com.mkulesh.micromath.math.CalculatedValue;

        $r5 = r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.TermField rightTerm>;

        $r4 = virtualinvoke $r5.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.math.CalculatedValue$ValueType getDerivativeValue(java.lang.String,com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.math.CalculatedValue)>($r1, $r2, $r3);

        return $r4;
    }
    public java.util.ArrayList getInterval(com.mkulesh.micromath.formula.CalculaterTask) throws com.mkulesh.micromath.formula.CalculaterTask$CancelException
    {
        com.mkulesh.micromath.formula.Equation r0;
        com.mkulesh.micromath.formula.CalculaterTask $r1;
        com.mkulesh.micromath.formula.TermField $r2;
        com.mkulesh.micromath.formula.FormulaTerm $r3;
        boolean $z0;
        com.mkulesh.micromath.formula.FormulaTermInterval r4;
        java.util.ArrayList $r5;

        r0 := @this: com.mkulesh.micromath.formula.Equation;

        $r1 := @parameter0: com.mkulesh.micromath.formula.CalculaterTask;

        $r2 = r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.TermField rightTerm>;

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm getTerm()>();

        if $r3 == null goto label1;

        $z0 = $r3 instanceof com.mkulesh.micromath.formula.FormulaTermInterval;

        if $z0 == 0 goto label1;

        r4 = (com.mkulesh.micromath.formula.FormulaTermInterval) $r3;

        $r5 = virtualinvoke r4.<com.mkulesh.micromath.formula.FormulaTermInterval: java.util.ArrayList getInterval(com.mkulesh.micromath.formula.CalculaterTask)>($r1);

        return $r5;

     label1:
        return null;
    }
    public java.lang.String getName()
    {
        com.mkulesh.micromath.formula.Equation r0;
        com.mkulesh.micromath.formula.TermField $r1;
        com.mkulesh.micromath.formula.TermParser $r2;
        java.lang.String $r3;

        r0 := @this: com.mkulesh.micromath.formula.Equation;

        $r1 = r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.TermField leftTerm>;

        $r2 = virtualinvoke $r1.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermParser getParser()>();

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.formula.TermParser: java.lang.String getFunctionName()>();

        return $r3;
    }
    public com.mkulesh.micromath.math.CalculatedValue$ValueType getValue(com.mkulesh.micromath.formula.CalculaterTask, com.mkulesh.micromath.math.CalculatedValue) throws com.mkulesh.micromath.formula.CalculaterTask$CancelException
    {
        com.mkulesh.micromath.formula.Equation r0;
        com.mkulesh.micromath.formula.CalculaterTask $r1;
        com.mkulesh.micromath.math.CalculatedValue $r2, $r5;
        com.mkulesh.micromath.math.CalculatedValue[] $r3;
        com.mkulesh.micromath.formula.Equation$EquationConstantResult $r4;
        com.mkulesh.micromath.math.CalculatedValue$ValueType $r6;
        com.mkulesh.micromath.math.EquationArrayResult $r7;
        com.mkulesh.micromath.formula.TermField $r8;

        r0 := @this: com.mkulesh.micromath.formula.Equation;

        $r1 := @parameter0: com.mkulesh.micromath.formula.CalculaterTask;

        $r2 := @parameter1: com.mkulesh.micromath.math.CalculatedValue;

        $r4 = r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.Equation$EquationConstantResult constantResult>;

        if $r4 == null goto label1;

        $r3 = r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.math.CalculatedValue[] argumentValues>;

        if $r3 != null goto label1;

        $r4 = r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.Equation$EquationConstantResult constantResult>;

        $r5 = virtualinvoke $r4.<com.mkulesh.micromath.formula.Equation$EquationConstantResult: com.mkulesh.micromath.math.CalculatedValue getValue(com.mkulesh.micromath.formula.CalculaterTask)>($r1);

        $r6 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType assign(com.mkulesh.micromath.math.CalculatedValue)>($r5);

        return $r6;

     label1:
        $r7 = r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.math.EquationArrayResult arrayResult>;

        if $r7 == null goto label2;

        $r3 = r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.math.CalculatedValue[] argumentValues>;

        if $r3 == null goto label2;

        $r7 = r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.math.EquationArrayResult arrayResult>;

        $r3 = r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.math.CalculatedValue[] argumentValues>;

        $r5 = virtualinvoke $r7.<com.mkulesh.micromath.math.EquationArrayResult: com.mkulesh.micromath.math.CalculatedValue getValue(com.mkulesh.micromath.math.CalculatedValue[])>($r3);

        $r6 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType assign(com.mkulesh.micromath.math.CalculatedValue)>($r5);

        return $r6;

     label2:
        $r8 = r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.TermField rightTerm>;

        $r6 = virtualinvoke $r8.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.math.CalculatedValue$ValueType getValue(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.math.CalculatedValue)>($r1, $r2);

        return $r6;
    }
    public void invalidateResult()
    {
        com.mkulesh.micromath.formula.Equation r0;

        r0 := @this: com.mkulesh.micromath.formula.Equation;

        r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.math.EquationArrayResult arrayResult> = null;

        return;
    }
    public boolean isArray()
    {
        com.mkulesh.micromath.formula.Equation r0;
        com.mkulesh.micromath.formula.TermField $r1;
        com.mkulesh.micromath.formula.TermParser $r2;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.formula.Equation;

        $r1 = r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.TermField leftTerm>;

        $r2 = virtualinvoke $r1.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermParser getParser()>();

        $z0 = virtualinvoke $r2.<com.mkulesh.micromath.formula.TermParser: boolean isArray()>();

        return $z0;
    }
    public boolean isContentValid(com.mkulesh.micromath.formula.FormulaBase$ValidationPassType)
    {
        com.mkulesh.micromath.formula.Equation r0;
        com.mkulesh.micromath.formula.FormulaBase$ValidationPassType $r1;
        boolean $z0, z1;
        int[] $r2;
        int $i0;
        com.mkulesh.micromath.formula.TermField $r3;
        java.lang.String r4;
        java.util.ArrayList $r5;
        android.content.Context $r6;
        android.content.res.Resources $r7;
        com.mkulesh.micromath.formula.TermField$ErrorNotification $r8;
        com.mkulesh.micromath.formula.Equation$EquationConstantResult $r9;
        com.mkulesh.micromath.math.EquationArrayResult $r10;

        r0 := @this: com.mkulesh.micromath.formula.Equation;

        $r1 := @parameter0: com.mkulesh.micromath.formula.FormulaBase$ValidationPassType;

        $z0 = specialinvoke r0.<com.mkulesh.micromath.formula.CalculationResult: boolean isContentValid(com.mkulesh.micromath.formula.FormulaBase$ValidationPassType)>($r1);

        z1 = $z0;

        r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.Equation$EquationConstantResult constantResult> = null;

        r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.math.EquationArrayResult arrayResult> = null;

        $r2 = <com.mkulesh.micromath.formula.Equation$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaBase$ValidationPassType>;

        $i0 = virtualinvoke $r1.<com.mkulesh.micromath.formula.FormulaBase$ValidationPassType: int ordinal()>();

        $i0 = $r2[$i0];

        lookupswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label1;
        };

     label1:
        return $z0;

     label2:
        if $z0 == 0 goto label4;

        $r3 = r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.TermField leftTerm>;

        $z0 = virtualinvoke $r3.<com.mkulesh.micromath.formula.TermField: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        r4 = null;

        $r5 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: java.util.ArrayList getAllFunctions()>();

        $z0 = virtualinvoke $r5.<java.util.ArrayList: boolean contains(java.lang.Object)>(r0);

        if $z0 == 0 goto label3;

        z1 = 0;

        $r6 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources getResources()>();

        r4 = virtualinvoke $r7.<android.content.res.Resources: java.lang.String getString(int)>(2131099803);

     label3:
        $r3 = r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.TermField leftTerm>;

        $r8 = <com.mkulesh.micromath.formula.TermField$ErrorNotification: com.mkulesh.micromath.formula.TermField$ErrorNotification LAYOUT_BORDER>;

        virtualinvoke $r3.<com.mkulesh.micromath.formula.TermField: void setError(java.lang.String,com.mkulesh.micromath.formula.TermField$ErrorNotification,com.mkulesh.micromath.widgets.CustomLayout)>(r4, $r8, null);

     label4:
        if z1 == 0 goto label7;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: boolean isInterval()>();

        if $z0 != 0 goto label7;

        $z0 = specialinvoke r0.<com.mkulesh.micromath.formula.Equation: boolean isConstantResult()>();

        if $z0 == 0 goto label5;

        $r9 = new com.mkulesh.micromath.formula.Equation$EquationConstantResult;

        specialinvoke $r9.<com.mkulesh.micromath.formula.Equation$EquationConstantResult: void <init>(com.mkulesh.micromath.formula.Equation,com.mkulesh.micromath.formula.Equation$1)>(r0, null);

        r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.Equation$EquationConstantResult constantResult> = $r9;

        return z1;

     label5:
        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: boolean isArray()>();

        if $z0 == 0 goto label7;

        r4 = specialinvoke r0.<com.mkulesh.micromath.formula.Equation: java.lang.String checkArrayResult()>();

        if r4 != null goto label6;

        $r10 = new com.mkulesh.micromath.math.EquationArrayResult;

        $r3 = r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.TermField rightTerm>;

        specialinvoke $r10.<com.mkulesh.micromath.math.EquationArrayResult: void <init>(com.mkulesh.micromath.formula.Equation,com.mkulesh.micromath.formula.TermField)>(r0, $r3);

        r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.math.EquationArrayResult arrayResult> = $r10;

        return z1;

     label6:
        $r3 = r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.TermField leftTerm>;

        $r8 = <com.mkulesh.micromath.formula.TermField$ErrorNotification: com.mkulesh.micromath.formula.TermField$ErrorNotification LAYOUT_BORDER>;

        virtualinvoke $r3.<com.mkulesh.micromath.formula.TermField: void setError(java.lang.String,com.mkulesh.micromath.formula.TermField$ErrorNotification,com.mkulesh.micromath.widgets.CustomLayout)>(r4, $r8, null);

     label7:
        return z1;
    }
    public com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType isDifferentiable(java.lang.String)
    {
        com.mkulesh.micromath.formula.Equation r0;
        java.lang.String $r1;
        com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType $r2;
        com.mkulesh.micromath.formula.TermField $r3;

        r0 := @this: com.mkulesh.micromath.formula.Equation;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.TermField rightTerm>;

        $r2 = virtualinvoke $r3.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType isDifferentiable(java.lang.String)>($r1);

        return $r2;
    }
    public boolean isEqual(java.lang.String, int, int, boolean)
    {
        com.mkulesh.micromath.formula.Equation r0;
        java.lang.String $r1, $r2;
        int $i0, $i1, $i2;
        boolean $z0;
        java.util.ArrayList $r3;

        r0 := @this: com.mkulesh.micromath.formula.Equation;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: java.lang.String getName()>();

        if $r2 != null goto label1;

        return 0;

     label1:
        if $z0 == 0 goto label2;

        $i2 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: int getId()>();

        if $i2 == $i1 goto label6;

     label2:
        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label6;

        if $i0 != -1 goto label3;

        return 1;

     label3:
        $r3 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: java.util.ArrayList getArguments()>();

        if $r3 == null goto label4;

        $r3 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: java.util.ArrayList getArguments()>();

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i1 != $i0 goto label4;

        return 1;

     label4:
        $r3 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: java.util.ArrayList getArguments()>();

        if $r3 != null goto label5;

        if $i0 != 0 goto label5;

        return 1;

     label5:
        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: boolean isInterval()>();

        if $z0 == 0 goto label6;

        if $i0 != 1 goto label6;

        return 1;

     label6:
        return 0;
    }
    public boolean isInterval()
    {
        com.mkulesh.micromath.formula.Equation r0;
        com.mkulesh.micromath.formula.FormulaTerm $r1;
        com.mkulesh.micromath.formula.TermField $r2;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.formula.Equation;

        $r2 = r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.TermField rightTerm>;

        $r1 = virtualinvoke $r2.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm getTerm()>();

        if $r1 == null goto label1;

        $z0 = $r1 instanceof com.mkulesh.micromath.formula.FormulaTermInterval;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public void onDetails(android.view.View)
    {
        com.mkulesh.micromath.formula.Equation r0;
        android.view.View $r1;
        com.mkulesh.micromath.dialogs.DialogResultDetails r2;
        com.mkulesh.micromath.math.EquationArrayResult $r3;
        boolean $z0;
        com.mkulesh.micromath.formula.FormulaList $r4;
        android.support.v7.app.AppCompatActivity $r5;
        com.mkulesh.micromath.properties.DocumentProperties $r6;

        r0 := @this: com.mkulesh.micromath.formula.Equation;

        $r1 := @parameter0: android.view.View;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: boolean enableDetails()>();

        if $z0 == 0 goto label1;

        r2 = new com.mkulesh.micromath.dialogs.DialogResultDetails;

        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r5 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        $r3 = r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.math.EquationArrayResult arrayResult>;

        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r6 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.properties.DocumentProperties getDocumentSettings()>();

        specialinvoke r2.<com.mkulesh.micromath.dialogs.DialogResultDetails: void <init>(android.content.Context,com.mkulesh.micromath.math.EquationArrayResult,com.mkulesh.micromath.properties.DocumentProperties)>($r5, $r3, $r6);

        virtualinvoke r2.<com.mkulesh.micromath.dialogs.DialogResultDetails: void show()>();

     label1:
        return;
    }
    public boolean setArgumentValues(com.mkulesh.micromath.math.CalculatedValue[])
    {
        com.mkulesh.micromath.formula.Equation r0;
        com.mkulesh.micromath.math.CalculatedValue[] $r1;

        r0 := @this: com.mkulesh.micromath.formula.Equation;

        $r1 := @parameter0: com.mkulesh.micromath.math.CalculatedValue[];

        r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.math.CalculatedValue[] argumentValues> = $r1;

        $r1 = r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.math.CalculatedValue[] argumentValues>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public void showResult()
    {
        com.mkulesh.micromath.formula.Equation r0;

        r0 := @this: com.mkulesh.micromath.formula.Equation;

        return;
    }
    public java.lang.String toString()
    {
        com.mkulesh.micromath.formula.Equation r0;
        java.lang.String $r1, r2;
        java.util.ArrayList $r3;
        java.lang.StringBuilder $r4;
        boolean $z0;
        com.mkulesh.micromath.formula.FormulaBase$BaseType $r5;
        int $i0;

        r0 := @this: com.mkulesh.micromath.formula.Equation;

        $r1 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: java.lang.String getName()>();

        r2 = $r1;

        if $r1 != null goto label1;

        r2 = "<EMPTY>";

     label1:
        $r3 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: java.util.ArrayList getArguments()>();

        if $r3 == null goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r3 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: java.util.ArrayList getArguments()>();

        r2 = virtualinvoke $r3.<java.util.ArrayList: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: boolean isInterval()>();

        if $z0 == 0 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": interval");

        r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Formula ");

        $r5 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.FormulaBase$BaseType getBaseType()>();

        $r1 = virtualinvoke $r5.<com.mkulesh.micromath.formula.FormulaBase$BaseType: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(Id: ");

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.formula.Equation: int getId()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Name: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return r2;
    }
