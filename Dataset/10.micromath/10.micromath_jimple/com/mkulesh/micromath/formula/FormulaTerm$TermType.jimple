com.mkulesh.micromath.formula.FormulaTerm$TermType extends java.lang.Enum
private static final com.mkulesh.micromath.formula.FormulaTerm$TermType[] $VALUES
public static final enum com.mkulesh.micromath.formula.FormulaTerm$TermType COMPARATOR
public static final enum com.mkulesh.micromath.formula.FormulaTerm$TermType FUNCTION
public static final enum com.mkulesh.micromath.formula.FormulaTerm$TermType INTERVAL
public static final enum com.mkulesh.micromath.formula.FormulaTerm$TermType LOOP
public static final enum com.mkulesh.micromath.formula.FormulaTerm$TermType OPERATOR
    static void <clinit>()
    {
        com.mkulesh.micromath.formula.FormulaTerm$TermType $r0;
        com.mkulesh.micromath.formula.FormulaTerm$TermType[] $r1;

        $r0 = new com.mkulesh.micromath.formula.FormulaTerm$TermType;

        specialinvoke $r0.<com.mkulesh.micromath.formula.FormulaTerm$TermType: void <init>(java.lang.String,int)>("OPERATOR", 0);

        <com.mkulesh.micromath.formula.FormulaTerm$TermType: com.mkulesh.micromath.formula.FormulaTerm$TermType OPERATOR> = $r0;

        $r0 = new com.mkulesh.micromath.formula.FormulaTerm$TermType;

        specialinvoke $r0.<com.mkulesh.micromath.formula.FormulaTerm$TermType: void <init>(java.lang.String,int)>("COMPARATOR", 1);

        <com.mkulesh.micromath.formula.FormulaTerm$TermType: com.mkulesh.micromath.formula.FormulaTerm$TermType COMPARATOR> = $r0;

        $r0 = new com.mkulesh.micromath.formula.FormulaTerm$TermType;

        specialinvoke $r0.<com.mkulesh.micromath.formula.FormulaTerm$TermType: void <init>(java.lang.String,int)>("FUNCTION", 2);

        <com.mkulesh.micromath.formula.FormulaTerm$TermType: com.mkulesh.micromath.formula.FormulaTerm$TermType FUNCTION> = $r0;

        $r0 = new com.mkulesh.micromath.formula.FormulaTerm$TermType;

        specialinvoke $r0.<com.mkulesh.micromath.formula.FormulaTerm$TermType: void <init>(java.lang.String,int)>("INTERVAL", 3);

        <com.mkulesh.micromath.formula.FormulaTerm$TermType: com.mkulesh.micromath.formula.FormulaTerm$TermType INTERVAL> = $r0;

        $r0 = new com.mkulesh.micromath.formula.FormulaTerm$TermType;

        specialinvoke $r0.<com.mkulesh.micromath.formula.FormulaTerm$TermType: void <init>(java.lang.String,int)>("LOOP", 4);

        <com.mkulesh.micromath.formula.FormulaTerm$TermType: com.mkulesh.micromath.formula.FormulaTerm$TermType LOOP> = $r0;

        $r1 = newarray (com.mkulesh.micromath.formula.FormulaTerm$TermType)[5];

        $r0 = <com.mkulesh.micromath.formula.FormulaTerm$TermType: com.mkulesh.micromath.formula.FormulaTerm$TermType OPERATOR>;

        $r1[0] = $r0;

        $r0 = <com.mkulesh.micromath.formula.FormulaTerm$TermType: com.mkulesh.micromath.formula.FormulaTerm$TermType COMPARATOR>;

        $r1[1] = $r0;

        $r0 = <com.mkulesh.micromath.formula.FormulaTerm$TermType: com.mkulesh.micromath.formula.FormulaTerm$TermType FUNCTION>;

        $r1[2] = $r0;

        $r0 = <com.mkulesh.micromath.formula.FormulaTerm$TermType: com.mkulesh.micromath.formula.FormulaTerm$TermType INTERVAL>;

        $r1[3] = $r0;

        $r0 = <com.mkulesh.micromath.formula.FormulaTerm$TermType: com.mkulesh.micromath.formula.FormulaTerm$TermType LOOP>;

        $r1[4] = $r0;

        <com.mkulesh.micromath.formula.FormulaTerm$TermType: com.mkulesh.micromath.formula.FormulaTerm$TermType[] $VALUES> = $r1;

        return;
    }
    private void <init>(java.lang.String, int)
    {
        com.mkulesh.micromath.formula.FormulaTerm$TermType r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTerm$TermType;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }
    public static com.mkulesh.micromath.formula.FormulaTerm$TermType valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        com.mkulesh.micromath.formula.FormulaTerm$TermType $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/mkulesh/micromath/formula/FormulaTerm$TermType;", $r0);

        $r2 = (com.mkulesh.micromath.formula.FormulaTerm$TermType) $r1;

        return $r2;
    }
    public static com.mkulesh.micromath.formula.FormulaTerm$TermType[] values()
    {
        java.lang.Object $r0;
        com.mkulesh.micromath.formula.FormulaTerm$TermType[] $r1;

        $r1 = <com.mkulesh.micromath.formula.FormulaTerm$TermType: com.mkulesh.micromath.formula.FormulaTerm$TermType[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (com.mkulesh.micromath.formula.FormulaTerm$TermType[]) $r0;

        return $r1;
    }
