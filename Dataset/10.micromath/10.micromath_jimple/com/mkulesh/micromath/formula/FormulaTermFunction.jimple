com.mkulesh.micromath.formula.FormulaTermFunction extends com.mkulesh.micromath.formula.FormulaTerm
public static final java.lang.String FUNCTION_ARGS_MARKER
private final com.mkulesh.micromath.math.CalculatedValue a0derVal
private final com.mkulesh.micromath.math.CalculatedValue a1derVal
private com.mkulesh.micromath.math.CalculatedValue[] argVal
private java.lang.String functionLinkName
private com.mkulesh.micromath.widgets.CustomLayout functionMainLayout
private com.mkulesh.micromath.widgets.CustomTextView functionTerm
private com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType
private com.mkulesh.micromath.formula.Equation linkedFunction
    public void <init>(android.content.Context)
    {
        com.mkulesh.micromath.formula.FormulaTermFunction r0;
        android.content.Context $r1;
        com.mkulesh.micromath.math.CalculatedValue $r2;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermFunction;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTerm: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.widgets.CustomTextView functionTerm> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.widgets.CustomLayout functionMainLayout> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.lang.String functionLinkName> = "unknown";

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.Equation linkedFunction> = null;

        $r2 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a0derVal> = $r2;

        $r2 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a1derVal> = $r2;

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue[] argVal> = null;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.mkulesh.micromath.formula.FormulaTermFunction r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        com.mkulesh.micromath.math.CalculatedValue $r3;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermFunction;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTerm: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.widgets.CustomTextView functionTerm> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.widgets.CustomLayout functionMainLayout> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.lang.String functionLinkName> = "unknown";

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.Equation linkedFunction> = null;

        $r3 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a0derVal> = $r3;

        $r3 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a1derVal> = $r3;

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue[] argVal> = null;

        return;
    }
    public void <init>(com.mkulesh.micromath.formula.TermField, android.widget.LinearLayout, java.lang.String, int) throws java.lang.Exception
    {
        com.mkulesh.micromath.formula.FormulaTermFunction r0;
        com.mkulesh.micromath.formula.TermField $r1;
        android.widget.LinearLayout $r2;
        java.lang.String $r3;
        int $i0, $i1;
        com.mkulesh.micromath.formula.FormulaBase $r4;
        com.mkulesh.micromath.math.CalculatedValue $r5;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermFunction;

        $r1 := @parameter0: com.mkulesh.micromath.formula.TermField;

        $r2 := @parameter1: android.widget.LinearLayout;

        $r3 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $r4 = virtualinvoke $r1.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $i1 = $r1.<com.mkulesh.micromath.formula.TermField: int termDepth>;

        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTerm: void <init>(com.mkulesh.micromath.formula.FormulaBase,android.widget.LinearLayout,int)>($r4, $r2, $i1);

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.widgets.CustomTextView functionTerm> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.widgets.CustomLayout functionMainLayout> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.lang.String functionLinkName> = "unknown";

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.Equation linkedFunction> = null;

        $r5 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r5.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a0derVal> = $r5;

        $r5 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r5.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a1derVal> = $r5;

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue[] argVal> = null;

        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: void setParentField(com.mkulesh.micromath.formula.TermField)>($r1);

        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: void onCreate(java.lang.String,int)>($r3, $i0);

        return;
    }
    private void ensureArgValSize()
    {
        com.mkulesh.micromath.formula.FormulaTermFunction r0;
        com.mkulesh.micromath.math.CalculatedValue $r1;
        int $i0, $i1;
        java.util.ArrayList $r2;
        com.mkulesh.micromath.math.CalculatedValue[] $r3;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermFunction;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.util.ArrayList terms>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue[] argVal>;

        if $r3 == null goto label1;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue[] argVal>;

        $i1 = lengthof $r3;

        if $i1 == $i0 goto label3;

     label1:
        $r3 = newarray (com.mkulesh.micromath.math.CalculatedValue)[$i0];

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue[] argVal> = $r3;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue[] argVal>;

        $r1 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r1.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        $r3[$i1] = $r1;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return;
    }
    private int getArgNumber(java.lang.String, java.lang.String)
    {
        com.mkulesh.micromath.formula.FormulaTermFunction r0;
        java.lang.String $r1, $r2, r3, $r6;
        com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType[] $r4;
        int $i0, $i1;
        com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType r5;
        boolean $z0;
        java.lang.StringBuilder $r7;
        android.content.Context $r8;
        android.content.res.Resources $r9;
        com.mkulesh.micromath.formula.FormulaBase $r10;
        com.mkulesh.micromath.formula.FormulaList $r11;
        com.mkulesh.micromath.formula.Equation r12;
        java.util.ArrayList $r13;
        java.lang.Exception $r14;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermFunction;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        r3 = null;

     label01:
        $r4 = staticinvoke <com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType[] values()>();

        $i0 = lengthof $r4;

     label02:
        $i1 = 0;

     label03:
        if $i1 >= $i0 goto label09;

     label04:
        r5 = $r4[$i1];

        $z0 = virtualinvoke r5.<com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: boolean isLink()>();

     label05:
        if $z0 == 0 goto label22;

     label06:
        $r6 = virtualinvoke r5.<com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: java.lang.String getLinkObject()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r6);

     label07:
        if $z0 == 0 goto label22;

        $r7 = new java.lang.StringBuilder;

     label08:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        r3 = virtualinvoke r5.<com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: java.lang.String getLinkObject()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        if r3 == null goto label23;

     label10:
        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>(r3);

        $i1 = virtualinvoke r3.<java.lang.String: int length()>();

     label11:
        $i0 = $i0 + $i1;

     label12:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

     label13:
        if $r1 == null goto label34;

     label14:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

     label15:
        if $i0 <= 0 goto label34;

     label16:
        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>(":");

     label17:
        if $i0 <= 0 goto label34;

        $r2 = ":";

     label18:
        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

     label19:
        $i0 = $i1 + $i0;

     label20:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label21:
        return $i0;

     label22:
        $i1 = $i1 + 1;

        goto label03;

     label23:
        $r8 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: android.content.Context getContext()>();

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.res.Resources getResources()>();

        r3 = virtualinvoke $r9.<android.content.res.Resources: java.lang.String getString(int)>(2131099967);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>(r3);

     label24:
        if $z0 != 0 goto label34;

     label25:
        $r10 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r11 = virtualinvoke $r10.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r10 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $i0 = virtualinvoke $r10.<com.mkulesh.micromath.formula.FormulaBase: int getId()>();

        $r10 = virtualinvoke $r11.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase getFormula(java.lang.String,int,int,boolean)>($r2, -1, $i0, 1);

     label26:
        if $r10 == null goto label34;

        $z0 = $r10 instanceof com.mkulesh.micromath.formula.Equation;

        if $z0 == 0 goto label34;

     label27:
        r12 = (com.mkulesh.micromath.formula.Equation) $r10;

        $r13 = virtualinvoke r12.<com.mkulesh.micromath.formula.Equation: java.util.ArrayList getArguments()>();

     label28:
        if $r13 == null goto label34;

     label29:
        $z0 = virtualinvoke $r13.<java.util.ArrayList: boolean isEmpty()>();

     label30:
        if $z0 != 0 goto label34;

     label31:
        $i0 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

     label32:
        return $i0;

     label33:
        $r14 := @caughtexception;

     label34:
        return 1;

        catch java.lang.Exception from label01 to label02 with label33;
        catch java.lang.Exception from label04 to label05 with label33;
        catch java.lang.Exception from label06 to label07 with label33;
        catch java.lang.Exception from label08 to label09 with label33;
        catch java.lang.Exception from label10 to label11 with label33;
        catch java.lang.Exception from label12 to label13 with label33;
        catch java.lang.Exception from label14 to label15 with label33;
        catch java.lang.Exception from label16 to label17 with label33;
        catch java.lang.Exception from label18 to label19 with label33;
        catch java.lang.Exception from label20 to label21 with label33;
        catch java.lang.Exception from label23 to label24 with label33;
        catch java.lang.Exception from label25 to label26 with label33;
        catch java.lang.Exception from label27 to label28 with label33;
        catch java.lang.Exception from label29 to label30 with label33;
        catch java.lang.Exception from label31 to label32 with label33;
    }
    private int getArgumentDepth()
    {
        com.mkulesh.micromath.formula.FormulaTermFunction r0;
        com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType $r1, $r2;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermFunction;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $r1 = <com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType FUNCTION_INDEX>;

        if $r2 != $r1 goto label1;

        return 3;

     label1:
        return 0;
    }
    private java.lang.String getFunctionLabel()
    {
        com.mkulesh.micromath.formula.FormulaTermFunction r0;
        int[] $r1;
        com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType $r2;
        int $i0;
        java.lang.String $r3;
        java.util.Locale $r4;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermFunction;

        $r1 = <com.mkulesh.micromath.formula.FormulaTermFunction$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaTermFunction$FunctionType>;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $i0 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: int ordinal()>();

        $i0 = $r1[$i0];

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 16: goto label3;
            case 17: goto label3;
            case 19: goto label3;
            case 20: goto label3;
            case 31: goto label3;
            case 32: goto label2;
            case 33: goto label2;
            default: goto label1;
        };

     label1:
        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: java.lang.String toString()>();

        $r4 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r4);

        return $r3;

     label2:
        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.lang.String functionLinkName>;

        return $r3;

     label3:
        return "";
    }
    private java.lang.String getFunctionLinkName(java.lang.String, java.lang.String, int)
    {
        com.mkulesh.micromath.formula.FormulaTermFunction r0;
        java.lang.String $r1, $r2, $r5;
        int $i0, $i1;
        android.content.Context $r3;
        android.content.res.Resources $r4;
        boolean $z0;
        java.lang.StringBuilder $r6;
        java.lang.Exception $r7;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermFunction;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

     label01:
        $r3 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r5);

     label02:
        if $z0 == 0 goto label05;

     label03:
        $r3 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

     label04:
        return $r1;

     label05:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r2);

     label06:
        if $z0 == 0 goto label18;

        $r6 = new java.lang.StringBuilder;

     label07:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>($r2);

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

     label08:
        $i0 = $i0 + $i1;

     label09:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

     label10:
        if $r1 == null goto label19;

     label11:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

     label12:
        if $i0 <= 0 goto label19;

     label13:
        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>(":");

     label14:
        if $i0 <= 0 goto label19;

     label15:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label16:
        return $r1;

     label17:
        $r7 := @caughtexception;

     label18:
        return null;

     label19:
        return $r1;

        catch java.lang.Exception from label01 to label02 with label17;
        catch java.lang.Exception from label03 to label04 with label17;
        catch java.lang.Exception from label05 to label06 with label17;
        catch java.lang.Exception from label07 to label08 with label17;
        catch java.lang.Exception from label09 to label10 with label17;
        catch java.lang.Exception from label11 to label12 with label17;
        catch java.lang.Exception from label13 to label14 with label17;
        catch java.lang.Exception from label15 to label16 with label17;
    }
    public static java.lang.String getFunctionString(android.content.Context, com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType)
    {
        android.content.Context $r0;
        com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType $r1;
        java.util.Locale $r2;
        boolean $z0;
        java.lang.String $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType;

        $z0 = virtualinvoke $r1.<com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: boolean isLink()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke $r1.<com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: java.lang.String getLinkObject()>();

        return $r3;

     label1:
        $r3 = virtualinvoke $r1.<com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: java.lang.String toString()>();

        $r2 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        return $r3;
    }
    public static com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType getFunctionType(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, r3, $r6;
        int i0, $i1, i2, $i3, $i4;
        com.mkulesh.micromath.formula.FormulaTermFunction$Trigger r2;
        android.content.res.Resources $r4;
        int[] $r5;
        boolean $z0;
        com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType[] $r7;
        com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType r8;
        java.util.Locale $r9;
        com.mkulesh.micromath.formula.FormulaTermFunction$Trigger[] $r10;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $i1 = 0;

        r3 = null;

        $r4 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        i2 = -1;

        $r5 = <com.mkulesh.micromath.formula.BracketParser: int[] START_BRACKET_IDS>;

        $i3 = lengthof $r5;

        $i4 = 0;

     label01:
        if $i4 >= $i3 goto label02;

        i0 = $r5[$i4];

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(i0);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r6);

        if $z0 == 0 goto label04;

        i2 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>($r6);

        r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        r3 = virtualinvoke r3.<java.lang.String: java.lang.String trim()>();

        i2 = i0;

     label02:
        $r7 = staticinvoke <com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType[] values()>();

        i0 = lengthof $r7;

        $i3 = 0;

     label03:
        if $i3 >= i0 goto label07;

        r8 = $r7[$i3];

        $z0 = virtualinvoke r8.<com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: boolean isLink()>();

        if $z0 == 0 goto label05;

        $r6 = virtualinvoke r8.<com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: java.lang.String getLinkObject()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r6);

        if $z0 == 0 goto label05;

        return r8;

     label04:
        $i4 = $i4 + 1;

        goto label01;

     label05:
        $r6 = virtualinvoke r8.<com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: java.lang.String toString()>();

        $r9 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r9);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label14;

        if r3 == null goto label06;

        $r6 = virtualinvoke r8.<com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: java.lang.String toString()>();

        $r9 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r9);

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label14;

     label06:
        $i3 = $i3 + 1;

        goto label03;

     label07:
        if r3 == null goto label09;

        i0 = virtualinvoke r3.<java.lang.String: int length()>();

        if i0 != 0 goto label09;

        if i2 == -1 goto label09;

        $r5 = <com.mkulesh.micromath.formula.BracketParser: int[] START_BRACKET_IDS>;

        $i1 = $r5[0];

        if i2 != $i1 goto label08;

        r8 = <com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType IDENTITY>;

        return r8;

     label08:
        return null;

     label09:
        $r10 = staticinvoke <com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: com.mkulesh.micromath.formula.FormulaTermFunction$Trigger[] values()>();

        i2 = lengthof $r10;

     label10:
        if $i1 >= i2 goto label12;

        r2 = $r10[$i1];

        r8 = virtualinvoke r2.<com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType getFunctionType()>();

        if r8 == null goto label11;

        i0 = virtualinvoke r2.<com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: int getCodeId()>();

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(i0);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r6);

        if $z0 == 0 goto label11;

        r8 = virtualinvoke r2.<com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType getFunctionType()>();

        return r8;

     label11:
        $i1 = $i1 + 1;

        goto label10;

     label12:
        if r3 == null goto label13;

        r8 = <com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType FUNCTION_LINK>;

        return r8;

     label13:
        return null;

     label14:
        return r8;
    }
    public static boolean isConversionEnabled(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r5;
        com.mkulesh.micromath.formula.FormulaTermFunction$Trigger r2;
        int $i0, $i1, $i2;
        com.mkulesh.micromath.formula.FormulaTermFunction$Trigger[] $r3;
        android.content.res.Resources $r4;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r3 = staticinvoke <com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: com.mkulesh.micromath.formula.FormulaTermFunction$Trigger[] values()>();

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        r2 = $r3[$i1];

        $r4 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i2 = virtualinvoke r2.<com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: int getCodeId()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>($i2);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r5);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 0;
    }
    public static boolean isFunction(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType getFunctionType(android.content.Context,java.lang.String)>($r0, $r1);

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    private void onCreate(java.lang.String, int) throws java.lang.Exception
    {
        com.mkulesh.micromath.formula.FormulaTermFunction r0;
        int $i0, $i1, $i2;
        com.mkulesh.micromath.formula.FormulaTermFunction$Trigger r1;
        java.lang.String $r2, $r10, $r19;
        android.widget.LinearLayout $r3;
        java.lang.Exception $r4;
        java.lang.StringBuilder $r5;
        android.content.Context $r6;
        com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType $r7, $r17;
        int[] $r8;
        java.util.ArrayList $r9, $r14;
        boolean $z0;
        android.content.res.Resources $r11;
        android.view.View $r12;
        com.mkulesh.micromath.widgets.CustomLayout r13;
        java.lang.Object $r15;
        com.mkulesh.micromath.formula.TermField $r16;
        com.mkulesh.micromath.widgets.CustomEditText $r18;
        com.mkulesh.micromath.formula.FormulaTermFunction$Trigger[] $r20;
        java.lang.CharSequence $r21;
        com.mkulesh.micromath.formula.FormulaBase$ValidationPassType $r22;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermFunction;

        $r2 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        if $i0 < 0 goto label01;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: android.widget.LinearLayout layout>;

        $i1 = virtualinvoke $r3.<android.widget.LinearLayout: int getChildCount()>();

        if $i0 <= $i1 goto label02;

     label01:
        $r4 = new java.lang.Exception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot create FormulaFunction for invalid insertion index ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>($r2);

        throw $r4;

     label02:
        $r6 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: android.content.Context getContext()>();

        $r7 = staticinvoke <com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType getFunctionType(android.content.Context,java.lang.String)>($r6, $r2);

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType> = $r7;

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        if $r7 != null goto label03;

        $r4 = new java.lang.Exception;

        specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>("cannot create FormulaFunction for unknown function");

        throw $r4;

     label03:
        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $i1 = virtualinvoke $r7.<com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: int getArgNumber()>();

        $r8 = <com.mkulesh.micromath.formula.FormulaTermFunction$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaTermFunction$FunctionType>;

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $i2 = virtualinvoke $r7.<com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: int ordinal()>();

        $i2 = $r8[$i2];

        lookupswitch($i2)
        {
            case 1: goto label14;
            case 16: goto label10;
            case 17: goto label11;
            case 19: goto label14;
            case 20: goto label13;
            case 31: goto label12;
            case 32: goto label06;
            case 33: goto label08;
            default: goto label04;
        };

     label04:
        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: void inflateElements(int,boolean)>(2130903094, 1);

     label05:
        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: void initializeElements(int)>($i0);

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.util.ArrayList terms>;

        $z0 = virtualinvoke $r9.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label15;

        $r4 = new java.lang.Exception;

        specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>("argument list is empty");

        throw $r4;

     label06:
        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $r10 = virtualinvoke $r7.<com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: java.lang.String getLinkObject()>();

        $r10 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.lang.String getFunctionLinkName(java.lang.String,java.lang.String,int)>($r2, $r10, 2131099939);

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.lang.String functionLinkName> = $r10;

        $r10 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.lang.String functionLinkName>;

        if $r10 != null goto label07;

        $r4 = new java.lang.Exception;

        specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>("cannot create FormulaFunction(FUNCTION_LINK) since function name is invalid");

        throw $r4;

     label07:
        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: void inflateElements(int,boolean)>(2130903094, 1);

        $r10 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.lang.String functionLinkName>;

        $i1 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: int getArgNumber(java.lang.String,java.lang.String)>($r2, $r10);

        goto label05;

     label08:
        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $r10 = virtualinvoke $r7.<com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: java.lang.String getLinkObject()>();

        $r10 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.lang.String getFunctionLinkName(java.lang.String,java.lang.String,int)>($r2, $r10, 2131099940);

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.lang.String functionLinkName> = $r10;

        $r10 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.lang.String functionLinkName>;

        if $r10 != null goto label09;

        $r4 = new java.lang.Exception;

        specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>("cannot create FormulaFunction(INDEX) since function name is invalid");

        throw $r4;

     label09:
        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: void inflateElements(int,boolean)>(2130903093, 1);

        $r10 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.lang.String functionLinkName>;

        $i1 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: int getArgNumber(java.lang.String,java.lang.String)>($r2, $r10);

        goto label05;

     label10:
        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: void inflateElements(int,boolean)>(2130903097, 1);

        goto label05;

     label11:
        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: void inflateElements(int,boolean)>(2130903096, 1);

        goto label05;

     label12:
        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: void inflateElements(int,boolean)>(2130903092, 1);

        goto label05;

     label13:
        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: void inflateElements(int,boolean)>(2130903091, 1);

        goto label05;

     label14:
        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: void inflateElements(int,boolean)>(2130903095, 1);

        goto label05;

     label15:
        $r6 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: android.content.Context getContext()>();

        $r11 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources getResources()>();

        $r10 = virtualinvoke $r11.<android.content.res.Resources: java.lang.String getString(int)>(2131099975);

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: android.widget.LinearLayout layout>;

        $r12 = virtualinvoke $r3.<android.widget.LinearLayout: android.view.View findViewWithTag(java.lang.Object)>($r10);

        if $r12 == null goto label16;

        r13 = (com.mkulesh.micromath.widgets.CustomLayout) $r12;

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.widgets.CustomLayout functionMainLayout> = r13;

        r13 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.widgets.CustomLayout functionMainLayout>;

        virtualinvoke r13.<com.mkulesh.micromath.widgets.CustomLayout: void setTag(java.lang.Object)>("");

     label16:
        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.util.ArrayList terms>;

        $i0 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label17;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.util.ArrayList terms>;

        $r14 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.util.ArrayList terms>;

        $i0 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        $i0 = $i0 + -1;

        $r15 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r16 = (com.mkulesh.micromath.formula.TermField) $r15;

        $i0 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: int getArgumentDepth()>();

        $r16 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.TermField addArgument(com.mkulesh.micromath.formula.TermField,int,int)>($r16, 2130903090, $i0);

        if $r16 != null goto label16;

     label17:
        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $i0 = virtualinvoke $r7.<com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: int getArgNumber()>();

        if $i0 <= 0 goto label18;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.util.ArrayList terms>;

        $i0 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $i1 = virtualinvoke $r7.<com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: int getArgNumber()>();

        if $i0 == $i1 goto label18;

        $r4 = new java.lang.Exception;

        specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>("invalid size for argument list");

        throw $r4;

     label18:
        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $r17 = <com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType IF>;

        if $r7 != $r17 goto label19;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.util.ArrayList terms>;

        $r15 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r16 = (com.mkulesh.micromath.formula.TermField) $r15;

        $r18 = virtualinvoke $r16.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText getEditText()>();

        virtualinvoke $r18.<com.mkulesh.micromath.widgets.CustomEditText: void setComparatorEnabled(boolean)>(1);

     label19:
        $i0 = 0;

     label20:
        $r8 = <com.mkulesh.micromath.formula.BracketParser: int[] START_BRACKET_IDS>;

        $i1 = lengthof $r8;

        if $i0 >= $i1 goto label22;

        $r6 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: android.content.Context getContext()>();

        $r11 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources getResources()>();

        $r8 = <com.mkulesh.micromath.formula.BracketParser: int[] START_BRACKET_IDS>;

        $i1 = $r8[$i0];

        $r10 = virtualinvoke $r11.<android.content.res.Resources: java.lang.String getString(int)>($i1);

        $r6 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: android.content.Context getContext()>();

        $r11 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources getResources()>();

        $r8 = <com.mkulesh.micromath.formula.BracketParser: int[] END_BRACKET_IDS>;

        $i1 = $r8[$i0];

        $r19 = virtualinvoke $r11.<android.content.res.Resources: java.lang.String getString(int)>($i1);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>($r10);

        if $z0 == 0 goto label21;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>($r19);

        if $z0 == 0 goto label21;

        $i1 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>($r19);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

     label21:
        $i0 = $i0 + 1;

        goto label20;

     label22:
        $r20 = staticinvoke <com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: com.mkulesh.micromath.formula.FormulaTermFunction$Trigger[] values()>();

        $i0 = lengthof $r20;

        $i1 = 0;

     label23:
        if $i1 >= $i0 goto label36;

        r1 = $r20[$i1];

        $r6 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: android.content.Context getContext()>();

        $r11 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources getResources()>();

        $i2 = virtualinvoke r1.<com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: int getCodeId()>();

        $r10 = virtualinvoke $r11.<android.content.res.Resources: java.lang.String getString(int)>($i2);

        $i2 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>($r10);

        $r16 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.TermField getArgumentTerm()>();

        if $i2 < 0 goto label35;

        if $r16 == null goto label35;

     label24:
        $z0 = virtualinvoke r1.<com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: boolean isBeforeText()>();

     label25:
        if $z0 == 0 goto label32;

     label26:
        $i0 = virtualinvoke $r10.<java.lang.String: int length()>();

     label27:
        $i0 = $i0 + $i2;

     label28:
        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $r21 = virtualinvoke $r2.<java.lang.String: java.lang.CharSequence subSequence(int,int)>($i0, $i1);

        virtualinvoke $r16.<com.mkulesh.micromath.formula.TermField: void setText(java.lang.CharSequence)>($r21);

     label29:
        $r22 = <com.mkulesh.micromath.formula.FormulaBase$ValidationPassType: com.mkulesh.micromath.formula.FormulaBase$ValidationPassType VALIDATE_SINGLE_FORMULA>;

     label30:
        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: boolean isContentValid(com.mkulesh.micromath.formula.FormulaBase$ValidationPassType)>($r22);

     label31:
        return;

     label32:
        $r21 = virtualinvoke $r2.<java.lang.String: java.lang.CharSequence subSequence(int,int)>(0, $i2);

        virtualinvoke $r16.<com.mkulesh.micromath.formula.TermField: void setText(java.lang.CharSequence)>($r21);

     label33:
        goto label29;

     label34:
        $r4 := @caughtexception;

        return;

     label35:
        $i1 = $i1 + 1;

        goto label23;

     label36:
        return;

        catch java.lang.Exception from label24 to label25 with label34;
        catch java.lang.Exception from label26 to label27 with label34;
        catch java.lang.Exception from label28 to label29 with label34;
        catch java.lang.Exception from label30 to label31 with label34;
        catch java.lang.Exception from label32 to label33 with label34;
    }
    private void setErrorCode(com.mkulesh.micromath.formula.FormulaTermFunction$ErrorCode, java.lang.String)
    {
        com.mkulesh.micromath.formula.FormulaTermFunction r0;
        com.mkulesh.micromath.formula.FormulaTermFunction$ErrorCode $r1;
        java.lang.String $r2, r6;
        com.mkulesh.micromath.widgets.CustomTextView $r3;
        android.content.Context $r4;
        int $i0;
        com.mkulesh.micromath.formula.TermField $r5;
        int[] $r7;
        com.mkulesh.micromath.formula.TermField$ErrorNotification $r8;
        com.mkulesh.micromath.widgets.CustomLayout $r9;
        java.lang.Object[] $r10;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermFunction;

        $r1 := @parameter0: com.mkulesh.micromath.formula.FormulaTermFunction$ErrorCode;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.widgets.CustomTextView functionTerm>;

        if $r3 == null goto label1;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.widgets.CustomTextView functionTerm>;

        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: android.content.Context getContext()>();

        $i0 = staticinvoke <com.mkulesh.micromath.utils.CompatUtils: int getColor(android.content.Context,int)>($r4, 2131427370);

        virtualinvoke $r3.<com.mkulesh.micromath.widgets.CustomTextView: void setTextColor(int)>($i0);

     label1:
        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.TermField parentField>;

        if $r5 == null goto label5;

        r6 = null;

        $r7 = <com.mkulesh.micromath.formula.FormulaTermFunction$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaTermFunction$ErrorCode>;

        $i0 = virtualinvoke $r1.<com.mkulesh.micromath.formula.FormulaTermFunction$ErrorCode: int ordinal()>();

        $i0 = $r7[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label3;
            case 4: goto label3;
            case 5: goto label3;
            case 6: goto label3;
            case 7: goto label4;
            default: goto label2;
        };

     label2:
        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.TermField parentField>;

        $r8 = <com.mkulesh.micromath.formula.TermField$ErrorNotification: com.mkulesh.micromath.formula.TermField$ErrorNotification PARENT_LAYOUT>;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.widgets.CustomLayout functionMainLayout>;

        virtualinvoke $r5.<com.mkulesh.micromath.formula.TermField: void setError(java.lang.String,com.mkulesh.micromath.formula.TermField$ErrorNotification,com.mkulesh.micromath.widgets.CustomLayout)>(r6, $r8, $r9);

        return;

     label3:
        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: android.content.Context getContext()>();

        r6 = virtualinvoke $r1.<com.mkulesh.micromath.formula.FormulaTermFunction$ErrorCode: java.lang.String getDescription(android.content.Context)>($r4);

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = $r2;

        r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r6, $r10);

        goto label2;

     label4:
        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: android.content.Context getContext()>();

        r6 = virtualinvoke $r1.<com.mkulesh.micromath.formula.FormulaTermFunction$ErrorCode: java.lang.String getDescription(android.content.Context)>($r4);

        goto label2;

     label5:
        return;
    }
    public com.mkulesh.micromath.formula.TermField getArgumentTerm()
    {
        com.mkulesh.micromath.formula.FormulaTermFunction r0;
        com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType $r1, $r2;
        java.util.ArrayList $r3;
        java.lang.Object $r4;
        com.mkulesh.micromath.formula.TermField $r5;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermFunction;

        $r1 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $r2 = <com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType NTHRT_LAYOUT>;

        if $r1 != $r2 goto label1;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.util.ArrayList terms>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(1);

        $r5 = (com.mkulesh.micromath.formula.TermField) $r4;

        return $r5;

     label1:
        $r5 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTerm: com.mkulesh.micromath.formula.TermField getArgumentTerm()>();

        return $r5;
    }
    public com.mkulesh.micromath.math.CalculatedValue$ValueType getDerivativeValue(java.lang.String, com.mkulesh.micromath.formula.CalculaterTask, com.mkulesh.micromath.math.CalculatedValue) throws com.mkulesh.micromath.formula.CalculaterTask$CancelException
    {
        com.mkulesh.micromath.formula.FormulaTermFunction r0;
        java.lang.String $r1, r17;
        com.mkulesh.micromath.formula.CalculaterTask $r2;
        com.mkulesh.micromath.math.CalculatedValue $r3, r4, r5, $r14, $r15;
        com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType $r6;
        java.util.ArrayList $r7;
        int $i0, $i1, $i3;
        java.lang.Object $r8;
        com.mkulesh.micromath.formula.TermField $r9;
        com.mkulesh.micromath.math.CalculatedValue[] $r10;
        int[] $r11;
        com.mkulesh.micromath.math.CalculatedValue$ErrorType $r12;
        com.mkulesh.micromath.math.CalculatedValue$ValueType $r13;
        double $d0, $d1;
        boolean $z0;
        byte $b2;
        com.mkulesh.micromath.formula.Equation $r16;
        com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType r18, $r20;
        com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType[] $r19;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermFunction;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.mkulesh.micromath.formula.CalculaterTask;

        $r3 := @parameter2: com.mkulesh.micromath.math.CalculatedValue;

        $r6 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        if $r6 == null goto label03;

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.util.ArrayList terms>;

        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label03;

        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: void ensureArgValSize()>();

        $i0 = 0;

     label01:
        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.util.ArrayList terms>;

        $i1 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label02;

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.util.ArrayList terms>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r9 = (com.mkulesh.micromath.formula.TermField) $r8;

        $r10 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue[] argVal>;

        r4 = $r10[$i0];

        virtualinvoke $r9.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.math.CalculatedValue$ValueType getValue(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.math.CalculatedValue)>($r2, r4);

        $i0 = $i0 + 1;

        goto label01;

     label02:
        $r10 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue[] argVal>;

        r4 = $r10[0];

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.util.ArrayList terms>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r9 = (com.mkulesh.micromath.formula.TermField) $r8;

        r5 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a0derVal>;

        virtualinvoke $r9.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.math.CalculatedValue$ValueType getDerivativeValue(java.lang.String,com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.math.CalculatedValue)>($r1, $r2, r5);

        $r11 = <com.mkulesh.micromath.formula.FormulaTermFunction$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaTermFunction$FunctionType>;

        $r6 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $i0 = virtualinvoke $r6.<com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: int ordinal()>();

        $i0 = $r11[$i0];

        lookupswitch($i0)
        {
            case 1: goto label04;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label07;
            case 5: goto label08;
            case 6: goto label09;
            case 7: goto label10;
            case 8: goto label11;
            case 9: goto label12;
            case 10: goto label34;
            case 11: goto label13;
            case 12: goto label14;
            case 13: goto label15;
            case 14: goto label16;
            case 15: goto label17;
            case 16: goto label17;
            case 17: goto label18;
            case 18: goto label19;
            case 19: goto label19;
            case 20: goto label34;
            case 21: goto label23;
            case 22: goto label24;
            case 23: goto label34;
            case 24: goto label34;
            case 25: goto label34;
            case 26: goto label34;
            case 27: goto label34;
            case 28: goto label27;
            case 29: goto label34;
            case 30: goto label34;
            case 31: goto label34;
            case 32: goto label28;
            case 33: goto label34;
            default: goto label03;
        };

     label03:
        $r12 = <com.mkulesh.micromath.math.CalculatedValue$ErrorType: com.mkulesh.micromath.math.CalculatedValue$ErrorType TERM_NOT_READY>;

        $r13 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType invalidate(com.mkulesh.micromath.math.CalculatedValue$ErrorType)>($r12);

        return $r13;

     label04:
        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a0derVal>;

        $r13 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType assign(com.mkulesh.micromath.math.CalculatedValue)>(r4);

        return $r13;

     label05:
        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType cos(com.mkulesh.micromath.math.CalculatedValue)>(r4);

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a0derVal>;

        $r13 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>($r3, r4);

        return $r13;

     label06:
        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r4, r4);

        r4 = <com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue ONE>;

        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType subtract(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r4, $r3);

        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType sqrt(com.mkulesh.micromath.math.CalculatedValue)>($r3);

        r4 = <com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue ONE>;

        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType divide(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r4, $r3);

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a0derVal>;

        $r13 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>($r3, r4);

        return $r13;

     label07:
        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType cosh(com.mkulesh.micromath.math.CalculatedValue)>(r4);

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a0derVal>;

        $r13 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>($r3, r4);

        return $r13;

     label08:
        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType sin(com.mkulesh.micromath.math.CalculatedValue)>(r4);

        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(double)>(-1.0);

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a0derVal>;

        $r13 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>($r3, r4);

        return $r13;

     label09:
        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r4, r4);

        r4 = <com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue ONE>;

        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType subtract(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r4, $r3);

        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType sqrt(com.mkulesh.micromath.math.CalculatedValue)>($r3);

        r4 = <com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue MINUS_ONE>;

        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType divide(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r4, $r3);

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a0derVal>;

        $r13 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>($r3, r4);

        return $r13;

     label10:
        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType sinh(com.mkulesh.micromath.math.CalculatedValue)>(r4);

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a0derVal>;

        $r13 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>($r3, r4);

        return $r13;

     label11:
        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType tan(com.mkulesh.micromath.math.CalculatedValue)>(r4);

        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>($r3, $r3);

        r4 = <com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue ONE>;

        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType add(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r4, $r3);

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a0derVal>;

        $r13 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>($r3, r4);

        return $r13;

     label12:
        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r4, r4);

        r4 = <com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue ONE>;

        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType add(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r4, $r3);

        r4 = <com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue ONE>;

        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType divide(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r4, $r3);

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a0derVal>;

        $r13 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>($r3, r4);

        return $r13;

     label13:
        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType cosh(com.mkulesh.micromath.math.CalculatedValue)>(r4);

        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>($r3, $r3);

        r4 = <com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue ONE>;

        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType divide(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r4, $r3);

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a0derVal>;

        $r13 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>($r3, r4);

        return $r13;

     label14:
        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType exp(com.mkulesh.micromath.math.CalculatedValue)>(r4);

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a0derVal>;

        $r13 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>($r3, r4);

        return $r13;

     label15:
        r5 = <com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue ONE>;

        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType divide(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r5, r4);

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a0derVal>;

        $r13 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>($r3, r4);

        return $r13;

     label16:
        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType assign(com.mkulesh.micromath.math.CalculatedValue)>(r4);

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double log(double)>(10.0);

        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(double)>($d0);

        r4 = <com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue ONE>;

        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType divide(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r4, $r3);

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a0derVal>;

        $r13 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>($r3, r4);

        return $r13;

     label17:
        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType sqrt(com.mkulesh.micromath.math.CalculatedValue)>(r4);

        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(double)>(2.0);

        r4 = <com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue ONE>;

        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType divide(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r4, $r3);

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a0derVal>;

        $r13 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>($r3, r4);

        return $r13;

     label18:
        $i0 = virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: int getInteger()>();

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.util.ArrayList terms>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(1);

        $r9 = (com.mkulesh.micromath.formula.TermField) $r8;

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a1derVal>;

        virtualinvoke $r9.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.math.CalculatedValue$ValueType getDerivativeValue(java.lang.String,com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.math.CalculatedValue)>($r1, $r2, r4);

        $i1 = $i0 + -1;

        $d0 = (double) $i1;

        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>($d0);

        $r10 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue[] argVal>;

        r4 = $r10[1];

        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType pow(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r4, $r3);

        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType nthRoot(com.mkulesh.micromath.math.CalculatedValue,int)>($r3, $i0);

        $d0 = (double) $i0;

        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(double)>($d0);

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a1derVal>;

        $r13 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType divide(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r4, $r3);

        return $r13;

     label19:
        $z0 = virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: boolean isComplex()>();

        if $z0 == 0 goto label20;

        $r12 = <com.mkulesh.micromath.math.CalculatedValue$ErrorType: com.mkulesh.micromath.math.CalculatedValue$ErrorType PASSED_COMPLEX>;

        $r13 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType invalidate(com.mkulesh.micromath.math.CalculatedValue$ErrorType)>($r12);

        return $r13;

     label20:
        $d0 = virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $b2 = $d0 cmpl 0.0;

        if $b2 < 0 goto label22;

        $d0 = 1.0;

     label21:
        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a0derVal>;

        $d1 = virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $d0 = $d0 * $d1;

        $r13 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>($d0);

        return $r13;

     label22:
        $d0 = -1.0;

        goto label21;

     label23:
        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a0derVal>;

        $d0 = virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $r13 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>($d0);

        return $r13;

     label24:
        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a0derVal>;

        $z0 = virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: boolean isComplex()>();

        if $z0 == 0 goto label26;

        r4 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a0derVal>;

        $d0 = virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: double getImaginary()>();

     label25:
        $r13 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>($d0);

        return $r13;

     label26:
        $d0 = 0.0;

        goto label25;

     label27:
        $r10 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue[] argVal>;

        r5 = $r10[1];

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.util.ArrayList terms>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(1);

        $r9 = (com.mkulesh.micromath.formula.TermField) $r8;

        $r14 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a1derVal>;

        virtualinvoke $r9.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.math.CalculatedValue$ValueType getDerivativeValue(java.lang.String,com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.math.CalculatedValue)>($r1, $r2, $r14);

        $r14 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r14.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        $r15 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a1derVal>;

        virtualinvoke $r14.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r5, $r15);

        $r15 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a0derVal>;

        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r4, $r15);

        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType add(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>($r3, $r14);

        virtualinvoke $r14.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType hypot(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r4, r5);

        $r13 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType divide(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>($r3, $r14);

        return $r13;

     label28:
        $r16 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.Equation linkedFunction>;

        if $r16 == null goto label03;

        $r16 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.Equation linkedFunction>;

        $r10 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue[] argVal>;

        $z0 = virtualinvoke $r16.<com.mkulesh.micromath.formula.Equation: boolean setArgumentValues(com.mkulesh.micromath.math.CalculatedValue[])>($r10);

        if $z0 == 0 goto label03;

        $r16 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.Equation linkedFunction>;

        $r7 = virtualinvoke $r16.<com.mkulesh.micromath.formula.Equation: java.util.ArrayList getArguments()>();

        if $r7 == null goto label29;

        $r16 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.Equation linkedFunction>;

        $r7 = virtualinvoke $r16.<com.mkulesh.micromath.formula.Equation: java.util.ArrayList getArguments()>();

        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.util.ArrayList terms>;

        $i1 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if $i0 == $i1 goto label30;

     label29:
        $r13 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>(0.0);

        return $r13;

     label30:
        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>(0.0);

        r4 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        $i0 = 0;

     label31:
        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.util.ArrayList terms>;

        $i1 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label33;

        $r16 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.Equation linkedFunction>;

        $r7 = virtualinvoke $r16.<com.mkulesh.micromath.formula.Equation: java.util.ArrayList getArguments()>();

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        r17 = (java.lang.String) $r8;

        $r16 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.Equation linkedFunction>;

        virtualinvoke $r16.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.math.CalculatedValue$ValueType getDerivativeValue(java.lang.String,com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.math.CalculatedValue)>(r17, $r2, r4);

        if $i0 <= 0 goto label32;

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.util.ArrayList terms>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r9 = (com.mkulesh.micromath.formula.TermField) $r8;

        r5 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a0derVal>;

        virtualinvoke $r9.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.math.CalculatedValue$ValueType getDerivativeValue(java.lang.String,com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.math.CalculatedValue)>($r1, $r2, r5);

     label32:
        r5 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue a0derVal>;

        virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r4, r5);

        virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType add(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>($r3, r4);

        $i0 = $i0 + 1;

        goto label31;

     label33:
        $r13 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType getValueType()>();

        return $r13;

     label34:
        r18 = <com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType INDEPENDENT>;

        $i0 = 0;

     label35:
        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.util.ArrayList terms>;

        $i1 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label36;

        $i1 = virtualinvoke r18.<com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: int ordinal()>();

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.util.ArrayList terms>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r9 = (com.mkulesh.micromath.formula.TermField) $r8;

        r18 = virtualinvoke $r9.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType isDifferentiable(java.lang.String)>($r1);

        $i3 = virtualinvoke r18.<com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: int ordinal()>();

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i3);

        $r19 = staticinvoke <com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType[] values()>();

        r18 = $r19[$i1];

        $i0 = $i0 + 1;

        goto label35;

     label36:
        $r20 = <com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType INDEPENDENT>;

        if r18 != $r20 goto label37;

        $r13 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>(0.0);

        return $r13;

     label37:
        $r12 = <com.mkulesh.micromath.math.CalculatedValue$ErrorType: com.mkulesh.micromath.math.CalculatedValue$ErrorType NOT_A_NUMBER>;

        $r13 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType invalidate(com.mkulesh.micromath.math.CalculatedValue$ErrorType)>($r12);

        return $r13;
    }
    public com.mkulesh.micromath.widgets.CustomTextView getFunctionTerm()
    {
        com.mkulesh.micromath.formula.FormulaTermFunction r0;
        com.mkulesh.micromath.widgets.CustomTextView r1;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermFunction;

        r1 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.widgets.CustomTextView functionTerm>;

        return r1;
    }
    public com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType getFunctionType()
    {
        com.mkulesh.micromath.formula.FormulaTermFunction r0;
        com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType r1;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermFunction;

        r1 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        return r1;
    }
    public java.lang.String getTermCode()
    {
        com.mkulesh.micromath.formula.FormulaTermFunction r0;
        android.content.Context $r1;
        com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType $r2;
        java.lang.String $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;
        java.util.ArrayList $r5;
        int $i0;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermFunction;

        $r1 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: android.content.Context getContext()>();

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType getFunctionType()>();

        $r3 = staticinvoke <com.mkulesh.micromath.formula.FormulaTermFunction: java.lang.String getFunctionString(android.content.Context,com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType)>($r1, $r2);

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $z0 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: boolean isLink()>();

        if $z0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.lang.String functionLinkName>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.util.ArrayList terms>;

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i0 <= 1 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.util.ArrayList terms>;

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        return $r3;
    }
    public com.mkulesh.micromath.formula.FormulaTerm$TermType getTermType()
    {
        com.mkulesh.micromath.formula.FormulaTermFunction r0;
        com.mkulesh.micromath.formula.FormulaTerm$TermType r1;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermFunction;

        r1 = <com.mkulesh.micromath.formula.FormulaTerm$TermType: com.mkulesh.micromath.formula.FormulaTerm$TermType FUNCTION>;

        return r1;
    }
    public com.mkulesh.micromath.math.CalculatedValue$ValueType getValue(com.mkulesh.micromath.formula.CalculaterTask, com.mkulesh.micromath.math.CalculatedValue) throws com.mkulesh.micromath.formula.CalculaterTask$CancelException
    {
        com.mkulesh.micromath.formula.FormulaTermFunction r0;
        com.mkulesh.micromath.formula.CalculaterTask $r1;
        com.mkulesh.micromath.math.CalculatedValue $r2, r3, r13;
        java.lang.Exception r4;
        com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType $r5, $r14;
        java.util.ArrayList $r6;
        int $i0, $i1;
        java.lang.Object $r7;
        com.mkulesh.micromath.formula.TermField $r8;
        com.mkulesh.micromath.math.CalculatedValue[] $r9;
        int[] $r10;
        com.mkulesh.micromath.math.CalculatedValue$ErrorType $r11;
        com.mkulesh.micromath.math.CalculatedValue$ValueType $r12;
        boolean $z0;
        double $d0, $d1;
        byte $b2;
        com.mkulesh.micromath.formula.Equation $r15;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermFunction;

        $r1 := @parameter0: com.mkulesh.micromath.formula.CalculaterTask;

        $r2 := @parameter1: com.mkulesh.micromath.math.CalculatedValue;

        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        if $r5 == null goto label03;

        $r6 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.util.ArrayList terms>;

        $i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label03;

        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: void ensureArgValSize()>();

        $i0 = 0;

     label01:
        $r6 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.util.ArrayList terms>;

        $i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label02;

        $r6 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.util.ArrayList terms>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r8 = (com.mkulesh.micromath.formula.TermField) $r7;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue[] argVal>;

        r3 = $r9[$i0];

        virtualinvoke $r8.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.math.CalculatedValue$ValueType getValue(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.math.CalculatedValue)>($r1, r3);

        $i0 = $i0 + 1;

        goto label01;

     label02:
        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue[] argVal>;

        r3 = $r9[0];

        $r10 = <com.mkulesh.micromath.formula.FormulaTermFunction$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaTermFunction$FunctionType>;

        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $i0 = virtualinvoke $r5.<com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: int ordinal()>();

        $i0 = $r10[$i0];

        lookupswitch($i0)
        {
            case 1: goto label04;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label07;
            case 5: goto label08;
            case 6: goto label09;
            case 7: goto label10;
            case 8: goto label11;
            case 9: goto label12;
            case 10: goto label13;
            case 11: goto label16;
            case 12: goto label17;
            case 13: goto label18;
            case 14: goto label19;
            case 15: goto label20;
            case 16: goto label20;
            case 17: goto label21;
            case 18: goto label22;
            case 19: goto label22;
            case 20: goto label23;
            case 21: goto label24;
            case 22: goto label25;
            case 23: goto label28;
            case 24: goto label29;
            case 25: goto label30;
            case 26: goto label31;
            case 27: goto label31;
            case 28: goto label36;
            case 29: goto label37;
            case 30: goto label41;
            case 31: goto label43;
            case 32: goto label49;
            case 33: goto label49;
            default: goto label03;
        };

     label03:
        $r11 = <com.mkulesh.micromath.math.CalculatedValue$ErrorType: com.mkulesh.micromath.math.CalculatedValue$ErrorType TERM_NOT_READY>;

        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType invalidate(com.mkulesh.micromath.math.CalculatedValue$ErrorType)>($r11);

        return $r12;

     label04:
        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType assign(com.mkulesh.micromath.math.CalculatedValue)>(r3);

        return $r12;

     label05:
        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType sin(com.mkulesh.micromath.math.CalculatedValue)>(r3);

        return $r12;

     label06:
        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType asin(com.mkulesh.micromath.math.CalculatedValue)>(r3);

        return $r12;

     label07:
        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType sinh(com.mkulesh.micromath.math.CalculatedValue)>(r3);

        return $r12;

     label08:
        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType cos(com.mkulesh.micromath.math.CalculatedValue)>(r3);

        return $r12;

     label09:
        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType acos(com.mkulesh.micromath.math.CalculatedValue)>(r3);

        return $r12;

     label10:
        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType cosh(com.mkulesh.micromath.math.CalculatedValue)>(r3);

        return $r12;

     label11:
        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType tan(com.mkulesh.micromath.math.CalculatedValue)>(r3);

        return $r12;

     label12:
        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType atan(com.mkulesh.micromath.math.CalculatedValue)>(r3);

        return $r12;

     label13:
        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue[] argVal>;

        r13 = $r9[1];

        $z0 = virtualinvoke r3.<com.mkulesh.micromath.math.CalculatedValue: boolean isComplex()>();

        if $z0 != 0 goto label14;

        $z0 = virtualinvoke r13.<com.mkulesh.micromath.math.CalculatedValue: boolean isComplex()>();

        if $z0 == 0 goto label15;

     label14:
        $r11 = <com.mkulesh.micromath.math.CalculatedValue$ErrorType: com.mkulesh.micromath.math.CalculatedValue$ErrorType PASSED_COMPLEX>;

        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType invalidate(com.mkulesh.micromath.math.CalculatedValue$ErrorType)>($r11);

        return $r12;

     label15:
        $d0 = virtualinvoke r3.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $d1 = virtualinvoke r13.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double atan2(double,double)>($d0, $d1);

        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>($d0);

        return $r12;

     label16:
        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType tanh(com.mkulesh.micromath.math.CalculatedValue)>(r3);

        return $r12;

     label17:
        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType exp(com.mkulesh.micromath.math.CalculatedValue)>(r3);

        return $r12;

     label18:
        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType log(com.mkulesh.micromath.math.CalculatedValue)>(r3);

        return $r12;

     label19:
        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType log10(com.mkulesh.micromath.math.CalculatedValue)>(r3);

        return $r12;

     label20:
        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType sqrt(com.mkulesh.micromath.math.CalculatedValue)>(r3);

        return $r12;

     label21:
        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue[] argVal>;

        r13 = $r9[1];

        $i0 = virtualinvoke r3.<com.mkulesh.micromath.math.CalculatedValue: int getInteger()>();

        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType nthRoot(com.mkulesh.micromath.math.CalculatedValue,int)>(r13, $i0);

        return $r12;

     label22:
        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType abs(com.mkulesh.micromath.math.CalculatedValue)>(r3);

        return $r12;

     label23:
        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType conj(com.mkulesh.micromath.math.CalculatedValue)>(r3);

        return $r12;

     label24:
        $d0 = virtualinvoke r3.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>($d0);

        return $r12;

     label25:
        $z0 = virtualinvoke r3.<com.mkulesh.micromath.math.CalculatedValue: boolean isComplex()>();

        if $z0 == 0 goto label27;

        $d0 = virtualinvoke r3.<com.mkulesh.micromath.math.CalculatedValue: double getImaginary()>();

     label26:
        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>($d0);

        return $r12;

     label27:
        $d0 = 0.0;

        goto label26;

     label28:
        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType ceil(com.mkulesh.micromath.math.CalculatedValue)>(r3);

        return $r12;

     label29:
        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType floor(com.mkulesh.micromath.math.CalculatedValue)>(r3);

        return $r12;

     label30:
        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType random(com.mkulesh.micromath.math.CalculatedValue)>(r3);

        return $r12;

     label31:
        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue[] argVal>;

        r13 = $r9[1];

        $z0 = virtualinvoke r3.<com.mkulesh.micromath.math.CalculatedValue: boolean isComplex()>();

        if $z0 != 0 goto label32;

        $z0 = virtualinvoke r13.<com.mkulesh.micromath.math.CalculatedValue: boolean isComplex()>();

        if $z0 == 0 goto label33;

     label32:
        $r11 = <com.mkulesh.micromath.math.CalculatedValue$ErrorType: com.mkulesh.micromath.math.CalculatedValue$ErrorType PASSED_COMPLEX>;

        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType invalidate(com.mkulesh.micromath.math.CalculatedValue$ErrorType)>($r11);

        return $r12;

     label33:
        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $r14 = <com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType MAX>;

        if $r5 != $r14 goto label35;

        $d0 = virtualinvoke r3.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $d1 = virtualinvoke r13.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d0, $d1);

     label34:
        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>($d0);

        return $r12;

     label35:
        $d0 = virtualinvoke r3.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $d1 = virtualinvoke r13.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>($d0, $d1);

        goto label34;

     label36:
        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue[] argVal>;

        r13 = $r9[1];

        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType hypot(com.mkulesh.micromath.math.CalculatedValue,com.mkulesh.micromath.math.CalculatedValue)>(r3, r13);

        return $r12;

     label37:
        $z0 = virtualinvoke r3.<com.mkulesh.micromath.math.CalculatedValue: boolean isComplex()>();

        if $z0 == 0 goto label38;

        $r11 = <com.mkulesh.micromath.math.CalculatedValue$ErrorType: com.mkulesh.micromath.math.CalculatedValue$ErrorType PASSED_COMPLEX>;

        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType invalidate(com.mkulesh.micromath.math.CalculatedValue$ErrorType)>($r11);

        return $r12;

     label38:
        $d0 = virtualinvoke r3.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $b2 = $d0 cmpl 0.0;

        if $b2 <= 0 goto label40;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue[] argVal>;

        r3 = $r9[1];

     label39:
        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType assign(com.mkulesh.micromath.math.CalculatedValue)>(r3);

        return $r12;

     label40:
        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue[] argVal>;

        r3 = $r9[2];

        goto label39;

     label41:
        $z0 = virtualinvoke r3.<com.mkulesh.micromath.math.CalculatedValue: boolean isComplex()>();

        if $z0 == 0 goto label42;

        $r11 = <com.mkulesh.micromath.math.CalculatedValue$ErrorType: com.mkulesh.micromath.math.CalculatedValue$ErrorType PASSED_COMPLEX>;

        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType invalidate(com.mkulesh.micromath.math.CalculatedValue$ErrorType)>($r11);

        return $r12;

     label42:
        $d0 = virtualinvoke r3.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double signum(double)>($d0);

        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>($d0);

        return $r12;

     label43:
        $z0 = virtualinvoke r3.<com.mkulesh.micromath.math.CalculatedValue: boolean isComplex()>();

        if $z0 == 0 goto label44;

        $r11 = <com.mkulesh.micromath.math.CalculatedValue$ErrorType: com.mkulesh.micromath.math.CalculatedValue$ErrorType PASSED_COMPLEX>;

        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType invalidate(com.mkulesh.micromath.math.CalculatedValue$ErrorType)>($r11);

        return $r12;

     label44:
        $d0 = virtualinvoke r3.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

     label45:
        $i0 = (int) $d0;

     label46:
        $d0 = staticinvoke <org.apache.commons.math3.util.CombinatoricsUtils: double factorialDouble(int)>($i0);

        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>($d0);

     label47:
        return $r12;

     label48:
        r4 := @caughtexception;

        $r11 = <com.mkulesh.micromath.math.CalculatedValue$ErrorType: com.mkulesh.micromath.math.CalculatedValue$ErrorType NOT_A_NUMBER>;

        $r12 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType invalidate(com.mkulesh.micromath.math.CalculatedValue$ErrorType)>($r11);

        return $r12;

     label49:
        $r15 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.Equation linkedFunction>;

        if $r15 == null goto label03;

        $r15 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.Equation linkedFunction>;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.math.CalculatedValue[] argVal>;

        $z0 = virtualinvoke $r15.<com.mkulesh.micromath.formula.Equation: boolean setArgumentValues(com.mkulesh.micromath.math.CalculatedValue[])>($r9);

        if $z0 == 0 goto label03;

        $r15 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.Equation linkedFunction>;

        $r12 = virtualinvoke $r15.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.math.CalculatedValue$ValueType getValue(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.math.CalculatedValue)>($r1, $r2);

        return $r12;

        catch java.lang.Exception from label44 to label45 with label48;
        catch java.lang.Exception from label46 to label47 with label48;
    }
    protected com.mkulesh.micromath.widgets.CustomTextView initializeSymbol(com.mkulesh.micromath.widgets.CustomTextView)
    {
        com.mkulesh.micromath.formula.FormulaTermFunction r0;
        com.mkulesh.micromath.widgets.CustomTextView $r1;
        android.content.Context $r2;
        android.content.res.Resources $r3;
        java.lang.CharSequence $r4;
        java.lang.String $r5, $r6;
        boolean $z0;
        com.mkulesh.micromath.widgets.CustomTextView$SymbolType $r7;
        com.mkulesh.micromath.formula.FormulaBase $r8;
        com.mkulesh.micromath.formula.FormulaList $r9;
        android.support.v7.app.AppCompatActivity $r10;
        int[] $r11;
        com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType $r12, $r13;
        int $i0;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermFunction;

        $r1 := @parameter0: com.mkulesh.micromath.widgets.CustomTextView;

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: java.lang.CharSequence getText()>();

        if $r4 == null goto label11;

        $r4 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: java.lang.CharSequence getText()>();

        $r5 = interfaceinvoke $r4.<java.lang.CharSequence: java.lang.String toString()>();

        $r6 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String getString(int)>(2131099957);

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label05;

        $r7 = <com.mkulesh.micromath.widgets.CustomTextView$SymbolType: com.mkulesh.micromath.widgets.CustomTextView$SymbolType TEXT>;

        $r8 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r9 = virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r10 = virtualinvoke $r9.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void prepare(com.mkulesh.micromath.widgets.CustomTextView$SymbolType,android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.FormulaChangeIf)>($r7, $r10, r0);

        $r11 = <com.mkulesh.micromath.formula.FormulaTermFunction$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaTermFunction$FunctionType>;

        $r12 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $i0 = virtualinvoke $r12.<com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: int ordinal()>();

        $i0 = $r11[$i0];

        lookupswitch($i0)
        {
            case 20: goto label04;
            case 31: goto label03;
            default: goto label01;
        };

     label01:
        $r5 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.lang.String getFunctionLabel()>();

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void setText(java.lang.CharSequence)>($r5);

     label02:
        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.widgets.CustomTextView functionTerm> = $r1;

        return $r1;

     label03:
        $r5 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String getString(int)>(2131099936);

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void setText(java.lang.CharSequence)>($r5);

        goto label02;

     label04:
        $r7 = <com.mkulesh.micromath.widgets.CustomTextView$SymbolType: com.mkulesh.micromath.widgets.CustomTextView$SymbolType HOR_LINE>;

        $r8 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r9 = virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r10 = virtualinvoke $r9.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void prepare(com.mkulesh.micromath.widgets.CustomTextView$SymbolType,android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.FormulaChangeIf)>($r7, $r10, r0);

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void setText(java.lang.CharSequence)>("_");

        goto label02;

     label05:
        $r6 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String getString(int)>(2131099944);

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label08;

        $r12 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $r13 = <com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType ABS_LAYOUT>;

        if $r12 != $r13 goto label07;

        $r7 = <com.mkulesh.micromath.widgets.CustomTextView$SymbolType: com.mkulesh.micromath.widgets.CustomTextView$SymbolType VERT_LINE>;

     label06:
        $r8 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r9 = virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r10 = virtualinvoke $r9.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void prepare(com.mkulesh.micromath.widgets.CustomTextView$SymbolType,android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.FormulaChangeIf)>($r7, $r10, r0);

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void setText(java.lang.CharSequence)>(".");

        return $r1;

     label07:
        $r7 = <com.mkulesh.micromath.widgets.CustomTextView$SymbolType: com.mkulesh.micromath.widgets.CustomTextView$SymbolType LEFT_BRACKET>;

        goto label06;

     label08:
        $r6 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String getString(int)>(2131099964);

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label11;

        $r12 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $r13 = <com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType ABS_LAYOUT>;

        if $r12 != $r13 goto label10;

        $r7 = <com.mkulesh.micromath.widgets.CustomTextView$SymbolType: com.mkulesh.micromath.widgets.CustomTextView$SymbolType VERT_LINE>;

     label09:
        $r8 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r9 = virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r10 = virtualinvoke $r9.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void prepare(com.mkulesh.micromath.widgets.CustomTextView$SymbolType,android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.FormulaChangeIf)>($r7, $r10, r0);

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void setText(java.lang.CharSequence)>(".");

        return $r1;

     label10:
        $r7 = <com.mkulesh.micromath.widgets.CustomTextView$SymbolType: com.mkulesh.micromath.widgets.CustomTextView$SymbolType RIGHT_BRACKET>;

        goto label09;

     label11:
        return $r1;
    }
    protected com.mkulesh.micromath.widgets.CustomEditText initializeTerm(com.mkulesh.micromath.widgets.CustomEditText, android.widget.LinearLayout)
    {
        com.mkulesh.micromath.formula.FormulaTermFunction r0;
        com.mkulesh.micromath.widgets.CustomEditText $r1;
        android.widget.LinearLayout $r2;
        android.text.Editable $r3;
        java.lang.String $r4, $r9;
        com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType $r5, $r6;
        android.content.Context $r7;
        android.content.res.Resources $r8;
        boolean $z0;
        com.mkulesh.micromath.formula.FormulaBase $r10;
        int $i0;
        com.mkulesh.micromath.formula.TermField $r11;
        com.mkulesh.micromath.formula.TermField$BracketsType $r12;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermFunction;

        $r1 := @parameter0: com.mkulesh.micromath.widgets.CustomEditText;

        $r2 := @parameter1: android.widget.LinearLayout;

        $r3 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomEditText: android.text.Editable getText()>();

        if $r3 == null goto label7;

        $r3 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomEditText: android.text.Editable getText()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $r6 = <com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType FUNCTION_INDEX>;

        if $r5 != $r6 goto label1;

        $r7 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r8.<android.content.res.Resources: java.lang.String getString(int)>(2131099921);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label1;

        $r10 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $i0 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: int getArgumentDepth()>();

        $r11 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.TermField addTerm(com.mkulesh.micromath.formula.FormulaBase,android.widget.LinearLayout,int,com.mkulesh.micromath.widgets.CustomEditText,com.mkulesh.micromath.widgets.FormulaChangeIf,int)>($r10, $r2, -1, $r1, r0, $i0);

        $r12 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType NEVER>;

        $r11.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$BracketsType bracketsType> = $r12;

        return $r1;

     label1:
        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $r6 = <com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType FUNCTION_INDEX>;

        if $r5 == $r6 goto label5;

        $r7 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r8.<android.content.res.Resources: java.lang.String getString(int)>(2131099921);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label5;

        $r10 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r11 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.TermField addTerm(com.mkulesh.micromath.formula.FormulaBase,android.widget.LinearLayout,int,com.mkulesh.micromath.widgets.CustomEditText,com.mkulesh.micromath.widgets.FormulaChangeIf,int)>($r10, $r2, -1, $r1, r0, 0);

        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $r6 = <com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType FACTORIAL>;

        if $r5 == $r6 goto label2;

        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $r6 = <com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType CONJUGATE_LAYOUT>;

        if $r5 != $r6 goto label4;

     label2:
        $r12 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType ALWAYS>;

     label3:
        $r11.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$BracketsType bracketsType> = $r12;

        return $r1;

     label4:
        $r12 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType NEVER>;

        goto label3;

     label5:
        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $r6 = <com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType NTHRT_LAYOUT>;

        if $r5 != $r6 goto label6;

        $r7 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r8.<android.content.res.Resources: java.lang.String getString(int)>(2131099945);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label6;

        $r10 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r11 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.TermField addTerm(com.mkulesh.micromath.formula.FormulaBase,android.widget.LinearLayout,int,com.mkulesh.micromath.widgets.CustomEditText,com.mkulesh.micromath.widgets.FormulaChangeIf,int)>($r10, $r2, -1, $r1, r0, 3);

        $r12 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType NEVER>;

        $r11.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$BracketsType bracketsType> = $r12;

        return $r1;

     label6:
        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $r6 = <com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType NTHRT_LAYOUT>;

        if $r5 != $r6 goto label7;

        $r7 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r8.<android.content.res.Resources: java.lang.String getString(int)>(2131099965);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label7;

        $r10 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r11 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.TermField addTerm(com.mkulesh.micromath.formula.FormulaBase,android.widget.LinearLayout,int,com.mkulesh.micromath.widgets.CustomEditText,com.mkulesh.micromath.widgets.FormulaChangeIf,int)>($r10, $r2, -1, $r1, r0, 0);

        $r12 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType NEVER>;

        $r11.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$BracketsType bracketsType> = $r12;

     label7:
        return $r1;
    }
    public boolean isContentValid(com.mkulesh.micromath.formula.FormulaBase$ValidationPassType)
    {
        com.mkulesh.micromath.formula.FormulaTermFunction r0;
        com.mkulesh.micromath.formula.FormulaBase$ValidationPassType $r1;
        int[] $r2;
        int $i0, $i1;
        boolean $z0, z1, $z2;
        com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType $r3, $r9;
        com.mkulesh.micromath.formula.FormulaBase $r4, $r13;
        com.mkulesh.micromath.formula.FormulaList $r5;
        java.lang.String $r6;
        java.util.ArrayList $r7;
        com.mkulesh.micromath.formula.FormulaTermFunction$ErrorCode r8;
        java.lang.StringBuilder $r10;
        com.mkulesh.micromath.formula.Equation $r11;
        com.mkulesh.micromath.formula.LinkHolder $r12;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermFunction;

        $r1 := @parameter0: com.mkulesh.micromath.formula.FormulaBase$ValidationPassType;

        $r2 = <com.mkulesh.micromath.formula.FormulaTermFunction$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaBase$ValidationPassType>;

        $i0 = virtualinvoke $r1.<com.mkulesh.micromath.formula.FormulaBase$ValidationPassType: int ordinal()>();

        $i0 = $r2[$i0];

        lookupswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label11;
            default: goto label01;
        };

     label01:
        return 1;

     label02:
        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.Equation linkedFunction> = null;

        $z0 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTerm: boolean isContentValid(com.mkulesh.micromath.formula.FormulaBase$ValidationPassType)>($r1);

        z1 = $z0;

        if $z0 == 0 goto label12;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $z2 = virtualinvoke $r3.<com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: boolean isLink()>();

        if $z2 == 0 goto label12;

        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r5 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r6 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.lang.String functionLinkName>;

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.util.ArrayList terms>;

        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $i1 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaBase: int getId()>();

        $r4 = virtualinvoke $r5.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase getFormula(java.lang.String,int,int,boolean)>($r6, $i0, $i1, 0);

        r8 = <com.mkulesh.micromath.formula.FormulaTermFunction$ErrorCode: com.mkulesh.micromath.formula.FormulaTermFunction$ErrorCode NO_ERROR>;

        if $r4 == null goto label03;

        $z0 = $r4 instanceof com.mkulesh.micromath.formula.Equation;

        if $z0 != 0 goto label07;

     label03:
        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $r9 = <com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType FUNCTION_LINK>;

        if $r3 != $r9 goto label06;

        r8 = <com.mkulesh.micromath.formula.FormulaTermFunction$ErrorCode: com.mkulesh.micromath.formula.FormulaTermFunction$ErrorCode UNKNOWN_FUNCTION>;

     label04:
        z1 = 0;

     label05:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.lang.String functionLinkName>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.util.ArrayList terms>;

        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r6 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: void setErrorCode(com.mkulesh.micromath.formula.FormulaTermFunction$ErrorCode,java.lang.String)>(r8, $r6);

        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $z0 = $r4 instanceof com.mkulesh.micromath.formula.LinkHolder;

        if $z0 == 0 goto label13;

        $r11 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.Equation linkedFunction>;

        if $r11 == null goto label13;

        $r11 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.Equation linkedFunction>;

        $z0 = virtualinvoke $r11.<com.mkulesh.micromath.formula.Equation: boolean isInterval()>();

        if $z0 != 0 goto label13;

        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r12 = (com.mkulesh.micromath.formula.LinkHolder) $r4;

        $r11 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.Equation linkedFunction>;

        virtualinvoke $r12.<com.mkulesh.micromath.formula.LinkHolder: void addLinkedEquation(com.mkulesh.micromath.formula.Equation)>($r11);

        return z1;

     label06:
        r8 = <com.mkulesh.micromath.formula.FormulaTermFunction$ErrorCode: com.mkulesh.micromath.formula.FormulaTermFunction$ErrorCode UNKNOWN_ARRAY>;

        goto label04;

     label07:
        $i0 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaBase: int getId()>();

        $r13 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $i1 = virtualinvoke $r13.<com.mkulesh.micromath.formula.FormulaBase: int getId()>();

        if $i0 != $i1 goto label08;

        r8 = <com.mkulesh.micromath.formula.FormulaTermFunction$ErrorCode: com.mkulesh.micromath.formula.FormulaTermFunction$ErrorCode RECURSIVE_CALL>;

        z1 = 0;

        goto label05;

     label08:
        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $r9 = <com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType FUNCTION_LINK>;

        if $r3 != $r9 goto label09;

        $r11 = (com.mkulesh.micromath.formula.Equation) $r4;

        $z0 = virtualinvoke $r11.<com.mkulesh.micromath.formula.Equation: boolean isArray()>();

        if $z0 == 0 goto label09;

        r8 = <com.mkulesh.micromath.formula.FormulaTermFunction$ErrorCode: com.mkulesh.micromath.formula.FormulaTermFunction$ErrorCode NOT_A_FUNCTION>;

        z1 = 0;

        goto label05;

     label09:
        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $r9 = <com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType FUNCTION_INDEX>;

        if $r3 != $r9 goto label10;

        $r11 = (com.mkulesh.micromath.formula.Equation) $r4;

        $z0 = virtualinvoke $r11.<com.mkulesh.micromath.formula.Equation: boolean isArray()>();

        if $z0 != 0 goto label10;

        $r11 = (com.mkulesh.micromath.formula.Equation) $r4;

        $z0 = virtualinvoke $r11.<com.mkulesh.micromath.formula.Equation: boolean isInterval()>();

        if $z0 != 0 goto label10;

        r8 = <com.mkulesh.micromath.formula.FormulaTermFunction$ErrorCode: com.mkulesh.micromath.formula.FormulaTermFunction$ErrorCode NOT_AN_ARRAY>;

        z1 = 0;

        goto label05;

     label10:
        $r11 = (com.mkulesh.micromath.formula.Equation) $r4;

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.Equation linkedFunction> = $r11;

        goto label05;

     label11:
        z1 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTerm: boolean isContentValid(com.mkulesh.micromath.formula.FormulaBase$ValidationPassType)>($r1);

        return z1;

     label12:
        return $z0;

     label13:
        return z1;
    }
    public com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType isDifferentiable(java.lang.String)
    {
        com.mkulesh.micromath.formula.FormulaTermFunction r0;
        java.lang.String $r1;
        com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType r2, $r7, $r12;
        com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType $r3;
        int i0, $i1, $i2;
        java.util.ArrayList $r4;
        java.lang.Object $r5;
        com.mkulesh.micromath.formula.TermField $r6;
        com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType[] $r8;
        int[] $r9;
        com.mkulesh.micromath.formula.FormulaTermFunction$ErrorCode r10;
        com.mkulesh.micromath.formula.Equation $r11;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermFunction;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        if $r3 != null goto label01;

        $r7 = <com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType NONE>;

        return $r7;

     label01:
        r2 = <com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType INDEPENDENT>;

        i0 = 0;

     label02:
        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.util.ArrayList terms>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label03;

        $i1 = virtualinvoke r2.<com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: int ordinal()>();

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.util.ArrayList terms>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r6 = (com.mkulesh.micromath.formula.TermField) $r5;

        $r7 = virtualinvoke $r6.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType isDifferentiable(java.lang.String)>($r1);

        $i2 = virtualinvoke $r7.<com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: int ordinal()>();

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        $r8 = staticinvoke <com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType[] values()>();

        r2 = $r8[$i1];

        i0 = i0 + 1;

        goto label02;

     label03:
        $r7 = <com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType NONE>;

        $r9 = <com.mkulesh.micromath.formula.FormulaTermFunction$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaTermFunction$FunctionType>;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        i0 = virtualinvoke $r3.<com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: int ordinal()>();

        i0 = $r9[i0];

        lookupswitch(i0)
        {
            case 1: goto label06;
            case 2: goto label06;
            case 3: goto label06;
            case 4: goto label06;
            case 5: goto label06;
            case 6: goto label06;
            case 7: goto label06;
            case 8: goto label06;
            case 9: goto label06;
            case 10: goto label10;
            case 11: goto label06;
            case 12: goto label06;
            case 13: goto label06;
            case 14: goto label06;
            case 15: goto label06;
            case 16: goto label06;
            case 17: goto label08;
            case 18: goto label06;
            case 19: goto label06;
            case 20: goto label10;
            case 21: goto label06;
            case 22: goto label06;
            case 23: goto label10;
            case 24: goto label10;
            case 25: goto label10;
            case 26: goto label10;
            case 27: goto label10;
            case 28: goto label06;
            case 29: goto label10;
            case 30: goto label10;
            case 31: goto label10;
            case 32: goto label07;
            case 33: goto label10;
            default: goto label04;
        };

     label04:
        r10 = <com.mkulesh.micromath.formula.FormulaTermFunction$ErrorCode: com.mkulesh.micromath.formula.FormulaTermFunction$ErrorCode NO_ERROR>;

        r2 = <com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType NONE>;

        if $r7 != r2 goto label05;

        r10 = <com.mkulesh.micromath.formula.FormulaTermFunction$ErrorCode: com.mkulesh.micromath.formula.FormulaTermFunction$ErrorCode NOT_DIFFERENTIABLE>;

     label05:
        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: void setErrorCode(com.mkulesh.micromath.formula.FormulaTermFunction$ErrorCode,java.lang.String)>(r10, $r1);

        return $r7;

     label06:
        $r7 = r2;

        goto label04;

     label07:
        $r11 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.Equation linkedFunction>;

        if $r11 == null goto label04;

        i0 = virtualinvoke r2.<com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: int ordinal()>();

        $r11 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.Equation linkedFunction>;

        $r7 = virtualinvoke $r11.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType isDifferentiable(java.lang.String)>($r1);

        $i1 = virtualinvoke $r7.<com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: int ordinal()>();

        i0 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i1);

        $r8 = staticinvoke <com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType[] values()>();

        $r7 = $r8[i0];

        goto label04;

     label08:
        $r7 = r2;

        $r12 = <com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType INDEPENDENT>;

        if r2 == $r12 goto label04;

        $r8 = staticinvoke <com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType[] values()>();

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.util.ArrayList terms>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r6 = (com.mkulesh.micromath.formula.TermField) $r5;

        r2 = virtualinvoke $r6.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType isDifferentiable(java.lang.String)>($r1);

        i0 = virtualinvoke r2.<com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: int ordinal()>();

        r2 = $r8[i0];

        $r12 = <com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType INDEPENDENT>;

        if r2 != $r12 goto label09;

        goto label04;

     label09:
        $r7 = <com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType NONE>;

        goto label04;

     label10:
        $r7 = <com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType INDEPENDENT>;

        if r2 != $r7 goto label11;

        $r7 = <com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType INDEPENDENT>;

        goto label04;

     label11:
        $r7 = <com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType NONE>;

        goto label04;
    }
    public boolean isNewTermEnabled()
    {
        com.mkulesh.micromath.formula.FormulaTermFunction r0;
        boolean $z0;
        com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType $r1;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermFunction;

        $r1 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $z0 = virtualinvoke $r1.<com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: boolean isLink()>();

        return $z0;
    }
    public void onDelete(com.mkulesh.micromath.widgets.CustomEditText)
    {
        com.mkulesh.micromath.formula.FormulaTermFunction r0;
        com.mkulesh.micromath.widgets.CustomEditText $r1;
        com.mkulesh.micromath.formula.TermField $r2, r6, r11;
        com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType $r3, $r4;
        java.util.ArrayList $r5;
        int $i0;
        boolean $z0;
        java.lang.String r7;
        com.mkulesh.micromath.widgets.CustomTextView $r8;
        java.util.Iterator $r9;
        java.lang.Object $r10;
        android.content.Context $r12;
        android.content.res.Resources $r13;
        com.mkulesh.micromath.formula.FormulaBase $r14;
        com.mkulesh.micromath.formula.FormulaList $r15;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermFunction;

        $r1 := @parameter0: com.mkulesh.micromath.widgets.CustomEditText;

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.TermField findTerm(com.mkulesh.micromath.widgets.CustomEditText)>($r1);

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $r4 = <com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType NTHRT_LAYOUT>;

        if $r3 == $r4 goto label1;

        if $r1 == null goto label1;

        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.util.ArrayList terms>;

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i0 <= 1 goto label1;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: boolean isNewTermEnabled()>();

        if $z0 != 0 goto label8;

     label1:
        r6 = null;

        r7 = "";

        if $r2 == null goto label5;

        $r8 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.widgets.CustomTextView functionTerm>;

        if $r8 == null goto label2;

        r7 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.lang.String getFunctionLabel()>();

     label2:
        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: java.util.ArrayList terms>;

        $r9 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (com.mkulesh.micromath.formula.TermField) $r10;

        if r11 == $r2 goto label3;

        $z0 = virtualinvoke r11.<com.mkulesh.micromath.formula.TermField: boolean isTerm()>();

        if $z0 == 0 goto label4;

        r6 = r11;

        goto label3;

     label4:
        $z0 = virtualinvoke r11.<com.mkulesh.micromath.formula.TermField: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        r7 = virtualinvoke r11.<com.mkulesh.micromath.formula.TermField: java.lang.String getText()>();

        goto label3;

     label5:
        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.TermField parentField>;

        if $r2 == null goto label6;

        if r6 == null goto label6;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.TermField parentField>;

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: int removeElements()>();

        virtualinvoke $r2.<com.mkulesh.micromath.formula.TermField: void onTermDelete(int,com.mkulesh.micromath.formula.TermField)>($i0, r6);

        return;

     label6:
        r6 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.TermField parentField>;

        if r6 == null goto label7;

        r6 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.TermField parentField>;

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: int removeElements()>();

        virtualinvoke r6.<com.mkulesh.micromath.formula.TermField: void onTermDeleteWithText(int,java.lang.CharSequence)>($i0, r7);

        return;

     label7:
        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTerm: void onDelete(com.mkulesh.micromath.widgets.CustomEditText)>(null);

        return;

     label8:
        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: boolean isNewTermEnabled()>();

        if $z0 == 0 goto label9;

        r6 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.TermField parentField>;

        if r6 == null goto label9;

        if $r2 == null goto label9;

        $r12 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: android.content.Context getContext()>();

        $r13 = virtualinvoke $r12.<android.content.Context: android.content.res.Resources getResources()>();

        r7 = virtualinvoke $r13.<android.content.res.Resources: java.lang.String getString(int)>(2131099967);

        r6 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.TermField deleteArgument(com.mkulesh.micromath.formula.TermField,java.lang.String,boolean)>($r2, r7, 1);

        $r14 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r15 = virtualinvoke $r14.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        virtualinvoke $r15.<com.mkulesh.micromath.formula.FormulaList: void onManualInput()>();

        if r6 == null goto label9;

        virtualinvoke r6.<com.mkulesh.micromath.formula.TermField: void requestFocus()>();

     label9:
        return;
    }
    public boolean onNewTerm(com.mkulesh.micromath.formula.TermField, java.lang.String, boolean)
    {
        com.mkulesh.micromath.formula.FormulaTermFunction r0;
        com.mkulesh.micromath.formula.TermField $r1, $r6;
        java.lang.String $r2, $r5, $r7;
        boolean $z0, $z1;
        android.content.Context $r3;
        android.content.res.Resources $r4;
        int $i0;
        com.mkulesh.micromath.formula.FormulaBase$ValidationPassType $r8;
        com.mkulesh.micromath.widgets.CustomEditText $r9;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermFunction;

        $r1 := @parameter0: com.mkulesh.micromath.formula.TermField;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r3 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(2131099967);

        if $r2 == null goto label1;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>($r5);

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        $z1 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: boolean isNewTermEnabled()>();

        if $z1 == 0 goto label4;

        $i0 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: int getArgumentDepth()>();

        $r6 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.TermField addArgument(com.mkulesh.micromath.formula.TermField,int,int)>($r1, 2130903090, $i0);

        if $r6 == null goto label4;

        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: void updateTextSize()>();

        $r7 = virtualinvoke $r1.<com.mkulesh.micromath.formula.TermField: java.lang.String getText()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean contains(java.lang.CharSequence)>($r5);

        if $z1 == 0 goto label3;

        staticinvoke <com.mkulesh.micromath.formula.TermField: void divideString(java.lang.String,java.lang.String,com.mkulesh.micromath.formula.TermField,com.mkulesh.micromath.formula.TermField)>($r2, $r5, $r1, $r6);

     label3:
        $r8 = <com.mkulesh.micromath.formula.FormulaBase$ValidationPassType: com.mkulesh.micromath.formula.FormulaBase$ValidationPassType VALIDATE_SINGLE_FORMULA>;

        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: boolean isContentValid(com.mkulesh.micromath.formula.FormulaBase$ValidationPassType)>($r8);

        if $z0 == 0 goto label4;

        $r9 = virtualinvoke $r6.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText getEditText()>();

        virtualinvoke $r9.<com.mkulesh.micromath.widgets.CustomEditText: boolean requestFocus()>();

     label4:
        return 1;
    }
    public void updateTextSize()
    {
        com.mkulesh.micromath.formula.FormulaTermFunction r0;
        com.mkulesh.micromath.widgets.ScaledDimensions$Type $r1;
        com.mkulesh.micromath.formula.FormulaList $r2;
        com.mkulesh.micromath.widgets.ScaledDimensions $r3;
        int $i0, $i1;
        com.mkulesh.micromath.widgets.CustomTextView $r4;
        com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType $r5, $r6;
        android.widget.LinearLayout $r7;
        android.view.View $r8;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermFunction;

        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTerm: void updateTextSize()>();

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.widgets.ScaledDimensions getDimen()>();

        $r1 = <com.mkulesh.micromath.widgets.ScaledDimensions$Type: com.mkulesh.micromath.widgets.ScaledDimensions$Type HOR_SYMBOL_PADDING>;

        $i0 = virtualinvoke $r3.<com.mkulesh.micromath.widgets.ScaledDimensions: int get(com.mkulesh.micromath.widgets.ScaledDimensions$Type)>($r1);

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.widgets.CustomTextView functionTerm>;

        if $r4 == null goto label2;

        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $r6 = <com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType SQRT_LAYOUT>;

        if $r5 == $r6 goto label1;

        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $r6 = <com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType NTHRT_LAYOUT>;

        if $r5 != $r6 goto label3;

     label1:
        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.widgets.CustomTextView functionTerm>;

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.widgets.ScaledDimensions getDimen()>();

        $r1 = <com.mkulesh.micromath.widgets.ScaledDimensions$Type: com.mkulesh.micromath.widgets.ScaledDimensions$Type SMALL_SYMBOL_SIZE>;

        $i1 = virtualinvoke $r3.<com.mkulesh.micromath.widgets.ScaledDimensions: int get(com.mkulesh.micromath.widgets.ScaledDimensions$Type)>($r1);

        virtualinvoke $r4.<com.mkulesh.micromath.widgets.CustomTextView: void setWidth(int)>($i1);

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.widgets.CustomTextView functionTerm>;

        virtualinvoke $r4.<com.mkulesh.micromath.widgets.CustomTextView: void setPadding(int,int,int,int)>(0, 0, 0, 0);

     label2:
        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $r6 = <com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType NTHRT_LAYOUT>;

        if $r5 != $r6 goto label6;

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: android.widget.LinearLayout layout>;

        $r8 = virtualinvoke $r7.<android.widget.LinearLayout: android.view.View findViewById(int)>(2131493093);

        if $r8 == null goto label6;

        virtualinvoke $r8.<android.view.View: void setPadding(int,int,int,int)>($i0, 0, $i0, 0);

        return;

     label3:
        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $r6 = <com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType CONJUGATE_LAYOUT>;

        if $r5 != $r6 goto label4;

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.widgets.CustomTextView functionTerm>;

        virtualinvoke $r4.<com.mkulesh.micromath.widgets.CustomTextView: void setPadding(int,int,int,int)>($i0, 0, $i0, 0);

        goto label2;

     label4:
        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        $r6 = <com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType FUNCTION_INDEX>;

        if $r5 != $r6 goto label5;

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.widgets.CustomTextView functionTerm>;

        virtualinvoke $r4.<com.mkulesh.micromath.widgets.CustomTextView: void setPadding(int,int,int,int)>(0, 0, 0, 0);

        goto label2;

     label5:
        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction: com.mkulesh.micromath.widgets.CustomTextView functionTerm>;

        virtualinvoke $r4.<com.mkulesh.micromath.widgets.CustomTextView: void setPadding(int,int,int,int)>(0, 0, $i0, 0);

        goto label2;

     label6:
        return;
    }
