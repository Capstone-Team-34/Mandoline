com.mkulesh.micromath.formula.FormulaTermFunction$Trigger extends java.lang.Enum
private static final com.mkulesh.micromath.formula.FormulaTermFunction$Trigger[] $VALUES
public static final enum com.mkulesh.micromath.formula.FormulaTermFunction$Trigger ABS
public static final enum com.mkulesh.micromath.formula.FormulaTermFunction$Trigger CONJUGATE
public static final enum com.mkulesh.micromath.formula.FormulaTermFunction$Trigger FACTORIAL
public static final enum com.mkulesh.micromath.formula.FormulaTermFunction$Trigger GENERAL
public static final enum com.mkulesh.micromath.formula.FormulaTermFunction$Trigger INDEX
public static final enum com.mkulesh.micromath.formula.FormulaTermFunction$Trigger NTHRT
public static final enum com.mkulesh.micromath.formula.FormulaTermFunction$Trigger SQRT
private final int codeId
private final com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType
private final boolean isBeforeText
    static void <clinit>()
    {
        com.mkulesh.micromath.formula.FormulaTermFunction$Trigger $r0;
        com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType $r1;
        com.mkulesh.micromath.formula.FormulaTermFunction$Trigger[] $r2;

        $r0 = new com.mkulesh.micromath.formula.FormulaTermFunction$Trigger;

        specialinvoke $r0.<com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: void <init>(java.lang.String,int,int,com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType,boolean)>("GENERAL", 0, 2131099939, null, 1);

        <com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: com.mkulesh.micromath.formula.FormulaTermFunction$Trigger GENERAL> = $r0;

        $r0 = new com.mkulesh.micromath.formula.FormulaTermFunction$Trigger;

        $r1 = <com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType FUNCTION_INDEX>;

        specialinvoke $r0.<com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: void <init>(java.lang.String,int,int,com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType,boolean)>("INDEX", 1, 2131099940, $r1, 1);

        <com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: com.mkulesh.micromath.formula.FormulaTermFunction$Trigger INDEX> = $r0;

        $r0 = new com.mkulesh.micromath.formula.FormulaTermFunction$Trigger;

        $r1 = <com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType ABS_LAYOUT>;

        specialinvoke $r0.<com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: void <init>(java.lang.String,int,int,com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType,boolean)>("ABS", 2, 2131099932, $r1, 1);

        <com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: com.mkulesh.micromath.formula.FormulaTermFunction$Trigger ABS> = $r0;

        $r0 = new com.mkulesh.micromath.formula.FormulaTermFunction$Trigger;

        $r1 = <com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType SQRT_LAYOUT>;

        specialinvoke $r0.<com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: void <init>(java.lang.String,int,int,com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType,boolean)>("SQRT", 3, 2131099938, $r1, 1);

        <com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: com.mkulesh.micromath.formula.FormulaTermFunction$Trigger SQRT> = $r0;

        $r0 = new com.mkulesh.micromath.formula.FormulaTermFunction$Trigger;

        $r1 = <com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType NTHRT_LAYOUT>;

        specialinvoke $r0.<com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: void <init>(java.lang.String,int,int,com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType,boolean)>("NTHRT", 4, 2131099937, $r1, 1);

        <com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: com.mkulesh.micromath.formula.FormulaTermFunction$Trigger NTHRT> = $r0;

        $r0 = new com.mkulesh.micromath.formula.FormulaTermFunction$Trigger;

        $r1 = <com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType FACTORIAL>;

        specialinvoke $r0.<com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: void <init>(java.lang.String,int,int,com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType,boolean)>("FACTORIAL", 5, 2131099936, $r1, 0);

        <com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: com.mkulesh.micromath.formula.FormulaTermFunction$Trigger FACTORIAL> = $r0;

        $r0 = new com.mkulesh.micromath.formula.FormulaTermFunction$Trigger;

        $r1 = <com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType CONJUGATE_LAYOUT>;

        specialinvoke $r0.<com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: void <init>(java.lang.String,int,int,com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType,boolean)>("CONJUGATE", 6, 2131099933, $r1, 0);

        <com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: com.mkulesh.micromath.formula.FormulaTermFunction$Trigger CONJUGATE> = $r0;

        $r2 = newarray (com.mkulesh.micromath.formula.FormulaTermFunction$Trigger)[7];

        $r0 = <com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: com.mkulesh.micromath.formula.FormulaTermFunction$Trigger GENERAL>;

        $r2[0] = $r0;

        $r0 = <com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: com.mkulesh.micromath.formula.FormulaTermFunction$Trigger INDEX>;

        $r2[1] = $r0;

        $r0 = <com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: com.mkulesh.micromath.formula.FormulaTermFunction$Trigger ABS>;

        $r2[2] = $r0;

        $r0 = <com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: com.mkulesh.micromath.formula.FormulaTermFunction$Trigger SQRT>;

        $r2[3] = $r0;

        $r0 = <com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: com.mkulesh.micromath.formula.FormulaTermFunction$Trigger NTHRT>;

        $r2[4] = $r0;

        $r0 = <com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: com.mkulesh.micromath.formula.FormulaTermFunction$Trigger FACTORIAL>;

        $r2[5] = $r0;

        $r0 = <com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: com.mkulesh.micromath.formula.FormulaTermFunction$Trigger CONJUGATE>;

        $r2[6] = $r0;

        <com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: com.mkulesh.micromath.formula.FormulaTermFunction$Trigger[] $VALUES> = $r2;

        return;
    }
    private void <init>(java.lang.String, int, int, com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType, boolean)
    {
        com.mkulesh.micromath.formula.FormulaTermFunction$Trigger r0;
        java.lang.String $r1;
        int $i0, $i1;
        com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType $r2;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermFunction$Trigger;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType;

        $z0 := @parameter4: boolean;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: int codeId> = $i1;

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType> = $r2;

        r0.<com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: boolean isBeforeText> = $z0;

        return;
    }
    public static com.mkulesh.micromath.formula.FormulaTermFunction$Trigger valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        com.mkulesh.micromath.formula.FormulaTermFunction$Trigger $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/mkulesh/micromath/formula/FormulaTermFunction$Trigger;", $r0);

        $r2 = (com.mkulesh.micromath.formula.FormulaTermFunction$Trigger) $r1;

        return $r2;
    }
    public static com.mkulesh.micromath.formula.FormulaTermFunction$Trigger[] values()
    {
        java.lang.Object $r0;
        com.mkulesh.micromath.formula.FormulaTermFunction$Trigger[] $r1;

        $r1 = <com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: com.mkulesh.micromath.formula.FormulaTermFunction$Trigger[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (com.mkulesh.micromath.formula.FormulaTermFunction$Trigger[]) $r0;

        return $r1;
    }
    public int getCodeId()
    {
        com.mkulesh.micromath.formula.FormulaTermFunction$Trigger r0;
        int i0;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermFunction$Trigger;

        i0 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: int codeId>;

        return i0;
    }
    public com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType getFunctionType()
    {
        com.mkulesh.micromath.formula.FormulaTermFunction$Trigger r0;
        com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType r1;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermFunction$Trigger;

        r1 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: com.mkulesh.micromath.formula.FormulaTermFunction$FunctionType functionType>;

        return r1;
    }
    public boolean isBeforeText()
    {
        com.mkulesh.micromath.formula.FormulaTermFunction$Trigger r0;
        boolean z0;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermFunction$Trigger;

        z0 = r0.<com.mkulesh.micromath.formula.FormulaTermFunction$Trigger: boolean isBeforeText>;

        return z0;
    }
