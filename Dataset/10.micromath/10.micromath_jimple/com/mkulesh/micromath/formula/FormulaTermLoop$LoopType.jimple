com.mkulesh.micromath.formula.FormulaTermLoop$LoopType extends java.lang.Enum
private static final com.mkulesh.micromath.formula.FormulaTermLoop$LoopType[] $VALUES
public static final enum com.mkulesh.micromath.formula.FormulaTermLoop$LoopType DERIVATIVE
public static final enum com.mkulesh.micromath.formula.FormulaTermLoop$LoopType INTEGRAL
public static final enum com.mkulesh.micromath.formula.FormulaTermLoop$LoopType PRODUCT
public static final enum com.mkulesh.micromath.formula.FormulaTermLoop$LoopType SUMMATION
private final int descriptionId
private final int imageId
private final int symbolId
    static void <clinit>()
    {
        com.mkulesh.micromath.formula.FormulaTermLoop$LoopType $r0;
        com.mkulesh.micromath.formula.FormulaTermLoop$LoopType[] $r1;

        $r0 = new com.mkulesh.micromath.formula.FormulaTermLoop$LoopType;

        specialinvoke $r0.<com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: void <init>(java.lang.String,int,int,int,int)>("SUMMATION", 0, 2131099951, 2130837737, 2131099889);

        <com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType SUMMATION> = $r0;

        $r0 = new com.mkulesh.micromath.formula.FormulaTermLoop$LoopType;

        specialinvoke $r0.<com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: void <init>(java.lang.String,int,int,int,int)>("PRODUCT", 1, 2131099950, 2130837736, 2131099888);

        <com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType PRODUCT> = $r0;

        $r0 = new com.mkulesh.micromath.formula.FormulaTermLoop$LoopType;

        specialinvoke $r0.<com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: void <init>(java.lang.String,int,int,int,int)>("INTEGRAL", 2, 2131099948, 2130837735, 2131099887);

        <com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType INTEGRAL> = $r0;

        $r0 = new com.mkulesh.micromath.formula.FormulaTermLoop$LoopType;

        specialinvoke $r0.<com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: void <init>(java.lang.String,int,int,int,int)>("DERIVATIVE", 3, 2131099946, 2130837734, 2131099886);

        <com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType DERIVATIVE> = $r0;

        $r1 = newarray (com.mkulesh.micromath.formula.FormulaTermLoop$LoopType)[4];

        $r0 = <com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType SUMMATION>;

        $r1[0] = $r0;

        $r0 = <com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType PRODUCT>;

        $r1[1] = $r0;

        $r0 = <com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType INTEGRAL>;

        $r1[2] = $r0;

        $r0 = <com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType DERIVATIVE>;

        $r1[3] = $r0;

        <com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType[] $VALUES> = $r1;

        return;
    }
    private void <init>(java.lang.String, int, int, int, int)
    {
        com.mkulesh.micromath.formula.FormulaTermLoop$LoopType r0;
        java.lang.String $r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: int symbolId> = $i1;

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: int imageId> = $i2;

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: int descriptionId> = $i3;

        return;
    }
    public static com.mkulesh.micromath.formula.FormulaTermLoop$LoopType valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        com.mkulesh.micromath.formula.FormulaTermLoop$LoopType $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/mkulesh/micromath/formula/FormulaTermLoop$LoopType;", $r0);

        $r2 = (com.mkulesh.micromath.formula.FormulaTermLoop$LoopType) $r1;

        return $r2;
    }
    public static com.mkulesh.micromath.formula.FormulaTermLoop$LoopType[] values()
    {
        java.lang.Object $r0;
        com.mkulesh.micromath.formula.FormulaTermLoop$LoopType[] $r1;

        $r1 = <com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (com.mkulesh.micromath.formula.FormulaTermLoop$LoopType[]) $r0;

        return $r1;
    }
    public int getDescriptionId()
    {
        com.mkulesh.micromath.formula.FormulaTermLoop$LoopType r0;
        int i0;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType;

        i0 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: int descriptionId>;

        return i0;
    }
    public int getImageId()
    {
        com.mkulesh.micromath.formula.FormulaTermLoop$LoopType r0;
        int i0;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType;

        i0 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: int imageId>;

        return i0;
    }
    public int getSymbolId()
    {
        com.mkulesh.micromath.formula.FormulaTermLoop$LoopType r0;
        int i0;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType;

        i0 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: int symbolId>;

        return i0;
    }
