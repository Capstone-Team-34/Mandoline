com.mkulesh.micromath.formula.CalculationResult extends com.mkulesh.micromath.formula.LinkHolder
    public void <init>(android.content.Context)
    {
        com.mkulesh.micromath.formula.CalculationResult r0;
        android.content.Context $r1;

        r0 := @this: com.mkulesh.micromath.formula.CalculationResult;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.mkulesh.micromath.formula.LinkHolder: void <init>(com.mkulesh.micromath.formula.FormulaList,android.widget.LinearLayout,int)>(null, null, 0);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.mkulesh.micromath.formula.CalculationResult r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        r0 := @this: com.mkulesh.micromath.formula.CalculationResult;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.mkulesh.micromath.formula.LinkHolder: void <init>(com.mkulesh.micromath.formula.FormulaList,android.widget.LinearLayout,int)>(null, null, 0);

        return;
    }
    public void <init>(com.mkulesh.micromath.formula.FormulaList, android.widget.LinearLayout, int)
    {
        com.mkulesh.micromath.formula.CalculationResult r0;
        com.mkulesh.micromath.formula.FormulaList $r1;
        android.widget.LinearLayout $r2;
        int $i0;

        r0 := @this: com.mkulesh.micromath.formula.CalculationResult;

        $r1 := @parameter0: com.mkulesh.micromath.formula.FormulaList;

        $r2 := @parameter1: android.widget.LinearLayout;

        $i0 := @parameter2: int;

        specialinvoke r0.<com.mkulesh.micromath.formula.LinkHolder: void <init>(com.mkulesh.micromath.formula.FormulaList,android.widget.LinearLayout,int)>($r1, $r2, $i0);

        return;
    }
public abstract void calculate(com.mkulesh.micromath.formula.CalculaterTask) throws com.mkulesh.micromath.formula.CalculaterTask$CancelException { 
// no body
} 
    public boolean disableCalculation()
    {
        com.mkulesh.micromath.formula.CalculationResult r0;

        r0 := @this: com.mkulesh.micromath.formula.CalculationResult;

        return 0;
    }
    public boolean enableObjectProperties()
    {
        com.mkulesh.micromath.formula.CalculationResult r0;

        r0 := @this: com.mkulesh.micromath.formula.CalculationResult;

        return 1;
    }
public abstract void invalidateResult() { 
// no body
} 
    protected boolean setEmptyBorders(double[], com.mkulesh.micromath.formula.TermField, com.mkulesh.micromath.formula.TermField)
    {
        com.mkulesh.micromath.formula.CalculationResult r0;
        double[] $r1;
        com.mkulesh.micromath.formula.TermField $r2, $r3;
        com.mkulesh.micromath.math.CalculatedValue r4;
        int $i0;
        boolean z0, $z1, $z2, $z3;
        double $d0;
        com.mkulesh.micromath.formula.FormulaList $r5;
        com.mkulesh.micromath.properties.DocumentProperties $r6;
        java.lang.String $r7, $r8;
        java.lang.String[] $r9;

        r0 := @this: com.mkulesh.micromath.formula.CalculationResult;

        $r1 := @parameter0: double[];

        $r2 := @parameter1: com.mkulesh.micromath.formula.TermField;

        $r3 := @parameter2: com.mkulesh.micromath.formula.TermField;

        if $r1 == null goto label01;

        if $r2 == null goto label01;

        if $r3 != null goto label02;

     label01:
        return 0;

     label02:
        $i0 = lengthof $r1;

        if $i0 == 2 goto label03;

        return 0;

     label03:
        z0 = 1;

        $z1 = virtualinvoke $r2.<com.mkulesh.micromath.formula.TermField: boolean isEmptyOrAutoContent()>();

        $z2 = virtualinvoke $r3.<com.mkulesh.micromath.formula.TermField: boolean isEmptyOrAutoContent()>();

        if $z1 != 0 goto label04;

        if $z2 == 0 goto label09;

     label04:
        r4 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        $d0 = $r1[0];

        virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>($d0);

        $r5 = virtualinvoke r0.<com.mkulesh.micromath.formula.CalculationResult: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r6 = virtualinvoke $r5.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.properties.DocumentProperties getDocumentSettings()>();

        $r7 = virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: java.lang.String getResultDescription(com.mkulesh.micromath.properties.DocumentProperties)>($r6);

        if $z1 == 0 goto label05;

        $z3 = virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: boolean isNaN()>();

        if $z3 == 0 goto label05;

        z0 = 0;

     label05:
        $d0 = $r1[1];

        virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>($d0);

        $r5 = virtualinvoke r0.<com.mkulesh.micromath.formula.CalculationResult: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r6 = virtualinvoke $r5.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.properties.DocumentProperties getDocumentSettings()>();

        $r8 = virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: java.lang.String getResultDescription(com.mkulesh.micromath.properties.DocumentProperties)>($r6);

        if $z2 == 0 goto label06;

        $z3 = virtualinvoke r4.<com.mkulesh.micromath.math.CalculatedValue: boolean isNaN()>();

        if $z3 == 0 goto label06;

        z0 = 0;

     label06:
        if z0 == 0 goto label07;

        $r5 = virtualinvoke r0.<com.mkulesh.micromath.formula.CalculationResult: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r6 = virtualinvoke $r5.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.properties.DocumentProperties getDocumentSettings()>();

        $i0 = $r6.<com.mkulesh.micromath.properties.DocumentProperties: int significantDigits>;

        $r9 = staticinvoke <com.mkulesh.micromath.utils.ViewUtils: java.lang.String[] catValues(double[],int)>($r1, $i0);

        $r7 = $r9[0];

        $r8 = $r9[1];

     label07:
        if $z1 == 0 goto label08;

        if $r7 == null goto label08;

        virtualinvoke $r2.<com.mkulesh.micromath.formula.TermField: void setTextChangeDetectionEnabled(boolean)>(0);

        virtualinvoke $r2.<com.mkulesh.micromath.formula.TermField: void setText(java.lang.CharSequence)>($r7);

        virtualinvoke $r2.<com.mkulesh.micromath.formula.TermField: void setTextChangeDetectionEnabled(boolean)>(1);

     label08:
        if $z2 == 0 goto label10;

        if $r8 == null goto label10;

        virtualinvoke $r3.<com.mkulesh.micromath.formula.TermField: void setTextChangeDetectionEnabled(boolean)>(0);

        virtualinvoke $r3.<com.mkulesh.micromath.formula.TermField: void setText(java.lang.CharSequence)>($r8);

        virtualinvoke $r3.<com.mkulesh.micromath.formula.TermField: void setTextChangeDetectionEnabled(boolean)>(1);

        return z0;

     label09:
        return 1;

     label10:
        return z0;
    }
public abstract void showResult() { 
// no body
} 
    public java.lang.String toString()
    {
        com.mkulesh.micromath.formula.CalculationResult r0;
        java.lang.StringBuilder $r1;
        com.mkulesh.micromath.formula.FormulaBase$BaseType $r2;
        java.lang.String $r3;
        int $i0;

        r0 := @this: com.mkulesh.micromath.formula.CalculationResult;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calculation ");

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.CalculationResult: com.mkulesh.micromath.formula.FormulaBase$BaseType getBaseType()>();

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaBase$BaseType: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(Id: ");

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.formula.CalculationResult: int getId()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
    public void undo(com.mkulesh.micromath.undo.FormulaState)
    {
        com.mkulesh.micromath.formula.CalculationResult r0;
        com.mkulesh.micromath.undo.FormulaState $r1;

        r0 := @this: com.mkulesh.micromath.formula.CalculationResult;

        $r1 := @parameter0: com.mkulesh.micromath.undo.FormulaState;

        specialinvoke r0.<com.mkulesh.micromath.formula.LinkHolder: void undo(com.mkulesh.micromath.undo.FormulaState)>($r1);

        virtualinvoke r0.<com.mkulesh.micromath.formula.CalculationResult: void invalidateResult()>();

        return;
    }
    protected void updateEqualBorders(double[])
    {
        com.mkulesh.micromath.formula.CalculationResult r0;
        double[] $r1;
        double d0, $d1, $d2;
        int $i0;
        byte $b1;
        com.mkulesh.micromath.formula.FormulaList $r2;
        com.mkulesh.micromath.properties.DocumentProperties $r3;

        r0 := @this: com.mkulesh.micromath.formula.CalculationResult;

        $r1 := @parameter0: double[];

        if $r1 == null goto label1;

        $i0 = lengthof $r1;

        if $i0 != 2 goto label1;

        d0 = $r1[0];

        $d1 = $r1[1];

        $b1 = d0 cmpl $d1;

        if $b1 != 0 goto label1;

        d0 = $r1[0];

        $d1 = 0.1 * d0;

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.CalculationResult: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.properties.DocumentProperties getDocumentSettings()>();

        $i0 = $r3.<com.mkulesh.micromath.properties.DocumentProperties: int significantDigits>;

        $i0 = $i0 * -1;

        $d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,int)>(10.0, $i0);

        $d1 = staticinvoke <java.lang.Math: double max(double,double)>($d1, $d2);

        $d2 = d0 - $d1;

        $r1[0] = $d2;

        d0 = d0 + $d1;

        $r1[1] = d0;

     label1:
        return;
    }
    protected void updatePlotBoundaries(com.mkulesh.micromath.plots.views.PlotView, com.mkulesh.micromath.formula.TermField, com.mkulesh.micromath.formula.TermField, com.mkulesh.micromath.formula.TermField, com.mkulesh.micromath.formula.TermField)
    {
        com.mkulesh.micromath.formula.CalculationResult r0;
        com.mkulesh.micromath.plots.views.PlotView $r1;
        com.mkulesh.micromath.formula.TermField $r2, $r3, $r4, $r5;
        com.mkulesh.micromath.math.CalculatedValue r6, r7, r8, r9;
        double $d0, $d1, $d2, $d3;
        com.mkulesh.micromath.formula.CalculaterTask$CancelException $r10;

        r0 := @this: com.mkulesh.micromath.formula.CalculationResult;

        $r1 := @parameter0: com.mkulesh.micromath.plots.views.PlotView;

        $r2 := @parameter1: com.mkulesh.micromath.formula.TermField;

        $r3 := @parameter2: com.mkulesh.micromath.formula.TermField;

        $r4 := @parameter3: com.mkulesh.micromath.formula.TermField;

        $r5 := @parameter4: com.mkulesh.micromath.formula.TermField;

        r7 = new com.mkulesh.micromath.math.CalculatedValue;

     label1:
        specialinvoke r7.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

     label2:
        r6 = new com.mkulesh.micromath.math.CalculatedValue;

     label3:
        specialinvoke r6.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

     label4:
        r9 = new com.mkulesh.micromath.math.CalculatedValue;

     label5:
        specialinvoke r9.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

     label6:
        r8 = new com.mkulesh.micromath.math.CalculatedValue;

     label7:
        specialinvoke r8.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        virtualinvoke r7.<com.mkulesh.micromath.math.CalculatedValue: void processRealTerm(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.formula.TermField)>(null, $r2);

        virtualinvoke r6.<com.mkulesh.micromath.math.CalculatedValue: void processRealTerm(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.formula.TermField)>(null, $r3);

        virtualinvoke r9.<com.mkulesh.micromath.math.CalculatedValue: void processRealTerm(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.formula.TermField)>(null, $r4);

        virtualinvoke r8.<com.mkulesh.micromath.math.CalculatedValue: void processRealTerm(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.formula.TermField)>(null, $r5);

        $d0 = virtualinvoke r7.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $d1 = virtualinvoke r6.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $d2 = virtualinvoke r9.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $d3 = virtualinvoke r8.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        virtualinvoke $r1.<com.mkulesh.micromath.plots.views.PlotView: void setArea(double,double,double,double)>($d0, $d1, $d2, $d3);

     label8:
        return;

     label9:
        $r10 := @caughtexception;

        return;

        catch com.mkulesh.micromath.formula.CalculaterTask$CancelException from label1 to label2 with label9;
        catch com.mkulesh.micromath.formula.CalculaterTask$CancelException from label3 to label4 with label9;
        catch com.mkulesh.micromath.formula.CalculaterTask$CancelException from label5 to label6 with label9;
        catch com.mkulesh.micromath.formula.CalculaterTask$CancelException from label7 to label8 with label9;
    }
