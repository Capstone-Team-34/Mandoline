com.mkulesh.micromath.formula.FormulaTermComparator extends com.mkulesh.micromath.formula.FormulaTerm
private com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType comparatorType
private com.mkulesh.micromath.formula.TermField leftTerm
private final com.mkulesh.micromath.math.CalculatedValue leftTermValue
private com.mkulesh.micromath.widgets.CustomTextView operatorKey
private com.mkulesh.micromath.formula.TermField rightTerm
private final com.mkulesh.micromath.math.CalculatedValue rightTermValue
private boolean useBrackets
    public void <init>(android.content.Context)
    {
        com.mkulesh.micromath.formula.FormulaTermComparator r0;
        android.content.Context $r1;
        com.mkulesh.micromath.math.CalculatedValue $r2;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermComparator;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTerm: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType comparatorType> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.TermField leftTerm> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.TermField rightTerm> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.widgets.CustomTextView operatorKey> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermComparator: boolean useBrackets> = 0;

        $r2 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.math.CalculatedValue leftTermValue> = $r2;

        $r2 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.math.CalculatedValue rightTermValue> = $r2;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.mkulesh.micromath.formula.FormulaTermComparator r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        com.mkulesh.micromath.math.CalculatedValue $r3;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermComparator;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTerm: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType comparatorType> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.TermField leftTerm> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.TermField rightTerm> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.widgets.CustomTextView operatorKey> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermComparator: boolean useBrackets> = 0;

        $r3 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.math.CalculatedValue leftTermValue> = $r3;

        $r3 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.math.CalculatedValue rightTermValue> = $r3;

        return;
    }
    public void <init>(com.mkulesh.micromath.formula.TermField, android.widget.LinearLayout, java.lang.String, int) throws java.lang.Exception
    {
        com.mkulesh.micromath.formula.FormulaTermComparator r0;
        com.mkulesh.micromath.formula.TermField $r1;
        android.widget.LinearLayout $r2;
        java.lang.String $r3;
        int $i0, $i1;
        com.mkulesh.micromath.formula.FormulaBase $r4;
        com.mkulesh.micromath.math.CalculatedValue $r5;
        com.mkulesh.micromath.formula.TermField$BracketsType $r6;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermComparator;

        $r1 := @parameter0: com.mkulesh.micromath.formula.TermField;

        $r2 := @parameter1: android.widget.LinearLayout;

        $r3 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $r4 = virtualinvoke $r1.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $i1 = $r1.<com.mkulesh.micromath.formula.TermField: int termDepth>;

        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTerm: void <init>(com.mkulesh.micromath.formula.FormulaBase,android.widget.LinearLayout,int)>($r4, $r2, $i1);

        r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType comparatorType> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.TermField leftTerm> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.TermField rightTerm> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.widgets.CustomTextView operatorKey> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermComparator: boolean useBrackets> = 0;

        $r5 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r5.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.math.CalculatedValue leftTermValue> = $r5;

        $r5 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r5.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.math.CalculatedValue rightTermValue> = $r5;

        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermComparator: void setParentField(com.mkulesh.micromath.formula.TermField)>($r1);

        $r6 = $r1.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$BracketsType bracketsType>;

        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTermComparator: void onCreate(java.lang.String,int,com.mkulesh.micromath.formula.TermField$BracketsType)>($r3, $i0, $r6);

        return;
    }
    public static com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType getComparatorType(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r4;
        com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType r2;
        int $i0, $i1, $i2;
        com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType[] $r3;
        java.util.Locale $r5;
        boolean $z0;
        android.content.res.Resources $r6;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r3 = staticinvoke <com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType: com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType[] values()>();

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        r2 = $r3[$i1];

        $r4 = virtualinvoke r2.<com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType: java.lang.String toString()>();

        $r5 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r5);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label2;

        $r6 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i2 = virtualinvoke r2.<com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType: int getSymbolId()>();

        $r4 = virtualinvoke $r6.<android.content.res.Resources: java.lang.String getString(int)>($i2);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r4);

        if $z0 == 0 goto label3;

     label2:
        return r2;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        return null;
    }
    public static boolean isComparator(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType getComparatorType(android.content.Context,java.lang.String)>($r0, $r1);

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    private void onCreate(java.lang.String, int, com.mkulesh.micromath.formula.TermField$BracketsType) throws java.lang.Exception
    {
        com.mkulesh.micromath.formula.FormulaTermComparator r0;
        java.lang.String $r1, $r11;
        int $i0, $i1;
        com.mkulesh.micromath.formula.TermField$BracketsType $r2, $r9;
        com.mkulesh.micromath.formula.TermField $r3, $r12;
        android.widget.LinearLayout $r4;
        java.lang.Exception $r5;
        java.lang.StringBuilder $r6;
        android.content.Context $r7;
        com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType $r8;
        boolean $z0;
        android.content.res.Resources $r10;
        int[] $r13;
        com.mkulesh.micromath.widgets.CustomEditText $r14;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermComparator;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: com.mkulesh.micromath.formula.TermField$BracketsType;

        if $i0 < 0 goto label01;

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: android.widget.LinearLayout layout>;

        $i1 = virtualinvoke $r4.<android.widget.LinearLayout: int getChildCount()>();

        if $i0 <= $i1 goto label02;

     label01:
        $r5 = new java.lang.Exception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot create FormulaTermComparator for invalid insertion index ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>($r1);

        throw $r5;

     label02:
        $r7 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermComparator: android.content.Context getContext()>();

        $r8 = staticinvoke <com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType getComparatorType(android.content.Context,java.lang.String)>($r7, $r1);

        r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType comparatorType> = $r8;

        $r8 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType comparatorType>;

        if $r8 != null goto label03;

        $r5 = new java.lang.Exception;

        specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>("cannot create FormulaTermComparator for unknown comparator");

        throw $r5;

     label03:
        $r9 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType NEVER>;

        if $r2 == $r9 goto label07;

        $z0 = 1;

     label04:
        r0.<com.mkulesh.micromath.formula.FormulaTermComparator: boolean useBrackets> = $z0;

        $z0 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: boolean useBrackets>;

        if $z0 == 0 goto label08;

        $i1 = 2130903106;

     label05:
        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermComparator: void inflateElements(int,boolean)>($i1, 1);

        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermComparator: void initializeElements(int)>($i0);

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.TermField leftTerm>;

        if $r3 == null goto label06;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.TermField rightTerm>;

        if $r3 != null goto label09;

     label06:
        $r5 = new java.lang.Exception;

        specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>("cannot initialize comparators terms");

        throw $r5;

     label07:
        $z0 = 0;

        goto label04;

     label08:
        $i1 = 2130903105;

        goto label05;

     label09:
        $r7 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermComparator: android.content.Context getContext()>();

        $r10 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        $r8 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType comparatorType>;

        $i0 = virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType: int getSymbolId()>();

        $r11 = virtualinvoke $r10.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        $r12 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.TermField leftTerm>;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.TermField rightTerm>;

        staticinvoke <com.mkulesh.micromath.formula.TermField: void divideString(java.lang.String,java.lang.String,com.mkulesh.micromath.formula.TermField,com.mkulesh.micromath.formula.TermField)>($r1, $r11, $r12, $r3);

        $r13 = <com.mkulesh.micromath.formula.FormulaTermComparator$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaTermComparator$ComparatorType>;

        $r8 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType comparatorType>;

        $i0 = virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType: int ordinal()>();

        $i0 = $r13[$i0];

        lookupswitch($i0)
        {
            case 1: goto label11;
            case 2: goto label11;
            case 3: goto label11;
            case 4: goto label11;
            case 5: goto label11;
            case 6: goto label11;
            case 7: goto label12;
            case 8: goto label12;
            default: goto label10;
        };

     label10:
        return;

     label11:
        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.TermField leftTerm>;

        $r2 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType NEVER>;

        $r3.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$BracketsType bracketsType> = $r2;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.TermField rightTerm>;

        $r2 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType NEVER>;

        $r3.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$BracketsType bracketsType> = $r2;

        return;

     label12:
        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.TermField leftTerm>;

        $r2 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType IFNECESSARY>;

        $r3.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$BracketsType bracketsType> = $r2;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.TermField leftTerm>;

        $r14 = virtualinvoke $r3.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText getEditText()>();

        virtualinvoke $r14.<com.mkulesh.micromath.widgets.CustomEditText: void setComparatorEnabled(boolean)>(1);

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.TermField rightTerm>;

        $r2 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType IFNECESSARY>;

        $r3.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$BracketsType bracketsType> = $r2;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.TermField rightTerm>;

        $r14 = virtualinvoke $r3.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText getEditText()>();

        virtualinvoke $r14.<com.mkulesh.micromath.widgets.CustomEditText: void setComparatorEnabled(boolean)>(1);

        return;
    }
    private void updateOperatorKey()
    {
        com.mkulesh.micromath.formula.FormulaTermComparator r0;
        int[] $r1;
        com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType $r2;
        int $i0;
        com.mkulesh.micromath.widgets.CustomTextView $r3;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermComparator;

        $r1 = <com.mkulesh.micromath.formula.FormulaTermComparator$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaTermComparator$ComparatorType>;

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType getComparatorType()>();

        $i0 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType: int ordinal()>();

        $i0 = $r1[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label7;
            case 7: goto label8;
            case 8: goto label9;
            default: goto label1;
        };

     label1:
        return;

     label2:
        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.widgets.CustomTextView operatorKey>;

        virtualinvoke $r3.<com.mkulesh.micromath.widgets.CustomTextView: void setText(java.lang.CharSequence)>("=");

        return;

     label3:
        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.widgets.CustomTextView operatorKey>;

        virtualinvoke $r3.<com.mkulesh.micromath.widgets.CustomTextView: void setText(java.lang.CharSequence)>("\u2260");

        return;

     label4:
        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.widgets.CustomTextView operatorKey>;

        virtualinvoke $r3.<com.mkulesh.micromath.widgets.CustomTextView: void setText(java.lang.CharSequence)>("<");

        return;

     label5:
        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.widgets.CustomTextView operatorKey>;

        virtualinvoke $r3.<com.mkulesh.micromath.widgets.CustomTextView: void setText(java.lang.CharSequence)>("\u2264");

        return;

     label6:
        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.widgets.CustomTextView operatorKey>;

        virtualinvoke $r3.<com.mkulesh.micromath.widgets.CustomTextView: void setText(java.lang.CharSequence)>(">");

        return;

     label7:
        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.widgets.CustomTextView operatorKey>;

        virtualinvoke $r3.<com.mkulesh.micromath.widgets.CustomTextView: void setText(java.lang.CharSequence)>("\u2265");

        return;

     label8:
        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.widgets.CustomTextView operatorKey>;

        virtualinvoke $r3.<com.mkulesh.micromath.widgets.CustomTextView: void setText(int)>(2131099848);

        return;

     label9:
        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.widgets.CustomTextView operatorKey>;

        virtualinvoke $r3.<com.mkulesh.micromath.widgets.CustomTextView: void setText(int)>(2131099856);

        return;
    }
    public boolean changeComparatorType(com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType)
    {
        com.mkulesh.micromath.formula.FormulaTermComparator r0;
        com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType $r1, $r3, $r4;
        com.mkulesh.micromath.widgets.CustomTextView $r2;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermComparator;

        $r1 := @parameter0: com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.widgets.CustomTextView operatorKey>;

        if $r2 != null goto label1;

        return 0;

     label1:
        $r3 = <com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType: com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType COMPARATOR_AND>;

        if $r1 == $r3 goto label2;

        $r3 = <com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType: com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType COMPARATOR_OR>;

        if $r1 == $r3 goto label2;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType comparatorType>;

        $r4 = <com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType: com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType COMPARATOR_AND>;

        if $r3 == $r4 goto label2;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType comparatorType>;

        $r4 = <com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType: com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType COMPARATOR_OR>;

        if $r3 == $r4 goto label2;

        r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType comparatorType> = $r1;

        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTermComparator: void updateOperatorKey()>();

        return 1;

     label2:
        return 0;
    }
    public com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType getComparatorType()
    {
        com.mkulesh.micromath.formula.FormulaTermComparator r0;
        com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType r1;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermComparator;

        r1 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType comparatorType>;

        return r1;
    }
    public com.mkulesh.micromath.math.CalculatedValue$ValueType getDerivativeValue(java.lang.String, com.mkulesh.micromath.formula.CalculaterTask, com.mkulesh.micromath.math.CalculatedValue) throws com.mkulesh.micromath.formula.CalculaterTask$CancelException
    {
        com.mkulesh.micromath.formula.FormulaTermComparator r0;
        java.lang.String $r1;
        com.mkulesh.micromath.formula.CalculaterTask $r2;
        com.mkulesh.micromath.math.CalculatedValue $r3;
        com.mkulesh.micromath.math.CalculatedValue$ValueType $r4;
        com.mkulesh.micromath.math.CalculatedValue$ErrorType $r5;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermComparator;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.mkulesh.micromath.formula.CalculaterTask;

        $r3 := @parameter2: com.mkulesh.micromath.math.CalculatedValue;

        $r5 = <com.mkulesh.micromath.math.CalculatedValue$ErrorType: com.mkulesh.micromath.math.CalculatedValue$ErrorType TERM_NOT_READY>;

        $r4 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType invalidate(com.mkulesh.micromath.math.CalculatedValue$ErrorType)>($r5);

        return $r4;
    }
    public java.lang.String getTermCode()
    {
        com.mkulesh.micromath.formula.FormulaTermComparator r0;
        java.util.Locale $r1;
        com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType $r2;
        java.lang.String $r3;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermComparator;

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType getComparatorType()>();

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType: java.lang.String toString()>();

        $r1 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1);

        return $r3;
    }
    public com.mkulesh.micromath.formula.FormulaTerm$TermType getTermType()
    {
        com.mkulesh.micromath.formula.FormulaTermComparator r0;
        com.mkulesh.micromath.formula.FormulaTerm$TermType r1;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermComparator;

        r1 = <com.mkulesh.micromath.formula.FormulaTerm$TermType: com.mkulesh.micromath.formula.FormulaTerm$TermType COMPARATOR>;

        return r1;
    }
    public com.mkulesh.micromath.math.CalculatedValue$ValueType getValue(com.mkulesh.micromath.formula.CalculaterTask, com.mkulesh.micromath.math.CalculatedValue) throws com.mkulesh.micromath.formula.CalculaterTask$CancelException
    {
        com.mkulesh.micromath.formula.FormulaTermComparator r0;
        com.mkulesh.micromath.formula.CalculaterTask $r1;
        com.mkulesh.micromath.math.CalculatedValue $r2, $r5;
        double $d0, $d1, $d2;
        com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType $r3;
        com.mkulesh.micromath.formula.TermField $r4;
        int[] $r6;
        int $i0;
        com.mkulesh.micromath.math.CalculatedValue$ErrorType $r7;
        com.mkulesh.micromath.math.CalculatedValue$ValueType $r8;
        byte $b1;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermComparator;

        $r1 := @parameter0: com.mkulesh.micromath.formula.CalculaterTask;

        $r2 := @parameter1: com.mkulesh.micromath.math.CalculatedValue;

        $d0 = 1.0;

        $d1 = -1.0;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType comparatorType>;

        if $r3 == null goto label01;

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.TermField leftTerm>;

        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.math.CalculatedValue leftTermValue>;

        virtualinvoke $r4.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.math.CalculatedValue$ValueType getValue(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.math.CalculatedValue)>($r1, $r5);

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.TermField rightTerm>;

        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.math.CalculatedValue rightTermValue>;

        virtualinvoke $r4.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.math.CalculatedValue$ValueType getValue(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.math.CalculatedValue)>($r1, $r5);

        $r6 = <com.mkulesh.micromath.formula.FormulaTermComparator$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaTermComparator$ComparatorType>;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType comparatorType>;

        $i0 = virtualinvoke $r3.<com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType: int ordinal()>();

        $i0 = $r6[$i0];

        lookupswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label05;
            case 3: goto label08;
            case 4: goto label11;
            case 5: goto label14;
            case 6: goto label17;
            case 7: goto label20;
            case 8: goto label23;
            default: goto label01;
        };

     label01:
        $r7 = <com.mkulesh.micromath.math.CalculatedValue$ErrorType: com.mkulesh.micromath.math.CalculatedValue$ErrorType TERM_NOT_READY>;

        $r8 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType invalidate(com.mkulesh.micromath.math.CalculatedValue$ErrorType)>($r7);

        return $r8;

     label02:
        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.math.CalculatedValue leftTermValue>;

        $d1 = virtualinvoke $r5.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.math.CalculatedValue rightTermValue>;

        $d2 = virtualinvoke $r5.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $b1 = $d1 cmpl $d2;

        if $b1 != 0 goto label04;

     label03:
        $r8 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>($d0);

        return $r8;

     label04:
        $d0 = -1.0;

        goto label03;

     label05:
        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.math.CalculatedValue leftTermValue>;

        $d1 = virtualinvoke $r5.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.math.CalculatedValue rightTermValue>;

        $d2 = virtualinvoke $r5.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $b1 = $d1 cmpl $d2;

        if $b1 == 0 goto label07;

     label06:
        $r8 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>($d0);

        return $r8;

     label07:
        $d0 = -1.0;

        goto label06;

     label08:
        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.math.CalculatedValue leftTermValue>;

        $d1 = virtualinvoke $r5.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.math.CalculatedValue rightTermValue>;

        $d2 = virtualinvoke $r5.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $b1 = $d1 cmpg $d2;

        if $b1 >= 0 goto label10;

     label09:
        $r8 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>($d0);

        return $r8;

     label10:
        $d0 = -1.0;

        goto label09;

     label11:
        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.math.CalculatedValue leftTermValue>;

        $d1 = virtualinvoke $r5.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.math.CalculatedValue rightTermValue>;

        $d2 = virtualinvoke $r5.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $b1 = $d1 cmpg $d2;

        if $b1 > 0 goto label13;

     label12:
        $r8 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>($d0);

        return $r8;

     label13:
        $d0 = -1.0;

        goto label12;

     label14:
        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.math.CalculatedValue leftTermValue>;

        $d1 = virtualinvoke $r5.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.math.CalculatedValue rightTermValue>;

        $d2 = virtualinvoke $r5.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $b1 = $d1 cmpl $d2;

        if $b1 <= 0 goto label16;

     label15:
        $r8 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>($d0);

        return $r8;

     label16:
        $d0 = -1.0;

        goto label15;

     label17:
        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.math.CalculatedValue leftTermValue>;

        $d1 = virtualinvoke $r5.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.math.CalculatedValue rightTermValue>;

        $d2 = virtualinvoke $r5.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $b1 = $d1 cmpl $d2;

        if $b1 < 0 goto label19;

     label18:
        $r8 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>($d0);

        return $r8;

     label19:
        $d0 = -1.0;

        goto label18;

     label20:
        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.math.CalculatedValue leftTermValue>;

        $d1 = virtualinvoke $r5.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $b1 = $d1 cmpl 0.0;

        if $b1 <= 0 goto label22;

        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.math.CalculatedValue rightTermValue>;

        $d1 = virtualinvoke $r5.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $b1 = $d1 cmpl 0.0;

        if $b1 <= 0 goto label22;

     label21:
        $r8 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>($d0);

        return $r8;

     label22:
        $d0 = -1.0;

        goto label21;

     label23:
        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.math.CalculatedValue leftTermValue>;

        $d0 = virtualinvoke $r5.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $b1 = $d0 cmpl 0.0;

        if $b1 > 0 goto label24;

        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.math.CalculatedValue rightTermValue>;

        $d0 = virtualinvoke $r5.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $b1 = $d0 cmpl 0.0;

        if $b1 <= 0 goto label25;

     label24:
        $d1 = 1.0;

     label25:
        $r8 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>($d1);

        return $r8;
    }
    protected com.mkulesh.micromath.widgets.CustomTextView initializeSymbol(com.mkulesh.micromath.widgets.CustomTextView)
    {
        com.mkulesh.micromath.formula.FormulaTermComparator r0;
        com.mkulesh.micromath.widgets.CustomTextView $r1;
        java.lang.CharSequence $r2;
        java.lang.String $r3, $r6;
        android.content.Context $r4;
        android.content.res.Resources $r5;
        boolean $z0;
        com.mkulesh.micromath.widgets.CustomTextView$SymbolType $r7;
        com.mkulesh.micromath.formula.FormulaBase $r8;
        com.mkulesh.micromath.formula.FormulaList $r9;
        android.support.v7.app.AppCompatActivity $r10;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermComparator;

        $r1 := @parameter0: com.mkulesh.micromath.widgets.CustomTextView;

        $r2 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: java.lang.CharSequence getText()>();

        if $r2 == null goto label3;

        $r2 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: java.lang.CharSequence getText()>();

        $r3 = interfaceinvoke $r2.<java.lang.CharSequence: java.lang.String toString()>();

        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermComparator: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131099957);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label1;

        r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.widgets.CustomTextView operatorKey> = $r1;

        $r7 = <com.mkulesh.micromath.widgets.CustomTextView$SymbolType: com.mkulesh.micromath.widgets.CustomTextView$SymbolType TEXT>;

        $r8 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r9 = virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r10 = virtualinvoke $r9.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void prepare(com.mkulesh.micromath.widgets.CustomTextView$SymbolType,android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.FormulaChangeIf)>($r7, $r10, r0);

        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTermComparator: void updateOperatorKey()>();

        return $r1;

     label1:
        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermComparator: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131099944);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        $r7 = <com.mkulesh.micromath.widgets.CustomTextView$SymbolType: com.mkulesh.micromath.widgets.CustomTextView$SymbolType LEFT_BRACKET>;

        $r8 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r9 = virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r10 = virtualinvoke $r9.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void prepare(com.mkulesh.micromath.widgets.CustomTextView$SymbolType,android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.FormulaChangeIf)>($r7, $r10, r0);

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void setText(java.lang.CharSequence)>(".");

        return $r1;

     label2:
        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermComparator: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131099964);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label3;

        $r7 = <com.mkulesh.micromath.widgets.CustomTextView$SymbolType: com.mkulesh.micromath.widgets.CustomTextView$SymbolType RIGHT_BRACKET>;

        $r8 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r9 = virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r10 = virtualinvoke $r9.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void prepare(com.mkulesh.micromath.widgets.CustomTextView$SymbolType,android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.FormulaChangeIf)>($r7, $r10, r0);

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void setText(java.lang.CharSequence)>(".");

     label3:
        return $r1;
    }
    protected com.mkulesh.micromath.widgets.CustomEditText initializeTerm(com.mkulesh.micromath.widgets.CustomEditText, android.widget.LinearLayout)
    {
        com.mkulesh.micromath.formula.FormulaTermComparator r0;
        com.mkulesh.micromath.widgets.CustomEditText $r1;
        android.widget.LinearLayout $r2;
        android.text.Editable $r3;
        java.lang.String $r4, $r7;
        android.content.Context $r5;
        android.content.res.Resources $r6;
        boolean $z0;
        com.mkulesh.micromath.formula.FormulaBase $r8;
        com.mkulesh.micromath.formula.TermField $r9;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermComparator;

        $r1 := @parameter0: com.mkulesh.micromath.widgets.CustomEditText;

        $r2 := @parameter1: android.widget.LinearLayout;

        $r3 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomEditText: android.text.Editable getText()>();

        if $r3 == null goto label2;

        $r3 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomEditText: android.text.Editable getText()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r5 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermComparator: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r6.<android.content.res.Resources: java.lang.String getString(int)>(2131099945);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label1;

        $r8 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r9 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.TermField addTerm(com.mkulesh.micromath.formula.FormulaBase,android.widget.LinearLayout,com.mkulesh.micromath.widgets.CustomEditText,com.mkulesh.micromath.widgets.FormulaChangeIf,boolean)>($r8, $r2, $r1, r0, 0);

        r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.TermField leftTerm> = $r9;

     label1:
        $r3 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomEditText: android.text.Editable getText()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r5 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermComparator: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r6.<android.content.res.Resources: java.lang.String getString(int)>(2131099965);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label2;

        $r8 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r9 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.TermField addTerm(com.mkulesh.micromath.formula.FormulaBase,android.widget.LinearLayout,com.mkulesh.micromath.widgets.CustomEditText,com.mkulesh.micromath.widgets.FormulaChangeIf,boolean)>($r8, $r2, $r1, r0, 0);

        r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.TermField rightTerm> = $r9;

     label2:
        return $r1;
    }
    public com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType isDifferentiable(java.lang.String)
    {
        com.mkulesh.micromath.formula.FormulaTermComparator r0;
        java.lang.String $r1;
        com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType r2;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermComparator;

        $r1 := @parameter0: java.lang.String;

        r2 = <com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType NONE>;

        return r2;
    }
    public boolean isUseBrackets()
    {
        com.mkulesh.micromath.formula.FormulaTermComparator r0;
        boolean z0;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermComparator;

        z0 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: boolean useBrackets>;

        return z0;
    }
    public void onDelete(com.mkulesh.micromath.widgets.CustomEditText)
    {
        com.mkulesh.micromath.formula.FormulaTermComparator r0;
        com.mkulesh.micromath.widgets.CustomEditText $r1;
        com.mkulesh.micromath.formula.TermField $r2, r3;
        int $i0;
        com.mkulesh.micromath.formula.FormulaBase $r4;
        com.mkulesh.micromath.formula.FormulaList $r5;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermComparator;

        $r1 := @parameter0: com.mkulesh.micromath.widgets.CustomEditText;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.TermField parentField>;

        if $r2 == null goto label2;

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.TermField findTerm(com.mkulesh.micromath.widgets.CustomEditText)>($r1);

        r3 = null;

        if $r2 == null goto label1;

        r3 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.TermField leftTerm>;

        if $r2 != r3 goto label3;

        r3 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.TermField rightTerm>;

     label1:
        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.TermField parentField>;

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermComparator: int removeElements()>();

        virtualinvoke $r2.<com.mkulesh.micromath.formula.TermField: void onTermDelete(int,com.mkulesh.micromath.formula.TermField)>($i0, r3);

     label2:
        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r5 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        virtualinvoke $r5.<com.mkulesh.micromath.formula.FormulaList: void onManualInput()>();

        return;

     label3:
        r3 = r0.<com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.TermField leftTerm>;

        goto label1;
    }
