com.mkulesh.micromath.formula.FormulaTermInterval extends com.mkulesh.micromath.formula.FormulaTerm
private com.mkulesh.micromath.formula.FormulaTermInterval$IntervalType intervalType
private final com.mkulesh.micromath.math.CalculatedValue maxValue
private com.mkulesh.micromath.formula.TermField maxValueTerm
private final com.mkulesh.micromath.math.CalculatedValue minValue
private com.mkulesh.micromath.formula.TermField minValueTerm
private final com.mkulesh.micromath.math.CalculatedValue nextValue
private com.mkulesh.micromath.formula.TermField nextValueTerm
    public void <init>(android.content.Context)
    {
        com.mkulesh.micromath.formula.FormulaTermInterval r0;
        android.content.Context $r1;
        com.mkulesh.micromath.math.CalculatedValue $r2;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermInterval;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTerm: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.FormulaTermInterval$IntervalType intervalType> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.TermField maxValueTerm> = null;

        $r2 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue minValue> = $r2;

        $r2 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue nextValue> = $r2;

        $r2 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue maxValue> = $r2;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.mkulesh.micromath.formula.FormulaTermInterval r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        com.mkulesh.micromath.math.CalculatedValue $r3;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermInterval;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTerm: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.FormulaTermInterval$IntervalType intervalType> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.TermField maxValueTerm> = null;

        $r3 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue minValue> = $r3;

        $r3 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue nextValue> = $r3;

        $r3 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue maxValue> = $r3;

        return;
    }
    public void <init>(com.mkulesh.micromath.formula.TermField, android.widget.LinearLayout, java.lang.String, int) throws java.lang.Exception
    {
        com.mkulesh.micromath.formula.FormulaTermInterval r0;
        com.mkulesh.micromath.formula.TermField $r1;
        android.widget.LinearLayout $r2;
        java.lang.String $r3;
        int $i0, $i1;
        com.mkulesh.micromath.formula.FormulaBase $r4;
        com.mkulesh.micromath.math.CalculatedValue $r5;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermInterval;

        $r1 := @parameter0: com.mkulesh.micromath.formula.TermField;

        $r2 := @parameter1: android.widget.LinearLayout;

        $r3 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $r4 = virtualinvoke $r1.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $i1 = $r1.<com.mkulesh.micromath.formula.TermField: int termDepth>;

        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTerm: void <init>(com.mkulesh.micromath.formula.FormulaBase,android.widget.LinearLayout,int)>($r4, $r2, $i1);

        r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.FormulaTermInterval$IntervalType intervalType> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.TermField maxValueTerm> = null;

        $r5 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r5.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue minValue> = $r5;

        $r5 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r5.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue nextValue> = $r5;

        $r5 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r5.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue maxValue> = $r5;

        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermInterval: void setParentField(com.mkulesh.micromath.formula.TermField)>($r1);

        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTermInterval: void onCreate(java.lang.String,int)>($r3, $i0);

        return;
    }
    private com.mkulesh.micromath.math.CalculatedValue getDelta(double, double, double)
    {
        com.mkulesh.micromath.formula.FormulaTermInterval r0;
        double $d0, $d1, $d2;
        com.mkulesh.micromath.math.CalculatedValue r1;
        byte $b0;
        com.mkulesh.micromath.math.CalculatedValue$ErrorType $r2;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermInterval;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $d2 := @parameter2: double;

        r1 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke r1.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        $b0 = $d1 cmpg $d0;

        if $b0 <= 0 goto label1;

        $b0 = $d2 cmpg $d1;

        if $b0 >= 0 goto label2;

     label1:
        $r2 = <com.mkulesh.micromath.math.CalculatedValue$ErrorType: com.mkulesh.micromath.math.CalculatedValue$ErrorType NOT_A_NUMBER>;

        virtualinvoke r1.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType invalidate(com.mkulesh.micromath.math.CalculatedValue$ErrorType)>($r2);

        return r1;

     label2:
        $d0 = $d1 - $d0;

        virtualinvoke r1.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>($d0);

        return r1;
    }
    public static com.mkulesh.micromath.formula.FormulaTermInterval$IntervalType getIntervalType(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r4;
        com.mkulesh.micromath.formula.FormulaTermInterval$IntervalType r2;
        int $i0, $i1, $i2;
        com.mkulesh.micromath.formula.FormulaTermInterval$IntervalType[] $r3;
        java.util.Locale $r5;
        boolean $z0;
        android.content.res.Resources $r6;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r3 = staticinvoke <com.mkulesh.micromath.formula.FormulaTermInterval$IntervalType: com.mkulesh.micromath.formula.FormulaTermInterval$IntervalType[] values()>();

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        r2 = $r3[$i1];

        $r4 = virtualinvoke r2.<com.mkulesh.micromath.formula.FormulaTermInterval$IntervalType: java.lang.String toString()>();

        $r5 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r5);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label2;

        $r6 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i2 = virtualinvoke r2.<com.mkulesh.micromath.formula.FormulaTermInterval$IntervalType: int getSymbolId()>();

        $r4 = virtualinvoke $r6.<android.content.res.Resources: java.lang.String getString(int)>($i2);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r4);

        if $z0 == 0 goto label3;

     label2:
        return r2;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        return null;
    }
    private int getNumberOfPoints(double, double, double)
    {
        com.mkulesh.micromath.formula.FormulaTermInterval r0;
        double $d0, $d1, $d2, $d3;
        byte $b0;
        int i1;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermInterval;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $d2 := @parameter2: double;

        $d3 = $d1 - $d0;

        $d3 = $d3 / $d2;

        $d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double ceil(double)>($d3);

        i1 = (int) $d3;

        if i1 <= 0 goto label1;

        $d3 = (double) i1;

        $d3 = $d3 * $d2;

        $d0 = $d3 + $d0;

        $d2 = $d2 / 2.0;

        $d1 = $d2 + $d1;

        $b0 = $d0 cmpl $d1;

        if $b0 <= 0 goto label1;

        i1 = i1 + -1;

     label1:
        return i1;
    }
    public static boolean isInterval(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        com.mkulesh.micromath.formula.FormulaTermInterval$IntervalType $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.FormulaTermInterval$IntervalType getIntervalType(android.content.Context,java.lang.String)>($r0, $r1);

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    private void onCreate(java.lang.String, int) throws java.lang.Exception
    {
        com.mkulesh.micromath.formula.FormulaTermInterval r0;
        java.lang.String $r1;
        int $i0, $i1;
        android.widget.LinearLayout $r2;
        java.lang.Exception $r3;
        java.lang.StringBuilder $r4;
        android.content.Context $r5;
        com.mkulesh.micromath.formula.FormulaTermInterval$IntervalType $r6;
        com.mkulesh.micromath.formula.TermField $r7;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermInterval;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        if $i0 < 0 goto label1;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: android.widget.LinearLayout layout>;

        $i1 = virtualinvoke $r2.<android.widget.LinearLayout: int getChildCount()>();

        if $i0 <= $i1 goto label2;

     label1:
        $r3 = new java.lang.Exception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot create FormulaFunction for invalid insertion index ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>($r1);

        throw $r3;

     label2:
        $r5 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermInterval: android.content.Context getContext()>();

        $r6 = staticinvoke <com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.FormulaTermInterval$IntervalType getIntervalType(android.content.Context,java.lang.String)>($r5, $r1);

        r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.FormulaTermInterval$IntervalType intervalType> = $r6;

        $r6 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.FormulaTermInterval$IntervalType intervalType>;

        if $r6 != null goto label3;

        $r3 = new java.lang.Exception;

        specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>("cannot create FormulaFunction for unknown function");

        throw $r3;

     label3:
        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermInterval: void inflateElements(int,boolean)>(2130903098, 1);

        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermInterval: void initializeElements(int)>($i0);

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.TermField minValueTerm>;

        if $r7 == null goto label4;

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.TermField nextValueTerm>;

        if $r7 == null goto label4;

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.TermField maxValueTerm>;

        if $r7 != null goto label5;

     label4:
        $r3 = new java.lang.Exception;

        specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>("cannot initialize function terms");

        throw $r3;

     label5:
        return;
    }
    public com.mkulesh.micromath.math.CalculatedValue$ValueType getDerivativeValue(java.lang.String, com.mkulesh.micromath.formula.CalculaterTask, com.mkulesh.micromath.math.CalculatedValue) throws com.mkulesh.micromath.formula.CalculaterTask$CancelException
    {
        com.mkulesh.micromath.formula.FormulaTermInterval r0;
        java.lang.String $r1;
        com.mkulesh.micromath.formula.CalculaterTask $r2;
        com.mkulesh.micromath.math.CalculatedValue $r3;
        com.mkulesh.micromath.math.CalculatedValue$ValueType $r4;
        com.mkulesh.micromath.math.CalculatedValue$ErrorType $r5;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermInterval;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.mkulesh.micromath.formula.CalculaterTask;

        $r3 := @parameter2: com.mkulesh.micromath.math.CalculatedValue;

        $r5 = <com.mkulesh.micromath.math.CalculatedValue$ErrorType: com.mkulesh.micromath.math.CalculatedValue$ErrorType TERM_NOT_READY>;

        $r4 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType invalidate(com.mkulesh.micromath.math.CalculatedValue$ErrorType)>($r5);

        return $r4;
    }
    public java.util.ArrayList getInterval(com.mkulesh.micromath.formula.CalculaterTask) throws com.mkulesh.micromath.formula.CalculaterTask$CancelException
    {
        com.mkulesh.micromath.formula.FormulaTermInterval r0;
        com.mkulesh.micromath.formula.CalculaterTask $r1;
        com.mkulesh.micromath.math.CalculatedValue $r2, $r4;
        com.mkulesh.micromath.formula.TermField $r3;
        boolean $z0;
        double $d0, $d1, $d2;
        int $i0, i1;
        java.util.ArrayList r5;
        java.lang.Double $r6;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermInterval;

        $r1 := @parameter0: com.mkulesh.micromath.formula.CalculaterTask;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue minValue>;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.TermField minValueTerm>;

        virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: void processRealTerm(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.formula.TermField)>($r1, $r3);

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue nextValue>;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.TermField nextValueTerm>;

        virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: void processRealTerm(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.formula.TermField)>($r1, $r3);

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue maxValue>;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.TermField maxValueTerm>;

        virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: void processRealTerm(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.formula.TermField)>($r1, $r3);

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue minValue>;

        $z0 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: boolean isNaN()>();

        if $z0 != 0 goto label7;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue nextValue>;

        $z0 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: boolean isNaN()>();

        if $z0 != 0 goto label7;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue maxValue>;

        $z0 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: boolean isNaN()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue minValue>;

        $d0 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue nextValue>;

        $d1 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue maxValue>;

        $d2 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $r2 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue getDelta(double,double,double)>($d0, $d1, $d2);

        $z0 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: boolean isNaN()>();

        if $z0 != 0 goto label7;

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue minValue>;

        $d0 = virtualinvoke $r4.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue maxValue>;

        $d1 = virtualinvoke $r4.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $d2 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $i0 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTermInterval: int getNumberOfPoints(double,double,double)>($d0, $d1, $d2);

        r5 = new java.util.ArrayList;

        specialinvoke r5.<java.util.ArrayList: void <init>(int)>($i0);

        i1 = 0;

     label2:
        if i1 > $i0 goto label8;

        if $r1 == null goto label3;

        virtualinvoke $r1.<com.mkulesh.micromath.formula.CalculaterTask: void checkCancelation()>();

     label3:
        if i1 != 0 goto label5;

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue minValue>;

        $d0 = virtualinvoke $r4.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        if i1 != $i0 goto label6;

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue maxValue>;

        $d0 = virtualinvoke $r4.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        goto label4;

     label6:
        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue minValue>;

        $d0 = virtualinvoke $r4.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $d1 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $d2 = (double) i1;

        $d1 = $d1 * $d2;

        $d0 = $d0 + $d1;

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        goto label4;

     label7:
        return null;

     label8:
        return r5;
    }
    public com.mkulesh.micromath.formula.FormulaTermInterval$IntervalType getIntervalType()
    {
        com.mkulesh.micromath.formula.FormulaTermInterval r0;
        com.mkulesh.micromath.formula.FormulaTermInterval$IntervalType r1;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermInterval;

        r1 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.FormulaTermInterval$IntervalType intervalType>;

        return r1;
    }
    public java.lang.String getTermCode()
    {
        com.mkulesh.micromath.formula.FormulaTermInterval r0;
        java.util.Locale $r1;
        com.mkulesh.micromath.formula.FormulaTermInterval$IntervalType $r2;
        java.lang.String $r3;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermInterval;

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.FormulaTermInterval$IntervalType getIntervalType()>();

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaTermInterval$IntervalType: java.lang.String toString()>();

        $r1 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1);

        return $r3;
    }
    public com.mkulesh.micromath.formula.FormulaTerm$TermType getTermType()
    {
        com.mkulesh.micromath.formula.FormulaTermInterval r0;
        com.mkulesh.micromath.formula.FormulaTerm$TermType r1;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermInterval;

        r1 = <com.mkulesh.micromath.formula.FormulaTerm$TermType: com.mkulesh.micromath.formula.FormulaTerm$TermType INTERVAL>;

        return r1;
    }
    public com.mkulesh.micromath.math.CalculatedValue$ValueType getValue(com.mkulesh.micromath.formula.CalculaterTask, com.mkulesh.micromath.math.CalculatedValue) throws com.mkulesh.micromath.formula.CalculaterTask$CancelException
    {
        com.mkulesh.micromath.formula.FormulaTermInterval r0;
        com.mkulesh.micromath.formula.CalculaterTask $r1;
        com.mkulesh.micromath.math.CalculatedValue $r2, $r4, $r9;
        long l0, $l3;
        com.mkulesh.micromath.formula.FormulaBase $r3;
        boolean $z0;
        com.mkulesh.micromath.formula.TermField $r5;
        com.mkulesh.micromath.math.CalculatedValue$ErrorType $r6;
        com.mkulesh.micromath.math.CalculatedValue$ValueType $r7;
        double $d0, $d1, $d2;
        com.mkulesh.micromath.formula.Equation $r8;
        int $i1;
        byte $b2;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermInterval;

        $r1 := @parameter0: com.mkulesh.micromath.formula.CalculaterTask;

        $r2 := @parameter1: com.mkulesh.micromath.math.CalculatedValue;

        $r3 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $z0 = $r3 instanceof com.mkulesh.micromath.formula.Equation;

        if $z0 == 0 goto label7;

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue minValue>;

        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.TermField minValueTerm>;

        virtualinvoke $r4.<com.mkulesh.micromath.math.CalculatedValue: void processRealTerm(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.formula.TermField)>($r1, $r5);

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue nextValue>;

        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.TermField nextValueTerm>;

        virtualinvoke $r4.<com.mkulesh.micromath.math.CalculatedValue: void processRealTerm(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.formula.TermField)>($r1, $r5);

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue maxValue>;

        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.TermField maxValueTerm>;

        virtualinvoke $r4.<com.mkulesh.micromath.math.CalculatedValue: void processRealTerm(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.formula.TermField)>($r1, $r5);

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue minValue>;

        $z0 = virtualinvoke $r4.<com.mkulesh.micromath.math.CalculatedValue: boolean isNaN()>();

        if $z0 != 0 goto label1;

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue nextValue>;

        $z0 = virtualinvoke $r4.<com.mkulesh.micromath.math.CalculatedValue: boolean isNaN()>();

        if $z0 != 0 goto label1;

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue maxValue>;

        $z0 = virtualinvoke $r4.<com.mkulesh.micromath.math.CalculatedValue: boolean isNaN()>();

        if $z0 == 0 goto label2;

     label1:
        $r6 = <com.mkulesh.micromath.math.CalculatedValue$ErrorType: com.mkulesh.micromath.math.CalculatedValue$ErrorType NOT_A_REAL>;

        $r7 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType invalidate(com.mkulesh.micromath.math.CalculatedValue$ErrorType)>($r6);

        return $r7;

     label2:
        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue minValue>;

        $d0 = virtualinvoke $r4.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue nextValue>;

        $d1 = virtualinvoke $r4.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue maxValue>;

        $d2 = virtualinvoke $r4.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $r4 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue getDelta(double,double,double)>($d0, $d1, $d2);

        $r3 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r8 = (com.mkulesh.micromath.formula.Equation) $r3;

        $r9 = virtualinvoke $r8.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.math.CalculatedValue getArgumentValue(int)>(0);

        $z0 = virtualinvoke $r4.<com.mkulesh.micromath.math.CalculatedValue: boolean isNaN()>();

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke $r9.<com.mkulesh.micromath.math.CalculatedValue: boolean isNaN()>();

        if $z0 == 0 goto label4;

     label3:
        $r6 = <com.mkulesh.micromath.math.CalculatedValue$ErrorType: com.mkulesh.micromath.math.CalculatedValue$ErrorType NOT_A_REAL>;

        $r7 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType invalidate(com.mkulesh.micromath.math.CalculatedValue$ErrorType)>($r6);

        return $r7;

     label4:
        $i1 = virtualinvoke $r9.<com.mkulesh.micromath.math.CalculatedValue: int getInteger()>();

        l0 = (long) $i1;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue minValue>;

        $d0 = virtualinvoke $r9.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue maxValue>;

        $d1 = virtualinvoke $r9.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $d2 = virtualinvoke $r4.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $i1 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTermInterval: int getNumberOfPoints(double,double,double)>($d0, $d1, $d2);

        $b2 = l0 cmp 0L;

        if $b2 != 0 goto label5;

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue minValue>;

        $d0 = virtualinvoke $r4.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $r7 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>($d0);

        return $r7;

     label5:
        $l3 = (long) $i1;

        $b2 = l0 cmp $l3;

        if $b2 != 0 goto label6;

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue maxValue>;

        $d0 = virtualinvoke $r4.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $r7 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>($d0);

        return $r7;

     label6:
        $b2 = l0 cmp 0L;

        if $b2 <= 0 goto label7;

        $l3 = (long) $i1;

        $b2 = l0 cmp $l3;

        if $b2 >= 0 goto label7;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.math.CalculatedValue minValue>;

        $d0 = virtualinvoke $r9.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $d1 = virtualinvoke $r4.<com.mkulesh.micromath.math.CalculatedValue: double getReal()>();

        $d2 = (double) l0;

        $d1 = $d1 * $d2;

        $d0 = $d0 + $d1;

        $r7 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>($d0);

        return $r7;

     label7:
        $r6 = <com.mkulesh.micromath.math.CalculatedValue$ErrorType: com.mkulesh.micromath.math.CalculatedValue$ErrorType TERM_NOT_READY>;

        $r7 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType invalidate(com.mkulesh.micromath.math.CalculatedValue$ErrorType)>($r6);

        return $r7;
    }
    protected com.mkulesh.micromath.widgets.CustomTextView initializeSymbol(com.mkulesh.micromath.widgets.CustomTextView)
    {
        com.mkulesh.micromath.formula.FormulaTermInterval r0;
        com.mkulesh.micromath.widgets.CustomTextView $r1;
        java.lang.CharSequence $r2;
        java.lang.String $r3, $r6;
        android.content.Context $r4;
        android.content.res.Resources $r5;
        boolean $z0;
        com.mkulesh.micromath.widgets.CustomTextView$SymbolType $r7;
        com.mkulesh.micromath.formula.FormulaBase $r8;
        com.mkulesh.micromath.formula.FormulaList $r9;
        android.support.v7.app.AppCompatActivity $r10;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermInterval;

        $r1 := @parameter0: com.mkulesh.micromath.widgets.CustomTextView;

        $r2 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: java.lang.CharSequence getText()>();

        if $r2 == null goto label4;

        $r2 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: java.lang.CharSequence getText()>();

        $r3 = interfaceinvoke $r2.<java.lang.CharSequence: java.lang.String toString()>();

        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermInterval: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131099944);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label1;

        $r7 = <com.mkulesh.micromath.widgets.CustomTextView$SymbolType: com.mkulesh.micromath.widgets.CustomTextView$SymbolType LEFT_SQR_BRACKET>;

        $r8 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r9 = virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r10 = virtualinvoke $r9.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void prepare(com.mkulesh.micromath.widgets.CustomTextView$SymbolType,android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.FormulaChangeIf)>($r7, $r10, r0);

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void setText(java.lang.CharSequence)>(".");

        return $r1;

     label1:
        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermInterval: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131099964);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        $r7 = <com.mkulesh.micromath.widgets.CustomTextView$SymbolType: com.mkulesh.micromath.widgets.CustomTextView$SymbolType RIGHT_SQR_BRACKET>;

        $r8 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r9 = virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r10 = virtualinvoke $r9.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void prepare(com.mkulesh.micromath.widgets.CustomTextView$SymbolType,android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.FormulaChangeIf)>($r7, $r10, r0);

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void setText(java.lang.CharSequence)>(".");

        return $r1;

     label2:
        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermInterval: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131099931);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label3;

        $r7 = <com.mkulesh.micromath.widgets.CustomTextView$SymbolType: com.mkulesh.micromath.widgets.CustomTextView$SymbolType TEXT>;

        $r8 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r9 = virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r10 = virtualinvoke $r9.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void prepare(com.mkulesh.micromath.widgets.CustomTextView$SymbolType,android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.FormulaChangeIf)>($r7, $r10, r0);

        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermInterval: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131099942);

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void setText(java.lang.CharSequence)>($r3);

        return $r1;

     label3:
        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermInterval: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131099966);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label4;

        $r7 = <com.mkulesh.micromath.widgets.CustomTextView$SymbolType: com.mkulesh.micromath.widgets.CustomTextView$SymbolType TEXT>;

        $r8 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r9 = virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r10 = virtualinvoke $r9.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void prepare(com.mkulesh.micromath.widgets.CustomTextView$SymbolType,android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.FormulaChangeIf)>($r7, $r10, r0);

        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermInterval: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131099943);

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void setText(java.lang.CharSequence)>($r3);

     label4:
        return $r1;
    }
    protected com.mkulesh.micromath.widgets.CustomEditText initializeTerm(com.mkulesh.micromath.widgets.CustomEditText, android.widget.LinearLayout)
    {
        com.mkulesh.micromath.formula.FormulaTermInterval r0;
        com.mkulesh.micromath.widgets.CustomEditText $r1;
        android.widget.LinearLayout $r2;
        android.text.Editable $r3;
        java.lang.String $r4, $r7;
        android.content.Context $r5;
        android.content.res.Resources $r6;
        boolean $z0;
        com.mkulesh.micromath.formula.FormulaBase $r8;
        com.mkulesh.micromath.formula.TermField $r9;
        com.mkulesh.micromath.formula.TermField$BracketsType $r10;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermInterval;

        $r1 := @parameter0: com.mkulesh.micromath.widgets.CustomEditText;

        $r2 := @parameter1: android.widget.LinearLayout;

        $r3 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomEditText: android.text.Editable getText()>();

        if $r3 == null goto label3;

        $r3 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomEditText: android.text.Editable getText()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r5 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermInterval: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r6.<android.content.res.Resources: java.lang.String getString(int)>(2131099953);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label1;

        $r8 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r9 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.TermField addTerm(com.mkulesh.micromath.formula.FormulaBase,android.widget.LinearLayout,com.mkulesh.micromath.widgets.CustomEditText,com.mkulesh.micromath.widgets.FormulaChangeIf,boolean)>($r8, $r2, $r1, r0, 0);

        r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.TermField minValueTerm> = $r9;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.TermField minValueTerm>;

        $r10 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType NEVER>;

        $r9.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$BracketsType bracketsType> = $r10;

        return $r1;

     label1:
        $r3 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomEditText: android.text.Editable getText()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r5 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermInterval: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r6.<android.content.res.Resources: java.lang.String getString(int)>(2131099954);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label2;

        $r8 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r9 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.TermField addTerm(com.mkulesh.micromath.formula.FormulaBase,android.widget.LinearLayout,com.mkulesh.micromath.widgets.CustomEditText,com.mkulesh.micromath.widgets.FormulaChangeIf,boolean)>($r8, $r2, $r1, r0, 0);

        r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.TermField nextValueTerm> = $r9;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.TermField nextValueTerm>;

        $r10 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType NEVER>;

        $r9.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$BracketsType bracketsType> = $r10;

        return $r1;

     label2:
        $r3 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomEditText: android.text.Editable getText()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r5 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermInterval: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r6.<android.content.res.Resources: java.lang.String getString(int)>(2131099952);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label3;

        $r8 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r9 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.TermField addTerm(com.mkulesh.micromath.formula.FormulaBase,android.widget.LinearLayout,com.mkulesh.micromath.widgets.CustomEditText,com.mkulesh.micromath.widgets.FormulaChangeIf,boolean)>($r8, $r2, $r1, r0, 0);

        r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.TermField maxValueTerm> = $r9;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermInterval: com.mkulesh.micromath.formula.TermField maxValueTerm>;

        $r10 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType NEVER>;

        $r9.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$BracketsType bracketsType> = $r10;

     label3:
        return $r1;
    }
    public com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType isDifferentiable(java.lang.String)
    {
        com.mkulesh.micromath.formula.FormulaTermInterval r0;
        java.lang.String $r1;
        com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType r2;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermInterval;

        $r1 := @parameter0: java.lang.String;

        r2 = <com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType NONE>;

        return r2;
    }
