com.mkulesh.micromath.formula.Palette$PaletteType extends java.lang.Enum
private static final com.mkulesh.micromath.formula.Palette$PaletteType[] $VALUES
public static final enum com.mkulesh.micromath.formula.Palette$PaletteType COMPARATORS
public static final enum com.mkulesh.micromath.formula.Palette$PaletteType NEW_TERM
public static final enum com.mkulesh.micromath.formula.Palette$PaletteType UPDATE_INTERVAL
public static final enum com.mkulesh.micromath.formula.Palette$PaletteType UPDATE_TERM
    static void <clinit>()
    {
        com.mkulesh.micromath.formula.Palette$PaletteType $r0;
        com.mkulesh.micromath.formula.Palette$PaletteType[] $r1;

        $r0 = new com.mkulesh.micromath.formula.Palette$PaletteType;

        specialinvoke $r0.<com.mkulesh.micromath.formula.Palette$PaletteType: void <init>(java.lang.String,int)>("NEW_TERM", 0);

        <com.mkulesh.micromath.formula.Palette$PaletteType: com.mkulesh.micromath.formula.Palette$PaletteType NEW_TERM> = $r0;

        $r0 = new com.mkulesh.micromath.formula.Palette$PaletteType;

        specialinvoke $r0.<com.mkulesh.micromath.formula.Palette$PaletteType: void <init>(java.lang.String,int)>("UPDATE_INTERVAL", 1);

        <com.mkulesh.micromath.formula.Palette$PaletteType: com.mkulesh.micromath.formula.Palette$PaletteType UPDATE_INTERVAL> = $r0;

        $r0 = new com.mkulesh.micromath.formula.Palette$PaletteType;

        specialinvoke $r0.<com.mkulesh.micromath.formula.Palette$PaletteType: void <init>(java.lang.String,int)>("UPDATE_TERM", 2);

        <com.mkulesh.micromath.formula.Palette$PaletteType: com.mkulesh.micromath.formula.Palette$PaletteType UPDATE_TERM> = $r0;

        $r0 = new com.mkulesh.micromath.formula.Palette$PaletteType;

        specialinvoke $r0.<com.mkulesh.micromath.formula.Palette$PaletteType: void <init>(java.lang.String,int)>("COMPARATORS", 3);

        <com.mkulesh.micromath.formula.Palette$PaletteType: com.mkulesh.micromath.formula.Palette$PaletteType COMPARATORS> = $r0;

        $r1 = newarray (com.mkulesh.micromath.formula.Palette$PaletteType)[4];

        $r0 = <com.mkulesh.micromath.formula.Palette$PaletteType: com.mkulesh.micromath.formula.Palette$PaletteType NEW_TERM>;

        $r1[0] = $r0;

        $r0 = <com.mkulesh.micromath.formula.Palette$PaletteType: com.mkulesh.micromath.formula.Palette$PaletteType UPDATE_INTERVAL>;

        $r1[1] = $r0;

        $r0 = <com.mkulesh.micromath.formula.Palette$PaletteType: com.mkulesh.micromath.formula.Palette$PaletteType UPDATE_TERM>;

        $r1[2] = $r0;

        $r0 = <com.mkulesh.micromath.formula.Palette$PaletteType: com.mkulesh.micromath.formula.Palette$PaletteType COMPARATORS>;

        $r1[3] = $r0;

        <com.mkulesh.micromath.formula.Palette$PaletteType: com.mkulesh.micromath.formula.Palette$PaletteType[] $VALUES> = $r1;

        return;
    }
    private void <init>(java.lang.String, int)
    {
        com.mkulesh.micromath.formula.Palette$PaletteType r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: com.mkulesh.micromath.formula.Palette$PaletteType;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }
    public static com.mkulesh.micromath.formula.Palette$PaletteType valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        com.mkulesh.micromath.formula.Palette$PaletteType $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/mkulesh/micromath/formula/Palette$PaletteType;", $r0);

        $r2 = (com.mkulesh.micromath.formula.Palette$PaletteType) $r1;

        return $r2;
    }
    public static com.mkulesh.micromath.formula.Palette$PaletteType[] values()
    {
        java.lang.Object $r0;
        com.mkulesh.micromath.formula.Palette$PaletteType[] $r1;

        $r1 = <com.mkulesh.micromath.formula.Palette$PaletteType: com.mkulesh.micromath.formula.Palette$PaletteType[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (com.mkulesh.micromath.formula.Palette$PaletteType[]) $r0;

        return $r1;
    }
