com.mkulesh.micromath.formula.FormulaTermLoop extends com.mkulesh.micromath.formula.FormulaTerm implements com.mkulesh.micromath.formula.ArgumentHolderIf
private static final java.lang.String MAX_VALUE_LAYOUT_TAG
private static final java.lang.String MIN_VALUE_LAYOUT_TAG
private static final java.lang.String SYMBOL_LAYOUT_TAG
private com.mkulesh.micromath.formula.TermField argTerm
private final com.mkulesh.micromath.math.CalculatedValue argValue
private final com.mkulesh.micromath.math.CalculatedValue calcVal
private com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType differentiableType
private com.mkulesh.micromath.formula.TermField indexTerm
private final com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator loopCalculator
private com.mkulesh.micromath.formula.FormulaTermLoop$LoopType loopType
private final com.mkulesh.micromath.math.CalculatedValue maxValue
private android.widget.LinearLayout maxValueLayout
private com.mkulesh.micromath.formula.TermField maxValueTerm
private final com.mkulesh.micromath.math.CalculatedValue minValue
private android.widget.LinearLayout minValueLayout
private com.mkulesh.micromath.formula.TermField minValueTerm
private android.widget.LinearLayout symbolLayout
private boolean useBrackets
    public void <init>(android.content.Context)
    {
        com.mkulesh.micromath.formula.FormulaTermLoop r0;
        android.content.Context $r1;
        com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator $r2;
        com.mkulesh.micromath.math.CalculatedValue $r3;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermLoop;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTerm: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType loopType> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField indexTerm> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField minValueTerm> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField maxValueTerm> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField argTerm> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.widget.LinearLayout symbolLayout> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.widget.LinearLayout minValueLayout> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.widget.LinearLayout maxValueLayout> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: boolean useBrackets> = 0;

        $r2 = new com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator;

        specialinvoke $r2.<com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator: void <init>(com.mkulesh.micromath.formula.FormulaTermLoop)>(r0);

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator loopCalculator> = $r2;

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType differentiableType> = null;

        $r3 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue minValue> = $r3;

        $r3 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue maxValue> = $r3;

        $r3 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue calcVal> = $r3;

        $r3 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue argValue> = $r3;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.mkulesh.micromath.formula.FormulaTermLoop r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator $r3;
        com.mkulesh.micromath.math.CalculatedValue $r4;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermLoop;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTerm: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType loopType> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField indexTerm> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField minValueTerm> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField maxValueTerm> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField argTerm> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.widget.LinearLayout symbolLayout> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.widget.LinearLayout minValueLayout> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.widget.LinearLayout maxValueLayout> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: boolean useBrackets> = 0;

        $r3 = new com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator;

        specialinvoke $r3.<com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator: void <init>(com.mkulesh.micromath.formula.FormulaTermLoop)>(r0);

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator loopCalculator> = $r3;

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType differentiableType> = null;

        $r4 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r4.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue minValue> = $r4;

        $r4 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r4.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue maxValue> = $r4;

        $r4 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r4.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue calcVal> = $r4;

        $r4 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r4.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue argValue> = $r4;

        return;
    }
    public void <init>(com.mkulesh.micromath.formula.TermField, android.widget.LinearLayout, java.lang.String, int) throws java.lang.Exception
    {
        com.mkulesh.micromath.formula.FormulaTermLoop r0;
        com.mkulesh.micromath.formula.TermField $r1;
        android.widget.LinearLayout $r2;
        java.lang.String $r3;
        int $i0, $i1;
        com.mkulesh.micromath.formula.FormulaBase $r4;
        com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator $r5;
        com.mkulesh.micromath.math.CalculatedValue $r6;
        com.mkulesh.micromath.formula.TermField$BracketsType $r7;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermLoop;

        $r1 := @parameter0: com.mkulesh.micromath.formula.TermField;

        $r2 := @parameter1: android.widget.LinearLayout;

        $r3 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $r4 = virtualinvoke $r1.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $i1 = $r1.<com.mkulesh.micromath.formula.TermField: int termDepth>;

        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTerm: void <init>(com.mkulesh.micromath.formula.FormulaBase,android.widget.LinearLayout,int)>($r4, $r2, $i1);

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType loopType> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField indexTerm> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField minValueTerm> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField maxValueTerm> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField argTerm> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.widget.LinearLayout symbolLayout> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.widget.LinearLayout minValueLayout> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.widget.LinearLayout maxValueLayout> = null;

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: boolean useBrackets> = 0;

        $r5 = new com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator;

        specialinvoke $r5.<com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator: void <init>(com.mkulesh.micromath.formula.FormulaTermLoop)>(r0);

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator loopCalculator> = $r5;

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType differentiableType> = null;

        $r6 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r6.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue minValue> = $r6;

        $r6 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r6.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue maxValue> = $r6;

        $r6 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r6.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue calcVal> = $r6;

        $r6 = new com.mkulesh.micromath.math.CalculatedValue;

        specialinvoke $r6.<com.mkulesh.micromath.math.CalculatedValue: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue argValue> = $r6;

        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: void setParentField(com.mkulesh.micromath.formula.TermField)>($r1);

        $r7 = $r1.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$BracketsType bracketsType>;

        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: void onCreate(java.lang.String,int,com.mkulesh.micromath.formula.TermField$BracketsType)>($r3, $i0, $r7);

        return;
    }
    static com.mkulesh.micromath.math.CalculatedValue access$000(com.mkulesh.micromath.formula.FormulaTermLoop)
    {
        com.mkulesh.micromath.formula.FormulaTermLoop $r0;
        com.mkulesh.micromath.math.CalculatedValue r1;

        $r0 := @parameter0: com.mkulesh.micromath.formula.FormulaTermLoop;

        r1 = $r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue argValue>;

        return r1;
    }
    static com.mkulesh.micromath.math.CalculatedValue access$100(com.mkulesh.micromath.formula.FormulaTermLoop)
    {
        com.mkulesh.micromath.formula.FormulaTermLoop $r0;
        com.mkulesh.micromath.math.CalculatedValue r1;

        $r0 := @parameter0: com.mkulesh.micromath.formula.FormulaTermLoop;

        r1 = $r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue calcVal>;

        return r1;
    }
    static com.mkulesh.micromath.formula.TermField access$200(com.mkulesh.micromath.formula.FormulaTermLoop)
    {
        com.mkulesh.micromath.formula.FormulaTermLoop $r0;
        com.mkulesh.micromath.formula.TermField r1;

        $r0 := @parameter0: com.mkulesh.micromath.formula.FormulaTermLoop;

        r1 = $r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField argTerm>;

        return r1;
    }
    static com.mkulesh.micromath.formula.TermField access$300(com.mkulesh.micromath.formula.FormulaTermLoop)
    {
        com.mkulesh.micromath.formula.FormulaTermLoop $r0;
        com.mkulesh.micromath.formula.TermField r1;

        $r0 := @parameter0: com.mkulesh.micromath.formula.FormulaTermLoop;

        r1 = $r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField indexTerm>;

        return r1;
    }
    static com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator access$400(com.mkulesh.micromath.formula.FormulaTermLoop)
    {
        com.mkulesh.micromath.formula.FormulaTermLoop $r0;
        com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator r1;

        $r0 := @parameter0: com.mkulesh.micromath.formula.FormulaTermLoop;

        r1 = $r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator loopCalculator>;

        return r1;
    }
    static com.mkulesh.micromath.math.CalculatedValue access$500(com.mkulesh.micromath.formula.FormulaTermLoop)
    {
        com.mkulesh.micromath.formula.FormulaTermLoop $r0;
        com.mkulesh.micromath.math.CalculatedValue r1;

        $r0 := @parameter0: com.mkulesh.micromath.formula.FormulaTermLoop;

        r1 = $r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue minValue>;

        return r1;
    }
    static com.mkulesh.micromath.math.CalculatedValue access$600(com.mkulesh.micromath.formula.FormulaTermLoop)
    {
        com.mkulesh.micromath.formula.FormulaTermLoop $r0;
        com.mkulesh.micromath.math.CalculatedValue r1;

        $r0 := @parameter0: com.mkulesh.micromath.formula.FormulaTermLoop;

        r1 = $r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue maxValue>;

        return r1;
    }
    private boolean calculateBoundaries(com.mkulesh.micromath.formula.CalculaterTask) throws com.mkulesh.micromath.formula.CalculaterTask$CancelException
    {
        com.mkulesh.micromath.formula.FormulaTermLoop r0;
        com.mkulesh.micromath.formula.CalculaterTask $r1;
        com.mkulesh.micromath.math.CalculatedValue $r2;
        com.mkulesh.micromath.math.CalculatedValue$ErrorType $r3;
        com.mkulesh.micromath.formula.TermField $r4;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermLoop;

        $r1 := @parameter0: com.mkulesh.micromath.formula.CalculaterTask;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue minValue>;

        $r3 = <com.mkulesh.micromath.math.CalculatedValue$ErrorType: com.mkulesh.micromath.math.CalculatedValue$ErrorType TERM_NOT_READY>;

        virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType invalidate(com.mkulesh.micromath.math.CalculatedValue$ErrorType)>($r3);

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField minValueTerm>;

        if $r4 == null goto label1;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue minValue>;

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField minValueTerm>;

        virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: void processRealTerm(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.formula.TermField)>($r1, $r4);

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue minValue>;

        $z0 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: boolean isNaN()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue maxValue>;

        $r3 = <com.mkulesh.micromath.math.CalculatedValue$ErrorType: com.mkulesh.micromath.math.CalculatedValue$ErrorType TERM_NOT_READY>;

        virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType invalidate(com.mkulesh.micromath.math.CalculatedValue$ErrorType)>($r3);

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField maxValueTerm>;

        if $r4 == null goto label2;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue maxValue>;

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField maxValueTerm>;

        virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: void processRealTerm(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.formula.TermField)>($r1, $r4);

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue maxValue>;

        $z0 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: boolean isNaN()>();

        if $z0 != 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }
    private android.widget.LinearLayout getLayoutWithTag(java.lang.String)
    {
        com.mkulesh.micromath.formula.FormulaTermLoop r0;
        java.lang.String $r1;
        android.view.View $r2;
        android.widget.LinearLayout $r3;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermLoop;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.widget.LinearLayout layout>;

        $r2 = virtualinvoke $r3.<android.widget.LinearLayout: android.view.View findViewWithTag(java.lang.Object)>($r1);

        $r3 = (android.widget.LinearLayout) $r2;

        if $r3 == null goto label1;

        virtualinvoke $r3.<android.widget.LinearLayout: void setTag(java.lang.Object)>(null);

     label1:
        return $r3;
    }
    public static com.mkulesh.micromath.formula.FormulaTermLoop$LoopType getLoopType(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r4;
        com.mkulesh.micromath.formula.FormulaTermLoop$LoopType r2;
        int $i0, $i1, $i2;
        com.mkulesh.micromath.formula.FormulaTermLoop$LoopType[] $r3;
        java.util.Locale $r5;
        boolean $z0;
        android.content.res.Resources $r6;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r3 = staticinvoke <com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType[] values()>();

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        r2 = $r3[$i1];

        $r4 = virtualinvoke r2.<com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: java.lang.String toString()>();

        $r5 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r5);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label2;

        $r6 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i2 = virtualinvoke r2.<com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: int getSymbolId()>();

        $r4 = virtualinvoke $r6.<android.content.res.Resources: java.lang.String getString(int)>($i2);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r4);

        if $z0 == 0 goto label3;

     label2:
        return r2;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        return null;
    }
    public static boolean isLoop(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        com.mkulesh.micromath.formula.FormulaTermLoop$LoopType $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType getLoopType(android.content.Context,java.lang.String)>($r0, $r1);

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    private boolean isLoopDifferentiable(java.lang.String)
    {
        com.mkulesh.micromath.formula.FormulaTermLoop r0;
        java.lang.String $r1;
        com.mkulesh.micromath.formula.FormulaTermLoop$LoopType $r2, $r3;
        com.mkulesh.micromath.formula.TermField $r4;
        com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType $r5, $r7;
        int $i0, $i1;
        com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType[] $r6;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermLoop;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType loopType>;

        $r3 = <com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType SUMMATION>;

        if $r2 == $r3 goto label1;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType loopType>;

        $r3 = <com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType PRODUCT>;

        if $r2 == $r3 goto label1;

        return 0;

     label1:
        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField minValueTerm>;

        if $r4 == null goto label2;

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField maxValueTerm>;

        if $r4 == null goto label2;

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField minValueTerm>;

        $r5 = virtualinvoke $r4.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType isDifferentiable(java.lang.String)>($r1);

        $i0 = virtualinvoke $r5.<com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: int ordinal()>();

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField maxValueTerm>;

        $r5 = virtualinvoke $r4.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType isDifferentiable(java.lang.String)>($r1);

        $i1 = virtualinvoke $r5.<com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: int ordinal()>();

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $r6 = staticinvoke <com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType[] values()>();

        $r5 = $r6[$i0];

        $r7 = <com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType INDEPENDENT>;

        if $r5 != $r7 goto label2;

        return 1;

     label2:
        return 0;
    }
    private void onCreate(java.lang.String, int, com.mkulesh.micromath.formula.TermField$BracketsType) throws java.lang.Exception
    {
        com.mkulesh.micromath.formula.FormulaTermLoop r0;
        java.lang.String $r1, $r13;
        int $i0, $i1;
        com.mkulesh.micromath.formula.TermField$BracketsType $r2, $r10;
        boolean $z0;
        android.widget.LinearLayout $r3;
        java.lang.Exception $r4;
        java.lang.StringBuilder $r5;
        android.content.Context $r6;
        com.mkulesh.micromath.formula.FormulaTermLoop$LoopType $r7, $r11;
        int[] $r8;
        com.mkulesh.micromath.formula.TermField $r9;
        android.content.res.Resources $r12;
        java.lang.CharSequence $r14;
        com.mkulesh.micromath.formula.FormulaBase$ValidationPassType $r15;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermLoop;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: com.mkulesh.micromath.formula.TermField$BracketsType;

        $z0 = 0;

        if $i0 < 0 goto label01;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.widget.LinearLayout layout>;

        $i1 = virtualinvoke $r3.<android.widget.LinearLayout: int getChildCount()>();

        if $i0 <= $i1 goto label02;

     label01:
        $r4 = new java.lang.Exception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot create FormulaTermLoop for invalid insertion index ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>($r1);

        throw $r4;

     label02:
        $r6 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.content.Context getContext()>();

        $r7 = staticinvoke <com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType getLoopType(android.content.Context,java.lang.String)>($r6, $r1);

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType loopType> = $r7;

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType loopType>;

        if $r7 != null goto label03;

        $r4 = new java.lang.Exception;

        specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>("cannot create FormulaTermLoop for unknown loop type");

        throw $r4;

     label03:
        $r8 = <com.mkulesh.micromath.formula.FormulaTermLoop$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaTermLoop$LoopType>;

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType loopType>;

        $i1 = virtualinvoke $r7.<com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: int ordinal()>();

        $i1 = $r8[$i1];

        lookupswitch($i1)
        {
            case 1: goto label06;
            case 2: goto label06;
            case 3: goto label10;
            case 4: goto label14;
            default: goto label04;
        };

     label04:
        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: void initializeElements(int)>($i0);

        $r3 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.widget.LinearLayout getLayoutWithTag(java.lang.String)>("SYMBOL_LAYOUT_TAG");

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.widget.LinearLayout symbolLayout> = $r3;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField indexTerm>;

        if $r9 == null goto label05;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField argTerm>;

        if $r9 == null goto label05;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.widget.LinearLayout symbolLayout>;

        if $r3 != null goto label18;

     label05:
        $r4 = new java.lang.Exception;

        specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>("cannot initialize loop terms");

        throw $r4;

     label06:
        $r10 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType ALWAYS>;

        if $r2 != $r10 goto label07;

        $z0 = 1;

     label07:
        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: boolean useBrackets> = $z0;

        $z0 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: boolean useBrackets>;

        if $z0 == 0 goto label09;

        $i1 = 2130903100;

     label08:
        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: void inflateElements(int,boolean)>($i1, 1);

        goto label04;

     label09:
        $i1 = 2130903099;

        goto label08;

     label10:
        $r10 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType ALWAYS>;

        if $r2 != $r10 goto label11;

        $z0 = 1;

     label11:
        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: boolean useBrackets> = $z0;

        $z0 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: boolean useBrackets>;

        if $z0 == 0 goto label13;

        $i1 = 2130903104;

     label12:
        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: void inflateElements(int,boolean)>($i1, 1);

        goto label04;

     label13:
        $i1 = 2130903103;

        goto label12;

     label14:
        $r10 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType ALWAYS>;

        if $r2 != $r10 goto label15;

        $z0 = 1;

     label15:
        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: boolean useBrackets> = $z0;

        $z0 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: boolean useBrackets>;

        if $z0 == 0 goto label17;

        $i1 = 2130903102;

     label16:
        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: void inflateElements(int,boolean)>($i1, 1);

        goto label04;

     label17:
        $i1 = 2130903101;

        goto label16;

     label18:
        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType loopType>;

        $r11 = <com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType DERIVATIVE>;

        if $r7 == $r11 goto label21;

        $r3 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.widget.LinearLayout getLayoutWithTag(java.lang.String)>("MIN_VALUE_LAYOUT_TAG");

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.widget.LinearLayout minValueLayout> = $r3;

        $r3 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.widget.LinearLayout getLayoutWithTag(java.lang.String)>("MAX_VALUE_LAYOUT_TAG");

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.widget.LinearLayout maxValueLayout> = $r3;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField minValueTerm>;

        if $r9 == null goto label19;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField maxValueTerm>;

        if $r9 != null goto label20;

     label19:
        $r4 = new java.lang.Exception;

        specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>("cannot initialize loop minimum/maximum value terms");

        throw $r4;

     label20:
        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField minValueTerm>;

        $r2 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType NEVER>;

        $r9.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$BracketsType bracketsType> = $r2;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField maxValueTerm>;

        $r2 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType NEVER>;

        $r9.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$BracketsType bracketsType> = $r2;

     label21:
        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField argTerm>;

        $r2 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType IFNECESSARY>;

        $r9.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$BracketsType bracketsType> = $r2;

        $r6 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.content.Context getContext()>();

        $r12 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType loopType>;

        $i0 = virtualinvoke $r7.<com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: int getSymbolId()>();

        $r13 = virtualinvoke $r12.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>($r13);

        if $i0 < 0 goto label29;

     label22:
        $r9 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField getArgumentTerm()>();

        $i1 = virtualinvoke $r13.<java.lang.String: int length()>();

     label23:
        $i0 = $i1 + $i0;

     label24:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r14 = virtualinvoke $r1.<java.lang.String: java.lang.CharSequence subSequence(int,int)>($i0, $i1);

        virtualinvoke $r9.<com.mkulesh.micromath.formula.TermField: void setText(java.lang.CharSequence)>($r14);

     label25:
        $r15 = <com.mkulesh.micromath.formula.FormulaBase$ValidationPassType: com.mkulesh.micromath.formula.FormulaBase$ValidationPassType VALIDATE_SINGLE_FORMULA>;

     label26:
        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: boolean isContentValid(com.mkulesh.micromath.formula.FormulaBase$ValidationPassType)>($r15);

     label27:
        return;

     label28:
        $r4 := @caughtexception;

     label29:
        return;

        catch java.lang.Exception from label22 to label23 with label28;
        catch java.lang.Exception from label24 to label25 with label28;
        catch java.lang.Exception from label26 to label27 with label28;
    }
    public int getArgumentIndex(java.lang.String)
    {
        com.mkulesh.micromath.formula.FormulaTermLoop r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermLoop;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: java.lang.String getIndexName()>();

        if $r1 == null goto label1;

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        return -1;
    }
    public com.mkulesh.micromath.formula.TermField getArgumentTerm()
    {
        com.mkulesh.micromath.formula.FormulaTermLoop r0;
        com.mkulesh.micromath.formula.TermField r1;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermLoop;

        r1 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField argTerm>;

        return r1;
    }
    public com.mkulesh.micromath.math.CalculatedValue getArgumentValue(int)
    {
        com.mkulesh.micromath.formula.FormulaTermLoop r0;
        int $i0;
        com.mkulesh.micromath.math.CalculatedValue$ErrorType $r1;
        com.mkulesh.micromath.math.CalculatedValue $r2;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermLoop;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label1;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue argValue>;

        $r1 = <com.mkulesh.micromath.math.CalculatedValue$ErrorType: com.mkulesh.micromath.math.CalculatedValue$ErrorType TERM_NOT_READY>;

        virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType invalidate(com.mkulesh.micromath.math.CalculatedValue$ErrorType)>($r1);

     label1:
        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue argValue>;

        return $r2;
    }
    public java.util.ArrayList getArguments()
    {
        com.mkulesh.micromath.formula.FormulaTermLoop r0;
        java.lang.String $r1;
        java.util.ArrayList r2;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermLoop;

        $r1 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: java.lang.String getIndexName()>();

        if $r1 == null goto label1;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return r2;

     label1:
        return null;
    }
    public com.mkulesh.micromath.math.CalculatedValue$ValueType getDerivativeValue(java.lang.String, com.mkulesh.micromath.formula.CalculaterTask, com.mkulesh.micromath.math.CalculatedValue) throws com.mkulesh.micromath.formula.CalculaterTask$CancelException
    {
        com.mkulesh.micromath.formula.FormulaTermLoop r0;
        java.lang.String $r1;
        com.mkulesh.micromath.formula.CalculaterTask $r2;
        com.mkulesh.micromath.math.CalculatedValue $r3, $r9;
        boolean $z0;
        com.mkulesh.micromath.math.CalculatedValue$ErrorType $r4;
        com.mkulesh.micromath.math.CalculatedValue$ValueType $r5;
        com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator $r6;
        int[] $r7;
        com.mkulesh.micromath.formula.FormulaTermLoop$LoopType $r8;
        int $i0;
        long $l1, $l2;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermLoop;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.mkulesh.micromath.formula.CalculaterTask;

        $r3 := @parameter2: com.mkulesh.micromath.math.CalculatedValue;

        $z0 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: boolean isLoopDifferentiable(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        $z0 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: boolean calculateBoundaries(com.mkulesh.micromath.formula.CalculaterTask)>($r2);

        if $z0 != 0 goto label1;

        $r4 = <com.mkulesh.micromath.math.CalculatedValue$ErrorType: com.mkulesh.micromath.math.CalculatedValue$ErrorType NOT_A_REAL>;

        $r5 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType invalidate(com.mkulesh.micromath.math.CalculatedValue$ErrorType)>($r4);

        return $r5;

     label1:
        $r6 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator loopCalculator>;

        virtualinvoke $r6.<com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator: void setCalculaterTask(com.mkulesh.micromath.formula.CalculaterTask)>($r2);

        $r7 = <com.mkulesh.micromath.formula.FormulaTermLoop$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaTermLoop$LoopType>;

        $r8 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType loopType>;

        $i0 = virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: int ordinal()>();

        $i0 = $r7[$i0];

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label5;
            default: goto label2;
        };

     label2:
        $r4 = <com.mkulesh.micromath.math.CalculatedValue$ErrorType: com.mkulesh.micromath.math.CalculatedValue$ErrorType NOT_A_NUMBER>;

        $r5 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType invalidate(com.mkulesh.micromath.math.CalculatedValue$ErrorType)>($r4);

        return $r5;

     label3:
        $r6 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator loopCalculator>;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue minValue>;

        $i0 = virtualinvoke $r9.<com.mkulesh.micromath.math.CalculatedValue: int getInteger()>();

        $l1 = (long) $i0;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue maxValue>;

        $i0 = virtualinvoke $r9.<com.mkulesh.micromath.math.CalculatedValue: int getInteger()>();

        $l2 = (long) $i0;

        $r5 = virtualinvoke $r6.<com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator: com.mkulesh.micromath.math.CalculatedValue$ValueType summationDerivative(java.lang.String,long,long,com.mkulesh.micromath.math.CalculatedValue)>($r1, $l1, $l2, $r3);

        return $r5;

     label4:
        $r6 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator loopCalculator>;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue minValue>;

        $i0 = virtualinvoke $r9.<com.mkulesh.micromath.math.CalculatedValue: int getInteger()>();

        $l1 = (long) $i0;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue maxValue>;

        $i0 = virtualinvoke $r9.<com.mkulesh.micromath.math.CalculatedValue: int getInteger()>();

        $l2 = (long) $i0;

        $r5 = virtualinvoke $r6.<com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator: com.mkulesh.micromath.math.CalculatedValue$ValueType productDerivative(java.lang.String,long,long,com.mkulesh.micromath.math.CalculatedValue)>($r1, $l1, $l2, $r3);

        return $r5;

     label5:
        $r4 = <com.mkulesh.micromath.math.CalculatedValue$ErrorType: com.mkulesh.micromath.math.CalculatedValue$ErrorType NOT_A_NUMBER>;

        $r5 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType invalidate(com.mkulesh.micromath.math.CalculatedValue$ErrorType)>($r4);

        return $r5;
    }
    public java.lang.String getIndexName()
    {
        com.mkulesh.micromath.formula.FormulaTermLoop r0;
        com.mkulesh.micromath.formula.TermField $r1;
        com.mkulesh.micromath.formula.TermParser $r2;
        java.lang.String $r3;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermLoop;

        $r1 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField indexTerm>;

        $r2 = virtualinvoke $r1.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermParser getParser()>();

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.formula.TermParser: java.lang.String getFunctionName()>();

        return $r3;
    }
    public com.mkulesh.micromath.formula.FormulaTermLoop$LoopType getLoopType()
    {
        com.mkulesh.micromath.formula.FormulaTermLoop r0;
        com.mkulesh.micromath.formula.FormulaTermLoop$LoopType r1;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermLoop;

        r1 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType loopType>;

        return r1;
    }
    public java.lang.String getTermCode()
    {
        com.mkulesh.micromath.formula.FormulaTermLoop r0;
        java.util.Locale $r1;
        com.mkulesh.micromath.formula.FormulaTermLoop$LoopType $r2;
        java.lang.String $r3;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermLoop;

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType getLoopType()>();

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: java.lang.String toString()>();

        $r1 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1);

        return $r3;
    }
    public com.mkulesh.micromath.formula.FormulaTerm$TermType getTermType()
    {
        com.mkulesh.micromath.formula.FormulaTermLoop r0;
        com.mkulesh.micromath.formula.FormulaTerm$TermType r1;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermLoop;

        r1 = <com.mkulesh.micromath.formula.FormulaTerm$TermType: com.mkulesh.micromath.formula.FormulaTerm$TermType LOOP>;

        return r1;
    }
    public com.mkulesh.micromath.math.CalculatedValue$ValueType getValue(com.mkulesh.micromath.formula.CalculaterTask, com.mkulesh.micromath.math.CalculatedValue) throws com.mkulesh.micromath.formula.CalculaterTask$CancelException
    {
        com.mkulesh.micromath.formula.FormulaTermLoop r0;
        com.mkulesh.micromath.formula.CalculaterTask $r1;
        com.mkulesh.micromath.math.CalculatedValue $r2, $r8;
        com.mkulesh.micromath.formula.FormulaTermLoop$LoopType $r3;
        boolean $z0;
        com.mkulesh.micromath.math.CalculatedValue$ErrorType $r4;
        com.mkulesh.micromath.math.CalculatedValue$ValueType $r5;
        com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator $r6;
        int[] $r7;
        int $i0;
        long $l1, $l2;
        com.mkulesh.micromath.formula.FormulaList $r9;
        com.mkulesh.micromath.properties.DocumentProperties $r10;
        com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType $r11;
        java.lang.String $r12;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermLoop;

        $r1 := @parameter0: com.mkulesh.micromath.formula.CalculaterTask;

        $r2 := @parameter1: com.mkulesh.micromath.math.CalculatedValue;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType loopType>;

        if $r3 == null goto label2;

        $z0 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: boolean calculateBoundaries(com.mkulesh.micromath.formula.CalculaterTask)>($r1);

        if $z0 != 0 goto label1;

        $r4 = <com.mkulesh.micromath.math.CalculatedValue$ErrorType: com.mkulesh.micromath.math.CalculatedValue$ErrorType NOT_A_REAL>;

        $r5 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType invalidate(com.mkulesh.micromath.math.CalculatedValue$ErrorType)>($r4);

        return $r5;

     label1:
        $r6 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator loopCalculator>;

        virtualinvoke $r6.<com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator: void setCalculaterTask(com.mkulesh.micromath.formula.CalculaterTask)>($r1);

        $r7 = <com.mkulesh.micromath.formula.FormulaTermLoop$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaTermLoop$LoopType>;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType loopType>;

        $i0 = virtualinvoke $r3.<com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: int ordinal()>();

        $i0 = $r7[$i0];

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            default: goto label2;
        };

     label2:
        $r4 = <com.mkulesh.micromath.math.CalculatedValue$ErrorType: com.mkulesh.micromath.math.CalculatedValue$ErrorType TERM_NOT_READY>;

        $r5 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType invalidate(com.mkulesh.micromath.math.CalculatedValue$ErrorType)>($r4);

        return $r5;

     label3:
        $r6 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator loopCalculator>;

        $r8 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue minValue>;

        $i0 = virtualinvoke $r8.<com.mkulesh.micromath.math.CalculatedValue: int getInteger()>();

        $l1 = (long) $i0;

        $r8 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue maxValue>;

        $i0 = virtualinvoke $r8.<com.mkulesh.micromath.math.CalculatedValue: int getInteger()>();

        $l2 = (long) $i0;

        $r5 = virtualinvoke $r6.<com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator: com.mkulesh.micromath.math.CalculatedValue$ValueType summation(long,long,com.mkulesh.micromath.math.CalculatedValue)>($l1, $l2, $r2);

        return $r5;

     label4:
        $r6 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator loopCalculator>;

        $r8 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue minValue>;

        $i0 = virtualinvoke $r8.<com.mkulesh.micromath.math.CalculatedValue: int getInteger()>();

        $l1 = (long) $i0;

        $r8 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.math.CalculatedValue maxValue>;

        $i0 = virtualinvoke $r8.<com.mkulesh.micromath.math.CalculatedValue: int getInteger()>();

        $l2 = (long) $i0;

        $r5 = virtualinvoke $r6.<com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator: com.mkulesh.micromath.math.CalculatedValue$ValueType product(long,long,com.mkulesh.micromath.math.CalculatedValue)>($l1, $l2, $r2);

        return $r5;

     label5:
        $r6 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator loopCalculator>;

        $r9 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r10 = virtualinvoke $r9.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.properties.DocumentProperties getDocumentSettings()>();

        $i0 = $r10.<com.mkulesh.micromath.properties.DocumentProperties: int significantDigits>;

        $r5 = virtualinvoke $r6.<com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator: com.mkulesh.micromath.math.CalculatedValue$ValueType integrate(int,com.mkulesh.micromath.math.CalculatedValue)>($i0, $r2);

        return $r5;

     label6:
        $r6 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator loopCalculator>;

        $r11 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType differentiableType>;

        $r12 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: java.lang.String getIndexName()>();

        $r5 = virtualinvoke $r6.<com.mkulesh.micromath.formula.FormulaTermLoop$LoopCalculator: com.mkulesh.micromath.math.CalculatedValue$ValueType derivative(com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType,java.lang.String,com.mkulesh.micromath.math.CalculatedValue)>($r11, $r12, $r2);

        return $r5;
    }
    protected com.mkulesh.micromath.widgets.CustomTextView initializeSymbol(com.mkulesh.micromath.widgets.CustomTextView)
    {
        com.mkulesh.micromath.formula.FormulaTermLoop r0;
        com.mkulesh.micromath.widgets.CustomTextView $r1;
        java.lang.CharSequence $r2;
        java.lang.String $r3, $r6;
        android.content.Context $r4;
        android.content.res.Resources $r5;
        boolean $z0;
        int[] $r7;
        com.mkulesh.micromath.formula.FormulaTermLoop$LoopType $r8;
        int $i0;
        com.mkulesh.micromath.widgets.CustomTextView$SymbolType $r9;
        com.mkulesh.micromath.formula.FormulaBase $r10;
        com.mkulesh.micromath.formula.FormulaList $r11;
        android.support.v7.app.AppCompatActivity $r12;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermLoop;

        $r1 := @parameter0: com.mkulesh.micromath.widgets.CustomTextView;

        $r2 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: java.lang.CharSequence getText()>();

        if $r2 == null goto label9;

        $r2 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: java.lang.CharSequence getText()>();

        $r3 = interfaceinvoke $r2.<java.lang.CharSequence: java.lang.String toString()>();

        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131099957);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label6;

        $r7 = <com.mkulesh.micromath.formula.FormulaTermLoop$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaTermLoop$LoopType>;

        $r8 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType loopType>;

        $i0 = virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: int ordinal()>();

        $i0 = $r7[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            default: goto label1;
        };

     label1:
        return $r1;

     label2:
        $r9 = <com.mkulesh.micromath.widgets.CustomTextView$SymbolType: com.mkulesh.micromath.widgets.CustomTextView$SymbolType SUMMATION>;

        $r10 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r11 = virtualinvoke $r10.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r12 = virtualinvoke $r11.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void prepare(com.mkulesh.micromath.widgets.CustomTextView$SymbolType,android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.FormulaChangeIf)>($r9, $r12, r0);

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void setText(java.lang.CharSequence)>("S..");

        return $r1;

     label3:
        $r9 = <com.mkulesh.micromath.widgets.CustomTextView$SymbolType: com.mkulesh.micromath.widgets.CustomTextView$SymbolType PRODUCT>;

        $r10 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r11 = virtualinvoke $r10.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r12 = virtualinvoke $r11.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void prepare(com.mkulesh.micromath.widgets.CustomTextView$SymbolType,android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.FormulaChangeIf)>($r9, $r12, r0);

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void setText(java.lang.CharSequence)>("S..");

        return $r1;

     label4:
        $r9 = <com.mkulesh.micromath.widgets.CustomTextView$SymbolType: com.mkulesh.micromath.widgets.CustomTextView$SymbolType INTEGRAL>;

        $r10 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r11 = virtualinvoke $r10.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r12 = virtualinvoke $r11.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void prepare(com.mkulesh.micromath.widgets.CustomTextView$SymbolType,android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.FormulaChangeIf)>($r9, $r12, r0);

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void setText(java.lang.CharSequence)>("S..");

        return $r1;

     label5:
        $r9 = <com.mkulesh.micromath.widgets.CustomTextView$SymbolType: com.mkulesh.micromath.widgets.CustomTextView$SymbolType HOR_LINE>;

        $r10 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r11 = virtualinvoke $r10.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r12 = virtualinvoke $r11.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void prepare(com.mkulesh.micromath.widgets.CustomTextView$SymbolType,android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.FormulaChangeIf)>($r9, $r12, r0);

        return $r1;

     label6:
        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131099944);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label7;

        $r9 = <com.mkulesh.micromath.widgets.CustomTextView$SymbolType: com.mkulesh.micromath.widgets.CustomTextView$SymbolType LEFT_BRACKET>;

        $r10 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r11 = virtualinvoke $r10.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r12 = virtualinvoke $r11.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void prepare(com.mkulesh.micromath.widgets.CustomTextView$SymbolType,android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.FormulaChangeIf)>($r9, $r12, r0);

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void setText(java.lang.CharSequence)>(".");

        return $r1;

     label7:
        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131099964);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label8;

        $r9 = <com.mkulesh.micromath.widgets.CustomTextView$SymbolType: com.mkulesh.micromath.widgets.CustomTextView$SymbolType RIGHT_BRACKET>;

        $r10 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r11 = virtualinvoke $r10.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r12 = virtualinvoke $r11.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void prepare(com.mkulesh.micromath.widgets.CustomTextView$SymbolType,android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.FormulaChangeIf)>($r9, $r12, r0);

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void setText(java.lang.CharSequence)>(".");

        return $r1;

     label8:
        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131099947);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label9;

        $r9 = <com.mkulesh.micromath.widgets.CustomTextView$SymbolType: com.mkulesh.micromath.widgets.CustomTextView$SymbolType TEXT>;

        $r10 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r11 = virtualinvoke $r10.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r12 = virtualinvoke $r11.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomTextView: void prepare(com.mkulesh.micromath.widgets.CustomTextView$SymbolType,android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.FormulaChangeIf)>($r9, $r12, r0);

     label9:
        return $r1;
    }
    protected com.mkulesh.micromath.widgets.CustomEditText initializeTerm(com.mkulesh.micromath.widgets.CustomEditText, android.widget.LinearLayout)
    {
        com.mkulesh.micromath.formula.FormulaTermLoop r0;
        com.mkulesh.micromath.widgets.CustomEditText $r1;
        android.widget.LinearLayout $r2;
        com.mkulesh.micromath.formula.FormulaTermLoop$LoopType $r3, $r4;
        byte b0;
        android.text.Editable $r5;
        java.lang.String $r6, $r9;
        android.content.Context $r7;
        android.content.res.Resources $r8;
        boolean $z0;
        com.mkulesh.micromath.formula.FormulaBase $r10;
        com.mkulesh.micromath.formula.TermField $r11;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermLoop;

        $r1 := @parameter0: com.mkulesh.micromath.widgets.CustomEditText;

        $r2 := @parameter1: android.widget.LinearLayout;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType loopType>;

        $r4 = <com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType INTEGRAL>;

        if $r3 == $r4 goto label1;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType loopType>;

        $r4 = <com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType DERIVATIVE>;

        if $r3 != $r4 goto label3;

     label1:
        b0 = 0;

     label2:
        $r5 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomEditText: android.text.Editable getText()>();

        if $r5 == null goto label7;

        $r5 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomEditText: android.text.Editable getText()>();

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $r7 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r8.<android.content.res.Resources: java.lang.String getString(int)>(2131099952);

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label4;

        $r10 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r11 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField addTerm(com.mkulesh.micromath.formula.FormulaBase,android.widget.LinearLayout,int,com.mkulesh.micromath.widgets.CustomEditText,com.mkulesh.micromath.widgets.FormulaChangeIf,int)>($r10, $r2, -1, $r1, r0, b0);

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField maxValueTerm> = $r11;

        return $r1;

     label3:
        b0 = 3;

        goto label2;

     label4:
        $r5 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomEditText: android.text.Editable getText()>();

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $r7 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r8.<android.content.res.Resources: java.lang.String getString(int)>(2131099953);

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label5;

        $r10 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r11 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField addTerm(com.mkulesh.micromath.formula.FormulaBase,android.widget.LinearLayout,int,com.mkulesh.micromath.widgets.CustomEditText,com.mkulesh.micromath.widgets.FormulaChangeIf,int)>($r10, $r2, -1, $r1, r0, b0);

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField minValueTerm> = $r11;

        return $r1;

     label5:
        $r5 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomEditText: android.text.Editable getText()>();

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $r7 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r8.<android.content.res.Resources: java.lang.String getString(int)>(2131099941);

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label6;

        $r10 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r11 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField addTerm(com.mkulesh.micromath.formula.FormulaBase,android.widget.LinearLayout,int,com.mkulesh.micromath.widgets.CustomEditText,com.mkulesh.micromath.widgets.FormulaChangeIf,int)>($r10, $r2, -1, $r1, r0, b0);

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField indexTerm> = $r11;

        return $r1;

     label6:
        $r5 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomEditText: android.text.Editable getText()>();

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $r7 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r8.<android.content.res.Resources: java.lang.String getString(int)>(2131099921);

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label7;

        $r10 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r11 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField addTerm(com.mkulesh.micromath.formula.FormulaBase,android.widget.LinearLayout,com.mkulesh.micromath.widgets.CustomEditText,com.mkulesh.micromath.widgets.FormulaChangeIf,boolean)>($r10, $r2, $r1, r0, 0);

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField argTerm> = $r11;

     label7:
        return $r1;
    }
    public boolean isContentValid(com.mkulesh.micromath.formula.FormulaBase$ValidationPassType)
    {
        com.mkulesh.micromath.formula.FormulaTermLoop r0;
        com.mkulesh.micromath.formula.FormulaBase$ValidationPassType $r1;
        int[] $r2;
        int $i0;
        boolean $z0;
        java.lang.String $r3;
        com.mkulesh.micromath.formula.FormulaTermLoop$LoopType $r4, $r5;
        com.mkulesh.micromath.formula.TermField $r6;
        com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType $r7, $r8;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermLoop;

        $r1 := @parameter0: com.mkulesh.micromath.formula.FormulaBase$ValidationPassType;

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType differentiableType> = null;

        $r2 = <com.mkulesh.micromath.formula.FormulaTermLoop$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaBase$ValidationPassType>;

        $i0 = virtualinvoke $r1.<com.mkulesh.micromath.formula.FormulaBase$ValidationPassType: int ordinal()>();

        $i0 = $r2[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label4;
            default: goto label1;
        };

     label1:
        return 1;

     label2:
        $z0 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTerm: boolean isContentValid(com.mkulesh.micromath.formula.FormulaBase$ValidationPassType)>($r1);

        $r3 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: java.lang.String getIndexName()>();

        if $z0 == 0 goto label5;

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType loopType>;

        $r5 = <com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType DERIVATIVE>;

        if $r4 != $r5 goto label5;

        $r6 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField argTerm>;

        $r7 = virtualinvoke $r6.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType isDifferentiable(java.lang.String)>($r3);

        r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType differentiableType> = $r7;

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType differentiableType>;

        if $r7 == null goto label3;

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType differentiableType>;

        $r8 = <com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType NONE>;

        if $r7 == $r8 goto label3;

        return 1;

     label3:
        return 0;

     label4:
        $z0 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTerm: boolean isContentValid(com.mkulesh.micromath.formula.FormulaBase$ValidationPassType)>($r1);

     label5:
        return $z0;
    }
    public com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType isDifferentiable(java.lang.String)
    {
        com.mkulesh.micromath.formula.FormulaTermLoop r0;
        java.lang.String $r1;
        boolean $z0;
        com.mkulesh.micromath.formula.TermField $r2;
        com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType $r3;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermLoop;

        $r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: boolean isLoopDifferentiable(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField argTerm>;

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType isDifferentiable(java.lang.String)>($r1);

        return $r3;

     label1:
        $r3 = <com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType NUMERICAL>;

        return $r3;
    }
    public boolean isUseBrackets()
    {
        com.mkulesh.micromath.formula.FormulaTermLoop r0;
        boolean z0;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermLoop;

        z0 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: boolean useBrackets>;

        return z0;
    }
    public void onDelete(com.mkulesh.micromath.widgets.CustomEditText)
    {
        com.mkulesh.micromath.formula.FormulaTermLoop r0;
        com.mkulesh.micromath.widgets.CustomEditText $r1;
        com.mkulesh.micromath.formula.TermField $r2, $r3;
        int $i0;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermLoop;

        $r1 := @parameter0: com.mkulesh.micromath.widgets.CustomEditText;

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField findTerm(com.mkulesh.micromath.widgets.CustomEditText)>($r1);

        if $r2 == null goto label2;

        $r3 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField getArgumentTerm()>();

        if $r2 == $r3 goto label2;

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField getArgumentTerm()>();

     label1:
        $r3 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.TermField parentField>;

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: int removeElements()>();

        virtualinvoke $r3.<com.mkulesh.micromath.formula.TermField: void onTermDelete(int,com.mkulesh.micromath.formula.TermField)>($i0, $r2);

        return;

     label2:
        $r2 = null;

        goto label1;
    }
    public void updateTextSize()
    {
        com.mkulesh.micromath.formula.FormulaTermLoop r0;
        com.mkulesh.micromath.formula.FormulaList $r1;
        com.mkulesh.micromath.widgets.ScaledDimensions $r2;
        com.mkulesh.micromath.widgets.ScaledDimensions$Type $r3;
        int $i0, $i1;
        android.widget.LinearLayout $r4;
        com.mkulesh.micromath.formula.FormulaTermLoop$LoopType $r5, $r6;

        r0 := @this: com.mkulesh.micromath.formula.FormulaTermLoop;

        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaTerm: void updateTextSize()>();

        $r1 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r2 = virtualinvoke $r1.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.widgets.ScaledDimensions getDimen()>();

        $r3 = <com.mkulesh.micromath.widgets.ScaledDimensions$Type: com.mkulesh.micromath.widgets.ScaledDimensions$Type HOR_SYMBOL_PADDING>;

        $i0 = virtualinvoke $r2.<com.mkulesh.micromath.widgets.ScaledDimensions: int get(com.mkulesh.micromath.widgets.ScaledDimensions$Type)>($r3);

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.widget.LinearLayout symbolLayout>;

        virtualinvoke $r4.<android.widget.LinearLayout: void setPadding(int,int,int,int)>($i0, 0, $i0, 0);

        $r5 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType loopType>;

        $r6 = <com.mkulesh.micromath.formula.FormulaTermLoop$LoopType: com.mkulesh.micromath.formula.FormulaTermLoop$LoopType INTEGRAL>;

        if $r5 != $r6 goto label1;

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.widget.LinearLayout maxValueLayout>;

        if $r4 == null goto label1;

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.widget.LinearLayout minValueLayout>;

        if $r4 == null goto label1;

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.widget.LinearLayout maxValueLayout>;

        $i1 = $i0 * 4;

        virtualinvoke $r4.<android.widget.LinearLayout: void setPadding(int,int,int,int)>($i1, 0, 0, 0);

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaTermLoop: android.widget.LinearLayout minValueLayout>;

        $i0 = $i0 * 2;

        virtualinvoke $r4.<android.widget.LinearLayout: void setPadding(int,int,int,int)>(0, 0, $i0, 0);

     label1:
        return;
    }
