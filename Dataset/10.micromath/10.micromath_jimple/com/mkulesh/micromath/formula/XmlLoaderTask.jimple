com.mkulesh.micromath.formula.XmlLoaderTask extends android.os.AsyncTask
public java.lang.String error
private int firstFormulaId
private final int[] headerNumber
private final com.mkulesh.micromath.utils.SynchronizedBoolean isAborted
private final com.mkulesh.micromath.utils.SynchronizedBoolean isPublishRuns
private final com.mkulesh.micromath.formula.FormulaList list
private final java.lang.String name
private org.xmlpull.v1.XmlPullParser parser
public com.mkulesh.micromath.formula.XmlLoaderTask$PostAction postAction
private final java.io.InputStream stream
    void <init>(com.mkulesh.micromath.formula.FormulaList, java.io.InputStream, java.lang.String, com.mkulesh.micromath.formula.XmlLoaderTask$PostAction)
    {
        com.mkulesh.micromath.formula.XmlLoaderTask r0;
        com.mkulesh.micromath.formula.FormulaList $r1;
        java.io.InputStream $r2;
        java.lang.String $r3;
        com.mkulesh.micromath.formula.XmlLoaderTask$PostAction $r4;
        int[] $r5;
        com.mkulesh.micromath.utils.SynchronizedBoolean $r6;

        r0 := @this: com.mkulesh.micromath.formula.XmlLoaderTask;

        $r1 := @parameter0: com.mkulesh.micromath.formula.FormulaList;

        $r2 := @parameter1: java.io.InputStream;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: com.mkulesh.micromath.formula.XmlLoaderTask$PostAction;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        r0.<com.mkulesh.micromath.formula.XmlLoaderTask: org.xmlpull.v1.XmlPullParser parser> = null;

        r0.<com.mkulesh.micromath.formula.XmlLoaderTask: int firstFormulaId> = -1;

        $r6 = new com.mkulesh.micromath.utils.SynchronizedBoolean;

        specialinvoke $r6.<com.mkulesh.micromath.utils.SynchronizedBoolean: void <init>()>();

        r0.<com.mkulesh.micromath.formula.XmlLoaderTask: com.mkulesh.micromath.utils.SynchronizedBoolean isPublishRuns> = $r6;

        $r6 = new com.mkulesh.micromath.utils.SynchronizedBoolean;

        specialinvoke $r6.<com.mkulesh.micromath.utils.SynchronizedBoolean: void <init>()>();

        r0.<com.mkulesh.micromath.formula.XmlLoaderTask: com.mkulesh.micromath.utils.SynchronizedBoolean isAborted> = $r6;

        r0.<com.mkulesh.micromath.formula.XmlLoaderTask: java.lang.String error> = null;

        r0.<com.mkulesh.micromath.formula.XmlLoaderTask: com.mkulesh.micromath.formula.XmlLoaderTask$PostAction postAction> = null;

        r0.<com.mkulesh.micromath.formula.XmlLoaderTask: com.mkulesh.micromath.formula.FormulaList list> = $r1;

        r0.<com.mkulesh.micromath.formula.XmlLoaderTask: java.io.InputStream stream> = $r2;

        r0.<com.mkulesh.micromath.formula.XmlLoaderTask: java.lang.String name> = $r3;

        r0.<com.mkulesh.micromath.formula.XmlLoaderTask: com.mkulesh.micromath.formula.XmlLoaderTask$PostAction postAction> = $r4;

        $r5 = staticinvoke <com.mkulesh.micromath.properties.TextProperties: int[] getInitialNumber()>();

        r0.<com.mkulesh.micromath.formula.XmlLoaderTask: int[] headerNumber> = $r5;

        return;
    }
    public void abort()
    {
        com.mkulesh.micromath.formula.XmlLoaderTask r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        com.mkulesh.micromath.utils.SynchronizedBoolean $r3;

        r0 := @this: com.mkulesh.micromath.formula.XmlLoaderTask;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("trying to cancel XML loader task ");

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.mkulesh.micromath.utils.ViewUtils: void Debug(java.lang.Object,java.lang.String)>(r0, $r2);

        $r3 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: com.mkulesh.micromath.utils.SynchronizedBoolean isAborted>;

        virtualinvoke $r3.<com.mkulesh.micromath.utils.SynchronizedBoolean: void set(boolean)>(1);

        return;
    }
    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        com.mkulesh.micromath.formula.XmlLoaderTask r0;
        java.lang.Void $r1;
        java.lang.Object[] $r2;
        java.lang.Void[] $r3;

        r0 := @this: com.mkulesh.micromath.formula.XmlLoaderTask;

        $r2 := @parameter0: java.lang.Object[];

        $r3 = (java.lang.Void[]) $r2;

        $r1 = virtualinvoke r0.<com.mkulesh.micromath.formula.XmlLoaderTask: java.lang.Void doInBackground(java.lang.Void[])>($r3);

        return $r1;
    }
    protected transient java.lang.Void doInBackground(java.lang.Void[])
    {
        com.mkulesh.micromath.formula.XmlLoaderTask r0;
        java.lang.Void[] $r1;
        java.lang.Exception r2, $r23;
        com.mkulesh.micromath.utils.SynchronizedBoolean $r3, $r19;
        int $i0;
        org.xmlpull.v1.XmlPullParser $r4;
        java.io.InputStream $r5;
        boolean z0, $z1;
        java.lang.String $r6, $r7;
        com.mkulesh.micromath.formula.FormulaList $r8;
        android.support.v7.app.AppCompatActivity $r9;
        android.content.res.Resources $r10;
        java.lang.Object[] $r11;
        java.lang.StringBuilder $r12;
        org.xmlpull.v1.XmlPullParserFactory $r13;
        com.mkulesh.micromath.properties.DocumentProperties $r14;
        com.mkulesh.micromath.formula.FormulaBase$BaseType r15, $r17;
        java.util.Locale $r16;
        com.mkulesh.micromath.formula.FormulaBase$BaseType[] $r18;
        java.lang.Throwable $r20;
        com.mkulesh.micromath.formula.XmlLoaderTask$PostAction $r21;
        java.lang.InterruptedException $r22;

        r0 := @this: com.mkulesh.micromath.formula.XmlLoaderTask;

        $r1 := @parameter0: java.lang.Void[];

        $r3 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: com.mkulesh.micromath.utils.SynchronizedBoolean isPublishRuns>;

        virtualinvoke $r3.<com.mkulesh.micromath.utils.SynchronizedBoolean: void set(boolean)>(0);

        $r3 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: com.mkulesh.micromath.utils.SynchronizedBoolean isAborted>;

        virtualinvoke $r3.<com.mkulesh.micromath.utils.SynchronizedBoolean: void set(boolean)>(0);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 <= 10 goto label15;

     label01:
        $r4 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        r0.<com.mkulesh.micromath.formula.XmlLoaderTask: org.xmlpull.v1.XmlPullParser parser> = $r4;

     label02:
        $r4 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: org.xmlpull.v1.XmlPullParser parser>;

        interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#process-namespaces", 0);

        $r4 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: org.xmlpull.v1.XmlPullParser parser>;

        $r5 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: java.io.InputStream stream>;

        interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>($r5, null);

        $r4 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: org.xmlpull.v1.XmlPullParser parser>;

        interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: int nextTag()>();

     label03:
        z0 = 0;

     label04:
        $r4 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: org.xmlpull.v1.XmlPullParser parser>;

        $i0 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>();

     label05:
        if $i0 <= 0 goto label10;

     label06:
        $r4 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: org.xmlpull.v1.XmlPullParser parser>;

        $r6 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(int)>(0);

     label07:
        if $r6 == null goto label10;

        $r7 = "http://micromath.mkulesh.com";

     label08:
        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

     label09:
        if $z1 == 0 goto label10;

        z0 = 1;

     label10:
        if z0 != 0 goto label19;

     label11:
        $r8 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: com.mkulesh.micromath.formula.FormulaList list>;

        $r9 = virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        $r10 = virtualinvoke $r9.<android.support.v7.app.AppCompatActivity: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r10.<android.content.res.Resources: java.lang.String getString(int)>(2131099805);

        $r11 = newarray (java.lang.Object)[1];

        $r7 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: java.lang.String name>;

        $r11[0] = $r7;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r6, $r11);

        r0.<com.mkulesh.micromath.formula.XmlLoaderTask: java.lang.String error> = $r6;

     label12:
        $r12 = new java.lang.StringBuilder;

     label13:
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: java.lang.String error>;

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mmt");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" key is not found");

        $r6 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.mkulesh.micromath.utils.ViewUtils: void Debug(java.lang.Object,java.lang.String)>(r0, $r6);

     label14:
        return null;

     label15:
        $r13 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        $r4 = virtualinvoke $r13.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

        r0.<com.mkulesh.micromath.formula.XmlLoaderTask: org.xmlpull.v1.XmlPullParser parser> = $r4;

     label16:
        goto label02;

     label17:
        r2 := @caughtexception;

        $r8 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: com.mkulesh.micromath.formula.FormulaList list>;

        $r9 = virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        $r10 = virtualinvoke $r9.<android.support.v7.app.AppCompatActivity: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r10.<android.content.res.Resources: java.lang.String getString(int)>(2131099782);

        $r11 = newarray (java.lang.Object)[1];

        $r7 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: java.lang.String name>;

        $r11[0] = $r7;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r6, $r11);

        r0.<com.mkulesh.micromath.formula.XmlLoaderTask: java.lang.String error> = $r6;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: java.lang.String error>;

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r6 = virtualinvoke r2.<java.lang.Exception: java.lang.String getLocalizedMessage()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.mkulesh.micromath.utils.ViewUtils: void Debug(java.lang.Object,java.lang.String)>(r0, $r6);

     label18:
        return null;

     label19:
        $r4 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: org.xmlpull.v1.XmlPullParser parser>;

     label20:
        $r6 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

     label21:
        interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, $r6, "micromath");

     label22:
        $r4 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: org.xmlpull.v1.XmlPullParser parser>;

        $i0 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: int next()>();

     label23:
        if $i0 == 3 goto label18;

     label24:
        $r4 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: org.xmlpull.v1.XmlPullParser parser>;

        $i0 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label25:
        if $i0 != 2 goto label22;

     label26:
        $r4 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: org.xmlpull.v1.XmlPullParser parser>;

        $r6 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("formulaList");

     label27:
        if z0 == 0 goto label59;

     label28:
        $r4 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: org.xmlpull.v1.XmlPullParser parser>;

     label29:
        $r6 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

     label30:
        interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, $r6, "formulaList");

        $r8 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: com.mkulesh.micromath.formula.FormulaList list>;

        $r14 = virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.properties.DocumentProperties getDocumentSettings()>();

        $r4 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: org.xmlpull.v1.XmlPullParser parser>;

        virtualinvoke $r14.<com.mkulesh.micromath.properties.DocumentProperties: void readFromXml(org.xmlpull.v1.XmlPullParser)>($r4);

     label31:
        $r4 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: org.xmlpull.v1.XmlPullParser parser>;

        $i0 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: int next()>();

     label32:
        if $i0 == 3 goto label22;

     label33:
        $r4 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: org.xmlpull.v1.XmlPullParser parser>;

        $i0 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label34:
        if $i0 != 2 goto label31;

     label35:
        $r4 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: org.xmlpull.v1.XmlPullParser parser>;

        $r6 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

     label36:
        r15 = null;

        $r16 = <java.util.Locale: java.util.Locale ENGLISH>;

     label37:
        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r16);

        $r17 = staticinvoke <com.mkulesh.micromath.formula.FormulaBase$BaseType: com.mkulesh.micromath.formula.FormulaBase$BaseType valueOf(java.lang.String)>($r7);

     label38:
        r15 = $r17;

     label39:
        if r15 == null goto label49;

     label40:
        $r3 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: com.mkulesh.micromath.utils.SynchronizedBoolean isPublishRuns>;

        virtualinvoke $r3.<com.mkulesh.micromath.utils.SynchronizedBoolean: void set(boolean)>(1);

        $r4 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: org.xmlpull.v1.XmlPullParser parser>;

     label41:
        $r7 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

     label42:
        interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, $r7, $r6);

        $r18 = newarray (com.mkulesh.micromath.formula.FormulaBase$BaseType)[1];

        $r18[0] = r15;

        virtualinvoke r0.<com.mkulesh.micromath.formula.XmlLoaderTask: void publishProgress(java.lang.Object[])>($r18);

        $r3 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: com.mkulesh.micromath.utils.SynchronizedBoolean isPublishRuns>;

        entermonitor $r3;

     label43:
        $r19 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: com.mkulesh.micromath.utils.SynchronizedBoolean isPublishRuns>;

        z0 = virtualinvoke $r19.<com.mkulesh.micromath.utils.SynchronizedBoolean: boolean isSet()>();

        if z0 == 0 goto label46;

        $r19 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: com.mkulesh.micromath.utils.SynchronizedBoolean isPublishRuns>;

        virtualinvoke $r19.<java.lang.Object: void wait()>();

        goto label43;

     label44:
        $r20 := @caughtexception;

        exitmonitor $r3;

     label45:
        throw $r20;

     label46:
        exitmonitor $r3;

     label47:
        $r6 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: java.lang.String error>;

     label48:
        if $r6 == null goto label50;

        return null;

     label49:
        $r4 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: org.xmlpull.v1.XmlPullParser parser>;

        staticinvoke <com.mkulesh.micromath.utils.XmlUtils: void skipEntry(org.xmlpull.v1.XmlPullParser)>($r4);

     label50:
        $r3 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: com.mkulesh.micromath.utils.SynchronizedBoolean isAborted>;

        z0 = virtualinvoke $r3.<com.mkulesh.micromath.utils.SynchronizedBoolean: boolean isSet()>();

     label51:
        if z0 == 0 goto label56;

     label52:
        r0.<com.mkulesh.micromath.formula.XmlLoaderTask: java.lang.String error> = null;

     label53:
        $r21 = <com.mkulesh.micromath.formula.XmlLoaderTask$PostAction: com.mkulesh.micromath.formula.XmlLoaderTask$PostAction INTERRUPT>;

     label54:
        r0.<com.mkulesh.micromath.formula.XmlLoaderTask: com.mkulesh.micromath.formula.XmlLoaderTask$PostAction postAction> = $r21;

     label55:
        return null;

     label56:
        staticinvoke <java.lang.Thread: void sleep(long)>(25L);

     label57:
        goto label31;

     label58:
        $r22 := @caughtexception;

        goto label31;

     label59:
        $r4 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: org.xmlpull.v1.XmlPullParser parser>;

        staticinvoke <com.mkulesh.micromath.utils.XmlUtils: void skipEntry(org.xmlpull.v1.XmlPullParser)>($r4);

     label60:
        goto label22;

     label61:
        $r23 := @caughtexception;

        goto label39;

        catch java.lang.Exception from label01 to label03 with label17;
        catch java.lang.Exception from label04 to label05 with label17;
        catch java.lang.Exception from label06 to label07 with label17;
        catch java.lang.Exception from label08 to label09 with label17;
        catch java.lang.Exception from label11 to label12 with label17;
        catch java.lang.Exception from label13 to label14 with label17;
        catch java.lang.Exception from label15 to label16 with label17;
        catch java.lang.Exception from label19 to label20 with label17;
        catch java.lang.Exception from label21 to label23 with label17;
        catch java.lang.Exception from label24 to label25 with label17;
        catch java.lang.Exception from label26 to label27 with label17;
        catch java.lang.Exception from label28 to label29 with label17;
        catch java.lang.Exception from label30 to label32 with label17;
        catch java.lang.Exception from label33 to label34 with label17;
        catch java.lang.Exception from label35 to label36 with label17;
        catch java.lang.Exception from label37 to label38 with label61;
        catch java.lang.Exception from label40 to label41 with label17;
        catch java.lang.Exception from label42 to label43 with label17;
        catch java.lang.Throwable from label43 to label45 with label44;
        catch java.lang.Exception from label45 to label46 with label17;
        catch java.lang.Throwable from label46 to label47 with label44;
        catch java.lang.Exception from label47 to label48 with label17;
        catch java.lang.Exception from label49 to label51 with label17;
        catch java.lang.Exception from label52 to label53 with label17;
        catch java.lang.Exception from label54 to label55 with label17;
        catch java.lang.InterruptedException from label56 to label57 with label58;
        catch java.lang.Exception from label56 to label57 with label17;
        catch java.lang.Exception from label59 to label60 with label17;
    }
    protected volatile void onPostExecute(java.lang.Object)
    {
        com.mkulesh.micromath.formula.XmlLoaderTask r0;
        java.lang.Object $r1;
        java.lang.Void $r2;

        r0 := @this: com.mkulesh.micromath.formula.XmlLoaderTask;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Void) $r1;

        virtualinvoke r0.<com.mkulesh.micromath.formula.XmlLoaderTask: void onPostExecute(java.lang.Void)>($r2);

        return;
    }
    protected void onPostExecute(java.lang.Void)
    {
        com.mkulesh.micromath.formula.XmlLoaderTask r0;
        java.lang.Void $r1;
        int $i0;
        java.io.InputStream $r2;
        com.mkulesh.micromath.formula.FormulaList $r3;

        r0 := @this: com.mkulesh.micromath.formula.XmlLoaderTask;

        $r1 := @parameter0: java.lang.Void;

        $r2 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: java.io.InputStream stream>;

        staticinvoke <com.mkulesh.micromath.fman.FileUtils: void closeStream(java.io.Closeable)>($r2);

        $r3 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: com.mkulesh.micromath.formula.FormulaList list>;

        $i0 = virtualinvoke $r3.<com.mkulesh.micromath.formula.FormulaList: int getSelectedFormulaId()>();

        if $i0 != -1 goto label1;

        $r3 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: com.mkulesh.micromath.formula.FormulaList list>;

        $i0 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: int firstFormulaId>;

        virtualinvoke $r3.<com.mkulesh.micromath.formula.FormulaList: void setSelectedFormula(int,boolean)>($i0, 0);

     label1:
        $r3 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: com.mkulesh.micromath.formula.FormulaList list>;

        virtualinvoke $r3.<com.mkulesh.micromath.formula.FormulaList: void setInOperation(android.os.AsyncTask,boolean,android.view.View$OnClickListener)>(r0, 0, null);

        return;
    }
    protected void onPreExecute()
    {
        com.mkulesh.micromath.formula.XmlLoaderTask r0;
        com.mkulesh.micromath.formula.FormulaList $r1;

        r0 := @this: com.mkulesh.micromath.formula.XmlLoaderTask;

        $r1 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: com.mkulesh.micromath.formula.FormulaList list>;

        virtualinvoke $r1.<com.mkulesh.micromath.formula.FormulaList: void clear()>();

        $r1 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: com.mkulesh.micromath.formula.FormulaList list>;

        virtualinvoke $r1.<com.mkulesh.micromath.formula.FormulaList: void setInOperation(android.os.AsyncTask,boolean,android.view.View$OnClickListener)>(r0, 1, null);

        return;
    }
    protected transient void onProgressUpdate(com.mkulesh.micromath.formula.FormulaBase$BaseType[])
    {
        com.mkulesh.micromath.formula.XmlLoaderTask r0;
        com.mkulesh.micromath.formula.FormulaBase$BaseType[] $r1;
        java.lang.Exception r2;
        com.mkulesh.micromath.utils.SynchronizedBoolean $r3;
        boolean $z0;
        com.mkulesh.micromath.formula.FormulaList $r4;
        com.mkulesh.micromath.formula.FormulaBase$BaseType $r5;
        com.mkulesh.micromath.formula.FormulaBase $r6;
        org.xmlpull.v1.XmlPullParser $r7;
        com.mkulesh.micromath.formula.TextFragment $r8;
        int[] $r9;
        com.mkulesh.micromath.formula.FormulaListView $r10;
        com.mkulesh.micromath.widgets.ListChangeIf$Position $r11;
        int $i0;
        android.support.v7.app.AppCompatActivity $r12;
        android.content.res.Resources $r13;
        java.lang.String $r14, $r16;
        java.lang.Object[] $r15;
        java.lang.StringBuilder $r17;

        r0 := @this: com.mkulesh.micromath.formula.XmlLoaderTask;

        $r1 := @parameter0: com.mkulesh.micromath.formula.FormulaBase$BaseType[];

        $r3 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: com.mkulesh.micromath.utils.SynchronizedBoolean isAborted>;

        $z0 = virtualinvoke $r3.<com.mkulesh.micromath.utils.SynchronizedBoolean: boolean isSet()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: com.mkulesh.micromath.utils.SynchronizedBoolean isPublishRuns>;

        virtualinvoke $r3.<com.mkulesh.micromath.utils.SynchronizedBoolean: void set(boolean)>(0);

        return;

     label1:
        $r4 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: com.mkulesh.micromath.formula.FormulaList list>;

        $r5 = $r1[0];

        $r6 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase addBaseFormula(com.mkulesh.micromath.formula.FormulaBase$BaseType)>($r5);

     label2:
        $r7 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: org.xmlpull.v1.XmlPullParser parser>;

        virtualinvoke $r6.<com.mkulesh.micromath.formula.FormulaBase: void readFromXml(org.xmlpull.v1.XmlPullParser)>($r7);

     label3:
        if $r6 == null goto label5;

        $z0 = $r6 instanceof com.mkulesh.micromath.formula.TextFragment;

        if $z0 == 0 goto label4;

        $r8 = (com.mkulesh.micromath.formula.TextFragment) $r6;

        $r9 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: int[] headerNumber>;

        virtualinvoke $r8.<com.mkulesh.micromath.formula.TextFragment: void numbering(int[])>($r9);

     label4:
        $r4 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: com.mkulesh.micromath.formula.FormulaList list>;

        $r10 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView getFormulaListView()>();

        $r11 = <com.mkulesh.micromath.widgets.ListChangeIf$Position: com.mkulesh.micromath.widgets.ListChangeIf$Position AFTER>;

        virtualinvoke $r10.<com.mkulesh.micromath.formula.FormulaListView: void add(com.mkulesh.micromath.formula.FormulaBase,com.mkulesh.micromath.formula.FormulaBase,com.mkulesh.micromath.widgets.ListChangeIf$Position)>($r6, null, $r11);

        $i0 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: int firstFormulaId>;

        if $i0 >= 0 goto label5;

        $i0 = virtualinvoke $r6.<com.mkulesh.micromath.formula.FormulaBase: int getId()>();

        r0.<com.mkulesh.micromath.formula.XmlLoaderTask: int firstFormulaId> = $i0;

     label5:
        $r3 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: com.mkulesh.micromath.utils.SynchronizedBoolean isPublishRuns>;

        virtualinvoke $r3.<com.mkulesh.micromath.utils.SynchronizedBoolean: void set(boolean)>(0);

        return;

     label6:
        r2 := @caughtexception;

        $r4 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: com.mkulesh.micromath.formula.FormulaList list>;

        $r12 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        $r13 = virtualinvoke $r12.<android.support.v7.app.AppCompatActivity: android.content.res.Resources getResources()>();

        $r14 = virtualinvoke $r13.<android.content.res.Resources: java.lang.String getString(int)>(2131099782);

        $r15 = newarray (java.lang.Object)[1];

        $r16 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: java.lang.String name>;

        $r15[0] = $r16;

        $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r14, $r15);

        r0.<com.mkulesh.micromath.formula.XmlLoaderTask: java.lang.String error> = $r14;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r14 = r0.<com.mkulesh.micromath.formula.XmlLoaderTask: java.lang.String error>;

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r14 = virtualinvoke r2.<java.lang.Exception: java.lang.String getLocalizedMessage()>();

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r14 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.mkulesh.micromath.utils.ViewUtils: void Debug(java.lang.Object,java.lang.String)>(r0, $r14);

        goto label3;

        catch java.lang.Exception from label2 to label3 with label6;
    }
    protected volatile void onProgressUpdate(java.lang.Object[])
    {
        com.mkulesh.micromath.formula.XmlLoaderTask r0;
        java.lang.Object[] $r1;
        com.mkulesh.micromath.formula.FormulaBase$BaseType[] $r2;

        r0 := @this: com.mkulesh.micromath.formula.XmlLoaderTask;

        $r1 := @parameter0: java.lang.Object[];

        $r2 = (com.mkulesh.micromath.formula.FormulaBase$BaseType[]) $r1;

        virtualinvoke r0.<com.mkulesh.micromath.formula.XmlLoaderTask: void onProgressUpdate(com.mkulesh.micromath.formula.FormulaBase$BaseType[])>($r2);

        return;
    }
