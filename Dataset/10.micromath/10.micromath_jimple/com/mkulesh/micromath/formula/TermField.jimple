com.mkulesh.micromath.formula.TermField extends java.lang.Object implements com.mkulesh.micromath.widgets.TextChangeIf com.mkulesh.micromath.widgets.FocusChangeIf com.mkulesh.micromath.formula.CalculatableIf
public static final int NO_ERROR_ID
private static final java.lang.String STATE_CODE
private static final java.lang.String STATE_INSTANCE
private static final java.lang.String STATE_TERM_ID
private static final java.lang.String STATE_TEXT
public int MAX_LAYOUT_DEPTH
public com.mkulesh.micromath.formula.TermField$BracketsType bracketsType
private com.mkulesh.micromath.formula.TermField$ContentType contentType
private boolean emptyOrAutoContent
private int errorId
private java.lang.String errorMsg
private com.mkulesh.micromath.formula.TermField$ErrorNotification errorNotification
private final com.mkulesh.micromath.formula.FormulaBase formulaRoot
public boolean isWritable
private final android.widget.LinearLayout layout
private com.mkulesh.micromath.formula.Equation linkedVariable
private final com.mkulesh.micromath.formula.FormulaBase parentFormula
private final com.mkulesh.micromath.formula.TermParser parser
private com.mkulesh.micromath.formula.FormulaTerm term
public int termDepth
private java.lang.String termKey
private final com.mkulesh.micromath.widgets.CustomEditText text
private boolean textChangeDetectionEnabled
    public void <init>(com.mkulesh.micromath.formula.FormulaBase, com.mkulesh.micromath.formula.FormulaBase, android.widget.LinearLayout, int, com.mkulesh.micromath.widgets.CustomEditText)
    {
        com.mkulesh.micromath.formula.TermField r0;
        com.mkulesh.micromath.formula.FormulaBase $r1, $r2;
        android.widget.LinearLayout $r3;
        int $i0, $i1;
        com.mkulesh.micromath.widgets.CustomEditText $r4;
        com.mkulesh.micromath.formula.TermField$ContentType $r5;
        com.mkulesh.micromath.formula.TermParser $r6;
        com.mkulesh.micromath.formula.TermField$ErrorNotification $r7;
        com.mkulesh.micromath.formula.TermField$BracketsType $r8;
        android.text.Editable $r9;
        java.lang.String $r10;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 := @parameter0: com.mkulesh.micromath.formula.FormulaBase;

        $r2 := @parameter1: com.mkulesh.micromath.formula.FormulaBase;

        $r3 := @parameter2: android.widget.LinearLayout;

        $i0 := @parameter3: int;

        $r4 := @parameter4: com.mkulesh.micromath.widgets.CustomEditText;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mkulesh.micromath.formula.TermField: int MAX_LAYOUT_DEPTH> = 15;

        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term> = null;

        r0.<com.mkulesh.micromath.formula.TermField: java.lang.String termKey> = null;

        r0.<com.mkulesh.micromath.formula.TermField: boolean isWritable> = 1;

        r0.<com.mkulesh.micromath.formula.TermField: boolean emptyOrAutoContent> = 1;

        r0.<com.mkulesh.micromath.formula.TermField: boolean textChangeDetectionEnabled> = 1;

        $r5 = <com.mkulesh.micromath.formula.TermField$ContentType: com.mkulesh.micromath.formula.TermField$ContentType INVALID>;

        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$ContentType contentType> = $r5;

        $r6 = new com.mkulesh.micromath.formula.TermParser;

        specialinvoke $r6.<com.mkulesh.micromath.formula.TermParser: void <init>()>();

        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermParser parser> = $r6;

        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.Equation linkedVariable> = null;

        r0.<com.mkulesh.micromath.formula.TermField: java.lang.String errorMsg> = null;

        $r7 = <com.mkulesh.micromath.formula.TermField$ErrorNotification: com.mkulesh.micromath.formula.TermField$ErrorNotification COLOR>;

        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$ErrorNotification errorNotification> = $r7;

        r0.<com.mkulesh.micromath.formula.TermField: int errorId> = -1;

        $r8 = <com.mkulesh.micromath.formula.TermField$BracketsType: com.mkulesh.micromath.formula.TermField$BracketsType ALWAYS>;

        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$BracketsType bracketsType> = $r8;

        r0.<com.mkulesh.micromath.formula.TermField: int termDepth> = 0;

        r0.<com.mkulesh.micromath.formula.TermField: int MAX_LAYOUT_DEPTH> = 25;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 >= 23 goto label1;

        r0.<com.mkulesh.micromath.formula.TermField: int MAX_LAYOUT_DEPTH> = 15;

     label1:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 >= 17 goto label2;

        r0.<com.mkulesh.micromath.formula.TermField: int MAX_LAYOUT_DEPTH> = 9;

     label2:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 >= 15 goto label3;

        r0.<com.mkulesh.micromath.formula.TermField: int MAX_LAYOUT_DEPTH> = 6;

     label3:
        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase formulaRoot> = $r1;

        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase parentFormula> = $r2;

        r0.<com.mkulesh.micromath.formula.TermField: android.widget.LinearLayout layout> = $r3;

        r0.<com.mkulesh.micromath.formula.TermField: int termDepth> = $i0;

        $r9 = virtualinvoke $r4.<com.mkulesh.micromath.widgets.CustomEditText: android.text.Editable getText()>();

        $r10 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

        r0.<com.mkulesh.micromath.formula.TermField: java.lang.String termKey> = $r10;

        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text> = $r4;

        $r4 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        virtualinvoke $r4.<com.mkulesh.micromath.widgets.CustomEditText: void setText(java.lang.CharSequence)>("");

        $r4 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        virtualinvoke $r4.<com.mkulesh.micromath.widgets.CustomEditText: void setChangeIf(com.mkulesh.micromath.widgets.TextChangeIf,com.mkulesh.micromath.widgets.FocusChangeIf)>(r0, r0);

        $r4 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $i0 = staticinvoke <com.mkulesh.micromath.utils.IdGenerator: int generateId()>();

        virtualinvoke $r4.<com.mkulesh.micromath.widgets.CustomEditText: void setId(int)>($i0);

        specialinvoke r0.<com.mkulesh.micromath.formula.TermField: void updateViewColor()>();

        return;
    }
    private void deleteTerm(int, com.mkulesh.micromath.formula.TermField, java.lang.CharSequence)
    {
        com.mkulesh.micromath.formula.TermField r0, $r1;
        int $i0;
        java.lang.CharSequence $r2;
        boolean $z0;
        android.widget.LinearLayout $r3;
        com.mkulesh.micromath.widgets.CustomEditText $r4;
        java.lang.String $r5;
        com.mkulesh.micromath.formula.FormulaTerm $r6;
        android.os.Parcelable $r7;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.mkulesh.micromath.formula.TermField;

        $r2 := @parameter2: java.lang.CharSequence;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isTerm()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term> = null;

        $r3 = r0.<com.mkulesh.micromath.formula.TermField: android.widget.LinearLayout layout>;

        $r4 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        virtualinvoke $r3.<android.widget.LinearLayout: void addView(android.view.View,int)>($r4, $i0);

        $r4 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        virtualinvoke $r4.<com.mkulesh.micromath.widgets.CustomEditText: void setSelected(boolean)>(0);

        if $r1 == null goto label4;

        $r5 = virtualinvoke $r1.<com.mkulesh.micromath.formula.TermField: java.lang.String getText()>();

        virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: void setText(java.lang.CharSequence)>($r5);

        $r6 = $r1.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term>;

        if $r6 == null goto label2;

        $r6 = $r1.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term>;

        $r7 = virtualinvoke $r6.<com.mkulesh.micromath.formula.FormulaTerm: android.os.Parcelable onSaveInstanceState()>();

        $r6 = $r1.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term>;

        $r5 = virtualinvoke $r6.<com.mkulesh.micromath.formula.FormulaTerm: java.lang.String getTermCode()>();

        $r6 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm convertToTerm(java.lang.String,android.os.Parcelable,boolean)>($r5, $r7, 1);

        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term> = $r6;

     label2:
        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isTerm()>();

        if $z0 != 0 goto label3;

        $r4 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        virtualinvoke $r4.<com.mkulesh.micromath.widgets.CustomEditText: void setTextWatcher(boolean)>(1);

        virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: void updateTextSize()>();

     label3:
        virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$ContentType checkContentType()>();

        virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: void requestFocus()>();

        return;

     label4:
        virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: void setText(java.lang.CharSequence)>($r2);

        goto label2;
    }
    public static void divideString(java.lang.String, java.lang.String, com.mkulesh.micromath.formula.TermField, com.mkulesh.micromath.formula.TermField)
    {
        java.lang.String $r0, $r1;
        com.mkulesh.micromath.formula.TermField $r2, $r3;
        int $i0, $i1;
        java.lang.CharSequence $r4;
        java.lang.Exception $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: com.mkulesh.micromath.formula.TermField;

        $r3 := @parameter3: com.mkulesh.micromath.formula.TermField;

        if $r1 == null goto label6;

        if $r0 == null goto label6;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>($r1);

        if $i0 < 0 goto label6;

     label1:
        $r4 = virtualinvoke $r0.<java.lang.String: java.lang.CharSequence subSequence(int,int)>(0, $i0);

        virtualinvoke $r2.<com.mkulesh.micromath.formula.TermField: void setText(java.lang.CharSequence)>($r4);

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

     label2:
        $i0 = $i1 + $i0;

     label3:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $r4 = virtualinvoke $r0.<java.lang.String: java.lang.CharSequence subSequence(int,int)>($i0, $i1);

        virtualinvoke $r3.<com.mkulesh.micromath.formula.TermField: void setText(java.lang.CharSequence)>($r4);

     label4:
        return;

     label5:
        $r5 := @caughtexception;

     label6:
        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
    private void repairTermDepth(boolean)
    {
        com.mkulesh.micromath.formula.TermField r0;
        boolean $z0, $z1;
        com.mkulesh.micromath.formula.FormulaTerm $r1;
        android.content.Context $r2, $r3;
        android.content.res.Resources $r4;
        java.lang.String $r5;
        android.widget.Toast $r6;
        com.mkulesh.micromath.formula.FormulaBase $r7;
        com.mkulesh.micromath.formula.FormulaList $r8;
        com.mkulesh.micromath.formula.FormulaListView $r9;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isTerm()>();

        if $z1 == 0 goto label2;

        $r1 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term>;

        $z1 = virtualinvoke $r1.<com.mkulesh.micromath.formula.FormulaTerm: boolean checkFormulaDepth()>();

        if $z1 != 0 goto label2;

        virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: void clear()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: android.content.Context getContext()>();

        $r3 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(2131099795);

        $r6 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r2, $r5, 0);

        virtualinvoke $r6.<android.widget.Toast: void show()>();

        return;

     label1:
        $r7 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase formulaRoot>;

        $r8 = virtualinvoke $r7.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r9 = virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView getFormulaListView()>();

        virtualinvoke $r9.<com.mkulesh.micromath.formula.FormulaListView: void setTermDeleted(boolean)>(1);

     label2:
        return;
    }
    private void updateViewColor()
    {
        com.mkulesh.micromath.formula.TermField r0;
        boolean $z0, $z1;
        android.widget.LinearLayout $r1;
        com.mkulesh.micromath.widgets.CustomLayout $r2;
        com.mkulesh.micromath.formula.TermField$ErrorNotification $r3, $r4;
        int $i0;
        java.lang.String $r5;
        com.mkulesh.micromath.widgets.CustomEditText $r6;
        android.content.Context $r7;
        com.mkulesh.micromath.formula.TermField$ContentType $r8, $r9;
        com.mkulesh.micromath.formula.FormulaBase $r10;
        com.mkulesh.micromath.formula.FormulaList $r11;
        com.mkulesh.micromath.widgets.ScaledDimensions $r12;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean disableCalculation()>();

        if $z0 == 0 goto label02;

        $z0 = 0;

     label01:
        $r1 = r0.<com.mkulesh.micromath.formula.TermField: android.widget.LinearLayout layout>;

        $z1 = $r1 instanceof com.mkulesh.micromath.widgets.CustomLayout;

        if $z1 == 0 goto label05;

        $r1 = r0.<com.mkulesh.micromath.formula.TermField: android.widget.LinearLayout layout>;

        $r2 = (com.mkulesh.micromath.widgets.CustomLayout) $r1;

        virtualinvoke $r2.<com.mkulesh.micromath.widgets.CustomLayout: void setContentValid(boolean)>(1);

        $z1 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isTerm()>();

        if $z1 == 0 goto label05;

        $r3 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$ErrorNotification errorNotification>;

        $r4 = <com.mkulesh.micromath.formula.TermField$ErrorNotification: com.mkulesh.micromath.formula.TermField$ErrorNotification LAYOUT_BORDER>;

        if $r3 != $r4 goto label05;

        if $z0 == 0 goto label05;

        $r1 = r0.<com.mkulesh.micromath.formula.TermField: android.widget.LinearLayout layout>;

        $r2 = (com.mkulesh.micromath.widgets.CustomLayout) $r1;

        virtualinvoke $r2.<com.mkulesh.micromath.widgets.CustomLayout: void setContentValid(boolean)>(0);

        return;

     label02:
        $i0 = r0.<com.mkulesh.micromath.formula.TermField: int errorId>;

        if $i0 != -1 goto label03;

        $r5 = r0.<com.mkulesh.micromath.formula.TermField: java.lang.String errorMsg>;

        if $r5 == null goto label04;

     label03:
        $z0 = 1;

        goto label01;

     label04:
        $z0 = 0;

        goto label01;

     label05:
        $i0 = 2130837658;

        $r6 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $z1 = virtualinvoke $r6.<com.mkulesh.micromath.widgets.CustomEditText: boolean isSelected()>();

        if $z1 == 0 goto label08;

        $i0 = 2130837660;

     label06:
        $r7 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: android.content.Context getContext()>();

        $r6 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        staticinvoke <com.mkulesh.micromath.utils.CompatUtils: void updateBackground(android.content.Context,android.view.View,int)>($r7, $r6, $i0);

        $i0 = 2131427370;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean disableCalculation()>();

        if $z0 != 0 goto label11;

        $r8 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$ContentType contentType>;

        $r9 = <com.mkulesh.micromath.formula.TermField$ContentType: com.mkulesh.micromath.formula.TermField$ContentType INVALID>;

        if $r8 != $r9 goto label11;

        $r3 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$ErrorNotification errorNotification>;

        $r4 = <com.mkulesh.micromath.formula.TermField$ErrorNotification: com.mkulesh.micromath.formula.TermField$ErrorNotification COLOR>;

        if $r3 != $r4 goto label11;

        $i0 = 2131427367;

     label07:
        $r6 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $r7 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: android.content.Context getContext()>();

        $i0 = staticinvoke <com.mkulesh.micromath.utils.CompatUtils: int getColor(android.content.Context,int)>($r7, $i0);

        virtualinvoke $r6.<com.mkulesh.micromath.widgets.CustomEditText: void setTextColor(int)>($i0);

        $r6 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $r10 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase formulaRoot>;

        $r11 = virtualinvoke $r10.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r12 = virtualinvoke $r11.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.widgets.ScaledDimensions getDimen()>();

        virtualinvoke $r6.<com.mkulesh.micromath.widgets.CustomEditText: void updateMinimumWidth(com.mkulesh.micromath.widgets.ScaledDimensions)>($r12);

        return;

     label08:
        if $z0 == 0 goto label09;

        $i0 = 2130837659;

        goto label06;

     label09:
        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isEmpty()>();

        if $z0 == 0 goto label06;

        $r6 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $z0 = virtualinvoke $r6.<com.mkulesh.micromath.widgets.CustomEditText: boolean isEmptyEnabled()>();

        if $z0 == 0 goto label10;

        $i0 = 2130837657;

        goto label06;

     label10:
        $i0 = 2130837659;

        goto label06;

     label11:
        $r6 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $z0 = virtualinvoke $r6.<com.mkulesh.micromath.widgets.CustomEditText: boolean isCalculatedValue()>();

        if $z0 != 0 goto label12;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isEmpty()>();

        if $z0 != 0 goto label13;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isEmptyOrAutoContent()>();

        if $z0 == 0 goto label13;

     label12:
        $i0 = 2131427364;

        goto label07;

     label13:
        $r6 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $z0 = virtualinvoke $r6.<com.mkulesh.micromath.widgets.CustomEditText: boolean isTextFragment()>();

        if $z0 == 0 goto label07;

        $i0 = 2131427371;

        goto label07;
    }
    public void addOperatorCode(java.lang.String)
    {
        com.mkulesh.micromath.formula.TermField r0, $r18;
        java.lang.String $r1, $r3, $r5;
        com.mkulesh.micromath.formula.FormulaBase$BaseType $r2;
        java.util.Locale $r4;
        boolean $z0;
        android.content.Context $r6;
        android.content.res.Resources $r7;
        com.mkulesh.micromath.widgets.CustomEditText $r8;
        com.mkulesh.micromath.formula.FormulaBase $r9;
        com.mkulesh.micromath.formula.FormulaList $r10;
        com.mkulesh.micromath.undo.UndoState $r11;
        com.mkulesh.micromath.undo.FormulaState $r12;
        com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType $r13;
        com.mkulesh.micromath.formula.FormulaTerm $r14;
        com.mkulesh.micromath.formula.FormulaTermComparator $r15;
        android.os.Bundle r16;
        java.util.ArrayList $r17;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 := @parameter0: java.lang.String;

        $r2 = <com.mkulesh.micromath.formula.FormulaBase$BaseType: com.mkulesh.micromath.formula.FormulaBase$BaseType TERM>;

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaBase$BaseType: java.lang.String toString()>();

        $r4 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r5 = virtualinvoke $r1.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r4);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        $r6 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources getResources()>();

        $r1 = virtualinvoke $r7.<android.content.res.Resources: java.lang.String getString(int)>(2131099967);

     label1:
        $r8 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $z0 = virtualinvoke $r8.<com.mkulesh.micromath.widgets.CustomEditText: boolean isNewTermEnabled()>();

        if $z0 == 0 goto label2;

        $r9 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase formulaRoot>;

        $r10 = virtualinvoke $r9.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r11 = virtualinvoke $r10.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.undo.UndoState getUndoState()>();

        $r9 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase parentFormula>;

        $r12 = virtualinvoke $r9.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.undo.FormulaState getState()>();

        virtualinvoke $r11.<com.mkulesh.micromath.undo.UndoState: void addEntry(android.os.Parcelable)>($r12);

        $r9 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase parentFormula>;

        $z0 = virtualinvoke $r9.<com.mkulesh.micromath.formula.FormulaBase: boolean onNewTerm(com.mkulesh.micromath.formula.TermField,java.lang.String,boolean)>(r0, $r1, 1);

        if $z0 == 0 goto label2;

        return;

     label2:
        $r6 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: android.content.Context getContext()>();

        $r3 = staticinvoke <com.mkulesh.micromath.formula.FormulaTerm: java.lang.String getOperatorCode(android.content.Context,java.lang.String,boolean)>($r6, $r1, 1);

        if $r3 == null goto label7;

        $r9 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase formulaRoot>;

        $r10 = virtualinvoke $r9.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r11 = virtualinvoke $r10.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.undo.UndoState getUndoState()>();

        $r12 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.undo.FormulaState getState()>();

        virtualinvoke $r11.<com.mkulesh.micromath.undo.UndoState: void addEntry(android.os.Parcelable)>($r12);

        $r6 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: android.content.Context getContext()>();

        $r13 = staticinvoke <com.mkulesh.micromath.formula.FormulaTermComparator: com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType getComparatorType(android.content.Context,java.lang.String)>($r6, $r1);

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isTerm()>();

        if $z0 == 0 goto label3;

        if $r13 == null goto label3;

        $r14 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm getTerm()>();

        $z0 = $r14 instanceof com.mkulesh.micromath.formula.FormulaTermComparator;

        if $z0 == 0 goto label3;

        $r14 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm getTerm()>();

        $r15 = (com.mkulesh.micromath.formula.FormulaTermComparator) $r14;

        $z0 = virtualinvoke $r15.<com.mkulesh.micromath.formula.FormulaTermComparator: boolean changeComparatorType(com.mkulesh.micromath.formula.FormulaTermComparator$ComparatorType)>($r13);

        if $z0 != 0 goto label7;

     label3:
        $r8 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        virtualinvoke $r8.<com.mkulesh.micromath.widgets.CustomEditText: void setRequestFocusEnabled(boolean)>(0);

        r16 = null;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isTerm()>();

        if $z0 == 0 goto label4;

        r16 = new android.os.Bundle;

        specialinvoke r16.<android.os.Bundle: void <init>()>();

        virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: void writeToBundle(android.os.Bundle,java.lang.String)>(r16, "savedState");

        virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: void clear()>();

     label4:
        $r6 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: android.content.Context getContext()>();

        $r3 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: java.lang.String getText()>();

        $r1 = staticinvoke <com.mkulesh.micromath.formula.FormulaTerm: java.lang.String createOperatorCode(android.content.Context,java.lang.String,java.lang.String)>($r6, $r1, $r3);

        if $r1 == null goto label5;

        virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: void onTextChanged(java.lang.String,boolean)>($r1, 0);

     label5:
        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isTerm()>();

        if $z0 == 0 goto label6;

        $r14 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term>;

        $r17 = virtualinvoke $r14.<com.mkulesh.micromath.formula.FormulaTerm: java.util.ArrayList getTerms()>();

        $z0 = virtualinvoke $r17.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label6;

        if r16 == null goto label6;

        $r14 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term>;

        $r18 = virtualinvoke $r14.<com.mkulesh.micromath.formula.FormulaTerm: com.mkulesh.micromath.formula.TermField getArgumentTerm()>();

        if $r18 == null goto label6;

        virtualinvoke $r18.<com.mkulesh.micromath.formula.TermField: void readFromBundle(android.os.Bundle,java.lang.String)>(r16, "savedState");

     label6:
        specialinvoke r0.<com.mkulesh.micromath.formula.TermField: void repairTermDepth(boolean)>(1);

        $r8 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        virtualinvoke $r8.<com.mkulesh.micromath.widgets.CustomEditText: void setRequestFocusEnabled(boolean)>(1);

        virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: void requestFocus()>();

     label7:
        return;
    }
    public void beforeTextChanged(java.lang.String, boolean)
    {
        com.mkulesh.micromath.formula.TermField r0;
        java.lang.String $r1;
        boolean $z0;
        com.mkulesh.micromath.widgets.CustomEditText $r2;
        com.mkulesh.micromath.formula.FormulaBase $r3;
        com.mkulesh.micromath.formula.FormulaList $r4;
        com.mkulesh.micromath.undo.UndoState $r5;
        com.mkulesh.micromath.undo.FormulaState $r6;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label2;

        $r2 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $z0 = virtualinvoke $r2.<com.mkulesh.micromath.widgets.CustomEditText: boolean isNewTermEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase formulaRoot>;

        $r4 = virtualinvoke $r3.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r5 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.undo.UndoState getUndoState()>();

        $r3 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase parentFormula>;

        $r6 = virtualinvoke $r3.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.undo.FormulaState getState()>();

        virtualinvoke $r5.<com.mkulesh.micromath.undo.UndoState: void addEntry(android.os.Parcelable)>($r6);

        return;

     label1:
        $r3 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase formulaRoot>;

        $r4 = virtualinvoke $r3.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r5 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.undo.UndoState getUndoState()>();

        $r6 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.undo.FormulaState getState()>();

        virtualinvoke $r5.<com.mkulesh.micromath.undo.UndoState: void addEntry(android.os.Parcelable)>($r6);

     label2:
        return;
    }
    public com.mkulesh.micromath.formula.TermField$ContentType checkContentType()
    {
        com.mkulesh.micromath.formula.TermField r0;
        com.mkulesh.micromath.widgets.CustomEditText $r1;
        com.mkulesh.micromath.formula.TermField$ErrorNotification $r2;
        boolean $z0;
        com.mkulesh.micromath.formula.TermField$ContentType $r3;
        com.mkulesh.micromath.formula.FormulaTerm $r4;
        com.mkulesh.micromath.formula.FormulaBase$ValidationPassType $r5;
        com.mkulesh.micromath.formula.TermParser $r6;
        com.mkulesh.micromath.formula.FormulaBase $r7;
        java.lang.String $r8;
        int $i0;
        com.mkulesh.micromath.math.CalculatedValue $r9;
        com.mkulesh.micromath.formula.ArgumentHolderIf $r10;
        com.mkulesh.micromath.formula.FormulaList $r11;
        com.mkulesh.micromath.formula.Equation r12;
        com.mkulesh.micromath.formula.LinkHolder $r13;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        r0.<com.mkulesh.micromath.formula.TermField: java.lang.String errorMsg> = null;

        $r2 = <com.mkulesh.micromath.formula.TermField$ErrorNotification: com.mkulesh.micromath.formula.TermField$ErrorNotification COLOR>;

        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$ErrorNotification errorNotification> = $r2;

        r0.<com.mkulesh.micromath.formula.TermField: int errorId> = -1;

        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.Equation linkedVariable> = null;

        $r1 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $z0 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomEditText: boolean isTextFragment()>();

        if $z0 != 0 goto label01;

        $r1 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $z0 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomEditText: boolean isCalculatedValue()>();

        if $z0 == 0 goto label02;

     label01:
        $r3 = <com.mkulesh.micromath.formula.TermField$ContentType: com.mkulesh.micromath.formula.TermField$ContentType INFO_TEXT>;

        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$ContentType contentType> = $r3;

        specialinvoke r0.<com.mkulesh.micromath.formula.TermField: void updateViewColor()>();

        $r3 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$ContentType contentType>;

        return $r3;

     label02:
        $r1 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $z0 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomEditText: boolean isEmptyEnabled()>();

        if $z0 == 0 goto label03;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isEmpty()>();

        if $z0 == 0 goto label03;

        $r3 = <com.mkulesh.micromath.formula.TermField$ContentType: com.mkulesh.micromath.formula.TermField$ContentType EMPTY>;

        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$ContentType contentType> = $r3;

        specialinvoke r0.<com.mkulesh.micromath.formula.TermField: void updateViewColor()>();

        $r3 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$ContentType contentType>;

        return $r3;

     label03:
        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isTerm()>();

        if $z0 == 0 goto label06;

        $r4 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term>;

        $r5 = <com.mkulesh.micromath.formula.FormulaBase$ValidationPassType: com.mkulesh.micromath.formula.FormulaBase$ValidationPassType VALIDATE_SINGLE_FORMULA>;

        $z0 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaTerm: boolean isContentValid(com.mkulesh.micromath.formula.FormulaBase$ValidationPassType)>($r5);

        if $z0 == 0 goto label05;

        $r3 = <com.mkulesh.micromath.formula.TermField$ContentType: com.mkulesh.micromath.formula.TermField$ContentType TERM>;

     label04:
        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$ContentType contentType> = $r3;

        specialinvoke r0.<com.mkulesh.micromath.formula.TermField: void updateViewColor()>();

        $r3 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$ContentType contentType>;

        return $r3;

     label05:
        $r3 = <com.mkulesh.micromath.formula.TermField$ContentType: com.mkulesh.micromath.formula.TermField$ContentType INVALID>;

        goto label04;

     label06:
        $r3 = <com.mkulesh.micromath.formula.TermField$ContentType: com.mkulesh.micromath.formula.TermField$ContentType INVALID>;

        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$ContentType contentType> = $r3;

        $r6 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermParser parser>;

        $r7 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase formulaRoot>;

        $r1 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        virtualinvoke $r6.<com.mkulesh.micromath.formula.TermParser: void setText(com.mkulesh.micromath.formula.TermField,com.mkulesh.micromath.formula.FormulaBase,com.mkulesh.micromath.widgets.CustomEditText)>(r0, $r7, $r1);

        $r1 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $z0 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomEditText: boolean isEquationName()>();

        if $z0 == 0 goto label08;

        $r6 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermParser parser>;

        $r8 = virtualinvoke $r6.<com.mkulesh.micromath.formula.TermParser: java.lang.String getFunctionName()>();

        if $r8 == null goto label07;

        $r6 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermParser parser>;

        $i0 = $r6.<com.mkulesh.micromath.formula.TermParser: int errorId>;

        if $i0 != -1 goto label07;

        $r3 = <com.mkulesh.micromath.formula.TermField$ContentType: com.mkulesh.micromath.formula.TermField$ContentType EQUATION_NAME>;

        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$ContentType contentType> = $r3;

     label07:
        specialinvoke r0.<com.mkulesh.micromath.formula.TermField: void updateViewColor()>();

        $r3 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$ContentType contentType>;

        return $r3;

     label08:
        $r6 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermParser parser>;

        $r9 = virtualinvoke $r6.<com.mkulesh.micromath.formula.TermParser: com.mkulesh.micromath.math.CalculatedValue getValue()>();

        if $r9 == null goto label09;

        $r3 = <com.mkulesh.micromath.formula.TermField$ContentType: com.mkulesh.micromath.formula.TermField$ContentType NUMBER>;

        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$ContentType contentType> = $r3;

        goto label07;

     label09:
        $r6 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermParser parser>;

        $r10 = virtualinvoke $r6.<com.mkulesh.micromath.formula.TermParser: com.mkulesh.micromath.formula.ArgumentHolderIf getArgumentHolder()>();

        if $r10 == null goto label10;

        $r6 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermParser parser>;

        $i0 = virtualinvoke $r6.<com.mkulesh.micromath.formula.TermParser: int getArgumentIndex()>();

        if $i0 == -1 goto label10;

        $r3 = <com.mkulesh.micromath.formula.TermField$ContentType: com.mkulesh.micromath.formula.TermField$ContentType ARGUMENT>;

        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$ContentType contentType> = $r3;

        goto label07;

     label10:
        $r6 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermParser parser>;

        $i0 = virtualinvoke $r6.<com.mkulesh.micromath.formula.TermParser: int getLinkedVariableId()>();

        if $i0 < 0 goto label07;

        $r7 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase formulaRoot>;

        $r11 = virtualinvoke $r7.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r6 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermParser parser>;

        $i0 = virtualinvoke $r6.<com.mkulesh.micromath.formula.TermParser: int getLinkedVariableId()>();

        $r7 = virtualinvoke $r11.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase getFormula(int)>($i0);

        if $r7 == null goto label07;

        $z0 = $r7 instanceof com.mkulesh.micromath.formula.Equation;

        if $z0 == 0 goto label07;

        $r3 = <com.mkulesh.micromath.formula.TermField$ContentType: com.mkulesh.micromath.formula.TermField$ContentType VARIABLE_LINK>;

        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$ContentType contentType> = $r3;

        r12 = (com.mkulesh.micromath.formula.Equation) $r7;

        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.Equation linkedVariable> = r12;

        $r7 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase formulaRoot>;

        $z0 = $r7 instanceof com.mkulesh.micromath.formula.LinkHolder;

        if $z0 == 0 goto label07;

        $r7 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase formulaRoot>;

        $r13 = (com.mkulesh.micromath.formula.LinkHolder) $r7;

        r12 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.Equation linkedVariable>;

        virtualinvoke $r13.<com.mkulesh.micromath.formula.LinkHolder: void addLinkedEquation(com.mkulesh.micromath.formula.Equation)>(r12);

        goto label07;
    }
    public boolean checkFormulaDepth()
    {
        com.mkulesh.micromath.formula.TermField r0;
        int $i0, $i1;
        android.widget.LinearLayout $r1;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        specialinvoke r0.<com.mkulesh.micromath.formula.TermField: void repairTermDepth(boolean)>(0);

        $r1 = r0.<com.mkulesh.micromath.formula.TermField: android.widget.LinearLayout layout>;

        $i0 = staticinvoke <com.mkulesh.micromath.utils.ViewUtils: int getLayoutDepth(android.widget.LinearLayout)>($r1);

        $i1 = r0.<com.mkulesh.micromath.formula.TermField: int MAX_LAYOUT_DEPTH>;

        if $i0 > $i1 goto label1;

        return 1;

     label1:
        return 0;
    }
    public void clear()
    {
        com.mkulesh.micromath.formula.TermField r0;
        com.mkulesh.micromath.widgets.CustomEditText $r1;
        boolean $z0, $z1;
        com.mkulesh.micromath.formula.FormulaTerm $r2;
        int $i0;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $z0 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomEditText: boolean isRequestFocusEnabled()>();

        $r1 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomEditText: void setRequestFocusEnabled(boolean)>(0);

        $z1 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isTerm()>();

        if $z1 == 0 goto label2;

        $r2 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term>;

        $i0 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaTerm: int removeElements()>();

        specialinvoke r0.<com.mkulesh.micromath.formula.TermField: void deleteTerm(int,com.mkulesh.micromath.formula.TermField,java.lang.CharSequence)>($i0, null, "");

     label1:
        $r1 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomEditText: void setRequestFocusEnabled(boolean)>($z0);

        return;

     label2:
        virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: void setText(java.lang.CharSequence)>("");

        goto label1;
    }
    public void collectElemets(android.widget.LinearLayout, java.util.ArrayList)
    {
        com.mkulesh.micromath.formula.TermField r0;
        android.widget.LinearLayout $r1, $r3;
        java.util.ArrayList r2;
        boolean $z0;
        com.mkulesh.micromath.formula.FormulaTerm $r4;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 := @parameter0: android.widget.LinearLayout;

        r2 := @parameter1: java.util.ArrayList;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isTerm()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.mkulesh.micromath.formula.TermField: android.widget.LinearLayout layout>;

        if $r1 != $r3 goto label1;

        $r4 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term>;

        virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaTerm: void collectElemets(android.widget.LinearLayout,java.util.ArrayList)>($r1, r2);

     label1:
        return;
    }
    protected com.mkulesh.micromath.formula.FormulaTerm convertToTerm(com.mkulesh.micromath.formula.FormulaTerm$TermType, java.lang.String)
    {
        com.mkulesh.micromath.formula.TermField r0;
        com.mkulesh.micromath.formula.FormulaTerm$TermType $r1;
        java.lang.String $r2;
        java.lang.Exception r3;
        com.mkulesh.micromath.formula.FormulaTerm r4, $r9;
        android.widget.LinearLayout $r5;
        com.mkulesh.micromath.widgets.CustomEditText $r6;
        int $i0;
        boolean $z0;
        com.mkulesh.micromath.formula.FormulaBase $r7;
        com.mkulesh.micromath.formula.FormulaList $r8;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 := @parameter0: com.mkulesh.micromath.formula.FormulaTerm$TermType;

        $r2 := @parameter1: java.lang.String;

        r4 = null;

     label1:
        $r5 = r0.<com.mkulesh.micromath.formula.TermField: android.widget.LinearLayout layout>;

        $r6 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $i0 = staticinvoke <com.mkulesh.micromath.utils.ViewUtils: int getViewIndex(android.widget.LinearLayout,android.view.View)>($r5, $r6);

        $r6 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        virtualinvoke $r6.<com.mkulesh.micromath.widgets.CustomEditText: void setTextWatcher(boolean)>(0);

        $r6 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $z0 = virtualinvoke $r6.<com.mkulesh.micromath.widgets.CustomEditText: boolean isFocused()>();

     label2:
        if $z0 == 0 goto label4;

     label3:
        $r7 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase formulaRoot>;

        $r8 = virtualinvoke $r7.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaList: void clearFocus()>();

     label4:
        $r5 = r0.<com.mkulesh.micromath.formula.TermField: android.widget.LinearLayout layout>;

        $r6 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        virtualinvoke $r5.<android.widget.LinearLayout: void removeView(android.view.View)>($r6);

        $r5 = r0.<com.mkulesh.micromath.formula.TermField: android.widget.LinearLayout layout>;

        $r9 = staticinvoke <com.mkulesh.micromath.formula.FormulaTerm: com.mkulesh.micromath.formula.FormulaTerm createTerm(com.mkulesh.micromath.formula.FormulaTerm$TermType,com.mkulesh.micromath.formula.TermField,android.widget.LinearLayout,java.lang.String,int)>($r1, r0, $r5, $r2, $i0);

     label5:
        r4 = $r9;

     label6:
        virtualinvoke $r9.<com.mkulesh.micromath.formula.FormulaTerm: void updateTextSize()>();

     label7:
        return $r9;

     label8:
        r3 := @caughtexception;

        $r2 = virtualinvoke r3.<java.lang.Exception: java.lang.String getLocalizedMessage()>();

        staticinvoke <com.mkulesh.micromath.utils.ViewUtils: void Debug(java.lang.Object,java.lang.String)>(r0, $r2);

        $r5 = r0.<com.mkulesh.micromath.formula.TermField: android.widget.LinearLayout layout>;

        $r6 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        virtualinvoke $r5.<android.widget.LinearLayout: void addView(android.view.View)>($r6);

        $r6 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        virtualinvoke $r6.<com.mkulesh.micromath.widgets.CustomEditText: void setTextWatcher(boolean)>(1);

        return r4;

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Exception from label3 to label5 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }
    protected com.mkulesh.micromath.formula.FormulaTerm convertToTerm(java.lang.String, android.os.Parcelable, boolean)
    {
        com.mkulesh.micromath.formula.TermField r0;
        java.lang.String $r1;
        android.os.Parcelable $r2;
        boolean $z0, $z1;
        android.content.Context $r3;
        com.mkulesh.micromath.formula.FormulaTerm$TermType $r4;
        com.mkulesh.micromath.formula.FormulaTerm $r5;
        com.mkulesh.micromath.widgets.CustomEditText $r6;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Parcelable;

        $z0 := @parameter2: boolean;

        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term> = null;

        $r3 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: android.content.Context getContext()>();

        $z1 = staticinvoke <com.mkulesh.micromath.formula.FormulaTermOperator: boolean isOperator(android.content.Context,java.lang.String)>($r3, $r1);

        if $z1 == 0 goto label3;

        $r4 = <com.mkulesh.micromath.formula.FormulaTerm$TermType: com.mkulesh.micromath.formula.FormulaTerm$TermType OPERATOR>;

        $r5 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm convertToTerm(com.mkulesh.micromath.formula.FormulaTerm$TermType,java.lang.String)>($r4, $r1);

        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term> = $r5;

     label1:
        specialinvoke r0.<com.mkulesh.micromath.formula.TermField: void repairTermDepth(boolean)>(1);

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isTerm()>();

        if $z0 == 0 goto label2;

        virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: void setText(java.lang.CharSequence)>("");

        if $r2 == null goto label2;

        $r5 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term>;

        virtualinvoke $r5.<com.mkulesh.micromath.formula.FormulaTerm: void onRestoreInstanceState(android.os.Parcelable)>($r2);

     label2:
        $r5 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term>;

        return $r5;

     label3:
        $r6 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $z1 = virtualinvoke $r6.<com.mkulesh.micromath.widgets.CustomEditText: boolean isComparatorEnabled()>();

        if $z1 == 0 goto label4;

        $r3 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: android.content.Context getContext()>();

        $z1 = staticinvoke <com.mkulesh.micromath.formula.FormulaTermComparator: boolean isComparator(android.content.Context,java.lang.String)>($r3, $r1);

        if $z1 == 0 goto label4;

        $r4 = <com.mkulesh.micromath.formula.FormulaTerm$TermType: com.mkulesh.micromath.formula.FormulaTerm$TermType COMPARATOR>;

        $r5 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm convertToTerm(com.mkulesh.micromath.formula.FormulaTerm$TermType,java.lang.String)>($r4, $r1);

        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term> = $r5;

        goto label1;

     label4:
        if $z0 == 0 goto label5;

        $r3 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: android.content.Context getContext()>();

        $z0 = staticinvoke <com.mkulesh.micromath.formula.FormulaTermFunction: boolean isFunction(android.content.Context,java.lang.String)>($r3, $r1);

        if $z0 == 0 goto label5;

        $r4 = <com.mkulesh.micromath.formula.FormulaTerm$TermType: com.mkulesh.micromath.formula.FormulaTerm$TermType FUNCTION>;

        $r5 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm convertToTerm(com.mkulesh.micromath.formula.FormulaTerm$TermType,java.lang.String)>($r4, $r1);

        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term> = $r5;

        goto label1;

     label5:
        $r6 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $z0 = virtualinvoke $r6.<com.mkulesh.micromath.widgets.CustomEditText: boolean isIntervalEnabled()>();

        if $z0 == 0 goto label6;

        $r3 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: android.content.Context getContext()>();

        $z0 = staticinvoke <com.mkulesh.micromath.formula.FormulaTermInterval: boolean isInterval(android.content.Context,java.lang.String)>($r3, $r1);

        if $z0 == 0 goto label6;

        $r4 = <com.mkulesh.micromath.formula.FormulaTerm$TermType: com.mkulesh.micromath.formula.FormulaTerm$TermType INTERVAL>;

        $r5 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm convertToTerm(com.mkulesh.micromath.formula.FormulaTerm$TermType,java.lang.String)>($r4, $r1);

        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term> = $r5;

        goto label1;

     label6:
        $r3 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: android.content.Context getContext()>();

        $z0 = staticinvoke <com.mkulesh.micromath.formula.FormulaTermLoop: boolean isLoop(android.content.Context,java.lang.String)>($r3, $r1);

        if $z0 == 0 goto label1;

        $r4 = <com.mkulesh.micromath.formula.FormulaTerm$TermType: com.mkulesh.micromath.formula.FormulaTerm$TermType LOOP>;

        $r5 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm convertToTerm(com.mkulesh.micromath.formula.FormulaTerm$TermType,java.lang.String)>($r4, $r1);

        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term> = $r5;

        goto label1;
    }
    public boolean dependsOn(com.mkulesh.micromath.formula.Equation)
    {
        com.mkulesh.micromath.formula.TermField r0;
        com.mkulesh.micromath.formula.Equation $r1, $r5;
        boolean $z0;
        com.mkulesh.micromath.formula.FormulaTerm $r2;
        com.mkulesh.micromath.formula.TermField$ContentType $r3, $r4;
        int $i0, $i1;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 := @parameter0: com.mkulesh.micromath.formula.Equation;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isTerm()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term>;

        $z0 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaTerm: boolean dependsOn(com.mkulesh.micromath.formula.Equation)>($r1);

        return $z0;

     label1:
        $r3 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$ContentType contentType>;

        $r4 = <com.mkulesh.micromath.formula.TermField$ContentType: com.mkulesh.micromath.formula.TermField$ContentType VARIABLE_LINK>;

        if $r3 != $r4 goto label2;

        $r5 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.Equation linkedVariable>;

        if $r5 == null goto label2;

        $r5 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.Equation linkedVariable>;

        $z0 = $r5 instanceof com.mkulesh.micromath.formula.Equation;

        if $z0 == 0 goto label2;

        $r5 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.Equation linkedVariable>;

        $i0 = virtualinvoke $r5.<com.mkulesh.micromath.formula.Equation: int getId()>();

        $i1 = virtualinvoke $r1.<com.mkulesh.micromath.formula.Equation: int getId()>();

        if $i0 != $i1 goto label2;

        return 1;

     label2:
        return 0;
    }
    boolean disableCalculation()
    {
        com.mkulesh.micromath.formula.TermField r0;
        com.mkulesh.micromath.formula.FormulaBase $r1;
        boolean $z0;
        com.mkulesh.micromath.formula.CalculationResult $r2;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $z0 = $r1 instanceof com.mkulesh.micromath.formula.CalculationResult;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()>();

        $r2 = (com.mkulesh.micromath.formula.CalculationResult) $r1;

        $z0 = virtualinvoke $r2.<com.mkulesh.micromath.formula.CalculationResult: boolean disableCalculation()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public com.mkulesh.micromath.formula.ArgumentHolderIf findArgumentHolder(java.lang.String)
    {
        com.mkulesh.micromath.formula.TermField r0;
        java.lang.String $r1;
        com.mkulesh.micromath.formula.FormulaBase $r2;
        boolean $z0;
        com.mkulesh.micromath.formula.ArgumentHolderIf r3;
        int $i0;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase getParentFormula()>();

     label1:
        if $r2 == null goto label3;

        $z0 = $r2 instanceof com.mkulesh.micromath.formula.ArgumentHolderIf;

        if $z0 == 0 goto label2;

        r3 = (com.mkulesh.micromath.formula.ArgumentHolderIf) $r2;

        $i0 = interfaceinvoke r3.<com.mkulesh.micromath.formula.ArgumentHolderIf: int getArgumentIndex(java.lang.String)>($r1);

        if $i0 == -1 goto label2;

        return r3;

     label2:
        r0 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.TermField getParentField()>();

        if r0 == null goto label3;

        r0 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.TermField getParentField()>();

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase getParentFormula()>();

        goto label1;

     label3:
        return null;
    }
    public java.lang.String findErrorMsg()
    {
        com.mkulesh.micromath.formula.TermField r0;
        java.lang.String $r1;
        com.mkulesh.micromath.formula.FormulaBase $r2;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 = r0.<com.mkulesh.micromath.formula.TermField: java.lang.String errorMsg>;

        if $r1 == null goto label1;

        $r1 = r0.<com.mkulesh.micromath.formula.TermField: java.lang.String errorMsg>;

        return $r1;

     label1:
        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase getParentFormula()>();

     label2:
        if $r2 == null goto label4;

        r0 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.TermField getParentField()>();

        if r0 == null goto label4;

        $r1 = r0.<com.mkulesh.micromath.formula.TermField: java.lang.String errorMsg>;

        if $r1 == null goto label3;

        $r1 = r0.<com.mkulesh.micromath.formula.TermField: java.lang.String errorMsg>;

        return $r1;

     label3:
        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase getParentFormula()>();

        goto label2;

     label4:
        return null;
    }
    public com.mkulesh.micromath.formula.TermField findFocusedTerm()
    {
        com.mkulesh.micromath.formula.TermField r0;
        boolean $z0;
        com.mkulesh.micromath.formula.FormulaTerm $r1;
        com.mkulesh.micromath.formula.FormulaBase $r2;
        com.mkulesh.micromath.formula.FormulaList $r3;
        com.mkulesh.micromath.widgets.CustomEditText $r4;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isTerm()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term>;

        $r2 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase formulaRoot>;

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r2 = virtualinvoke $r3.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase getSelectedTerm()>();

        if $r1 != $r2 goto label1;

        return r0;

     label1:
        $r1 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term>;

        r0 = virtualinvoke $r1.<com.mkulesh.micromath.formula.FormulaTerm: com.mkulesh.micromath.formula.TermField findFocusedTerm()>();

        return r0;

     label2:
        $r4 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $z0 = virtualinvoke $r4.<com.mkulesh.micromath.widgets.CustomEditText: boolean isFocused()>();

        if $z0 != 0 goto label3;

        return null;

     label3:
        return r0;
    }
    public com.mkulesh.micromath.formula.TermField$ContentType getContentType()
    {
        com.mkulesh.micromath.formula.TermField r0;
        com.mkulesh.micromath.formula.TermField$ContentType r1;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        r1 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$ContentType contentType>;

        return r1;
    }
    public android.content.Context getContext()
    {
        com.mkulesh.micromath.formula.TermField r0;
        com.mkulesh.micromath.formula.FormulaBase $r1;
        com.mkulesh.micromath.formula.FormulaList $r2;
        android.content.Context $r3;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase formulaRoot>;

        $r2 = virtualinvoke $r1.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaList: android.content.Context getContext()>();

        return $r3;
    }
    public com.mkulesh.micromath.math.CalculatedValue$ValueType getDerivativeValue(java.lang.String, com.mkulesh.micromath.formula.CalculaterTask, com.mkulesh.micromath.math.CalculatedValue) throws com.mkulesh.micromath.formula.CalculaterTask$CancelException
    {
        com.mkulesh.micromath.formula.TermField r0;
        java.lang.String $r1;
        com.mkulesh.micromath.formula.CalculaterTask $r2;
        com.mkulesh.micromath.math.CalculatedValue $r3;
        com.mkulesh.micromath.formula.TermField$ContentType $r4, $r7;
        boolean $z0;
        com.mkulesh.micromath.formula.FormulaTerm $r5;
        com.mkulesh.micromath.math.CalculatedValue$ValueType $r6;
        com.mkulesh.micromath.formula.TermParser $r8;
        double $d0;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.mkulesh.micromath.formula.CalculaterTask;

        $r3 := @parameter2: com.mkulesh.micromath.math.CalculatedValue;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isTerm()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term>;

        $r6 = virtualinvoke $r5.<com.mkulesh.micromath.formula.FormulaTerm: com.mkulesh.micromath.math.CalculatedValue$ValueType getDerivativeValue(java.lang.String,com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.math.CalculatedValue)>($r1, $r2, $r3);

        return $r6;

     label1:
        $r7 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$ContentType contentType>;

        $r4 = <com.mkulesh.micromath.formula.TermField$ContentType: com.mkulesh.micromath.formula.TermField$ContentType ARGUMENT>;

        if $r7 != $r4 goto label2;

        $r8 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermParser parser>;

        $z0 = virtualinvoke $r8.<com.mkulesh.micromath.formula.TermParser: boolean isArgumentInHolder(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        $r8 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermParser parser>;

        $d0 = virtualinvoke $r8.<com.mkulesh.micromath.formula.TermParser: double getSign()>();

        $r6 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>($d0);

        return $r6;

     label2:
        $r6 = virtualinvoke $r3.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType setValue(double)>(0.0);

        return $r6;
    }
    public com.mkulesh.micromath.widgets.CustomEditText getEditText()
    {
        com.mkulesh.micromath.formula.TermField r0;
        com.mkulesh.micromath.widgets.CustomEditText r1;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        r1 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        return r1;
    }
    public com.mkulesh.micromath.formula.FormulaBase getFormulaRoot()
    {
        com.mkulesh.micromath.formula.TermField r0;
        com.mkulesh.micromath.formula.FormulaBase r1;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        r1 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase formulaRoot>;

        return r1;
    }
    public android.widget.LinearLayout getLayout()
    {
        com.mkulesh.micromath.formula.TermField r0;
        android.widget.LinearLayout r1;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        r1 = r0.<com.mkulesh.micromath.formula.TermField: android.widget.LinearLayout layout>;

        return r1;
    }
    public com.mkulesh.micromath.formula.FormulaBase getParentFormula()
    {
        com.mkulesh.micromath.formula.TermField r0;
        com.mkulesh.micromath.formula.FormulaBase r1;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        r1 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase parentFormula>;

        return r1;
    }
    public com.mkulesh.micromath.formula.TermParser getParser()
    {
        com.mkulesh.micromath.formula.TermField r0;
        com.mkulesh.micromath.formula.TermParser r1;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        r1 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermParser parser>;

        return r1;
    }
    public com.mkulesh.micromath.undo.FormulaState getState()
    {
        com.mkulesh.micromath.formula.TermField r0;
        android.os.Bundle r1;
        com.mkulesh.micromath.undo.FormulaState $r2;
        com.mkulesh.micromath.formula.FormulaBase $r3;
        int $i0, $i1;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        r1 = new android.os.Bundle;

        specialinvoke r1.<android.os.Bundle: void <init>()>();

        virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: void writeToBundle(android.os.Bundle,java.lang.String)>(r1, "");

        $r2 = new com.mkulesh.micromath.undo.FormulaState;

        $r3 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase formulaRoot>;

        $i0 = virtualinvoke $r3.<com.mkulesh.micromath.formula.FormulaBase: int getId()>();

        $i1 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: int getTermId()>();

        specialinvoke $r2.<com.mkulesh.micromath.undo.FormulaState: void <init>(int,int,android.os.Parcelable)>($i0, $i1, r1);

        return $r2;
    }
    public com.mkulesh.micromath.formula.FormulaTerm getTerm()
    {
        com.mkulesh.micromath.formula.TermField r0;
        com.mkulesh.micromath.formula.FormulaTerm r1;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        r1 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term>;

        return r1;
    }
    public int getTermId()
    {
        com.mkulesh.micromath.formula.TermField r0;
        int $i0;
        com.mkulesh.micromath.widgets.CustomEditText $r1;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $i0 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomEditText: int getId()>();

        return $i0;
    }
    public java.lang.String getTermKey()
    {
        com.mkulesh.micromath.formula.TermField r0;
        java.lang.String r1;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        r1 = r0.<com.mkulesh.micromath.formula.TermField: java.lang.String termKey>;

        return r1;
    }
    public java.lang.String getText()
    {
        com.mkulesh.micromath.formula.TermField r0;
        com.mkulesh.micromath.widgets.CustomEditText $r1;
        android.text.Editable $r2;
        java.lang.String $r3;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $r2 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomEditText: android.text.Editable getText()>();

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r3;
    }
    public com.mkulesh.micromath.math.CalculatedValue$ValueType getValue(com.mkulesh.micromath.formula.CalculaterTask, com.mkulesh.micromath.math.CalculatedValue) throws com.mkulesh.micromath.formula.CalculaterTask$CancelException
    {
        com.mkulesh.micromath.formula.TermField r0;
        com.mkulesh.micromath.formula.CalculaterTask $r1;
        com.mkulesh.micromath.math.CalculatedValue $r2, $r9;
        boolean $z0;
        com.mkulesh.micromath.formula.FormulaTerm $r3;
        com.mkulesh.micromath.math.CalculatedValue$ValueType $r4;
        int[] $r5;
        com.mkulesh.micromath.formula.TermField$ContentType $r6;
        int $i0;
        com.mkulesh.micromath.math.CalculatedValue$ErrorType $r7;
        com.mkulesh.micromath.formula.TermParser $r8;
        com.mkulesh.micromath.formula.ArgumentHolderIf $r10;
        double $d0;
        com.mkulesh.micromath.formula.Equation $r11;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 := @parameter0: com.mkulesh.micromath.formula.CalculaterTask;

        $r2 := @parameter1: com.mkulesh.micromath.math.CalculatedValue;

        if $r1 == null goto label1;

        virtualinvoke $r1.<com.mkulesh.micromath.formula.CalculaterTask: void checkCancelation()>();

     label1:
        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isTerm()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term>;

        $r4 = virtualinvoke $r3.<com.mkulesh.micromath.formula.FormulaTerm: com.mkulesh.micromath.math.CalculatedValue$ValueType getValue(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.math.CalculatedValue)>($r1, $r2);

        return $r4;

     label2:
        $r5 = <com.mkulesh.micromath.formula.TermField$1: int[] $SwitchMap$com$mkulesh$micromath$formula$TermField$ContentType>;

        $r6 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$ContentType contentType>;

        $i0 = virtualinvoke $r6.<com.mkulesh.micromath.formula.TermField$ContentType: int ordinal()>();

        $i0 = $r5[$i0];

        lookupswitch($i0)
        {
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label6;
            default: goto label3;
        };

     label3:
        $r7 = <com.mkulesh.micromath.math.CalculatedValue$ErrorType: com.mkulesh.micromath.math.CalculatedValue$ErrorType TERM_NOT_READY>;

        $r4 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType invalidate(com.mkulesh.micromath.math.CalculatedValue$ErrorType)>($r7);

        return $r4;

     label4:
        $r8 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermParser parser>;

        $r9 = virtualinvoke $r8.<com.mkulesh.micromath.formula.TermParser: com.mkulesh.micromath.math.CalculatedValue getValue()>();

        $r4 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType assign(com.mkulesh.micromath.math.CalculatedValue)>($r9);

        return $r4;

     label5:
        $r8 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermParser parser>;

        $r10 = virtualinvoke $r8.<com.mkulesh.micromath.formula.TermParser: com.mkulesh.micromath.formula.ArgumentHolderIf getArgumentHolder()>();

        $r8 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermParser parser>;

        $i0 = virtualinvoke $r8.<com.mkulesh.micromath.formula.TermParser: int getArgumentIndex()>();

        $r9 = interfaceinvoke $r10.<com.mkulesh.micromath.formula.ArgumentHolderIf: com.mkulesh.micromath.math.CalculatedValue getArgumentValue(int)>($i0);

        virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType assign(com.mkulesh.micromath.math.CalculatedValue)>($r9);

        $r8 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermParser parser>;

        $d0 = virtualinvoke $r8.<com.mkulesh.micromath.formula.TermParser: double getSign()>();

        $r4 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(double)>($d0);

        return $r4;

     label6:
        $r11 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.Equation linkedVariable>;

        $z0 = virtualinvoke $r11.<com.mkulesh.micromath.formula.Equation: boolean isInterval()>();

        if $z0 == 0 goto label8;

        $r11 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.Equation linkedVariable>;

        $r9 = virtualinvoke $r11.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.math.CalculatedValue getArgumentValue(int)>(0);

        virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType assign(com.mkulesh.micromath.math.CalculatedValue)>($r9);

     label7:
        $r8 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermParser parser>;

        $d0 = virtualinvoke $r8.<com.mkulesh.micromath.formula.TermParser: double getSign()>();

        $r4 = virtualinvoke $r2.<com.mkulesh.micromath.math.CalculatedValue: com.mkulesh.micromath.math.CalculatedValue$ValueType multiply(double)>($d0);

        return $r4;

     label8:
        $r11 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.Equation linkedVariable>;

        virtualinvoke $r11.<com.mkulesh.micromath.formula.Equation: com.mkulesh.micromath.math.CalculatedValue$ValueType getValue(com.mkulesh.micromath.formula.CalculaterTask,com.mkulesh.micromath.math.CalculatedValue)>($r1, $r2);

        goto label7;
    }
    public com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType isDifferentiable(java.lang.String)
    {
        com.mkulesh.micromath.formula.TermField r0;
        java.lang.String $r1;
        com.mkulesh.micromath.formula.TermField$ContentType $r2, $r5;
        boolean $z0;
        com.mkulesh.micromath.formula.FormulaTerm $r3;
        com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType $r4;
        com.mkulesh.micromath.formula.TermParser $r6;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isTerm()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term>;

        $r4 = virtualinvoke $r3.<com.mkulesh.micromath.formula.FormulaTerm: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType isDifferentiable(java.lang.String)>($r1);

        return $r4;

     label1:
        $r5 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$ContentType contentType>;

        $r2 = <com.mkulesh.micromath.formula.TermField$ContentType: com.mkulesh.micromath.formula.TermField$ContentType ARGUMENT>;

        if $r5 != $r2 goto label2;

        $r6 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermParser parser>;

        $z0 = virtualinvoke $r6.<com.mkulesh.micromath.formula.TermParser: boolean isArgumentInHolder(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        $r4 = <com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType ANALYTICAL>;

        return $r4;

     label2:
        $r4 = <com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType: com.mkulesh.micromath.formula.CalculatableIf$DifferentiableType INDEPENDENT>;

        return $r4;
    }
    public boolean isEmpty()
    {
        com.mkulesh.micromath.formula.TermField r0;
        boolean $z0;
        com.mkulesh.micromath.widgets.CustomEditText $r1;
        android.text.Editable $r2;
        int $i0;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isTerm()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $r2 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomEditText: android.text.Editable getText()>();

        $i0 = interfaceinvoke $r2.<android.text.Editable: int length()>();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean isEmptyOrAutoContent()
    {
        com.mkulesh.micromath.formula.TermField r0;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isTerm()>();

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z0 = r0.<com.mkulesh.micromath.formula.TermField: boolean emptyOrAutoContent>;

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    public boolean isEnabledInPalette(com.mkulesh.micromath.formula.Palette$PaletteType)
    {
        com.mkulesh.micromath.formula.TermField r0;
        com.mkulesh.micromath.formula.Palette$PaletteType $r1, $r3;
        boolean $z0;
        com.mkulesh.micromath.formula.FormulaTerm $r2;
        int[] $r4;
        int $i0;
        com.mkulesh.micromath.formula.FormulaBase $r5;
        com.mkulesh.micromath.widgets.CustomEditText $r6;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 := @parameter0: com.mkulesh.micromath.formula.Palette$PaletteType;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isTerm()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term>;

        $z0 = $r2 instanceof com.mkulesh.micromath.formula.FormulaTermInterval;

        if $z0 == 0 goto label1;

        $r3 = <com.mkulesh.micromath.formula.Palette$PaletteType: com.mkulesh.micromath.formula.Palette$PaletteType NEW_TERM>;

        if $r1 == $r3 goto label1;

        return 0;

     label1:
        $r4 = <com.mkulesh.micromath.formula.TermField$1: int[] $SwitchMap$com$mkulesh$micromath$formula$Palette$PaletteType>;

        $i0 = virtualinvoke $r1.<com.mkulesh.micromath.formula.Palette$PaletteType: int ordinal()>();

        $i0 = $r4[$i0];

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            default: goto label2;
        };

     label2:
        return 0;

     label3:
        $r5 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase parentFormula>;

        $z0 = virtualinvoke $r5.<com.mkulesh.micromath.formula.FormulaBase: boolean isNewTermEnabled()>();

        if $z0 == 0 goto label7;

        $r6 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $z0 = virtualinvoke $r6.<com.mkulesh.micromath.widgets.CustomEditText: boolean isNewTermEnabled()>();

        if $z0 == 0 goto label7;

        return 1;

     label4:
        $r6 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $z0 = virtualinvoke $r6.<com.mkulesh.micromath.widgets.CustomEditText: boolean isIntervalEnabled()>();

        return $z0;

     label5:
        $r6 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $z0 = virtualinvoke $r6.<com.mkulesh.micromath.widgets.CustomEditText: boolean isConversionEnabled()>();

        return $z0;

     label6:
        $r6 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $z0 = virtualinvoke $r6.<com.mkulesh.micromath.widgets.CustomEditText: boolean isComparatorEnabled()>();

        return $z0;

     label7:
        return 0;
    }
    public boolean isTerm()
    {
        com.mkulesh.micromath.formula.TermField r0;
        com.mkulesh.micromath.formula.FormulaTerm $r1;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public int onGetNextFocusId(com.mkulesh.micromath.widgets.CustomEditText, com.mkulesh.micromath.widgets.FocusChangeIf$NextFocusType)
    {
        com.mkulesh.micromath.formula.TermField r0;
        com.mkulesh.micromath.widgets.CustomEditText $r1;
        com.mkulesh.micromath.widgets.FocusChangeIf$NextFocusType $r2;
        int $i0;
        com.mkulesh.micromath.formula.FormulaBase $r3;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 := @parameter0: com.mkulesh.micromath.widgets.CustomEditText;

        $r2 := @parameter1: com.mkulesh.micromath.widgets.FocusChangeIf$NextFocusType;

        $r3 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase parentFormula>;

        $r1 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $i0 = virtualinvoke $r3.<com.mkulesh.micromath.formula.FormulaBase: int getNextFocusId(com.mkulesh.micromath.widgets.CustomEditText,com.mkulesh.micromath.widgets.FocusChangeIf$NextFocusType)>($r1, $r2);

        return $i0;
    }
    public void onSizeChanged()
    {
        com.mkulesh.micromath.formula.TermField r0;
        com.mkulesh.micromath.widgets.CustomEditText $r1;
        boolean $z0;
        com.mkulesh.micromath.formula.FormulaBase $r2;
        com.mkulesh.micromath.formula.FormulaList $r3;
        com.mkulesh.micromath.widgets.TwoDScrollView $r4;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isTerm()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $z0 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomEditText: boolean isFocused()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase formulaRoot>;

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r4 = virtualinvoke $r3.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.widgets.TwoDScrollView getFormulaScrollView()>();

        $r1 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        virtualinvoke $r4.<com.mkulesh.micromath.widgets.TwoDScrollView: void scrollToChild(android.view.View)>($r1);

     label1:
        return;
    }
    public void onTermDelete(int, com.mkulesh.micromath.formula.TermField)
    {
        com.mkulesh.micromath.formula.TermField r0, $r1;
        int $i0;
        com.mkulesh.micromath.formula.FormulaBase $r2;
        com.mkulesh.micromath.formula.FormulaList $r3;
        com.mkulesh.micromath.undo.UndoState $r4;
        com.mkulesh.micromath.undo.FormulaState $r5;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.mkulesh.micromath.formula.TermField;

        $r2 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase formulaRoot>;

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r4 = virtualinvoke $r3.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.undo.UndoState getUndoState()>();

        $r5 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.undo.FormulaState getState()>();

        virtualinvoke $r4.<com.mkulesh.micromath.undo.UndoState: void addEntry(android.os.Parcelable)>($r5);

        specialinvoke r0.<com.mkulesh.micromath.formula.TermField: void deleteTerm(int,com.mkulesh.micromath.formula.TermField,java.lang.CharSequence)>($i0, $r1, "");

        return;
    }
    public void onTermDeleteWithText(int, java.lang.CharSequence)
    {
        com.mkulesh.micromath.formula.TermField r0;
        int $i0;
        java.lang.CharSequence $r1;
        com.mkulesh.micromath.formula.FormulaBase $r2;
        com.mkulesh.micromath.formula.FormulaList $r3;
        com.mkulesh.micromath.undo.UndoState $r4;
        com.mkulesh.micromath.undo.FormulaState $r5;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.CharSequence;

        $r2 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase formulaRoot>;

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r4 = virtualinvoke $r3.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.undo.UndoState getUndoState()>();

        $r5 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.undo.FormulaState getState()>();

        virtualinvoke $r4.<com.mkulesh.micromath.undo.UndoState: void addEntry(android.os.Parcelable)>($r5);

        specialinvoke r0.<com.mkulesh.micromath.formula.TermField: void deleteTerm(int,com.mkulesh.micromath.formula.TermField,java.lang.CharSequence)>($i0, null, $r1);

        return;
    }
    public void onTextChanged(java.lang.String, boolean)
    {
        com.mkulesh.micromath.formula.TermField r0;
        java.lang.String $r1;
        boolean $z0, z1, $z2;
        int $i0;
        com.mkulesh.micromath.widgets.CustomEditText $r2;
        android.content.Context $r3;
        com.mkulesh.micromath.formula.FormulaTerm $r4;
        com.mkulesh.micromath.formula.FormulaBase $r5;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $z0 = 0;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label5;

     label1:
        z1 = 1;

     label2:
        $z2 = r0.<com.mkulesh.micromath.formula.TermField: boolean textChangeDetectionEnabled>;

        if $z2 == 0 goto label3;

        r0.<com.mkulesh.micromath.formula.TermField: boolean emptyOrAutoContent> = z1;

     label3:
        if z1 != 0 goto label4;

        $r2 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $z2 = virtualinvoke $r2.<com.mkulesh.micromath.widgets.CustomEditText: boolean isConversionEnabled()>();

        if $z2 == 0 goto label4;

        $r3 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: android.content.Context getContext()>();

        $z2 = staticinvoke <com.mkulesh.micromath.formula.FormulaTermFunction: boolean isConversionEnabled(android.content.Context,java.lang.String)>($r3, $r1);

        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm convertToTerm(java.lang.String,android.os.Parcelable,boolean)>($r1, null, $z2);

        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term> = $r4;

        $r4 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term>;

        if $r4 == null goto label4;

        $z0 = 1;

        virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: void requestFocus()>();

     label4:
        if z1 != 0 goto label6;

        if $z0 != 0 goto label6;

        $r2 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $z0 = virtualinvoke $r2.<com.mkulesh.micromath.widgets.CustomEditText: boolean isNewTermEnabled()>();

        if $z0 == 0 goto label6;

        $r5 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase parentFormula>;

        $z0 = virtualinvoke $r5.<com.mkulesh.micromath.formula.FormulaBase: boolean onNewTerm(com.mkulesh.micromath.formula.TermField,java.lang.String,boolean)>(r0, $r1, 1);

        if $z0 == 0 goto label6;

        return;

     label5:
        z1 = 0;

        goto label2;

     label6:
        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isTerm()>();

        if $z0 != 0 goto label7;

        virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$ContentType checkContentType()>();

     label7:
        return;
    }
    public void readFromBundle(android.os.Bundle, java.lang.String)
    {
        com.mkulesh.micromath.formula.TermField r0;
        android.os.Bundle $r1;
        java.lang.String $r2, $r5;
        boolean $z0;
        com.mkulesh.micromath.widgets.CustomEditText $r3;
        java.lang.StringBuilder $r4;
        int $i0;
        android.os.Parcelable $r6;
        com.mkulesh.micromath.formula.FormulaTerm $r7;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 := @parameter0: android.os.Bundle;

        $r2 := @parameter1: java.lang.String;

        $z0 = <com.mkulesh.micromath.utils.IdGenerator: boolean enableIdRestore>;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_term_id");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String)>($r5);

        virtualinvoke $r3.<com.mkulesh.micromath.widgets.CustomEditText: void setId(int)>($i0);

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: int getTermId()>();

        staticinvoke <com.mkulesh.micromath.utils.IdGenerator: void compareAndSet(int)>($i0);

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_text");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>($r5);

        virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: void setText(java.lang.CharSequence)>($r5);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_code");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>($r5);

        if $r5 == null goto label2;

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_instance");

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r1.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>($r2);

        $r7 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm convertToTerm(java.lang.String,android.os.Parcelable,boolean)>($r5, $r6, 1);

        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term> = $r7;

     label2:
        return;
    }
    public void readFromXml(org.xmlpull.v1.XmlPullParser) throws java.lang.Exception
    {
        com.mkulesh.micromath.formula.TermField r0;
        org.xmlpull.v1.XmlPullParser $r1;
        java.lang.String $r2, r3, $r4, $r5, $r6;
        boolean z0;
        int $i0;
        com.mkulesh.micromath.formula.FormulaTerm $r7;
        java.lang.Exception $r8;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "text");

        r3 = $r2;

        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "code");

        $r5 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

        $r6 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, $r5, $r6);

        z0 = 1;

        if $r4 != null goto label4;

        if $r2 != null goto label1;

        r3 = "";

     label1:
        virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: void setText(java.lang.CharSequence)>(r3);

     label2:
        if z0 == 0 goto label6;

     label3:
        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i0 != 3 goto label3;

        return;

     label4:
        $r7 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm convertToTerm(java.lang.String,android.os.Parcelable,boolean)>($r4, null, 1);

        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term> = $r7;

        z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isTerm()>();

        if z0 == 0 goto label5;

        virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: void setText(java.lang.CharSequence)>("");

        $r7 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term>;

        virtualinvoke $r7.<com.mkulesh.micromath.formula.FormulaTerm: void readFromXml(org.xmlpull.v1.XmlPullParser)>($r1);

        z0 = 0;

        goto label2;

     label5:
        $r8 = new java.lang.Exception;

        specialinvoke $r8.<java.lang.Exception: void <init>(java.lang.String)>("can not create term");

        throw $r8;

     label6:
        return;
    }
    public void readStoredFormula(com.mkulesh.micromath.formula.StoredFormula, boolean)
    {
        com.mkulesh.micromath.formula.TermField r0;
        com.mkulesh.micromath.formula.StoredFormula $r1;
        boolean $z0, $z1;
        com.mkulesh.micromath.widgets.CustomEditText $r2;
        com.mkulesh.micromath.formula.StoredFormula$StoredTerm $r3;
        java.lang.String $r4;
        android.os.Parcelable $r5;
        com.mkulesh.micromath.formula.FormulaTerm $r6;
        com.mkulesh.micromath.formula.FormulaBase $r7;
        com.mkulesh.micromath.formula.FormulaList $r8;
        android.support.v7.app.AppCompatActivity $r9;
        android.content.res.Resources $r10;
        android.widget.Toast $r11;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 := @parameter0: com.mkulesh.micromath.formula.StoredFormula;

        $z0 := @parameter1: boolean;

        $r2 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $z1 = virtualinvoke $r2.<com.mkulesh.micromath.widgets.CustomEditText: boolean isConversionEnabled()>();

        if $z1 == 0 goto label1;

        $r3 = virtualinvoke $r1.<com.mkulesh.micromath.formula.StoredFormula: com.mkulesh.micromath.formula.StoredFormula$StoredTerm getSingleData()>();

        $r4 = $r3.<com.mkulesh.micromath.formula.StoredFormula$StoredTerm: java.lang.String termCode>;

        $r3 = virtualinvoke $r1.<com.mkulesh.micromath.formula.StoredFormula: com.mkulesh.micromath.formula.StoredFormula$StoredTerm getSingleData()>();

        $r5 = $r3.<com.mkulesh.micromath.formula.StoredFormula$StoredTerm: android.os.Parcelable data>;

        $r6 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm convertToTerm(java.lang.String,android.os.Parcelable,boolean)>($r4, $r5, 1);

        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term> = $r6;

        return;

     label1:
        if $z0 == 0 goto label2;

        $r7 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase formulaRoot>;

        $r8 = virtualinvoke $r7.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r9 = virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        $r10 = virtualinvoke $r9.<android.support.v7.app.AppCompatActivity: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r10.<android.content.res.Resources: java.lang.String getString(int)>(2131099802);

        $r7 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase formulaRoot>;

        $r8 = virtualinvoke $r7.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r9 = virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        $r11 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r9, $r4, 1);

        virtualinvoke $r11.<android.widget.Toast: void show()>();

     label2:
        return;
    }
    public void requestFocus()
    {
        com.mkulesh.micromath.formula.TermField r0;
        com.mkulesh.micromath.widgets.CustomEditText $r1;
        boolean $z0;
        com.mkulesh.micromath.formula.FormulaBase$FocusType $r2;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $z0 = virtualinvoke $r1.<com.mkulesh.micromath.widgets.CustomEditText: boolean isRequestFocusEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = <com.mkulesh.micromath.formula.FormulaBase$FocusType: com.mkulesh.micromath.formula.FormulaBase$FocusType FIRST_EMPTY>;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean setEditableFocus(com.mkulesh.micromath.formula.FormulaBase$FocusType)>($r2);

        if $z0 != 0 goto label1;

        $r2 = <com.mkulesh.micromath.formula.FormulaBase$FocusType: com.mkulesh.micromath.formula.FormulaBase$FocusType FIRST_EDITABLE>;

        virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean setEditableFocus(com.mkulesh.micromath.formula.FormulaBase$FocusType)>($r2);

     label1:
        return;
    }
    public boolean setEditableFocus(com.mkulesh.micromath.formula.FormulaBase$FocusType)
    {
        com.mkulesh.micromath.formula.TermField r0;
        com.mkulesh.micromath.formula.FormulaBase$FocusType $r1, $r3;
        boolean $z0;
        com.mkulesh.micromath.formula.FormulaTerm $r2;
        com.mkulesh.micromath.widgets.CustomEditText $r4;
        com.mkulesh.micromath.formula.FormulaBase $r5;
        com.mkulesh.micromath.formula.FormulaList $r6;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 := @parameter0: com.mkulesh.micromath.formula.FormulaBase$FocusType;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isTerm()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term>;

        $z0 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaTerm: boolean setEditableFocus(com.mkulesh.micromath.formula.FormulaBase$FocusType)>($r1);

        return $z0;

     label1:
        $r3 = <com.mkulesh.micromath.formula.FormulaBase$FocusType: com.mkulesh.micromath.formula.FormulaBase$FocusType FIRST_EDITABLE>;

        if $r1 == $r3 goto label2;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isEmpty()>();

        if $z0 == 0 goto label3;

     label2:
        $r4 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        virtualinvoke $r4.<com.mkulesh.micromath.widgets.CustomEditText: boolean requestFocus()>();

        $r5 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase formulaRoot>;

        $r6 = virtualinvoke $r5.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        virtualinvoke $r6.<com.mkulesh.micromath.formula.FormulaList: void showSoftKeyboard(boolean)>(1);

        return 1;

     label3:
        return 0;
    }
    public void setError(java.lang.String, com.mkulesh.micromath.formula.TermField$ErrorNotification, com.mkulesh.micromath.widgets.CustomLayout)
    {
        com.mkulesh.micromath.formula.TermField r0;
        java.lang.String $r1;
        com.mkulesh.micromath.formula.TermField$ErrorNotification $r2, $r5;
        com.mkulesh.micromath.widgets.CustomLayout $r3;
        boolean $z0;
        int $i0;
        com.mkulesh.micromath.formula.TermField$ContentType $r4;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.mkulesh.micromath.formula.TermField$ErrorNotification;

        $r3 := @parameter2: com.mkulesh.micromath.widgets.CustomLayout;

        r0.<com.mkulesh.micromath.formula.TermField: int errorId> = -1;

        r0.<com.mkulesh.micromath.formula.TermField: java.lang.String errorMsg> = $r1;

        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$ErrorNotification errorNotification> = $r2;

        if $r3 == null goto label1;

        virtualinvoke $r3.<com.mkulesh.micromath.widgets.CustomLayout: void setContentValid(boolean)>(1);

     label1:
        $i0 = r0.<com.mkulesh.micromath.formula.TermField: int errorId>;

        if $i0 != -1 goto label2;

        if $r1 == null goto label3;

     label2:
        $r4 = <com.mkulesh.micromath.formula.TermField$ContentType: com.mkulesh.micromath.formula.TermField$ContentType INVALID>;

        r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$ContentType contentType> = $r4;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean disableCalculation()>();

        if $z0 != 0 goto label3;

        $r5 = <com.mkulesh.micromath.formula.TermField$ErrorNotification: com.mkulesh.micromath.formula.TermField$ErrorNotification PARENT_LAYOUT>;

        if $r2 != $r5 goto label3;

        virtualinvoke $r3.<com.mkulesh.micromath.widgets.CustomLayout: void setContentValid(boolean)>(0);

     label3:
        specialinvoke r0.<com.mkulesh.micromath.formula.TermField: void updateViewColor()>();

        return;
    }
    public void setTermKey(java.lang.String)
    {
        com.mkulesh.micromath.formula.TermField r0;
        java.lang.String $r1;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 := @parameter0: java.lang.String;

        r0.<com.mkulesh.micromath.formula.TermField: java.lang.String termKey> = $r1;

        return;
    }
    public void setText(java.lang.CharSequence)
    {
        com.mkulesh.micromath.formula.TermField r0;
        java.lang.CharSequence $r1;
        boolean $z0;
        int $i0;
        com.mkulesh.micromath.widgets.CustomEditText $r2;
        java.lang.String $r3;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 := @parameter0: java.lang.CharSequence;

        $z0 = r0.<com.mkulesh.micromath.formula.TermField: boolean textChangeDetectionEnabled>;

        if $z0 == 0 goto label3;

        if $r1 == null goto label1;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label5;

     label1:
        $z0 = 1;

     label2:
        r0.<com.mkulesh.micromath.formula.TermField: boolean emptyOrAutoContent> = $z0;

     label3:
        $r2 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        virtualinvoke $r2.<com.mkulesh.micromath.widgets.CustomEditText: void setTextWatcherActive(boolean)>(0);

        if $r1 != null goto label4;

        $r1 = "";

     label4:
        $r2 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        virtualinvoke $r2.<com.mkulesh.micromath.widgets.CustomEditText: void setText(java.lang.CharSequence)>($r1);

        $r3 = interfaceinvoke $r1.<java.lang.CharSequence: java.lang.String toString()>();

        virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: void onTextChanged(java.lang.String,boolean)>($r3, 0);

        $r2 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        virtualinvoke $r2.<com.mkulesh.micromath.widgets.CustomEditText: void setTextWatcherActive(boolean)>(1);

        return;

     label5:
        $z0 = 0;

        goto label2;
    }
    public void setTextChangeDetectionEnabled(boolean)
    {
        com.mkulesh.micromath.formula.TermField r0;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $z0 := @parameter0: boolean;

        r0.<com.mkulesh.micromath.formula.TermField: boolean textChangeDetectionEnabled> = $z0;

        return;
    }
    public void showParsingError()
    {
        com.mkulesh.micromath.formula.TermField r0;
        java.lang.String $r1;
        com.mkulesh.micromath.formula.FormulaBase $r2;
        android.content.Context $r3, $r5;
        android.widget.Toast $r4;
        int $i0;
        android.content.res.Resources $r6;
        boolean $z0;
        com.mkulesh.micromath.formula.TermField$ContentType $r7, $r8;
        com.mkulesh.micromath.formula.TermParser $r9;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: java.lang.String findErrorMsg()>();

        if $r1 == null goto label1;

        $r2 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase formulaRoot>;

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaBase: android.content.Context getContext()>();

        $r4 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r3, $r1, 0);

        virtualinvoke $r4.<android.widget.Toast: void show()>();

        return;

     label1:
        $i0 = r0.<com.mkulesh.micromath.formula.TermField: int errorId>;

        if $i0 == -1 goto label2;

        $r2 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase formulaRoot>;

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaBase: android.content.Context getContext()>();

        $r2 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase formulaRoot>;

        $r5 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaBase: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = r0.<com.mkulesh.micromath.formula.TermField: int errorId>;

        $r1 = virtualinvoke $r6.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        $r4 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r3, $r1, 0);

        virtualinvoke $r4.<android.widget.Toast: void show()>();

        return;

     label2:
        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r7 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermField$ContentType contentType>;

        $r8 = <com.mkulesh.micromath.formula.TermField$ContentType: com.mkulesh.micromath.formula.TermField$ContentType INVALID>;

        if $r7 != $r8 goto label3;

        $r9 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermParser parser>;

        $i0 = $r9.<com.mkulesh.micromath.formula.TermParser: int errorId>;

        if $i0 == -1 goto label3;

        $r2 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase formulaRoot>;

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaBase: android.content.Context getContext()>();

        $r2 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase formulaRoot>;

        $r5 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaBase: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        $r9 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.TermParser parser>;

        $i0 = $r9.<com.mkulesh.micromath.formula.TermParser: int errorId>;

        $r1 = virtualinvoke $r6.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        $r4 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r3, $r1, 0);

        virtualinvoke $r4.<android.widget.Toast: void show()>();

     label3:
        return;
    }
    public void undo(com.mkulesh.micromath.undo.FormulaState)
    {
        com.mkulesh.micromath.formula.TermField r0;
        com.mkulesh.micromath.undo.FormulaState $r1;
        android.os.Parcelable $r2;
        boolean $z0;
        android.os.Bundle $r3;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 := @parameter0: com.mkulesh.micromath.undo.FormulaState;

        $r2 = $r1.<com.mkulesh.micromath.undo.FormulaState: android.os.Parcelable data>;

        $z0 = $r2 instanceof android.os.Bundle;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: void clear()>();

        $r2 = $r1.<com.mkulesh.micromath.undo.FormulaState: android.os.Parcelable data>;

        $r3 = (android.os.Bundle) $r2;

        virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: void readFromBundle(android.os.Bundle,java.lang.String)>($r3, "");

     label1:
        return;
    }
    public void updateTextColor()
    {
        com.mkulesh.micromath.formula.TermField r0;
        boolean $z0;
        com.mkulesh.micromath.formula.FormulaTerm $r1;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isTerm()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term>;

        virtualinvoke $r1.<com.mkulesh.micromath.formula.FormulaTerm: void updateTextColor()>();

        return;

     label1:
        specialinvoke r0.<com.mkulesh.micromath.formula.TermField: void updateViewColor()>();

        return;
    }
    public void updateTextSize()
    {
        com.mkulesh.micromath.formula.TermField r0;
        int $i0;
        com.mkulesh.micromath.widgets.ScaledDimensions$Type $r1;
        boolean $z0;
        com.mkulesh.micromath.formula.FormulaTerm $r2;
        com.mkulesh.micromath.widgets.CustomEditText $r3;
        com.mkulesh.micromath.formula.FormulaBase $r4;
        com.mkulesh.micromath.formula.FormulaList $r5;
        com.mkulesh.micromath.widgets.ScaledDimensions $r6;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isTerm()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term>;

        virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaTerm: void updateTextSize()>();

        return;

     label1:
        $r3 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.widgets.CustomEditText text>;

        $r4 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaBase formulaRoot>;

        $r5 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaList getFormulaList()>();

        $r6 = virtualinvoke $r5.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.widgets.ScaledDimensions getDimen()>();

        $i0 = r0.<com.mkulesh.micromath.formula.TermField: int termDepth>;

        $r1 = <com.mkulesh.micromath.widgets.ScaledDimensions$Type: com.mkulesh.micromath.widgets.ScaledDimensions$Type HOR_TEXT_PADDING>;

        virtualinvoke $r3.<com.mkulesh.micromath.widgets.CustomEditText: void updateTextSize(com.mkulesh.micromath.widgets.ScaledDimensions,int,com.mkulesh.micromath.widgets.ScaledDimensions$Type)>($r6, $i0, $r1);

        return;
    }
    public void writeToBundle(android.os.Bundle, java.lang.String)
    {
        com.mkulesh.micromath.formula.TermField r0;
        android.os.Bundle $r1;
        java.lang.String $r2, $r4, $r5;
        java.lang.StringBuilder $r3;
        int $i0;
        boolean $z0;
        com.mkulesh.micromath.formula.FormulaTerm $r6;
        android.os.Parcelable $r7;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 := @parameter0: android.os.Bundle;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_term_id");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: int getTermId()>();

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>($r4, $i0);

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isTerm()>();

        if $z0 != 0 goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_text");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isEmptyOrAutoContent()>();

        if $z0 == 0 goto label2;

        $r5 = "";

     label1:
        virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>($r4, $r5);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_code");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>($r2, "");

        return;

     label2:
        $r5 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: java.lang.String getText()>();

        goto label1;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_text");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>($r4, "");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_code");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term>;

        $r5 = virtualinvoke $r6.<com.mkulesh.micromath.formula.FormulaTerm: java.lang.String getTermCode()>();

        virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>($r4, $r5);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_instance");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term>;

        $r7 = virtualinvoke $r6.<com.mkulesh.micromath.formula.FormulaTerm: android.os.Parcelable onSaveInstanceState()>();

        virtualinvoke $r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>($r2, $r7);

        return;
    }
    public void writeToXml(org.xmlpull.v1.XmlSerializer) throws java.lang.Exception
    {
        com.mkulesh.micromath.formula.TermField r0;
        org.xmlpull.v1.XmlSerializer $r1;
        boolean $z0;
        java.lang.String $r2, $r3;
        com.mkulesh.micromath.formula.FormulaTerm $r4;

        r0 := @this: com.mkulesh.micromath.formula.TermField;

        $r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isTerm()>();

        if $z0 != 0 goto label3;

        $r2 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: boolean isEmptyOrAutoContent()>();

        if $z0 == 0 goto label2;

        $r3 = "";

     label1:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r2, "text", $r3);

        return;

     label2:
        $r3 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: java.lang.String getText()>();

        goto label1;

     label3:
        $r2 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

        $r4 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term>;

        $r3 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaTerm: java.lang.String getTermCode()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r2, "code", $r3);

        $r4 = r0.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm term>;

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.TermField: java.lang.String getTermKey()>();

        virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaTerm: void writeToXml(org.xmlpull.v1.XmlSerializer,java.lang.String)>($r1, $r2);

        return;
    }
