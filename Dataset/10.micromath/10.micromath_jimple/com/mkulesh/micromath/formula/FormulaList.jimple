com.mkulesh.micromath.formula.FormulaList extends java.lang.Object implements android.view.View$OnClickListener com.mkulesh.micromath.widgets.ListChangeIf com.mkulesh.micromath.properties.DocumentPropertiesChangeIf
private static final java.lang.String STATE_FORMULA_NUMBER
private static final java.lang.String STATE_FORMULA_STATE
private static final java.lang.String STATE_FORMULA_TYPE
private static final java.lang.String STATE_SELECTED_LINE
private static final java.lang.String STATE_UNDO_STATE
public static final java.lang.String XML_HTTP
public static final java.lang.String XML_LIST_TAG
public static final java.lang.String XML_MAIN_TAG
public static final java.lang.String XML_NS
public static final java.lang.String XML_PROP_CODE
public static final java.lang.String XML_PROP_INRIGHTOFPREVIOUS
public static final java.lang.String XML_PROP_KEY
public static final java.lang.String XML_PROP_MMT
public static final java.lang.String XML_PROP_TEXT
public static final java.lang.String XML_TERM_TAG
private final android.support.v7.app.AppCompatActivity activity
private final com.mkulesh.micromath.properties.DocumentProperties documentSettings
private final com.mkulesh.micromath.formula.FormulaListView formulaListView
private final com.mkulesh.micromath.widgets.TwoDScrollView formulaScrollView
private final java.util.HashMap formulas
private final com.mkulesh.micromath.BaseFragment fragment
private final com.mkulesh.micromath.formula.Palette palette
private final java.util.ArrayList selectedEquations
private int selectedFormulaId
private com.mkulesh.micromath.formula.FormulaBase selectedTerm
private com.mkulesh.micromath.ta.TestSession taSession
private final com.mkulesh.micromath.undo.UndoState undoState
private com.mkulesh.micromath.formula.XmlLoaderTask xmlLoaderTask
    static void <clinit>()
    {
        <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS> = null;

        return;
    }
    public void <init>(com.mkulesh.micromath.BaseFragment, android.view.View)
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        com.mkulesh.micromath.BaseFragment $r1;
        android.view.View $r2, $r8;
        java.util.ArrayList $r3;
        com.mkulesh.micromath.undo.UndoState $r4;
        java.util.HashMap $r5;
        android.support.v4.app.FragmentActivity $r6;
        android.support.v7.app.AppCompatActivity $r7;
        com.mkulesh.micromath.widgets.TwoDScrollView $r9;
        com.mkulesh.micromath.formula.FormulaListView $r10;
        android.widget.LinearLayout $r11;
        com.mkulesh.micromath.formula.Palette $r12;
        android.content.Context $r13;
        com.mkulesh.micromath.properties.DocumentProperties $r14;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r1 := @parameter0: com.mkulesh.micromath.BaseFragment;

        $r2 := @parameter1: android.view.View;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase selectedTerm> = null;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaList: java.util.ArrayList selectedEquations> = $r3;

        r0.<com.mkulesh.micromath.formula.FormulaList: int selectedFormulaId> = -1;

        r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.XmlLoaderTask xmlLoaderTask> = null;

        $r4 = new com.mkulesh.micromath.undo.UndoState;

        specialinvoke $r4.<com.mkulesh.micromath.undo.UndoState: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.undo.UndoState undoState> = $r4;

        r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.ta.TestSession taSession> = null;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<com.mkulesh.micromath.formula.FormulaList: java.util.HashMap formulas> = $r5;

        r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.BaseFragment fragment> = $r1;

        $r6 = virtualinvoke $r1.<com.mkulesh.micromath.BaseFragment: android.support.v4.app.FragmentActivity getActivity()>();

        $r7 = (android.support.v7.app.AppCompatActivity) $r6;

        r0.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity activity> = $r7;

        $r8 = virtualinvoke $r2.<android.view.View: android.view.View findViewById(int)>(2131492966);

        $r9 = (com.mkulesh.micromath.widgets.TwoDScrollView) $r8;

        r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.widgets.TwoDScrollView formulaScrollView> = $r9;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.widgets.TwoDScrollView formulaScrollView>;

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity activity>;

        virtualinvoke $r9.<com.mkulesh.micromath.widgets.TwoDScrollView: void setScaleListener(android.support.v7.app.AppCompatActivity,com.mkulesh.micromath.widgets.ListChangeIf)>($r7, r0);

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.widgets.TwoDScrollView formulaScrollView>;

        virtualinvoke $r9.<com.mkulesh.micromath.widgets.TwoDScrollView: void setSaveEnabled(boolean)>(0);

        $r10 = new com.mkulesh.micromath.formula.FormulaListView;

        $r6 = virtualinvoke $r1.<com.mkulesh.micromath.BaseFragment: android.support.v4.app.FragmentActivity getActivity()>();

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.widgets.TwoDScrollView formulaScrollView>;

        $r11 = virtualinvoke $r9.<com.mkulesh.micromath.widgets.TwoDScrollView: android.widget.LinearLayout getMainLayout()>();

        specialinvoke $r10.<com.mkulesh.micromath.formula.FormulaListView: void <init>(android.content.Context,android.widget.LinearLayout)>($r6, $r11);

        r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView formulaListView> = $r10;

        $r2 = virtualinvoke $r2.<android.view.View: android.view.View findViewById(int)>(2131492969);

        $r11 = (android.widget.LinearLayout) $r2;

        $r12 = new com.mkulesh.micromath.formula.Palette;

        $r13 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: android.content.Context getContext()>();

        specialinvoke $r12.<com.mkulesh.micromath.formula.Palette: void <init>(android.content.Context,android.widget.LinearLayout,com.mkulesh.micromath.widgets.ListChangeIf)>($r13, $r11, r0);

        r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.Palette palette> = $r12;

        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: void updatePalette()>();

        $r14 = new com.mkulesh.micromath.properties.DocumentProperties;

        $r13 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: android.content.Context getContext()>();

        specialinvoke $r14.<com.mkulesh.micromath.properties.DocumentProperties: void <init>(android.content.Context)>($r13);

        r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.properties.DocumentProperties documentSettings> = $r14;

        return;
    }
    private com.mkulesh.micromath.formula.FormulaBase createFormula(com.mkulesh.micromath.formula.FormulaBase$BaseType)
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        com.mkulesh.micromath.formula.FormulaBase$BaseType $r1;
        com.mkulesh.micromath.formula.FormulaBase r2;
        int $i0, $i1;
        int[] $r3;
        com.mkulesh.micromath.formula.Equation $r4;
        com.mkulesh.micromath.formula.FormulaResult $r5;
        com.mkulesh.micromath.plots.PlotFunction $r6;
        com.mkulesh.micromath.plots.PlotContour $r7;
        com.mkulesh.micromath.formula.TextFragment $r8;
        com.mkulesh.micromath.plots.ImageFragment $r9;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r1 := @parameter0: com.mkulesh.micromath.formula.FormulaBase$BaseType;

        r2 = null;

        $i0 = staticinvoke <com.mkulesh.micromath.utils.IdGenerator: int generateId()>();

        $r3 = <com.mkulesh.micromath.formula.FormulaList$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaBase$BaseType>;

        $i1 = virtualinvoke $r1.<com.mkulesh.micromath.formula.FormulaBase$BaseType: int ordinal()>();

        $i1 = $r3[$i1];

        lookupswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label7;
            default: goto label1;
        };

     label1:
        if r2 == null goto label8;

        virtualinvoke r2.<com.mkulesh.micromath.formula.FormulaBase: void setOnClickListener(android.view.View$OnClickListener)>(r0);

        return r2;

     label2:
        $r4 = new com.mkulesh.micromath.formula.Equation;

        r2 = $r4;

        specialinvoke $r4.<com.mkulesh.micromath.formula.Equation: void <init>(com.mkulesh.micromath.formula.FormulaList,int)>(r0, $i0);

        goto label1;

     label3:
        $r5 = new com.mkulesh.micromath.formula.FormulaResult;

        r2 = $r5;

        specialinvoke $r5.<com.mkulesh.micromath.formula.FormulaResult: void <init>(com.mkulesh.micromath.formula.FormulaList,int)>(r0, $i0);

        goto label1;

     label4:
        $r6 = new com.mkulesh.micromath.plots.PlotFunction;

        r2 = $r6;

        specialinvoke $r6.<com.mkulesh.micromath.plots.PlotFunction: void <init>(com.mkulesh.micromath.formula.FormulaList,int)>(r0, $i0);

        goto label1;

     label5:
        $r7 = new com.mkulesh.micromath.plots.PlotContour;

        r2 = $r7;

        specialinvoke $r7.<com.mkulesh.micromath.plots.PlotContour: void <init>(com.mkulesh.micromath.formula.FormulaList,int)>(r0, $i0);

        goto label1;

     label6:
        $r8 = new com.mkulesh.micromath.formula.TextFragment;

        r2 = $r8;

        specialinvoke $r8.<com.mkulesh.micromath.formula.TextFragment: void <init>(com.mkulesh.micromath.formula.FormulaList,int)>(r0, $i0);

        goto label1;

     label7:
        $r9 = new com.mkulesh.micromath.plots.ImageFragment;

        r2 = $r9;

        specialinvoke $r9.<com.mkulesh.micromath.plots.ImageFragment: void <init>(com.mkulesh.micromath.formula.FormulaList,int)>(r0, $i0);

        goto label1;

     label8:
        return r2;
    }
    private com.mkulesh.micromath.formula.FormulaBase getObjectManipulator(com.mkulesh.micromath.formula.FormulaList$Manipulator)
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        com.mkulesh.micromath.formula.FormulaList$Manipulator $r1, $r5;
        java.util.ArrayList $r2;
        int $i0;
        java.lang.Object $r3;
        com.mkulesh.micromath.formula.FormulaBase r4;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r1 := @parameter0: com.mkulesh.micromath.formula.FormulaList$Manipulator;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.ArrayList selectedEquations>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 != 1 goto label2;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.ArrayList selectedEquations>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r4 = (com.mkulesh.micromath.formula.FormulaBase) $r3;

        $r5 = <com.mkulesh.micromath.formula.FormulaList$Manipulator: com.mkulesh.micromath.formula.FormulaList$Manipulator PROPERTY>;

        if $r1 != $r5 goto label1;

        $z0 = virtualinvoke r4.<com.mkulesh.micromath.formula.FormulaBase: boolean enableObjectProperties()>();

        if $z0 == 0 goto label1;

        return r4;

     label1:
        $r5 = <com.mkulesh.micromath.formula.FormulaList$Manipulator: com.mkulesh.micromath.formula.FormulaList$Manipulator DETAILS>;

        if $r1 != $r5 goto label2;

        $z0 = virtualinvoke r4.<com.mkulesh.micromath.formula.FormulaBase: boolean enableDetails()>();

        if $z0 != 0 goto label3;

     label2:
        return null;

     label3:
        return r4;
    }
    private boolean isContentValid()
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        java.util.ArrayList r1, $r3;
        boolean z0, $z1;
        com.mkulesh.micromath.formula.FormulaListView $r2;
        java.util.Iterator $r4;
        java.lang.Object $r5;
        com.mkulesh.micromath.formula.FormulaBase r6;
        com.mkulesh.micromath.formula.FormulaBase$ValidationPassType $r7;
        int $i0;
        java.lang.Integer $r8;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        z0 = 1;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView formulaListView>;

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaListView: java.util.ArrayList getFormulas(java.lang.Class)>(class "Lcom/mkulesh/micromath/formula/FormulaBase;");

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.mkulesh.micromath.formula.FormulaBase) $r5;

        $r7 = <com.mkulesh.micromath.formula.FormulaBase$ValidationPassType: com.mkulesh.micromath.formula.FormulaBase$ValidationPassType VALIDATE_SINGLE_FORMULA>;

        $z1 = virtualinvoke r6.<com.mkulesh.micromath.formula.FormulaBase: boolean isContentValid(com.mkulesh.micromath.formula.FormulaBase$ValidationPassType)>($r7);

        if $z1 != 0 goto label1;

        $i0 = virtualinvoke r6.<com.mkulesh.micromath.formula.FormulaBase: int getId()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        z0 = 0;

        goto label1;

     label2:
        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.mkulesh.micromath.formula.FormulaBase) $r5;

        $i0 = virtualinvoke r6.<com.mkulesh.micromath.formula.FormulaBase: int getId()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $z1 = virtualinvoke r1.<java.util.ArrayList: boolean contains(java.lang.Object)>($r8);

        if $z1 != 0 goto label3;

        $r7 = <com.mkulesh.micromath.formula.FormulaBase$ValidationPassType: com.mkulesh.micromath.formula.FormulaBase$ValidationPassType VALIDATE_LINKS>;

        $z1 = virtualinvoke r6.<com.mkulesh.micromath.formula.FormulaBase: boolean isContentValid(com.mkulesh.micromath.formula.FormulaBase$ValidationPassType)>($r7);

        if $z1 != 0 goto label3;

        z0 = 0;

        goto label3;

     label4:
        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaList: void numbering()>();

        return z0;
    }
    private void numbering()
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        com.mkulesh.micromath.formula.FormulaListView $r1;
        java.util.ArrayList $r2;
        int[] $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        com.mkulesh.micromath.formula.TextFragment r6;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r1 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView formulaListView>;

        $r2 = virtualinvoke $r1.<com.mkulesh.micromath.formula.FormulaListView: java.util.ArrayList getFormulas(java.lang.Class)>(class "Lcom/mkulesh/micromath/formula/TextFragment;");

        $r3 = staticinvoke <com.mkulesh.micromath.properties.TextProperties: int[] getInitialNumber()>();

        $r4 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.mkulesh.micromath.formula.TextFragment) $r5;

        virtualinvoke r6.<com.mkulesh.micromath.formula.TextFragment: void numbering(int[])>($r3);

        goto label1;

     label2:
        return;
    }
    private com.mkulesh.micromath.formula.FormulaBase replace(com.mkulesh.micromath.formula.FormulaBase, com.mkulesh.micromath.formula.FormulaBase, com.mkulesh.micromath.formula.FormulaBase$BaseType, android.os.Parcelable)
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        com.mkulesh.micromath.formula.FormulaBase $r1, $r2, $r7;
        com.mkulesh.micromath.formula.FormulaBase$BaseType $r3;
        android.os.Parcelable $r4;
        java.util.HashMap $r5;
        int $i0;
        java.lang.Integer $r6;
        com.mkulesh.micromath.formula.FormulaListView $r8;
        boolean $z0;
        com.mkulesh.micromath.widgets.ListChangeIf$Position r9;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r1 := @parameter0: com.mkulesh.micromath.formula.FormulaBase;

        $r2 := @parameter1: com.mkulesh.micromath.formula.FormulaBase;

        $r3 := @parameter2: com.mkulesh.micromath.formula.FormulaBase$BaseType;

        $r4 := @parameter3: android.os.Parcelable;

        if $r4 != null goto label1;

        return null;

     label1:
        if $r1 == null goto label2;

        $r5 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.HashMap formulas>;

        $i0 = virtualinvoke $r1.<com.mkulesh.micromath.formula.FormulaBase: int getId()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r6);

     label2:
        $r7 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase createFormula(com.mkulesh.micromath.formula.FormulaBase$BaseType)>($r3);

        if $r7 == null goto label7;

        $r8 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView formulaListView>;

        $z0 = virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaListView: boolean replace(com.mkulesh.micromath.formula.FormulaBase,com.mkulesh.micromath.formula.FormulaBase)>($r1, $r7);

        if $z0 != 0 goto label6;

        virtualinvoke $r7.<com.mkulesh.micromath.formula.FormulaBase: void onRestoreInstanceState(android.os.Parcelable)>($r4);

        $z0 = virtualinvoke $r7.<com.mkulesh.micromath.formula.FormulaBase: boolean isInRightOfPrevious()>();

        if $z0 == 0 goto label5;

        r9 = <com.mkulesh.micromath.widgets.ListChangeIf$Position: com.mkulesh.micromath.widgets.ListChangeIf$Position RIGHT>;

     label3:
        $r8 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView formulaListView>;

        virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaListView: void add(com.mkulesh.micromath.formula.FormulaBase,com.mkulesh.micromath.formula.FormulaBase,com.mkulesh.micromath.widgets.ListChangeIf$Position)>($r7, $r2, r9);

     label4:
        virtualinvoke $r7.<com.mkulesh.micromath.formula.FormulaBase: void updateTextSize()>();

        $r5 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.HashMap formulas>;

        $i0 = virtualinvoke $r7.<com.mkulesh.micromath.formula.FormulaBase: int getId()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        return $r7;

     label5:
        r9 = <com.mkulesh.micromath.widgets.ListChangeIf$Position: com.mkulesh.micromath.widgets.ListChangeIf$Position AFTER>;

        goto label3;

     label6:
        $z0 = virtualinvoke $r7.<com.mkulesh.micromath.formula.FormulaBase: boolean isInRightOfPrevious()>();

        virtualinvoke $r7.<com.mkulesh.micromath.formula.FormulaBase: void onRestoreInstanceState(android.os.Parcelable)>($r4);

        virtualinvoke $r7.<com.mkulesh.micromath.formula.FormulaBase: void setInRightOfPrevious(boolean)>($z0);

        goto label4;

     label7:
        return $r7;
    }
    public com.mkulesh.micromath.formula.FormulaBase addBaseFormula(com.mkulesh.micromath.formula.FormulaBase$BaseType)
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        com.mkulesh.micromath.formula.FormulaBase$BaseType $r1;
        com.mkulesh.micromath.formula.FormulaBase $r2;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r1 := @parameter0: com.mkulesh.micromath.formula.FormulaBase$BaseType;

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase addBaseFormula(com.mkulesh.micromath.formula.FormulaBase$BaseType,android.os.Parcelable)>($r1, null);

        return $r2;
    }
    public com.mkulesh.micromath.formula.FormulaBase addBaseFormula(com.mkulesh.micromath.formula.FormulaBase$BaseType, android.os.Parcelable)
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        com.mkulesh.micromath.formula.FormulaBase$BaseType $r1;
        android.os.Parcelable $r2;
        java.util.HashMap $r3;
        com.mkulesh.micromath.formula.FormulaBase $r4;
        int $i0;
        java.lang.Integer $r5;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r1 := @parameter0: com.mkulesh.micromath.formula.FormulaBase$BaseType;

        $r2 := @parameter1: android.os.Parcelable;

        $r4 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase createFormula(com.mkulesh.micromath.formula.FormulaBase$BaseType)>($r1);

        if $r4 == null goto label1;

        virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaBase: void onRestoreInstanceState(android.os.Parcelable)>($r2);

        virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaBase: void updateTextSize()>();

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.HashMap formulas>;

        $i0 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaBase: int getId()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r4);

     label1:
        return $r4;
    }
    public void calculate()
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        com.mkulesh.micromath.formula.CalculaterTask r1;
        com.mkulesh.micromath.formula.FormulaListView $r2;
        java.util.ArrayList $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        com.mkulesh.micromath.formula.CalculationResult r6;
        java.lang.Void[] $r7;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView formulaListView>;

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaListView: java.util.ArrayList getFormulas(java.lang.Class)>(class "Lcom/mkulesh/micromath/formula/CalculationResult;");

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.mkulesh.micromath.formula.CalculationResult) $r5;

        virtualinvoke r6.<com.mkulesh.micromath.formula.CalculationResult: void invalidateResult()>();

        goto label1;

     label2:
        $z0 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaList: boolean isContentValid()>();

        if $z0 == 0 goto label3;

        r1 = new com.mkulesh.micromath.formula.CalculaterTask;

        specialinvoke r1.<com.mkulesh.micromath.formula.CalculaterTask: void <init>(com.mkulesh.micromath.formula.FormulaList,java.util.ArrayList)>(r0, $r3);

        $r7 = newarray (java.lang.Void)[0];

        staticinvoke <com.mkulesh.micromath.utils.CompatUtils: void executeAsyncTask(android.os.AsyncTask,java.lang.Object[])>(r1, $r7);

     label3:
        return;
    }
    public void callObjectManipulator(com.mkulesh.micromath.formula.FormulaList$Manipulator)
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        com.mkulesh.micromath.formula.FormulaList$Manipulator $r1, $r3;
        com.mkulesh.micromath.formula.FormulaBase $r2;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r1 := @parameter0: com.mkulesh.micromath.formula.FormulaList$Manipulator;

        $r2 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase getObjectManipulator(com.mkulesh.micromath.formula.FormulaList$Manipulator)>($r1);

        $r3 = <com.mkulesh.micromath.formula.FormulaList$Manipulator: com.mkulesh.micromath.formula.FormulaList$Manipulator PROPERTY>;

        if $r1 != $r3 goto label1;

        if $r2 == null goto label1;

        virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaBase: void onObjectProperties(android.view.View)>($r2);

     label1:
        $r3 = <com.mkulesh.micromath.formula.FormulaList$Manipulator: com.mkulesh.micromath.formula.FormulaList$Manipulator DETAILS>;

        if $r1 != $r3 goto label2;

        if $r2 == null goto label2;

        virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaBase: void onDetails(android.view.View)>($r2);

     label2:
        return;
    }
    public void clear()
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        com.mkulesh.micromath.widgets.ScaledDimensions $r1;
        com.mkulesh.micromath.formula.FormulaListView $r2;
        java.util.HashMap $r3;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        r0.<com.mkulesh.micromath.formula.FormulaList: int selectedFormulaId> = -1;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView formulaListView>;

        virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaListView: void clear()>();

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.HashMap formulas>;

        virtualinvoke $r3.<java.util.HashMap: void clear()>();

        $r1 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.widgets.ScaledDimensions getDimen()>();

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.ScaledDimensions: void reset()>();

        staticinvoke <com.mkulesh.micromath.utils.IdGenerator: void reset()>();

        return;
    }
    public void clearFocus()
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        com.mkulesh.micromath.formula.FormulaListView $r1;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r1 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView formulaListView>;

        virtualinvoke $r1.<com.mkulesh.micromath.formula.FormulaListView: void clearFocus()>();

        return;
    }
    public com.mkulesh.micromath.formula.FormulaBase deleteFormula(com.mkulesh.micromath.formula.FormulaBase, com.mkulesh.micromath.undo.DeleteState)
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        com.mkulesh.micromath.formula.FormulaBase $r1, $r6;
        com.mkulesh.micromath.undo.DeleteState $r2;
        com.mkulesh.micromath.formula.FormulaListView $r3;
        com.mkulesh.micromath.undo.Coordinate $r4;
        android.widget.LinearLayout $r5;
        int $i0, $i1;
        java.util.HashMap $r7;
        java.lang.Integer $r8;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r1 := @parameter0: com.mkulesh.micromath.formula.FormulaBase;

        $r2 := @parameter1: com.mkulesh.micromath.undo.DeleteState;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView formulaListView>;

        $r4 = virtualinvoke $r3.<com.mkulesh.micromath.formula.FormulaListView: com.mkulesh.micromath.undo.Coordinate getCoordinate(com.mkulesh.micromath.formula.FormulaBase)>($r1);

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView formulaListView>;

        $r5 = virtualinvoke $r3.<com.mkulesh.micromath.formula.FormulaListView: android.widget.LinearLayout getList()>();

        $i0 = virtualinvoke $r5.<android.widget.LinearLayout: int getChildCount()>();

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView formulaListView>;

        $r6 = virtualinvoke $r3.<com.mkulesh.micromath.formula.FormulaListView: com.mkulesh.micromath.formula.FormulaBase delete(com.mkulesh.micromath.formula.FormulaBase)>($r1);

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView formulaListView>;

        $r5 = virtualinvoke $r3.<com.mkulesh.micromath.formula.FormulaListView: android.widget.LinearLayout getList()>();

        $i1 = virtualinvoke $r5.<android.widget.LinearLayout: int getChildCount()>();

        if $i1 == $i0 goto label1;

        $r4.<com.mkulesh.micromath.undo.Coordinate: int col> = -1;

     label1:
        virtualinvoke $r2.<com.mkulesh.micromath.undo.DeleteState: void store(com.mkulesh.micromath.formula.FormulaBase,com.mkulesh.micromath.undo.Coordinate)>($r1, $r4);

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.HashMap formulas>;

        $i0 = virtualinvoke $r1.<com.mkulesh.micromath.formula.FormulaBase: int getId()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r8);

        return $r6;
    }
    public boolean deleteSelectedEquations()
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        com.mkulesh.micromath.undo.DeleteState r1;
        java.util.ArrayList $r2, $r4;
        boolean $z0, $z1;
        com.mkulesh.micromath.formula.FormulaListView $r3;
        int i0, $i1, $i2;
        java.lang.Object $r5;
        com.mkulesh.micromath.formula.FormulaBase r6;
        com.mkulesh.micromath.undo.UndoState $r7;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.ArrayList selectedEquations>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView formulaListView>;

        virtualinvoke $r3.<com.mkulesh.micromath.formula.FormulaListView: void clearFocus()>();

        i0 = -1;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView formulaListView>;

        $r2 = virtualinvoke $r3.<com.mkulesh.micromath.formula.FormulaListView: java.util.ArrayList getFormulas(java.lang.Class)>(class "Lcom/mkulesh/micromath/formula/FormulaBase;");

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.ArrayList selectedEquations>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i1 >= $i2 goto label3;

        $z0 = 0;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i1 = $i1 + -1;

     label2:
        if $i1 < 0 goto label3;

        $r5 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        r6 = (com.mkulesh.micromath.formula.FormulaBase) $r5;

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.ArrayList selectedEquations>;

        $z1 = virtualinvoke $r4.<java.util.ArrayList: boolean contains(java.lang.Object)>(r6);

        if $z1 == 0 goto label6;

        $z0 = 1;

        if i0 == -1 goto label7;

     label3:
        r1 = new com.mkulesh.micromath.undo.DeleteState;

        specialinvoke r1.<com.mkulesh.micromath.undo.DeleteState: void <init>()>();

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i1 = $i1 + -1;

     label4:
        if $i1 < 0 goto label8;

        $r5 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        r6 = (com.mkulesh.micromath.formula.FormulaBase) $r5;

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.ArrayList selectedEquations>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean contains(java.lang.Object)>(r6);

        if $z0 == 0 goto label5;

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.ArrayList selectedEquations>;

        virtualinvoke $r4.<java.util.ArrayList: boolean remove(java.lang.Object)>(r6);

        virtualinvoke $r2.<java.util.ArrayList: java.lang.Object remove(int)>($i1);

        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase deleteFormula(com.mkulesh.micromath.formula.FormulaBase,com.mkulesh.micromath.undo.DeleteState)>(r6, r1);

     label5:
        $i1 = $i1 + -1;

        goto label4;

     label6:
        i0 = virtualinvoke r6.<com.mkulesh.micromath.formula.FormulaBase: int getId()>();

        if $z0 != 0 goto label3;

     label7:
        $i1 = $i1 + -1;

        goto label2;

     label8:
        $r7 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.undo.UndoState getUndoState()>();

        virtualinvoke $r7.<com.mkulesh.micromath.undo.UndoState: void addEntry(android.os.Parcelable)>(r1);

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.ArrayList selectedEquations>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: void setSelectedFormula(int,boolean)>(i0, 0);

        return 1;
    }
    public void finishActiveActionMode()
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        android.support.v7.app.AppCompatActivity $r1;
        boolean $z0;
        com.mkulesh.micromath.MainActivity $r2;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r1 = r0.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity activity>;

        $z0 = $r1 instanceof com.mkulesh.micromath.MainActivity;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity activity>;

        $r2 = (com.mkulesh.micromath.MainActivity) $r1;

        virtualinvoke $r2.<com.mkulesh.micromath.MainActivity: void finishActiveActionMode()>();

     label1:
        return;
    }
    public android.support.v7.app.AppCompatActivity getActivity()
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        android.support.v7.app.AppCompatActivity r1;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        r1 = r0.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity activity>;

        return r1;
    }
    public android.content.Context getContext()
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        android.support.v7.app.AppCompatActivity r1;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        r1 = r0.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity activity>;

        return r1;
    }
    public com.mkulesh.micromath.widgets.ScaledDimensions getDimen()
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        com.mkulesh.micromath.widgets.ScaledDimensions $r1;
        com.mkulesh.micromath.properties.DocumentProperties $r2;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.properties.DocumentProperties documentSettings>;

        $r1 = virtualinvoke $r2.<com.mkulesh.micromath.properties.DocumentProperties: com.mkulesh.micromath.widgets.ScaledDimensions getScaledDimensions()>();

        return $r1;
    }
    public com.mkulesh.micromath.properties.DocumentProperties getDocumentSettings()
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        com.mkulesh.micromath.properties.DocumentProperties r1;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        r1 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.properties.DocumentProperties documentSettings>;

        return r1;
    }
    public int getEquationsNumber()
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        int $i0;
        java.util.HashMap $r1;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r1 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.HashMap formulas>;

        $i0 = virtualinvoke $r1.<java.util.HashMap: int size()>();

        return $i0;
    }
    public com.mkulesh.micromath.formula.FormulaBase getFormula(int)
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        int $i0;
        java.util.HashMap $r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        com.mkulesh.micromath.formula.FormulaBase $r4;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $i0 := @parameter0: int;

        $r1 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.HashMap formulas>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (com.mkulesh.micromath.formula.FormulaBase) $r3;

        return $r4;
    }
    public com.mkulesh.micromath.formula.FormulaBase getFormula(java.lang.String, int, int, boolean)
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        java.lang.String $r1;
        int $i0, $i1;
        boolean $z0, $z1;
        com.mkulesh.micromath.formula.FormulaListView $r2;
        com.mkulesh.micromath.properties.DocumentProperties $r3;
        com.mkulesh.micromath.formula.FormulaBase $r4;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView getFormulaListView()>();

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.properties.DocumentProperties documentSettings>;

        $z1 = $r3.<com.mkulesh.micromath.properties.DocumentProperties: boolean redefineAllowed>;

        if $z1 != 0 goto label3;

        $z1 = 1;

     label2:
        $r4 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaListView: com.mkulesh.micromath.formula.FormulaBase getFormula(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i1, $z0, $z1);

        return $r4;

     label3:
        $z1 = 0;

        goto label2;
    }
    public com.mkulesh.micromath.formula.FormulaListView getFormulaListView()
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        com.mkulesh.micromath.formula.FormulaListView r1;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        r1 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView formulaListView>;

        return r1;
    }
    public com.mkulesh.micromath.widgets.TwoDScrollView getFormulaScrollView()
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        com.mkulesh.micromath.widgets.TwoDScrollView r1;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        r1 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.widgets.TwoDScrollView formulaScrollView>;

        return r1;
    }
    public java.util.ArrayList getSelectedEquations()
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        java.util.ArrayList r1;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        r1 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.ArrayList selectedEquations>;

        return r1;
    }
    public int getSelectedFormulaId()
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        int i0;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        i0 = r0.<com.mkulesh.micromath.formula.FormulaList: int selectedFormulaId>;

        return i0;
    }
    public com.mkulesh.micromath.formula.FormulaBase getSelectedTerm()
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        com.mkulesh.micromath.formula.FormulaBase r1;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        r1 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase selectedTerm>;

        return r1;
    }
    public com.mkulesh.micromath.formula.StoredFormula getStoredFormula()
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        com.mkulesh.micromath.formula.StoredFormula $r1;
        android.support.v7.app.AppCompatActivity $r2;
        boolean $z0;
        com.mkulesh.micromath.MainActivity $r3;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity activity>;

        $z0 = $r2 instanceof com.mkulesh.micromath.MainActivity;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity activity>;

        $r3 = (com.mkulesh.micromath.MainActivity) $r2;

        $r1 = virtualinvoke $r3.<com.mkulesh.micromath.MainActivity: com.mkulesh.micromath.formula.StoredFormula getStoredFormula()>();

        return $r1;

     label1:
        return null;
    }
    public com.mkulesh.micromath.ta.TestSession getTaSession()
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        com.mkulesh.micromath.ta.TestSession r1;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        r1 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.ta.TestSession taSession>;

        return r1;
    }
    public com.mkulesh.micromath.undo.UndoState getUndoState()
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        com.mkulesh.micromath.undo.UndoState r1;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        r1 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.undo.UndoState undoState>;

        return r1;
    }
    public com.mkulesh.micromath.formula.XmlLoaderTask getXmlLoaderTask()
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        com.mkulesh.micromath.formula.XmlLoaderTask r1;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        r1 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.XmlLoaderTask xmlLoaderTask>;

        return r1;
    }
    public boolean isInOperation()
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        boolean $z0;
        com.mkulesh.micromath.BaseFragment $r1;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r1 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.BaseFragment fragment>;

        $z0 = virtualinvoke $r1.<com.mkulesh.micromath.BaseFragment: boolean isInOperation()>();

        return $z0;
    }
    public void onClick(android.view.View)
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        android.view.View $r1;
        java.util.HashMap $r2;
        java.util.Set $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.util.Map$Entry r6;
        com.mkulesh.micromath.formula.FormulaBase $r7;
        int $i0;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r1 := @parameter0: android.view.View;

        r0.<com.mkulesh.micromath.formula.FormulaList: int selectedFormulaId> = -1;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.HashMap formulas>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        if r6 != $r1 goto label1;

        $r5 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (com.mkulesh.micromath.formula.FormulaBase) $r5;

        $i0 = virtualinvoke $r7.<com.mkulesh.micromath.formula.FormulaBase: int getId()>();

        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: void setSelectedFormula(int,boolean)>($i0, 0);

     label2:
        return;
    }
    public boolean onCopyToClipboard()
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        java.util.ArrayList r1, r2, $r5;
        boolean $z0;
        android.content.Context $r3;
        com.mkulesh.micromath.formula.FormulaListView $r4;
        java.util.Iterator $r6;
        java.lang.Object $r7;
        com.mkulesh.micromath.formula.FormulaBase r8;
        com.mkulesh.micromath.formula.FormulaBase$BaseType $r9;
        android.os.Parcelable $r10;
        com.mkulesh.micromath.formula.StoredFormula $r11;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        r1 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.ArrayList selectedEquations>;

        $z0 = virtualinvoke r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: android.content.Context getContext()>();

        staticinvoke <com.mkulesh.micromath.utils.ClipboardManager: boolean copyToClipboard(android.content.Context,java.lang.String)>($r3, "content:com.mkulesh.micromath.list");

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView formulaListView>;

        $r5 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaListView: java.util.ArrayList getFormulas(java.lang.Class)>(class "Lcom/mkulesh/micromath/formula/FormulaBase;");

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.mkulesh.micromath.formula.FormulaBase) $r7;

        $r5 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.ArrayList selectedEquations>;

        $z0 = virtualinvoke $r5.<java.util.ArrayList: boolean contains(java.lang.Object)>(r8);

        if $z0 == 0 goto label2;

        $r9 = virtualinvoke r8.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaBase$BaseType getBaseType()>();

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        $r10 = virtualinvoke r8.<com.mkulesh.micromath.formula.FormulaBase: android.os.Parcelable onSaveInstanceState()>();

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        goto label2;

     label3:
        $r11 = new com.mkulesh.micromath.formula.StoredFormula;

        specialinvoke $r11.<com.mkulesh.micromath.formula.StoredFormula: void <init>(java.util.ArrayList,java.util.ArrayList)>(r2, r1);

        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: void setStoredFormula(com.mkulesh.micromath.formula.StoredFormula)>($r11);

        return 1;
    }
    public void onDiscardFormula(int)
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        int $i0;
        com.mkulesh.micromath.undo.DeleteState r1;
        boolean $z0;
        com.mkulesh.micromath.formula.FormulaBase $r2;
        com.mkulesh.micromath.formula.FormulaListView $r3;
        com.mkulesh.micromath.undo.UndoState $r4;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: boolean isInOperation()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase getFormula(int)>($i0);

        if $r2 == null goto label2;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView formulaListView>;

        virtualinvoke $r3.<com.mkulesh.micromath.formula.FormulaListView: void clearFocus()>();

        r1 = new com.mkulesh.micromath.undo.DeleteState;

        specialinvoke r1.<com.mkulesh.micromath.undo.DeleteState: void <init>()>();

        $r2 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase deleteFormula(com.mkulesh.micromath.formula.FormulaBase,com.mkulesh.micromath.undo.DeleteState)>($r2, r1);

        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.undo.UndoState getUndoState()>();

        virtualinvoke $r4.<com.mkulesh.micromath.undo.UndoState: void addEntry(android.os.Parcelable)>(r1);

        if $r2 == null goto label3;

        $i0 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaBase: int getId()>();

        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: void setSelectedFormula(int,boolean)>($i0, 0);

     label2:
        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: void onManualInput()>();

        return;

     label3:
        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: void setSelectedFormula(int,boolean)>(-1, 0);

        goto label2;
    }
    public void onDocumentPropertiesChange(boolean)
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        boolean $z0, $z1;
        com.mkulesh.micromath.properties.DocumentProperties $r1;
        java.util.HashMap $r2;
        java.util.Set $r3;
        java.util.Iterator $r4;
        java.lang.Object $r5;
        java.util.Map$Entry r6;
        com.mkulesh.micromath.formula.FormulaBase r7;
        com.mkulesh.micromath.formula.TextFragment r8;
        int $i0;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.properties.DocumentProperties documentSettings>;

        $z1 = $r1.<com.mkulesh.micromath.properties.DocumentProperties: boolean reformat>;

        if $z1 == 0 goto label2;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.HashMap formulas>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        r7 = (com.mkulesh.micromath.formula.FormulaBase) $r5;

        $z1 = r7 instanceof com.mkulesh.micromath.formula.TextFragment;

        if $z1 == 0 goto label1;

        r8 = (com.mkulesh.micromath.formula.TextFragment) r7;

        $r1 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.properties.DocumentProperties documentSettings>;

        $i0 = $r1.<com.mkulesh.micromath.properties.DocumentProperties: int textWidth>;

        virtualinvoke r8.<com.mkulesh.micromath.formula.TextFragment: void format(int)>($i0);

        goto label1;

     label2:
        if $z0 == 0 goto label3;

        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: void calculate()>();

     label3:
        return;
    }
    public void onManualInput()
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        boolean $z0;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: boolean isInOperation()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaList: boolean isContentValid()>();

        return;
    }
    public void onNewFormula(com.mkulesh.micromath.widgets.ListChangeIf$Position, com.mkulesh.micromath.widgets.ListChangeIf$FormulaType)
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        com.mkulesh.micromath.widgets.ListChangeIf$Position $r1;
        com.mkulesh.micromath.widgets.ListChangeIf$FormulaType $r2;
        int $i0, $i1;
        boolean $z0;
        com.mkulesh.micromath.formula.FormulaBase r3, $r11;
        int[] $r4;
        com.mkulesh.micromath.undo.UndoState $r5;
        com.mkulesh.micromath.undo.InsertState $r6;
        com.mkulesh.micromath.formula.FormulaListView $r7;
        java.util.HashMap $r8;
        java.lang.Integer $r9;
        java.lang.Object $r10;
        com.mkulesh.micromath.formula.FormulaBase$BaseType $r12;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r1 := @parameter0: com.mkulesh.micromath.widgets.ListChangeIf$Position;

        $r2 := @parameter1: com.mkulesh.micromath.widgets.ListChangeIf$FormulaType;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: boolean isInOperation()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        r3 = null;

        $r4 = <com.mkulesh.micromath.formula.FormulaList$1: int[] $SwitchMap$com$mkulesh$micromath$widgets$ListChangeIf$FormulaType>;

        $i0 = virtualinvoke $r2.<com.mkulesh.micromath.widgets.ListChangeIf$FormulaType: int ordinal()>();

        $i0 = $r4[$i0];

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label7;
            case 6: goto label8;
            default: goto label2;
        };

     label2:
        if r3 == null goto label9;

        $r5 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.undo.UndoState getUndoState()>();

        $r6 = new com.mkulesh.micromath.undo.InsertState;

        $i1 = virtualinvoke r3.<com.mkulesh.micromath.formula.FormulaBase: int getId()>();

        $i0 = r0.<com.mkulesh.micromath.formula.FormulaList: int selectedFormulaId>;

        specialinvoke $r6.<com.mkulesh.micromath.undo.InsertState: void <init>(int,int)>($i1, $i0);

        virtualinvoke $r5.<com.mkulesh.micromath.undo.UndoState: void addEntry(android.os.Parcelable)>($r6);

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView formulaListView>;

        $r8 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.HashMap formulas>;

        $i0 = r0.<com.mkulesh.micromath.formula.FormulaList: int selectedFormulaId>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r10 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r9);

        $r11 = (com.mkulesh.micromath.formula.FormulaBase) $r10;

        virtualinvoke $r7.<com.mkulesh.micromath.formula.FormulaListView: void add(com.mkulesh.micromath.formula.FormulaBase,com.mkulesh.micromath.formula.FormulaBase,com.mkulesh.micromath.widgets.ListChangeIf$Position)>(r3, $r11, $r1);

        $i0 = virtualinvoke r3.<com.mkulesh.micromath.formula.FormulaBase: int getId()>();

        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: void setSelectedFormula(int,boolean)>($i0, 1);

        virtualinvoke r3.<com.mkulesh.micromath.formula.FormulaBase: void onNewFormula()>();

        return;

     label3:
        $r12 = <com.mkulesh.micromath.formula.FormulaBase$BaseType: com.mkulesh.micromath.formula.FormulaBase$BaseType EQUATION>;

        r3 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase addBaseFormula(com.mkulesh.micromath.formula.FormulaBase$BaseType)>($r12);

        goto label2;

     label4:
        $r12 = <com.mkulesh.micromath.formula.FormulaBase$BaseType: com.mkulesh.micromath.formula.FormulaBase$BaseType RESULT>;

        r3 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase addBaseFormula(com.mkulesh.micromath.formula.FormulaBase$BaseType)>($r12);

        goto label2;

     label5:
        $r12 = <com.mkulesh.micromath.formula.FormulaBase$BaseType: com.mkulesh.micromath.formula.FormulaBase$BaseType PLOT_FUNCTION>;

        r3 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase addBaseFormula(com.mkulesh.micromath.formula.FormulaBase$BaseType)>($r12);

        goto label2;

     label6:
        $r12 = <com.mkulesh.micromath.formula.FormulaBase$BaseType: com.mkulesh.micromath.formula.FormulaBase$BaseType PLOT_CONTOUR>;

        r3 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase addBaseFormula(com.mkulesh.micromath.formula.FormulaBase$BaseType)>($r12);

        goto label2;

     label7:
        $r12 = <com.mkulesh.micromath.formula.FormulaBase$BaseType: com.mkulesh.micromath.formula.FormulaBase$BaseType TEXT_FRAGMENT>;

        r3 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase addBaseFormula(com.mkulesh.micromath.formula.FormulaBase$BaseType)>($r12);

        goto label2;

     label8:
        $r12 = <com.mkulesh.micromath.formula.FormulaBase$BaseType: com.mkulesh.micromath.formula.FormulaBase$BaseType IMAGE_FRAGMENT>;

        r3 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase addBaseFormula(com.mkulesh.micromath.formula.FormulaBase$BaseType)>($r12);

        goto label2;

     label9:
        return;
    }
    public void onPalettePressed(java.lang.String)
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        java.lang.String $r1, $r4;
        boolean $z0;
        com.mkulesh.micromath.widgets.ListChangeIf$FormulaType r2, $r5;
        java.util.Locale $r3;
        com.mkulesh.micromath.widgets.ListChangeIf$Position $r6;
        java.util.HashMap $r7;
        int $i0;
        java.lang.Integer $r8;
        java.lang.Object $r9;
        com.mkulesh.micromath.formula.FormulaBase r10;
        com.mkulesh.micromath.formula.TermField $r11;
        com.mkulesh.micromath.formula.FormulaTerm $r12;
        java.lang.Exception $r13;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: boolean isInOperation()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        r2 = null;

        $r3 = <java.util.Locale: java.util.Locale ENGLISH>;

     label2:
        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r3);

        $r5 = staticinvoke <com.mkulesh.micromath.widgets.ListChangeIf$FormulaType: com.mkulesh.micromath.widgets.ListChangeIf$FormulaType valueOf(java.lang.String)>($r4);

     label3:
        r2 = $r5;

     label4:
        if r2 == null goto label6;

        $r6 = <com.mkulesh.micromath.widgets.ListChangeIf$Position: com.mkulesh.micromath.widgets.ListChangeIf$Position AFTER>;

        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: void onNewFormula(com.mkulesh.micromath.widgets.ListChangeIf$Position,com.mkulesh.micromath.widgets.ListChangeIf$FormulaType)>($r6, r2);

     label5:
        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: void finishActiveActionMode()>();

        return;

     label6:
        $r7 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.HashMap formulas>;

        $i0 = r0.<com.mkulesh.micromath.formula.FormulaList: int selectedFormulaId>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r9 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r8);

        r10 = (com.mkulesh.micromath.formula.FormulaBase) $r9;

        if r10 == null goto label7;

        $r11 = virtualinvoke r10.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.TermField findFocusedTerm()>();

        if $r11 == null goto label7;

        $z0 = staticinvoke <com.mkulesh.micromath.utils.ClipboardManager: boolean isFormulaObject(java.lang.String)>($r1);

        if $z0 == 0 goto label8;

        $r12 = virtualinvoke $r11.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm getTerm()>();

        if $r12 == null goto label8;

        $r12 = virtualinvoke $r11.<com.mkulesh.micromath.formula.TermField: com.mkulesh.micromath.formula.FormulaTerm getTerm()>();

        virtualinvoke $r12.<com.mkulesh.micromath.formula.FormulaTerm: void onPasteFromClipboard(android.view.View,java.lang.String)>(null, $r1);

     label7:
        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: void onManualInput()>();

        goto label5;

     label8:
        virtualinvoke $r11.<com.mkulesh.micromath.formula.TermField: void addOperatorCode(java.lang.String)>($r1);

        goto label7;

     label9:
        $r13 := @caughtexception;

        goto label4;

        catch java.lang.Exception from label2 to label3 with label9;
    }
    public boolean onPasteFromClipboard(java.lang.String)
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        java.lang.String $r1;
        com.mkulesh.micromath.undo.ReplaceState r2;
        java.util.ArrayList $r3, $r13;
        boolean $z0;
        com.mkulesh.micromath.formula.StoredFormula $r4;
        com.mkulesh.micromath.formula.StoredFormula$StoredTerm[] $r5;
        com.mkulesh.micromath.formula.StoredFormula$ContentType $r6, $r7;
        int i0, i1, $i2;
        com.mkulesh.micromath.formula.FormulaBase r8, r12, $r17;
        com.mkulesh.micromath.formula.FormulaListView $r9;
        com.mkulesh.micromath.undo.UndoState $r10;
        java.lang.Object $r11;
        com.mkulesh.micromath.formula.StoredFormula$StoredTerm $r14;
        com.mkulesh.micromath.formula.FormulaBase$BaseType $r15;
        android.os.Parcelable $r16;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.ArrayList selectedEquations>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label10;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("content:com.mkulesh.micromath.list");

        if $z0 != 0 goto label01;

        return 0;

     label01:
        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.StoredFormula getStoredFormula()>();

        if $r4 == null goto label10;

        $r5 = virtualinvoke $r4.<com.mkulesh.micromath.formula.StoredFormula: com.mkulesh.micromath.formula.StoredFormula$StoredTerm[] getArrayData()>();

        $r6 = virtualinvoke $r4.<com.mkulesh.micromath.formula.StoredFormula: com.mkulesh.micromath.formula.StoredFormula$ContentType getContentType()>();

        $r7 = <com.mkulesh.micromath.formula.StoredFormula$ContentType: com.mkulesh.micromath.formula.StoredFormula$ContentType LIST>;

        if $r6 != $r7 goto label10;

        if $r5 == null goto label10;

        i0 = 0;

        r8 = null;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView formulaListView>;

        $r3 = virtualinvoke $r9.<com.mkulesh.micromath.formula.FormulaListView: java.util.ArrayList getFormulas(java.lang.Class)>(class "Lcom/mkulesh/micromath/formula/FormulaBase;");

        r2 = new com.mkulesh.micromath.undo.ReplaceState;

        specialinvoke r2.<com.mkulesh.micromath.undo.ReplaceState: void <init>()>();

        i1 = 0;

     label02:
        $i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i1 >= $i2 goto label03;

        $i2 = lengthof $r5;

        if i0 < $i2 goto label05;

     label03:
        $r10 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.undo.UndoState getUndoState()>();

        virtualinvoke $r10.<com.mkulesh.micromath.undo.UndoState: void addEntry(android.os.Parcelable)>(r2);

        if r8 == null goto label04;

        i0 = virtualinvoke r8.<com.mkulesh.micromath.formula.FormulaBase: int getId()>();

        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: void setSelectedFormula(int,boolean)>(i0, 0);

     label04:
        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: void onManualInput()>();

        return 1;

     label05:
        $r11 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r12 = (com.mkulesh.micromath.formula.FormulaBase) $r11;

        $r13 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.ArrayList selectedEquations>;

        $z0 = virtualinvoke $r13.<java.util.ArrayList: boolean contains(java.lang.Object)>(r12);

        if $z0 == 0 goto label09;

        $r14 = $r5[i0];

        $r15 = $r14.<com.mkulesh.micromath.formula.StoredFormula$StoredTerm: com.mkulesh.micromath.formula.FormulaBase$BaseType baseType>;

        $r14 = $r5[i0];

        $r16 = $r14.<com.mkulesh.micromath.formula.StoredFormula$StoredTerm: android.os.Parcelable data>;

        $r17 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase replace(com.mkulesh.micromath.formula.FormulaBase,com.mkulesh.micromath.formula.FormulaBase,com.mkulesh.micromath.formula.FormulaBase$BaseType,android.os.Parcelable)>(r12, null, $r15, $r16);

        r8 = $r17;

        if $r17 == null goto label06;

        $i2 = virtualinvoke $r17.<com.mkulesh.micromath.formula.FormulaBase: int getId()>();

        virtualinvoke r2.<com.mkulesh.micromath.undo.ReplaceState: void store(int,com.mkulesh.micromath.formula.FormulaBase)>($i2, r12);

     label06:
        $r13 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.ArrayList selectedEquations>;

        virtualinvoke $r13.<java.util.ArrayList: boolean remove(java.lang.Object)>(r12);

        i0 = i0 + 1;

        $r13 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.ArrayList selectedEquations>;

        $z0 = virtualinvoke $r13.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label09;

     label07:
        $i2 = lengthof $r5;

        if i0 >= $i2 goto label09;

        $r14 = $r5[i0];

        $r15 = $r14.<com.mkulesh.micromath.formula.StoredFormula$StoredTerm: com.mkulesh.micromath.formula.FormulaBase$BaseType baseType>;

        $r14 = $r5[i0];

        $r16 = $r14.<com.mkulesh.micromath.formula.StoredFormula$StoredTerm: android.os.Parcelable data>;

        r12 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase replace(com.mkulesh.micromath.formula.FormulaBase,com.mkulesh.micromath.formula.FormulaBase,com.mkulesh.micromath.formula.FormulaBase$BaseType,android.os.Parcelable)>(null, r8, $r15, $r16);

        r8 = r12;

        if r12 == null goto label08;

        $i2 = virtualinvoke r12.<com.mkulesh.micromath.formula.FormulaBase: int getId()>();

        virtualinvoke r2.<com.mkulesh.micromath.undo.ReplaceState: void store(int,com.mkulesh.micromath.formula.FormulaBase)>($i2, null);

     label08:
        i0 = i0 + 1;

        goto label07;

     label09:
        i1 = i1 + 1;

        goto label02;

     label10:
        return 0;
    }
    public void onScale(float)
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        float $f0;
        boolean $z0;
        com.mkulesh.micromath.widgets.ScaledDimensions $r1;
        java.util.HashMap $r2;
        java.util.Set $r3;
        java.util.Iterator $r4;
        java.lang.Object $r5;
        java.util.Map$Entry r6;
        com.mkulesh.micromath.formula.FormulaBase $r7;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $f0 := @parameter0: float;

        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: boolean isInOperation()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.widgets.ScaledDimensions getDimen()>();

        virtualinvoke $r1.<com.mkulesh.micromath.widgets.ScaledDimensions: void setScaleFactor(float)>($f0);

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.HashMap formulas>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (com.mkulesh.micromath.formula.FormulaBase) $r5;

        virtualinvoke $r7.<com.mkulesh.micromath.formula.FormulaBase: void updateTextSize()>();

        goto label2;

     label3:
        return;
    }
    public void readFromBundle(android.os.Bundle)
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        android.os.Bundle $r1;
        com.mkulesh.micromath.widgets.ListChangeIf$Position $r2;
        int $i0, $i1, i2;
        com.mkulesh.micromath.properties.DocumentProperties $r3;
        com.mkulesh.micromath.formula.FormulaBase r4, $r9;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        com.mkulesh.micromath.formula.FormulaBase$BaseType $r7;
        android.os.Parcelable $r8;
        com.mkulesh.micromath.formula.FormulaListView $r10;
        com.mkulesh.micromath.undo.UndoState $r11;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r1 := @parameter0: android.os.Bundle;

        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: void clear()>();

        <com.mkulesh.micromath.utils.IdGenerator: boolean enableIdRestore> = 1;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>("formula_number", 0);

        $i1 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>("selected_line", 0);

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.properties.DocumentProperties documentSettings>;

        virtualinvoke $r3.<com.mkulesh.micromath.properties.DocumentProperties: void readFromBundle(android.os.Bundle)>($r1);

        r4 = null;

        i2 = 0;

     label1:
        if i2 >= $i0 goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("formula_type_");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>($r6);

        $r7 = staticinvoke <com.mkulesh.micromath.formula.FormulaBase$BaseType: com.mkulesh.micromath.formula.FormulaBase$BaseType valueOf(java.lang.String)>($r6);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("formula_state_");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke $r1.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>($r6);

        $r9 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase addBaseFormula(com.mkulesh.micromath.formula.FormulaBase$BaseType,android.os.Parcelable)>($r7, $r8);

        $r10 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView formulaListView>;

        $r2 = <com.mkulesh.micromath.widgets.ListChangeIf$Position: com.mkulesh.micromath.widgets.ListChangeIf$Position AFTER>;

        virtualinvoke $r10.<com.mkulesh.micromath.formula.FormulaListView: void add(com.mkulesh.micromath.formula.FormulaBase,com.mkulesh.micromath.formula.FormulaBase,com.mkulesh.micromath.widgets.ListChangeIf$Position)>($r9, null, $r2);

        if $i1 != i2 goto label2;

        r4 = $r9;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        if r4 == null goto label4;

        $i0 = virtualinvoke r4.<com.mkulesh.micromath.formula.FormulaBase: int getId()>();

        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: void setSelectedFormula(int,boolean)>($i0, 0);

     label4:
        $r11 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.undo.UndoState undoState>;

        $r8 = virtualinvoke $r1.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("undo_state");

        virtualinvoke $r11.<com.mkulesh.micromath.undo.UndoState: void onRestoreInstanceState(android.os.Parcelable)>($r8);

        <com.mkulesh.micromath.utils.IdGenerator: boolean enableIdRestore> = 0;

        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaList: boolean isContentValid()>();

        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: void updatePalette()>();

        return;
    }
    public boolean readFromFile(android.net.Uri)
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        android.net.Uri $r1;
        com.mkulesh.micromath.formula.XmlLoaderTask$PostAction $r2;
        android.support.v7.app.AppCompatActivity $r3;
        java.io.InputStream $r4;
        java.lang.String $r5;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r1 := @parameter0: android.net.Uri;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity activity>;

        $r4 = staticinvoke <com.mkulesh.micromath.fman.FileUtils: java.io.InputStream getInputStream(android.content.Context,android.net.Uri)>($r3, $r1);

        if $r4 == null goto label1;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity activity>;

        $r5 = staticinvoke <com.mkulesh.micromath.fman.FileUtils: java.lang.String getFileName(android.content.Context,android.net.Uri)>($r3, $r1);

        $r2 = <com.mkulesh.micromath.formula.XmlLoaderTask$PostAction: com.mkulesh.micromath.formula.XmlLoaderTask$PostAction NONE>;

        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: void readFromStream(java.io.InputStream,java.lang.String,com.mkulesh.micromath.formula.XmlLoaderTask$PostAction)>($r4, $r5, $r2);

        return 1;

     label1:
        return 0;
    }
    public void readFromResource(android.net.Uri, com.mkulesh.micromath.formula.XmlLoaderTask$PostAction)
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        android.net.Uri $r1;
        com.mkulesh.micromath.formula.XmlLoaderTask$PostAction $r2;
        java.util.HashMap $r3;
        boolean $z0;
        android.support.v7.app.AppCompatActivity $r4;
        java.io.InputStream $r5;
        java.lang.String $r6;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: com.mkulesh.micromath.formula.XmlLoaderTask$PostAction;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.HashMap formulas>;

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = r0.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity activity>;

        $r5 = staticinvoke <com.mkulesh.micromath.fman.FileUtils: java.io.InputStream getInputStream(android.content.Context,android.net.Uri)>($r4, $r1);

        if $r5 == null goto label2;

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity activity>;

        $r6 = staticinvoke <com.mkulesh.micromath.fman.FileUtils: java.lang.String getFileName(android.content.Context,android.net.Uri)>($r4, $r1);

        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: void readFromStream(java.io.InputStream,java.lang.String,com.mkulesh.micromath.formula.XmlLoaderTask$PostAction)>($r5, $r6, $r2);

     label2:
        return;
    }
    public void readFromStream(java.io.InputStream, java.lang.String, com.mkulesh.micromath.formula.XmlLoaderTask$PostAction)
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        java.io.InputStream $r1;
        java.lang.String $r2;
        com.mkulesh.micromath.formula.XmlLoaderTask$PostAction $r3;
        com.mkulesh.micromath.formula.XmlLoaderTask $r4;
        java.lang.StringBuilder $r5;
        com.mkulesh.micromath.undo.UndoState $r6;
        java.lang.Void[] $r7;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.mkulesh.micromath.formula.XmlLoaderTask$PostAction;

        $r4 = new com.mkulesh.micromath.formula.XmlLoaderTask;

        specialinvoke $r4.<com.mkulesh.micromath.formula.XmlLoaderTask: void <init>(com.mkulesh.micromath.formula.FormulaList,java.io.InputStream,java.lang.String,com.mkulesh.micromath.formula.XmlLoaderTask$PostAction)>(r0, $r1, $r2, $r3);

        r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.XmlLoaderTask xmlLoaderTask> = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("started XML loader task: ");

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.XmlLoaderTask xmlLoaderTask>;

        $r2 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.mkulesh.micromath.utils.ViewUtils: void Debug(java.lang.Object,java.lang.String)>(r0, $r2);

        $r6 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.undo.UndoState getUndoState()>();

        virtualinvoke $r6.<com.mkulesh.micromath.undo.UndoState: void clear()>();

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.XmlLoaderTask xmlLoaderTask>;

        $r7 = newarray (java.lang.Void)[0];

        staticinvoke <com.mkulesh.micromath.utils.CompatUtils: void executeAsyncTask(android.os.AsyncTask,java.lang.Object[])>($r4, $r7);

        return;
    }
    public void selectAll()
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        java.util.HashMap $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.util.Map$Entry r5;
        java.util.ArrayList $r6;
        com.mkulesh.micromath.formula.FormulaBase $r7;
        com.mkulesh.micromath.BaseFragment $r8;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r1 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.HashMap formulas>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.ArrayList selectedEquations>;

        $r4 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z0 = virtualinvoke $r6.<java.util.ArrayList: boolean contains(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $r4 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (com.mkulesh.micromath.formula.FormulaBase) $r4;

        virtualinvoke $r7.<com.mkulesh.micromath.formula.FormulaBase: void onTermSelection(android.view.View,boolean,java.util.ArrayList)>(null, 1, null);

        goto label1;

     label2:
        $r8 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.BaseFragment fragment>;

        virtualinvoke $r8.<com.mkulesh.micromath.BaseFragment: void updateModeTitle()>();

        return;
    }
    public void selectEquation(com.mkulesh.micromath.formula.FormulaList$SelectionMode, com.mkulesh.micromath.formula.FormulaBase)
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        com.mkulesh.micromath.formula.FormulaList$SelectionMode $r1;
        com.mkulesh.micromath.formula.FormulaBase $r2;
        java.util.ArrayList r3, $r6;
        int[] $r4;
        int $i0;
        com.mkulesh.micromath.BaseFragment $r5;
        boolean $z0;
        java.util.Iterator $r7;
        java.lang.Object $r8;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r1 := @parameter0: com.mkulesh.micromath.formula.FormulaList$SelectionMode;

        $r2 := @parameter1: com.mkulesh.micromath.formula.FormulaBase;

        $r4 = <com.mkulesh.micromath.formula.FormulaList$1: int[] $SwitchMap$com$mkulesh$micromath$formula$FormulaList$SelectionMode>;

        $i0 = virtualinvoke $r1.<com.mkulesh.micromath.formula.FormulaList$SelectionMode: int ordinal()>();

        $i0 = $r4[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label1;
        };

     label1:
        $r5 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.BaseFragment fragment>;

        virtualinvoke $r5.<com.mkulesh.micromath.BaseFragment: void updateModeTitle()>();

        return;

     label2:
        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaBase: boolean isRootFormula()>();

        if $z0 == 0 goto label1;

        r3 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.ArrayList selectedEquations>;

        $z0 = virtualinvoke r3.<java.util.ArrayList: boolean contains(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        r3 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.ArrayList selectedEquations>;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        goto label1;

     label3:
        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaBase: boolean isRootFormula()>();

        if $z0 == 0 goto label1;

        r3 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.ArrayList selectedEquations>;

        $z0 = virtualinvoke r3.<java.util.ArrayList: boolean contains(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        r3 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.ArrayList selectedEquations>;

        virtualinvoke r3.<java.util.ArrayList: boolean remove(java.lang.Object)>($r2);

        goto label1;

     label4:
        r3 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.ArrayList selectedEquations>;

        $z0 = virtualinvoke r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label8;

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        $r6 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.ArrayList selectedEquations>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (com.mkulesh.micromath.formula.FormulaBase) $r8;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        goto label5;

     label6:
        $r6 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.ArrayList selectedEquations>;

        virtualinvoke $r6.<java.util.ArrayList: void clear()>();

        $r7 = virtualinvoke r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label7:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (com.mkulesh.micromath.formula.FormulaBase) $r8;

        virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaBase: void onTermSelection(android.view.View,boolean,java.util.ArrayList)>(null, 0, null);

        goto label7;

     label8:
        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: void setSelectedTerm(com.mkulesh.micromath.formula.FormulaBase)>(null);

        goto label1;
    }
    public void setInOperation(android.os.AsyncTask, boolean, android.view.View$OnClickListener)
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        android.os.AsyncTask $r1;
        boolean $z0, $z1, $z2;
        android.view.View$OnClickListener $r2;
        com.mkulesh.micromath.BaseFragment $r3;
        com.mkulesh.micromath.formula.FormulaListView $r4;
        com.mkulesh.micromath.formula.Palette $r5;
        com.mkulesh.micromath.formula.XmlLoaderTask r6;
        java.lang.String $r7;
        android.support.v7.app.AppCompatActivity $r8;
        android.widget.Toast $r9;
        java.lang.StringBuilder $r10;
        com.mkulesh.micromath.ta.TestSession $r11;
        com.mkulesh.micromath.formula.XmlLoaderTask$PostAction $r12, $r13;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r1 := @parameter0: android.os.AsyncTask;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: android.view.View$OnClickListener;

        $z1 = 0;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.BaseFragment fragment>;

        virtualinvoke $r3.<com.mkulesh.micromath.BaseFragment: void setInOperation(boolean,android.view.View$OnClickListener)>($z0, $r2);

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView formulaListView>;

        if $z0 != 0 goto label07;

        $z2 = 1;

     label01:
        virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaListView: void setEnabled(boolean)>($z2);

        $r5 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.Palette palette>;

        if $z0 != 0 goto label08;

        $z2 = 1;

     label02:
        virtualinvoke $r5.<com.mkulesh.micromath.formula.Palette: void setEnabled(boolean)>($z2);

        if $z0 != 0 goto label06;

        $z2 = $r1 instanceof com.mkulesh.micromath.formula.XmlLoaderTask;

        if $z2 == 0 goto label06;

        r6 = (com.mkulesh.micromath.formula.XmlLoaderTask) $r1;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.BaseFragment fragment>;

        $r7 = r6.<com.mkulesh.micromath.formula.XmlLoaderTask: java.lang.String error>;

        if $r7 != null goto label03;

        $z1 = 1;

     label03:
        virtualinvoke $r3.<com.mkulesh.micromath.BaseFragment: void setXmlReadingResult(boolean)>($z1);

        $r7 = r6.<com.mkulesh.micromath.formula.XmlLoaderTask: java.lang.String error>;

        if $r7 == null goto label09;

        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaList: boolean isContentValid()>();

        $r8 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity getActivity()>();

        $r7 = r6.<com.mkulesh.micromath.formula.XmlLoaderTask: java.lang.String error>;

        $r9 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r8, $r7, 1);

        virtualinvoke $r9.<android.widget.Toast: void show()>();

     label04:
        r6 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.XmlLoaderTask xmlLoaderTask>;

        if r6 == null goto label05;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("terminated XML loader task: ");

        r6 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.XmlLoaderTask xmlLoaderTask>;

        $r7 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.mkulesh.micromath.utils.ViewUtils: void Debug(java.lang.Object,java.lang.String)>(r0, $r7);

        r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.XmlLoaderTask xmlLoaderTask> = null;

     label05:
        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: void updatePalette()>();

     label06:
        $r11 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.ta.TestSession taSession>;

        if $r11 == null goto label11;

        $r11 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.ta.TestSession taSession>;

        virtualinvoke $r11.<com.mkulesh.micromath.ta.TestSession: void setInOperation(android.os.AsyncTask,boolean)>($r1, $z0);

        return;

     label07:
        $z2 = 0;

        goto label01;

     label08:
        $z2 = 0;

        goto label02;

     label09:
        $r12 = r6.<com.mkulesh.micromath.formula.XmlLoaderTask: com.mkulesh.micromath.formula.XmlLoaderTask$PostAction postAction>;

        $r13 = <com.mkulesh.micromath.formula.XmlLoaderTask$PostAction: com.mkulesh.micromath.formula.XmlLoaderTask$PostAction CALCULATE>;

        if $r12 != $r13 goto label10;

        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: void calculate()>();

        goto label04;

     label10:
        $r12 = r6.<com.mkulesh.micromath.formula.XmlLoaderTask: com.mkulesh.micromath.formula.XmlLoaderTask$PostAction postAction>;

        $r13 = <com.mkulesh.micromath.formula.XmlLoaderTask$PostAction: com.mkulesh.micromath.formula.XmlLoaderTask$PostAction INTERRUPT>;

        if $r12 == $r13 goto label04;

        specialinvoke r0.<com.mkulesh.micromath.formula.FormulaList: boolean isContentValid()>();

        goto label04;

     label11:
        return;
    }
    public void setObjectManipulator()
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        boolean $z0, $z1;
        com.mkulesh.micromath.BaseFragment $r1;
        com.mkulesh.micromath.formula.FormulaList$Manipulator $r2;
        com.mkulesh.micromath.formula.FormulaBase $r3;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $z0 = 1;

        $r1 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.BaseFragment fragment>;

        $r2 = <com.mkulesh.micromath.formula.FormulaList$Manipulator: com.mkulesh.micromath.formula.FormulaList$Manipulator PROPERTY>;

        $r3 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase getObjectManipulator(com.mkulesh.micromath.formula.FormulaList$Manipulator)>($r2);

        if $r3 == null goto label3;

        $z1 = 1;

     label1:
        virtualinvoke $r1.<com.mkulesh.micromath.BaseFragment: void enableObjectPropertiesButton(boolean)>($z1);

        $r1 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.BaseFragment fragment>;

        $r2 = <com.mkulesh.micromath.formula.FormulaList$Manipulator: com.mkulesh.micromath.formula.FormulaList$Manipulator DETAILS>;

        $r3 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase getObjectManipulator(com.mkulesh.micromath.formula.FormulaList$Manipulator)>($r2);

        if $r3 == null goto label4;

     label2:
        virtualinvoke $r1.<com.mkulesh.micromath.BaseFragment: void enableObjectDetailsButton(boolean)>($z0);

        return;

     label3:
        $z1 = 0;

        goto label1;

     label4:
        $z0 = 0;

        goto label2;
    }
    public void setSelectedFormula(int, boolean)
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        int $i0, $i1;
        boolean $z0, $z1;
        java.util.HashMap $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        java.util.Map$Entry r5;
        com.mkulesh.micromath.formula.FormulaBase r6;
        com.mkulesh.micromath.formula.FormulaBase$FocusType $r7;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $i1 = r0.<com.mkulesh.micromath.formula.FormulaList: int selectedFormulaId>;

        if $i1 != $i0 goto label1;

        if $i0 == -1 goto label1;

        return;

     label1:
        r0.<com.mkulesh.micromath.formula.FormulaList: int selectedFormulaId> = $i0;

        $r1 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.HashMap formulas>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        r6 = (com.mkulesh.micromath.formula.FormulaBase) $r4;

        $i1 = virtualinvoke r6.<com.mkulesh.micromath.formula.FormulaBase: int getId()>();

        $i0 = r0.<com.mkulesh.micromath.formula.FormulaList: int selectedFormulaId>;

        if $i1 != $i0 goto label3;

        virtualinvoke r6.<com.mkulesh.micromath.formula.FormulaBase: void setSelected(boolean)>(1);

        if $z0 == 0 goto label2;

        $r7 = <com.mkulesh.micromath.formula.FormulaBase$FocusType: com.mkulesh.micromath.formula.FormulaBase$FocusType FIRST_EDITABLE>;

        virtualinvoke r6.<com.mkulesh.micromath.formula.FormulaBase: boolean setEditableFocus(com.mkulesh.micromath.formula.FormulaBase$FocusType)>($r7);

        goto label2;

     label3:
        virtualinvoke r6.<com.mkulesh.micromath.formula.FormulaBase: void setSelected(boolean)>(0);

        goto label2;

     label4:
        return;
    }
    public void setSelectedTerm(com.mkulesh.micromath.formula.FormulaBase)
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        boolean $z0;
        com.mkulesh.micromath.formula.FormulaBase r1;
        java.util.ArrayList $r2;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        r1 := @parameter0: com.mkulesh.micromath.formula.FormulaBase;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.ArrayList selectedEquations>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase selectedTerm> = r1;

        return;

     label2:
        r1 = null;

        goto label1;
    }
    public void setStoredFormula(com.mkulesh.micromath.formula.StoredFormula)
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        com.mkulesh.micromath.formula.StoredFormula $r1;
        android.support.v7.app.AppCompatActivity $r2;
        boolean $z0;
        com.mkulesh.micromath.MainActivity $r3;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r1 := @parameter0: com.mkulesh.micromath.formula.StoredFormula;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity activity>;

        $z0 = $r2 instanceof com.mkulesh.micromath.MainActivity;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity activity>;

        $r3 = (com.mkulesh.micromath.MainActivity) $r2;

        virtualinvoke $r3.<com.mkulesh.micromath.MainActivity: void setStoredFormula(com.mkulesh.micromath.formula.StoredFormula)>($r1);

     label1:
        return;
    }
    public void setTaSession(com.mkulesh.micromath.ta.TestSession)
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        com.mkulesh.micromath.ta.TestSession $r1;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r1 := @parameter0: com.mkulesh.micromath.ta.TestSession;

        r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.ta.TestSession taSession> = $r1;

        return;
    }
    public void showSoftKeyboard(boolean)
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        boolean $z0, $z1;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.view.inputmethod.InputMethodManager r3;
        com.mkulesh.micromath.formula.FormulaListView $r4;
        android.widget.LinearLayout $r5;
        android.os.IBinder $r6;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: android.content.Context getContext()>();

        $z1 = staticinvoke <com.mkulesh.micromath.utils.ViewUtils: boolean isHardwareKeyboardAvailable(android.content.Context)>($r1);

        if $z1 == 0 goto label1;

        return;

     label1:
        $r1 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("input_method");

        r3 = (android.view.inputmethod.InputMethodManager) $r2;

        if $z0 == 0 goto label2;

        virtualinvoke r3.<android.view.inputmethod.InputMethodManager: void toggleSoftInput(int,int)>(2, 1);

        return;

     label2:
        staticinvoke <com.mkulesh.micromath.utils.ViewUtils: void Debug(java.lang.Object,java.lang.String)>(r0, "request to hide keyboard");

        $r4 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView formulaListView>;

        $r5 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaListView: android.widget.LinearLayout getList()>();

        $r6 = virtualinvoke $r5.<android.widget.LinearLayout: android.os.IBinder getWindowToken()>();

        virtualinvoke r3.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r6, 0);

        return;
    }
    public void stopXmlLoaderTask()
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        com.mkulesh.micromath.formula.XmlLoaderTask $r1;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r1 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.XmlLoaderTask xmlLoaderTask>;

        if $r1 == null goto label1;

        $r1 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.XmlLoaderTask xmlLoaderTask>;

        virtualinvoke $r1.<com.mkulesh.micromath.formula.XmlLoaderTask: void abort()>();

     label1:
        return;
    }
    public void undo()
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        android.os.Parcelable $r1;
        com.mkulesh.micromath.undo.UndoState $r2;
        boolean $z0;
        com.mkulesh.micromath.undo.FormulaState r3;
        int $i0, $i1;
        com.mkulesh.micromath.formula.FormulaBase $r4;
        com.mkulesh.micromath.formula.TermField $r5;
        com.mkulesh.micromath.undo.InsertState r6;
        java.util.HashMap $r7;
        java.lang.Integer $r8;
        com.mkulesh.micromath.formula.FormulaListView $r9;
        com.mkulesh.micromath.undo.DeleteState r10;
        java.util.ArrayList $r11;
        java.util.Iterator $r12;
        java.lang.Object $r13;
        com.mkulesh.micromath.undo.DeleteState$EntryState r14;
        com.mkulesh.micromath.formula.FormulaBase$BaseType $r15;
        com.mkulesh.micromath.undo.Coordinate $r16;
        com.mkulesh.micromath.undo.ReplaceState r17;
        com.mkulesh.micromath.undo.ReplaceState$EntryState r18;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.undo.UndoState undoState>;

        $r1 = virtualinvoke $r2.<com.mkulesh.micromath.undo.UndoState: android.os.Parcelable resumeLastEntry()>();

        if $r1 != null goto label01;

        return;

     label01:
        <com.mkulesh.micromath.utils.IdGenerator: boolean enableIdRestore> = 1;

        $z0 = $r1 instanceof com.mkulesh.micromath.undo.FormulaState;

        if $z0 == 0 goto label04;

        r3 = (com.mkulesh.micromath.undo.FormulaState) $r1;

        if r3 == null goto label02;

        $i0 = r3.<com.mkulesh.micromath.undo.FormulaState: int formulaId>;

        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase getFormula(int)>($i0);

        if $r4 == null goto label03;

        $i0 = r3.<com.mkulesh.micromath.undo.FormulaState: int termId>;

        if $i0 == -1 goto label03;

        $i0 = r3.<com.mkulesh.micromath.undo.FormulaState: int termId>;

        $r5 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.TermField findTermWithId(int)>($i0);

        if $r5 == null goto label02;

        virtualinvoke $r5.<com.mkulesh.micromath.formula.TermField: void undo(com.mkulesh.micromath.undo.FormulaState)>(r3);

     label02:
        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: void onManualInput()>();

        <com.mkulesh.micromath.utils.IdGenerator: boolean enableIdRestore> = 0;

        return;

     label03:
        if $r4 == null goto label02;

        $i0 = r3.<com.mkulesh.micromath.undo.FormulaState: int termId>;

        if $i0 != -1 goto label02;

        virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaBase: void undo(com.mkulesh.micromath.undo.FormulaState)>(r3);

        goto label02;

     label04:
        $z0 = $r1 instanceof com.mkulesh.micromath.undo.InsertState;

        if $z0 == 0 goto label06;

        r6 = (com.mkulesh.micromath.undo.InsertState) $r1;

        if r6 == null goto label02;

        $i0 = r6.<com.mkulesh.micromath.undo.InsertState: int formulaId>;

        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase getFormula(int)>($i0);

        if $r4 == null goto label05;

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.HashMap formulas>;

        $i0 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaBase: int getId()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r8);

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView formulaListView>;

        virtualinvoke $r9.<com.mkulesh.micromath.formula.FormulaListView: com.mkulesh.micromath.formula.FormulaBase delete(com.mkulesh.micromath.formula.FormulaBase)>($r4);

     label05:
        $i0 = r6.<com.mkulesh.micromath.undo.InsertState: int selectedId>;

        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: void setSelectedFormula(int,boolean)>($i0, 0);

        goto label02;

     label06:
        $z0 = $r1 instanceof com.mkulesh.micromath.undo.DeleteState;

        if $z0 == 0 goto label08;

        r10 = (com.mkulesh.micromath.undo.DeleteState) $r1;

        $r11 = virtualinvoke r10.<com.mkulesh.micromath.undo.DeleteState: java.util.ArrayList getEntries()>();

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (com.mkulesh.micromath.undo.DeleteState$EntryState) $r13;

        $r15 = r14.<com.mkulesh.micromath.undo.DeleteState$EntryState: com.mkulesh.micromath.formula.FormulaBase$BaseType type>;

        $r1 = r14.<com.mkulesh.micromath.undo.DeleteState$EntryState: android.os.Parcelable data>;

        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase addBaseFormula(com.mkulesh.micromath.formula.FormulaBase$BaseType,android.os.Parcelable)>($r15, $r1);

        if $r4 == null goto label07;

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView formulaListView>;

        $r16 = r14.<com.mkulesh.micromath.undo.DeleteState$EntryState: com.mkulesh.micromath.undo.Coordinate coordinate>;

        virtualinvoke $r9.<com.mkulesh.micromath.formula.FormulaListView: void add(com.mkulesh.micromath.formula.FormulaBase,com.mkulesh.micromath.undo.Coordinate)>($r4, $r16);

        $i0 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaBase: int getId()>();

        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: void setSelectedFormula(int,boolean)>($i0, 0);

        goto label07;

     label08:
        $z0 = $r1 instanceof com.mkulesh.micromath.undo.ReplaceState;

        if $z0 == 0 goto label02;

        r17 = (com.mkulesh.micromath.undo.ReplaceState) $r1;

        $i0 = -1;

        $r11 = virtualinvoke r17.<com.mkulesh.micromath.undo.ReplaceState: java.util.ArrayList getEntries()>();

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r18 = (com.mkulesh.micromath.undo.ReplaceState$EntryState) $r13;

        $i1 = r18.<com.mkulesh.micromath.undo.ReplaceState$EntryState: int formulaId>;

        $r4 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase getFormula(int)>($i1);

        $r1 = r18.<com.mkulesh.micromath.undo.ReplaceState$EntryState: android.os.Parcelable data>;

        if $r1 == null goto label10;

        $r15 = r18.<com.mkulesh.micromath.undo.ReplaceState$EntryState: com.mkulesh.micromath.formula.FormulaBase$BaseType type>;

        $r1 = r18.<com.mkulesh.micromath.undo.ReplaceState$EntryState: android.os.Parcelable data>;

        $r4 = specialinvoke r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaBase replace(com.mkulesh.micromath.formula.FormulaBase,com.mkulesh.micromath.formula.FormulaBase,com.mkulesh.micromath.formula.FormulaBase$BaseType,android.os.Parcelable)>($r4, null, $r15, $r1);

        if $r4 == null goto label09;

        $i0 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaBase: int getId()>();

        goto label09;

     label10:
        if $r4 == null goto label09;

        $r7 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.HashMap formulas>;

        $i1 = virtualinvoke $r4.<com.mkulesh.micromath.formula.FormulaBase: int getId()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r8);

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView formulaListView>;

        virtualinvoke $r9.<com.mkulesh.micromath.formula.FormulaListView: com.mkulesh.micromath.formula.FormulaBase delete(com.mkulesh.micromath.formula.FormulaBase)>($r4);

        goto label09;

     label11:
        virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: void setSelectedFormula(int,boolean)>($i0, 0);

        goto label02;
    }
    public void updatePalette()
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        com.mkulesh.micromath.formula.Palette$PaletteType r1;
        int $i0, $i1;
        java.util.HashMap $r2;
        java.lang.Integer $r3;
        java.lang.Object $r4;
        com.mkulesh.micromath.formula.FormulaBase r5;
        com.mkulesh.micromath.formula.TermField r6;
        com.mkulesh.micromath.formula.Palette$PaletteType[] $r7;
        boolean z0, z1, $z2;
        com.mkulesh.micromath.formula.Palette $r8;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaList: java.util.HashMap formulas>;

        $i0 = r0.<com.mkulesh.micromath.formula.FormulaList: int selectedFormulaId>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        r5 = (com.mkulesh.micromath.formula.FormulaBase) $r4;

        r6 = null;

        if r5 == null goto label1;

        r6 = virtualinvoke r5.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.TermField findFocusedTerm()>();

     label1:
        $r7 = staticinvoke <com.mkulesh.micromath.formula.Palette$PaletteType: com.mkulesh.micromath.formula.Palette$PaletteType[] values()>();

        $i0 = lengthof $r7;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        r1 = $r7[$i1];

        z0 = 0;

        z1 = 0;

        if r6 == null goto label3;

        z0 = virtualinvoke r6.<com.mkulesh.micromath.formula.TermField: boolean isEnabledInPalette(com.mkulesh.micromath.formula.Palette$PaletteType)>(r1);

        $z2 = virtualinvoke r6.<com.mkulesh.micromath.formula.TermField: boolean isTerm()>();

        if $z2 == 0 goto label3;

        z1 = 1;

     label3:
        $r8 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.Palette palette>;

        virtualinvoke $r8.<com.mkulesh.micromath.formula.Palette: void setPaletteBlockEnabled(com.mkulesh.micromath.formula.Palette$PaletteType,boolean)>(r1, z0);

        $r8 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.Palette palette>;

        virtualinvoke $r8.<com.mkulesh.micromath.formula.Palette: void enableHiddenInput(boolean)>(z1);

        $i1 = $i1 + 1;

        goto label2;

     label4:
        return;
    }
    public void writeToBundle(android.os.Bundle)
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        android.os.Bundle $r1;
        com.mkulesh.micromath.formula.FormulaListView $r2;
        java.util.ArrayList $r3;
        int $i0, i1, i2, $i3, $i4;
        java.lang.Object $r4;
        com.mkulesh.micromath.formula.FormulaBase r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7, $r9;
        com.mkulesh.micromath.formula.FormulaBase$BaseType $r8;
        android.os.Parcelable $r10;
        com.mkulesh.micromath.undo.UndoState $r11;
        com.mkulesh.micromath.properties.DocumentProperties $r12;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r1 := @parameter0: android.os.Bundle;

        $r2 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView formulaListView>;

        $r3 = virtualinvoke $r2.<com.mkulesh.micromath.formula.FormulaListView: java.util.ArrayList getFormulas(java.lang.Class)>(class "Lcom/mkulesh/micromath/formula/FormulaBase;");

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("formula_number", $i0);

        i1 = -1;

        i2 = 0;

     label1:
        if i2 >= $i0 goto label3;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r5 = (com.mkulesh.micromath.formula.FormulaBase) $r4;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("formula_type_");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke r5.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaBase$BaseType getBaseType()>();

        $r9 = virtualinvoke $r8.<com.mkulesh.micromath.formula.FormulaBase$BaseType: java.lang.String toString()>();

        virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>($r7, $r9);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("formula_state_");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke r5.<com.mkulesh.micromath.formula.FormulaBase: android.os.Parcelable onSaveInstanceState()>();

        virtualinvoke $r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>($r7, $r10);

        $i3 = virtualinvoke r5.<com.mkulesh.micromath.formula.FormulaBase: int getId()>();

        $i4 = r0.<com.mkulesh.micromath.formula.FormulaList: int selectedFormulaId>;

        if $i3 != $i4 goto label2;

        i1 = i2;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("selected_line", i1);

        $r11 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.undo.UndoState undoState>;

        $r10 = virtualinvoke $r11.<com.mkulesh.micromath.undo.UndoState: android.os.Parcelable onSaveInstanceState()>();

        virtualinvoke $r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("undo_state", $r10);

        $r12 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.properties.DocumentProperties documentSettings>;

        virtualinvoke $r12.<com.mkulesh.micromath.properties.DocumentProperties: void writeToBundle(android.os.Bundle)>($r1);

        return;
    }
    public boolean writeToFile(android.net.Uri)
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        android.net.Uri $r1;
        java.lang.Exception r2;
        android.support.v7.app.AppCompatActivity $r3;
        java.lang.String $r4, $r7;
        java.io.OutputStream $r5;
        boolean $z0;
        android.content.res.Resources $r6;
        java.lang.Object[] $r8;
        android.widget.Toast $r9;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r1 := @parameter0: android.net.Uri;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity activity>;

        $r4 = staticinvoke <com.mkulesh.micromath.fman.FileUtils: java.lang.String getFileName(android.content.Context,android.net.Uri)>($r3, $r1);

     label1:
        $r3 = r0.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity activity>;

        $r5 = staticinvoke <com.mkulesh.micromath.fman.FileUtils: java.io.OutputStream getOutputStream(android.content.Context,android.net.Uri)>($r3, $r1);

     label2:
        if $r5 != null goto label3;

        return 0;

     label3:
        $z0 = virtualinvoke r0.<com.mkulesh.micromath.formula.FormulaList: boolean writeToStream(java.io.OutputStream,java.lang.String)>($r5, $r4);

        staticinvoke <com.mkulesh.micromath.fman.FileUtils: void closeStream(java.io.Closeable)>($r5);

     label4:
        return $z0;

     label5:
        r2 := @caughtexception;

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity activity>;

        $r6 = virtualinvoke $r3.<android.support.v7.app.AppCompatActivity: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r6.<android.content.res.Resources: java.lang.String getString(int)>(2131099783);

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = $r4;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r7, $r8);

        $r3 = r0.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity activity>;

        $r9 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r3, $r4, 1);

        virtualinvoke $r9.<android.widget.Toast: void show()>();

        return 0;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
    public boolean writeToStream(java.io.OutputStream, java.lang.String)
    {
        com.mkulesh.micromath.formula.FormulaList r0;
        java.io.OutputStream $r1;
        java.lang.String $r2, $r8, $r16;
        java.lang.Exception r3;
        java.io.StringWriter r4;
        java.util.Locale $r5;
        org.xmlpull.v1.XmlSerializer $r6;
        java.lang.Boolean $r7;
        com.mkulesh.micromath.properties.DocumentProperties $r9;
        com.mkulesh.micromath.formula.FormulaListView $r10;
        java.util.ArrayList $r11;
        java.util.Iterator $r12;
        boolean $z0;
        java.lang.Object $r13;
        com.mkulesh.micromath.formula.FormulaBase r14;
        com.mkulesh.micromath.formula.FormulaBase$BaseType $r15;
        int $i0;
        android.support.v7.app.AppCompatActivity $r17;
        android.content.res.Resources $r18;
        java.lang.Object[] $r19;
        android.widget.Toast $r20;
        byte[] $r21;

        r0 := @this: com.mkulesh.micromath.formula.FormulaList;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 := @parameter1: java.lang.String;

        r4 = new java.io.StringWriter;

     label01:
        specialinvoke r4.<java.io.StringWriter: void <init>()>();

        $r6 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlSerializer newSerializer()>();

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.Writer)>(r4);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>("UTF-8", $r7);

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: void setPrefix(java.lang.String,java.lang.String)>("mmt", "http://micromath.mkulesh.com");

     label02:
        $r8 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

     label03:
        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>($r8, "micromath");

     label04:
        $r8 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

     label05:
        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>($r8, "formulaList");

        $r9 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.properties.DocumentProperties documentSettings>;

        virtualinvoke $r9.<com.mkulesh.micromath.properties.DocumentProperties: void writeToXml(org.xmlpull.v1.XmlSerializer)>($r6);

        $r10 = r0.<com.mkulesh.micromath.formula.FormulaList: com.mkulesh.micromath.formula.FormulaListView formulaListView>;

        $r11 = virtualinvoke $r10.<com.mkulesh.micromath.formula.FormulaListView: java.util.ArrayList getFormulas(java.lang.Class)>(class "Lcom/mkulesh/micromath/formula/FormulaBase;");

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

     label07:
        if $z0 == 0 goto label17;

     label08:
        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (com.mkulesh.micromath.formula.FormulaBase) $r13;

        $r15 = virtualinvoke r14.<com.mkulesh.micromath.formula.FormulaBase: com.mkulesh.micromath.formula.FormulaBase$BaseType getBaseType()>();

        $r8 = virtualinvoke $r15.<com.mkulesh.micromath.formula.FormulaBase$BaseType: java.lang.String toString()>();

     label09:
        $r5 = <java.util.Locale: java.util.Locale ENGLISH>;

     label10:
        $r8 = virtualinvoke $r8.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r5);

     label11:
        $r16 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

     label12:
        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>($r16, $r8);

        $i0 = virtualinvoke r14.<com.mkulesh.micromath.formula.FormulaBase: int getId()>();

        $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        virtualinvoke r14.<com.mkulesh.micromath.formula.FormulaBase: void writeToXml(org.xmlpull.v1.XmlSerializer,java.lang.String)>($r6, $r16);

     label13:
        $r16 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

     label14:
        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>($r16, $r8);

     label15:
        goto label06;

     label16:
        r3 := @caughtexception;

        $r17 = r0.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity activity>;

        $r18 = virtualinvoke $r17.<android.support.v7.app.AppCompatActivity: android.content.res.Resources getResources()>();

        $r8 = virtualinvoke $r18.<android.content.res.Resources: java.lang.String getString(int)>(2131099783);

        $r19 = newarray (java.lang.Object)[1];

        $r19[0] = $r2;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r8, $r19);

        $r17 = r0.<com.mkulesh.micromath.formula.FormulaList: android.support.v7.app.AppCompatActivity activity>;

        $r20 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r17, $r2, 1);

        virtualinvoke $r20.<android.widget.Toast: void show()>();

        return 0;

     label17:
        $r8 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

     label18:
        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>($r8, "formulaList");

     label19:
        $r8 = <com.mkulesh.micromath.formula.FormulaList: java.lang.String XML_NS>;

     label20:
        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>($r8, "micromath");

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        $r8 = virtualinvoke r4.<java.io.StringWriter: java.lang.String toString()>();

        $r21 = virtualinvoke $r8.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[])>($r21);

     label21:
        return 1;

        catch java.lang.Exception from label01 to label02 with label16;
        catch java.lang.Exception from label03 to label04 with label16;
        catch java.lang.Exception from label05 to label07 with label16;
        catch java.lang.Exception from label08 to label09 with label16;
        catch java.lang.Exception from label10 to label11 with label16;
        catch java.lang.Exception from label12 to label13 with label16;
        catch java.lang.Exception from label14 to label15 with label16;
        catch java.lang.Exception from label18 to label19 with label16;
        catch java.lang.Exception from label20 to label21 with label16;
    }
