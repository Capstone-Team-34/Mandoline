com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector extends java.lang.Object
public float dx
public float dy
final com.caverock.androidsvg.SVGAndroidRenderer this$0
public float x
public float y
    public void <init>(com.caverock.androidsvg.SVGAndroidRenderer, float, float, float, float)
    {
        com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector r0;
        com.caverock.androidsvg.SVGAndroidRenderer $r1;
        float $f0, $f1, $f2, $f3;
        double $d0, $d1;
        byte $b0;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector;

        $r1 := @parameter0: com.caverock.androidsvg.SVGAndroidRenderer;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $f2 := @parameter3: float;

        $f3 := @parameter4: float;

        r0.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: com.caverock.androidsvg.SVGAndroidRenderer this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float dx> = 0.0F;

        r0.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float dy> = 0.0F;

        r0.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float x> = $f0;

        r0.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float y> = $f1;

        $f1 = $f2 * $f2;

        $f0 = $f3 * $f3;

        $f0 = $f1 + $f0;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $b0 = $d0 cmpl 0.0;

        if $b0 == 0 goto label1;

        $d1 = (double) $f2;

        $d1 = $d1 / $d0;

        $f0 = (float) $d1;

        r0.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float dx> = $f0;

        $d1 = (double) $f3;

        $d0 = $d1 / $d0;

        $f0 = (float) $d0;

        r0.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float dy> = $f0;

     label1:
        return;
    }
    public void add(float, float)
    {
        com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector r0;
        float $f0, $f1, f2, $f3;
        double $d0, $d1;
        byte $b0;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        f2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float x>;

        f2 = $f0 - f2;

        $f0 = r0.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float y>;

        $f0 = $f1 - $f0;

        $f1 = f2 * f2;

        $f3 = $f0 * $f0;

        $f1 = $f1 + $f3;

        $d0 = (double) $f1;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $b0 = $d0 cmpl 0.0;

        if $b0 == 0 goto label1;

        $f1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float dx>;

        $d1 = (double) f2;

        $d1 = $d1 / $d0;

        f2 = (float) $d1;

        $f1 = $f1 + f2;

        r0.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float dx> = $f1;

        $f1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float dy>;

        $d1 = (double) $f0;

        $d0 = $d1 / $d0;

        $f0 = (float) $d0;

        $f0 = $f1 + $f0;

        r0.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float dy> = $f0;

     label1:
        return;
    }
    public void add(com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector)
    {
        com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector r0, $r1;
        float $f0, $f1;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector;

        $r1 := @parameter0: com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector;

        $f0 = r0.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float dx>;

        $f1 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float dx>;

        $f0 = $f0 + $f1;

        r0.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float dx> = $f0;

        $f0 = r0.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float dy>;

        $f1 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float dy>;

        $f0 = $f0 + $f1;

        r0.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float dy> = $f0;

        return;
    }
    public java.lang.String toString()
    {
        com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector r0;
        java.lang.StringBuilder $r1;
        float $f0;
        java.lang.String $r2;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $f0 = r0.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float x>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $f0 = r0.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float y>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $f0 = r0.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float dx>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $f0 = r0.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float dy>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
