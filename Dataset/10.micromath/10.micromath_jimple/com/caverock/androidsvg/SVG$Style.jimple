com.caverock.androidsvg.SVG$Style extends java.lang.Object implements java.lang.Cloneable
public static final int FONT_WEIGHT_BOLD
public static final int FONT_WEIGHT_BOLDER
public static final int FONT_WEIGHT_LIGHTER
public static final int FONT_WEIGHT_NORMAL
public com.caverock.androidsvg.SVG$CSSClipRect clip
public java.lang.String clipPath
public com.caverock.androidsvg.SVG$Style$FillRule clipRule
public com.caverock.androidsvg.SVG$Colour color
public com.caverock.androidsvg.SVG$Style$TextDirection direction
public java.lang.Boolean display
public com.caverock.androidsvg.SVG$SvgPaint fill
public java.lang.Float fillOpacity
public com.caverock.androidsvg.SVG$Style$FillRule fillRule
public java.util.List fontFamily
public com.caverock.androidsvg.SVG$Length fontSize
public com.caverock.androidsvg.SVG$Style$FontStyle fontStyle
public java.lang.Integer fontWeight
public java.lang.String markerEnd
public java.lang.String markerMid
public java.lang.String markerStart
public java.lang.String mask
public java.lang.Float opacity
public java.lang.Boolean overflow
public com.caverock.androidsvg.SVG$SvgPaint solidColor
public java.lang.Float solidOpacity
public long specifiedFlags
public com.caverock.androidsvg.SVG$SvgPaint stopColor
public java.lang.Float stopOpacity
public com.caverock.androidsvg.SVG$SvgPaint stroke
public com.caverock.androidsvg.SVG$Length[] strokeDashArray
public com.caverock.androidsvg.SVG$Length strokeDashOffset
public com.caverock.androidsvg.SVG$Style$LineCaps strokeLineCap
public com.caverock.androidsvg.SVG$Style$LineJoin strokeLineJoin
public java.lang.Float strokeMiterLimit
public java.lang.Float strokeOpacity
public com.caverock.androidsvg.SVG$Length strokeWidth
public com.caverock.androidsvg.SVG$Style$TextAnchor textAnchor
public com.caverock.androidsvg.SVG$Style$TextDecoration textDecoration
public com.caverock.androidsvg.SVG$Style$VectorEffect vectorEffect
public com.caverock.androidsvg.SVG$SvgPaint viewportFill
public java.lang.Float viewportFillOpacity
public java.lang.Boolean visibility
    protected void <init>()
    {
        com.caverock.androidsvg.SVG$Style r0;

        r0 := @this: com.caverock.androidsvg.SVG$Style;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = 0L;

        return;
    }
    public static com.caverock.androidsvg.SVG$Style getDefaultStyle()
    {
        com.caverock.androidsvg.SVG$Style r0;
        com.caverock.androidsvg.SVG$Unit $r1;
        com.caverock.androidsvg.SVG$Colour $r2;
        com.caverock.androidsvg.SVG$Style$FillRule $r3;
        java.lang.Float $r4;
        com.caverock.androidsvg.SVG$Length $r5;
        com.caverock.androidsvg.SVG$Style$LineCaps $r6;
        com.caverock.androidsvg.SVG$Style$LineJoin $r7;
        java.lang.Integer $r8;
        com.caverock.androidsvg.SVG$Style$FontStyle $r9;
        com.caverock.androidsvg.SVG$Style$TextDecoration $r10;
        com.caverock.androidsvg.SVG$Style$TextDirection $r11;
        com.caverock.androidsvg.SVG$Style$TextAnchor $r12;
        java.lang.Boolean $r13;
        com.caverock.androidsvg.SVG$Style$VectorEffect $r14;

        r0 = new com.caverock.androidsvg.SVG$Style;

        specialinvoke r0.<com.caverock.androidsvg.SVG$Style: void <init>()>();

        r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = -1L;

        $r2 = <com.caverock.androidsvg.SVG$Colour: com.caverock.androidsvg.SVG$Colour BLACK>;

        r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint fill> = $r2;

        $r3 = <com.caverock.androidsvg.SVG$Style$FillRule: com.caverock.androidsvg.SVG$Style$FillRule NonZero>;

        r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$FillRule fillRule> = $r3;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);

        r0.<com.caverock.androidsvg.SVG$Style: java.lang.Float fillOpacity> = $r4;

        r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint stroke> = null;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);

        r0.<com.caverock.androidsvg.SVG$Style: java.lang.Float strokeOpacity> = $r4;

        $r5 = new com.caverock.androidsvg.SVG$Length;

        specialinvoke $r5.<com.caverock.androidsvg.SVG$Length: void <init>(float)>(1.0F);

        r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Length strokeWidth> = $r5;

        $r6 = <com.caverock.androidsvg.SVG$Style$LineCaps: com.caverock.androidsvg.SVG$Style$LineCaps Butt>;

        r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$LineCaps strokeLineCap> = $r6;

        $r7 = <com.caverock.androidsvg.SVG$Style$LineJoin: com.caverock.androidsvg.SVG$Style$LineJoin Miter>;

        r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$LineJoin strokeLineJoin> = $r7;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(4.0F);

        r0.<com.caverock.androidsvg.SVG$Style: java.lang.Float strokeMiterLimit> = $r4;

        r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Length[] strokeDashArray> = null;

        $r5 = new com.caverock.androidsvg.SVG$Length;

        specialinvoke $r5.<com.caverock.androidsvg.SVG$Length: void <init>(float)>(0.0F);

        r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Length strokeDashOffset> = $r5;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);

        r0.<com.caverock.androidsvg.SVG$Style: java.lang.Float opacity> = $r4;

        $r2 = <com.caverock.androidsvg.SVG$Colour: com.caverock.androidsvg.SVG$Colour BLACK>;

        r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Colour color> = $r2;

        r0.<com.caverock.androidsvg.SVG$Style: java.util.List fontFamily> = null;

        $r5 = new com.caverock.androidsvg.SVG$Length;

        $r1 = <com.caverock.androidsvg.SVG$Unit: com.caverock.androidsvg.SVG$Unit pt>;

        specialinvoke $r5.<com.caverock.androidsvg.SVG$Length: void <init>(float,com.caverock.androidsvg.SVG$Unit)>(12.0F, $r1);

        r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Length fontSize> = $r5;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(400);

        r0.<com.caverock.androidsvg.SVG$Style: java.lang.Integer fontWeight> = $r8;

        $r9 = <com.caverock.androidsvg.SVG$Style$FontStyle: com.caverock.androidsvg.SVG$Style$FontStyle Normal>;

        r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$FontStyle fontStyle> = $r9;

        $r10 = <com.caverock.androidsvg.SVG$Style$TextDecoration: com.caverock.androidsvg.SVG$Style$TextDecoration None>;

        r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$TextDecoration textDecoration> = $r10;

        $r11 = <com.caverock.androidsvg.SVG$Style$TextDirection: com.caverock.androidsvg.SVG$Style$TextDirection LTR>;

        r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$TextDirection direction> = $r11;

        $r12 = <com.caverock.androidsvg.SVG$Style$TextAnchor: com.caverock.androidsvg.SVG$Style$TextAnchor Start>;

        r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$TextAnchor textAnchor> = $r12;

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        r0.<com.caverock.androidsvg.SVG$Style: java.lang.Boolean overflow> = $r13;

        r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$CSSClipRect clip> = null;

        r0.<com.caverock.androidsvg.SVG$Style: java.lang.String markerStart> = null;

        r0.<com.caverock.androidsvg.SVG$Style: java.lang.String markerMid> = null;

        r0.<com.caverock.androidsvg.SVG$Style: java.lang.String markerEnd> = null;

        $r13 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        r0.<com.caverock.androidsvg.SVG$Style: java.lang.Boolean display> = $r13;

        $r13 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        r0.<com.caverock.androidsvg.SVG$Style: java.lang.Boolean visibility> = $r13;

        $r2 = <com.caverock.androidsvg.SVG$Colour: com.caverock.androidsvg.SVG$Colour BLACK>;

        r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint stopColor> = $r2;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);

        r0.<com.caverock.androidsvg.SVG$Style: java.lang.Float stopOpacity> = $r4;

        r0.<com.caverock.androidsvg.SVG$Style: java.lang.String clipPath> = null;

        $r3 = <com.caverock.androidsvg.SVG$Style$FillRule: com.caverock.androidsvg.SVG$Style$FillRule NonZero>;

        r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$FillRule clipRule> = $r3;

        r0.<com.caverock.androidsvg.SVG$Style: java.lang.String mask> = null;

        r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint solidColor> = null;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);

        r0.<com.caverock.androidsvg.SVG$Style: java.lang.Float solidOpacity> = $r4;

        r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint viewportFill> = null;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);

        r0.<com.caverock.androidsvg.SVG$Style: java.lang.Float viewportFillOpacity> = $r4;

        $r14 = <com.caverock.androidsvg.SVG$Style$VectorEffect: com.caverock.androidsvg.SVG$Style$VectorEffect None>;

        r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$VectorEffect vectorEffect> = $r14;

        return r0;
    }
    protected java.lang.Object clone()
    {
        com.caverock.androidsvg.SVG$Style r0, r3;
        java.lang.CloneNotSupportedException r1;
        java.lang.Object $r2;
        com.caverock.androidsvg.SVG$Length[] $r4;
        java.lang.InternalError $r5;
        java.lang.String $r6;

        r0 := @this: com.caverock.androidsvg.SVG$Style;

     label1:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

     label2:
        r3 = (com.caverock.androidsvg.SVG$Style) $r2;

        $r4 = r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Length[] strokeDashArray>;

        if $r4 == null goto label6;

        $r4 = r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Length[] strokeDashArray>;

     label3:
        $r2 = virtualinvoke $r4.<java.lang.Object: java.lang.Object clone()>();

     label4:
        $r4 = (com.caverock.androidsvg.SVG$Length[]) $r2;

        r3.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Length[] strokeDashArray> = $r4;

        return r3;

     label5:
        r1 := @caughtexception;

        $r5 = new java.lang.InternalError;

        $r6 = virtualinvoke r1.<java.lang.CloneNotSupportedException: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.InternalError: void <init>(java.lang.String)>($r6);

        throw $r5;

     label6:
        return r3;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label5;
        catch java.lang.CloneNotSupportedException from label3 to label4 with label5;
    }
    public void resetNonInheritingProperties()
    {
        com.caverock.androidsvg.SVG$Style r0;

        r0 := @this: com.caverock.androidsvg.SVG$Style;

        virtualinvoke r0.<com.caverock.androidsvg.SVG$Style: void resetNonInheritingProperties(boolean)>(0);

        return;
    }
    public void resetNonInheritingProperties(boolean)
    {
        com.caverock.androidsvg.SVG$Style r0;
        boolean $z0;
        java.lang.Boolean $r1;
        java.lang.Float $r2;
        com.caverock.androidsvg.SVG$Colour $r3;
        com.caverock.androidsvg.SVG$Style$VectorEffect $r4;

        r0 := @this: com.caverock.androidsvg.SVG$Style;

        $z0 := @parameter0: boolean;

        $r1 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        r0.<com.caverock.androidsvg.SVG$Style: java.lang.Boolean display> = $r1;

        if $z0 == 0 goto label2;

        $r1 = <java.lang.Boolean: java.lang.Boolean TRUE>;

     label1:
        r0.<com.caverock.androidsvg.SVG$Style: java.lang.Boolean overflow> = $r1;

        r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$CSSClipRect clip> = null;

        r0.<com.caverock.androidsvg.SVG$Style: java.lang.String clipPath> = null;

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);

        r0.<com.caverock.androidsvg.SVG$Style: java.lang.Float opacity> = $r2;

        $r3 = <com.caverock.androidsvg.SVG$Colour: com.caverock.androidsvg.SVG$Colour BLACK>;

        r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint stopColor> = $r3;

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);

        r0.<com.caverock.androidsvg.SVG$Style: java.lang.Float stopOpacity> = $r2;

        r0.<com.caverock.androidsvg.SVG$Style: java.lang.String mask> = null;

        r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint solidColor> = null;

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);

        r0.<com.caverock.androidsvg.SVG$Style: java.lang.Float solidOpacity> = $r2;

        r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint viewportFill> = null;

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);

        r0.<com.caverock.androidsvg.SVG$Style: java.lang.Float viewportFillOpacity> = $r2;

        $r4 = <com.caverock.androidsvg.SVG$Style$VectorEffect: com.caverock.androidsvg.SVG$Style$VectorEffect None>;

        r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$VectorEffect vectorEffect> = $r4;

        return;

     label2:
        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        goto label1;
    }
