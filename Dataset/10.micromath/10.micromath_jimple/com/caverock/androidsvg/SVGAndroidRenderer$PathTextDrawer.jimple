com.caverock.androidsvg.SVGAndroidRenderer$PathTextDrawer extends com.caverock.androidsvg.SVGAndroidRenderer$PlainTextDrawer
private android.graphics.Path path
final com.caverock.androidsvg.SVGAndroidRenderer this$0
    public void <init>(com.caverock.androidsvg.SVGAndroidRenderer, android.graphics.Path, float, float)
    {
        com.caverock.androidsvg.SVGAndroidRenderer$PathTextDrawer r0;
        com.caverock.androidsvg.SVGAndroidRenderer $r1;
        android.graphics.Path $r2;
        float $f0, $f1;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer$PathTextDrawer;

        $r1 := @parameter0: com.caverock.androidsvg.SVGAndroidRenderer;

        $r2 := @parameter1: android.graphics.Path;

        $f0 := @parameter2: float;

        $f1 := @parameter3: float;

        r0.<com.caverock.androidsvg.SVGAndroidRenderer$PathTextDrawer: com.caverock.androidsvg.SVGAndroidRenderer this$0> = $r1;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer$PlainTextDrawer: void <init>(com.caverock.androidsvg.SVGAndroidRenderer,float,float)>($r1, $f0, $f1);

        r0.<com.caverock.androidsvg.SVGAndroidRenderer$PathTextDrawer: android.graphics.Path path> = $r2;

        return;
    }
    public void processText(java.lang.String)
    {
        com.caverock.androidsvg.SVGAndroidRenderer$PathTextDrawer r0;
        java.lang.String $r1;
        com.caverock.androidsvg.SVGAndroidRenderer $r2;
        boolean $z0;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r3;
        android.graphics.Canvas $r4;
        android.graphics.Path $r5;
        float $f0, $f1;
        android.graphics.Paint $r6;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer$PathTextDrawer;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer$PathTextDrawer: com.caverock.androidsvg.SVGAndroidRenderer this$0>;

        $z0 = staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: boolean access$200(com.caverock.androidsvg.SVGAndroidRenderer)>($r2);

        if $z0 == 0 goto label2;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer$PathTextDrawer: com.caverock.androidsvg.SVGAndroidRenderer this$0>;

        $r3 = staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState access$300(com.caverock.androidsvg.SVGAndroidRenderer)>($r2);

        $z0 = $r3.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean hasFill>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer$PathTextDrawer: com.caverock.androidsvg.SVGAndroidRenderer this$0>;

        $r4 = staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas access$400(com.caverock.androidsvg.SVGAndroidRenderer)>($r2);

        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer$PathTextDrawer: android.graphics.Path path>;

        $f0 = r0.<com.caverock.androidsvg.SVGAndroidRenderer$PathTextDrawer: float x>;

        $f1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer$PathTextDrawer: float y>;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer$PathTextDrawer: com.caverock.androidsvg.SVGAndroidRenderer this$0>;

        $r3 = staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState access$300(com.caverock.androidsvg.SVGAndroidRenderer)>($r2);

        $r6 = $r3.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint fillPaint>;

        virtualinvoke $r4.<android.graphics.Canvas: void drawTextOnPath(java.lang.String,android.graphics.Path,float,float,android.graphics.Paint)>($r1, $r5, $f0, $f1, $r6);

     label1:
        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer$PathTextDrawer: com.caverock.androidsvg.SVGAndroidRenderer this$0>;

        $r3 = staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState access$300(com.caverock.androidsvg.SVGAndroidRenderer)>($r2);

        $z0 = $r3.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean hasStroke>;

        if $z0 == 0 goto label2;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer$PathTextDrawer: com.caverock.androidsvg.SVGAndroidRenderer this$0>;

        $r4 = staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas access$400(com.caverock.androidsvg.SVGAndroidRenderer)>($r2);

        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer$PathTextDrawer: android.graphics.Path path>;

        $f0 = r0.<com.caverock.androidsvg.SVGAndroidRenderer$PathTextDrawer: float x>;

        $f1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer$PathTextDrawer: float y>;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer$PathTextDrawer: com.caverock.androidsvg.SVGAndroidRenderer this$0>;

        $r3 = staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState access$300(com.caverock.androidsvg.SVGAndroidRenderer)>($r2);

        $r6 = $r3.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint strokePaint>;

        virtualinvoke $r4.<android.graphics.Canvas: void drawTextOnPath(java.lang.String,android.graphics.Path,float,float,android.graphics.Paint)>($r1, $r5, $f0, $f1, $r6);

     label2:
        $f0 = r0.<com.caverock.androidsvg.SVGAndroidRenderer$PathTextDrawer: float x>;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer$PathTextDrawer: com.caverock.androidsvg.SVGAndroidRenderer this$0>;

        $r3 = staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState access$300(com.caverock.androidsvg.SVGAndroidRenderer)>($r2);

        $r6 = $r3.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint fillPaint>;

        $f1 = virtualinvoke $r6.<android.graphics.Paint: float measureText(java.lang.String)>($r1);

        $f0 = $f0 + $f1;

        r0.<com.caverock.androidsvg.SVGAndroidRenderer$PathTextDrawer: float x> = $f0;

        return;
    }
