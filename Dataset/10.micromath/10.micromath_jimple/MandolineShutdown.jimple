MandolineShutdown extends java.lang.Thread
    void <init>()
    {
        MandolineShutdown r0;

        r0 := @this: MandolineShutdown;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        return;
    }
    public void run()
    {
        java.io.PrintStream $r0, $r5;
        java.lang.StringBuilder $r1;
        java.util.ArrayList $r3;
        java.util.Iterator r4;
        boolean $z0;
        java.lang.String $r6, r8;
        java.lang.Object $r7;
        MandolineShutdown r11;

        r11 := @this: MandolineShutdown;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("Dumping queue on shutdown");

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("SLICING:");

        $r3 = <MandolineLogger: java.util.ArrayList queue>;

        r4 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r7;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        goto label1;

     label2:
        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r6);

        return;
    }
