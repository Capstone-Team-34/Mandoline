android.support.v4.app.NotificationManagerCompatKitKat extends java.lang.Object
private static final java.lang.String CHECK_OP_NO_THROW
private static final java.lang.String OP_POST_NOTIFICATION
    void <init>()
    {
        android.support.v4.app.NotificationManagerCompatKitKat r0;

        r0 := @this: android.support.v4.app.NotificationManagerCompatKitKat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static boolean areNotificationsEnabled(android.content.Context)
    {
        android.content.Context $r0;
        int i0, $i1;
        java.lang.Object $r1;
        android.app.AppOpsManager r2;
        android.content.pm.ApplicationInfo $r3;
        java.lang.String $r4, $r6;
        java.lang.Class $r5, $r8;
        java.lang.Class[] $r7;
        java.lang.reflect.Method $r9;
        java.lang.reflect.Field $r10;
        java.lang.Integer $r11;
        java.lang.Object[] $r12;
        java.lang.ClassNotFoundException r13;
        java.lang.RuntimeException r14;
        java.lang.NoSuchFieldException r15;
        java.lang.IllegalAccessException r16;
        java.lang.NoSuchMethodException r17;
        java.lang.reflect.InvocationTargetException r18;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("appops");

        r2 = (android.app.AppOpsManager) $r1;

        $r3 = virtualinvoke $r0.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $r0 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r4 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        i0 = $r3.<android.content.pm.ApplicationInfo: int uid>;

        $r5 = class "Landroid/app/AppOpsManager;";

     label01:
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r6);

     label02:
        $r7 = newarray (java.lang.Class)[3];

     label03:
        $r8 = <java.lang.Integer: java.lang.Class TYPE>;

     label04:
        $r7[0] = $r8;

     label05:
        $r8 = <java.lang.Integer: java.lang.Class TYPE>;

     label06:
        $r7[1] = $r8;

        $r7[2] = class "Ljava/lang/String;";

     label07:
        $r9 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("checkOpNoThrow", $r7);

        $r10 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("OP_POST_NOTIFICATION");

        $r1 = virtualinvoke $r10.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(class "Ljava/lang/Integer;");

     label08:
        $r11 = (java.lang.Integer) $r1;

     label09:
        $i1 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

     label10:
        $r12 = newarray (java.lang.Object)[3];

     label11:
        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

     label12:
        $r12[0] = $r11;

     label13:
        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

     label14:
        $r12[1] = $r11;

        $r12[2] = $r4;

     label15:
        $r1 = virtualinvoke $r9.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r12);

     label16:
        $r11 = (java.lang.Integer) $r1;

     label17:
        i0 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

     label18:
        if i0 != 0 goto label19;

        return 1;

     label19:
        return 0;

     label20:
        r13 := @caughtexception;

     label21:
        return 1;

     label22:
        r14 := @caughtexception;

        goto label21;

     label23:
        r15 := @caughtexception;

        goto label21;

     label24:
        r16 := @caughtexception;

        goto label21;

     label25:
        r17 := @caughtexception;

        goto label21;

     label26:
        r18 := @caughtexception;

        goto label21;

        catch java.lang.ClassNotFoundException from label01 to label02 with label20;
        catch java.lang.ClassNotFoundException from label07 to label08 with label20;
        catch java.lang.ClassNotFoundException from label09 to label10 with label20;
        catch java.lang.ClassNotFoundException from label11 to label12 with label20;
        catch java.lang.ClassNotFoundException from label13 to label14 with label20;
        catch java.lang.ClassNotFoundException from label15 to label16 with label20;
        catch java.lang.ClassNotFoundException from label17 to label18 with label20;
        catch java.lang.NoSuchMethodException from label01 to label02 with label25;
        catch java.lang.NoSuchMethodException from label07 to label08 with label25;
        catch java.lang.NoSuchMethodException from label09 to label10 with label25;
        catch java.lang.NoSuchMethodException from label11 to label12 with label25;
        catch java.lang.NoSuchMethodException from label13 to label14 with label25;
        catch java.lang.NoSuchMethodException from label15 to label16 with label25;
        catch java.lang.NoSuchMethodException from label17 to label18 with label25;
        catch java.lang.NoSuchFieldException from label01 to label02 with label23;
        catch java.lang.NoSuchFieldException from label07 to label08 with label23;
        catch java.lang.NoSuchFieldException from label09 to label10 with label23;
        catch java.lang.NoSuchFieldException from label11 to label12 with label23;
        catch java.lang.NoSuchFieldException from label13 to label14 with label23;
        catch java.lang.NoSuchFieldException from label15 to label16 with label23;
        catch java.lang.NoSuchFieldException from label17 to label18 with label23;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label26;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label26;
        catch java.lang.reflect.InvocationTargetException from label09 to label10 with label26;
        catch java.lang.reflect.InvocationTargetException from label11 to label12 with label26;
        catch java.lang.reflect.InvocationTargetException from label13 to label14 with label26;
        catch java.lang.reflect.InvocationTargetException from label15 to label16 with label26;
        catch java.lang.reflect.InvocationTargetException from label17 to label18 with label26;
        catch java.lang.IllegalAccessException from label01 to label02 with label24;
        catch java.lang.IllegalAccessException from label07 to label08 with label24;
        catch java.lang.IllegalAccessException from label09 to label10 with label24;
        catch java.lang.IllegalAccessException from label11 to label12 with label24;
        catch java.lang.IllegalAccessException from label13 to label14 with label24;
        catch java.lang.IllegalAccessException from label15 to label16 with label24;
        catch java.lang.IllegalAccessException from label17 to label18 with label24;
        catch java.lang.RuntimeException from label01 to label03 with label22;
        catch java.lang.RuntimeException from label04 to label05 with label22;
        catch java.lang.RuntimeException from label06 to label18 with label22;
    }
