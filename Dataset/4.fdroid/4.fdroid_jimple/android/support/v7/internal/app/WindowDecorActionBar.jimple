android.support.v7.internal.app.WindowDecorActionBar extends android.support.v7.app.ActionBar implements android.support.v7.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback
static final boolean $assertionsDisabled
private static final boolean ALLOW_SHOW_HIDE_ANIMATIONS
android.support.v7.internal.app.WindowDecorActionBar$ActionModeImpl mActionMode
private android.app.Activity mActivity
private android.support.v7.internal.widget.ActionBarContainer mContainerView
private boolean mContentAnimations
private android.view.View mContentView
private android.content.Context mContext
private int mContextDisplayMode
private android.support.v7.internal.widget.ActionBarContextView mContextView
private int mCurWindowVisibility
private android.support.v7.internal.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim
private android.support.v7.internal.widget.DecorToolbar mDecorToolbar
android.support.v7.view.ActionMode mDeferredDestroyActionMode
android.support.v7.view.ActionMode$Callback mDeferredModeDestroyCallback
private android.app.Dialog mDialog
private boolean mDisplayHomeAsUpSet
private boolean mHasEmbeddedTabs
private boolean mHiddenByApp
private boolean mHiddenBySystem
final android.support.v4.view.ViewPropertyAnimatorListener mHideListener
boolean mHideOnContentScroll
private boolean mLastMenuVisibility
private java.util.ArrayList mMenuVisibilityListeners
private boolean mNowShowing
private android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout
private int mSavedTabPosition
private android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab
private boolean mShowHideAnimationEnabled
final android.support.v4.view.ViewPropertyAnimatorListener mShowListener
private boolean mShowingForMode
private android.support.v7.internal.widget.ActionBarContainer mSplitView
private android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView
private java.util.ArrayList mTabs
private android.content.Context mThemedContext
final android.support.v4.view.ViewPropertyAnimatorUpdateListener mUpdateListener
    static void <clinit>()
    {
        boolean $z0, $z1;
        java.lang.Class $r0;
        int $i0;

        $z1 = 1;

        $r0 = class "Landroid/support/v7/internal/app/WindowDecorActionBar;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z0 = 1;

     label1:
        <android.support.v7.internal.app.WindowDecorActionBar: boolean $assertionsDisabled> = $z0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 14 goto label4;

     label2:
        <android.support.v7.internal.app.WindowDecorActionBar: boolean ALLOW_SHOW_HIDE_ANIMATIONS> = $z1;

        return;

     label3:
        $z0 = 0;

        goto label1;

     label4:
        $z1 = 0;

        goto label2;
    }
    public void <init>(android.app.Activity, boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        android.app.Activity $r1;
        boolean $z0;
        java.util.ArrayList $r2;
        android.support.v7.internal.app.WindowDecorActionBar$1 $r3;
        android.support.v7.internal.app.WindowDecorActionBar$2 $r4;
        android.support.v7.internal.app.WindowDecorActionBar$3 $r5;
        android.view.Window $r6;
        android.view.View $r7;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $r1 := @parameter0: android.app.Activity;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<android.support.v7.app.ActionBar: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs> = $r2;

        r0.<android.support.v7.internal.app.WindowDecorActionBar: int mSavedTabPosition> = -1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners> = $r2;

        r0.<android.support.v7.internal.app.WindowDecorActionBar: int mCurWindowVisibility> = 0;

        r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mContentAnimations> = 1;

        r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mNowShowing> = 1;

        $r3 = new android.support.v7.internal.app.WindowDecorActionBar$1;

        specialinvoke $r3.<android.support.v7.internal.app.WindowDecorActionBar$1: void <init>(android.support.v7.internal.app.WindowDecorActionBar)>(r0);

        r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v4.view.ViewPropertyAnimatorListener mHideListener> = $r3;

        $r4 = new android.support.v7.internal.app.WindowDecorActionBar$2;

        specialinvoke $r4.<android.support.v7.internal.app.WindowDecorActionBar$2: void <init>(android.support.v7.internal.app.WindowDecorActionBar)>(r0);

        r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v4.view.ViewPropertyAnimatorListener mShowListener> = $r4;

        $r5 = new android.support.v7.internal.app.WindowDecorActionBar$3;

        specialinvoke $r5.<android.support.v7.internal.app.WindowDecorActionBar$3: void <init>(android.support.v7.internal.app.WindowDecorActionBar)>(r0);

        r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v4.view.ViewPropertyAnimatorUpdateListener mUpdateListener> = $r5;

        r0.<android.support.v7.internal.app.WindowDecorActionBar: android.app.Activity mActivity> = $r1;

        $r6 = virtualinvoke $r1.<android.app.Activity: android.view.Window getWindow()>();

        $r7 = virtualinvoke $r6.<android.view.Window: android.view.View getDecorView()>();

        specialinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: void init(android.view.View)>($r7);

        if $z0 != 0 goto label1;

        $r7 = virtualinvoke $r7.<android.view.View: android.view.View findViewById(int)>(16908290);

        r0.<android.support.v7.internal.app.WindowDecorActionBar: android.view.View mContentView> = $r7;

     label1:
        return;
    }
    public void <init>(android.app.Dialog)
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        android.app.Dialog $r1;
        java.util.ArrayList $r2;
        android.support.v7.internal.app.WindowDecorActionBar$1 $r3;
        android.support.v7.internal.app.WindowDecorActionBar$2 $r4;
        android.support.v7.internal.app.WindowDecorActionBar$3 $r5;
        android.view.Window $r6;
        android.view.View $r7;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $r1 := @parameter0: android.app.Dialog;

        specialinvoke r0.<android.support.v7.app.ActionBar: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs> = $r2;

        r0.<android.support.v7.internal.app.WindowDecorActionBar: int mSavedTabPosition> = -1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners> = $r2;

        r0.<android.support.v7.internal.app.WindowDecorActionBar: int mCurWindowVisibility> = 0;

        r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mContentAnimations> = 1;

        r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mNowShowing> = 1;

        $r3 = new android.support.v7.internal.app.WindowDecorActionBar$1;

        specialinvoke $r3.<android.support.v7.internal.app.WindowDecorActionBar$1: void <init>(android.support.v7.internal.app.WindowDecorActionBar)>(r0);

        r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v4.view.ViewPropertyAnimatorListener mHideListener> = $r3;

        $r4 = new android.support.v7.internal.app.WindowDecorActionBar$2;

        specialinvoke $r4.<android.support.v7.internal.app.WindowDecorActionBar$2: void <init>(android.support.v7.internal.app.WindowDecorActionBar)>(r0);

        r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v4.view.ViewPropertyAnimatorListener mShowListener> = $r4;

        $r5 = new android.support.v7.internal.app.WindowDecorActionBar$3;

        specialinvoke $r5.<android.support.v7.internal.app.WindowDecorActionBar$3: void <init>(android.support.v7.internal.app.WindowDecorActionBar)>(r0);

        r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v4.view.ViewPropertyAnimatorUpdateListener mUpdateListener> = $r5;

        r0.<android.support.v7.internal.app.WindowDecorActionBar: android.app.Dialog mDialog> = $r1;

        $r6 = virtualinvoke $r1.<android.app.Dialog: android.view.Window getWindow()>();

        $r7 = virtualinvoke $r6.<android.view.Window: android.view.View getDecorView()>();

        specialinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: void init(android.view.View)>($r7);

        return;
    }
    static boolean access$000(android.support.v7.internal.app.WindowDecorActionBar)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        boolean z0;

        $r0 := @parameter0: android.support.v7.internal.app.WindowDecorActionBar;

        z0 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mContentAnimations>;

        return z0;
    }
    static android.view.View access$100(android.support.v7.internal.app.WindowDecorActionBar)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.view.View r1;

        $r0 := @parameter0: android.support.v7.internal.app.WindowDecorActionBar;

        r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.view.View mContentView>;

        return r1;
    }
    static android.support.v7.internal.widget.ActionBarContextView access$1000(android.support.v7.internal.app.WindowDecorActionBar)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.widget.ActionBarContextView r1;

        $r0 := @parameter0: android.support.v7.internal.app.WindowDecorActionBar;

        r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContextView mContextView>;

        return r1;
    }
    static android.support.v7.internal.widget.DecorToolbar access$1100(android.support.v7.internal.app.WindowDecorActionBar)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.widget.DecorToolbar r1;

        $r0 := @parameter0: android.support.v7.internal.app.WindowDecorActionBar;

        r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;

        return r1;
    }
    static android.content.Context access$1200(android.support.v7.internal.app.WindowDecorActionBar)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.content.Context r1;

        $r0 := @parameter0: android.support.v7.internal.app.WindowDecorActionBar;

        r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mContext>;

        return r1;
    }
    static android.support.v7.internal.widget.ScrollingTabContainerView access$1300(android.support.v7.internal.app.WindowDecorActionBar)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.widget.ScrollingTabContainerView r1;

        $r0 := @parameter0: android.support.v7.internal.app.WindowDecorActionBar;

        r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView>;

        return r1;
    }
    static android.support.v7.internal.widget.ActionBarContainer access$200(android.support.v7.internal.app.WindowDecorActionBar)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.widget.ActionBarContainer r1;

        $r0 := @parameter0: android.support.v7.internal.app.WindowDecorActionBar;

        r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;

        return r1;
    }
    static android.support.v7.internal.widget.ActionBarContainer access$300(android.support.v7.internal.app.WindowDecorActionBar)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.widget.ActionBarContainer r1;

        $r0 := @parameter0: android.support.v7.internal.app.WindowDecorActionBar;

        r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;

        return r1;
    }
    static int access$400(android.support.v7.internal.app.WindowDecorActionBar)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        int i0;

        $r0 := @parameter0: android.support.v7.internal.app.WindowDecorActionBar;

        i0 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: int mContextDisplayMode>;

        return i0;
    }
    static android.support.v7.internal.view.ViewPropertyAnimatorCompatSet access$502(android.support.v7.internal.app.WindowDecorActionBar, android.support.v7.internal.view.ViewPropertyAnimatorCompatSet)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.view.ViewPropertyAnimatorCompatSet $r1;

        $r0 := @parameter0: android.support.v7.internal.app.WindowDecorActionBar;

        $r1 := @parameter1: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet;

        $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim> = $r1;

        return $r1;
    }
    static android.support.v7.internal.widget.ActionBarOverlayLayout access$600(android.support.v7.internal.app.WindowDecorActionBar)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.widget.ActionBarOverlayLayout r1;

        $r0 := @parameter0: android.support.v7.internal.app.WindowDecorActionBar;

        r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        return r1;
    }
    static boolean access$700(android.support.v7.internal.app.WindowDecorActionBar)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        boolean z0;

        $r0 := @parameter0: android.support.v7.internal.app.WindowDecorActionBar;

        z0 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHiddenByApp>;

        return z0;
    }
    static boolean access$800(android.support.v7.internal.app.WindowDecorActionBar)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        boolean z0;

        $r0 := @parameter0: android.support.v7.internal.app.WindowDecorActionBar;

        z0 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHiddenBySystem>;

        return z0;
    }
    static boolean access$900(boolean, boolean, boolean)
    {
        boolean $z0, $z1, $z2;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $z2 := @parameter2: boolean;

        $z0 = staticinvoke <android.support.v7.internal.app.WindowDecorActionBar: boolean checkShowingFlags(boolean,boolean,boolean)>($z0, $z1, $z2);

        return $z0;
    }
    private static boolean checkShowingFlags(boolean, boolean, boolean)
    {
        boolean $z0, $z1, $z2;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $z2 := @parameter2: boolean;

        if $z2 == 0 goto label1;

        return 1;

     label1:
        if $z0 != 0 goto label2;

        if $z1 == 0 goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }
    private void configureTab(android.support.v7.app.ActionBar$Tab, int)
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        android.support.v7.app.ActionBar$Tab $r1;
        int $i0, $i1;
        android.support.v7.internal.app.WindowDecorActionBar$TabImpl r2;
        android.support.v7.app.ActionBar$TabListener $r3;
        java.lang.IllegalStateException $r4;
        java.util.ArrayList $r5;
        java.lang.Object $r6;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $r1 := @parameter0: android.support.v7.app.ActionBar$Tab;

        $i0 := @parameter1: int;

        r2 = (android.support.v7.internal.app.WindowDecorActionBar$TabImpl) $r1;

        $r3 = virtualinvoke r2.<android.support.v7.internal.app.WindowDecorActionBar$TabImpl: android.support.v7.app.ActionBar$TabListener getCallback()>();

        if $r3 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Action Bar Tab must have a Callback");

        throw $r4;

     label1:
        virtualinvoke r2.<android.support.v7.internal.app.WindowDecorActionBar$TabImpl: void setPosition(int)>($i0);

        $r5 = r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        virtualinvoke $r5.<java.util.ArrayList: void add(int,java.lang.Object)>($i0, r2);

        $r5 = r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $i0 = $i0 + 1;

     label2:
        if $i0 >= $i1 goto label3;

        $r5 = r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        r2 = (android.support.v7.internal.app.WindowDecorActionBar$TabImpl) $r6;

        virtualinvoke r2.<android.support.v7.internal.app.WindowDecorActionBar$TabImpl: void setPosition(int)>($i0);

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return;
    }
    private void ensureTabsExist()
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        android.support.v7.internal.widget.ScrollingTabContainerView r1;
        int $i0;
        android.content.Context $r2;
        boolean $z0;
        android.support.v7.internal.widget.DecorToolbar $r3;
        android.support.v7.internal.widget.ActionBarOverlayLayout $r4;
        android.support.v7.internal.widget.ActionBarContainer $r5;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView>;

        if r1 == null goto label1;

        return;

     label1:
        r1 = new android.support.v7.internal.widget.ScrollingTabContainerView;

        $r2 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mContext>;

        specialinvoke r1.<android.support.v7.internal.widget.ScrollingTabContainerView: void <init>(android.content.Context)>($r2);

        $z0 = r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;

        if $z0 == 0 goto label3;

        virtualinvoke r1.<android.support.v7.internal.widget.ScrollingTabContainerView: void setVisibility(int)>(0);

        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r3.<android.support.v7.internal.widget.DecorToolbar: void setEmbeddedTabView(android.support.v7.internal.widget.ScrollingTabContainerView)>(r1);

     label2:
        r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView> = r1;

        return;

     label3:
        $i0 = virtualinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: int getNavigationMode()>();

        if $i0 != 2 goto label5;

        virtualinvoke r1.<android.support.v7.internal.widget.ScrollingTabContainerView: void setVisibility(int)>(0);

        $r4 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        if $r4 == null goto label4;

        $r4 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        staticinvoke <android.support.v4.view.ViewCompat: void requestApplyInsets(android.view.View)>($r4);

     label4:
        $r5 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r5.<android.support.v7.internal.widget.ActionBarContainer: void setTabContainer(android.support.v7.internal.widget.ScrollingTabContainerView)>(r1);

        goto label2;

     label5:
        virtualinvoke r1.<android.support.v7.internal.widget.ScrollingTabContainerView: void setVisibility(int)>(8);

        goto label4;
    }
    private android.support.v7.internal.widget.DecorToolbar getDecorToolbar(android.view.View)
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        java.lang.IllegalStateException $r1;
        android.view.View r2;
        boolean $z0;
        android.support.v7.internal.widget.DecorToolbar r3;
        android.support.v7.widget.Toolbar r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        java.lang.Class $r7;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        r2 := @parameter0: android.view.View;

        $z0 = r2 instanceof android.support.v7.internal.widget.DecorToolbar;

        if $z0 == 0 goto label1;

        r3 = (android.support.v7.internal.widget.DecorToolbar) r2;

        return r3;

     label1:
        $z0 = r2 instanceof android.support.v7.widget.Toolbar;

        if $z0 == 0 goto label2;

        r4 = (android.support.v7.widget.Toolbar) r2;

        r3 = virtualinvoke r4.<android.support.v7.widget.Toolbar: android.support.v7.internal.widget.DecorToolbar getWrapper()>();

        return r3;

     label2:
        $r1 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t make a decor toolbar out of ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        if $r6 == null goto label4;

        $r7 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r7.<java.lang.Class: java.lang.String getSimpleName()>();

     label3:
        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r1;

     label4:
        $r6 = "null";

        goto label3;
    }
    private void hideForActionMode()
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        boolean $z0;
        android.support.v7.internal.widget.ActionBarOverlayLayout $r1;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $z0 = r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mShowingForMode>;

        if $z0 == 0 goto label2;

        r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mShowingForMode> = 0;

        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        virtualinvoke $r1.<android.support.v7.internal.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)>(0);

     label1:
        specialinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: void updateVisibility(boolean)>(0);

     label2:
        return;
    }
    private void init(android.view.View)
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        android.view.View $r1, $r3;
        int[] $r2;
        int $i0;
        android.support.v7.internal.widget.ActionBarOverlayLayout $r4;
        android.support.v7.internal.widget.DecorToolbar $r5;
        android.support.v7.internal.widget.ActionBarContextView $r6;
        android.support.v7.internal.widget.ActionBarContainer $r7;
        java.lang.IllegalStateException $r8;
        java.lang.StringBuilder $r9;
        java.lang.Class $r10;
        java.lang.String $r11;
        android.content.Context $r12;
        boolean $z0, $z1;
        byte $b1;
        android.support.v7.internal.view.ActionBarPolicy $r13;
        android.content.res.TypedArray $r14;
        float $f0;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $r1 := @parameter0: android.view.View;

        $i0 = <android.support.v7.appcompat.R$id: int decor_content_parent>;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.View findViewById(int)>($i0);

        $r4 = (android.support.v7.internal.widget.ActionBarOverlayLayout) $r3;

        r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout> = $r4;

        $r4 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        if $r4 == null goto label01;

        $r4 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        virtualinvoke $r4.<android.support.v7.internal.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(android.support.v7.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)>(r0);

     label01:
        $i0 = <android.support.v7.appcompat.R$id: int action_bar>;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.View findViewById(int)>($i0);

        $r5 = specialinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar getDecorToolbar(android.view.View)>($r3);

        r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar> = $r5;

        $i0 = <android.support.v7.appcompat.R$id: int action_context_bar>;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.View findViewById(int)>($i0);

        $r6 = (android.support.v7.internal.widget.ActionBarContextView) $r3;

        r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContextView mContextView> = $r6;

        $i0 = <android.support.v7.appcompat.R$id: int action_bar_container>;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.View findViewById(int)>($i0);

        $r7 = (android.support.v7.internal.widget.ActionBarContainer) $r3;

        r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView> = $r7;

        $i0 = <android.support.v7.appcompat.R$id: int split_action_bar>;

        $r1 = virtualinvoke $r1.<android.view.View: android.view.View findViewById(int)>($i0);

        $r7 = (android.support.v7.internal.widget.ActionBarContainer) $r1;

        r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView> = $r7;

        $r5 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;

        if $r5 == null goto label02;

        $r6 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContextView mContextView>;

        if $r6 == null goto label02;

        $r7 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;

        if $r7 != null goto label03;

     label02:
        $r8 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getSimpleName()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can only be used ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("with a compatible window decor layout");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r8;

     label03:
        $r5 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;

        $r12 = interfaceinvoke $r5.<android.support.v7.internal.widget.DecorToolbar: android.content.Context getContext()>();

        r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mContext> = $r12;

        $r5 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;

        $z0 = interfaceinvoke $r5.<android.support.v7.internal.widget.DecorToolbar: boolean isSplit()>();

        if $z0 == 0 goto label11;

        $b1 = 1;

     label04:
        r0.<android.support.v7.internal.app.WindowDecorActionBar: int mContextDisplayMode> = $b1;

        $r5 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;

        $i0 = interfaceinvoke $r5.<android.support.v7.internal.widget.DecorToolbar: int getDisplayOptions()>();

        $i0 = $i0 & 4;

        if $i0 == 0 goto label12;

        $z0 = 1;

     label05:
        if $z0 == 0 goto label06;

        r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mDisplayHomeAsUpSet> = 1;

     label06:
        $r12 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mContext>;

        $r13 = staticinvoke <android.support.v7.internal.view.ActionBarPolicy: android.support.v7.internal.view.ActionBarPolicy get(android.content.Context)>($r12);

        $z1 = virtualinvoke $r13.<android.support.v7.internal.view.ActionBarPolicy: boolean enableHomeButtonByDefault()>();

        if $z1 != 0 goto label07;

        if $z0 == 0 goto label13;

     label07:
        $z0 = 1;

     label08:
        virtualinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: void setHomeButtonEnabled(boolean)>($z0);

        $z0 = virtualinvoke $r13.<android.support.v7.internal.view.ActionBarPolicy: boolean hasEmbeddedTabs()>();

        specialinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: void setHasEmbeddedTabs(boolean)>($z0);

        $r12 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mContext>;

        $r2 = <android.support.v7.appcompat.R$styleable: int[] ActionBar>;

        $i0 = <android.support.v7.appcompat.R$attr: int actionBarStyle>;

        $r14 = virtualinvoke $r12.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, $r2, $i0, 0);

        $i0 = <android.support.v7.appcompat.R$styleable: int ActionBar_hideOnContentScroll>;

        $z0 = virtualinvoke $r14.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 0);

        if $z0 == 0 goto label09;

        virtualinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: void setHideOnContentScrollEnabled(boolean)>(1);

     label09:
        $i0 = <android.support.v7.appcompat.R$styleable: int ActionBar_elevation>;

        $i0 = virtualinvoke $r14.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i0, 0);

        if $i0 == 0 goto label10;

        $f0 = (float) $i0;

        virtualinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: void setElevation(float)>($f0);

     label10:
        virtualinvoke $r14.<android.content.res.TypedArray: void recycle()>();

        return;

     label11:
        $b1 = 0;

        goto label04;

     label12:
        $z0 = 0;

        goto label05;

     label13:
        $z0 = 0;

        goto label08;
    }
    private void setHasEmbeddedTabs(boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        boolean $z0, $z1, $z2;
        int $i0;
        android.support.v7.internal.widget.DecorToolbar $r1;
        android.support.v7.internal.widget.ActionBarContainer $r2;
        android.support.v7.internal.widget.ScrollingTabContainerView $r3;
        android.support.v7.internal.widget.ActionBarOverlayLayout $r4;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $z0 := @parameter0: boolean;

        $z1 = 1;

        r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHasEmbeddedTabs> = $z0;

        $z0 = r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;

        if $z0 != 0 goto label06;

        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: void setEmbeddedTabView(android.support.v7.internal.widget.ScrollingTabContainerView)>(null);

        $r2 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;

        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $r2.<android.support.v7.internal.widget.ActionBarContainer: void setTabContainer(android.support.v7.internal.widget.ScrollingTabContainerView)>($r3);

     label01:
        $i0 = virtualinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: int getNavigationMode()>();

        if $i0 != 2 goto label07;

        $z0 = 1;

     label02:
        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView>;

        if $r3 == null goto label03;

        if $z0 == 0 goto label08;

        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $r3.<android.support.v7.internal.widget.ScrollingTabContainerView: void setVisibility(int)>(0);

        $r4 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        if $r4 == null goto label03;

        $r4 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        staticinvoke <android.support.v4.view.ViewCompat: void requestApplyInsets(android.view.View)>($r4);

     label03:
        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;

        $z2 = r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;

        if $z2 != 0 goto label09;

        if $z0 == 0 goto label09;

        $z2 = 1;

     label04:
        interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: void setCollapsible(boolean)>($z2);

        $r4 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        $z2 = r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;

        if $z2 != 0 goto label10;

        if $z0 == 0 goto label10;

     label05:
        virtualinvoke $r4.<android.support.v7.internal.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)>($z1);

        return;

     label06:
        $r2 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r2.<android.support.v7.internal.widget.ActionBarContainer: void setTabContainer(android.support.v7.internal.widget.ScrollingTabContainerView)>(null);

        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;

        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView>;

        interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: void setEmbeddedTabView(android.support.v7.internal.widget.ScrollingTabContainerView)>($r3);

        goto label01;

     label07:
        $z0 = 0;

        goto label02;

     label08:
        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $r3.<android.support.v7.internal.widget.ScrollingTabContainerView: void setVisibility(int)>(8);

        goto label03;

     label09:
        $z2 = 0;

        goto label04;

     label10:
        $z1 = 0;

        goto label05;
    }
    private void showForActionMode()
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        boolean $z0;
        android.support.v7.internal.widget.ActionBarOverlayLayout $r1;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $z0 = r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mShowingForMode>;

        if $z0 != 0 goto label2;

        r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mShowingForMode> = 1;

        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        virtualinvoke $r1.<android.support.v7.internal.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)>(1);

     label1:
        specialinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: void updateVisibility(boolean)>(0);

     label2:
        return;
    }
    private void updateVisibility(boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $z0 := @parameter0: boolean;

        $z3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHiddenByApp>;

        $z1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHiddenBySystem>;

        $z2 = r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mShowingForMode>;

        $z1 = staticinvoke <android.support.v7.internal.app.WindowDecorActionBar: boolean checkShowingFlags(boolean,boolean,boolean)>($z3, $z1, $z2);

        if $z1 == 0 goto label1;

        $z1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mNowShowing>;

        if $z1 != 0 goto label2;

        r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mNowShowing> = 1;

        virtualinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: void doShow(boolean)>($z0);

        return;

     label1:
        $z1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mNowShowing>;

        if $z1 == 0 goto label2;

        r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mNowShowing> = 0;

        virtualinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: void doHide(boolean)>($z0);

     label2:
        return;
    }
    public void addTab(android.support.v7.app.ActionBar$Tab)
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        android.support.v7.app.ActionBar$Tab $r1;
        boolean $z0;
        java.util.ArrayList $r2;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $r1 := @parameter0: android.support.v7.app.ActionBar$Tab;

        $r2 = r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        virtualinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: void addTab(android.support.v7.app.ActionBar$Tab,boolean)>($r1, $z0);

        return;
    }
    public void addTab(android.support.v7.app.ActionBar$Tab, boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        android.support.v7.app.ActionBar$Tab $r1;
        boolean $z0;
        int $i0;
        android.support.v7.internal.widget.ScrollingTabContainerView $r2;
        java.util.ArrayList $r3;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $r1 := @parameter0: android.support.v7.app.ActionBar$Tab;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: void ensureTabsExist()>();

        $r2 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $r2.<android.support.v7.internal.widget.ScrollingTabContainerView: void addTab(android.support.v7.app.ActionBar$Tab,boolean)>($r1, $z0);

        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        specialinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: void configureTab(android.support.v7.app.ActionBar$Tab,int)>($r1, $i0);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: void selectTab(android.support.v7.app.ActionBar$Tab)>($r1);

     label1:
        return;
    }
    public void animateToMode(boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        boolean $z0;
        android.support.v7.internal.widget.DecorToolbar $r1;
        int $i0, $i1;
        android.support.v7.internal.widget.ActionBarContextView $r2;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $z0 := @parameter0: boolean;

        $i0 = 0;

        if $z0 == 0 goto label4;

        specialinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: void showForActionMode()>();

     label1:
        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;

        if $z0 == 0 goto label5;

        $i1 = 8;

     label2:
        interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: void animateToVisibility(int)>($i1);

        $r2 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContextView mContextView>;

        if $z0 == 0 goto label6;

     label3:
        virtualinvoke $r2.<android.support.v7.internal.widget.ActionBarContextView: void animateToVisibility(int)>($i0);

        return;

     label4:
        specialinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: void hideForActionMode()>();

        goto label1;

     label5:
        $i1 = 0;

        goto label2;

     label6:
        $i0 = 8;

        goto label3;
    }
    public boolean collapseActionView()
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        boolean $z0;
        android.support.v7.internal.widget.DecorToolbar $r1;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;

        $z0 = interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: boolean hasExpandedActionView()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: void collapseActionView()>();

        return 1;

     label1:
        return 0;
    }
    void completeDeferredDestroyActionMode()
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        android.support.v7.view.ActionMode $r1;
        android.support.v7.view.ActionMode$Callback $r2;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $r2 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.view.ActionMode$Callback mDeferredModeDestroyCallback>;

        if $r2 == null goto label1;

        $r2 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.view.ActionMode$Callback mDeferredModeDestroyCallback>;

        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.view.ActionMode mDeferredDestroyActionMode>;

        interfaceinvoke $r2.<android.support.v7.view.ActionMode$Callback: void onDestroyActionMode(android.support.v7.view.ActionMode)>($r1);

        r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.view.ActionMode mDeferredDestroyActionMode> = null;

        r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.view.ActionMode$Callback mDeferredModeDestroyCallback> = null;

     label1:
        return;
    }
    public void dispatchMenuVisibilityChanged(boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        boolean $z0, $z1;
        java.util.ArrayList $r1;
        int $i0, i1;
        java.lang.Object $r2;
        android.support.v7.app.ActionBar$OnMenuVisibilityListener $r3;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $z0 := @parameter0: boolean;

        $z1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mLastMenuVisibility>;

        if $z0 != $z1 goto label1;

        return;

     label1:
        r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mLastMenuVisibility> = $z0;

        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label2:
        if i1 >= $i0 goto label3;

        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r3 = (android.support.v7.app.ActionBar$OnMenuVisibilityListener) $r2;

        interfaceinvoke $r3.<android.support.v7.app.ActionBar$OnMenuVisibilityListener: void onMenuVisibilityChanged(boolean)>($z0);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }
    public void doHide(boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        boolean $z0, $z1;
        android.support.v7.internal.view.ViewPropertyAnimatorCompatSet r1;
        int[] r2;
        int $i0;
        android.support.v7.internal.widget.ActionBarContainer $r3;
        float f0, $f1;
        android.support.v4.view.ViewPropertyAnimatorCompat $r4;
        android.support.v4.view.ViewPropertyAnimatorUpdateListener $r5;
        android.view.View $r6;
        android.content.Context $r7;
        android.view.animation.Interpolator $r8;
        android.support.v4.view.ViewPropertyAnimatorListener $r9;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $z0 := @parameter0: boolean;

        r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim>;

        if r1 == null goto label1;

        r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim>;

        virtualinvoke r1.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: void cancel()>();

     label1:
        $i0 = r0.<android.support.v7.internal.app.WindowDecorActionBar: int mCurWindowVisibility>;

        if $i0 != 0 goto label6;

        $z1 = <android.support.v7.internal.app.WindowDecorActionBar: boolean ALLOW_SHOW_HIDE_ANIMATIONS>;

        if $z1 == 0 goto label6;

        $z1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mShowHideAnimationEnabled>;

        if $z1 != 0 goto label2;

        if $z0 == 0 goto label6;

     label2:
        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;

        staticinvoke <android.support.v4.view.ViewCompat: void setAlpha(android.view.View,float)>($r3, 1.0F);

        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r3.<android.support.v7.internal.widget.ActionBarContainer: void setTransitioning(boolean)>(1);

        r1 = new android.support.v7.internal.view.ViewPropertyAnimatorCompatSet;

        specialinvoke r1.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: void <init>()>();

        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;

        $i0 = virtualinvoke $r3.<android.support.v7.internal.widget.ActionBarContainer: int getHeight()>();

        $i0 = neg $i0;

        f0 = (float) $i0;

        if $z0 == 0 goto label3;

        r2 = newarray (int)[2];

        r2[0] = 0;

        r2[1] = 0;

        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r3.<android.support.v7.internal.widget.ActionBarContainer: void getLocationInWindow(int[])>(r2);

        $i0 = r2[1];

        $f1 = (float) $i0;

        f0 = f0 - $f1;

     label3:
        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;

        $r4 = staticinvoke <android.support.v4.view.ViewCompat: android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r3);

        $r4 = virtualinvoke $r4.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat translationY(float)>(f0);

        $r5 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v4.view.ViewPropertyAnimatorUpdateListener mUpdateListener>;

        virtualinvoke $r4.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setUpdateListener(android.support.v4.view.ViewPropertyAnimatorUpdateListener)>($r5);

        virtualinvoke r1.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet play(android.support.v4.view.ViewPropertyAnimatorCompat)>($r4);

        $z0 = r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mContentAnimations>;

        if $z0 == 0 goto label4;

        $r6 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.view.View mContentView>;

        if $r6 == null goto label4;

        $r6 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.view.View mContentView>;

        $r4 = staticinvoke <android.support.v4.view.ViewCompat: android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r6);

        $r4 = virtualinvoke $r4.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat translationY(float)>(f0);

        virtualinvoke r1.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet play(android.support.v4.view.ViewPropertyAnimatorCompat)>($r4);

     label4:
        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;

        if $r3 == null goto label5;

        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;

        $i0 = virtualinvoke $r3.<android.support.v7.internal.widget.ActionBarContainer: int getVisibility()>();

        if $i0 != 0 goto label5;

        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;

        staticinvoke <android.support.v4.view.ViewCompat: void setAlpha(android.view.View,float)>($r3, 1.0F);

        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;

        $r4 = staticinvoke <android.support.v4.view.ViewCompat: android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r3);

        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;

        $i0 = virtualinvoke $r3.<android.support.v7.internal.widget.ActionBarContainer: int getHeight()>();

        f0 = (float) $i0;

        $r4 = virtualinvoke $r4.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat translationY(float)>(f0);

        virtualinvoke r1.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet play(android.support.v4.view.ViewPropertyAnimatorCompat)>($r4);

     label5:
        $r7 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mContext>;

        $r8 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>($r7, 17432581);

        virtualinvoke r1.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator)>($r8);

        virtualinvoke r1.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet setDuration(long)>(250L);

        $r9 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v4.view.ViewPropertyAnimatorListener mHideListener>;

        virtualinvoke r1.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet setListener(android.support.v4.view.ViewPropertyAnimatorListener)>($r9);

        r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim> = r1;

        virtualinvoke r1.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: void start()>();

        return;

     label6:
        $r9 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v4.view.ViewPropertyAnimatorListener mHideListener>;

        interfaceinvoke $r9.<android.support.v4.view.ViewPropertyAnimatorListener: void onAnimationEnd(android.view.View)>(null);

        return;
    }
    public void doShow(boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        boolean $z0, $z1;
        android.support.v7.internal.view.ViewPropertyAnimatorCompatSet r1;
        int[] r2;
        android.support.v7.internal.widget.ActionBarContainer $r3, $r7;
        int $i0;
        float f0, $f1;
        android.support.v4.view.ViewPropertyAnimatorCompat $r4;
        android.support.v4.view.ViewPropertyAnimatorUpdateListener $r5;
        android.view.View $r6;
        android.content.Context $r8;
        android.view.animation.Interpolator $r9;
        android.support.v4.view.ViewPropertyAnimatorListener $r10;
        android.support.v7.internal.widget.ActionBarOverlayLayout $r11;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $z0 := @parameter0: boolean;

        r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim>;

        if r1 == null goto label01;

        r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim>;

        virtualinvoke r1.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: void cancel()>();

     label01:
        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r3.<android.support.v7.internal.widget.ActionBarContainer: void setVisibility(int)>(0);

        $i0 = r0.<android.support.v7.internal.app.WindowDecorActionBar: int mCurWindowVisibility>;

        if $i0 != 0 goto label07;

        $z1 = <android.support.v7.internal.app.WindowDecorActionBar: boolean ALLOW_SHOW_HIDE_ANIMATIONS>;

        if $z1 == 0 goto label07;

        $z1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mShowHideAnimationEnabled>;

        if $z1 != 0 goto label02;

        if $z0 == 0 goto label07;

     label02:
        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;

        staticinvoke <android.support.v4.view.ViewCompat: void setTranslationY(android.view.View,float)>($r3, 0.0F);

        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;

        $i0 = virtualinvoke $r3.<android.support.v7.internal.widget.ActionBarContainer: int getHeight()>();

        $i0 = neg $i0;

        f0 = (float) $i0;

        if $z0 == 0 goto label03;

        r2 = newarray (int)[2];

        r2[0] = 0;

        r2[1] = 0;

        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r3.<android.support.v7.internal.widget.ActionBarContainer: void getLocationInWindow(int[])>(r2);

        $i0 = r2[1];

        $f1 = (float) $i0;

        f0 = f0 - $f1;

     label03:
        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;

        staticinvoke <android.support.v4.view.ViewCompat: void setTranslationY(android.view.View,float)>($r3, f0);

        r1 = new android.support.v7.internal.view.ViewPropertyAnimatorCompatSet;

        specialinvoke r1.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: void <init>()>();

        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;

        $r4 = staticinvoke <android.support.v4.view.ViewCompat: android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r3);

        $r4 = virtualinvoke $r4.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat translationY(float)>(0.0F);

        $r5 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v4.view.ViewPropertyAnimatorUpdateListener mUpdateListener>;

        virtualinvoke $r4.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setUpdateListener(android.support.v4.view.ViewPropertyAnimatorUpdateListener)>($r5);

        virtualinvoke r1.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet play(android.support.v4.view.ViewPropertyAnimatorCompat)>($r4);

        $z0 = r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mContentAnimations>;

        if $z0 == 0 goto label04;

        $r6 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.view.View mContentView>;

        if $r6 == null goto label04;

        $r6 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.view.View mContentView>;

        staticinvoke <android.support.v4.view.ViewCompat: void setTranslationY(android.view.View,float)>($r6, f0);

        $r6 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.view.View mContentView>;

        $r4 = staticinvoke <android.support.v4.view.ViewCompat: android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r6);

        $r4 = virtualinvoke $r4.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat translationY(float)>(0.0F);

        virtualinvoke r1.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet play(android.support.v4.view.ViewPropertyAnimatorCompat)>($r4);

     label04:
        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;

        if $r3 == null goto label05;

        $i0 = r0.<android.support.v7.internal.app.WindowDecorActionBar: int mContextDisplayMode>;

        if $i0 != 1 goto label05;

        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;

        $r7 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;

        $i0 = virtualinvoke $r7.<android.support.v7.internal.widget.ActionBarContainer: int getHeight()>();

        f0 = (float) $i0;

        staticinvoke <android.support.v4.view.ViewCompat: void setTranslationY(android.view.View,float)>($r3, f0);

        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;

        virtualinvoke $r3.<android.support.v7.internal.widget.ActionBarContainer: void setVisibility(int)>(0);

        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;

        $r4 = staticinvoke <android.support.v4.view.ViewCompat: android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r3);

        $r4 = virtualinvoke $r4.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat translationY(float)>(0.0F);

        virtualinvoke r1.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet play(android.support.v4.view.ViewPropertyAnimatorCompat)>($r4);

     label05:
        $r8 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mContext>;

        $r9 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>($r8, 17432582);

        virtualinvoke r1.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator)>($r9);

        virtualinvoke r1.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet setDuration(long)>(250L);

        $r10 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v4.view.ViewPropertyAnimatorListener mShowListener>;

        virtualinvoke r1.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet setListener(android.support.v4.view.ViewPropertyAnimatorListener)>($r10);

        r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim> = r1;

        virtualinvoke r1.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: void start()>();

     label06:
        $r11 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        if $r11 == null goto label10;

        $r11 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        staticinvoke <android.support.v4.view.ViewCompat: void requestApplyInsets(android.view.View)>($r11);

        return;

     label07:
        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;

        staticinvoke <android.support.v4.view.ViewCompat: void setAlpha(android.view.View,float)>($r3, 1.0F);

        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;

        staticinvoke <android.support.v4.view.ViewCompat: void setTranslationY(android.view.View,float)>($r3, 0.0F);

        $z0 = r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mContentAnimations>;

        if $z0 == 0 goto label08;

        $r6 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.view.View mContentView>;

        if $r6 == null goto label08;

        $r6 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.view.View mContentView>;

        staticinvoke <android.support.v4.view.ViewCompat: void setTranslationY(android.view.View,float)>($r6, 0.0F);

     label08:
        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;

        if $r3 == null goto label09;

        $i0 = r0.<android.support.v7.internal.app.WindowDecorActionBar: int mContextDisplayMode>;

        if $i0 != 1 goto label09;

        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;

        staticinvoke <android.support.v4.view.ViewCompat: void setAlpha(android.view.View,float)>($r3, 1.0F);

        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;

        staticinvoke <android.support.v4.view.ViewCompat: void setTranslationY(android.view.View,float)>($r3, 0.0F);

        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;

        virtualinvoke $r3.<android.support.v7.internal.widget.ActionBarContainer: void setVisibility(int)>(0);

     label09:
        $r10 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v4.view.ViewPropertyAnimatorListener mShowListener>;

        interfaceinvoke $r10.<android.support.v4.view.ViewPropertyAnimatorListener: void onAnimationEnd(android.view.View)>(null);

        goto label06;

     label10:
        return;
    }
    public void enableContentAnimations(boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        boolean $z0;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $z0 := @parameter0: boolean;

        r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mContentAnimations> = $z0;

        return;
    }
    public int getDisplayOptions()
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        int $i0;
        android.support.v7.internal.widget.DecorToolbar $r1;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;

        $i0 = interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: int getDisplayOptions()>();

        return $i0;
    }
    public int getNavigationMode()
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        int $i0;
        android.support.v7.internal.widget.DecorToolbar $r1;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;

        $i0 = interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: int getNavigationMode()>();

        return $i0;
    }
    public int getSelectedNavigationIndex()
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        android.support.v7.internal.widget.DecorToolbar $r1;
        int $i0;
        android.support.v7.internal.app.WindowDecorActionBar$TabImpl $r2;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;

        $i0 = interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: int getNavigationMode()>();

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label2;
            default: goto label1;
        };

     label1:
        return -1;

     label2:
        $r2 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        if $r2 == null goto label4;

        $r2 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        $i0 = virtualinvoke $r2.<android.support.v7.internal.app.WindowDecorActionBar$TabImpl: int getPosition()>();

        return $i0;

     label3:
        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;

        $i0 = interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: int getDropdownSelectedPosition()>();

        return $i0;

     label4:
        return -1;
    }
    public android.support.v7.app.ActionBar$Tab getTabAt(int)
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        int $i0;
        java.lang.Object $r1;
        java.util.ArrayList $r2;
        android.support.v7.app.ActionBar$Tab $r3;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $i0 := @parameter0: int;

        $r2 = r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $r1 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (android.support.v7.app.ActionBar$Tab) $r1;

        return $r3;
    }
    public android.content.Context getThemedContext()
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        android.util.TypedValue r1;
        int i0;
        android.content.res.Resources$Theme $r2;
        android.content.Context $r3;
        android.view.ContextThemeWrapper $r4;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mThemedContext>;

        if $r3 != null goto label1;

        r1 = new android.util.TypedValue;

        specialinvoke r1.<android.util.TypedValue: void <init>()>();

        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mContext>;

        $r2 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        i0 = <android.support.v7.appcompat.R$attr: int actionBarWidgetTheme>;

        virtualinvoke $r2.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(i0, r1, 1);

        i0 = r1.<android.util.TypedValue: int resourceId>;

        if i0 == 0 goto label2;

        $r4 = new android.view.ContextThemeWrapper;

        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mContext>;

        specialinvoke $r4.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>($r3, i0);

        r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mThemedContext> = $r4;

     label1:
        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mThemedContext>;

        return $r3;

     label2:
        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mContext>;

        r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mThemedContext> = $r3;

        goto label1;
    }
    public void hideForSystem()
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        boolean $z0;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $z0 = r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHiddenBySystem>;

        if $z0 != 0 goto label1;

        r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHiddenBySystem> = 1;

        specialinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: void updateVisibility(boolean)>(1);

     label1:
        return;
    }
    public android.support.v7.app.ActionBar$Tab newTab()
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        android.support.v7.internal.app.WindowDecorActionBar$TabImpl $r1;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $r1 = new android.support.v7.internal.app.WindowDecorActionBar$TabImpl;

        specialinvoke $r1.<android.support.v7.internal.app.WindowDecorActionBar$TabImpl: void <init>(android.support.v7.internal.app.WindowDecorActionBar)>(r0);

        return $r1;
    }
    public void onConfigurationChanged(android.content.res.Configuration)
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        android.content.res.Configuration $r1;
        android.content.Context $r2;
        android.support.v7.internal.view.ActionBarPolicy $r3;
        boolean $z0;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $r1 := @parameter0: android.content.res.Configuration;

        $r2 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mContext>;

        $r3 = staticinvoke <android.support.v7.internal.view.ActionBarPolicy: android.support.v7.internal.view.ActionBarPolicy get(android.content.Context)>($r2);

        $z0 = virtualinvoke $r3.<android.support.v7.internal.view.ActionBarPolicy: boolean hasEmbeddedTabs()>();

        specialinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: void setHasEmbeddedTabs(boolean)>($z0);

        return;
    }
    public void onContentScrollStarted()
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        android.support.v7.internal.view.ViewPropertyAnimatorCompatSet $r1;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim>;

        virtualinvoke $r1.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: void cancel()>();

        r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim> = null;

     label1:
        return;
    }
    public void onContentScrollStopped()
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        return;
    }
    public void onWindowVisibilityChanged(int)
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        int $i0;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $i0 := @parameter0: int;

        r0.<android.support.v7.internal.app.WindowDecorActionBar: int mCurWindowVisibility> = $i0;

        return;
    }
    public void selectTab(android.support.v7.app.ActionBar$Tab)
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        android.support.v7.app.ActionBar$Tab r1;
        int $i0, $i1;
        android.app.Activity $r2;
        boolean $z0;
        android.support.v7.internal.widget.DecorToolbar $r3;
        android.view.ViewGroup $r4;
        android.support.v4.app.FragmentActivity $r5;
        android.support.v4.app.FragmentManager $r6;
        android.support.v4.app.FragmentTransaction $r7;
        android.support.v7.internal.app.WindowDecorActionBar$TabImpl $r8;
        android.support.v7.app.ActionBar$TabListener $r9;
        android.support.v7.internal.widget.ScrollingTabContainerView $r10;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        r1 := @parameter0: android.support.v7.app.ActionBar$Tab;

        $i0 = -1;

        $i1 = virtualinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: int getNavigationMode()>();

        if $i1 == 2 goto label03;

        if r1 == null goto label02;

        $i0 = virtualinvoke r1.<android.support.v7.app.ActionBar$Tab: int getPosition()>();

     label01:
        r0.<android.support.v7.internal.app.WindowDecorActionBar: int mSavedTabPosition> = $i0;

        return;

     label02:
        $i0 = -1;

        goto label01;

     label03:
        $r2 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.app.Activity mActivity>;

        $z0 = $r2 instanceof android.support.v4.app.FragmentActivity;

        if $z0 == 0 goto label06;

        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;

        $r4 = interfaceinvoke $r3.<android.support.v7.internal.widget.DecorToolbar: android.view.ViewGroup getViewGroup()>();

        $z0 = virtualinvoke $r4.<android.view.ViewGroup: boolean isInEditMode()>();

        if $z0 != 0 goto label06;

        $r2 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.app.Activity mActivity>;

        $r5 = (android.support.v4.app.FragmentActivity) $r2;

        $r6 = virtualinvoke $r5.<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>();

        $r7 = virtualinvoke $r6.<android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()>();

        $r7 = virtualinvoke $r7.<android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction disallowAddToBackStack()>();

     label04:
        $r8 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        if $r8 != r1 goto label07;

        $r8 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        if $r8 == null goto label05;

        $r8 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        $r9 = virtualinvoke $r8.<android.support.v7.internal.app.WindowDecorActionBar$TabImpl: android.support.v7.app.ActionBar$TabListener getCallback()>();

        $r8 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        interfaceinvoke $r9.<android.support.v7.app.ActionBar$TabListener: void onTabReselected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction)>($r8, $r7);

        $r10 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView>;

        $i0 = virtualinvoke r1.<android.support.v7.app.ActionBar$Tab: int getPosition()>();

        virtualinvoke $r10.<android.support.v7.internal.widget.ScrollingTabContainerView: void animateToTab(int)>($i0);

     label05:
        if $r7 == null goto label10;

        $z0 = virtualinvoke $r7.<android.support.v4.app.FragmentTransaction: boolean isEmpty()>();

        if $z0 != 0 goto label10;

        virtualinvoke $r7.<android.support.v4.app.FragmentTransaction: int commit()>();

        return;

     label06:
        $r7 = null;

        goto label04;

     label07:
        $r10 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView>;

        if r1 == null goto label08;

        $i0 = virtualinvoke r1.<android.support.v7.app.ActionBar$Tab: int getPosition()>();

     label08:
        virtualinvoke $r10.<android.support.v7.internal.widget.ScrollingTabContainerView: void setTabSelected(int)>($i0);

        $r8 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        if $r8 == null goto label09;

        $r8 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        $r9 = virtualinvoke $r8.<android.support.v7.internal.app.WindowDecorActionBar$TabImpl: android.support.v7.app.ActionBar$TabListener getCallback()>();

        $r8 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        interfaceinvoke $r9.<android.support.v7.app.ActionBar$TabListener: void onTabUnselected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction)>($r8, $r7);

     label09:
        $r8 = (android.support.v7.internal.app.WindowDecorActionBar$TabImpl) r1;

        r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab> = $r8;

        $r8 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        if $r8 == null goto label05;

        $r8 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        $r9 = virtualinvoke $r8.<android.support.v7.internal.app.WindowDecorActionBar$TabImpl: android.support.v7.app.ActionBar$TabListener getCallback()>();

        $r8 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        interfaceinvoke $r9.<android.support.v7.app.ActionBar$TabListener: void onTabSelected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction)>($r8, $r7);

        goto label05;

     label10:
        return;
    }
    public void setDefaultDisplayHomeAsUpEnabled(boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        boolean $z0, $z1;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $z0 := @parameter0: boolean;

        $z1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mDisplayHomeAsUpSet>;

        if $z1 != 0 goto label1;

        virtualinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: void setDisplayHomeAsUpEnabled(boolean)>($z0);

     label1:
        return;
    }
    public void setDisplayHomeAsUpEnabled(boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        boolean $z0;
        int $i0;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label2;

        $i0 = 4;

     label1:
        virtualinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: void setDisplayOptions(int,int)>($i0, 4);

        return;

     label2:
        $i0 = 0;

        goto label1;
    }
    public void setDisplayOptions(int, int)
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        int $i0, $i1, $i2, $i3;
        android.support.v7.internal.widget.DecorToolbar $r1;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;

        $i2 = interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: int getDisplayOptions()>();

        $i3 = $i1 & 4;

        if $i3 == 0 goto label1;

        r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mDisplayHomeAsUpSet> = 1;

     label1:
        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;

        $i0 = $i0 & $i1;

        $i1 = $i1 ^ -1;

        $i1 = $i1 & $i2;

        $i0 = $i0 | $i1;

        interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: void setDisplayOptions(int)>($i0);

        return;
    }
    public void setElevation(float)
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        float $f0;
        android.support.v7.internal.widget.ActionBarContainer $r1;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $f0 := @parameter0: float;

        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;

        staticinvoke <android.support.v4.view.ViewCompat: void setElevation(android.view.View,float)>($r1, $f0);

        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;

        staticinvoke <android.support.v4.view.ViewCompat: void setElevation(android.view.View,float)>($r1, $f0);

     label1:
        return;
    }
    public void setHideOnContentScrollEnabled(boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        boolean $z0, $z1;
        android.support.v7.internal.widget.ActionBarOverlayLayout $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        $z1 = virtualinvoke $r1.<android.support.v7.internal.widget.ActionBarOverlayLayout: boolean isInOverlayMode()>();

        if $z1 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Action bar must be in overlay mode (Window.FEATURE_OVERLAY_ACTION_BAR) to enable hide on content scroll");

        throw $r2;

     label1:
        r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHideOnContentScroll> = $z0;

        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        virtualinvoke $r1.<android.support.v7.internal.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)>($z0);

        return;
    }
    public void setHomeButtonEnabled(boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        boolean $z0;
        android.support.v7.internal.widget.DecorToolbar $r1;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $z0 := @parameter0: boolean;

        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: void setHomeButtonEnabled(boolean)>($z0);

        return;
    }
    public void setNavigationMode(int)
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        int $i0, $i1, $i2;
        boolean $z0, $z1;
        android.support.v7.internal.widget.DecorToolbar $r1;
        android.support.v7.internal.widget.ActionBarOverlayLayout $r2;
        android.support.v7.internal.widget.ScrollingTabContainerView $r3;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $i0 := @parameter0: int;

        $z0 = 1;

        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;

        $i1 = interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: int getNavigationMode()>();

        lookupswitch($i1)
        {
            case 2: goto label6;
            default: goto label1;
        };

     label1:
        if $i1 == $i0 goto label2;

        $z1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;

        if $z1 != 0 goto label2;

        $r2 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        if $r2 == null goto label2;

        $r2 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        staticinvoke <android.support.v4.view.ViewCompat: void requestApplyInsets(android.view.View)>($r2);

     label2:
        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: void setNavigationMode(int)>($i0);

        lookupswitch($i0)
        {
            case 2: goto label7;
            default: goto label3;
        };

     label3:
        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;

        if $i0 != 2 goto label8;

        $z1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;

        if $z1 != 0 goto label8;

        $z1 = 1;

     label4:
        interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: void setCollapsible(boolean)>($z1);

        $r2 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        if $i0 != 2 goto label9;

        $z1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;

        if $z1 != 0 goto label9;

     label5:
        virtualinvoke $r2.<android.support.v7.internal.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)>($z0);

        return;

     label6:
        $i2 = virtualinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: int getSelectedNavigationIndex()>();

        r0.<android.support.v7.internal.app.WindowDecorActionBar: int mSavedTabPosition> = $i2;

        virtualinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: void selectTab(android.support.v7.app.ActionBar$Tab)>(null);

        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $r3.<android.support.v7.internal.widget.ScrollingTabContainerView: void setVisibility(int)>(8);

        goto label1;

     label7:
        specialinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: void ensureTabsExist()>();

        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $r3.<android.support.v7.internal.widget.ScrollingTabContainerView: void setVisibility(int)>(0);

        $i1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: int mSavedTabPosition>;

        if $i1 == -1 goto label3;

        $i1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: int mSavedTabPosition>;

        virtualinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: void setSelectedNavigationItem(int)>($i1);

        r0.<android.support.v7.internal.app.WindowDecorActionBar: int mSavedTabPosition> = -1;

        goto label3;

     label8:
        $z1 = 0;

        goto label4;

     label9:
        $z0 = 0;

        goto label5;
    }
    public void setSelectedNavigationItem(int)
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        int $i0, $i1;
        android.support.v7.internal.widget.DecorToolbar $r1;
        java.lang.IllegalStateException $r2;
        java.util.ArrayList $r3;
        java.lang.Object $r4;
        android.support.v7.app.ActionBar$Tab $r5;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;

        $i1 = interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: int getNavigationMode()>();

        lookupswitch($i1)
        {
            case 1: goto label3;
            case 2: goto label2;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setSelectedNavigationIndex not valid for current navigation mode");

        throw $r2;

     label2:
        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r5 = (android.support.v7.app.ActionBar$Tab) $r4;

        virtualinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: void selectTab(android.support.v7.app.ActionBar$Tab)>($r5);

        return;

     label3:
        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: void setDropdownSelectedPosition(int)>($i0);

        return;
    }
    public void setShowHideAnimationEnabled(boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        boolean $z0;
        android.support.v7.internal.view.ViewPropertyAnimatorCompatSet $r1;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $z0 := @parameter0: boolean;

        r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mShowHideAnimationEnabled> = $z0;

        if $z0 != 0 goto label1;

        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim>;

        virtualinvoke $r1.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: void cancel()>();

     label1:
        return;
    }
    public void setTitle(int)
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        int $i0;
        java.lang.String $r1;
        android.content.Context $r2;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $i0 := @parameter0: int;

        $r2 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mContext>;

        $r1 = virtualinvoke $r2.<android.content.Context: java.lang.String getString(int)>($i0);

        virtualinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: void setTitle(java.lang.CharSequence)>($r1);

        return;
    }
    public void setTitle(java.lang.CharSequence)
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        java.lang.CharSequence $r1;
        android.support.v7.internal.widget.DecorToolbar $r2;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<android.support.v7.internal.widget.DecorToolbar: void setTitle(java.lang.CharSequence)>($r1);

        return;
    }
    public void setWindowTitle(java.lang.CharSequence)
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        java.lang.CharSequence $r1;
        android.support.v7.internal.widget.DecorToolbar $r2;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<android.support.v7.internal.widget.DecorToolbar: void setWindowTitle(java.lang.CharSequence)>($r1);

        return;
    }
    public void showForSystem()
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        boolean $z0;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $z0 = r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHiddenBySystem>;

        if $z0 == 0 goto label1;

        r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHiddenBySystem> = 0;

        specialinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: void updateVisibility(boolean)>(1);

     label1:
        return;
    }
    public android.support.v7.view.ActionMode startActionMode(android.support.v7.view.ActionMode$Callback)
    {
        android.support.v7.internal.app.WindowDecorActionBar r0;
        android.support.v7.view.ActionMode$Callback $r1;
        android.support.v7.internal.app.WindowDecorActionBar$ActionModeImpl $r2;
        android.support.v7.internal.widget.ActionBarOverlayLayout $r3;
        android.support.v7.internal.widget.ActionBarContextView $r4;
        android.content.Context $r5;
        boolean $z0;
        android.support.v7.internal.widget.ActionBarContainer $r6;
        int $i0;

        r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;

        $r1 := @parameter0: android.support.v7.view.ActionMode$Callback;

        $r2 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$ActionModeImpl mActionMode>;

        if $r2 == null goto label1;

        $r2 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$ActionModeImpl mActionMode>;

        virtualinvoke $r2.<android.support.v7.internal.app.WindowDecorActionBar$ActionModeImpl: void finish()>();

     label1:
        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        virtualinvoke $r3.<android.support.v7.internal.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)>(0);

        $r4 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContextView mContextView>;

        virtualinvoke $r4.<android.support.v7.internal.widget.ActionBarContextView: void killMode()>();

        $r2 = new android.support.v7.internal.app.WindowDecorActionBar$ActionModeImpl;

        $r4 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContextView mContextView>;

        $r5 = virtualinvoke $r4.<android.support.v7.internal.widget.ActionBarContextView: android.content.Context getContext()>();

        specialinvoke $r2.<android.support.v7.internal.app.WindowDecorActionBar$ActionModeImpl: void <init>(android.support.v7.internal.app.WindowDecorActionBar,android.content.Context,android.support.v7.view.ActionMode$Callback)>(r0, $r5, $r1);

        $z0 = virtualinvoke $r2.<android.support.v7.internal.app.WindowDecorActionBar$ActionModeImpl: boolean dispatchOnCreate()>();

        if $z0 == 0 goto label3;

        virtualinvoke $r2.<android.support.v7.internal.app.WindowDecorActionBar$ActionModeImpl: void invalidate()>();

        $r4 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContextView mContextView>;

        virtualinvoke $r4.<android.support.v7.internal.widget.ActionBarContextView: void initForMode(android.support.v7.view.ActionMode)>($r2);

        virtualinvoke r0.<android.support.v7.internal.app.WindowDecorActionBar: void animateToMode(boolean)>(1);

        $r6 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;

        if $r6 == null goto label2;

        $i0 = r0.<android.support.v7.internal.app.WindowDecorActionBar: int mContextDisplayMode>;

        if $i0 != 1 goto label2;

        $r6 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;

        $i0 = virtualinvoke $r6.<android.support.v7.internal.widget.ActionBarContainer: int getVisibility()>();

        if $i0 == 0 goto label2;

        $r6 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;

        virtualinvoke $r6.<android.support.v7.internal.widget.ActionBarContainer: void setVisibility(int)>(0);

        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        if $r3 == null goto label2;

        $r3 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        staticinvoke <android.support.v4.view.ViewCompat: void requestApplyInsets(android.view.View)>($r3);

     label2:
        $r4 = r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContextView mContextView>;

        virtualinvoke $r4.<android.support.v7.internal.widget.ActionBarContextView: void sendAccessibilityEvent(int)>(32);

        r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$ActionModeImpl mActionMode> = $r2;

        return $r2;

     label3:
        return null;
    }
