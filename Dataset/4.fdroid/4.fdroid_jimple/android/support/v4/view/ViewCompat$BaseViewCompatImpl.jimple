android.support.v4.view.ViewCompat$BaseViewCompatImpl extends java.lang.Object implements android.support.v4.view.ViewCompat$ViewCompatImpl
java.util.WeakHashMap mViewPropertyAnimatorCompatMap
    void <init>()
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.v4.view.ViewCompat$BaseViewCompatImpl: java.util.WeakHashMap mViewPropertyAnimatorCompatMap> = null;

        return;
    }
    private boolean canScrollingViewScrollHorizontally(android.support.v4.view.ScrollingView, int)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;
        android.support.v4.view.ScrollingView $r1;
        int $i0, i1, $i2, $i3;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.support.v4.view.ScrollingView;

        $i0 := @parameter1: int;

        $i2 = interfaceinvoke $r1.<android.support.v4.view.ScrollingView: int computeHorizontalScrollOffset()>();

        i1 = interfaceinvoke $r1.<android.support.v4.view.ScrollingView: int computeHorizontalScrollRange()>();

        $i3 = interfaceinvoke $r1.<android.support.v4.view.ScrollingView: int computeHorizontalScrollExtent()>();

        i1 = i1 - $i3;

        if i1 != 0 goto label1;

        return 0;

     label1:
        if $i0 >= 0 goto label2;

        if $i2 > 0 goto label3;

        return 0;

     label2:
        $i0 = i1 + -1;

        if $i2 < $i0 goto label3;

        return 0;

     label3:
        return 1;
    }
    public android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;
        android.view.View $r1;
        android.support.v4.view.ViewPropertyAnimatorCompat $r2;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $r2 = new android.support.v4.view.ViewPropertyAnimatorCompat;

        specialinvoke $r2.<android.support.v4.view.ViewPropertyAnimatorCompat: void <init>(android.view.View)>($r1);

        return $r2;
    }
    public boolean canScrollHorizontally(android.view.View, int)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;
        int $i0;
        boolean $z0;
        android.view.View $r1;
        android.support.v4.view.ScrollingView $r2;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $z0 = $r1 instanceof android.support.v4.view.ScrollingView;

        if $z0 == 0 goto label1;

        $r2 = (android.support.v4.view.ScrollingView) $r1;

        $z0 = specialinvoke r0.<android.support.v4.view.ViewCompat$BaseViewCompatImpl: boolean canScrollingViewScrollHorizontally(android.support.v4.view.ScrollingView,int)>($r2, $i0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    long getFrameTime()
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        return 10L;
    }
    public int getImportantForAccessibility(android.view.View)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;
        android.view.View $r1;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        return 0;
    }
    public int getLayoutDirection(android.view.View)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;
        android.view.View $r1;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        return 0;
    }
    public int getMeasuredState(android.view.View)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;
        android.view.View $r1;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        return 0;
    }
    public int getMeasuredWidthAndState(android.view.View)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;
        android.view.View $r1;
        int $i0;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        return $i0;
    }
    public int getMinimumHeight(android.view.View)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;
        android.view.View $r1;
        int $i0;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $i0 = staticinvoke <android.support.v4.view.ViewCompatBase: int getMinimumHeight(android.view.View)>($r1);

        return $i0;
    }
    public int getOverScrollMode(android.view.View)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;
        android.view.View $r1;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        return 2;
    }
    public float getTranslationY(android.view.View)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;
        android.view.View $r1;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        return 0.0F;
    }
    public int getWindowSystemUiVisibility(android.view.View)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;
        android.view.View $r1;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        return 0;
    }
    public boolean isAttachedToWindow(android.view.View)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $z0 = staticinvoke <android.support.v4.view.ViewCompatBase: boolean isAttachedToWindow(android.view.View)>($r1);

        return $z0;
    }
    public boolean isLaidOut(android.view.View)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $z0 = staticinvoke <android.support.v4.view.ViewCompatBase: boolean isLaidOut(android.view.View)>($r1);

        return $z0;
    }
    public void jumpDrawablesToCurrentState(android.view.View)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;
        android.view.View $r1;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        return;
    }
    public android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View, android.support.v4.view.WindowInsetsCompat)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;
        android.view.View $r1;
        android.support.v4.view.WindowInsetsCompat $r2;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.support.v4.view.WindowInsetsCompat;

        return $r2;
    }
    public void postInvalidateOnAnimation(android.view.View)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;
        android.view.View $r1;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        virtualinvoke $r1.<android.view.View: void invalidate()>();

        return;
    }
    public void postOnAnimation(android.view.View, java.lang.Runnable)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;
        android.view.View $r1;
        java.lang.Runnable $r2;
        long $l0;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: java.lang.Runnable;

        $l0 = virtualinvoke r0.<android.support.v4.view.ViewCompat$BaseViewCompatImpl: long getFrameTime()>();

        virtualinvoke $r1.<android.view.View: boolean postDelayed(java.lang.Runnable,long)>($r2, $l0);

        return;
    }
    public void postOnAnimationDelayed(android.view.View, java.lang.Runnable, long)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;
        android.view.View $r1;
        java.lang.Runnable $r2;
        long $l0, $l1;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: java.lang.Runnable;

        $l0 := @parameter2: long;

        $l1 = virtualinvoke r0.<android.support.v4.view.ViewCompat$BaseViewCompatImpl: long getFrameTime()>();

        $l0 = $l1 + $l0;

        virtualinvoke $r1.<android.view.View: boolean postDelayed(java.lang.Runnable,long)>($r2, $l0);

        return;
    }
    public void requestApplyInsets(android.view.View)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;
        android.view.View $r1;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        return;
    }
    public int resolveSizeAndState(int, int, int)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;
        int $i0, $i1, $i2;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i0 = staticinvoke <android.view.View: int resolveSize(int,int)>($i0, $i1);

        return $i0;
    }
    public void setAccessibilityDelegate(android.view.View, android.support.v4.view.AccessibilityDelegateCompat)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;
        android.view.View $r1;
        android.support.v4.view.AccessibilityDelegateCompat $r2;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.support.v4.view.AccessibilityDelegateCompat;

        return;
    }
    public void setActivated(android.view.View, boolean)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        return;
    }
    public void setAlpha(android.view.View, float)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;
        android.view.View $r1;
        float $f0;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        return;
    }
    public void setElevation(android.view.View, float)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;
        android.view.View $r1;
        float $f0;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        return;
    }
    public void setImportantForAccessibility(android.view.View, int)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;
        android.view.View $r1;
        int $i0;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        return;
    }
    public void setLayerType(android.view.View, int, android.graphics.Paint)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;
        android.view.View $r1;
        int $i0;
        android.graphics.Paint $r2;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.graphics.Paint;

        return;
    }
    public void setOnApplyWindowInsetsListener(android.view.View, android.support.v4.view.OnApplyWindowInsetsListener)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;
        android.view.View $r1;
        android.support.v4.view.OnApplyWindowInsetsListener $r2;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.support.v4.view.OnApplyWindowInsetsListener;

        return;
    }
    public void setSaveFromParentEnabled(android.view.View, boolean)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        return;
    }
    public void setScaleY(android.view.View, float)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;
        android.view.View $r1;
        float $f0;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        return;
    }
    public void setTranslationX(android.view.View, float)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;
        android.view.View $r1;
        float $f0;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        return;
    }
    public void setTranslationY(android.view.View, float)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl r0;
        android.view.View $r1;
        float $f0;

        r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        return;
    }
