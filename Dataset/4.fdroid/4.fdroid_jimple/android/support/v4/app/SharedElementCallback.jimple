android.support.v4.app.SharedElementCallback extends java.lang.Object
private static int MAX_IMAGE_SIZE
private android.graphics.Matrix mTempMatrix
    static void <clinit>()
    {
        <android.support.v4.app.SharedElementCallback: int MAX_IMAGE_SIZE> = 1048576;

        return;
    }
    private static android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable)
    {
        int i0, i1, i2, i3, i4, i5;
        android.graphics.Canvas r0;
        android.graphics.drawable.Drawable r1;
        float $f0, $f1;
        boolean $z0;
        byte $b6;
        android.graphics.drawable.BitmapDrawable r2;
        android.graphics.Bitmap $r3;
        android.graphics.Bitmap$Config $r4;
        android.graphics.Rect $r5;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        i1 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i0 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        if i1 <= 0 goto label1;

        if i0 > 0 goto label2;

     label1:
        return null;

     label2:
        i2 = <android.support.v4.app.SharedElementCallback: int MAX_IMAGE_SIZE>;

        $f0 = (float) i2;

        i2 = i1 * i0;

        $f1 = (float) i2;

        $f0 = $f0 / $f1;

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>(1.0F, $f0);

        $z0 = r1 instanceof android.graphics.drawable.BitmapDrawable;

        if $z0 == 0 goto label3;

        $b6 = $f0 cmpl 1.0F;

        if $b6 != 0 goto label3;

        r2 = (android.graphics.drawable.BitmapDrawable) r1;

        $r3 = virtualinvoke r2.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>();

        return $r3;

     label3:
        $f1 = (float) i1;

        $f1 = $f1 * $f0;

        i1 = (int) $f1;

        $f1 = (float) i0;

        $f0 = $f1 * $f0;

        i0 = (int) $f0;

        $r4 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i1, i0, $r4);

        r0 = new android.graphics.Canvas;

        specialinvoke r0.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r3);

        $r5 = virtualinvoke r1.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        i3 = $r5.<android.graphics.Rect: int left>;

        i5 = $r5.<android.graphics.Rect: int top>;

        i4 = $r5.<android.graphics.Rect: int right>;

        i2 = $r5.<android.graphics.Rect: int bottom>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, i1, i0);

        virtualinvoke r1.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r0);

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i3, i5, i4, i2);

        return $r3;
    }
    public android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View, android.graphics.Matrix, android.graphics.RectF)
    {
        android.support.v4.app.SharedElementCallback r0;
        android.view.View $r1;
        android.graphics.Matrix $r2, $r14;
        android.graphics.RectF $r3;
        android.graphics.Canvas r4;
        float[] r5;
        boolean $z0;
        android.widget.ImageView r6;
        android.graphics.drawable.Drawable $r7, $r8;
        android.graphics.Bitmap $r9, $r16;
        android.os.Bundle r10;
        android.widget.ImageView$ScaleType $r11, $r13;
        java.lang.String $r12;
        float $f0, $f1, $f2;
        int $i0, $i1, $i2;
        android.graphics.Bitmap$Config $r15;

        r0 := @this: android.support.v4.app.SharedElementCallback;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Matrix;

        $r3 := @parameter2: android.graphics.RectF;

        $z0 = $r1 instanceof android.widget.ImageView;

        if $z0 == 0 goto label1;

        r6 = (android.widget.ImageView) $r1;

        $r7 = virtualinvoke r6.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        $r8 = virtualinvoke r6.<android.widget.ImageView: android.graphics.drawable.Drawable getBackground()>();

        if $r7 == null goto label1;

        if $r8 != null goto label1;

        $r9 = staticinvoke <android.support.v4.app.SharedElementCallback: android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable)>($r7);

        if $r9 == null goto label1;

        r10 = new android.os.Bundle;

        specialinvoke r10.<android.os.Bundle: void <init>()>();

        virtualinvoke r10.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("sharedElement:snapshot:bitmap", $r9);

        $r11 = virtualinvoke r6.<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()>();

        $r12 = virtualinvoke $r11.<android.widget.ImageView$ScaleType: java.lang.String toString()>();

        virtualinvoke r10.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("sharedElement:snapshot:imageScaleType", $r12);

        $r11 = virtualinvoke r6.<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()>();

        $r13 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType MATRIX>;

        if $r11 != $r13 goto label4;

        $r2 = virtualinvoke r6.<android.widget.ImageView: android.graphics.Matrix getImageMatrix()>();

        r5 = newarray (float)[9];

        virtualinvoke $r2.<android.graphics.Matrix: void getValues(float[])>(r5);

        virtualinvoke r10.<android.os.Bundle: void putFloatArray(java.lang.String,float[])>("sharedElement:snapshot:imageMatrix", r5);

        return r10;

     label1:
        $f0 = virtualinvoke $r3.<android.graphics.RectF: float width()>();

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $f0 = virtualinvoke $r3.<android.graphics.RectF: float height()>();

        $i1 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $r9 = null;

        if $i0 <= 0 goto label3;

        if $i1 <= 0 goto label3;

        $i2 = <android.support.v4.app.SharedElementCallback: int MAX_IMAGE_SIZE>;

        $f0 = (float) $i2;

        $i2 = $i0 * $i1;

        $f1 = (float) $i2;

        $f0 = $f0 / $f1;

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>(1.0F, $f0);

        $f1 = (float) $i0;

        $f1 = $f1 * $f0;

        $i0 = (int) $f1;

        $f1 = (float) $i1;

        $f1 = $f1 * $f0;

        $i1 = (int) $f1;

        $r14 = r0.<android.support.v4.app.SharedElementCallback: android.graphics.Matrix mTempMatrix>;

        if $r14 != null goto label2;

        $r14 = new android.graphics.Matrix;

        specialinvoke $r14.<android.graphics.Matrix: void <init>()>();

        r0.<android.support.v4.app.SharedElementCallback: android.graphics.Matrix mTempMatrix> = $r14;

     label2:
        $r14 = r0.<android.support.v4.app.SharedElementCallback: android.graphics.Matrix mTempMatrix>;

        virtualinvoke $r14.<android.graphics.Matrix: void set(android.graphics.Matrix)>($r2);

        $r2 = r0.<android.support.v4.app.SharedElementCallback: android.graphics.Matrix mTempMatrix>;

        $f1 = $r3.<android.graphics.RectF: float left>;

        $f1 = neg $f1;

        $f2 = $r3.<android.graphics.RectF: float top>;

        $f2 = neg $f2;

        virtualinvoke $r2.<android.graphics.Matrix: boolean postTranslate(float,float)>($f1, $f2);

        $r2 = r0.<android.support.v4.app.SharedElementCallback: android.graphics.Matrix mTempMatrix>;

        virtualinvoke $r2.<android.graphics.Matrix: boolean postScale(float,float)>($f0, $f0);

        $r15 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r16 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r15);

        $r9 = $r16;

        r4 = new android.graphics.Canvas;

        specialinvoke r4.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r16);

        $r2 = r0.<android.support.v4.app.SharedElementCallback: android.graphics.Matrix mTempMatrix>;

        virtualinvoke r4.<android.graphics.Canvas: void concat(android.graphics.Matrix)>($r2);

        virtualinvoke $r1.<android.view.View: void draw(android.graphics.Canvas)>(r4);

     label3:
        return $r9;

     label4:
        return r10;
    }
    public android.view.View onCreateSnapshotView(android.content.Context, android.os.Parcelable)
    {
        android.support.v4.app.SharedElementCallback r0;
        android.content.Context $r1;
        android.os.Parcelable $r2;
        android.widget.ImageView r3, r6;
        android.graphics.Matrix r4;
        android.widget.ImageView$ScaleType $r5, $r10;
        boolean $z0;
        android.os.Bundle r7;
        android.graphics.Bitmap r8;
        java.lang.String $r9;
        float[] $r11;

        r0 := @this: android.support.v4.app.SharedElementCallback;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.os.Parcelable;

        r6 = null;

        $z0 = $r2 instanceof android.os.Bundle;

        if $z0 == 0 goto label3;

        r7 = (android.os.Bundle) $r2;

        $r2 = virtualinvoke r7.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("sharedElement:snapshot:bitmap");

        r8 = (android.graphics.Bitmap) $r2;

        if r8 != null goto label1;

        return null;

     label1:
        r3 = new android.widget.ImageView;

        specialinvoke r3.<android.widget.ImageView: void <init>(android.content.Context)>($r1);

        r6 = r3;

        virtualinvoke r3.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>(r8);

        $r9 = virtualinvoke r7.<android.os.Bundle: java.lang.String getString(java.lang.String)>("sharedElement:snapshot:imageScaleType");

        $r5 = staticinvoke <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType valueOf(java.lang.String)>($r9);

        virtualinvoke r3.<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>($r5);

        $r10 = virtualinvoke r3.<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()>();

        $r5 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType MATRIX>;

        if $r10 != $r5 goto label2;

        $r11 = virtualinvoke r7.<android.os.Bundle: float[] getFloatArray(java.lang.String)>("sharedElement:snapshot:imageMatrix");

        r4 = new android.graphics.Matrix;

        specialinvoke r4.<android.graphics.Matrix: void <init>()>();

        virtualinvoke r4.<android.graphics.Matrix: void setValues(float[])>($r11);

        virtualinvoke r3.<android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>(r4);

     label2:
        return r6;

     label3:
        $z0 = $r2 instanceof android.graphics.Bitmap;

        if $z0 == 0 goto label2;

        r8 = (android.graphics.Bitmap) $r2;

        r6 = new android.widget.ImageView;

        specialinvoke r6.<android.widget.ImageView: void <init>(android.content.Context)>($r1);

        virtualinvoke r6.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>(r8);

        goto label2;
    }
    public void onMapSharedElements(java.util.List, java.util.Map)
    {
        android.support.v4.app.SharedElementCallback r0;
        java.util.List r1;
        java.util.Map r2;

        r0 := @this: android.support.v4.app.SharedElementCallback;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.Map;

        return;
    }
    public void onRejectSharedElements(java.util.List)
    {
        android.support.v4.app.SharedElementCallback r0;
        java.util.List r1;

        r0 := @this: android.support.v4.app.SharedElementCallback;

        r1 := @parameter0: java.util.List;

        return;
    }
    public void onSharedElementEnd(java.util.List, java.util.List, java.util.List)
    {
        android.support.v4.app.SharedElementCallback r0;
        java.util.List r1, r2, r3;

        r0 := @this: android.support.v4.app.SharedElementCallback;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        return;
    }
    public void onSharedElementStart(java.util.List, java.util.List, java.util.List)
    {
        android.support.v4.app.SharedElementCallback r0;
        java.util.List r1, r2, r3;

        r0 := @this: android.support.v4.app.SharedElementCallback;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        return;
    }
