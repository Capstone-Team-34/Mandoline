javax.jmdns.ServiceInfo extends java.lang.Object implements java.lang.Cloneable
public static final byte[] NO_VALUE
    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[0];

        <javax.jmdns.ServiceInfo: byte[] NO_VALUE> = $r0;

        return;
    }
    public void <init>()
    {
        javax.jmdns.ServiceInfo r0;

        r0 := @this: javax.jmdns.ServiceInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static javax.jmdns.ServiceInfo create(java.lang.String, java.lang.String, int, int, int, java.util.Map)
    {
        java.lang.String $r0, $r1;
        int $i0, $i1, $i2;
        java.util.Map r2;
        javax.jmdns.impl.ServiceInfoImpl $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        r2 := @parameter5: java.util.Map;

        $r3 = new javax.jmdns.impl.ServiceInfoImpl;

        specialinvoke $r3.<javax.jmdns.impl.ServiceInfoImpl: void <init>(java.lang.String,java.lang.String,java.lang.String,int,int,int,boolean,java.util.Map)>($r0, $r1, "", $i0, $i1, $i2, 0, r2);

        return $r3;
    }
    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        javax.jmdns.ServiceInfo r0;

        r0 := @this: javax.jmdns.ServiceInfo;

        r0 = virtualinvoke r0.<javax.jmdns.ServiceInfo: javax.jmdns.ServiceInfo clone()>();

        return r0;
    }
    public javax.jmdns.ServiceInfo clone()
    {
        javax.jmdns.ServiceInfo r0;
        java.lang.CloneNotSupportedException r1;
        java.lang.Object $r2;

        r0 := @this: javax.jmdns.ServiceInfo;

     label1:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

     label2:
        r0 = (javax.jmdns.ServiceInfo) $r2;

        return r0;

     label3:
        r1 := @caughtexception;

        return null;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }
public abstract java.lang.String getApplication() { 
// no body
} 
public abstract java.lang.String getDomain() { 
// no body
} 
public abstract java.net.Inet4Address[] getInet4Addresses() { 
// no body
} 
public abstract java.net.Inet6Address[] getInet6Addresses() { 
// no body
} 
public abstract java.lang.String getKey() { 
// no body
} 
public abstract java.lang.String getName() { 
// no body
} 
public abstract int getPort() { 
// no body
} 
public abstract int getPriority() { 
// no body
} 
public abstract java.lang.String getPropertyString(java.lang.String) { 
// no body
} 
public abstract java.lang.String getProtocol() { 
// no body
} 
public abstract java.lang.String getQualifiedName() { 
// no body
} 
public abstract java.lang.String getServer() { 
// no body
} 
public abstract java.lang.String getSubtype() { 
// no body
} 
public abstract byte[] getTextBytes() { 
// no body
} 
public abstract java.lang.String getType() { 
// no body
} 
public abstract int getWeight() { 
// no body
} 
public abstract boolean hasData() { 
// no body
} 
public abstract boolean isPersistent() { 
// no body
} 
