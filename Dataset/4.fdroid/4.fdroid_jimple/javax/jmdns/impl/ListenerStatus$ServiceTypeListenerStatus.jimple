javax.jmdns.impl.ListenerStatus$ServiceTypeListenerStatus extends javax.jmdns.impl.ListenerStatus
private static java.util.logging.Logger logger
private final java.util.concurrent.ConcurrentMap _addedTypes
    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "Ljavax/jmdns/impl/ListenerStatus$ServiceTypeListenerStatus;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <javax.jmdns.impl.ListenerStatus$ServiceTypeListenerStatus: java.util.logging.Logger logger> = $r2;

        return;
    }
    void serviceTypeAdded(javax.jmdns.ServiceEvent)
    {
        javax.jmdns.impl.ListenerStatus$ServiceTypeListenerStatus r0;
        javax.jmdns.ServiceEvent $r1;
        java.util.concurrent.ConcurrentMap $r2;
        java.lang.String $r3, $r4;
        java.lang.Object $r5;
        java.util.EventListener $r6;
        javax.jmdns.ServiceTypeListener $r7;
        java.util.logging.Logger $r8;
        java.lang.StringBuilder $r9;

        r0 := @this: javax.jmdns.impl.ListenerStatus$ServiceTypeListenerStatus;

        $r1 := @parameter0: javax.jmdns.ServiceEvent;

        $r2 = r0.<javax.jmdns.impl.ListenerStatus$ServiceTypeListenerStatus: java.util.concurrent.ConcurrentMap _addedTypes>;

        $r3 = virtualinvoke $r1.<javax.jmdns.ServiceEvent: java.lang.String getType()>();

        $r4 = virtualinvoke $r1.<javax.jmdns.ServiceEvent: java.lang.String getType()>();

        $r5 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $r5 != null goto label1;

        $r6 = virtualinvoke r0.<javax.jmdns.impl.ListenerStatus$ServiceTypeListenerStatus: java.util.EventListener getListener()>();

        $r7 = (javax.jmdns.ServiceTypeListener) $r6;

        interfaceinvoke $r7.<javax.jmdns.ServiceTypeListener: void serviceTypeAdded(javax.jmdns.ServiceEvent)>($r1);

        return;

     label1:
        $r8 = <javax.jmdns.impl.ListenerStatus$ServiceTypeListenerStatus: java.util.logging.Logger logger>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service Type Added called for a service type already added: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.util.logging.Logger: void finest(java.lang.String)>($r3);

        return;
    }
    void subTypeForServiceTypeAdded(javax.jmdns.ServiceEvent)
    {
        javax.jmdns.impl.ListenerStatus$ServiceTypeListenerStatus r0;
        javax.jmdns.ServiceEvent $r1;
        java.util.concurrent.ConcurrentMap $r2;
        java.lang.String $r3, $r4;
        java.lang.Object $r5;
        java.util.EventListener $r6;
        javax.jmdns.ServiceTypeListener $r7;
        java.util.logging.Logger $r8;
        java.lang.StringBuilder $r9;

        r0 := @this: javax.jmdns.impl.ListenerStatus$ServiceTypeListenerStatus;

        $r1 := @parameter0: javax.jmdns.ServiceEvent;

        $r2 = r0.<javax.jmdns.impl.ListenerStatus$ServiceTypeListenerStatus: java.util.concurrent.ConcurrentMap _addedTypes>;

        $r3 = virtualinvoke $r1.<javax.jmdns.ServiceEvent: java.lang.String getType()>();

        $r4 = virtualinvoke $r1.<javax.jmdns.ServiceEvent: java.lang.String getType()>();

        $r5 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $r5 != null goto label1;

        $r6 = virtualinvoke r0.<javax.jmdns.impl.ListenerStatus$ServiceTypeListenerStatus: java.util.EventListener getListener()>();

        $r7 = (javax.jmdns.ServiceTypeListener) $r6;

        interfaceinvoke $r7.<javax.jmdns.ServiceTypeListener: void subTypeForServiceTypeAdded(javax.jmdns.ServiceEvent)>($r1);

        return;

     label1:
        $r8 = <javax.jmdns.impl.ListenerStatus$ServiceTypeListenerStatus: java.util.logging.Logger logger>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service Sub Type Added called for a service sub type already added: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.util.logging.Logger: void finest(java.lang.String)>($r3);

        return;
    }
    public java.lang.String toString()
    {
        javax.jmdns.impl.ListenerStatus$ServiceTypeListenerStatus r0;
        java.lang.StringBuilder r1, $r9;
        java.util.EventListener $r2;
        javax.jmdns.ServiceTypeListener $r3;
        java.lang.String $r4;
        java.util.concurrent.ConcurrentMap $r5;
        boolean $z0;
        java.util.Set $r6;
        java.util.Iterator $r7;
        java.lang.Object $r8;

        r0 := @this: javax.jmdns.impl.ListenerStatus$ServiceTypeListenerStatus;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>(int)>(2048);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[Status for ");

        $r2 = virtualinvoke r0.<javax.jmdns.impl.ListenerStatus$ServiceTypeListenerStatus: java.util.EventListener getListener()>();

        $r3 = (javax.jmdns.ServiceTypeListener) $r2;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = r0.<javax.jmdns.impl.ListenerStatus$ServiceTypeListenerStatus: java.util.concurrent.ConcurrentMap _addedTypes>;

        $z0 = interfaceinvoke $r5.<java.util.concurrent.ConcurrentMap: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" no type event ");

     label1:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r5 = r0.<javax.jmdns.impl.ListenerStatus$ServiceTypeListenerStatus: java.util.concurrent.ConcurrentMap _addedTypes>;

        $r6 = interfaceinvoke $r5.<java.util.concurrent.ConcurrentMap: java.util.Set keySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r8;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        goto label3;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        goto label1;
    }
