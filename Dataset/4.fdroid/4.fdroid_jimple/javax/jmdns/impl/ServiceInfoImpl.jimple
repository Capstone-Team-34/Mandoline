javax.jmdns.impl.ServiceInfoImpl extends javax.jmdns.ServiceInfo implements javax.jmdns.impl.DNSListener javax.jmdns.impl.DNSStatefulObject
private static java.util.logging.Logger logger
private java.lang.String _application
private java.lang.String _domain
private final java.util.Set _ipv4Addresses
private final java.util.Set _ipv6Addresses
private transient java.lang.String _key
private java.lang.String _name
private boolean _needTextAnnouncing
private boolean _persistent
private int _port
private int _priority
private java.util.Map _props
private java.lang.String _protocol
private java.lang.String _server
private final javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState _state
private java.lang.String _subtype
private byte[] _text
private int _weight
    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "Ljavax/jmdns/impl/ServiceInfoImpl;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <javax.jmdns.impl.ServiceInfoImpl: java.util.logging.Logger logger> = $r2;

        return;
    }
    public void <init>(java.lang.String, java.lang.String, java.lang.String, int, int, int, boolean, java.util.Map)
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.lang.String $r1, $r2, $r3;
        int $i0, $i1, $i2;
        boolean $z0;
        java.util.Map r4, $r5;
        byte[] $r6;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $i2 := @parameter5: int;

        $z0 := @parameter6: boolean;

        r4 := @parameter7: java.util.Map;

        $r5 = staticinvoke <javax.jmdns.impl.ServiceInfoImpl: java.util.Map decodeQualifiedNameMap(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        $r6 = staticinvoke <javax.jmdns.impl.ServiceInfoImpl: byte[] textFromProperties(java.util.Map)>(r4);

        specialinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: void <init>(java.util.Map,int,int,int,boolean,byte[])>($r5, $i0, $i1, $i2, $z0, $r6);

        return;
    }
    public void <init>(java.lang.String, java.lang.String, java.lang.String, int, int, int, boolean, byte[])
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.lang.String $r1, $r2, $r3;
        int $i0, $i1, $i2;
        boolean $z0;
        byte[] $r4;
        java.util.Map $r5;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $i2 := @parameter5: int;

        $z0 := @parameter6: boolean;

        $r4 := @parameter7: byte[];

        $r5 = staticinvoke <javax.jmdns.impl.ServiceInfoImpl: java.util.Map decodeQualifiedNameMap(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        specialinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: void <init>(java.util.Map,int,int,int,boolean,byte[])>($r5, $i0, $i1, $i2, $z0, $r4);

        return;
    }
    void <init>(java.util.Map, int, int, int, boolean, java.lang.String)
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.util.Map r1;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.String $r2;
        java.io.IOException r3;
        java.io.ByteArrayOutputStream r4;
        byte[] $r5;
        java.lang.RuntimeException $r6;
        java.lang.StringBuilder $r7;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        r1 := @parameter0: java.util.Map;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $z0 := @parameter4: boolean;

        $r2 := @parameter5: java.lang.String;

        specialinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: void <init>(java.util.Map,int,int,int,boolean,byte[])>(r1, $i0, $i1, $i2, $z0, null);

        r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _server> = $r2;

        r4 = new java.io.ByteArrayOutputStream;

     label1:
        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        specialinvoke r4.<java.io.ByteArrayOutputStream: void <init>(int)>($i0);

        staticinvoke <javax.jmdns.impl.ServiceInfoImpl: void writeUTF(java.io.OutputStream,java.lang.String)>(r4, $r2);

        $r5 = virtualinvoke r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label2:
        r0.<javax.jmdns.impl.ServiceInfoImpl: byte[] _text> = $r5;

        return;

     label3:
        r3 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected exception: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r2);

        throw $r6;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public void <init>(java.util.Map, int, int, int, boolean, java.util.Map)
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.util.Map r1, r2;
        int $i0, $i1, $i2;
        boolean $z0;
        byte[] $r3;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        r1 := @parameter0: java.util.Map;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $z0 := @parameter4: boolean;

        r2 := @parameter5: java.util.Map;

        $r3 = staticinvoke <javax.jmdns.impl.ServiceInfoImpl: byte[] textFromProperties(java.util.Map)>(r2);

        specialinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: void <init>(java.util.Map,int,int,int,boolean,byte[])>(r1, $i0, $i1, $i2, $z0, $r3);

        return;
    }
    void <init>(java.util.Map, int, int, int, boolean, byte[])
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.util.Map r1;
        int $i0, $i1, $i2;
        boolean $z0;
        byte[] $r2;
        javax.jmdns.ServiceInfo$Fields $r3;
        java.lang.Object $r4;
        java.lang.String $r5;
        javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState $r6;
        java.util.LinkedHashSet $r7;
        java.util.Set $r8;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        r1 := @parameter0: java.util.Map;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $z0 := @parameter4: boolean;

        $r2 := @parameter5: byte[];

        specialinvoke r0.<javax.jmdns.ServiceInfo: void <init>()>();

        r1 = staticinvoke <javax.jmdns.impl.ServiceInfoImpl: java.util.Map checkQualifiedNameMap(java.util.Map)>(r1);

        $r3 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Domain>;

        $r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (java.lang.String) $r4;

        r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _domain> = $r5;

        $r3 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Protocol>;

        $r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (java.lang.String) $r4;

        r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _protocol> = $r5;

        $r3 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Application>;

        $r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (java.lang.String) $r4;

        r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _application> = $r5;

        $r3 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Instance>;

        $r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (java.lang.String) $r4;

        r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _name> = $r5;

        $r3 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Subtype>;

        $r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (java.lang.String) $r4;

        r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _subtype> = $r5;

        r0.<javax.jmdns.impl.ServiceInfoImpl: int _port> = $i0;

        r0.<javax.jmdns.impl.ServiceInfoImpl: int _weight> = $i1;

        r0.<javax.jmdns.impl.ServiceInfoImpl: int _priority> = $i2;

        r0.<javax.jmdns.impl.ServiceInfoImpl: byte[] _text> = $r2;

        virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: void setNeedTextAnnouncing(boolean)>(0);

        $r6 = new javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState;

        specialinvoke $r6.<javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState: void <init>(javax.jmdns.impl.ServiceInfoImpl)>(r0);

        r0.<javax.jmdns.impl.ServiceInfoImpl: javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState _state> = $r6;

        r0.<javax.jmdns.impl.ServiceInfoImpl: boolean _persistent> = $z0;

        $r7 = new java.util.LinkedHashSet;

        specialinvoke $r7.<java.util.LinkedHashSet: void <init>()>();

        $r8 = staticinvoke <java.util.Collections: java.util.Set synchronizedSet(java.util.Set)>($r7);

        r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Set _ipv4Addresses> = $r8;

        $r7 = new java.util.LinkedHashSet;

        specialinvoke $r7.<java.util.LinkedHashSet: void <init>()>();

        $r8 = staticinvoke <java.util.Collections: java.util.Set synchronizedSet(java.util.Set)>($r7);

        r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Set _ipv6Addresses> = $r8;

        return;
    }
    void <init>(javax.jmdns.ServiceInfo)
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        javax.jmdns.ServiceInfo $r1;
        java.util.LinkedHashSet $r2;
        java.util.Set $r3;
        java.lang.String $r4;
        int $i0, i1;
        byte[] $r5;
        boolean $z0;
        java.net.Inet6Address[] $r6;
        java.net.Inet6Address r7;
        java.net.Inet4Address[] $r8;
        java.net.Inet4Address r9;
        javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState $r10;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 := @parameter0: javax.jmdns.ServiceInfo;

        specialinvoke r0.<javax.jmdns.ServiceInfo: void <init>()>();

        $r2 = new java.util.LinkedHashSet;

        specialinvoke $r2.<java.util.LinkedHashSet: void <init>()>();

        $r3 = staticinvoke <java.util.Collections: java.util.Set synchronizedSet(java.util.Set)>($r2);

        r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Set _ipv4Addresses> = $r3;

        $r2 = new java.util.LinkedHashSet;

        specialinvoke $r2.<java.util.LinkedHashSet: void <init>()>();

        $r3 = staticinvoke <java.util.Collections: java.util.Set synchronizedSet(java.util.Set)>($r2);

        r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Set _ipv6Addresses> = $r3;

        if $r1 == null goto label4;

        $r4 = virtualinvoke $r1.<javax.jmdns.ServiceInfo: java.lang.String getDomain()>();

        r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _domain> = $r4;

        $r4 = virtualinvoke $r1.<javax.jmdns.ServiceInfo: java.lang.String getProtocol()>();

        r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _protocol> = $r4;

        $r4 = virtualinvoke $r1.<javax.jmdns.ServiceInfo: java.lang.String getApplication()>();

        r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _application> = $r4;

        $r4 = virtualinvoke $r1.<javax.jmdns.ServiceInfo: java.lang.String getName()>();

        r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _name> = $r4;

        $r4 = virtualinvoke $r1.<javax.jmdns.ServiceInfo: java.lang.String getSubtype()>();

        r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _subtype> = $r4;

        $i0 = virtualinvoke $r1.<javax.jmdns.ServiceInfo: int getPort()>();

        r0.<javax.jmdns.impl.ServiceInfoImpl: int _port> = $i0;

        $i0 = virtualinvoke $r1.<javax.jmdns.ServiceInfo: int getWeight()>();

        r0.<javax.jmdns.impl.ServiceInfoImpl: int _weight> = $i0;

        $i0 = virtualinvoke $r1.<javax.jmdns.ServiceInfo: int getPriority()>();

        r0.<javax.jmdns.impl.ServiceInfoImpl: int _priority> = $i0;

        $r5 = virtualinvoke $r1.<javax.jmdns.ServiceInfo: byte[] getTextBytes()>();

        r0.<javax.jmdns.impl.ServiceInfoImpl: byte[] _text> = $r5;

        $z0 = virtualinvoke $r1.<javax.jmdns.ServiceInfo: boolean isPersistent()>();

        r0.<javax.jmdns.impl.ServiceInfoImpl: boolean _persistent> = $z0;

        $r6 = virtualinvoke $r1.<javax.jmdns.ServiceInfo: java.net.Inet6Address[] getInet6Addresses()>();

        $i0 = lengthof $r6;

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        r7 = $r6[i1];

        $r3 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Set _ipv6Addresses>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r7);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r8 = virtualinvoke $r1.<javax.jmdns.ServiceInfo: java.net.Inet4Address[] getInet4Addresses()>();

        $i0 = lengthof $r8;

        i1 = 0;

     label3:
        if i1 >= $i0 goto label4;

        r9 = $r8[i1];

        $r3 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Set _ipv4Addresses>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r9);

        i1 = i1 + 1;

        goto label3;

     label4:
        $r10 = new javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState;

        specialinvoke $r10.<javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState: void <init>(javax.jmdns.impl.ServiceInfoImpl)>(r0);

        r0.<javax.jmdns.impl.ServiceInfoImpl: javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState _state> = $r10;

        return;
    }
    protected static java.util.Map checkQualifiedNameMap(java.util.Map)
    {
        java.util.Map r0;
        java.util.HashMap r1;
        javax.jmdns.ServiceInfo$Fields $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.String $r4;
        int $i0;

        r0 := @parameter0: java.util.Map;

        r1 = new java.util.HashMap;

        specialinvoke r1.<java.util.HashMap: void <init>(int)>(5);

        $r2 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Domain>;

        $z0 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label16;

        $r2 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Domain>;

        $r3 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (java.lang.String) $r3;

     label01:
        if $r4 == null goto label02;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 != 0 goto label03;

     label02:
        $r4 = "local";

     label03:
        $r4 = staticinvoke <javax.jmdns.impl.ServiceInfoImpl: java.lang.String removeSeparators(java.lang.String)>($r4);

        $r2 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Domain>;

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r4);

        $r2 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Protocol>;

        $z0 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label17;

        $r2 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Protocol>;

        $r3 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (java.lang.String) $r3;

     label04:
        if $r4 == null goto label05;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 != 0 goto label06;

     label05:
        $r4 = "tcp";

     label06:
        $r4 = staticinvoke <javax.jmdns.impl.ServiceInfoImpl: java.lang.String removeSeparators(java.lang.String)>($r4);

        $r2 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Protocol>;

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r4);

        $r2 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Application>;

        $z0 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label18;

        $r2 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Application>;

        $r3 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (java.lang.String) $r3;

     label07:
        if $r4 == null goto label08;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 != 0 goto label09;

     label08:
        $r4 = "";

     label09:
        $r4 = staticinvoke <javax.jmdns.impl.ServiceInfoImpl: java.lang.String removeSeparators(java.lang.String)>($r4);

        $r2 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Application>;

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r4);

        $r2 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Instance>;

        $z0 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label19;

        $r2 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Instance>;

        $r3 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (java.lang.String) $r3;

     label10:
        if $r4 == null goto label11;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 != 0 goto label12;

     label11:
        $r4 = "";

     label12:
        $r4 = staticinvoke <javax.jmdns.impl.ServiceInfoImpl: java.lang.String removeSeparators(java.lang.String)>($r4);

        $r2 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Instance>;

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r4);

        $r2 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Subtype>;

        $z0 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label20;

        $r2 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Subtype>;

        $r3 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (java.lang.String) $r3;

     label13:
        if $r4 == null goto label14;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 != 0 goto label15;

     label14:
        $r4 = "";

     label15:
        $r4 = staticinvoke <javax.jmdns.impl.ServiceInfoImpl: java.lang.String removeSeparators(java.lang.String)>($r4);

        $r2 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Subtype>;

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r4);

        return r1;

     label16:
        $r4 = "local";

        goto label01;

     label17:
        $r4 = "tcp";

        goto label04;

     label18:
        $r4 = "";

        goto label07;

     label19:
        $r4 = "";

        goto label10;

     label20:
        $r4 = "";

        goto label13;
    }
    public static java.util.Map decodeQualifiedNameMap(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2;
        java.util.Map $r3;
        javax.jmdns.ServiceInfo$Fields $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 = staticinvoke <javax.jmdns.impl.ServiceInfoImpl: java.util.Map decodeQualifiedNameMapForType(java.lang.String)>($r0);

        $r4 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Instance>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r1);

        $r4 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Subtype>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r2);

        $r3 = staticinvoke <javax.jmdns.impl.ServiceInfoImpl: java.util.Map checkQualifiedNameMap(java.util.Map)>($r3);

        return $r3;
    }
    public static java.util.Map decodeQualifiedNameMapForType(java.lang.String)
    {
        java.lang.String $r0, r2, $r3, r4, r5, r6, r7, r8, r9;
        java.util.HashMap r1;
        boolean $z0;
        int $i0, $i1, $i2;
        javax.jmdns.ServiceInfo$Fields $r10;
        java.lang.StringBuilder $r11;
        byte $b3;

        $r0 := @parameter0: java.lang.String;

        r2 = $r0;

        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        r4 = $r3;

        r5 = $r3;

        r6 = "";

        r7 = "";

        r8 = "";

        r9 = "";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("in-addr.arpa");

        if $z0 != 0 goto label01;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("ip6.arpa");

        if $z0 == 0 goto label05;

     label01:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("in-addr.arpa");

        if $z0 == 0 goto label04;

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>("in-addr.arpa");

     label02:
        r8 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        r8 = staticinvoke <javax.jmdns.impl.ServiceInfoImpl: java.lang.String removeSeparators(java.lang.String)>(r8);

        r9 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        r5 = "";

     label03:
        r1 = new java.util.HashMap;

        specialinvoke r1.<java.util.HashMap: void <init>(int)>(5);

        $r10 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Domain>;

        $r0 = staticinvoke <javax.jmdns.impl.ServiceInfoImpl: java.lang.String removeSeparators(java.lang.String)>(r9);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r0);

        $r10 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Protocol>;

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r6);

        $r10 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Application>;

        $r0 = staticinvoke <javax.jmdns.impl.ServiceInfoImpl: java.lang.String removeSeparators(java.lang.String)>(r5);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r0);

        $r10 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Instance>;

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r8);

        $r10 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Subtype>;

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r7);

        return r1;

     label04:
        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>("ip6.arpa");

        goto label02;

     label05:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("_");

        if $z0 != 0 goto label06;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean contains(java.lang.CharSequence)>(".");

        if $z0 == 0 goto label06;

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(46);

        r8 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        r8 = staticinvoke <javax.jmdns.impl.ServiceInfoImpl: java.lang.String removeSeparators(java.lang.String)>(r8);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        r9 = staticinvoke <javax.jmdns.impl.ServiceInfoImpl: java.lang.String removeSeparators(java.lang.String)>($r0);

        r5 = "";

        goto label03;

     label06:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("_");

        if $z0 == 0 goto label07;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("_services");

        if $z0 == 0 goto label08;

     label07:
        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>("._");

        if $i0 <= 0 goto label08;

        r8 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i1 = $i0 + 1;

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label08;

        $i1 = $i0 + 1;

        r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i1);

        $i0 = $i0 + 1;

        r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

     label08:
        $i0 = virtualinvoke r4.<java.lang.String: int lastIndexOf(java.lang.String)>("._");

        if $i0 <= 0 goto label09;

        $i0 = $i0 + 2;

        $i1 = virtualinvoke r4.<java.lang.String: int indexOf(int,int)>(46, $i0);

        r6 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

     label09:
        $i0 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i0 <= 0 goto label12;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r0 = virtualinvoke r6.<java.lang.String: java.lang.String toLowerCase()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r0 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = virtualinvoke r4.<java.lang.String: int indexOf(java.lang.String)>($r0);

        $i1 = virtualinvoke r6.<java.lang.String: int length()>();

        $i1 = $i1 + $i0;

        $i1 = $i1 + 2;

        $i2 = virtualinvoke r4.<java.lang.String: int length()>();

        $z0 = virtualinvoke r4.<java.lang.String: boolean endsWith(java.lang.String)>(".");

        if $z0 == 0 goto label13;

        $b3 = 1;

     label10:
        $i2 = $i2 - $b3;

        if $i2 <= $i1 goto label11;

        r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2);

     label11:
        if $i0 <= 0 goto label14;

        $i0 = $i0 + -1;

        r5 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label12:
        $r0 = virtualinvoke r5.<java.lang.String: java.lang.String toLowerCase()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>("._sub");

        if $i0 <= 0 goto label03;

        $i1 = $i0 + 5;

        $r0 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        r7 = staticinvoke <javax.jmdns.impl.ServiceInfoImpl: java.lang.String removeSeparators(java.lang.String)>($r0);

        r5 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>($i1);

        goto label03;

     label13:
        $b3 = 0;

        goto label10;

     label14:
        r5 = "";

        goto label12;
    }
    private final boolean hasInetAddress()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.util.Set $r1;
        int $i0;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Set _ipv4Addresses>;

        $i0 = interfaceinvoke $r1.<java.util.Set: int size()>();

        if $i0 > 0 goto label1;

        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Set _ipv6Addresses>;

        $i0 = interfaceinvoke $r1.<java.util.Set: int size()>();

        if $i0 <= 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    private static java.lang.String removeSeparators(java.lang.String)
    {
        java.lang.String $r0, r1;
        boolean $z0;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return "";

     label1:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        r1 = $r0;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 == 0 goto label2;

        r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(1);

     label2:
        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("_");

        if $z0 == 0 goto label3;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(1);

     label3:
        $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".");

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        $r0 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        return $r0;

     label4:
        return r1;
    }
    private static byte[] textFromProperties(java.util.Map)
    {
        java.util.Map r0;
        java.io.IOException r1;
        java.io.ByteArrayOutputStream r2, r3;
        byte[] r4;
        java.util.Set $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7, r9;
        java.lang.String r8, $r12;
        int $i0;
        java.lang.StringBuilder $r10, $r14;
        java.lang.RuntimeException $r11;
        java.lang.IllegalArgumentException $r13;
        byte $b1;

        r0 := @parameter0: java.util.Map;

        r4 = null;

        if r0 == null goto label39;

        r2 = new java.io.ByteArrayOutputStream;

     label01:
        specialinvoke r2.<java.io.ByteArrayOutputStream: void <init>(int)>(256);

        $r5 = interfaceinvoke r0.<java.util.Map: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

     label03:
        if $z0 == 0 goto label38;

     label04:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

     label05:
        r8 = (java.lang.String) $r7;

     label06:
        $r7 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8);

     label07:
        r9 = $r7;

        r3 = new java.io.ByteArrayOutputStream;

     label08:
        specialinvoke r3.<java.io.ByteArrayOutputStream: void <init>(int)>(100);

        staticinvoke <javax.jmdns.impl.ServiceInfoImpl: void writeUTF(java.io.OutputStream,java.lang.String)>(r3, r8);

     label09:
        if $r7 != null goto label16;

     label10:
        r4 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label11:
        $i0 = lengthof r4;

        if $i0 <= 255 goto label33;

        r1 = new java.io.IOException;

        $r10 = new java.lang.StringBuilder;

     label12:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot have individual values larger that 255 chars. Offending value: ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

     label13:
        if r9 == null goto label30;

        r8 = "";

     label14:
        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        r8 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<java.io.IOException: void <init>(java.lang.String)>(r8);

        throw r1;

     label15:
        r1 := @caughtexception;

        $r11 = new java.lang.RuntimeException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected exception: ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        r8 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>(r8);

        throw $r11;

     label16:
        $z0 = $r7 instanceof java.lang.String;

        if $z0 == 0 goto label21;

     label17:
        virtualinvoke r3.<java.io.ByteArrayOutputStream: void write(int)>(61);

     label18:
        $r12 = (java.lang.String) $r7;

     label19:
        staticinvoke <javax.jmdns.impl.ServiceInfoImpl: void writeUTF(java.io.OutputStream,java.lang.String)>(r3, $r12);

     label20:
        goto label10;

     label21:
        $z0 = $r7 instanceof byte[];

        if $z0 == 0 goto label27;

        r4 = (byte[]) $r7;

        $i0 = lengthof r4;

        if $i0 <= 0 goto label26;

     label22:
        virtualinvoke r3.<java.io.ByteArrayOutputStream: void write(int)>(61);

     label23:
        $i0 = lengthof r4;

     label24:
        virtualinvoke r3.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r4, 0, $i0);

     label25:
        goto label10;

     label26:
        r9 = null;

        goto label10;

     label27:
        $r13 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

     label28:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid property value: ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        r8 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r8);

     label29:
        throw $r13;

     label30:
        $r14 = new java.lang.StringBuilder;

     label31:
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        r8 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

     label32:
        goto label14;

     label33:
        $i0 = lengthof r4;

        $b1 = (byte) $i0;

     label34:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>($b1);

     label35:
        $i0 = lengthof r4;

     label36:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r4, 0, $i0);

     label37:
        goto label02;

     label38:
        r4 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label39:
        if r4 == null goto label40;

        $i0 = lengthof r4;

        if $i0 <= 0 goto label40;

        return r4;

     label40:
        r4 = <javax.jmdns.impl.DNSRecord: byte[] EMPTY_TXT>;

        return r4;

        catch java.io.IOException from label01 to label03 with label15;
        catch java.io.IOException from label04 to label05 with label15;
        catch java.io.IOException from label06 to label07 with label15;
        catch java.io.IOException from label08 to label09 with label15;
        catch java.io.IOException from label10 to label11 with label15;
        catch java.io.IOException from label12 to label13 with label15;
        catch java.io.IOException from label14 to label15 with label15;
        catch java.io.IOException from label17 to label18 with label15;
        catch java.io.IOException from label19 to label20 with label15;
        catch java.io.IOException from label22 to label23 with label15;
        catch java.io.IOException from label24 to label25 with label15;
        catch java.io.IOException from label28 to label29 with label15;
        catch java.io.IOException from label31 to label32 with label15;
        catch java.io.IOException from label34 to label35 with label15;
        catch java.io.IOException from label36 to label37 with label15;
        catch java.io.IOException from label38 to label39 with label15;
    }
    static void writeUTF(java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        java.io.OutputStream $r0;
        java.lang.String $r1;
        int i0, $i1, $i3;
        char $c2;

        $r0 := @parameter0: java.io.OutputStream;

        $r1 := @parameter1: java.lang.String;

        i0 = 0;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

     label1:
        if i0 >= $i1 goto label5;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i0);

        if $c2 < 1 goto label3;

        if $c2 > 127 goto label3;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($c2);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        if $c2 <= 2047 goto label4;

        $i3 = $c2 >> 12;

        $i3 = $i3 & 15;

        $i3 = $i3 | 224;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i3);

        $i3 = $c2 >> 6;

        $i3 = $i3 & 63;

        $i3 = $i3 | 128;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i3);

        $i3 = $c2 >> 0;

        $i3 = $i3 & 63;

        $i3 = $i3 | 128;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i3);

        goto label2;

     label4:
        $i3 = $c2 >> 6;

        $i3 = $i3 & 31;

        $i3 = $i3 | 192;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i3);

        $i3 = $c2 >> 0;

        $i3 = $i3 & 63;

        $i3 = $i3 | 128;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i3);

        goto label2;

     label5:
        return;
    }
    void _setText(byte[])
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        byte[] $r1;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 := @parameter0: byte[];

        r0.<javax.jmdns.impl.ServiceInfoImpl: byte[] _text> = $r1;

        r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Map _props> = null;

        return;
    }
    void addAddress(java.net.Inet4Address)
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.net.Inet4Address $r1;
        java.util.Set $r2;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 := @parameter0: java.net.Inet4Address;

        $r2 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Set _ipv4Addresses>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return;
    }
    void addAddress(java.net.Inet6Address)
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.net.Inet6Address $r1;
        java.util.Set $r2;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 := @parameter0: java.net.Inet6Address;

        $r2 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Set _ipv6Addresses>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return;
    }
    public boolean advanceState(javax.jmdns.impl.tasks.DNSTask)
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        javax.jmdns.impl.tasks.DNSTask $r1;
        boolean $z0;
        javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState $r2;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 := @parameter0: javax.jmdns.impl.tasks.DNSTask;

        $r2 = r0.<javax.jmdns.impl.ServiceInfoImpl: javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState _state>;

        $z0 = virtualinvoke $r2.<javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState: boolean advanceState(javax.jmdns.impl.tasks.DNSTask)>($r1);

        return $z0;
    }
    public java.util.Collection answers(javax.jmdns.impl.constants.DNSRecordClass, boolean, int, javax.jmdns.impl.HostInfo)
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        javax.jmdns.impl.constants.DNSRecordClass $r1, $r4;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        javax.jmdns.impl.HostInfo $r2;
        java.util.ArrayList r3;
        java.lang.String $r5, $r7;
        javax.jmdns.impl.DNSRecord$Pointer $r6;
        javax.jmdns.impl.DNSRecord$Service $r8;
        javax.jmdns.impl.DNSRecord$Text $r9;
        byte[] $r10;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 := @parameter0: javax.jmdns.impl.constants.DNSRecordClass;

        $z0 := @parameter1: boolean;

        $i0 := @parameter2: int;

        $r2 := @parameter3: javax.jmdns.impl.HostInfo;

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        $r4 = <javax.jmdns.impl.constants.DNSRecordClass: javax.jmdns.impl.constants.DNSRecordClass CLASS_ANY>;

        if $r1 == $r4 goto label1;

        $r4 = <javax.jmdns.impl.constants.DNSRecordClass: javax.jmdns.impl.constants.DNSRecordClass CLASS_IN>;

        if $r1 != $r4 goto label3;

     label1:
        $r5 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getSubtype()>();

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i1 <= 0 goto label2;

        $r6 = new javax.jmdns.impl.DNSRecord$Pointer;

        $r5 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getTypeWithSubtype()>();

        $r1 = <javax.jmdns.impl.constants.DNSRecordClass: javax.jmdns.impl.constants.DNSRecordClass CLASS_IN>;

        $r7 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getQualifiedName()>();

        specialinvoke $r6.<javax.jmdns.impl.DNSRecord$Pointer: void <init>(java.lang.String,javax.jmdns.impl.constants.DNSRecordClass,boolean,int,java.lang.String)>($r5, $r1, 0, $i0, $r7);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r6);

     label2:
        $r6 = new javax.jmdns.impl.DNSRecord$Pointer;

        $r5 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getType()>();

        $r1 = <javax.jmdns.impl.constants.DNSRecordClass: javax.jmdns.impl.constants.DNSRecordClass CLASS_IN>;

        $r7 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getQualifiedName()>();

        specialinvoke $r6.<javax.jmdns.impl.DNSRecord$Pointer: void <init>(java.lang.String,javax.jmdns.impl.constants.DNSRecordClass,boolean,int,java.lang.String)>($r5, $r1, 0, $i0, $r7);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r8 = new javax.jmdns.impl.DNSRecord$Service;

        $r5 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getQualifiedName()>();

        $r1 = <javax.jmdns.impl.constants.DNSRecordClass: javax.jmdns.impl.constants.DNSRecordClass CLASS_IN>;

        $i3 = r0.<javax.jmdns.impl.ServiceInfoImpl: int _priority>;

        $i1 = r0.<javax.jmdns.impl.ServiceInfoImpl: int _weight>;

        $i2 = r0.<javax.jmdns.impl.ServiceInfoImpl: int _port>;

        $r7 = virtualinvoke $r2.<javax.jmdns.impl.HostInfo: java.lang.String getName()>();

        specialinvoke $r8.<javax.jmdns.impl.DNSRecord$Service: void <init>(java.lang.String,javax.jmdns.impl.constants.DNSRecordClass,boolean,int,int,int,int,java.lang.String)>($r5, $r1, $z0, $i0, $i3, $i1, $i2, $r7);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r8);

        $r9 = new javax.jmdns.impl.DNSRecord$Text;

        $r5 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getQualifiedName()>();

        $r1 = <javax.jmdns.impl.constants.DNSRecordClass: javax.jmdns.impl.constants.DNSRecordClass CLASS_IN>;

        $r10 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: byte[] getTextBytes()>();

        specialinvoke $r9.<javax.jmdns.impl.DNSRecord$Text: void <init>(java.lang.String,javax.jmdns.impl.constants.DNSRecordClass,boolean,int,byte[])>($r5, $r1, $z0, $i0, $r10);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r9);

     label3:
        return r3;
    }
    public void associateWithTask(javax.jmdns.impl.tasks.DNSTask, javax.jmdns.impl.constants.DNSState)
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        javax.jmdns.impl.tasks.DNSTask $r1;
        javax.jmdns.impl.constants.DNSState $r2;
        javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState $r3;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 := @parameter0: javax.jmdns.impl.tasks.DNSTask;

        $r2 := @parameter1: javax.jmdns.impl.constants.DNSState;

        $r3 = r0.<javax.jmdns.impl.ServiceInfoImpl: javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState _state>;

        virtualinvoke $r3.<javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState: void associateWithTask(javax.jmdns.impl.tasks.DNSTask,javax.jmdns.impl.constants.DNSState)>($r1, $r2);

        return;
    }
    public boolean cancelState()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        boolean $z0;
        javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState $r1;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl: javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState _state>;

        $z0 = virtualinvoke $r1.<javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState: boolean cancelState()>();

        return $z0;
    }
    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        javax.jmdns.impl.ServiceInfoImpl r0;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        r0 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: javax.jmdns.impl.ServiceInfoImpl clone()>();

        return r0;
    }
    public volatile javax.jmdns.ServiceInfo clone()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        r0 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: javax.jmdns.impl.ServiceInfoImpl clone()>();

        return r0;
    }
    public javax.jmdns.impl.ServiceInfoImpl clone()
    {
        javax.jmdns.impl.ServiceInfoImpl r0, r1;
        int $i0, $i1, $i2;
        boolean $z0;
        byte[] $r2;
        java.util.Map $r3;
        java.net.Inet6Address[] $r4;
        java.net.Inet6Address r5;
        java.util.Set $r6;
        java.net.Inet4Address[] $r7;
        java.net.Inet4Address r8;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        r1 = new javax.jmdns.impl.ServiceInfoImpl;

        $r3 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Map getQualifiedNameMap()>();

        $i0 = r0.<javax.jmdns.impl.ServiceInfoImpl: int _port>;

        $i1 = r0.<javax.jmdns.impl.ServiceInfoImpl: int _weight>;

        $i2 = r0.<javax.jmdns.impl.ServiceInfoImpl: int _priority>;

        $z0 = r0.<javax.jmdns.impl.ServiceInfoImpl: boolean _persistent>;

        $r2 = r0.<javax.jmdns.impl.ServiceInfoImpl: byte[] _text>;

        specialinvoke r1.<javax.jmdns.impl.ServiceInfoImpl: void <init>(java.util.Map,int,int,int,boolean,byte[])>($r3, $i0, $i1, $i2, $z0, $r2);

        $r4 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.net.Inet6Address[] getInet6Addresses()>();

        $i0 = lengthof $r4;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        r5 = $r4[$i1];

        $r6 = r1.<javax.jmdns.impl.ServiceInfoImpl: java.util.Set _ipv6Addresses>;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r7 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.net.Inet4Address[] getInet4Addresses()>();

        $i0 = lengthof $r7;

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label4;

        r8 = $r7[$i1];

        $r6 = r1.<javax.jmdns.impl.ServiceInfoImpl: java.util.Set _ipv4Addresses>;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r8);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        return r1;
    }
    public boolean equals(java.lang.Object)
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.lang.Object $r1;
        boolean $z0;
        java.lang.String $r2, $r3;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof javax.jmdns.impl.ServiceInfoImpl;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getQualifiedName()>();

        r0 = (javax.jmdns.impl.ServiceInfoImpl) $r1;

        $r3 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getQualifiedName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public java.lang.String getApplication()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.lang.String $r1;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _application>;

        if $r1 == null goto label1;

        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _application>;

        return $r1;

     label1:
        return "";
    }
    public javax.jmdns.impl.JmDNSImpl getDns()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        javax.jmdns.impl.JmDNSImpl $r1;
        javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState $r2;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r2 = r0.<javax.jmdns.impl.ServiceInfoImpl: javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState _state>;

        $r1 = virtualinvoke $r2.<javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState: javax.jmdns.impl.JmDNSImpl getDns()>();

        return $r1;
    }
    public java.lang.String getDomain()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.lang.String $r1;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _domain>;

        if $r1 == null goto label1;

        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _domain>;

        return $r1;

     label1:
        return "local";
    }
    public java.net.Inet4Address[] getInet4Addresses()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.util.Set $r1, $r2;
        int $i0;
        java.net.Inet4Address[] $r3;
        java.lang.Object[] $r4;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Set _ipv4Addresses>;

        $r2 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Set _ipv4Addresses>;

        $i0 = interfaceinvoke $r2.<java.util.Set: int size()>();

        $r3 = newarray (java.net.Inet4Address)[$i0];

        $r4 = interfaceinvoke $r1.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r3 = (java.net.Inet4Address[]) $r4;

        return $r3;
    }
    public java.net.Inet6Address[] getInet6Addresses()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.util.Set $r1, $r2;
        int $i0;
        java.net.Inet6Address[] $r3;
        java.lang.Object[] $r4;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Set _ipv6Addresses>;

        $r2 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Set _ipv6Addresses>;

        $i0 = interfaceinvoke $r2.<java.util.Set: int size()>();

        $r3 = newarray (java.net.Inet6Address)[$i0];

        $r4 = interfaceinvoke $r1.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r3 = (java.net.Inet6Address[]) $r4;

        return $r3;
    }
    public java.net.InetAddress[] getInetAddresses()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.util.ArrayList r1;
        java.util.Set $r2;
        int $i0, $i1;
        java.net.InetAddress[] $r3;
        java.lang.Object[] $r4;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        r1 = new java.util.ArrayList;

        $r2 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Set _ipv4Addresses>;

        $i0 = interfaceinvoke $r2.<java.util.Set: int size()>();

        $r2 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Set _ipv6Addresses>;

        $i1 = interfaceinvoke $r2.<java.util.Set: int size()>();

        $i0 = $i0 + $i1;

        specialinvoke r1.<java.util.ArrayList: void <init>(int)>($i0);

        $r2 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Set _ipv4Addresses>;

        interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r2);

        $r2 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Set _ipv6Addresses>;

        interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r2);

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $r3 = newarray (java.net.InetAddress)[$i0];

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r3 = (java.net.InetAddress[]) $r4;

        return $r3;
    }
    public java.lang.String getKey()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.lang.String $r1;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _key>;

        if $r1 != null goto label1;

        $r1 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getQualifiedName()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _key> = $r1;

     label1:
        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _key>;

        return $r1;
    }
    public java.lang.String getName()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.lang.String $r1;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _name>;

        if $r1 == null goto label1;

        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _name>;

        return $r1;

     label1:
        return "";
    }
    public int getPort()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        int i0;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        i0 = r0.<javax.jmdns.impl.ServiceInfoImpl: int _port>;

        return i0;
    }
    public int getPriority()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        int i0;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        i0 = r0.<javax.jmdns.impl.ServiceInfoImpl: int _priority>;

        return i0;
    }
    java.util.Map getProperties()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        int i0, $i1, $i2, $i4;
        java.util.Hashtable r1;
        byte[] r2, $r9;
        java.util.Map $r3;
        byte $b3;
        java.lang.String $r4;
        java.lang.Exception r5;
        java.util.logging.Logger $r6;
        java.util.logging.Level $r7;
        java.lang.Throwable $r8;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        entermonitor r0;

     label01:
        $r3 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Map _props>;

        if $r3 != null goto label13;

        r2 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: byte[] getTextBytes()>();

        if r2 == null goto label13;

        r1 = new java.util.Hashtable;

        specialinvoke r1.<java.util.Hashtable: void <init>()>();

     label02:
        i0 = 0;

     label03:
        r2 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: byte[] getTextBytes()>();

        $i2 = lengthof r2;

     label04:
        if i0 >= $i2 goto label41;

     label05:
        r2 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: byte[] getTextBytes()>();

     label06:
        $i2 = i0 + 1;

     label07:
        $b3 = r2[i0];

     label08:
        i0 = $b3 & 255;

        if i0 == 0 goto label11;

        $i1 = $i2 + i0;

     label09:
        r2 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: byte[] getTextBytes()>();

        $i4 = lengthof r2;

     label10:
        if $i1 <= $i4 goto label15;

     label11:
        virtualinvoke r1.<java.util.Hashtable: void clear()>();

     label12:
        r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Map _props> = r1;

     label13:
        $r3 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Map _props>;

        if $r3 == null goto label38;

        $r3 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Map _props>;

     label14:
        exitmonitor r0;

        return $r3;

     label15:
        $i1 = 0;

     label16:
        if $i1 >= i0 goto label21;

     label17:
        r2 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: byte[] getTextBytes()>();

     label18:
        $i4 = $i2 + $i1;

     label19:
        $b3 = r2[$i4];

     label20:
        if $b3 == 61 goto label21;

        $i1 = $i1 + 1;

        goto label16;

     label21:
        r2 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: byte[] getTextBytes()>();

        $r4 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String readUTF(byte[],int,int)>(r2, $i2, $i1);

     label22:
        if $r4 != null goto label29;

     label23:
        virtualinvoke r1.<java.util.Hashtable: void clear()>();

     label24:
        goto label12;

     label25:
        r5 := @caughtexception;

     label26:
        $r6 = <javax.jmdns.impl.ServiceInfoImpl: java.util.logging.Logger logger>;

        $r7 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r6.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r7, "Malformed TXT Field ", r5);

     label27:
        goto label12;

     label28:
        $r8 := @caughtexception;

        exitmonitor r0;

        throw $r8;

     label29:
        if $i1 != i0 goto label33;

     label30:
        r2 = <javax.jmdns.impl.ServiceInfoImpl: byte[] NO_VALUE>;

     label31:
        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r2);

     label32:
        i0 = $i2;

        goto label03;

     label33:
        $i1 = $i1 + 1;

        $i4 = i0 - $i1;

     label34:
        r2 = newarray (byte)[$i4];

        $r9 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: byte[] getTextBytes()>();

     label35:
        $i4 = $i2 + $i1;

        $i1 = i0 - $i1;

     label36:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, $i4, r2, 0, $i1);

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r2);

     label37:
        $i2 = $i2 + i0;

        goto label32;

     label38:
        $r3 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

     label39:
        goto label14;

     label40:
        r5 := @caughtexception;

        goto label26;

     label41:
        goto label12;

        catch java.lang.Throwable from label01 to label02 with label28;
        catch java.lang.Exception from label03 to label04 with label40;
        catch java.lang.Exception from label05 to label06 with label40;
        catch java.lang.Throwable from label03 to label06 with label28;
        catch java.lang.Exception from label07 to label08 with label25;
        catch java.lang.Exception from label09 to label10 with label25;
        catch java.lang.Exception from label11 to label12 with label25;
        catch java.lang.Throwable from label07 to label12 with label28;
        catch java.lang.Throwable from label12 to label14 with label28;
        catch java.lang.Exception from label17 to label18 with label25;
        catch java.lang.Exception from label19 to label20 with label25;
        catch java.lang.Exception from label21 to label22 with label25;
        catch java.lang.Exception from label23 to label24 with label25;
        catch java.lang.Throwable from label17 to label24 with label28;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Exception from label31 to label32 with label25;
        catch java.lang.Exception from label34 to label35 with label25;
        catch java.lang.Exception from label36 to label37 with label25;
        catch java.lang.Throwable from label30 to label37 with label28;
        catch java.lang.Throwable from label38 to label39 with label28;
    }
    public byte[] getPropertyBytes(java.lang.String)
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.lang.String $r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        byte[] $r4;
        java.lang.Throwable $r5;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        $r2 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Map getProperties()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (byte[]) $r3;

     label2:
        exitmonitor r0;

        return $r4;

     label3:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public java.lang.String getPropertyString(java.lang.String)
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.lang.String $r1;
        int $i0;
        java.util.Map $r2;
        java.lang.Object $r3;
        byte[] r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        $r2 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Map getProperties()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (byte[]) $r3;

     label2:
        if r4 != null goto label4;

        $r1 = null;

     label3:
        exitmonitor r0;

        return $r1;

     label4:
        $r5 = <javax.jmdns.impl.ServiceInfoImpl: byte[] NO_VALUE>;

        if r4 != $r5 goto label5;

        $r1 = "true";

        goto label3;

     label5:
        $i0 = lengthof r4;

        $r1 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String readUTF(byte[],int,int)>(r4, 0, $i0);

     label6:
        goto label3;

     label7:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
    }
    public java.lang.String getProtocol()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.lang.String $r1;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _protocol>;

        if $r1 == null goto label1;

        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _protocol>;

        return $r1;

     label1:
        return "tcp";
    }
    public java.lang.String getQualifiedName()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.lang.String $r1, $r2, $r3, $r4;
        java.lang.StringBuilder $r5, $r6;
        int $i0;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getDomain()>();

        $r2 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getProtocol()>();

        $r3 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getApplication()>();

        $r4 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getName()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 <= 0 goto label4;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label6;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label4:
        $r4 = "";

        goto label1;

     label5:
        $r3 = "";

        goto label2;

     label6:
        $r2 = "";

        goto label3;
    }
    public java.util.Map getQualifiedNameMap()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.util.HashMap r1;
        javax.jmdns.ServiceInfo$Fields $r2;
        java.lang.String $r3;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        r1 = new java.util.HashMap;

        specialinvoke r1.<java.util.HashMap: void <init>(int)>(5);

        $r2 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Domain>;

        $r3 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getDomain()>();

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r2 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Protocol>;

        $r3 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getProtocol()>();

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r2 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Application>;

        $r3 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getApplication()>();

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r2 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Instance>;

        $r3 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getName()>();

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r2 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Subtype>;

        $r3 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getSubtype()>();

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        return r1;
    }
    public java.lang.String getServer()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.lang.String $r1;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _server>;

        if $r1 == null goto label1;

        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _server>;

        return $r1;

     label1:
        return "";
    }
    public java.lang.String getSubtype()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.lang.String $r1;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _subtype>;

        if $r1 == null goto label1;

        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _subtype>;

        return $r1;

     label1:
        return "";
    }
    public byte[] getTextBytes()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        byte[] $r1;
        int $i0;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl: byte[] _text>;

        if $r1 == null goto label1;

        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl: byte[] _text>;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl: byte[] _text>;

        return $r1;

     label1:
        $r1 = <javax.jmdns.impl.DNSRecord: byte[] EMPTY_TXT>;

        return $r1;
    }
    public java.lang.String getType()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.lang.String $r1, $r2, $r3;
        java.lang.StringBuilder $r4, $r5;
        int $i0;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getDomain()>();

        $r2 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getProtocol()>();

        $r3 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getApplication()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label3:
        $r3 = "";

        goto label1;

     label4:
        $r2 = "";

        goto label2;
    }
    public java.lang.String getTypeWithSubtype()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2, $r3;
        int $i0;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getSubtype()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("._sub.");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getType()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label2:
        $r1 = "";

        goto label1;
    }
    public java.lang.String getURL()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.lang.String $r1;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getURL(java.lang.String)>("http");

        return $r1;
    }
    public java.lang.String getURL(java.lang.String)
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.lang.String $r1;
        java.lang.String[] $r2;
        int $i0;
        java.lang.StringBuilder $r3;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String[] getURLs(java.lang.String)>($r1);

        $i0 = lengthof $r2;

        if $i0 <= 0 goto label1;

        $r1 = $r2[0];

        return $r1;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("://null:");

        $i0 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: int getPort()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
    public java.lang.String[] getURLs(java.lang.String)
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.lang.String $r1, $r5, r6, $r8, r9;
        java.net.InetAddress r2;
        int i0, i1, $i2;
        java.util.ArrayList r3;
        java.net.InetAddress[] $r4;
        boolean $z0;
        java.lang.StringBuilder $r7, $r10;
        java.lang.String[] $r11;
        java.lang.Object[] $r12;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 := @parameter0: java.lang.String;

        $r4 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.net.InetAddress[] getInetAddresses()>();

        r3 = new java.util.ArrayList;

        i0 = lengthof $r4;

        specialinvoke r3.<java.util.ArrayList: void <init>(int)>(i0);

        i0 = lengthof $r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label7;

        r2 = $r4[i1];

        $r5 = virtualinvoke r2.<java.net.InetAddress: java.lang.String getHostAddress()>();

        r6 = $r5;

        $z0 = r2 instanceof java.net.Inet6Address;

        if $z0 == 0 goto label2;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("://");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i2 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: int getPort()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        r6 = $r5;

        $r8 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getPropertyString(java.lang.String)>("path");

        r9 = $r8;

        if $r8 == null goto label3;

        $i2 = virtualinvoke $r8.<java.lang.String: int indexOf(java.lang.String)>("://");

        if $i2 < 0 goto label4;

        r6 = $r8;

     label3:
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r6);

        i1 = i1 + 1;

        goto label1;

     label4:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $z0 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 == 0 goto label6;

     label5:
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label6:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label5;

     label7:
        i0 = interfaceinvoke r3.<java.util.List: int size()>();

        $r11 = newarray (java.lang.String)[i0];

        $r12 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11);

        $r11 = (java.lang.String[]) $r12;

        return $r11;
    }
    public int getWeight()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        int i0;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        i0 = r0.<javax.jmdns.impl.ServiceInfoImpl: int _weight>;

        return i0;
    }
    public boolean hasData()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.lang.String $r1;
        boolean $z0;
        byte[] $r2;
        int $i0;
        java.lang.Throwable $r3;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        entermonitor r0;

     label1:
        $r1 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getServer()>();

        if $r1 == null goto label4;

        $z0 = specialinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: boolean hasInetAddress()>();

        if $z0 == 0 goto label4;

        $r2 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: byte[] getTextBytes()>();

        if $r2 == null goto label4;

        $r2 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: byte[] getTextBytes()>();

        $i0 = lengthof $r2;

     label2:
        if $i0 <= 0 goto label4;

        $z0 = 1;

     label3:
        exitmonitor r0;

        return $z0;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
    }
    public int hashCode()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getQualifiedName()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }
    public boolean isAnnounced()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        boolean $z0;
        javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState $r1;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl: javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState _state>;

        $z0 = virtualinvoke $r1.<javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState: boolean isAnnounced()>();

        return $z0;
    }
    public boolean isAnnouncing()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        boolean $z0;
        javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState $r1;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl: javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState _state>;

        $z0 = virtualinvoke $r1.<javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState: boolean isAnnouncing()>();

        return $z0;
    }
    public boolean isAssociatedWithTask(javax.jmdns.impl.tasks.DNSTask, javax.jmdns.impl.constants.DNSState)
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        javax.jmdns.impl.tasks.DNSTask $r1;
        javax.jmdns.impl.constants.DNSState $r2;
        boolean $z0;
        javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState $r3;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 := @parameter0: javax.jmdns.impl.tasks.DNSTask;

        $r2 := @parameter1: javax.jmdns.impl.constants.DNSState;

        $r3 = r0.<javax.jmdns.impl.ServiceInfoImpl: javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState _state>;

        $z0 = virtualinvoke $r3.<javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState: boolean isAssociatedWithTask(javax.jmdns.impl.tasks.DNSTask,javax.jmdns.impl.constants.DNSState)>($r1, $r2);

        return $z0;
    }
    public boolean isPersistent()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        boolean z0;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        z0 = r0.<javax.jmdns.impl.ServiceInfoImpl: boolean _persistent>;

        return z0;
    }
    public boolean isProbing()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        boolean $z0;
        javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState $r1;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl: javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState _state>;

        $z0 = virtualinvoke $r1.<javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState: boolean isProbing()>();

        return $z0;
    }
    public boolean needTextAnnouncing()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        boolean z0;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        z0 = r0.<javax.jmdns.impl.ServiceInfoImpl: boolean _needTextAnnouncing>;

        return z0;
    }
    java.lang.String readUTF(byte[], int, int)
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        byte[] $r1;
        int $i0, $i1, i2, i3, $i5;
        java.lang.StringBuffer r2;
        java.lang.String $r3;
        byte $b4;
        char $c6;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        r2 = new java.lang.StringBuffer;

        specialinvoke r2.<java.lang.StringBuffer: void <init>()>();

        i2 = $i0 + $i1;

        i3 = $i0;

     label1:
        if i3 >= i2 goto label7;

        $i0 = i3 + 1;

        $b4 = $r1[i3];

        i3 = $b4 & 255;

        $i5 = i3 >> 4;

        lookupswitch($i5)
        {
            case 0: goto label4;
            case 1: goto label4;
            case 2: goto label4;
            case 3: goto label4;
            case 4: goto label4;
            case 5: goto label4;
            case 6: goto label4;
            case 7: goto label4;
            case 8: goto label2;
            case 9: goto label2;
            case 10: goto label2;
            case 11: goto label2;
            case 12: goto label3;
            case 13: goto label3;
            case 14: goto label5;
            default: goto label2;
        };

     label2:
        $i5 = $i0 + 1;

        if $i5 < $i1 goto label6;

        return null;

     label3:
        if $i0 >= $i1 goto label8;

        i3 = i3 & 31;

        i3 = i3 << 6;

        $i5 = $i0 + 1;

        $b4 = $r1[$i0];

        $i0 = $b4 & 63;

        i3 = i3 | $i0;

        $i0 = $i5;

     label4:
        $c6 = (char) i3;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c6);

        i3 = $i0;

        goto label1;

     label5:
        $i5 = $i0 + 2;

        if $i5 >= $i1 goto label8;

        i3 = i3 & 15;

        $i5 = i3 << 12;

        i3 = $i0 + 1;

        $b4 = $r1[$i0];

        $i0 = $b4 & 63;

        $i0 = $i0 << 6;

        $i5 = $i5 | $i0;

        $i0 = i3 + 1;

        $b4 = $r1[i3];

        i3 = $b4 & 63;

        i3 = $i5 | i3;

        goto label4;

     label6:
        i3 = i3 & 63;

        i3 = i3 << 4;

        $i5 = $i0 + 1;

        $b4 = $r1[$i0];

        $i0 = $b4 & 15;

        i3 = i3 | $i0;

        $i0 = $i5;

        goto label4;

     label7:
        $r3 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;

     label8:
        return null;
    }
    public boolean recoverState()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        boolean $z0;
        javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState $r1;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl: javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState _state>;

        $z0 = virtualinvoke $r1.<javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState: boolean recoverState()>();

        return $z0;
    }
    public void removeAssociationWithTask(javax.jmdns.impl.tasks.DNSTask)
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        javax.jmdns.impl.tasks.DNSTask $r1;
        javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState $r2;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 := @parameter0: javax.jmdns.impl.tasks.DNSTask;

        $r2 = r0.<javax.jmdns.impl.ServiceInfoImpl: javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState _state>;

        virtualinvoke $r2.<javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState: void removeAssociationWithTask(javax.jmdns.impl.tasks.DNSTask)>($r1);

        return;
    }
    public boolean revertState()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        boolean $z0;
        javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState $r1;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl: javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState _state>;

        $z0 = virtualinvoke $r1.<javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState: boolean revertState()>();

        return $z0;
    }
    public void setDns(javax.jmdns.impl.JmDNSImpl)
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        javax.jmdns.impl.JmDNSImpl $r1;
        javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState $r2;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 := @parameter0: javax.jmdns.impl.JmDNSImpl;

        $r2 = r0.<javax.jmdns.impl.ServiceInfoImpl: javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState _state>;

        virtualinvoke $r2.<javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState: void setDns(javax.jmdns.impl.JmDNSImpl)>($r1);

        return;
    }
    void setName(java.lang.String)
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.lang.String $r1;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 := @parameter0: java.lang.String;

        r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _name> = $r1;

        r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _key> = null;

        return;
    }
    public void setNeedTextAnnouncing(boolean)
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        boolean $z0;
        javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState $r1;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $z0 := @parameter0: boolean;

        r0.<javax.jmdns.impl.ServiceInfoImpl: boolean _needTextAnnouncing> = $z0;

        $z0 = r0.<javax.jmdns.impl.ServiceInfoImpl: boolean _needTextAnnouncing>;

        if $z0 == 0 goto label1;

        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl: javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState _state>;

        virtualinvoke $r1.<javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState: void setTask(javax.jmdns.impl.tasks.DNSTask)>(null);

     label1:
        return;
    }
    void setServer(java.lang.String)
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.lang.String $r1;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 := @parameter0: java.lang.String;

        r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _server> = $r1;

        return;
    }
    public java.lang.String toString()
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        java.net.InetAddress r1;
        java.lang.StringBuilder r2, $r3, $r6;
        int i0, i1, $i2;
        java.lang.Class $r4;
        java.lang.String $r5, $r14;
        java.net.InetAddress[] $r7;
        javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState $r8;
        boolean $z0;
        byte[] $r9;
        java.util.Map $r10;
        java.util.Set $r11;
        java.util.Iterator $r12;
        java.lang.Object $r13;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("name: \'");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getName()>();

        i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if i0 <= 0 goto label03;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label01:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getTypeWithSubtype()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' address: \'");

        $r7 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.net.InetAddress[] getInetAddresses()>();

        i0 = lengthof $r7;

        if i0 <= 0 goto label04;

        i0 = lengthof $r7;

        i1 = 0;

     label02:
        if i1 >= i0 goto label05;

        r1 = $r7[i1];

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $i2 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: int getPort()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        i1 = i1 + 1;

        goto label02;

     label03:
        $r5 = "";

        goto label01;

     label04:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(null):");

        i0 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: int getPort()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

     label05:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' status: \'");

        $r8 = r0.<javax.jmdns.impl.ServiceInfoImpl: javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState _state>;

        $r5 = virtualinvoke $r8.<javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $z0 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: boolean isPersistent()>();

        if $z0 == 0 goto label09;

        $r5 = "\' is persistent,";

     label06:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has ");

        $z0 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: boolean hasData()>();

        if $z0 == 0 goto label10;

        $r5 = "";

     label07:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data");

        $r9 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: byte[] getTextBytes()>();

        i0 = lengthof $r9;

        if i0 <= 0 goto label12;

        $r10 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Map getProperties()>();

        $z0 = interfaceinvoke $r10.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label11;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set keySet()>();

        $r12 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label08:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r13;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r14 = new java.lang.String;

        $r13 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r9 = (byte[]) $r13;

        specialinvoke $r14.<java.lang.String: void <init>(byte[])>($r9);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        goto label08;

     label09:
        $r5 = "\',";

        goto label06;

     label10:
        $r5 = "NO ";

        goto label07;

     label11:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" empty");

     label12:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
    public void updateRecord(javax.jmdns.impl.DNSCache, long, javax.jmdns.impl.DNSEntry)
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        javax.jmdns.impl.DNSCache $r1;
        long $l0;
        javax.jmdns.impl.ServiceEventImpl r2;
        javax.jmdns.impl.DNSEntry r3;
        boolean $z0, $z1;
        int[] $r4;
        javax.jmdns.impl.constants.DNSRecordType $r5;
        int $i1;
        javax.jmdns.impl.JmDNSImpl $r6;
        java.lang.String $r7, $r8;
        java.util.Set $r9;
        javax.jmdns.impl.DNSRecord$Address r10;
        java.net.InetAddress $r11;
        java.net.Inet4Address $r12;
        java.net.Inet6Address $r13;
        javax.jmdns.impl.DNSRecord$Service r14;
        javax.jmdns.impl.constants.DNSRecordClass $r15;
        java.util.Collection $r16;
        java.util.Iterator $r17;
        java.lang.Object $r18;
        javax.jmdns.impl.DNSRecord$Text r19;
        byte[] $r20;
        java.lang.Throwable $r21;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $r1 := @parameter0: javax.jmdns.impl.DNSCache;

        $l0 := @parameter1: long;

        r3 := @parameter2: javax.jmdns.impl.DNSEntry;

        $z0 = r3 instanceof javax.jmdns.impl.DNSRecord;

        if $z0 == 0 goto label20;

        $z0 = virtualinvoke r3.<javax.jmdns.impl.DNSEntry: boolean isExpired(long)>($l0);

        if $z0 != 0 goto label20;

        $z0 = 0;

        $r4 = <javax.jmdns.impl.ServiceInfoImpl$1: int[] $SwitchMap$javax$jmdns$impl$constants$DNSRecordType>;

        $r5 = virtualinvoke r3.<javax.jmdns.impl.DNSEntry: javax.jmdns.impl.constants.DNSRecordType getRecordType()>();

        $i1 = virtualinvoke $r5.<javax.jmdns.impl.constants.DNSRecordType: int ordinal()>();

        $i1 = $r4[$i1];

        lookupswitch($i1)
        {
            case 1: goto label05;
            case 2: goto label06;
            case 3: goto label07;
            case 4: goto label15;
            case 5: goto label16;
            default: goto label01;
        };

     label01:
        if $z0 == 0 goto label02;

        $z0 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: boolean hasData()>();

        if $z0 == 0 goto label02;

        $r6 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: javax.jmdns.impl.JmDNSImpl getDns()>();

        if $r6 == null goto label02;

        r2 = new javax.jmdns.impl.ServiceEventImpl;

        $r7 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getType()>();

        $r8 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getName()>();

        specialinvoke r2.<javax.jmdns.impl.ServiceEventImpl: void <init>(javax.jmdns.impl.JmDNSImpl,java.lang.String,java.lang.String,javax.jmdns.ServiceInfo)>($r6, $r7, $r8, r0);

        virtualinvoke $r6.<javax.jmdns.impl.JmDNSImpl: void handleServiceResolved(javax.jmdns.ServiceEvent)>(r2);

     label02:
        entermonitor r0;

     label03:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label04:
        return;

     label05:
        $r7 = virtualinvoke r3.<javax.jmdns.impl.DNSEntry: java.lang.String getName()>();

        $r8 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getServer()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r8);

        if $z1 == 0 goto label01;

        $r9 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Set _ipv4Addresses>;

        r10 = (javax.jmdns.impl.DNSRecord$Address) r3;

        $r11 = virtualinvoke r10.<javax.jmdns.impl.DNSRecord$Address: java.net.InetAddress getAddress()>();

        $r12 = (java.net.Inet4Address) $r11;

        interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>($r12);

        $z0 = 1;

        goto label01;

     label06:
        $r7 = virtualinvoke r3.<javax.jmdns.impl.DNSEntry: java.lang.String getName()>();

        $r8 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getServer()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r8);

        if $z1 == 0 goto label01;

        $r9 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Set _ipv6Addresses>;

        r10 = (javax.jmdns.impl.DNSRecord$Address) r3;

        $r11 = virtualinvoke r10.<javax.jmdns.impl.DNSRecord$Address: java.net.InetAddress getAddress()>();

        $r13 = (java.net.Inet6Address) $r11;

        interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>($r13);

        $z0 = 1;

        goto label01;

     label07:
        $r7 = virtualinvoke r3.<javax.jmdns.impl.DNSEntry: java.lang.String getName()>();

        $r8 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getQualifiedName()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r8);

        if $z1 == 0 goto label01;

        r14 = (javax.jmdns.impl.DNSRecord$Service) r3;

        $r7 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _server>;

        if $r7 == null goto label08;

        $r7 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _server>;

        $r8 = virtualinvoke r14.<javax.jmdns.impl.DNSRecord$Service: java.lang.String getServer()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r8);

        if $z1 != 0 goto label11;

     label08:
        $z1 = 1;

     label09:
        $r7 = virtualinvoke r14.<javax.jmdns.impl.DNSRecord$Service: java.lang.String getServer()>();

        r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _server> = $r7;

        $i1 = virtualinvoke r14.<javax.jmdns.impl.DNSRecord$Service: int getPort()>();

        r0.<javax.jmdns.impl.ServiceInfoImpl: int _port> = $i1;

        $i1 = virtualinvoke r14.<javax.jmdns.impl.DNSRecord$Service: int getWeight()>();

        r0.<javax.jmdns.impl.ServiceInfoImpl: int _weight> = $i1;

        $i1 = virtualinvoke r14.<javax.jmdns.impl.DNSRecord$Service: int getPriority()>();

        r0.<javax.jmdns.impl.ServiceInfoImpl: int _priority> = $i1;

        if $z1 == 0 goto label14;

        $r9 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Set _ipv4Addresses>;

        interfaceinvoke $r9.<java.util.Set: void clear()>();

        $r9 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Set _ipv6Addresses>;

        interfaceinvoke $r9.<java.util.Set: void clear()>();

        $r7 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _server>;

        $r5 = <javax.jmdns.impl.constants.DNSRecordType: javax.jmdns.impl.constants.DNSRecordType TYPE_A>;

        $r15 = <javax.jmdns.impl.constants.DNSRecordClass: javax.jmdns.impl.constants.DNSRecordClass CLASS_IN>;

        $r16 = virtualinvoke $r1.<javax.jmdns.impl.DNSCache: java.util.Collection getDNSEntryList(java.lang.String,javax.jmdns.impl.constants.DNSRecordType,javax.jmdns.impl.constants.DNSRecordClass)>($r7, $r5, $r15);

        $r17 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();

     label10:
        $z1 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label12;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r3 = (javax.jmdns.impl.DNSEntry) $r18;

        virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: void updateRecord(javax.jmdns.impl.DNSCache,long,javax.jmdns.impl.DNSEntry)>($r1, $l0, r3);

        goto label10;

     label11:
        $z1 = 0;

        goto label09;

     label12:
        $r7 = r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _server>;

        $r5 = <javax.jmdns.impl.constants.DNSRecordType: javax.jmdns.impl.constants.DNSRecordType TYPE_AAAA>;

        $r15 = <javax.jmdns.impl.constants.DNSRecordClass: javax.jmdns.impl.constants.DNSRecordClass CLASS_IN>;

        $r16 = virtualinvoke $r1.<javax.jmdns.impl.DNSCache: java.util.Collection getDNSEntryList(java.lang.String,javax.jmdns.impl.constants.DNSRecordType,javax.jmdns.impl.constants.DNSRecordClass)>($r7, $r5, $r15);

        $r17 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();

     label13:
        $z1 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label01;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r3 = (javax.jmdns.impl.DNSEntry) $r18;

        virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: void updateRecord(javax.jmdns.impl.DNSCache,long,javax.jmdns.impl.DNSEntry)>($r1, $l0, r3);

        goto label13;

     label14:
        $z0 = 1;

        goto label01;

     label15:
        $r7 = virtualinvoke r3.<javax.jmdns.impl.DNSEntry: java.lang.String getName()>();

        $r8 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getQualifiedName()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r8);

        if $z1 == 0 goto label01;

        r19 = (javax.jmdns.impl.DNSRecord$Text) r3;

        $r20 = virtualinvoke r19.<javax.jmdns.impl.DNSRecord$Text: byte[] getText()>();

        r0.<javax.jmdns.impl.ServiceInfoImpl: byte[] _text> = $r20;

        r0.<javax.jmdns.impl.ServiceInfoImpl: java.util.Map _props> = null;

        $z0 = 1;

        goto label01;

     label16:
        $r7 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String getSubtype()>();

        $i1 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i1 != 0 goto label01;

        $r7 = virtualinvoke r3.<javax.jmdns.impl.DNSEntry: java.lang.String getSubtype()>();

        $i1 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i1 == 0 goto label01;

        $r7 = virtualinvoke r3.<javax.jmdns.impl.DNSEntry: java.lang.String getSubtype()>();

        r0.<javax.jmdns.impl.ServiceInfoImpl: java.lang.String _subtype> = $r7;

        $z0 = 1;

        goto label01;

     label17:
        $r21 := @caughtexception;

     label18:
        exitmonitor r0;

     label19:
        throw $r21;

     label20:
        return;

        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }
    public boolean waitForAnnounced(long)
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        long $l0;
        boolean $z0;
        javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState $r1;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl: javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState _state>;

        $z0 = virtualinvoke $r1.<javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState: boolean waitForAnnounced(long)>($l0);

        return $z0;
    }
    public boolean waitForCanceled(long)
    {
        javax.jmdns.impl.ServiceInfoImpl r0;
        long $l0;
        boolean $z0;
        javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState $r1;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl: javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState _state>;

        $z0 = virtualinvoke $r1.<javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState: boolean waitForCanceled(long)>($l0);

        return $z0;
    }
