javax.jmdns.impl.NameRegister$BaseRegister extends java.lang.Object implements javax.jmdns.impl.NameRegister
    public void <init>()
    {
        javax.jmdns.impl.NameRegister$BaseRegister r0;

        r0 := @this: javax.jmdns.impl.NameRegister$BaseRegister;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    protected java.lang.String incrementNameWithDash(java.lang.String)
    {
        javax.jmdns.impl.NameRegister$BaseRegister r0;
        java.lang.String $r1, $r4;
        java.lang.Exception r2;
        java.lang.StringBuilder r3;
        int $i0, $i1, i2;

        r0 := @this: javax.jmdns.impl.NameRegister$BaseRegister;

        $r1 := @parameter0: java.lang.String;

        r3 = new java.lang.StringBuilder;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i0 = $i0 + 5;

        specialinvoke r3.<java.lang.StringBuilder: void <init>(int)>($i0);

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>(".local.");

        $i1 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int)>(45);

        if $i1 >= 0 goto label2;

        i2 = 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

     label1:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".local.");

        $r1 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label2:
        i2 = $i1 + 1;

     label3:
        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(i2, $i0);

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

     label4:
        i2 = i2 + 1;

     label5:
        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

     label6:
        goto label1;

     label7:
        r2 := @caughtexception;

        i2 = 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        goto label1;

        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }
    protected java.lang.String incrementNameWithParentesis(java.lang.String)
    {
        javax.jmdns.impl.NameRegister$BaseRegister r0;
        java.lang.String $r1, $r4;
        java.lang.NumberFormatException r2;
        java.lang.StringBuilder r3;
        int $i0, $i1;

        r0 := @this: javax.jmdns.impl.NameRegister$BaseRegister;

        $r1 := @parameter0: java.lang.String;

        r3 = new java.lang.StringBuilder;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i0 = $i0 + 5;

        specialinvoke r3.<java.lang.StringBuilder: void <init>(int)>($i0);

        $i1 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int)>(40);

        $i0 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int)>(41);

        if $i1 < 0 goto label8;

        if $i1 >= $i0 goto label8;

     label1:
        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

     label2:
        $i1 = $i1 + 1;

     label3:
        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i1, $i0);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

     label4:
        $i0 = $i0 + 1;

     label5:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

     label6:
        $r1 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label7:
        r2 := @caughtexception;

        virtualinvoke r3.<java.lang.StringBuilder: void setLength(int)>(0);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (2)");

        goto label6;

     label8:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (2)");

        goto label6;

        catch java.lang.NumberFormatException from label1 to label2 with label7;
        catch java.lang.NumberFormatException from label3 to label4 with label7;
        catch java.lang.NumberFormatException from label5 to label6 with label7;
    }
