javax.jmdns.impl.DNSQuestion$Pointer extends javax.jmdns.impl.DNSQuestion
    void <init>(java.lang.String, javax.jmdns.impl.constants.DNSRecordType, javax.jmdns.impl.constants.DNSRecordClass, boolean)
    {
        javax.jmdns.impl.DNSQuestion$Pointer r0;
        java.lang.String $r1;
        javax.jmdns.impl.constants.DNSRecordType $r2;
        javax.jmdns.impl.constants.DNSRecordClass $r3;
        boolean $z0;

        r0 := @this: javax.jmdns.impl.DNSQuestion$Pointer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: javax.jmdns.impl.constants.DNSRecordType;

        $r3 := @parameter2: javax.jmdns.impl.constants.DNSRecordClass;

        $z0 := @parameter3: boolean;

        specialinvoke r0.<javax.jmdns.impl.DNSQuestion: void <init>(java.lang.String,javax.jmdns.impl.constants.DNSRecordType,javax.jmdns.impl.constants.DNSRecordClass,boolean)>($r1, $r2, $r3, $z0);

        return;
    }
    public void addAnswers(javax.jmdns.impl.JmDNSImpl, java.util.Set)
    {
        javax.jmdns.impl.DNSQuestion$Pointer r0;
        javax.jmdns.impl.JmDNSImpl $r1;
        java.util.Set r2, $r10;
        javax.jmdns.impl.constants.DNSRecordClass $r3;
        java.util.Map $r4;
        java.util.Collection $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;
        javax.jmdns.ServiceInfo r8;
        javax.jmdns.impl.ServiceInfoImpl r9;
        java.lang.String r11, $r17;
        javax.jmdns.impl.JmDNSImpl$ServiceTypeEntry r12;
        javax.jmdns.impl.DNSRecord$Pointer $r13;
        javax.jmdns.ServiceInfo$Fields $r14;
        int $i0;
        javax.jmdns.impl.HostInfo $r15;
        java.net.InetAddress $r16;
        javax.jmdns.impl.constants.DNSRecordType $r18;

        r0 := @this: javax.jmdns.impl.DNSQuestion$Pointer;

        $r1 := @parameter0: javax.jmdns.impl.JmDNSImpl;

        r2 := @parameter1: java.util.Set;

        $r4 = virtualinvoke $r1.<javax.jmdns.impl.JmDNSImpl: java.util.Map getServices()>();

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (javax.jmdns.ServiceInfo) $r7;

        r9 = (javax.jmdns.impl.ServiceInfoImpl) r8;

        virtualinvoke r0.<javax.jmdns.impl.DNSQuestion$Pointer: void addAnswersForServiceInfo(javax.jmdns.impl.JmDNSImpl,java.util.Set,javax.jmdns.impl.ServiceInfoImpl)>($r1, r2, r9);

        goto label1;

     label2:
        $z0 = virtualinvoke r0.<javax.jmdns.impl.DNSQuestion$Pointer: boolean isServicesDiscoveryMetaQuery()>();

        if $z0 == 0 goto label4;

        $r4 = virtualinvoke $r1.<javax.jmdns.impl.JmDNSImpl: java.util.Map getServiceTypes()>();

        $r10 = interfaceinvoke $r4.<java.util.Map: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.lang.String) $r7;

        $r4 = virtualinvoke $r1.<javax.jmdns.impl.JmDNSImpl: java.util.Map getServiceTypes()>();

        $r7 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11);

        r12 = (javax.jmdns.impl.JmDNSImpl$ServiceTypeEntry) $r7;

        $r13 = new javax.jmdns.impl.DNSRecord$Pointer;

        $r3 = <javax.jmdns.impl.constants.DNSRecordClass: javax.jmdns.impl.constants.DNSRecordClass CLASS_IN>;

        r11 = virtualinvoke r12.<javax.jmdns.impl.JmDNSImpl$ServiceTypeEntry: java.lang.String getType()>();

        specialinvoke $r13.<javax.jmdns.impl.DNSRecord$Pointer: void <init>(java.lang.String,javax.jmdns.impl.constants.DNSRecordClass,boolean,int,java.lang.String)>("_services._dns-sd._udp.local.", $r3, 0, 3600, r11);

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r13);

        goto label3;

     label4:
        $z0 = virtualinvoke r0.<javax.jmdns.impl.DNSQuestion$Pointer: boolean isReverseLookup()>();

        if $z0 == 0 goto label8;

        $r4 = virtualinvoke r0.<javax.jmdns.impl.DNSQuestion$Pointer: java.util.Map getQualifiedNameMap()>();

        $r14 = <javax.jmdns.ServiceInfo$Fields: javax.jmdns.ServiceInfo$Fields Instance>;

        $r7 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r14);

        r11 = (java.lang.String) $r7;

        if r11 == null goto label9;

        $i0 = virtualinvoke r11.<java.lang.String: int length()>();

        if $i0 <= 0 goto label9;

        $r15 = virtualinvoke $r1.<javax.jmdns.impl.JmDNSImpl: javax.jmdns.impl.HostInfo getLocalHost()>();

        $r16 = virtualinvoke $r15.<javax.jmdns.impl.HostInfo: java.net.InetAddress getInetAddress()>();

        if $r16 == null goto label7;

        $r17 = virtualinvoke $r16.<java.net.InetAddress: java.lang.String getHostAddress()>();

     label5:
        $z0 = virtualinvoke r11.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r17);

        if $z0 == 0 goto label9;

        $z0 = virtualinvoke r0.<javax.jmdns.impl.DNSQuestion$Pointer: boolean isV4ReverseLookup()>();

        if $z0 == 0 goto label6;

        $r15 = virtualinvoke $r1.<javax.jmdns.impl.JmDNSImpl: javax.jmdns.impl.HostInfo getLocalHost()>();

        $r18 = <javax.jmdns.impl.constants.DNSRecordType: javax.jmdns.impl.constants.DNSRecordType TYPE_A>;

        $r13 = virtualinvoke $r15.<javax.jmdns.impl.HostInfo: javax.jmdns.impl.DNSRecord$Pointer getDNSReverseAddressRecord(javax.jmdns.impl.constants.DNSRecordType,boolean,int)>($r18, 0, 3600);

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r13);

     label6:
        $z0 = virtualinvoke r0.<javax.jmdns.impl.DNSQuestion$Pointer: boolean isV6ReverseLookup()>();

        if $z0 == 0 goto label9;

        $r15 = virtualinvoke $r1.<javax.jmdns.impl.JmDNSImpl: javax.jmdns.impl.HostInfo getLocalHost()>();

        $r18 = <javax.jmdns.impl.constants.DNSRecordType: javax.jmdns.impl.constants.DNSRecordType TYPE_AAAA>;

        $r13 = virtualinvoke $r15.<javax.jmdns.impl.HostInfo: javax.jmdns.impl.DNSRecord$Pointer getDNSReverseAddressRecord(javax.jmdns.impl.constants.DNSRecordType,boolean,int)>($r18, 0, 3600);

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r13);

        return;

     label7:
        $r17 = "";

        goto label5;

     label8:
        $z0 = virtualinvoke r0.<javax.jmdns.impl.DNSQuestion$Pointer: boolean isDomainDiscoveryQuery()>();

        if $z0 == 0 goto label9;

     label9:
        return;
    }
