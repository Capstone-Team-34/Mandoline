com.nostra13.universalimageloader.core.download.BaseImageDownloader extends java.lang.Object implements com.nostra13.universalimageloader.core.download.ImageDownloader
protected final int connectTimeout
protected final android.content.Context context
protected final int readTimeout
    public void <init>(android.content.Context)
    {
        com.nostra13.universalimageloader.core.download.BaseImageDownloader r0;
        android.content.Context $r1;

        r0 := @this: com.nostra13.universalimageloader.core.download.BaseImageDownloader;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: void <init>(android.content.Context,int,int)>($r1, 5000, 20000);

        return;
    }
    public void <init>(android.content.Context, int, int)
    {
        com.nostra13.universalimageloader.core.download.BaseImageDownloader r0;
        android.content.Context $r1;
        int $i0, $i1;

        r0 := @this: com.nostra13.universalimageloader.core.download.BaseImageDownloader;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke $r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: android.content.Context context> = $r1;

        r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: int connectTimeout> = $i0;

        r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: int readTimeout> = $i1;

        return;
    }
    private java.io.InputStream getVideoThumbnailStream(java.lang.String)
    {
        com.nostra13.universalimageloader.core.download.BaseImageDownloader r0;
        java.lang.String $r1;
        java.io.ByteArrayOutputStream r2;
        int $i0;
        android.graphics.Bitmap $r3;
        android.graphics.Bitmap$CompressFormat $r4;
        java.io.ByteArrayInputStream $r5;
        byte[] $r6;

        r0 := @this: com.nostra13.universalimageloader.core.download.BaseImageDownloader;

        $r1 := @parameter0: java.lang.String;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 8 goto label1;

        $r3 = staticinvoke <android.media.ThumbnailUtils: android.graphics.Bitmap createVideoThumbnail(java.lang.String,int)>($r1, 2);

        if $r3 == null goto label1;

        r2 = new java.io.ByteArrayOutputStream;

        specialinvoke r2.<java.io.ByteArrayOutputStream: void <init>()>();

        $r4 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

        virtualinvoke $r3.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r4, 0, r2);

        $r5 = new java.io.ByteArrayInputStream;

        $r6 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r5.<java.io.ByteArrayInputStream: void <init>(byte[])>($r6);

        return $r5;

     label1:
        return null;
    }
    private boolean isVideoContentUri(android.net.Uri)
    {
        com.nostra13.universalimageloader.core.download.BaseImageDownloader r0;
        android.net.Uri $r1;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: com.nostra13.universalimageloader.core.download.BaseImageDownloader;

        $r1 := @parameter0: android.net.Uri;

        $r2 = r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: android.content.Context context>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = virtualinvoke $r3.<android.content.ContentResolver: java.lang.String getType(android.net.Uri)>($r1);

        if $r4 == null goto label1;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("video/");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    private boolean isVideoFileUri(java.lang.String)
    {
        com.nostra13.universalimageloader.core.download.BaseImageDownloader r0;
        java.lang.String $r1;
        android.webkit.MimeTypeMap $r2;
        boolean $z0;

        r0 := @this: com.nostra13.universalimageloader.core.download.BaseImageDownloader;

        $r1 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.webkit.MimeTypeMap: java.lang.String getFileExtensionFromUrl(java.lang.String)>($r1);

        $r2 = staticinvoke <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>();

        $r1 = virtualinvoke $r2.<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)>($r1);

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("video/");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    protected java.net.HttpURLConnection createConnection(java.lang.String, java.lang.Object) throws java.io.IOException
    {
        com.nostra13.universalimageloader.core.download.BaseImageDownloader r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.net.URL $r3;
        java.net.URLConnection $r4;
        java.net.HttpURLConnection r5;
        int $i0;

        r0 := @this: com.nostra13.universalimageloader.core.download.BaseImageDownloader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r1 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "@#&=*+-_.,:!?()/~\'%");

        $r3 = new java.net.URL;

        specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<java.net.URL: java.net.URLConnection openConnection()>();

        r5 = (java.net.HttpURLConnection) $r4;

        $i0 = r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: int connectTimeout>;

        virtualinvoke r5.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0);

        $i0 = r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: int readTimeout>;

        virtualinvoke r5.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0);

        return r5;
    }
    protected java.io.InputStream getContactPhotoStream(android.net.Uri)
    {
        com.nostra13.universalimageloader.core.download.BaseImageDownloader r0;
        android.net.Uri $r1;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        int $i0;
        java.io.InputStream $r4;

        r0 := @this: com.nostra13.universalimageloader.core.download.BaseImageDownloader;

        $r1 := @parameter0: android.net.Uri;

        $r2 = r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: android.content.Context context>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 14 goto label1;

        $r4 = staticinvoke <android.provider.ContactsContract$Contacts: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri,boolean)>($r3, $r1, 1);

        return $r4;

     label1:
        $r4 = staticinvoke <android.provider.ContactsContract$Contacts: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri)>($r3, $r1);

        return $r4;
    }
    public java.io.InputStream getStream(java.lang.String, java.lang.Object) throws java.io.IOException
    {
        com.nostra13.universalimageloader.core.download.BaseImageDownloader r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        int[] $r3;
        com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme $r4;
        int $i0;
        java.io.InputStream $r5;

        r0 := @this: com.nostra13.universalimageloader.core.download.BaseImageDownloader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 = <com.nostra13.universalimageloader.core.download.BaseImageDownloader$1: int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme>;

        $r4 = staticinvoke <com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme: com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ofUri(java.lang.String)>($r1);

        $i0 = virtualinvoke $r4.<com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme: int ordinal()>();

        $i0 = $r3[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            case 6: goto label6;
            default: goto label1;
        };

     label1:
        $r5 = virtualinvoke r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: java.io.InputStream getStreamFromOtherSource(java.lang.String,java.lang.Object)>($r1, $r2);

        return $r5;

     label2:
        $r5 = virtualinvoke r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: java.io.InputStream getStreamFromNetwork(java.lang.String,java.lang.Object)>($r1, $r2);

        return $r5;

     label3:
        $r5 = virtualinvoke r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: java.io.InputStream getStreamFromFile(java.lang.String,java.lang.Object)>($r1, $r2);

        return $r5;

     label4:
        $r5 = virtualinvoke r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: java.io.InputStream getStreamFromContent(java.lang.String,java.lang.Object)>($r1, $r2);

        return $r5;

     label5:
        $r5 = virtualinvoke r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: java.io.InputStream getStreamFromAssets(java.lang.String,java.lang.Object)>($r1, $r2);

        return $r5;

     label6:
        $r5 = virtualinvoke r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: java.io.InputStream getStreamFromDrawable(java.lang.String,java.lang.Object)>($r1, $r2);

        return $r5;
    }
    protected java.io.InputStream getStreamFromAssets(java.lang.String, java.lang.Object) throws java.io.IOException
    {
        com.nostra13.universalimageloader.core.download.BaseImageDownloader r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme $r3;
        android.content.Context $r4;
        android.content.res.AssetManager $r5;
        java.io.InputStream $r6;

        r0 := @this: com.nostra13.universalimageloader.core.download.BaseImageDownloader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 = <com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme: com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ASSETS>;

        $r1 = virtualinvoke $r3.<com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme: java.lang.String crop(java.lang.String)>($r1);

        $r4 = r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: android.content.Context context>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r6 = virtualinvoke $r5.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r1);

        return $r6;
    }
    protected java.io.InputStream getStreamFromContent(java.lang.String, java.lang.Object) throws java.io.FileNotFoundException
    {
        com.nostra13.universalimageloader.core.download.BaseImageDownloader r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.io.ByteArrayOutputStream r3;
        android.content.Context $r4;
        android.content.ContentResolver $r5;
        android.net.Uri $r6;
        boolean $z0;
        java.lang.Long $r7;
        long $l0;
        android.graphics.Bitmap $r8;
        android.graphics.Bitmap$CompressFormat $r9;
        java.io.ByteArrayInputStream $r10;
        byte[] $r11;
        java.io.InputStream $r12;

        r0 := @this: com.nostra13.universalimageloader.core.download.BaseImageDownloader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r4 = r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: android.content.Context context>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r6 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r1);

        $z0 = specialinvoke r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: boolean isVideoContentUri(android.net.Uri)>($r6);

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r6.<android.net.Uri: java.lang.String getLastPathSegment()>();

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r1);

        $l0 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

        $r8 = staticinvoke <android.provider.MediaStore$Video$Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory$Options)>($r5, $l0, 1, null);

        if $r8 == null goto label2;

        r3 = new java.io.ByteArrayOutputStream;

        specialinvoke r3.<java.io.ByteArrayOutputStream: void <init>()>();

        $r9 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

        virtualinvoke $r8.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r9, 0, r3);

        $r10 = new java.io.ByteArrayInputStream;

        $r11 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r10.<java.io.ByteArrayInputStream: void <init>(byte[])>($r11);

        return $r10;

     label1:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("content://com.android.contacts/");

        if $z0 == 0 goto label2;

        $r12 = virtualinvoke r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: java.io.InputStream getContactPhotoStream(android.net.Uri)>($r6);

        return $r12;

     label2:
        $r12 = virtualinvoke $r5.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>($r6);

        return $r12;
    }
    protected java.io.InputStream getStreamFromDrawable(java.lang.String, java.lang.Object)
    {
        com.nostra13.universalimageloader.core.download.BaseImageDownloader r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme $r3;
        int $i0;
        android.content.Context $r4;
        android.content.res.Resources $r5;
        java.io.InputStream $r6;

        r0 := @this: com.nostra13.universalimageloader.core.download.BaseImageDownloader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 = <com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme: com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme DRAWABLE>;

        $r1 = virtualinvoke $r3.<com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme: java.lang.String crop(java.lang.String)>($r1);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        $r4 = r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: android.content.Context context>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: java.io.InputStream openRawResource(int)>($i0);

        return $r6;
    }
    protected java.io.InputStream getStreamFromFile(java.lang.String, java.lang.Object) throws java.io.IOException
    {
        com.nostra13.universalimageloader.core.download.BaseImageDownloader r0;
        java.lang.String $r1, $r5;
        java.lang.Object $r2;
        java.io.BufferedInputStream r3;
        com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme $r4;
        boolean $z0;
        java.io.InputStream $r6;
        java.io.FileInputStream $r7;
        com.nostra13.universalimageloader.core.assist.ContentLengthInputStream $r8;
        java.io.File $r9;
        long $l0;
        int $i1;

        r0 := @this: com.nostra13.universalimageloader.core.download.BaseImageDownloader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r4 = <com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme: com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme FILE>;

        $r5 = virtualinvoke $r4.<com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme: java.lang.String crop(java.lang.String)>($r1);

        $z0 = specialinvoke r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: boolean isVideoFileUri(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $r6 = specialinvoke r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: java.io.InputStream getVideoThumbnailStream(java.lang.String)>($r5);

        return $r6;

     label1:
        r3 = new java.io.BufferedInputStream;

        $r7 = new java.io.FileInputStream;

        specialinvoke $r7.<java.io.FileInputStream: void <init>(java.lang.String)>($r5);

        specialinvoke r3.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r7, 32768);

        $r8 = new com.nostra13.universalimageloader.core.assist.ContentLengthInputStream;

        $r9 = new java.io.File;

        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>($r5);

        $l0 = virtualinvoke $r9.<java.io.File: long length()>();

        $i1 = (int) $l0;

        specialinvoke $r8.<com.nostra13.universalimageloader.core.assist.ContentLengthInputStream: void <init>(java.io.InputStream,int)>(r3, $i1);

        return $r8;
    }
    protected java.io.InputStream getStreamFromNetwork(java.lang.String, java.lang.Object) throws java.io.IOException
    {
        com.nostra13.universalimageloader.core.download.BaseImageDownloader r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.io.IOException r3;
        java.net.HttpURLConnection $r4;
        int i0, $i1;
        java.io.InputStream $r5;
        boolean $z0;
        java.lang.StringBuilder $r6;
        com.nostra13.universalimageloader.core.assist.ContentLengthInputStream $r7;
        java.io.BufferedInputStream $r8;

        r0 := @this: com.nostra13.universalimageloader.core.download.BaseImageDownloader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r4 = virtualinvoke r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: java.net.HttpURLConnection createConnection(java.lang.String,java.lang.Object)>($r1, $r2);

        i0 = 0;

     label1:
        $i1 = virtualinvoke $r4.<java.net.HttpURLConnection: int getResponseCode()>();

        $i1 = $i1 / 100;

        if $i1 != 3 goto label2;

        if i0 >= 5 goto label2;

        $r1 = virtualinvoke $r4.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("Location");

        $r4 = virtualinvoke r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: java.net.HttpURLConnection createConnection(java.lang.String,java.lang.Object)>($r1, $r2);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r5 = virtualinvoke $r4.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label3:
        $z0 = virtualinvoke r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: boolean shouldBeProcessed(java.net.HttpURLConnection)>($r4);

        if $z0 != 0 goto label5;

        staticinvoke <com.nostra13.universalimageloader.utils.IoUtils: void closeSilently(java.io.Closeable)>($r5);

        r3 = new java.io.IOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Image request failed with response code ");

        i0 = virtualinvoke $r4.<java.net.HttpURLConnection: int getResponseCode()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r3.<java.io.IOException: void <init>(java.lang.String)>($r1);

        throw r3;

     label4:
        r3 := @caughtexception;

        $r5 = virtualinvoke $r4.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

        staticinvoke <com.nostra13.universalimageloader.utils.IoUtils: void readAndCloseStream(java.io.InputStream)>($r5);

        throw r3;

     label5:
        $r7 = new com.nostra13.universalimageloader.core.assist.ContentLengthInputStream;

        $r8 = new java.io.BufferedInputStream;

        specialinvoke $r8.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r5, 32768);

        i0 = virtualinvoke $r4.<java.net.HttpURLConnection: int getContentLength()>();

        specialinvoke $r7.<com.nostra13.universalimageloader.core.assist.ContentLengthInputStream: void <init>(java.io.InputStream,int)>($r8, i0);

        return $r7;

        catch java.io.IOException from label2 to label3 with label4;
    }
    protected java.io.InputStream getStreamFromOtherSource(java.lang.String, java.lang.Object) throws java.io.IOException
    {
        com.nostra13.universalimageloader.core.download.BaseImageDownloader r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.lang.UnsupportedOperationException $r3;
        java.lang.Object[] $r4;

        r0 := @this: com.nostra13.universalimageloader.core.download.BaseImageDownloader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 = new java.lang.UnsupportedOperationException;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r1;

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("UIL doesn\'t support scheme(protocol) by default [%s]. You should implement this support yourself (BaseImageDownloader.getStreamFromOtherSource(...))", $r4);

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r1);

        throw $r3;
    }
    protected boolean shouldBeProcessed(java.net.HttpURLConnection) throws java.io.IOException
    {
        com.nostra13.universalimageloader.core.download.BaseImageDownloader r0;
        java.net.HttpURLConnection $r1;
        int $i0;

        r0 := @this: com.nostra13.universalimageloader.core.download.BaseImageDownloader;

        $r1 := @parameter0: java.net.HttpURLConnection;

        $i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>();

        if $i0 != 200 goto label1;

        return 1;

     label1:
        return 0;
    }
