com.nostra13.universalimageloader.core.LoadAndDisplayImageTask extends java.lang.Object implements com.nostra13.universalimageloader.utils.IoUtils$CopyListener java.lang.Runnable
private final com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration
private final com.nostra13.universalimageloader.core.decode.ImageDecoder decoder
private final com.nostra13.universalimageloader.core.download.ImageDownloader downloader
private final com.nostra13.universalimageloader.core.ImageLoaderEngine engine
private final android.os.Handler handler
final com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware
private final com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo
final com.nostra13.universalimageloader.core.listener.ImageLoadingListener listener
private com.nostra13.universalimageloader.core.assist.LoadedFrom loadedFrom
private final java.lang.String memoryCacheKey
private final com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader
final com.nostra13.universalimageloader.core.DisplayImageOptions options
final com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener progressListener
private final com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader
private final boolean syncLoading
private final com.nostra13.universalimageloader.core.assist.ImageSize targetSize
final java.lang.String uri
    public void <init>(com.nostra13.universalimageloader.core.ImageLoaderEngine, com.nostra13.universalimageloader.core.ImageLoadingInfo, android.os.Handler)
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask r0;
        com.nostra13.universalimageloader.core.ImageLoaderEngine $r1;
        com.nostra13.universalimageloader.core.ImageLoadingInfo $r2;
        android.os.Handler $r3;
        boolean $z0;
        com.nostra13.universalimageloader.core.assist.LoadedFrom $r4;
        com.nostra13.universalimageloader.core.ImageLoaderConfiguration $r5;
        com.nostra13.universalimageloader.core.download.ImageDownloader $r6;
        com.nostra13.universalimageloader.core.decode.ImageDecoder $r7;
        java.lang.String $r8;
        com.nostra13.universalimageloader.core.imageaware.ImageAware $r9;
        com.nostra13.universalimageloader.core.assist.ImageSize $r10;
        com.nostra13.universalimageloader.core.DisplayImageOptions $r11;
        com.nostra13.universalimageloader.core.listener.ImageLoadingListener $r12;
        com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener $r13;

        r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        $r1 := @parameter0: com.nostra13.universalimageloader.core.ImageLoaderEngine;

        $r2 := @parameter1: com.nostra13.universalimageloader.core.ImageLoadingInfo;

        $r3 := @parameter2: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = <com.nostra13.universalimageloader.core.assist.LoadedFrom: com.nostra13.universalimageloader.core.assist.LoadedFrom NETWORK>;

        r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.assist.LoadedFrom loadedFrom> = $r4;

        r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderEngine engine> = $r1;

        r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo> = $r2;

        r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: android.os.Handler handler> = $r3;

        $r5 = $r1.<com.nostra13.universalimageloader.core.ImageLoaderEngine: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration> = $r5;

        $r5 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $r6 = $r5.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: com.nostra13.universalimageloader.core.download.ImageDownloader downloader>;

        r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.download.ImageDownloader downloader> = $r6;

        $r5 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $r6 = $r5.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader>;

        r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader> = $r6;

        $r5 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $r6 = $r5.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader>;

        r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader> = $r6;

        $r5 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $r7 = $r5.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: com.nostra13.universalimageloader.core.decode.ImageDecoder decoder>;

        r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.decode.ImageDecoder decoder> = $r7;

        $r8 = $r2.<com.nostra13.universalimageloader.core.ImageLoadingInfo: java.lang.String uri>;

        r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String uri> = $r8;

        $r8 = $r2.<com.nostra13.universalimageloader.core.ImageLoadingInfo: java.lang.String memoryCacheKey>;

        r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey> = $r8;

        $r9 = $r2.<com.nostra13.universalimageloader.core.ImageLoadingInfo: com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware>;

        r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware> = $r9;

        $r10 = $r2.<com.nostra13.universalimageloader.core.ImageLoadingInfo: com.nostra13.universalimageloader.core.assist.ImageSize targetSize>;

        r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.assist.ImageSize targetSize> = $r10;

        $r11 = $r2.<com.nostra13.universalimageloader.core.ImageLoadingInfo: com.nostra13.universalimageloader.core.DisplayImageOptions options>;

        r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.DisplayImageOptions options> = $r11;

        $r12 = $r2.<com.nostra13.universalimageloader.core.ImageLoadingInfo: com.nostra13.universalimageloader.core.listener.ImageLoadingListener listener>;

        r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.listener.ImageLoadingListener listener> = $r12;

        $r13 = $r2.<com.nostra13.universalimageloader.core.ImageLoadingInfo: com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener progressListener>;

        r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener progressListener> = $r13;

        $r11 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.DisplayImageOptions options>;

        $z0 = virtualinvoke $r11.<com.nostra13.universalimageloader.core.DisplayImageOptions: boolean isSyncLoading()>();

        r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean syncLoading> = $z0;

        return;
    }
    static com.nostra13.universalimageloader.core.ImageLoaderConfiguration access$000(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask)
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask $r0;
        com.nostra13.universalimageloader.core.ImageLoaderConfiguration r1;

        $r0 := @parameter0: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        r1 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        return r1;
    }
    private void checkTaskInterrupted() throws com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask r0;
        boolean $z0;
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException $r1;

        r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        $z0 = specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean isTaskInterrupted()>();

        if $z0 == 0 goto label1;

        $r1 = new com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException;

        specialinvoke $r1.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException: void <init>(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask)>(r0);

        throw $r1;

     label1:
        return;
    }
    private void checkTaskNotActual() throws com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask r0;

        r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: void checkViewCollected()>();

        specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: void checkViewReused()>();

        return;
    }
    private void checkViewCollected() throws com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask r0;
        boolean $z0;
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException $r1;

        r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        $z0 = specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean isViewCollected()>();

        if $z0 == 0 goto label1;

        $r1 = new com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException;

        specialinvoke $r1.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException: void <init>(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask)>(r0);

        throw $r1;

     label1:
        return;
    }
    private void checkViewReused() throws com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask r0;
        boolean $z0;
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException $r1;

        r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        $z0 = specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean isViewReused()>();

        if $z0 == 0 goto label1;

        $r1 = new com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException;

        specialinvoke $r1.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException: void <init>(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask)>(r0);

        throw $r1;

     label1:
        return;
    }
    private android.graphics.Bitmap decodeImage(java.lang.String) throws java.io.IOException
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask r0;
        java.lang.String $r1, $r3, $r8;
        com.nostra13.universalimageloader.core.decode.ImageDecodingInfo r2;
        com.nostra13.universalimageloader.core.assist.ImageSize $r4;
        com.nostra13.universalimageloader.core.DisplayImageOptions $r5;
        com.nostra13.universalimageloader.core.imageaware.ImageAware $r6;
        com.nostra13.universalimageloader.core.assist.ViewScaleType $r7;
        com.nostra13.universalimageloader.core.download.ImageDownloader $r9;
        com.nostra13.universalimageloader.core.decode.ImageDecoder $r10;
        android.graphics.Bitmap $r11;

        r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        $r1 := @parameter0: java.lang.String;

        $r6 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware>;

        $r7 = interfaceinvoke $r6.<com.nostra13.universalimageloader.core.imageaware.ImageAware: com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType()>();

        r2 = new com.nostra13.universalimageloader.core.decode.ImageDecodingInfo;

        $r8 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r3 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String uri>;

        $r4 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.assist.ImageSize targetSize>;

        $r9 = specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader()>();

        $r5 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.DisplayImageOptions options>;

        specialinvoke r2.<com.nostra13.universalimageloader.core.decode.ImageDecodingInfo: void <init>(java.lang.String,java.lang.String,java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType,com.nostra13.universalimageloader.core.download.ImageDownloader,com.nostra13.universalimageloader.core.DisplayImageOptions)>($r8, $r1, $r3, $r4, $r7, $r9, $r5);

        $r10 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.decode.ImageDecoder decoder>;

        $r11 = interfaceinvoke $r10.<com.nostra13.universalimageloader.core.decode.ImageDecoder: android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo)>(r2);

        return $r11;
    }
    private boolean delayIfNeed()
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask r0;
        java.lang.InterruptedException r1;
        com.nostra13.universalimageloader.core.DisplayImageOptions $r2;
        boolean $z0;
        java.lang.Object[] $r3;
        int $i0;
        java.lang.Integer $r4;
        java.lang.String $r5;
        long $l1;

        r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        $r2 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.DisplayImageOptions options>;

        $z0 = virtualinvoke $r2.<com.nostra13.universalimageloader.core.DisplayImageOptions: boolean shouldDelayBeforeLoading()>();

        if $z0 == 0 goto label6;

        $r3 = newarray (java.lang.Object)[2];

        $r2 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.DisplayImageOptions options>;

        $i0 = virtualinvoke $r2.<com.nostra13.universalimageloader.core.DisplayImageOptions: int getDelayBeforeLoading()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[0] = $r4;

        $r5 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r3[1] = $r5;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void d(java.lang.String,java.lang.Object[])>("Delay %d ms before loading...  [%s]", $r3);

        $r2 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.DisplayImageOptions options>;

     label1:
        $i0 = virtualinvoke $r2.<com.nostra13.universalimageloader.core.DisplayImageOptions: int getDelayBeforeLoading()>();

     label2:
        $l1 = (long) $i0;

     label3:
        staticinvoke <java.lang.Thread: void sleep(long)>($l1);

     label4:
        $z0 = specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean isTaskNotActual()>();

        return $z0;

     label5:
        r1 := @caughtexception;

        $r3 = newarray (java.lang.Object)[1];

        $r5 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r3[0] = $r5;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void e(java.lang.String,java.lang.Object[])>("Task was interrupted [%s]", $r3);

        return 1;

     label6:
        return 0;

        catch java.lang.InterruptedException from label1 to label2 with label5;
        catch java.lang.InterruptedException from label3 to label4 with label5;
    }
    private boolean downloadImage() throws java.io.IOException
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask r0;
        com.nostra13.universalimageloader.core.download.ImageDownloader $r1;
        java.lang.String $r2;
        com.nostra13.universalimageloader.core.DisplayImageOptions $r3;
        java.lang.Object $r4;
        java.io.InputStream $r5;
        java.lang.Object[] $r6;
        com.nostra13.universalimageloader.core.ImageLoaderConfiguration $r7;
        com.nostra13.universalimageloader.cache.disc.DiskCache $r8;
        boolean $z0;
        java.lang.Throwable $r9;

        r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        $r1 = specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader()>();

        $r2 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String uri>;

        $r3 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.DisplayImageOptions options>;

        $r4 = virtualinvoke $r3.<com.nostra13.universalimageloader.core.DisplayImageOptions: java.lang.Object getExtraForDownloader()>();

        $r5 = interfaceinvoke $r1.<com.nostra13.universalimageloader.core.download.ImageDownloader: java.io.InputStream getStream(java.lang.String,java.lang.Object)>($r2, $r4);

        if $r5 != null goto label1;

        $r6 = newarray (java.lang.Object)[1];

        $r2 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r6[0] = $r2;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void e(java.lang.String,java.lang.Object[])>("No stream for image [%s]", $r6);

        return 0;

     label1:
        $r7 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $r8 = $r7.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: com.nostra13.universalimageloader.cache.disc.DiskCache diskCache>;

        $r2 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String uri>;

        $z0 = interfaceinvoke $r8.<com.nostra13.universalimageloader.cache.disc.DiskCache: boolean save(java.lang.String,java.io.InputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener)>($r2, $r5, r0);

     label2:
        staticinvoke <com.nostra13.universalimageloader.utils.IoUtils: void closeSilently(java.io.Closeable)>($r5);

        return $z0;

     label3:
        $r9 := @caughtexception;

        staticinvoke <com.nostra13.universalimageloader.utils.IoUtils: void closeSilently(java.io.Closeable)>($r5);

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    private void fireCancelEvent()
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask r0;
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$3 r1;
        android.os.Handler $r2;
        com.nostra13.universalimageloader.core.ImageLoaderEngine $r3;
        boolean $z0;

        r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        $z0 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean syncLoading>;

        if $z0 != 0 goto label2;

        $z0 = specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean isTaskInterrupted()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        r1 = new com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$3;

        specialinvoke r1.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$3: void <init>(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask)>(r0);

        $r2 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: android.os.Handler handler>;

        $r3 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderEngine engine>;

        staticinvoke <com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: void runTask(java.lang.Runnable,boolean,android.os.Handler,com.nostra13.universalimageloader.core.ImageLoaderEngine)>(r1, 0, $r2, $r3);

     label2:
        return;
    }
    private void fireFailEvent(com.nostra13.universalimageloader.core.assist.FailReason$FailType, java.lang.Throwable)
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask r0;
        com.nostra13.universalimageloader.core.assist.FailReason$FailType $r1;
        java.lang.Throwable $r2;
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2 r3;
        android.os.Handler $r4;
        com.nostra13.universalimageloader.core.ImageLoaderEngine $r5;
        boolean $z0;

        r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        $r1 := @parameter0: com.nostra13.universalimageloader.core.assist.FailReason$FailType;

        $r2 := @parameter1: java.lang.Throwable;

        $z0 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean syncLoading>;

        if $z0 != 0 goto label2;

        $z0 = specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean isTaskInterrupted()>();

        if $z0 != 0 goto label2;

        $z0 = specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean isTaskNotActual()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        r3 = new com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2;

        specialinvoke r3.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2: void <init>(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask,com.nostra13.universalimageloader.core.assist.FailReason$FailType,java.lang.Throwable)>(r0, $r1, $r2);

        $r4 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: android.os.Handler handler>;

        $r5 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderEngine engine>;

        staticinvoke <com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: void runTask(java.lang.Runnable,boolean,android.os.Handler,com.nostra13.universalimageloader.core.ImageLoaderEngine)>(r3, 0, $r4, $r5);

     label2:
        return;
    }
    private boolean fireProgressEvent(int, int)
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask r0;
        int $i0, $i1;
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1 r1;
        com.nostra13.universalimageloader.core.ImageLoaderEngine $r2;
        boolean $z0;
        com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener $r3;
        android.os.Handler $r4;

        r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 = specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean isTaskInterrupted()>();

        if $z0 != 0 goto label3;

        $z0 = specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean isTaskNotActual()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener progressListener>;

        if $r3 == null goto label2;

        r1 = new com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1;

        specialinvoke r1.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1: void <init>(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask,int,int)>(r0, $i0, $i1);

        $r4 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: android.os.Handler handler>;

        $r2 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderEngine engine>;

        staticinvoke <com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: void runTask(java.lang.Runnable,boolean,android.os.Handler,com.nostra13.universalimageloader.core.ImageLoaderEngine)>(r1, 0, $r4, $r2);

     label2:
        return 1;

     label3:
        return 0;
    }
    private com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader()
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask r0;
        com.nostra13.universalimageloader.core.ImageLoaderEngine $r1;
        boolean $z0;
        com.nostra13.universalimageloader.core.download.ImageDownloader r2;

        r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        $r1 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderEngine engine>;

        $z0 = virtualinvoke $r1.<com.nostra13.universalimageloader.core.ImageLoaderEngine: boolean isNetworkDenied()>();

        if $z0 == 0 goto label1;

        r2 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader>;

        return r2;

     label1:
        $r1 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderEngine engine>;

        $z0 = virtualinvoke $r1.<com.nostra13.universalimageloader.core.ImageLoaderEngine: boolean isSlowNetwork()>();

        if $z0 == 0 goto label2;

        r2 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader>;

        return r2;

     label2:
        r2 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.download.ImageDownloader downloader>;

        return r2;
    }
    private boolean isTaskInterrupted()
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask r0;
        java.lang.Object[] $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        $z0 = staticinvoke <java.lang.Thread: boolean interrupted()>();

        if $z0 == 0 goto label1;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r1[0] = $r2;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void d(java.lang.String,java.lang.Object[])>("Task was interrupted [%s]", $r1);

        return 1;

     label1:
        return 0;
    }
    private boolean isTaskNotActual()
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask r0;
        boolean $z0;

        r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        $z0 = specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean isViewCollected()>();

        if $z0 != 0 goto label1;

        $z0 = specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean isViewReused()>();

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    private boolean isViewCollected()
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask r0;
        java.lang.Object[] $r1;
        java.lang.String $r2;
        boolean $z0;
        com.nostra13.universalimageloader.core.imageaware.ImageAware $r3;

        r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        $r3 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware>;

        $z0 = interfaceinvoke $r3.<com.nostra13.universalimageloader.core.imageaware.ImageAware: boolean isCollected()>();

        if $z0 == 0 goto label1;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r1[0] = $r2;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void d(java.lang.String,java.lang.Object[])>("ImageAware was collected by GC. Task is cancelled. [%s]", $r1);

        return 1;

     label1:
        return 0;
    }
    private boolean isViewReused()
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask r0;
        java.lang.String $r1, $r4;
        com.nostra13.universalimageloader.core.ImageLoaderEngine $r2;
        com.nostra13.universalimageloader.core.imageaware.ImageAware $r3;
        boolean $z0;
        java.lang.Object[] $r5;

        r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        $r2 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderEngine engine>;

        $r3 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware>;

        $r1 = virtualinvoke $r2.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.lang.String getLoadingUriForView(com.nostra13.universalimageloader.core.imageaware.ImageAware)>($r3);

        $r4 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        if $z0 == 0 goto label3;

        $r5 = newarray (java.lang.Object)[1];

        $r1 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r5[0] = $r1;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void d(java.lang.String,java.lang.Object[])>("ImageAware is reused for another image. Task is cancelled. [%s]", $r5);

        return 1;

     label2:
        $z0 = 0;

        goto label1;

     label3:
        return 0;
    }
    private boolean resizeAndSaveImage(int, int) throws java.io.IOException
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask r0;
        int $i0, $i1;
        com.nostra13.universalimageloader.core.decode.ImageDecodingInfo r1;
        com.nostra13.universalimageloader.core.assist.ImageSize r2;
        com.nostra13.universalimageloader.core.assist.ViewScaleType $r3;
        com.nostra13.universalimageloader.core.ImageLoaderConfiguration $r4;
        com.nostra13.universalimageloader.cache.disc.DiskCache $r5;
        java.lang.String $r6, $r12, $r13;
        java.io.File $r7;
        boolean $z0;
        com.nostra13.universalimageloader.core.DisplayImageOptions$Builder $r8;
        com.nostra13.universalimageloader.core.DisplayImageOptions $r9;
        com.nostra13.universalimageloader.core.assist.ImageScaleType $r10;
        com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme $r11;
        com.nostra13.universalimageloader.core.download.ImageDownloader $r14;
        com.nostra13.universalimageloader.core.decode.ImageDecoder $r15;
        android.graphics.Bitmap $r16, r17;
        com.nostra13.universalimageloader.core.process.BitmapProcessor $r18;
        java.lang.Object[] $r19;

        r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r4 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $r5 = $r4.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: com.nostra13.universalimageloader.cache.disc.DiskCache diskCache>;

        $r6 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String uri>;

        $r7 = interfaceinvoke $r5.<com.nostra13.universalimageloader.cache.disc.DiskCache: java.io.File get(java.lang.String)>($r6);

        if $r7 == null goto label2;

        $z0 = virtualinvoke $r7.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label2;

        r2 = new com.nostra13.universalimageloader.core.assist.ImageSize;

        specialinvoke r2.<com.nostra13.universalimageloader.core.assist.ImageSize: void <init>(int,int)>($i0, $i1);

        $r8 = new com.nostra13.universalimageloader.core.DisplayImageOptions$Builder;

        specialinvoke $r8.<com.nostra13.universalimageloader.core.DisplayImageOptions$Builder: void <init>()>();

        $r9 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.DisplayImageOptions options>;

        $r8 = virtualinvoke $r8.<com.nostra13.universalimageloader.core.DisplayImageOptions$Builder: com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cloneFrom(com.nostra13.universalimageloader.core.DisplayImageOptions)>($r9);

        $r10 = <com.nostra13.universalimageloader.core.assist.ImageScaleType: com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_INT>;

        $r8 = virtualinvoke $r8.<com.nostra13.universalimageloader.core.DisplayImageOptions$Builder: com.nostra13.universalimageloader.core.DisplayImageOptions$Builder imageScaleType(com.nostra13.universalimageloader.core.assist.ImageScaleType)>($r10);

        $r9 = virtualinvoke $r8.<com.nostra13.universalimageloader.core.DisplayImageOptions$Builder: com.nostra13.universalimageloader.core.DisplayImageOptions build()>();

        r1 = new com.nostra13.universalimageloader.core.decode.ImageDecodingInfo;

        $r6 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r11 = <com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme: com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme FILE>;

        $r12 = virtualinvoke $r7.<java.io.File: java.lang.String getAbsolutePath()>();

        $r12 = virtualinvoke $r11.<com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme: java.lang.String wrap(java.lang.String)>($r12);

        $r13 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String uri>;

        $r3 = <com.nostra13.universalimageloader.core.assist.ViewScaleType: com.nostra13.universalimageloader.core.assist.ViewScaleType FIT_INSIDE>;

        $r14 = specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader()>();

        specialinvoke r1.<com.nostra13.universalimageloader.core.decode.ImageDecodingInfo: void <init>(java.lang.String,java.lang.String,java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType,com.nostra13.universalimageloader.core.download.ImageDownloader,com.nostra13.universalimageloader.core.DisplayImageOptions)>($r6, $r12, $r13, r2, $r3, $r14, $r9);

        $r15 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.decode.ImageDecoder decoder>;

        $r16 = interfaceinvoke $r15.<com.nostra13.universalimageloader.core.decode.ImageDecoder: android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo)>(r1);

        r17 = $r16;

        if $r16 == null goto label1;

        $r4 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $r18 = $r4.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: com.nostra13.universalimageloader.core.process.BitmapProcessor processorForDiskCache>;

        if $r18 == null goto label1;

        $r19 = newarray (java.lang.Object)[1];

        $r6 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r19[0] = $r6;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void d(java.lang.String,java.lang.Object[])>("Process image before cache on disk [%s]", $r19);

        $r4 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $r18 = $r4.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: com.nostra13.universalimageloader.core.process.BitmapProcessor processorForDiskCache>;

        $r16 = interfaceinvoke $r18.<com.nostra13.universalimageloader.core.process.BitmapProcessor: android.graphics.Bitmap process(android.graphics.Bitmap)>($r16);

        r17 = $r16;

        if $r16 != null goto label1;

        $r19 = newarray (java.lang.Object)[1];

        $r6 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r19[0] = $r6;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void e(java.lang.String,java.lang.Object[])>("Bitmap processor for disk cache returned null [%s]", $r19);

     label1:
        if r17 == null goto label2;

        $r4 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $r5 = $r4.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: com.nostra13.universalimageloader.cache.disc.DiskCache diskCache>;

        $r6 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String uri>;

        $z0 = interfaceinvoke $r5.<com.nostra13.universalimageloader.cache.disc.DiskCache: boolean save(java.lang.String,android.graphics.Bitmap)>($r6, r17);

        virtualinvoke r17.<android.graphics.Bitmap: void recycle()>();

        return $z0;

     label2:
        return 0;
    }
    static void runTask(java.lang.Runnable, boolean, android.os.Handler, com.nostra13.universalimageloader.core.ImageLoaderEngine)
    {
        java.lang.Runnable $r0;
        boolean $z0;
        android.os.Handler $r1;
        com.nostra13.universalimageloader.core.ImageLoaderEngine $r2;

        $r0 := @parameter0: java.lang.Runnable;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: android.os.Handler;

        $r2 := @parameter3: com.nostra13.universalimageloader.core.ImageLoaderEngine;

        if $z0 == 0 goto label1;

        interfaceinvoke $r0.<java.lang.Runnable: void run()>();

        return;

     label1:
        if $r1 != null goto label2;

        virtualinvoke $r2.<com.nostra13.universalimageloader.core.ImageLoaderEngine: void fireCallback(java.lang.Runnable)>($r0);

        return;

     label2:
        virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r0);

        return;
    }
    private boolean tryCacheImageOnDisk() throws com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask r0;
        java.io.IOException r1;
        int i0, i1;
        boolean $z0;
        java.lang.Object[] $r2;
        java.lang.String $r3;
        com.nostra13.universalimageloader.core.ImageLoaderConfiguration $r4;

        r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        $r2 = newarray (java.lang.Object)[1];

        $r3 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r2[0] = $r3;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void d(java.lang.String,java.lang.Object[])>("Cache image on disk [%s]", $r2);

     label1:
        $z0 = specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean downloadImage()>();

     label2:
        if $z0 == 0 goto label7;

        $r4 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        i1 = $r4.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: int maxImageWidthForDiskCache>;

        $r4 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        i0 = $r4.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: int maxImageHeightForDiskCache>;

        if i1 > 0 goto label3;

        if i0 <= 0 goto label7;

     label3:
        $r2 = newarray (java.lang.Object)[1];

        $r3 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r2[0] = $r3;

     label4:
        staticinvoke <com.nostra13.universalimageloader.utils.L: void d(java.lang.String,java.lang.Object[])>("Resize image in disk cache [%s]", $r2);

        specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean resizeAndSaveImage(int,int)>(i1, i0);

     label5:
        return $z0;

     label6:
        r1 := @caughtexception;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void e(java.lang.Throwable)>(r1);

        return 0;

     label7:
        return $z0;

        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.IOException from label4 to label5 with label6;
    }
    private android.graphics.Bitmap tryLoadBitmap() throws com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask r0;
        android.graphics.Bitmap r1, $r9;
        com.nostra13.universalimageloader.core.ImageLoaderConfiguration $r2;
        com.nostra13.universalimageloader.cache.disc.DiskCache $r3;
        java.lang.String $r4, $r11;
        java.io.File $r5;
        boolean $z0;
        long $l0;
        byte $b1;
        java.lang.Object[] $r6;
        com.nostra13.universalimageloader.core.assist.LoadedFrom $r7;
        com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme $r8;
        int $i2;
        com.nostra13.universalimageloader.core.DisplayImageOptions $r10;
        com.nostra13.universalimageloader.core.assist.FailReason$FailType $r12;
        java.lang.IllegalStateException r13;
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException r14;
        java.io.IOException r15;
        java.lang.OutOfMemoryError r16;
        java.lang.Throwable r17;

        r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        r1 = null;

     label01:
        $r2 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $r3 = $r2.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: com.nostra13.universalimageloader.cache.disc.DiskCache diskCache>;

        $r4 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String uri>;

     label02:
        $r5 = interfaceinvoke $r3.<com.nostra13.universalimageloader.cache.disc.DiskCache: java.io.File get(java.lang.String)>($r4);

     label03:
        if $r5 == null goto label16;

     label04:
        $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>();

     label05:
        if $z0 == 0 goto label16;

     label06:
        $l0 = virtualinvoke $r5.<java.io.File: long length()>();

     label07:
        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label16;

     label08:
        $r6 = newarray (java.lang.Object)[1];

        $r4 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r6[0] = $r4;

     label09:
        staticinvoke <com.nostra13.universalimageloader.utils.L: void d(java.lang.String,java.lang.Object[])>("Load image from disk cache [%s]", $r6);

     label10:
        $r7 = <com.nostra13.universalimageloader.core.assist.LoadedFrom: com.nostra13.universalimageloader.core.assist.LoadedFrom DISC_CACHE>;

     label11:
        r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.assist.LoadedFrom loadedFrom> = $r7;

     label12:
        specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: void checkTaskNotActual()>();

     label13:
        $r8 = <com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme: com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme FILE>;

     label14:
        $r4 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r4 = virtualinvoke $r8.<com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme: java.lang.String wrap(java.lang.String)>($r4);

        $r9 = specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: android.graphics.Bitmap decodeImage(java.lang.String)>($r4);

     label15:
        r1 = $r9;

     label16:
        if r1 == null goto label21;

     label17:
        $i2 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

     label18:
        if $i2 <= 0 goto label21;

     label19:
        $i2 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

     label20:
        if $i2 > 0 goto label48;

     label21:
        $r6 = newarray (java.lang.Object)[1];

        $r4 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r6[0] = $r4;

     label22:
        staticinvoke <com.nostra13.universalimageloader.utils.L: void d(java.lang.String,java.lang.Object[])>("Load image from network [%s]", $r6);

     label23:
        $r7 = <com.nostra13.universalimageloader.core.assist.LoadedFrom: com.nostra13.universalimageloader.core.assist.LoadedFrom NETWORK>;

     label24:
        r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.assist.LoadedFrom loadedFrom> = $r7;

        $r4 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String uri>;

        $r10 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.DisplayImageOptions options>;

     label25:
        $z0 = virtualinvoke $r10.<com.nostra13.universalimageloader.core.DisplayImageOptions: boolean isCacheOnDisk()>();

     label26:
        if $z0 == 0 goto label34;

     label27:
        $z0 = specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean tryCacheImageOnDisk()>();

     label28:
        if $z0 == 0 goto label34;

     label29:
        $r2 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $r3 = $r2.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: com.nostra13.universalimageloader.cache.disc.DiskCache diskCache>;

        $r11 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String uri>;

     label30:
        $r5 = interfaceinvoke $r3.<com.nostra13.universalimageloader.cache.disc.DiskCache: java.io.File get(java.lang.String)>($r11);

     label31:
        if $r5 == null goto label34;

     label32:
        $r8 = <com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme: com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme FILE>;

     label33:
        $r4 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r4 = virtualinvoke $r8.<com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme: java.lang.String wrap(java.lang.String)>($r4);

     label34:
        specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: void checkTaskNotActual()>();

        $r9 = specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: android.graphics.Bitmap decodeImage(java.lang.String)>($r4);

     label35:
        r1 = $r9;

        if $r9 == null goto label40;

     label36:
        $i2 = virtualinvoke $r9.<android.graphics.Bitmap: int getWidth()>();

     label37:
        if $i2 <= 0 goto label40;

     label38:
        $i2 = virtualinvoke $r9.<android.graphics.Bitmap: int getHeight()>();

     label39:
        if $i2 > 0 goto label49;

     label40:
        $r12 = <com.nostra13.universalimageloader.core.assist.FailReason$FailType: com.nostra13.universalimageloader.core.assist.FailReason$FailType DECODING_ERROR>;

     label41:
        specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: void fireFailEvent(com.nostra13.universalimageloader.core.assist.FailReason$FailType,java.lang.Throwable)>($r12, null);

     label42:
        return $r9;

     label43:
        r13 := @caughtexception;

        $r12 = <com.nostra13.universalimageloader.core.assist.FailReason$FailType: com.nostra13.universalimageloader.core.assist.FailReason$FailType NETWORK_DENIED>;

        specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: void fireFailEvent(com.nostra13.universalimageloader.core.assist.FailReason$FailType,java.lang.Throwable)>($r12, null);

        return r1;

     label44:
        r14 := @caughtexception;

        throw r14;

     label45:
        r15 := @caughtexception;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void e(java.lang.Throwable)>(r15);

        $r12 = <com.nostra13.universalimageloader.core.assist.FailReason$FailType: com.nostra13.universalimageloader.core.assist.FailReason$FailType IO_ERROR>;

        specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: void fireFailEvent(com.nostra13.universalimageloader.core.assist.FailReason$FailType,java.lang.Throwable)>($r12, r15);

        return r1;

     label46:
        r16 := @caughtexception;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void e(java.lang.Throwable)>(r16);

        $r12 = <com.nostra13.universalimageloader.core.assist.FailReason$FailType: com.nostra13.universalimageloader.core.assist.FailReason$FailType OUT_OF_MEMORY>;

        specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: void fireFailEvent(com.nostra13.universalimageloader.core.assist.FailReason$FailType,java.lang.Throwable)>($r12, r16);

        return r1;

     label47:
        r17 := @caughtexception;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void e(java.lang.Throwable)>(r17);

        $r12 = <com.nostra13.universalimageloader.core.assist.FailReason$FailType: com.nostra13.universalimageloader.core.assist.FailReason$FailType UNKNOWN>;

        specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: void fireFailEvent(com.nostra13.universalimageloader.core.assist.FailReason$FailType,java.lang.Throwable)>($r12, r17);

     label48:
        return r1;

     label49:
        return $r9;

        catch java.lang.IllegalStateException from label02 to label03 with label43;
        catch java.lang.IllegalStateException from label04 to label05 with label43;
        catch java.lang.IllegalStateException from label06 to label07 with label43;
        catch java.lang.IllegalStateException from label09 to label10 with label43;
        catch java.lang.IllegalStateException from label12 to label13 with label43;
        catch java.lang.IllegalStateException from label14 to label15 with label43;
        catch java.lang.IllegalStateException from label17 to label18 with label43;
        catch java.lang.IllegalStateException from label19 to label20 with label43;
        catch java.lang.IllegalStateException from label22 to label23 with label43;
        catch java.lang.IllegalStateException from label25 to label26 with label43;
        catch java.lang.IllegalStateException from label27 to label28 with label43;
        catch java.lang.IllegalStateException from label30 to label31 with label43;
        catch java.lang.IllegalStateException from label33 to label34 with label43;
        catch java.lang.IllegalStateException from label34 to label35 with label43;
        catch java.lang.IllegalStateException from label36 to label37 with label43;
        catch java.lang.IllegalStateException from label38 to label39 with label43;
        catch java.lang.IllegalStateException from label41 to label42 with label43;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label02 to label03 with label44;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label04 to label05 with label44;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label06 to label07 with label44;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label09 to label10 with label44;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label12 to label13 with label44;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label14 to label15 with label44;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label17 to label18 with label44;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label19 to label20 with label44;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label22 to label23 with label44;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label25 to label26 with label44;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label27 to label28 with label44;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label30 to label31 with label44;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label33 to label34 with label44;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label34 to label35 with label44;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label36 to label37 with label44;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label38 to label39 with label44;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label41 to label42 with label44;
        catch java.io.IOException from label02 to label03 with label45;
        catch java.io.IOException from label04 to label05 with label45;
        catch java.io.IOException from label06 to label07 with label45;
        catch java.io.IOException from label09 to label10 with label45;
        catch java.io.IOException from label12 to label13 with label45;
        catch java.io.IOException from label14 to label15 with label45;
        catch java.io.IOException from label17 to label18 with label45;
        catch java.io.IOException from label19 to label20 with label45;
        catch java.io.IOException from label22 to label23 with label45;
        catch java.io.IOException from label25 to label26 with label45;
        catch java.io.IOException from label27 to label28 with label45;
        catch java.io.IOException from label30 to label31 with label45;
        catch java.io.IOException from label33 to label34 with label45;
        catch java.io.IOException from label34 to label35 with label45;
        catch java.io.IOException from label36 to label37 with label45;
        catch java.io.IOException from label38 to label39 with label45;
        catch java.io.IOException from label41 to label42 with label45;
        catch java.lang.OutOfMemoryError from label02 to label03 with label46;
        catch java.lang.OutOfMemoryError from label04 to label05 with label46;
        catch java.lang.OutOfMemoryError from label06 to label07 with label46;
        catch java.lang.OutOfMemoryError from label09 to label11 with label46;
        catch java.lang.OutOfMemoryError from label12 to label15 with label46;
        catch java.lang.OutOfMemoryError from label17 to label18 with label46;
        catch java.lang.OutOfMemoryError from label19 to label20 with label46;
        catch java.lang.OutOfMemoryError from label22 to label24 with label46;
        catch java.lang.OutOfMemoryError from label25 to label26 with label46;
        catch java.lang.OutOfMemoryError from label27 to label28 with label46;
        catch java.lang.OutOfMemoryError from label30 to label31 with label46;
        catch java.lang.OutOfMemoryError from label32 to label34 with label46;
        catch java.lang.OutOfMemoryError from label34 to label35 with label46;
        catch java.lang.OutOfMemoryError from label36 to label37 with label46;
        catch java.lang.OutOfMemoryError from label38 to label39 with label46;
        catch java.lang.OutOfMemoryError from label40 to label42 with label46;
        catch java.lang.Throwable from label01 to label03 with label47;
        catch java.lang.Throwable from label04 to label05 with label47;
        catch java.lang.Throwable from label06 to label07 with label47;
        catch java.lang.Throwable from label08 to label15 with label47;
        catch java.lang.Throwable from label17 to label18 with label47;
        catch java.lang.Throwable from label19 to label20 with label47;
        catch java.lang.Throwable from label21 to label26 with label47;
        catch java.lang.Throwable from label27 to label28 with label47;
        catch java.lang.Throwable from label29 to label31 with label47;
        catch java.lang.Throwable from label32 to label34 with label47;
        catch java.lang.Throwable from label34 to label35 with label47;
        catch java.lang.Throwable from label36 to label37 with label47;
        catch java.lang.Throwable from label38 to label39 with label47;
        catch java.lang.Throwable from label40 to label42 with label47;
    }
    private boolean waitIfPaused()
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask r0;
        java.lang.InterruptedException r1;
        com.nostra13.universalimageloader.core.ImageLoaderEngine $r2;
        java.util.concurrent.atomic.AtomicBoolean $r3;
        boolean $z0;
        java.lang.Object $r4, $r7;
        java.lang.Object[] $r5;
        java.lang.String $r6;
        java.lang.Throwable $r8;

        r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        $r2 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderEngine engine>;

        $r3 = virtualinvoke $r2.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.concurrent.atomic.AtomicBoolean getPause()>();

        $z0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 == 0 goto label06;

        $r2 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderEngine engine>;

        $r4 = virtualinvoke $r2.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.lang.Object getPauseLock()>();

        entermonitor $r4;

     label01:
        $z0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 == 0 goto label05;

        $r5 = newarray (java.lang.Object)[1];

        $r6 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r5[0] = $r6;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void d(java.lang.String,java.lang.Object[])>("ImageLoader is paused. Waiting...  [%s]", $r5);

     label02:
        $r2 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderEngine engine>;

     label03:
        $r7 = virtualinvoke $r2.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.lang.Object getPauseLock()>();

        virtualinvoke $r7.<java.lang.Object: void wait()>();

     label04:
        $r5 = newarray (java.lang.Object)[1];

        $r6 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r5[0] = $r6;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void d(java.lang.String,java.lang.Object[])>(".. Resume loading [%s]", $r5);

     label05:
        exitmonitor $r4;

     label06:
        $z0 = specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean isTaskNotActual()>();

        return $z0;

     label07:
        r1 := @caughtexception;

     label08:
        $r5 = newarray (java.lang.Object)[1];

        $r6 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r5[0] = $r6;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void e(java.lang.String,java.lang.Object[])>("Task was interrupted [%s]", $r5);

        exitmonitor $r4;

     label09:
        return 1;

     label10:
        $r8 := @caughtexception;

        exitmonitor $r4;

     label11:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.InterruptedException from label03 to label04 with label07;
        catch java.lang.Throwable from label02 to label04 with label10;
        catch java.lang.Throwable from label04 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }
    java.lang.String getLoadingUri()
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask r0;
        java.lang.String r1;

        r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        r1 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String uri>;

        return r1;
    }
    public boolean onBytesCopied(int, int)
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean syncLoading>;

        if $z0 != 0 goto label1;

        $z0 = specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean fireProgressEvent(int,int)>($i0, $i1);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    public void run()
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask r0;
        com.nostra13.universalimageloader.core.DisplayBitmapTask r1;
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException r2;
        java.util.concurrent.locks.ReentrantLock r3;
        boolean $z0;
        com.nostra13.universalimageloader.core.ImageLoadingInfo $r4;
        java.lang.Object[] $r5;
        java.lang.String $r6;
        com.nostra13.universalimageloader.core.ImageLoaderConfiguration $r7;
        com.nostra13.universalimageloader.cache.memory.MemoryCache $r8;
        android.graphics.Bitmap $r9, r10;
        com.nostra13.universalimageloader.core.DisplayImageOptions $r11;
        com.nostra13.universalimageloader.core.process.BitmapProcessor $r12;
        com.nostra13.universalimageloader.core.ImageLoaderEngine $r13;
        com.nostra13.universalimageloader.core.assist.LoadedFrom $r14;
        android.os.Handler $r15;
        java.lang.Throwable $r16;

        r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        $z0 = specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean waitIfPaused()>();

        if $z0 == 0 goto label01;

        return;

     label01:
        $z0 = specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean delayIfNeed()>();

        if $z0 != 0 goto label50;

        $r4 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo>;

        r3 = $r4.<com.nostra13.universalimageloader.core.ImageLoadingInfo: java.util.concurrent.locks.ReentrantLock loadFromUriLock>;

        $r5 = newarray (java.lang.Object)[1];

        $r6 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r5[0] = $r6;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void d(java.lang.String,java.lang.Object[])>("Start display image task [%s]", $r5);

        $z0 = virtualinvoke r3.<java.util.concurrent.locks.ReentrantLock: boolean isLocked()>();

        if $z0 == 0 goto label02;

        $r5 = newarray (java.lang.Object)[1];

        $r6 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r5[0] = $r6;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void d(java.lang.String,java.lang.Object[])>("Image already is loading. Waiting... [%s]", $r5);

     label02:
        virtualinvoke r3.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label03:
        specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: void checkTaskNotActual()>();

     label04:
        $r7 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $r8 = $r7.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: com.nostra13.universalimageloader.cache.memory.MemoryCache memoryCache>;

        $r6 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

     label05:
        $r9 = interfaceinvoke $r8.<com.nostra13.universalimageloader.cache.memory.MemoryCache: android.graphics.Bitmap get(java.lang.String)>($r6);

     label06:
        r10 = $r9;

        if $r9 == null goto label09;

     label07:
        $z0 = virtualinvoke $r9.<android.graphics.Bitmap: boolean isRecycled()>();

     label08:
        if $z0 == 0 goto label43;

     label09:
        $r9 = specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: android.graphics.Bitmap tryLoadBitmap()>();

     label10:
        r10 = $r9;

        if $r9 != null goto label11;

        virtualinvoke r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;

     label11:
        specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: void checkTaskNotActual()>();

        specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: void checkTaskInterrupted()>();

     label12:
        $r11 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.DisplayImageOptions options>;

     label13:
        $z0 = virtualinvoke $r11.<com.nostra13.universalimageloader.core.DisplayImageOptions: boolean shouldPreProcess()>();

     label14:
        if $z0 == 0 goto label22;

     label15:
        $r5 = newarray (java.lang.Object)[1];

        $r6 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r5[0] = $r6;

     label16:
        staticinvoke <com.nostra13.universalimageloader.utils.L: void d(java.lang.String,java.lang.Object[])>("PreProcess image before caching in memory [%s]", $r5);

     label17:
        $r11 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.DisplayImageOptions options>;

     label18:
        $r12 = virtualinvoke $r11.<com.nostra13.universalimageloader.core.DisplayImageOptions: com.nostra13.universalimageloader.core.process.BitmapProcessor getPreProcessor()>();

        $r9 = interfaceinvoke $r12.<com.nostra13.universalimageloader.core.process.BitmapProcessor: android.graphics.Bitmap process(android.graphics.Bitmap)>($r9);

     label19:
        r10 = $r9;

        if $r9 != null goto label22;

     label20:
        $r5 = newarray (java.lang.Object)[1];

        $r6 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r5[0] = $r6;

     label21:
        staticinvoke <com.nostra13.universalimageloader.utils.L: void e(java.lang.String,java.lang.Object[])>("Pre-processor returned null [%s]", $r5);

     label22:
        if r10 == null goto label30;

     label23:
        $r11 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.DisplayImageOptions options>;

     label24:
        $z0 = virtualinvoke $r11.<com.nostra13.universalimageloader.core.DisplayImageOptions: boolean isCacheInMemory()>();

     label25:
        if $z0 == 0 goto label30;

     label26:
        $r5 = newarray (java.lang.Object)[1];

        $r6 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r5[0] = $r6;

     label27:
        staticinvoke <com.nostra13.universalimageloader.utils.L: void d(java.lang.String,java.lang.Object[])>("Cache image in memory [%s]", $r5);

     label28:
        $r7 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $r8 = $r7.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: com.nostra13.universalimageloader.cache.memory.MemoryCache memoryCache>;

        $r6 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

     label29:
        interfaceinvoke $r8.<com.nostra13.universalimageloader.cache.memory.MemoryCache: boolean put(java.lang.String,android.graphics.Bitmap)>($r6, r10);

     label30:
        if r10 == null goto label41;

     label31:
        $r11 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.DisplayImageOptions options>;

     label32:
        $z0 = virtualinvoke $r11.<com.nostra13.universalimageloader.core.DisplayImageOptions: boolean shouldPostProcess()>();

     label33:
        if $z0 == 0 goto label41;

     label34:
        $r5 = newarray (java.lang.Object)[1];

        $r6 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r5[0] = $r6;

     label35:
        staticinvoke <com.nostra13.universalimageloader.utils.L: void d(java.lang.String,java.lang.Object[])>("PostProcess image before displaying [%s]", $r5);

     label36:
        $r11 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.DisplayImageOptions options>;

     label37:
        $r12 = virtualinvoke $r11.<com.nostra13.universalimageloader.core.DisplayImageOptions: com.nostra13.universalimageloader.core.process.BitmapProcessor getPostProcessor()>();

        $r9 = interfaceinvoke $r12.<com.nostra13.universalimageloader.core.process.BitmapProcessor: android.graphics.Bitmap process(android.graphics.Bitmap)>(r10);

     label38:
        r10 = $r9;

        if $r9 != null goto label41;

     label39:
        $r5 = newarray (java.lang.Object)[1];

        $r6 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r5[0] = $r6;

     label40:
        staticinvoke <com.nostra13.universalimageloader.utils.L: void e(java.lang.String,java.lang.Object[])>("Post-processor returned null [%s]", $r5);

     label41:
        specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: void checkTaskNotActual()>();

        specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: void checkTaskInterrupted()>();

     label42:
        virtualinvoke r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        r1 = new com.nostra13.universalimageloader.core.DisplayBitmapTask;

        $r4 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo>;

        $r13 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderEngine engine>;

        $r14 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.assist.LoadedFrom loadedFrom>;

        specialinvoke r1.<com.nostra13.universalimageloader.core.DisplayBitmapTask: void <init>(android.graphics.Bitmap,com.nostra13.universalimageloader.core.ImageLoadingInfo,com.nostra13.universalimageloader.core.ImageLoaderEngine,com.nostra13.universalimageloader.core.assist.LoadedFrom)>(r10, $r4, $r13, $r14);

        $z0 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean syncLoading>;

        $r15 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: android.os.Handler handler>;

        $r13 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderEngine engine>;

        staticinvoke <com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: void runTask(java.lang.Runnable,boolean,android.os.Handler,com.nostra13.universalimageloader.core.ImageLoaderEngine)>(r1, $z0, $r15, $r13);

        return;

     label43:
        $r14 = <com.nostra13.universalimageloader.core.assist.LoadedFrom: com.nostra13.universalimageloader.core.assist.LoadedFrom MEMORY_CACHE>;

        r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.assist.LoadedFrom loadedFrom> = $r14;

        $r5 = newarray (java.lang.Object)[1];

        $r6 = r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r5[0] = $r6;

     label44:
        staticinvoke <com.nostra13.universalimageloader.utils.L: void d(java.lang.String,java.lang.Object[])>("...Get cached bitmap from memory after waiting. [%s]", $r5);

     label45:
        goto label30;

     label46:
        r2 := @caughtexception;

     label47:
        specialinvoke r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: void fireCancelEvent()>();

     label48:
        virtualinvoke r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;

     label49:
        $r16 := @caughtexception;

        virtualinvoke r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r16;

     label50:
        return;

        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label03 to label04 with label46;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label05 to label06 with label46;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label07 to label08 with label46;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label09 to label10 with label46;
        catch java.lang.Throwable from label03 to label06 with label49;
        catch java.lang.Throwable from label07 to label08 with label49;
        catch java.lang.Throwable from label09 to label10 with label49;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label11 to label12 with label46;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label13 to label14 with label46;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label16 to label17 with label46;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label18 to label19 with label46;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label21 to label22 with label46;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label24 to label25 with label46;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label27 to label28 with label46;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label29 to label30 with label46;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label32 to label33 with label46;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label35 to label36 with label46;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label37 to label38 with label46;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label40 to label42 with label46;
        catch java.lang.Throwable from label11 to label14 with label49;
        catch java.lang.Throwable from label15 to label19 with label49;
        catch java.lang.Throwable from label20 to label22 with label49;
        catch java.lang.Throwable from label23 to label25 with label49;
        catch java.lang.Throwable from label26 to label30 with label49;
        catch java.lang.Throwable from label31 to label33 with label49;
        catch java.lang.Throwable from label34 to label38 with label49;
        catch java.lang.Throwable from label39 to label42 with label49;
        catch com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException from label44 to label45 with label46;
        catch java.lang.Throwable from label43 to label45 with label49;
        catch java.lang.Throwable from label47 to label48 with label49;
    }
