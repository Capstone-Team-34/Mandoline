com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache extends java.lang.Object implements com.nostra13.universalimageloader.cache.disc.DiskCache
public static final android.graphics.Bitmap$CompressFormat DEFAULT_COMPRESS_FORMAT
protected int bufferSize
protected com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache cache
protected android.graphics.Bitmap$CompressFormat compressFormat
protected int compressQuality
protected final com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator
private java.io.File reserveCacheDir
    static void <clinit>()
    {
        android.graphics.Bitmap$CompressFormat $r0;

        $r0 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

        <com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache: android.graphics.Bitmap$CompressFormat DEFAULT_COMPRESS_FORMAT> = $r0;

        return;
    }
    public void <init>(java.io.File, java.io.File, com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator, long, int) throws java.io.IOException
    {
        com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache r0;
        java.io.File $r1, $r2;
        com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator $r3;
        long $l0;
        int $i1;
        android.graphics.Bitmap$CompressFormat $r4;
        java.lang.IllegalArgumentException $r5;
        byte $b2;

        r0 := @this: com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.io.File;

        $r3 := @parameter2: com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator;

        $l0 := @parameter3: long;

        $i1 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache: int bufferSize> = 32768;

        $r4 = <com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache: android.graphics.Bitmap$CompressFormat DEFAULT_COMPRESS_FORMAT>;

        r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache: android.graphics.Bitmap$CompressFormat compressFormat> = $r4;

        r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache: int compressQuality> = 100;

        if $r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cacheDir argument must be not null");

        throw $r5;

     label1:
        $b2 = $l0 cmp 0L;

        if $b2 >= 0 goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cacheMaxSize argument must be positive number");

        throw $r5;

     label2:
        if $i1 >= 0 goto label3;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cacheMaxFileCount argument must be positive number");

        throw $r5;

     label3:
        if $r3 != null goto label4;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("fileNameGenerator argument must be not null");

        throw $r5;

     label4:
        $b2 = $l0 cmp 0L;

        if $b2 != 0 goto label5;

        $l0 = 9223372036854775807L;

     label5:
        if $i1 != 0 goto label6;

        $i1 = 2147483647;

     label6:
        r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache: java.io.File reserveCacheDir> = $r2;

        r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache: com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator> = $r3;

        specialinvoke r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache: void initCache(java.io.File,java.io.File,long,int)>($r1, $r2, $l0, $i1);

        return;
    }
    private java.lang.String getKey(java.lang.String)
    {
        com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache r0;
        java.lang.String $r1;
        com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator $r2;

        r0 := @this: com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache: com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator>;

        $r1 = interfaceinvoke $r2.<com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator: java.lang.String generate(java.lang.String)>($r1);

        return $r1;
    }
    private void initCache(java.io.File, java.io.File, long, int) throws java.io.IOException
    {
        com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache r0;
        java.io.File $r1, $r2;
        long $l0;
        int $i1;
        java.io.IOException r3;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache $r4;

        r0 := @this: com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.io.File;

        $l0 := @parameter2: long;

        $i1 := @parameter3: int;

     label1:
        $r4 = staticinvoke <com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache open(java.io.File,int,int,long,int)>($r1, 1, 1, $l0, $i1);

     label2:
        r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache cache> = $r4;

        return;

     label3:
        r3 := @caughtexception;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void e(java.lang.Throwable)>(r3);

        if $r2 == null goto label4;

        specialinvoke r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache: void initCache(java.io.File,java.io.File,long,int)>($r2, null, $l0, $i1);

     label4:
        $r4 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache cache>;

        if $r4 != null goto label5;

        throw r3;

     label5:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public java.io.File get(java.lang.String)
    {
        com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache r0;
        java.lang.String $r1;
        java.io.IOException r2;
        java.io.File $r3;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot r4, $r6;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache $r5;
        java.lang.Throwable $r7;

        r0 := @this: com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache;

        $r1 := @parameter0: java.lang.String;

        $r3 = null;

        r4 = null;

     label01:
        $r5 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache cache>;

     label02:
        $r1 = specialinvoke r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache: java.lang.String getKey(java.lang.String)>($r1);

        $r6 = virtualinvoke $r5.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot get(java.lang.String)>($r1);

     label03:
        r4 = $r6;

        if $r6 != null goto label05;

     label04:
        if $r6 == null goto label12;

        virtualinvoke $r6.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot: void close()>();

        return $r3;

     label05:
        $r3 = virtualinvoke $r6.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot: java.io.File getFile(int)>(0);

     label06:
        goto label04;

     label07:
        r2 := @caughtexception;

     label08:
        staticinvoke <com.nostra13.universalimageloader.utils.L: void e(java.lang.Throwable)>(r2);

     label09:
        if r4 == null goto label13;

        virtualinvoke r4.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot: void close()>();

        return null;

     label10:
        $r7 := @caughtexception;

        if r4 == null goto label11;

        virtualinvoke r4.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot: void close()>();

     label11:
        throw $r7;

     label12:
        return $r3;

     label13:
        return null;

        catch java.io.IOException from label02 to label03 with label07;
        catch java.lang.Throwable from label01 to label03 with label10;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }
    public boolean save(java.lang.String, android.graphics.Bitmap) throws java.io.IOException
    {
        com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache r0;
        java.lang.String $r1;
        android.graphics.Bitmap $r2;
        java.io.BufferedOutputStream r3;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache $r4;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor $r5;
        java.io.OutputStream $r6;
        int $i0;
        android.graphics.Bitmap$CompressFormat $r7;
        boolean $z0;
        java.lang.Throwable $r8;

        r0 := @this: com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.graphics.Bitmap;

        $r4 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache cache>;

        $r1 = specialinvoke r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache: java.lang.String getKey(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor edit(java.lang.String)>($r1);

        if $r5 != null goto label1;

        return 0;

     label1:
        r3 = new java.io.BufferedOutputStream;

        $r6 = virtualinvoke $r5.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor: java.io.OutputStream newOutputStream(int)>(0);

        $i0 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache: int bufferSize>;

        specialinvoke r3.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>($r6, $i0);

     label2:
        $r7 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache: android.graphics.Bitmap$CompressFormat compressFormat>;

        $i0 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache: int compressQuality>;

        $z0 = virtualinvoke $r2.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r7, $i0, r3);

     label3:
        staticinvoke <com.nostra13.universalimageloader.utils.IoUtils: void closeSilently(java.io.Closeable)>(r3);

        if $z0 == 0 goto label5;

        virtualinvoke $r5.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor: void commit()>();

        return $z0;

     label4:
        $r8 := @caughtexception;

        staticinvoke <com.nostra13.universalimageloader.utils.IoUtils: void closeSilently(java.io.Closeable)>(r3);

        throw $r8;

     label5:
        virtualinvoke $r5.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor: void abort()>();

        return $z0;

        catch java.lang.Throwable from label2 to label3 with label4;
    }
    public boolean save(java.lang.String, java.io.InputStream, com.nostra13.universalimageloader.utils.IoUtils$CopyListener) throws java.io.IOException
    {
        com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache r0;
        java.lang.String $r1;
        java.io.InputStream $r2;
        com.nostra13.universalimageloader.utils.IoUtils$CopyListener $r3;
        java.io.BufferedOutputStream r4;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache $r5;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor $r6;
        java.io.OutputStream $r7;
        int $i0;
        boolean $z0;
        java.lang.Throwable $r8;

        r0 := @this: com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.InputStream;

        $r3 := @parameter2: com.nostra13.universalimageloader.utils.IoUtils$CopyListener;

        $r5 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache cache>;

        $r1 = specialinvoke r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache: java.lang.String getKey(java.lang.String)>($r1);

        $r6 = virtualinvoke $r5.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor edit(java.lang.String)>($r1);

        if $r6 != null goto label1;

        return 0;

     label1:
        r4 = new java.io.BufferedOutputStream;

        $r7 = virtualinvoke $r6.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor: java.io.OutputStream newOutputStream(int)>(0);

        $i0 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache: int bufferSize>;

        specialinvoke r4.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>($r7, $i0);

     label2:
        $i0 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache: int bufferSize>;

        $z0 = staticinvoke <com.nostra13.universalimageloader.utils.IoUtils: boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int)>($r2, r4, $r3, $i0);

     label3:
        staticinvoke <com.nostra13.universalimageloader.utils.IoUtils: void closeSilently(java.io.Closeable)>(r4);

        if $z0 == 0 goto label4;

        virtualinvoke $r6.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor: void commit()>();

        return $z0;

     label4:
        virtualinvoke $r6.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor: void abort()>();

        return $z0;

     label5:
        $r8 := @caughtexception;

        staticinvoke <com.nostra13.universalimageloader.utils.IoUtils: void closeSilently(java.io.Closeable)>(r4);

        goto label7;

     label6:
        throw $r8;

     label7:
        virtualinvoke $r6.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor: void abort()>();

        goto label6;

        catch java.lang.Throwable from label2 to label3 with label5;
    }
