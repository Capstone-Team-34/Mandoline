com.google.zxing.qrcode.encoder.MaskUtil extends java.lang.Object
    static int applyMaskPenaltyRule1(com.google.zxing.qrcode.encoder.ByteMatrix)
    {
        com.google.zxing.qrcode.encoder.ByteMatrix $r0;
        int $i0, $i1;

        $r0 := @parameter0: com.google.zxing.qrcode.encoder.ByteMatrix;

        $i0 = staticinvoke <com.google.zxing.qrcode.encoder.MaskUtil: int applyMaskPenaltyRule1Internal(com.google.zxing.qrcode.encoder.ByteMatrix,boolean)>($r0, 1);

        $i1 = staticinvoke <com.google.zxing.qrcode.encoder.MaskUtil: int applyMaskPenaltyRule1Internal(com.google.zxing.qrcode.encoder.ByteMatrix,boolean)>($r0, 0);

        $i0 = $i0 + $i1;

        return $i0;
    }
    private static int applyMaskPenaltyRule1Internal(com.google.zxing.qrcode.encoder.ByteMatrix, boolean)
    {
        com.google.zxing.qrcode.encoder.ByteMatrix $r0;
        boolean $z0;
        int i0, $i1, $i2, i3, i4, i6;
        byte[][] $r1;
        byte b5, b7;
        byte[] $r2;

        $r0 := @parameter0: com.google.zxing.qrcode.encoder.ByteMatrix;

        $z0 := @parameter1: boolean;

        i0 = 0;

        if $z0 == 0 goto label07;

        $i1 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getHeight()>();

     label01:
        if $z0 == 0 goto label08;

        $i2 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getWidth()>();

     label02:
        $r1 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: byte[][] getArray()>();

        i3 = 0;

     label03:
        if i3 >= $i1 goto label14;

        i4 = 0;

        b5 = -1;

        i6 = 0;

     label04:
        if i6 >= $i2 goto label12;

        if $z0 == 0 goto label09;

        $r2 = $r1[i3];

        b7 = $r2[i6];

     label05:
        if b7 != b5 goto label10;

        i4 = i4 + 1;

     label06:
        i6 = i6 + 1;

        goto label04;

     label07:
        $i1 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getWidth()>();

        goto label01;

     label08:
        $i2 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getHeight()>();

        goto label02;

     label09:
        $r2 = $r1[i6];

        b7 = $r2[i3];

        goto label05;

     label10:
        if i4 < 5 goto label11;

        i4 = i4 + -5;

        i4 = i4 + 3;

        i0 = i0 + i4;

     label11:
        i4 = 1;

        b5 = b7;

        goto label06;

     label12:
        if i4 < 5 goto label13;

        i6 = i4 + -5;

        i6 = i6 + 3;

        i0 = i0 + i6;

     label13:
        i3 = i3 + 1;

        goto label03;

     label14:
        return i0;
    }
    static int applyMaskPenaltyRule2(com.google.zxing.qrcode.encoder.ByteMatrix)
    {
        com.google.zxing.qrcode.encoder.ByteMatrix $r0;
        byte b0, $b7;
        int i1, $i2, $i3, i4, $i5, $i6;
        byte[][] $r1;
        byte[] $r2;

        $r0 := @parameter0: com.google.zxing.qrcode.encoder.ByteMatrix;

        i1 = 0;

        $r1 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: byte[][] getArray()>();

        $i2 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getWidth()>();

        $i3 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getHeight()>();

        i4 = 0;

     label1:
        $i5 = $i3 + -1;

        if i4 >= $i5 goto label5;

        $i5 = 0;

     label2:
        $i6 = $i2 + -1;

        if $i5 >= $i6 goto label4;

        $r2 = $r1[i4];

        b0 = $r2[$i5];

        $r2 = $r1[i4];

        $i6 = $i5 + 1;

        $b7 = $r2[$i6];

        if b0 != $b7 goto label3;

        $i6 = i4 + 1;

        $r2 = $r1[$i6];

        $b7 = $r2[$i5];

        if b0 != $b7 goto label3;

        $i6 = i4 + 1;

        $r2 = $r1[$i6];

        $i6 = $i5 + 1;

        $b7 = $r2[$i6];

        if b0 != $b7 goto label3;

        i1 = i1 + 1;

     label3:
        $i5 = $i5 + 1;

        goto label2;

     label4:
        i4 = i4 + 1;

        goto label1;

     label5:
        i1 = i1 * 3;

        return i1;
    }
    static int applyMaskPenaltyRule3(com.google.zxing.qrcode.encoder.ByteMatrix)
    {
        com.google.zxing.qrcode.encoder.ByteMatrix $r0;
        byte[] r1;
        int i0, $i1, $i2, i3, i4, $i5, $i7;
        byte[][] $r2;
        byte $b6;
        boolean $z0;

        $r0 := @parameter0: com.google.zxing.qrcode.encoder.ByteMatrix;

        i0 = 0;

        $r2 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: byte[][] getArray()>();

        $i1 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getWidth()>();

        $i2 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getHeight()>();

        i3 = 0;

     label1:
        if i3 >= $i2 goto label8;

        i4 = 0;

     label2:
        if i4 >= $i1 goto label7;

        r1 = $r2[i3];

        $i5 = i4 + 6;

        if $i5 >= $i1 goto label4;

        $b6 = r1[i4];

        if $b6 != 1 goto label4;

        $i5 = i4 + 1;

        $b6 = r1[$i5];

        if $b6 != 0 goto label4;

        $i5 = i4 + 2;

        $b6 = r1[$i5];

        if $b6 != 1 goto label4;

        $i5 = i4 + 3;

        $b6 = r1[$i5];

        if $b6 != 1 goto label4;

        $i5 = i4 + 4;

        $b6 = r1[$i5];

        if $b6 != 1 goto label4;

        $i5 = i4 + 5;

        $b6 = r1[$i5];

        if $b6 != 0 goto label4;

        $i5 = i4 + 6;

        $b6 = r1[$i5];

        if $b6 != 1 goto label4;

        $i5 = i4 + -4;

        $z0 = staticinvoke <com.google.zxing.qrcode.encoder.MaskUtil: boolean isWhiteHorizontal(byte[],int,int)>(r1, $i5, i4);

        if $z0 != 0 goto label3;

        $i5 = i4 + 7;

        $i7 = i4 + 11;

        $z0 = staticinvoke <com.google.zxing.qrcode.encoder.MaskUtil: boolean isWhiteHorizontal(byte[],int,int)>(r1, $i5, $i7);

        if $z0 == 0 goto label4;

     label3:
        i0 = i0 + 1;

     label4:
        $i5 = i3 + 6;

        if $i5 >= $i2 goto label6;

        r1 = $r2[i3];

        $b6 = r1[i4];

        if $b6 != 1 goto label6;

        $i5 = i3 + 1;

        r1 = $r2[$i5];

        $b6 = r1[i4];

        if $b6 != 0 goto label6;

        $i5 = i3 + 2;

        r1 = $r2[$i5];

        $b6 = r1[i4];

        if $b6 != 1 goto label6;

        $i5 = i3 + 3;

        r1 = $r2[$i5];

        $b6 = r1[i4];

        if $b6 != 1 goto label6;

        $i5 = i3 + 4;

        r1 = $r2[$i5];

        $b6 = r1[i4];

        if $b6 != 1 goto label6;

        $i5 = i3 + 5;

        r1 = $r2[$i5];

        $b6 = r1[i4];

        if $b6 != 0 goto label6;

        $i5 = i3 + 6;

        r1 = $r2[$i5];

        $b6 = r1[i4];

        if $b6 != 1 goto label6;

        $i5 = i3 + -4;

        $z0 = staticinvoke <com.google.zxing.qrcode.encoder.MaskUtil: boolean isWhiteVertical(byte[][],int,int,int)>($r2, i4, $i5, i3);

        if $z0 != 0 goto label5;

        $i5 = i3 + 7;

        $i7 = i3 + 11;

        $z0 = staticinvoke <com.google.zxing.qrcode.encoder.MaskUtil: boolean isWhiteVertical(byte[][],int,int,int)>($r2, i4, $i5, $i7);

        if $z0 == 0 goto label6;

     label5:
        i0 = i0 + 1;

     label6:
        i4 = i4 + 1;

        goto label2;

     label7:
        i3 = i3 + 1;

        goto label1;

     label8:
        i0 = i0 * 40;

        return i0;
    }
    static int applyMaskPenaltyRule4(com.google.zxing.qrcode.encoder.ByteMatrix)
    {
        com.google.zxing.qrcode.encoder.ByteMatrix $r0;
        byte[] r1;
        int i0, i1, $i2, i3, i4;
        byte[][] $r2;
        byte $b5;

        $r0 := @parameter0: com.google.zxing.qrcode.encoder.ByteMatrix;

        i0 = 0;

        $r2 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: byte[][] getArray()>();

        i1 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getWidth()>();

        $i2 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getHeight()>();

        i3 = 0;

     label1:
        if i3 >= $i2 goto label5;

        r1 = $r2[i3];

        i4 = 0;

     label2:
        if i4 >= i1 goto label4;

        $b5 = r1[i4];

        if $b5 != 1 goto label3;

        i0 = i0 + 1;

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        i1 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getHeight()>();

        $i2 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getWidth()>();

        i1 = i1 * $i2;

        i0 = i0 * 2;

        i0 = i0 - i1;

        i0 = staticinvoke <java.lang.Math: int abs(int)>(i0);

        i0 = i0 * 10;

        i0 = i0 / i1;

        i0 = i0 * 10;

        return i0;
    }
    static boolean getDataMaskBit(int, int, int)
    {
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        lookupswitch($i0)
        {
            case 0: goto label02;
            case 1: goto label04;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label07;
            case 5: goto label08;
            case 6: goto label09;
            case 7: goto label10;
            default: goto label01;
        };

     label01:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid mask pattern: ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r0;

     label02:
        $i0 = $i2 + $i1;

        $i0 = $i0 & 1;

     label03:
        if $i0 != 0 goto label11;

        return 1;

     label04:
        $i0 = $i2 & 1;

        goto label03;

     label05:
        $i0 = $i1 % 3;

        goto label03;

     label06:
        $i0 = $i2 + $i1;

        $i0 = $i0 % 3;

        goto label03;

     label07:
        $i0 = $i2 / 2;

        $i1 = $i1 / 3;

        $i0 = $i0 + $i1;

        $i0 = $i0 & 1;

        goto label03;

     label08:
        $i1 = $i2 * $i1;

        $i0 = $i1 & 1;

        $i1 = $i1 % 3;

        $i0 = $i0 + $i1;

        goto label03;

     label09:
        $i1 = $i2 * $i1;

        $i0 = $i1 & 1;

        $i1 = $i1 % 3;

        $i0 = $i0 + $i1;

        $i0 = $i0 & 1;

        goto label03;

     label10:
        $i0 = $i2 * $i1;

        $i0 = $i0 % 3;

        $i1 = $i2 + $i1;

        $i1 = $i1 & 1;

        $i0 = $i0 + $i1;

        $i0 = $i0 & 1;

        goto label03;

     label11:
        return 0;
    }
    private static boolean isWhiteHorizontal(byte[], int, int)
    {
        byte[] $r0;
        int $i0, $i1, $i2;
        byte $b3;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

     label1:
        if $i0 >= $i1 goto label3;

        if $i0 < 0 goto label2;

        $i2 = lengthof $r0;

        if $i0 >= $i2 goto label2;

        $b3 = $r0[$i0];

        if $b3 != 1 goto label2;

        return 0;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return 1;
    }
    private static boolean isWhiteVertical(byte[][], int, int, int)
    {
        byte[][] $r0;
        int $i0, $i1, $i2, $i3;
        byte[] $r1;
        byte $b4;

        $r0 := @parameter0: byte[][];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

     label1:
        if $i1 >= $i2 goto label3;

        if $i1 < 0 goto label2;

        $i3 = lengthof $r0;

        if $i1 >= $i3 goto label2;

        $r1 = $r0[$i1];

        $b4 = $r1[$i0];

        if $b4 != 1 goto label2;

        return 0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 1;
    }
