com.google.zxing.oned.Code128Writer extends com.google.zxing.oned.OneDimensionalCodeWriter
    public void <init>()
    {
        com.google.zxing.oned.Code128Writer r0;

        r0 := @this: com.google.zxing.oned.Code128Writer;

        specialinvoke r0.<com.google.zxing.oned.OneDimensionalCodeWriter: void <init>()>();

        return;
    }
    private static boolean isDigits(java.lang.CharSequence, int, int)
    {
        java.lang.CharSequence $r0;
        int $i0, $i1, $i2;
        char $c3;

        $r0 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i1 = $i0 + $i1;

        $i2 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

     label1:
        if $i0 >= $i1 goto label5;

        if $i0 >= $i2 goto label5;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        if $c3 < 48 goto label2;

        if $c3 <= 57 goto label4;

     label2:
        if $c3 == 241 goto label3;

        return 0;

     label3:
        $i1 = $i1 + 1;

     label4:
        $i0 = $i0 + 1;

        goto label1;

     label5:
        if $i1 > $i2 goto label6;

        return 1;

     label6:
        return 0;
    }
    public com.google.zxing.common.BitMatrix encode(java.lang.String, com.google.zxing.BarcodeFormat, int, int, java.util.Map) throws com.google.zxing.WriterException
    {
        com.google.zxing.oned.Code128Writer r0;
        java.lang.String $r1;
        com.google.zxing.BarcodeFormat $r2, $r4;
        int $i0, $i1;
        java.util.Map r3;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6;
        com.google.zxing.common.BitMatrix $r7;

        r0 := @this: com.google.zxing.oned.Code128Writer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.google.zxing.BarcodeFormat;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        r3 := @parameter4: java.util.Map;

        $r4 = <com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat CODE_128>;

        if $r2 == $r4 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can only encode CODE_128, but got ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r5;

     label1:
        $r7 = specialinvoke r0.<com.google.zxing.oned.OneDimensionalCodeWriter: com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map)>($r1, $r2, $i0, $i1, r3);

        return $r7;
    }
    public boolean[] encode(java.lang.String)
    {
        com.google.zxing.oned.Code128Writer r0;
        java.lang.String $r1, $r7;
        java.util.ArrayList r2;
        int i0, i1, i3, i4, i5, i7;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4;
        char $c2;
        byte b6;
        boolean $z0;
        int[][] $r5;
        int[] $r6;
        java.util.Iterator $r8;
        java.lang.Object $r9;
        boolean[] $r10;

        r0 := @this: com.google.zxing.oned.Code128Writer;

        $r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i0 < 1 goto label01;

        if i0 <= 80 goto label02;

     label01:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Contents length should be between 1 and 80 characters, but got ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r3;

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label07;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i1);

        if $c2 < 32 goto label04;

        if $c2 <= 126 goto label06;

     label04:
        lookupswitch($c2)
        {
            case 241: goto label06;
            case 242: goto label06;
            case 243: goto label06;
            case 244: goto label06;
            default: goto label05;
        };

     label05:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad character in input: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r3;

     label06:
        i1 = i1 + 1;

        goto label03;

     label07:
        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        i1 = 0;

        i3 = 1;

        i4 = 0;

        i5 = 0;

     label08:
        if i5 >= i0 goto label25;

        if i4 != 99 goto label14;

        b6 = 2;

     label09:
        $z0 = staticinvoke <com.google.zxing.oned.Code128Writer: boolean isDigits(java.lang.CharSequence,int,int)>($r1, i5, b6);

        if $z0 == 0 goto label15;

        b6 = 99;

     label10:
        if b6 != i4 goto label21;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i5);

        lookupswitch($c2)
        {
            case 241: goto label16;
            case 242: goto label17;
            case 243: goto label18;
            case 244: goto label19;
            default: goto label11;
        };

     label11:
        if i4 != 100 goto label20;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i5);

        i7 = $c2 + -32;

     label12:
        i5 = i5 + 1;

     label13:
        $r5 = <com.google.zxing.oned.Code128Reader: int[][] CODE_PATTERNS>;

        $r6 = $r5[i7];

        interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r6);

        i7 = i7 * i3;

        i1 = i1 + i7;

        if i5 == 0 goto label08;

        i3 = i3 + 1;

        goto label08;

     label14:
        b6 = 4;

        goto label09;

     label15:
        b6 = 100;

        goto label10;

     label16:
        i7 = 102;

        goto label12;

     label17:
        i7 = 97;

        goto label12;

     label18:
        i7 = 96;

        goto label12;

     label19:
        i7 = 100;

        goto label12;

     label20:
        i7 = i5 + 2;

        $r7 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(i5, i7);

        i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        i5 = i5 + 1;

        goto label12;

     label21:
        if i4 != 0 goto label24;

        if b6 != 100 goto label23;

        i7 = 104;

     label22:
        i4 = b6;

        goto label13;

     label23:
        i7 = 105;

        goto label22;

     label24:
        i7 = b6;

        goto label22;

     label25:
        i0 = i1 % 103;

        $r5 = <com.google.zxing.oned.Code128Reader: int[][] CODE_PATTERNS>;

        $r6 = $r5[i0];

        interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r6);

        $r5 = <com.google.zxing.oned.Code128Reader: int[][] CODE_PATTERNS>;

        $r6 = $r5[106];

        interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r6);

        i1 = 0;

        $r8 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label26:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label28;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (int[]) $r9;

        i3 = lengthof $r6;

        i4 = 0;

     label27:
        if i4 >= i3 goto label26;

        i0 = $r6[i4];

        i1 = i1 + i0;

        i4 = i4 + 1;

        goto label27;

     label28:
        $r10 = newarray (boolean)[i1];

        i0 = 0;

        $r8 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label29:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label30;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (int[]) $r9;

        i1 = staticinvoke <com.google.zxing.oned.Code128Writer: int appendPattern(boolean[],int,int[],boolean)>($r10, i0, $r6, 1);

        i0 = i0 + i1;

        goto label29;

     label30:
        return $r10;
    }
