com.google.zxing.pdf417.PDF417Writer extends java.lang.Object implements com.google.zxing.Writer
    public void <init>()
    {
        com.google.zxing.pdf417.PDF417Writer r0;

        r0 := @this: com.google.zxing.pdf417.PDF417Writer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private static com.google.zxing.common.BitMatrix bitMatrixFromEncoder(com.google.zxing.pdf417.encoder.PDF417, java.lang.String, int, int, int, int) throws com.google.zxing.WriterException
    {
        com.google.zxing.pdf417.encoder.PDF417 $r0;
        java.lang.String $r1;
        int $i0, $i1, $i2, $i3, $i5;
        com.google.zxing.pdf417.encoder.BarcodeMatrix $r2;
        byte[][] $r3, r4;
        boolean z0;
        byte $b4, $b6;
        byte[] $r5;
        com.google.zxing.common.BitMatrix $r6;

        $r0 := @parameter0: com.google.zxing.pdf417.encoder.PDF417;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i3 := @parameter5: int;

        virtualinvoke $r0.<com.google.zxing.pdf417.encoder.PDF417: void generateBarcodeLogic(java.lang.String,int)>($r1, $i0);

        $r2 = virtualinvoke $r0.<com.google.zxing.pdf417.encoder.PDF417: com.google.zxing.pdf417.encoder.BarcodeMatrix getBarcodeMatrix()>();

        $r3 = virtualinvoke $r2.<com.google.zxing.pdf417.encoder.BarcodeMatrix: byte[][] getScaledMatrix(int,int)>(1, 4);

        r4 = $r3;

        z0 = 0;

        if $i2 <= $i1 goto label6;

        $b4 = 1;

     label1:
        $r5 = $r3[0];

        $i5 = lengthof $r5;

        $i0 = lengthof $r3;

        if $i5 >= $i0 goto label7;

        $b6 = 1;

     label2:
        $i0 = $b4 ^ $b6;

        if $i0 == 0 goto label3;

        r4 = staticinvoke <com.google.zxing.pdf417.PDF417Writer: byte[][] rotateArray(byte[][])>($r3);

        z0 = 1;

     label3:
        $r5 = r4[0];

        $i0 = lengthof $r5;

        $i0 = $i1 / $i0;

        $i1 = lengthof r4;

        $i1 = $i2 / $i1;

        if $i0 >= $i1 goto label8;

     label4:
        if $i0 <= 1 goto label9;

        $r2 = virtualinvoke $r0.<com.google.zxing.pdf417.encoder.PDF417: com.google.zxing.pdf417.encoder.BarcodeMatrix getBarcodeMatrix()>();

        $i1 = $i0 * 4;

        $r3 = virtualinvoke $r2.<com.google.zxing.pdf417.encoder.BarcodeMatrix: byte[][] getScaledMatrix(int,int)>($i0, $i1);

        r4 = $r3;

        if z0 == 0 goto label5;

        r4 = staticinvoke <com.google.zxing.pdf417.PDF417Writer: byte[][] rotateArray(byte[][])>($r3);

     label5:
        $r6 = staticinvoke <com.google.zxing.pdf417.PDF417Writer: com.google.zxing.common.BitMatrix bitMatrixFrombitArray(byte[][],int)>(r4, $i3);

        return $r6;

     label6:
        $b4 = 0;

        goto label1;

     label7:
        $b6 = 0;

        goto label2;

     label8:
        $i0 = $i1;

        goto label4;

     label9:
        $r6 = staticinvoke <com.google.zxing.pdf417.PDF417Writer: com.google.zxing.common.BitMatrix bitMatrixFrombitArray(byte[][],int)>(r4, $i3);

        return $r6;
    }
    private static com.google.zxing.common.BitMatrix bitMatrixFrombitArray(byte[][], int)
    {
        byte[][] $r0;
        int $i0, $i1, $i2, $i3, $i4;
        com.google.zxing.common.BitMatrix r1;
        byte[] $r2;
        byte $b5;

        $r0 := @parameter0: byte[][];

        $i0 := @parameter1: int;

        r1 = new com.google.zxing.common.BitMatrix;

        $r2 = $r0[0];

        $i2 = lengthof $r2;

        $i1 = $i0 * 2;

        $i2 = $i2 + $i1;

        $i3 = lengthof $r0;

        $i1 = $i0 * 2;

        $i1 = $i3 + $i1;

        specialinvoke r1.<com.google.zxing.common.BitMatrix: void <init>(int,int)>($i2, $i1);

        virtualinvoke r1.<com.google.zxing.common.BitMatrix: void clear()>();

        $i2 = 0;

        $i1 = virtualinvoke r1.<com.google.zxing.common.BitMatrix: int getHeight()>();

        $i1 = $i1 - $i0;

        $i1 = $i1 + -1;

     label1:
        $i3 = lengthof $r0;

        if $i2 >= $i3 goto label5;

        $i3 = 0;

     label2:
        $r2 = $r0[0];

        $i4 = lengthof $r2;

        if $i3 >= $i4 goto label4;

        $r2 = $r0[$i2];

        $b5 = $r2[$i3];

        if $b5 != 1 goto label3;

        $i4 = $i3 + $i0;

        virtualinvoke r1.<com.google.zxing.common.BitMatrix: void set(int,int)>($i4, $i1);

     label3:
        $i3 = $i3 + 1;

        goto label2;

     label4:
        $i2 = $i2 + 1;

        $i1 = $i1 + -1;

        goto label1;

     label5:
        return r1;
    }
    private static byte[][] rotateArray(byte[][])
    {
        byte[][] $r0, r5;
        int i0, $i1, i2, $i3;
        byte[] $r1, $r6;
        int[] $r2;
        java.lang.Class $r3;
        java.lang.Object $r4;
        byte $b4;

        $r0 := @parameter0: byte[][];

        $r1 = $r0[0];

        $i1 = lengthof $r1;

        i0 = lengthof $r0;

        $r2 = newarray (int)[2];

        $r2[0] = $i1;

        $r2[1] = i0;

        $r3 = <java.lang.Byte: java.lang.Class TYPE>;

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r3, $r2);

        r5 = (byte[][]) $r4;

        $i1 = 0;

     label1:
        i0 = lengthof $r0;

        if $i1 >= i0 goto label4;

        i0 = lengthof $r0;

        i0 = i0 - $i1;

        i0 = i0 + -1;

        i2 = 0;

     label2:
        $r1 = $r0[0];

        $i3 = lengthof $r1;

        if i2 >= $i3 goto label3;

        $r1 = r5[i2];

        $r6 = $r0[$i1];

        $b4 = $r6[i2];

        $r1[i0] = $b4;

        i2 = i2 + 1;

        goto label2;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        return r5;
    }
    public com.google.zxing.common.BitMatrix encode(java.lang.String, com.google.zxing.BarcodeFormat, int, int, java.util.Map) throws com.google.zxing.WriterException
    {
        com.google.zxing.pdf417.PDF417Writer r0;
        java.lang.String $r1, r14;
        com.google.zxing.BarcodeFormat $r2, $r5;
        int $i0, $i1, i2, i3, $i4, $i5, $i6, $i7;
        java.util.Map r3;
        com.google.zxing.pdf417.encoder.PDF417 r4;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7;
        com.google.zxing.EncodeHintType $r8;
        boolean $z0;
        java.lang.Object $r9;
        java.lang.Boolean $r10;
        com.google.zxing.pdf417.encoder.Compaction $r11;
        com.google.zxing.pdf417.encoder.Dimensions r12;
        java.lang.Number $r13;
        java.nio.charset.Charset $r15;
        com.google.zxing.common.BitMatrix $r16;

        r0 := @this: com.google.zxing.pdf417.PDF417Writer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.google.zxing.BarcodeFormat;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        r3 := @parameter4: java.util.Map;

        $r5 = <com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat PDF_417>;

        if $r2 == $r5 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can only encode PDF_417, but got ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r6;

     label1:
        r4 = new com.google.zxing.pdf417.encoder.PDF417;

        specialinvoke r4.<com.google.zxing.pdf417.encoder.PDF417: void <init>()>();

        i2 = 30;

        i3 = 2;

        if r3 == null goto label7;

        $r8 = <com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType PDF417_COMPACT>;

        $z0 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r8);

        if $z0 == 0 goto label2;

        $r8 = <com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType PDF417_COMPACT>;

        $r9 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        $r10 = (java.lang.Boolean) $r9;

        $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke r4.<com.google.zxing.pdf417.encoder.PDF417: void setCompact(boolean)>($z0);

     label2:
        $r8 = <com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType PDF417_COMPACTION>;

        $z0 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r8);

        if $z0 == 0 goto label3;

        $r8 = <com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType PDF417_COMPACTION>;

        $r9 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        $r11 = (com.google.zxing.pdf417.encoder.Compaction) $r9;

        virtualinvoke r4.<com.google.zxing.pdf417.encoder.PDF417: void setCompaction(com.google.zxing.pdf417.encoder.Compaction)>($r11);

     label3:
        $r8 = <com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType PDF417_DIMENSIONS>;

        $z0 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r8);

        if $z0 == 0 goto label4;

        $r8 = <com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType PDF417_DIMENSIONS>;

        $r9 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        r12 = (com.google.zxing.pdf417.encoder.Dimensions) $r9;

        $i4 = virtualinvoke r12.<com.google.zxing.pdf417.encoder.Dimensions: int getMaxCols()>();

        $i5 = virtualinvoke r12.<com.google.zxing.pdf417.encoder.Dimensions: int getMinCols()>();

        $i6 = virtualinvoke r12.<com.google.zxing.pdf417.encoder.Dimensions: int getMaxRows()>();

        $i7 = virtualinvoke r12.<com.google.zxing.pdf417.encoder.Dimensions: int getMinRows()>();

        virtualinvoke r4.<com.google.zxing.pdf417.encoder.PDF417: void setDimensions(int,int,int,int)>($i4, $i5, $i6, $i7);

     label4:
        $r8 = <com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType MARGIN>;

        $z0 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r8);

        if $z0 == 0 goto label5;

        $r8 = <com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType MARGIN>;

        $r9 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        $r13 = (java.lang.Number) $r9;

        i2 = virtualinvoke $r13.<java.lang.Number: int intValue()>();

     label5:
        $r8 = <com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType ERROR_CORRECTION>;

        $z0 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r8);

        if $z0 == 0 goto label6;

        $r8 = <com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType ERROR_CORRECTION>;

        $r9 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        $r13 = (java.lang.Number) $r9;

        i3 = virtualinvoke $r13.<java.lang.Number: int intValue()>();

     label6:
        $r8 = <com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType CHARACTER_SET>;

        $z0 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r8);

        if $z0 == 0 goto label7;

        $r8 = <com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType CHARACTER_SET>;

        $r9 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        r14 = (java.lang.String) $r9;

        $r15 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r14);

        virtualinvoke r4.<com.google.zxing.pdf417.encoder.PDF417: void setEncoding(java.nio.charset.Charset)>($r15);

     label7:
        $r16 = staticinvoke <com.google.zxing.pdf417.PDF417Writer: com.google.zxing.common.BitMatrix bitMatrixFromEncoder(com.google.zxing.pdf417.encoder.PDF417,java.lang.String,int,int,int,int)>(r4, $r1, i3, $i0, $i1, i2);

        return $r16;
    }
