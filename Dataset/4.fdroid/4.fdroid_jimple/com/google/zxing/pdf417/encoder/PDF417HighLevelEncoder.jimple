com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder extends java.lang.Object
private static final java.nio.charset.Charset DEFAULT_ENCODING
private static final byte[] MIXED
private static final byte[] PUNCTUATION
private static final byte[] TEXT_MIXED_RAW
private static final byte[] TEXT_PUNCTUATION_RAW
    static void <clinit>()
    {
        java.nio.charset.Charset $r0;
        byte[] $r1;
        byte b0, b2;
        int $i1;

        $r1 = newarray (byte)[30];

        $r1[0] = 48;

        $r1[1] = 49;

        $r1[2] = 50;

        $r1[3] = 51;

        $r1[4] = 52;

        $r1[5] = 53;

        $r1[6] = 54;

        $r1[7] = 55;

        $r1[8] = 56;

        $r1[9] = 57;

        $r1[10] = 38;

        $r1[11] = 13;

        $r1[12] = 9;

        $r1[13] = 44;

        $r1[14] = 58;

        $r1[15] = 35;

        $r1[16] = 45;

        $r1[17] = 46;

        $r1[18] = 36;

        $r1[19] = 47;

        $r1[20] = 43;

        $r1[21] = 37;

        $r1[22] = 42;

        $r1[23] = 61;

        $r1[24] = 94;

        $r1[25] = 0;

        $r1[26] = 32;

        $r1[27] = 0;

        $r1[28] = 0;

        $r1[29] = 0;

        <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] TEXT_MIXED_RAW> = $r1;

        $r1 = newarray (byte)[30];

        $r1[0] = 59;

        $r1[1] = 60;

        $r1[2] = 62;

        $r1[3] = 64;

        $r1[4] = 91;

        $r1[5] = 92;

        $r1[6] = 93;

        $r1[7] = 95;

        $r1[8] = 96;

        $r1[9] = 126;

        $r1[10] = 33;

        $r1[11] = 13;

        $r1[12] = 9;

        $r1[13] = 44;

        $r1[14] = 58;

        $r1[15] = 10;

        $r1[16] = 45;

        $r1[17] = 46;

        $r1[18] = 36;

        $r1[19] = 47;

        $r1[20] = 34;

        $r1[21] = 124;

        $r1[22] = 42;

        $r1[23] = 40;

        $r1[24] = 41;

        $r1[25] = 63;

        $r1[26] = 123;

        $r1[27] = 125;

        $r1[28] = 39;

        $r1[29] = 0;

        <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] TEXT_PUNCTUATION_RAW> = $r1;

        $r1 = newarray (byte)[128];

        <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] MIXED> = $r1;

        $r1 = newarray (byte)[128];

        <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] PUNCTUATION> = $r1;

        $r0 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("ISO-8859-1");

        <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: java.nio.charset.Charset DEFAULT_ENCODING> = $r0;

        $r1 = <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] MIXED>;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r1, -1);

        b0 = 0;

     label1:
        $r1 = <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] TEXT_MIXED_RAW>;

        $i1 = lengthof $r1;

        if b0 >= $i1 goto label3;

        $r1 = <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] TEXT_MIXED_RAW>;

        b2 = $r1[b0];

        if b2 <= 0 goto label2;

        $r1 = <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] MIXED>;

        $r1[b2] = b0;

     label2:
        $i1 = b0 + 1;

        b0 = (byte) $i1;

        goto label1;

     label3:
        $r1 = <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] PUNCTUATION>;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r1, -1);

        b0 = 0;

     label4:
        $r1 = <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] TEXT_PUNCTUATION_RAW>;

        $i1 = lengthof $r1;

        if b0 >= $i1 goto label6;

        $r1 = <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] TEXT_PUNCTUATION_RAW>;

        b2 = $r1[b0];

        if b2 <= 0 goto label5;

        $r1 = <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] PUNCTUATION>;

        $r1[b2] = b0;

     label5:
        $i1 = b0 + 1;

        b0 = (byte) $i1;

        goto label4;

     label6:
        return;
    }
    private static int determineConsecutiveBinaryCount(java.lang.String, int, java.nio.charset.Charset) throws com.google.zxing.WriterException
    {
        java.lang.String $r0;
        int $i0, i1, $i2, i3, i5;
        java.nio.charset.Charset $r1;
        java.nio.charset.CharsetEncoder $r2;
        char $c4;
        boolean $z0;
        com.google.zxing.WriterException $r3;
        java.lang.StringBuilder $r4;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.nio.charset.Charset;

        $r2 = virtualinvoke $r1.<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>();

        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        i3 = $i0;

     label1:
        if i3 >= $i2 goto label7;

        $c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i3);

        i5 = 0;

     label2:
        if i5 >= 13 goto label3;

        $z0 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: boolean isDigit(char)>($c4);

        if $z0 == 0 goto label3;

        i5 = i5 + 1;

        i1 = i3 + i5;

        if i1 < $i2 goto label4;

     label3:
        if i5 < 13 goto label5;

        $i0 = i3 - $i0;

        return $i0;

     label4:
        $c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i1);

        goto label2;

     label5:
        $c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i3);

        $z0 = virtualinvoke $r2.<java.nio.charset.CharsetEncoder: boolean canEncode(char)>($c4);

        if $z0 != 0 goto label6;

        $r3 = new com.google.zxing.WriterException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Non-encodable character detected: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (Unicode: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($c4);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<com.google.zxing.WriterException: void <init>(java.lang.String)>($r0);

        throw $r3;

     label6:
        i3 = i3 + 1;

        goto label1;

     label7:
        $i0 = i3 - $i0;

        return $i0;
    }
    private static int determineConsecutiveDigitCount(java.lang.CharSequence, int)
    {
        java.lang.CharSequence $r0;
        int $i0, i1, $i2, i3;
        char $c4;
        boolean $z0;

        $r0 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        i1 = 0;

        $i2 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        i3 = $i0;

        if $i0 >= $i2 goto label2;

        $c4 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

     label1:
        $z0 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: boolean isDigit(char)>($c4);

        if $z0 == 0 goto label3;

        if i3 >= $i2 goto label3;

        i1 = i1 + 1;

        i3 = i3 + 1;

        if i3 >= $i2 goto label1;

        $c4 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>(i3);

        goto label1;

     label2:
        return 0;

     label3:
        return i1;
    }
    private static int determineConsecutiveTextCount(java.lang.CharSequence, int)
    {
        java.lang.CharSequence $r0;
        int $i0, $i1, i2, i4;
        char $c3;
        boolean $z0;

        $r0 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        i2 = $i0;

     label1:
        if i2 >= $i1 goto label5;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>(i2);

        i4 = 0;

     label2:
        if i4 >= 13 goto label3;

        $z0 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: boolean isDigit(char)>($c3);

        if $z0 == 0 goto label3;

        if i2 >= $i1 goto label3;

        i4 = i4 + 1;

        i2 = i2 + 1;

        if i2 >= $i1 goto label2;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>(i2);

        goto label2;

     label3:
        if i4 < 13 goto label4;

        $i0 = i2 - $i0;

        $i0 = $i0 - i4;

        return $i0;

     label4:
        if i4 > 0 goto label1;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>(i2);

        $z0 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: boolean isText(char)>($c3);

        if $z0 != 0 goto label6;

     label5:
        $i0 = i2 - $i0;

        return $i0;

     label6:
        i2 = i2 + 1;

        goto label1;
    }
    private static void encodeBinary(byte[], int, int, int, java.lang.StringBuilder)
    {
        byte[] $r0;
        int $i0, $i1, $i2, i3, $i5;
        java.lang.StringBuilder $r1;
        char[] r2;
        long l4, $l7;
        byte $b6;
        boolean z0;
        char $c8;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r1 := @parameter4: java.lang.StringBuilder;

        if $i1 != 1 goto label04;

        if $i2 != 0 goto label04;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(913);

     label01:
        $i2 = $i0;

        if $i1 < 6 goto label13;

        r2 = newarray (char)[5];

     label02:
        i3 = $i0 + $i1;

        i3 = i3 - $i2;

        if i3 < 6 goto label13;

        l4 = 0L;

        i3 = 0;

     label03:
        if i3 >= 6 goto label08;

        l4 = l4 << 8;

        $i5 = $i2 + i3;

        $b6 = $r0[$i5];

        $i5 = $b6 & 255;

        $l7 = (long) $i5;

        l4 = l4 + $l7;

        i3 = i3 + 1;

        goto label03;

     label04:
        $i2 = $i1 % 6;

        if $i2 != 0 goto label06;

        z0 = 1;

     label05:
        if z0 == 0 goto label07;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(924);

        goto label01;

     label06:
        z0 = 0;

        goto label05;

     label07:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(901);

        goto label01;

     label08:
        i3 = 0;

     label09:
        if i3 >= 5 goto label10;

        $l7 = l4 % 900L;

        $i5 = (int) $l7;

        $c8 = (char) $i5;

        r2[i3] = $c8;

        l4 = l4 / 900L;

        i3 = i3 + 1;

        goto label09;

     label10:
        i3 = lengthof r2;

        i3 = i3 + -1;

     label11:
        if i3 < 0 goto label12;

        $c8 = r2[i3];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c8);

        i3 = i3 + -1;

        goto label11;

     label12:
        $i2 = $i2 + 6;

        goto label02;

     label13:
        i3 = $i0 + $i1;

        if $i2 >= i3 goto label14;

        $b6 = $r0[$i2];

        i3 = $b6 & 255;

        $c8 = (char) i3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c8);

        $i2 = $i2 + 1;

        goto label13;

     label14:
        return;
    }
    static java.lang.String encodeHighLevel(java.lang.String, com.google.zxing.pdf417.encoder.Compaction, java.nio.charset.Charset) throws com.google.zxing.WriterException
    {
        java.lang.String $r0, $r6;
        com.google.zxing.pdf417.encoder.Compaction $r1, $r4;
        java.lang.StringBuilder r2;
        java.nio.charset.Charset $r3, $r5;
        int $i0, i1, i2, i3, $i4, $i5;
        boolean $z0;
        com.google.zxing.common.CharacterSetECI $r7;
        byte[] $r8;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: com.google.zxing.pdf417.encoder.Compaction;

        $r3 := @parameter2: java.nio.charset.Charset;

        r2 = new java.lang.StringBuilder;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        specialinvoke r2.<java.lang.StringBuilder: void <init>(int)>($i0);

        if $r3 != null goto label03;

        $r3 = <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: java.nio.charset.Charset DEFAULT_ENCODING>;

     label01:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        i1 = 0;

        i2 = 0;

        $r4 = <com.google.zxing.pdf417.encoder.Compaction: com.google.zxing.pdf417.encoder.Compaction TEXT>;

        if $r1 != $r4 goto label04;

        staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: int encodeText(java.lang.CharSequence,int,int,java.lang.StringBuilder,int)>($r0, 0, $i0, r2, 0);

     label02:
        $r0 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label03:
        $r5 = <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: java.nio.charset.Charset DEFAULT_ENCODING>;

        $z0 = virtualinvoke $r5.<java.nio.charset.Charset: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label01;

        $r6 = virtualinvoke $r3.<java.nio.charset.Charset: java.lang.String name()>();

        $r7 = staticinvoke <com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI getCharacterSetECIByName(java.lang.String)>($r6);

        if $r7 == null goto label01;

        $i0 = virtualinvoke $r7.<com.google.zxing.common.CharacterSetECI: int getValue()>();

        staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: void encodingECI(int,java.lang.StringBuilder)>($i0, r2);

        goto label01;

     label04:
        $r4 = <com.google.zxing.pdf417.encoder.Compaction: com.google.zxing.pdf417.encoder.Compaction BYTE>;

        if $r1 != $r4 goto label05;

        $r8 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r3);

        $i0 = lengthof $r8;

        staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: void encodeBinary(byte[],int,int,int,java.lang.StringBuilder)>($r8, 0, $i0, 1, r2);

        goto label02;

     label05:
        $r4 = <com.google.zxing.pdf417.encoder.Compaction: com.google.zxing.pdf417.encoder.Compaction NUMERIC>;

        if $r1 != $r4 goto label06;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(902);

        staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: void encodeNumeric(java.lang.String,int,int,java.lang.StringBuilder)>($r0, 0, $i0, r2);

        goto label02;

     label06:
        i3 = 0;

     label07:
        if i1 >= $i0 goto label02;

        $i4 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: int determineConsecutiveDigitCount(java.lang.CharSequence,int)>($r0, i1);

        if $i4 < 13 goto label08;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(902);

        i3 = 2;

        i2 = 0;

        staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: void encodeNumeric(java.lang.String,int,int,java.lang.StringBuilder)>($r0, i1, $i4, r2);

        i1 = i1 + $i4;

        goto label07;

     label08:
        $i5 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: int determineConsecutiveTextCount(java.lang.CharSequence,int)>($r0, i1);

        if $i5 >= 5 goto label09;

        if $i4 != $i0 goto label11;

     label09:
        if i3 == 0 goto label10;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(900);

        i3 = 0;

        i2 = 0;

     label10:
        i2 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: int encodeText(java.lang.CharSequence,int,int,java.lang.StringBuilder,int)>($r0, i1, $i5, r2, i2);

        i1 = i1 + $i5;

        goto label07;

     label11:
        $i4 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: int determineConsecutiveBinaryCount(java.lang.String,int,java.nio.charset.Charset)>($r0, i1, $r3);

        $i5 = $i4;

        if $i4 != 0 goto label12;

        $i5 = 1;

     label12:
        $i4 = i1 + $i5;

        $r6 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(i1, $i4);

        $r8 = virtualinvoke $r6.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r3);

        $i4 = lengthof $r8;

        if $i4 != 1 goto label14;

        if i3 != 0 goto label14;

        staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: void encodeBinary(byte[],int,int,int,java.lang.StringBuilder)>($r8, 0, 1, 0, r2);

     label13:
        i1 = i1 + $i5;

        goto label07;

     label14:
        i2 = lengthof $r8;

        staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: void encodeBinary(byte[],int,int,int,java.lang.StringBuilder)>($r8, 0, i2, i3, r2);

        i3 = 1;

        i2 = 0;

        goto label13;
    }
    private static void encodeNumeric(java.lang.String, int, int, java.lang.StringBuilder)
    {
        java.lang.String $r0, $r6;
        int $i0, $i1, i2, $i3, $i4, $i5;
        java.lang.StringBuilder $r1, r2, $r5;
        java.math.BigInteger $r3, $r4, r7, $r8;
        char $c6;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: java.lang.StringBuilder;

        i2 = 0;

        r2 = new java.lang.StringBuilder;

        $i3 = $i1 / 3;

        $i3 = $i3 + 1;

        specialinvoke r2.<java.lang.StringBuilder: void <init>(int)>($i3);

        $r3 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(900L);

        $r4 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(0L);

     label1:
        if i2 >= $i1 goto label5;

        virtualinvoke r2.<java.lang.StringBuilder: void setLength(int)>(0);

        $i3 = $i1 - i2;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(44, $i3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(49);

        $i4 = $i0 + i2;

        $i5 = $i0 + i2;

        $i5 = $i5 + $i3;

        $r6 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i4, $i5);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r7 = new java.math.BigInteger;

        specialinvoke r7.<java.math.BigInteger: void <init>(java.lang.String)>($r6);

     label2:
        $r8 = virtualinvoke r7.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r3);

        $i4 = virtualinvoke $r8.<java.math.BigInteger: int intValue()>();

        $c6 = (char) $i4;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);

        $r8 = virtualinvoke r7.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>($r3);

        r7 = $r8;

        $z0 = virtualinvoke $r8.<java.math.BigInteger: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $i4 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

        $i4 = $i4 + -1;

     label3:
        if $i4 < 0 goto label4;

        $c6 = virtualinvoke r2.<java.lang.StringBuilder: char charAt(int)>($i4);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);

        $i4 = $i4 + -1;

        goto label3;

     label4:
        i2 = i2 + $i3;

        goto label1;

     label5:
        return;
    }
    private static int encodeText(java.lang.CharSequence, int, int, java.lang.StringBuilder, int)
    {
        java.lang.CharSequence $r0;
        int $i0, $i1, $i2, i3, $i4;
        java.lang.StringBuilder $r1, r2;
        char $c5, $c7;
        boolean $z0;
        byte[] $r3;
        byte $b6;

        $r0 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: java.lang.StringBuilder;

        $i2 := @parameter4: int;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>(int)>($i1);

        i3 = 0;

     label01:
        $i4 = $i0 + i3;

        $c5 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i4);

        lookupswitch($i2)
        {
            case 0: goto label07;
            case 1: goto label12;
            case 2: goto label17;
            default: goto label02;
        };

     label02:
        $z0 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: boolean isPunctuation(char)>($c5);

        if $z0 == 0 goto label22;

        $r3 = <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] PUNCTUATION>;

        $b6 = $r3[$c5];

        $c5 = (char) $b6;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

     label03:
        i3 = i3 + 1;

        if i3 < $i1 goto label01;

        $c5 = 0;

        $i0 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

        $i1 = 0;

     label04:
        if $i1 >= $i0 goto label25;

        i3 = $i1 % 2;

        if i3 == 0 goto label23;

        $z0 = 1;

     label05:
        if $z0 == 0 goto label24;

        i3 = $c5 * 30;

        $c5 = virtualinvoke r2.<java.lang.StringBuilder: char charAt(int)>($i1);

        i3 = i3 + $c5;

        $c5 = (char) i3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

     label06:
        $i1 = $i1 + 1;

        goto label04;

     label07:
        $z0 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: boolean isAlphaUpper(char)>($c5);

        if $z0 == 0 goto label09;

        if $c5 != 32 goto label08;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(26);

        goto label03;

     label08:
        $i4 = $c5 + -65;

        $c5 = (char) $i4;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        goto label03;

     label09:
        $z0 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: boolean isAlphaLower(char)>($c5);

        if $z0 == 0 goto label10;

        $i2 = 1;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(27);

        goto label01;

     label10:
        $z0 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: boolean isMixed(char)>($c5);

        if $z0 == 0 goto label11;

        $i2 = 2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(28);

        goto label01;

     label11:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(29);

        $r3 = <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] PUNCTUATION>;

        $b6 = $r3[$c5];

        $c5 = (char) $b6;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        goto label03;

     label12:
        $z0 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: boolean isAlphaLower(char)>($c5);

        if $z0 == 0 goto label14;

        if $c5 != 32 goto label13;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(26);

        goto label03;

     label13:
        $i4 = $c5 + -97;

        $c5 = (char) $i4;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        goto label03;

     label14:
        $z0 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: boolean isAlphaUpper(char)>($c5);

        if $z0 == 0 goto label15;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(27);

        $i4 = $c5 + -65;

        $c5 = (char) $i4;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        goto label03;

     label15:
        $z0 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: boolean isMixed(char)>($c5);

        if $z0 == 0 goto label16;

        $i2 = 2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(28);

        goto label01;

     label16:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(29);

        $r3 = <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] PUNCTUATION>;

        $b6 = $r3[$c5];

        $c5 = (char) $b6;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        goto label03;

     label17:
        $z0 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: boolean isMixed(char)>($c5);

        if $z0 == 0 goto label18;

        $r3 = <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] MIXED>;

        $b6 = $r3[$c5];

        $c5 = (char) $b6;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        goto label03;

     label18:
        $z0 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: boolean isAlphaUpper(char)>($c5);

        if $z0 == 0 goto label19;

        $i2 = 0;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(28);

        goto label01;

     label19:
        $z0 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: boolean isAlphaLower(char)>($c5);

        if $z0 == 0 goto label20;

        $i2 = 1;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(27);

        goto label01;

     label20:
        $i4 = $i0 + i3;

        $i4 = $i4 + 1;

        if $i4 >= $i1 goto label21;

        $i4 = $i0 + i3;

        $i4 = $i4 + 1;

        $c7 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i4);

        $z0 = staticinvoke <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: boolean isPunctuation(char)>($c7);

        if $z0 == 0 goto label21;

        $i2 = 3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(25);

        goto label01;

     label21:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(29);

        $r3 = <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] PUNCTUATION>;

        $b6 = $r3[$c5];

        $c5 = (char) $b6;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        goto label03;

     label22:
        $i2 = 0;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(29);

        goto label01;

     label23:
        $z0 = 0;

        goto label05;

     label24:
        $c5 = virtualinvoke r2.<java.lang.StringBuilder: char charAt(int)>($i1);

        goto label06;

     label25:
        $i0 = $i0 % 2;

        if $i0 == 0 goto label26;

        $i0 = $c5 * 30;

        $i0 = $i0 + 29;

        $c5 = (char) $i0;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

     label26:
        return $i2;
    }
    private static void encodingECI(int, java.lang.StringBuilder) throws com.google.zxing.WriterException
    {
        int $i0, $i2;
        java.lang.StringBuilder $r0;
        char $c1;
        com.google.zxing.WriterException $r1;
        java.lang.String $r2;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.StringBuilder;

        if $i0 < 0 goto label1;

        if $i0 >= 900 goto label1;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(927);

        $c1 = (char) $i0;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        return;

     label1:
        if $i0 >= 810900 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(926);

        $i2 = $i0 / 900;

        $i2 = $i2 + -1;

        $c1 = (char) $i2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $i0 = $i0 % 900;

        $c1 = (char) $i0;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        return;

     label2:
        if $i0 >= 811800 goto label3;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(925);

        $i0 = 810900 - $i0;

        $c1 = (char) $i0;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        return;

     label3:
        $r1 = new com.google.zxing.WriterException;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ECI number not in valid range from 0..811799, but was ");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<com.google.zxing.WriterException: void <init>(java.lang.String)>($r2);

        throw $r1;
    }
    private static boolean isAlphaLower(char)
    {
        char $c0;

        $c0 := @parameter0: char;

        if $c0 == 32 goto label1;

        if $c0 < 97 goto label2;

        if $c0 > 122 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    private static boolean isAlphaUpper(char)
    {
        char $c0;

        $c0 := @parameter0: char;

        if $c0 == 32 goto label1;

        if $c0 < 65 goto label2;

        if $c0 > 90 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    private static boolean isDigit(char)
    {
        char $c0;

        $c0 := @parameter0: char;

        if $c0 < 48 goto label1;

        if $c0 > 57 goto label1;

        return 1;

     label1:
        return 0;
    }
    private static boolean isMixed(char)
    {
        char $c0;
        byte[] $r0;
        byte $b1;

        $c0 := @parameter0: char;

        $r0 = <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] MIXED>;

        $b1 = $r0[$c0];

        if $b1 == -1 goto label1;

        return 1;

     label1:
        return 0;
    }
    private static boolean isPunctuation(char)
    {
        char $c0;
        byte[] $r0;
        byte $b1;

        $c0 := @parameter0: char;

        $r0 = <com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder: byte[] PUNCTUATION>;

        $b1 = $r0[$c0];

        if $b1 == -1 goto label1;

        return 1;

     label1:
        return 0;
    }
    private static boolean isText(char)
    {
        char $c0;

        $c0 := @parameter0: char;

        if $c0 == 9 goto label1;

        if $c0 == 10 goto label1;

        if $c0 == 13 goto label1;

        if $c0 < 32 goto label2;

        if $c0 > 126 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
