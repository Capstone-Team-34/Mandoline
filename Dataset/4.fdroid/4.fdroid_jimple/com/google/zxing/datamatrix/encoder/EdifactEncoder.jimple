com.google.zxing.datamatrix.encoder.EdifactEncoder extends java.lang.Object implements com.google.zxing.datamatrix.encoder.Encoder
    void <init>()
    {
        com.google.zxing.datamatrix.encoder.EdifactEncoder r0;

        r0 := @this: com.google.zxing.datamatrix.encoder.EdifactEncoder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private static void encodeChar(char, java.lang.StringBuilder)
    {
        char $c0;
        java.lang.StringBuilder $r0;
        int $i1;

        $c0 := @parameter0: char;

        $r0 := @parameter1: java.lang.StringBuilder;

        if $c0 < 32 goto label1;

        if $c0 > 63 goto label1;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        return;

     label1:
        if $c0 < 64 goto label2;

        if $c0 > 94 goto label2;

        $i1 = $c0 + -64;

        $c0 = (char) $i1;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        return;

     label2:
        staticinvoke <com.google.zxing.datamatrix.encoder.HighLevelEncoder: void illegalCharacter(char)>($c0);

        return;
    }
    private static java.lang.String encodeToCodewords(java.lang.CharSequence, int)
    {
        java.lang.CharSequence $r0;
        int $i0, i4, i5, $i6, i7;
        char c1, c2, c3;
        java.lang.StringBuilder r1;
        java.lang.IllegalStateException $r2;
        java.lang.String $r3;

        $r0 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        i5 = 0;

        i4 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        i4 = i4 - $i0;

        if i4 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("StringBuilder must not be empty");

        throw $r2;

     label1:
        c1 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        if i4 < 2 goto label7;

        $i6 = $i0 + 1;

        i7 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i6);

     label2:
        if i4 < 3 goto label8;

        $i6 = $i0 + 2;

        $i6 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i6);

     label3:
        if i4 < 4 goto label4;

        $i0 = $i0 + 3;

        i5 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

     label4:
        $i0 = c1 << 18;

        i7 = i7 << 12;

        $i0 = $i0 + i7;

        $i6 = $i6 << 6;

        $i0 = $i0 + $i6;

        $i0 = $i0 + i5;

        i5 = $i0 >> 16;

        i5 = i5 & 255;

        c1 = (char) i5;

        i5 = $i0 >> 8;

        i5 = i5 & 255;

        c2 = (char) i5;

        $i0 = $i0 & 255;

        c3 = (char) $i0;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>(int)>(3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        if i4 < 2 goto label5;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);

     label5:
        if i4 < 3 goto label6;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c3);

     label6:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label7:
        i7 = 0;

        goto label2;

     label8:
        $i6 = 0;

        goto label3;
    }
    private static void handleEOD(com.google.zxing.datamatrix.encoder.EncoderContext, java.lang.CharSequence)
    {
        com.google.zxing.datamatrix.encoder.EncoderContext $r0;
        java.lang.CharSequence $r1;
        int i0, $i1, $i2;
        boolean z0, $z1;
        com.google.zxing.datamatrix.encoder.SymbolInfo $r2;
        java.lang.IllegalStateException $r3;
        java.lang.Throwable $r4;
        java.lang.String $r5;

        $r0 := @parameter0: com.google.zxing.datamatrix.encoder.EncoderContext;

        $r1 := @parameter1: java.lang.CharSequence;

        z0 = 1;

     label01:
        i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

     label02:
        if i0 != 0 goto label03;

        virtualinvoke $r0.<com.google.zxing.datamatrix.encoder.EncoderContext: void signalEncoderChange(int)>(0);

        return;

     label03:
        if i0 != 1 goto label08;

     label04:
        virtualinvoke $r0.<com.google.zxing.datamatrix.encoder.EncoderContext: void updateSymbolInfo()>();

        $r2 = virtualinvoke $r0.<com.google.zxing.datamatrix.encoder.EncoderContext: com.google.zxing.datamatrix.encoder.SymbolInfo getSymbolInfo()>();

        $i1 = virtualinvoke $r2.<com.google.zxing.datamatrix.encoder.SymbolInfo: int getDataCapacity()>();

        $i2 = virtualinvoke $r0.<com.google.zxing.datamatrix.encoder.EncoderContext: int getCodewordCount()>();

     label05:
        $i1 = $i1 - $i2;

     label06:
        $i2 = virtualinvoke $r0.<com.google.zxing.datamatrix.encoder.EncoderContext: int getRemainingCharacters()>();

     label07:
        if $i2 != 0 goto label08;

        if $i1 > 2 goto label08;

        virtualinvoke $r0.<com.google.zxing.datamatrix.encoder.EncoderContext: void signalEncoderChange(int)>(0);

        return;

     label08:
        if i0 <= 4 goto label11;

     label09:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Count must not exceed 4");

        throw $r3;

     label10:
        $r4 := @caughtexception;

        virtualinvoke $r0.<com.google.zxing.datamatrix.encoder.EncoderContext: void signalEncoderChange(int)>(0);

        throw $r4;

     label11:
        i0 = i0 + -1;

     label12:
        $r5 = staticinvoke <com.google.zxing.datamatrix.encoder.EdifactEncoder: java.lang.String encodeToCodewords(java.lang.CharSequence,int)>($r1, 0);

        $z1 = virtualinvoke $r0.<com.google.zxing.datamatrix.encoder.EncoderContext: boolean hasMoreCharacters()>();

     label13:
        if $z1 != 0 goto label28;

        $z1 = 1;

     label14:
        if $z1 == 0 goto label29;

        if i0 > 2 goto label29;

     label15:
        if i0 > 2 goto label23;

     label16:
        $i1 = virtualinvoke $r0.<com.google.zxing.datamatrix.encoder.EncoderContext: int getCodewordCount()>();

     label17:
        $i1 = $i1 + i0;

     label18:
        virtualinvoke $r0.<com.google.zxing.datamatrix.encoder.EncoderContext: void updateSymbolInfo(int)>($i1);

        $r2 = virtualinvoke $r0.<com.google.zxing.datamatrix.encoder.EncoderContext: com.google.zxing.datamatrix.encoder.SymbolInfo getSymbolInfo()>();

        $i1 = virtualinvoke $r2.<com.google.zxing.datamatrix.encoder.SymbolInfo: int getDataCapacity()>();

        $i2 = virtualinvoke $r0.<com.google.zxing.datamatrix.encoder.EncoderContext: int getCodewordCount()>();

     label19:
        $i1 = $i1 - $i2;

        if $i1 < 3 goto label23;

        z0 = 0;

     label20:
        $i1 = virtualinvoke $r0.<com.google.zxing.datamatrix.encoder.EncoderContext: int getCodewordCount()>();

        $i2 = virtualinvoke $r5.<java.lang.String: int length()>();

     label21:
        $i1 = $i1 + $i2;

     label22:
        virtualinvoke $r0.<com.google.zxing.datamatrix.encoder.EncoderContext: void updateSymbolInfo(int)>($i1);

     label23:
        if z0 == 0 goto label30;

     label24:
        virtualinvoke $r0.<com.google.zxing.datamatrix.encoder.EncoderContext: void resetSymbolInfo()>();

        $i1 = $r0.<com.google.zxing.datamatrix.encoder.EncoderContext: int pos>;

     label25:
        i0 = $i1 - i0;

     label26:
        $r0.<com.google.zxing.datamatrix.encoder.EncoderContext: int pos> = i0;

     label27:
        virtualinvoke $r0.<com.google.zxing.datamatrix.encoder.EncoderContext: void signalEncoderChange(int)>(0);

        return;

     label28:
        $z1 = 0;

        goto label14;

     label29:
        z0 = 0;

        goto label15;

     label30:
        virtualinvoke $r0.<com.google.zxing.datamatrix.encoder.EncoderContext: void writeCodewords(java.lang.String)>($r5);

     label31:
        goto label27;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Throwable from label12 to label13 with label10;
        catch java.lang.Throwable from label16 to label17 with label10;
        catch java.lang.Throwable from label18 to label19 with label10;
        catch java.lang.Throwable from label20 to label21 with label10;
        catch java.lang.Throwable from label22 to label23 with label10;
        catch java.lang.Throwable from label24 to label25 with label10;
        catch java.lang.Throwable from label26 to label27 with label10;
        catch java.lang.Throwable from label30 to label31 with label10;
    }
    public void encode(com.google.zxing.datamatrix.encoder.EncoderContext)
    {
        com.google.zxing.datamatrix.encoder.EdifactEncoder r0;
        com.google.zxing.datamatrix.encoder.EncoderContext $r1;
        java.lang.StringBuilder r2;
        int $i0, $i2;
        boolean $z0;
        char $c1;
        java.lang.String $r3;

        r0 := @this: com.google.zxing.datamatrix.encoder.EdifactEncoder;

        $r1 := @parameter0: com.google.zxing.datamatrix.encoder.EncoderContext;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

     label1:
        $z0 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: boolean hasMoreCharacters()>();

        if $z0 == 0 goto label2;

        $c1 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: char getCurrentChar()>();

        staticinvoke <com.google.zxing.datamatrix.encoder.EdifactEncoder: void encodeChar(char,java.lang.StringBuilder)>($c1, r2);

        $i0 = $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: int pos>;

        $i0 = $i0 + 1;

        $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: int pos> = $i0;

        $i0 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

        if $i0 < 4 goto label1;

        $r3 = staticinvoke <com.google.zxing.datamatrix.encoder.EdifactEncoder: java.lang.String encodeToCodewords(java.lang.CharSequence,int)>(r2, 0);

        virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: void writeCodewords(java.lang.String)>($r3);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>(0, 4);

        $r3 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: java.lang.String getMessage()>();

        $i0 = $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: int pos>;

        $i2 = virtualinvoke r0.<com.google.zxing.datamatrix.encoder.EdifactEncoder: int getEncodingMode()>();

        $i0 = staticinvoke <com.google.zxing.datamatrix.encoder.HighLevelEncoder: int lookAheadTest(java.lang.CharSequence,int,int)>($r3, $i0, $i2);

        $i2 = virtualinvoke r0.<com.google.zxing.datamatrix.encoder.EdifactEncoder: int getEncodingMode()>();

        if $i0 == $i2 goto label1;

        virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: void signalEncoderChange(int)>(0);

     label2:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(31);

        staticinvoke <com.google.zxing.datamatrix.encoder.EdifactEncoder: void handleEOD(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.CharSequence)>($r1, r2);

        return;
    }
    public int getEncodingMode()
    {
        com.google.zxing.datamatrix.encoder.EdifactEncoder r0;

        r0 := @this: com.google.zxing.datamatrix.encoder.EdifactEncoder;

        return 4;
    }
