com.google.zxing.datamatrix.encoder.DefaultPlacement extends java.lang.Object
private final byte[] bits
private final java.lang.CharSequence codewords
private final int numcols
private final int numrows
    public void <init>(java.lang.CharSequence, int, int)
    {
        com.google.zxing.datamatrix.encoder.DefaultPlacement r0;
        java.lang.CharSequence $r1;
        int $i0, $i1;
        byte[] $r2;

        r0 := @this: com.google.zxing.datamatrix.encoder.DefaultPlacement;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: java.lang.CharSequence codewords> = $r1;

        r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols> = $i0;

        r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows> = $i1;

        $i0 = $i0 * $i1;

        $r2 = newarray (byte)[$i0];

        r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: byte[] bits> = $r2;

        $r2 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: byte[] bits>;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r2, -1);

        return;
    }
    private void corner1(int)
    {
        com.google.zxing.datamatrix.encoder.DefaultPlacement r0;
        int $i0, $i1;

        r0 := @this: com.google.zxing.datamatrix.encoder.DefaultPlacement;

        $i0 := @parameter0: int;

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i1 = $i1 + -1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i1, 0, $i0, 1);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i1 = $i1 + -1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i1, 1, $i0, 2);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i1 = $i1 + -1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i1, 2, $i0, 3);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 + -2;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(0, $i1, $i0, 4);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 + -1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(0, $i1, $i0, 5);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 + -1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(1, $i1, $i0, 6);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 + -1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(2, $i1, $i0, 7);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 + -1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(3, $i1, $i0, 8);

        return;
    }
    private void corner2(int)
    {
        com.google.zxing.datamatrix.encoder.DefaultPlacement r0;
        int $i0, $i1;

        r0 := @this: com.google.zxing.datamatrix.encoder.DefaultPlacement;

        $i0 := @parameter0: int;

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i1 = $i1 + -3;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i1, 0, $i0, 1);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i1 = $i1 + -2;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i1, 0, $i0, 2);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i1 = $i1 + -1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i1, 0, $i0, 3);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 + -4;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(0, $i1, $i0, 4);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 + -3;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(0, $i1, $i0, 5);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 + -2;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(0, $i1, $i0, 6);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 + -1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(0, $i1, $i0, 7);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 + -1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(1, $i1, $i0, 8);

        return;
    }
    private void corner3(int)
    {
        com.google.zxing.datamatrix.encoder.DefaultPlacement r0;
        int $i0, $i1;

        r0 := @this: com.google.zxing.datamatrix.encoder.DefaultPlacement;

        $i0 := @parameter0: int;

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i1 = $i1 + -3;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i1, 0, $i0, 1);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i1 = $i1 + -2;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i1, 0, $i0, 2);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i1 = $i1 + -1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i1, 0, $i0, 3);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 + -2;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(0, $i1, $i0, 4);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 + -1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(0, $i1, $i0, 5);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 + -1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(1, $i1, $i0, 6);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 + -1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(2, $i1, $i0, 7);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 + -1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(3, $i1, $i0, 8);

        return;
    }
    private void corner4(int)
    {
        com.google.zxing.datamatrix.encoder.DefaultPlacement r0;
        int $i0, $i1, $i2;

        r0 := @this: com.google.zxing.datamatrix.encoder.DefaultPlacement;

        $i0 := @parameter0: int;

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i1 = $i1 + -1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i1, 0, $i0, 1);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i1 = $i1 + -1;

        $i2 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i2 = $i2 + -1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i1, $i2, $i0, 2);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 + -3;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(0, $i1, $i0, 3);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 + -2;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(0, $i1, $i0, 4);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 + -1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(0, $i1, $i0, 5);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 + -3;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(1, $i1, $i0, 6);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 + -2;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(1, $i1, $i0, 7);

        $i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i1 + -1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>(1, $i1, $i0, 8);

        return;
    }
    private void module(int, int, int, int)
    {
        com.google.zxing.datamatrix.encoder.DefaultPlacement r0;
        int $i0, $i1, $i3, $i4, $i5;
        char $c2;
        boolean $z0;
        java.lang.CharSequence $r1;

        r0 := @this: com.google.zxing.datamatrix.encoder.DefaultPlacement;

        $i3 := @parameter0: int;

        $i4 := @parameter1: int;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $z0 = 1;

        if $i3 >= 0 goto label1;

        $i5 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i3 = $i3 + $i5;

        $i5 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i5 = $i5 + 4;

        $i5 = $i5 % 8;

        $i5 = 4 - $i5;

        $i4 = $i4 + $i5;

     label1:
        if $i4 >= 0 goto label2;

        $i5 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i4 = $i4 + $i5;

        $i5 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i5 = $i5 + 4;

        $i5 = $i5 % 8;

        $i5 = 4 - $i5;

        $i3 = $i3 + $i5;

     label2:
        $r1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: java.lang.CharSequence codewords>;

        $c2 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $i0 = 8 - $i1;

        $i0 = 1 << $i0;

        $i0 = $c2 & $i0;

        if $i0 == 0 goto label4;

     label3:
        virtualinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void setBit(int,int,boolean)>($i4, $i3, $z0);

        return;

     label4:
        $z0 = 0;

        goto label3;
    }
    private void utah(int, int, int)
    {
        com.google.zxing.datamatrix.encoder.DefaultPlacement r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.google.zxing.datamatrix.encoder.DefaultPlacement;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 = $i0 + -2;

        $i4 = $i1 + -2;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i3, $i4, $i2, 1);

        $i3 = $i0 + -2;

        $i4 = $i1 + -1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i3, $i4, $i2, 2);

        $i3 = $i0 + -1;

        $i4 = $i1 + -2;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i3, $i4, $i2, 3);

        $i3 = $i0 + -1;

        $i4 = $i1 + -1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i3, $i4, $i2, 4);

        $i3 = $i0 + -1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i3, $i1, $i2, 5);

        $i3 = $i1 + -2;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i0, $i3, $i2, 6);

        $i3 = $i1 + -1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i0, $i3, $i2, 7);

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void module(int,int,int,int)>($i0, $i1, $i2, 8);

        return;
    }
    public final boolean getBit(int, int)
    {
        com.google.zxing.datamatrix.encoder.DefaultPlacement r0;
        int $i0, $i1, $i2;
        byte[] $r1;
        byte $b3;

        r0 := @this: com.google.zxing.datamatrix.encoder.DefaultPlacement;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: byte[] bits>;

        $i2 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i2 * $i1;

        $i0 = $i1 + $i0;

        $b3 = $r1[$i0];

        if $b3 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }
    final boolean hasBit(int, int)
    {
        com.google.zxing.datamatrix.encoder.DefaultPlacement r0;
        int $i0, $i1, $i2;
        byte[] $r1;
        byte $b3;

        r0 := @this: com.google.zxing.datamatrix.encoder.DefaultPlacement;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: byte[] bits>;

        $i2 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i2 * $i1;

        $i0 = $i1 + $i0;

        $b3 = $r1[$i0];

        if $b3 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public final void place()
    {
        com.google.zxing.datamatrix.encoder.DefaultPlacement r0;
        int i0, i1, i2, $i3;
        boolean $z0;

        r0 := @this: com.google.zxing.datamatrix.encoder.DefaultPlacement;

        i0 = 0;

        i1 = 4;

        i2 = 0;

     label01:
        $i3 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        if i1 != $i3 goto label02;

        if i2 != 0 goto label02;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void corner1(int)>(i0);

        i0 = i0 + 1;

     label02:
        $i3 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i3 = $i3 + -2;

        if i1 != $i3 goto label03;

        if i2 != 0 goto label03;

        $i3 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i3 = $i3 % 4;

        if $i3 == 0 goto label03;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void corner2(int)>(i0);

        i0 = i0 + 1;

     label03:
        $i3 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i3 = $i3 + -2;

        if i1 != $i3 goto label04;

        if i2 != 0 goto label04;

        $i3 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i3 = $i3 % 8;

        if $i3 != 4 goto label04;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void corner3(int)>(i0);

        i0 = i0 + 1;

     label04:
        $i3 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        $i3 = $i3 + 4;

        if i1 != $i3 goto label05;

        if i2 != 2 goto label05;

        $i3 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i3 = $i3 % 8;

        if $i3 != 0 goto label05;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void corner4(int)>(i0);

        i0 = i0 + 1;

     label05:
        $i3 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        if i1 >= $i3 goto label06;

        if i2 < 0 goto label06;

        $z0 = virtualinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: boolean hasBit(int,int)>(i2, i1);

        if $z0 != 0 goto label06;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void utah(int,int,int)>(i1, i2, i0);

        i0 = i0 + 1;

     label06:
        i1 = i1 + -2;

        i2 = i2 + 2;

        if i1 < 0 goto label07;

        $i3 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        if i2 < $i3 goto label05;

     label07:
        i1 = i1 + 1;

        i2 = i2 + 3;

        $i3 = i0;

     label08:
        if i1 < 0 goto label12;

        i0 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        if i2 >= i0 goto label12;

        $z0 = virtualinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: boolean hasBit(int,int)>(i2, i1);

        if $z0 != 0 goto label12;

        i0 = $i3 + 1;

        specialinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void utah(int,int,int)>(i1, i2, $i3);

     label09:
        i1 = i1 + 2;

        i2 = i2 + -2;

        $i3 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        if i1 >= $i3 goto label10;

        if i2 >= 0 goto label11;

     label10:
        i1 = i1 + 3;

        i2 = i2 + 1;

        $i3 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        if i1 < $i3 goto label01;

        $i3 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        if i2 < $i3 goto label01;

        i0 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        i0 = i0 + -1;

        i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        i1 = i1 + -1;

        $z0 = virtualinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: boolean hasBit(int,int)>(i0, i1);

        if $z0 != 0 goto label13;

        i0 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        i0 = i0 + -1;

        i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        i1 = i1 + -1;

        virtualinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void setBit(int,int,boolean)>(i0, i1, 1);

        i0 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        i0 = i0 + -2;

        i1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numrows>;

        i1 = i1 + -2;

        virtualinvoke r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void setBit(int,int,boolean)>(i0, i1, 1);

        return;

     label11:
        $i3 = i0;

        goto label08;

     label12:
        i0 = $i3;

        goto label09;

     label13:
        return;
    }
    final void setBit(int, int, boolean)
    {
        com.google.zxing.datamatrix.encoder.DefaultPlacement r0;
        int $i0, $i1, $i2;
        boolean $z0;
        byte[] $r1;
        byte $b3;

        r0 := @this: com.google.zxing.datamatrix.encoder.DefaultPlacement;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $r1 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: byte[] bits>;

        $i2 = r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: int numcols>;

        $i1 = $i2 * $i1;

        $i0 = $i1 + $i0;

        if $z0 == 0 goto label2;

        $b3 = 1;

     label1:
        $r1[$i0] = $b3;

        return;

     label2:
        $b3 = 0;

        goto label1;
    }
